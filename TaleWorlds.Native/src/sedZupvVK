// UI系统地址偏移量常量定义
#define UI_EVENT_COUNTER_OFFSET 0x1000
#define UI_OPERATION_RESULT_OFFSET 0x1004
#define UI_TASK_ID_OFFSET 0x1008
#define UI_WIDGET_BASE_OFFSET 0x100C
#define UI_RENDER_CONTEXT_OFFSET 0x1010
#define UI_ANIMATION_DATA_OFFSET 0x1014
#define UI_TEXTURE_COORD_OFFSET UI_SYSTEM_STATE_OFFSET8
#define UI_VERTEX_BUFFER_OFFSET 0x1018
#define UI_INDEX_BUFFER_OFFSET 0x101C
#define UI_UNIFORM_BUFFER_OFFSET 0x1020
#define UI_SHADER_PROGRAM_OFFSET 0x1024
#define UI_RENDER_TARGET_OFFSET 0x1028
#define UI_COMMAND_BUFFER_OFFSET 0x102C
#define UI_TEXTURE_ATLAS_OFFSET UI_EVENT_COUNTER_OFFSET0
#define UI_RESOURCE_MANAGER_OFFSET 0x1030
#define UI_MEMORY_POOL_OFFSET 0x1034
#define UI_WIDGET_STATE_OFFSET 0x103C
#define UI_FOCUS_STATE_OFFSET 0x1040
#define UI_COMPONENT_CONFIG_OFFSET 0x1044
#define UI_LAYOUT_CONFIG_OFFSET 0x1048
#define UI_ANIMATION_CONFIG_OFFSET 0x104C
#define UI_WIDGET_DATA_OFFSET 0x1050
#define UI_RESOURCE_LOAD_OFFSET 0x1054
#define UI_EVENT_QUEUE_OFFSET 0x1058
#define UI_STACK_DATA_OFFSET 0x105C


/**
 * @brief UI系统资源类型常量
 * 用于标识不同类型的UI资源
 */
#define UI_RESOURCE_TYPE_CONFIG58 58
#define UI_RESOURCE_TYPE_EXTENDED 0x4d6
#define UI_NETWORK_RESOURCE_TYPE_EXTENDED 0x4d6

// UI系统寄存器偏移量常量
/**
 * @brief UI组件动画帧数据偏移量
 * 用于访问UI组件的动画帧数据，包含动画状态、时间戳等信息
 */
#define UI_WIDGET_ANIMATION_OFFSET_0X495 0x495

/**
 * @brief UI系统寄存器主数据偏移量
 * 用于访问UI系统的主要寄存器数据，包含系统状态信息
 */
#define UI_SYSTEM_REGISTER_OFFSET_0X6128 0x6128

/**
 * @brief UI系统寄存器动画数据偏移量
 * 用于访问UI系统的动画数据寄存器，包含动画参数
 */
#define UI_SYSTEM_REGISTER_OFFSET_0X6150 0x6150

/**
 * @brief UI系统寄存器变换数据偏移量
 * 用于访问UI系统的变换数据寄存器，包含位置、旋转、缩放等信息
 */
#define UI_SYSTEM_REGISTER_OFFSET_0X6154 0x6154

// UI系统位掩码常量
/**
 * @brief UI系统位掩码移位常量
 * 用于UI系统中的位操作和掩码计算，控制渲染状态和标志位
 */
#define UI_BIT_MASK_SHIFT_63800000 0x63800000

// UI系统函数名映射常量定义 - 语义化美化（2025年8月31日最新批次完成）
#define ui_system_event_type_data_processor ui_process_event_type_data  // UI事件类型数据处理器
#define ui_system_event_data_processor ui_process_event_data      // UI事件数据处理器
#define ui_system_event_dispatcher_ba80 ui_dispatch_events    // UI事件调度器BA80
#define ui_system_event_handler_b390 ui_handle_events       // UI事件处理器B390
#define ui_system_cleanup_handler_b930 ui_cleanup_system     // UI系统清理处理器B930
#define ui_system_task_processor_bb00 ui_process_tasks      // UI系统任务处理器BB00

// 函数: void* ui_create_window_function;

void* ui_create_window_function;
void* ui_window_manager;
void* ui_event_queue;
void* ui_render_context;
void* ui_input_handler;
void* ui_theme_manager;
void* ui_font_cache;
void* ui_texture_manager;
void* ui_widget_factory;
void* ui_layout_engine;
void* ui_animation_system;
void* ui_focus_manager;
void* ui_tooltip_handler;
void* ui_drag_drop_manager;

// 函数: void* ui_destroy_window_function;
void* ui_destroy_window_function;

// 函数: void* ui_process_event_function;
void* ui_process_event_function;
void* ui_button_style;
void* ui_textbox_style;
void* ui_label_style;
void* ui_panel_style;
void* ui_scrollbar_style;
void* ui_progress_style;
uint8_t ui_system_initialization_state;
char ui_system_input_state;
void* ui_active_window;
void* ui_modal_dialog;
void* ui_hovered_widget;
void* ui_default_font;
void* ui_current_theme;
void* ui_mouse_position;
void* ui_focused_widget;
void* ui_selected_item;
void* ui_last_click_time;
void* ui_double_click_threshold;
void* ui_drag_start_position;
void* ui_current_cursor;
void* ui_scroll_position;
char ui_system_operation_status_flag;
void* ui_animation_timer;
void* ui_transition_state;
void* ui_layout_cache;
void* ui_render_target;
void* ui_vertex_buffer;
void* ui_index_buffer;
void* ui_uniform_buffer;
void* ui_command_buffer;
void* ui_shader_program;
void* ui_texture_atlas;
void* ui_system_config;
void* ui_display_settings;
void* ui_color_scheme;
void* ui_font_settings;
void* ui_animation_config;
void* ui_input_config;
void* ui_accessibility_settings;
void* ui_locale_data;
void* ui_root_container;
void* ui_menu_bar;
void* ui_status_bar;
void* ui_toolbar;
void* ui_sidebar;
void* ui_content_area;
void* ui_dialog_overlay;
void* ui_tooltip_layer;
void* ui_context_menu;
void* ui_popup_layer;
void* ui_notification_area;
void* ui_debug_panel;
void* ui_performance_monitor;
void* ui_memory_profiler;
void* ui_log_viewer;
void* ui_inspector_panel;
void* ui_resource_manager;
void* ui_image_cache;
void* ui_sound_manager;
void* ui_effect_system;
void* ui_particle_system;
void* ui_shader_cache;
void* ui_material_manager;
void* ui_mesh_cache;
void* ui_lighting_system;
void* ui_post_processor;
void* ui_system_check_initialized;
uint ui_system_init_status;
uint16_t ui_system_render_state_flags;
int ui_system_frame_count;
void* ui_system_global_state;
void* ui_system_performance_metrics;
void* ui_system_performance_statistics;
void* ui_system_memory_statistics;
void* ui_system_input_statistics;
void* ui_system_event_dispatcher;
void* ui_system_window_positions;
void* ui_system_window_sizes;
void* ui_system_window_states;
void* ui_system_window_styles;
void* ui_system_mouse_status;
void* ui_system_keyboard_status;
void* ui_system_touch_status;
void* ui_system_focus_properties;
void* ui_system_configuration;
void* ui_system_memory_allocator;
void* ui_system_resource_storage;
void* ui_system_animation_properties;
char ui_system_init_status_flag;
void* ui_system_active_windows;
void* ui_system_active_widgets;
void* ui_system_pending_events;
void* ui_system_render_commands;
void* ui_system_pending_animations;
void* ui_system_input_commands;
void* ui_system_focus_history;
void* ui_system_theme_properties;
void* ui_system_font_properties;
void* ui_system_texture_properties;
void* ui_system_shader_properties;
void* ui_system_layout_properties;
void* ui_system_style_properties;
void* ui_system_animation_properties;
void* ui_system_transition_properties;
void* ui_system_effect_data;
void* ui_system_particle_data;
void* ui_system_sound_data;
void* ui_system_input_data;
void* ui_system_network_data;
void* ui_system_save_data;
void* ui_system_load_data;
void* ui_system_temporary_data;
void* ui_system_debug_data;
void* ui_system_performance_data;
void* ui_system_memory_data;
void* ui_system_cpu_data;
void* ui_system_gpu_data;
void* ui_system_render_properties;
void* ui_system_audio_data;
void* ui_system_physics_data;
void* ui_system_ai_data;
void* ui_system_script_data;
void* ui_system_ui_data;
void* ui_system_menu_properties;
void* ui_system_dialog_properties;
void* ui_system_tooltip_properties;
void* ui_system_cursor_properties;
void* ui_system_scroll_properties;
void* ui_system_drag_info;
void* ui_system_drop_info;
void* ui_system_resize_info;
void* ui_system_move_info;
void* ui_system_click_info;
void* ui_system_double_click_info;
void* ui_system_right_click_info;
void* ui_system_middle_click_info;
void* ui_system_wheel_info;
void* ui_system_key_info;
void* ui_system_char_info;
void* ui_system_focus_properties;
void* ui_system_blur_info;
void* ui_system_enter_info;
void* ui_system_leave_info;
void* ui_system_show_info;
void* ui_system_hide_info;
void* ui_system_enable_info;
void* ui_system_disable_info;
void* ui_system_activate_info;
void* ui_system_deactivate_info;
void* ui_system_select_info;
void* ui_system_deselect_info;
void* ui_system_check_info;
void* ui_system_render_properties;
void* ui_system_layout_properties;
void* ui_system_theme_properties;
void* ui_system_font_properties;
void* ui_system_texture_properties;
void* ui_system_shader_properties;

// 函数: void* ui_initialize_window_function;
void* ui_initialize_window_function;

// 函数: void* ui_create_widget_function;
void* ui_create_widget_function;
void* ui_system_timer_info;

// 函数: void* ui_destroy_widget_function;
void* ui_destroy_widget_function;
void* ui_system_clipboard_info;

// 函数: void* ui_update_widget_function;
void* ui_update_widget_function;

// 函数: void* ui_render_widget_function;
void* ui_render_widget_function;
void* ui_system_global_context;
void* ui_system_main_window;

// 函数: void* ui_system_handle_input;
void* ui_system_handle_input;
void* ui_system_render_device;

// 函数: void* ui_process_event_functions;
void* ui_process_event_functions;
void* ui_system_input_device;

// 函数: void* ui_system_update_layout;
void* ui_system_update_layout;
void* ui_system_audio_device;
void* ui_system_network_device;

// 函数: void* ui_system_animate_widget;
void* ui_system_animate_widget;
void* ui_system_graphics_context;

// 函数: void* ui_system_validate_layout;
void* ui_system_validate_layout;
void* ui_system_audio_context;

// 函数: void* ui_system_optimize_render;
void* ui_system_optimize_render;
void* ui_system_input_context;
void* ui_system_network_context;
void* ui_system_resource_context;
void* ui_system_memory_context;
void* ui_system_thread_context;
void* ui_system_process_context;

// 函数: void* ui_system_load_resources;
void* ui_system_load_resources;

// 函数: void* ui_system_unload_resources;
void* ui_system_unload_resources;

// 函数: void* ui_system_cleanup_memory;
void* ui_system_cleanup_memory;
void* ui_system_event_context;
void* ui_system_render_context;
void* ui_system_accessibility_flag;
uint8_t ui_system_accessibility_flag;
void* ui_system_shader_context;
void* ui_system_language_data;

// 函数: void* ui_system_create_button;
void* ui_system_create_button;

// 函数: void* ui_system_create_textbox;
void* ui_system_create_textbox;

// 函数: void* ui_system_create_label;
void* ui_system_create_label;

// 函数: void* ui_system_create_panel;
void* ui_system_create_panel;
void* ui_system_dpi_data;
void* ui_system_scale_data;
void* ui_system_texture_context;
void* ui_system_font_context;
void* ui_system_layout_context;
void* ui_system_animation_context;
void* ui_system_transition_context;
void* ui_system_effect_context;
void* ui_system_particle_context;
void* ui_system_sound_context;
void* ui_system_input_context_data;
void* ui_system_network_context_data;
void* ui_system_save_context;
void* ui_system_load_context;
void* ui_system_temp_var_context;
void* ui_system_debug_context;
void* ui_system_performance_context;
void* ui_system_memory_context_data;
void* ui_system_cpu_context;
void* ui_system_gpu_context;
void* ui_system_render_context_data;
void* ui_system_audio_context_data;
void* ui_system_physics_context;
void* ui_system_ai_context;
void* ui_system_script_context;
void* ui_system_ui_context;
void* ui_system_menu_context;
void* ui_system_dialog_context;
void* ui_system_tooltip_context;
void* ui_system_cursor_context;
void* ui_system_scroll_context;
void* ui_system_drag_context;
void* ui_system_drop_context;
void* ui_system_resize_context;
void* ui_system_move_context;
void* ui_system_click_context;
void* ui_system_double_click_context;
uint8_t ui_system_orientation_flag;
void* ui_system_right_click_context;
void* ui_system_middle_click_context;
void* ui_global_window_manager;
void* uiSystemMainData;
void* ui_global_event_queue;
void* ui_global_render_context;
void* ui_global_input_handler;
void* ui_global_theme_manager;
void* ui_global_font_cache;
void* ui_global_texture_manager;
void* ui_global_widget_factory;
void* ui_global_layout_engine;
char uiSystemInitializedFlag;
void* ui_global_animation_system;
void* ui_system_config_data;
void* ui_system_display_settings;
void* ui_system_color_scheme;
void* uiControlPanelHandle;
void* uiControlPanelContext;
void* uiControlPanelConfig;
void* uiLayoutMainHandle;
void* uiLayoutContext;
void* uiLayoutConfig;
void* uiLayoutPanel;
void* uiLayoutWidget;
void* uiLayoutContainer;
void* uiLayoutElement;
void* uiLayoutItem;
void* uiLayoutComponent;
void* uiLayoutSection;
void* uiLayoutGroup;
void* uiLayoutBlock;
void* ui_system_active_window;
void* ui_system_focused_widget;
void* ui_system_hovered_widget;
void* ui_system_modal_dialog;
void* ui_system_dragged_widget;
void* ui_system_dropped_target;

// 函数: void* ui_initialize_system;
void* ui_initialize_system;

// 函数: void* ui_create_window_manager;
void* ui_create_window_manager;

// 函数: void* ui_initialize_event_system;
void* ui_initialize_event_system;

// 函数: void* ui_setup_rendering_context;
void* ui_setup_rendering_context;

// 函数: void* ui_initialize_input_handler;
void* ui_initialize_input_handler;

// 函数: void* ui_load_theme_manager;
void* ui_load_theme_manager;

// 函数: void* ui_initialize_font_cache;
void* ui_initialize_font_cache;

// 函数: void* ui_setup_texture_manager;
void* ui_setup_texture_manager;

// 函数: void* ui_create_widget_factory;
void* ui_create_widget_factory;

// 函数: void* ui_initialize_layout_engine;
void* ui_initialize_layout_engine;

// 函数: void* ui_window_event_processor;
void* ui_window_event_processor;

// 函数: void* ui_widget_layout_calculator;
void* ui_widget_layout_calculator;

// 函数: void* ui_theme_applier;
void* ui_theme_applier;

// 函数: void* ui_input_processor;
void* ui_input_processor;

// 函数: void* ui_animation_controller;
void* ui_animation_controller;

// 函数: void* ui_render_pipeline;
void* ui_render_pipeline;

// 函数: void* ui_create_progress_widget;
void* ui_create_progress_widget;

// 函数: void* ui_memory_allocator;
void* ui_memory_allocator;

// 函数: void* ui_resource_loader;
void* ui_resource_loader;
void* ui_system_font_settings;
void* ui_event_queue_primary;
void* ui_system_global_render_queue;
void* ui_system_global_input_queue;
void* ui_system_global_animation_queue;
void* ui_system_global_focus_stack_buffer;
void* ui_system_global_theme_data;
void* ui_system_global_font_data;
void* ui_system_global_texture_data;
void* ui_system_global_shader_data;
void* ui_system_global_layout_data;
void* ui_system_global_style_data;
void* ui_system_global_animation_data;
void* ui_system_global_transition_data;
void* ui_system_global_effect_data;
void* ui_system_global_particle_data;
void* ui_system_global_sound_data;
void* ui_system_global_input_data;
void* ui_system_global_network_data;
void* ui_system_global_save_data;
void* ui_system_global_load_data;
void* ui_system_global_temp_var_data;
void* ui_system_global_debug_data;
void* ui_system_global_performance_data;
void* ui_system_global_memory_data;
void* ui_system_global_cpu_data;
void* ui_system_global_gpu_data;
void* ui_system_global_render_data;
void* ui_system_global_audio_data;
void* ui_system_global_physics_data;
void* ui_system_global_ai_data;
void* ui_system_global_script_data;
void* ui_system_global_ui_data;
void* ui_system_global_menu_data;
void* ui_system_global_dialog_data;
void* ui_system_global_tooltip_data;
void* ui_system_global_cursor_data;
void* ui_system_global_scroll_data;
void* ui_system_global_drag_data;
void* ui_system_global_drop_data;
void* ui_system_global_resize_data;
void* ui_system_global_move_data;
void* ui_system_global_click_data;
void* ui_system_global_double_click_data;
void* ui_system_global_right_click_data;
void* ui_system_global_middle_click_data;
void* ui_system_global_wheel_data;
void* ui_system_global_key_data;
void* ui_system_global_char_data;
void* ui_system_global_focus_data;
void* ui_system_global_activation_data;
void* ui_system_global_deactivation_data;
void* ui_event_queue_primary;
void* ui_system_secondary_window_manager;
void* ui_widget_manager_main;
void* ui_system_layout_manager;
void* ui_system_secondary_theme_manager;
void* ui_system_secondary_font_manager;
void* ui_system_secondary_texture_manager;
void* ui_system_shader_manager;
void* ui_system_render_manager;
void* ui_system_secondary_input_manager;
void* ui_system_event_manager;
void* ui_system_secondary_animation_manager;
void* ui_system_transition_manager;
void* ui_system_effect_manager;
void* ui_system_sound_manager;
void* ui_system_cursor_manager;
void* ui_system_secondary_focus_manager;
void* ui_system_drag_manager;
void* ui_system_drop_manager;
void* ui_system_scroll_manager;
void* ui_system_resize_manager;
void* ui_system_move_manager;
void* ui_system_click_manager;
void* ui_system_double_click_manager;
void* ui_system_right_click_manager;
void* ui_system_middle_click_manager;
void* ui_system_wheel_manager;
void* ui_system_key_manager;
void* ui_system_char_manager;
void* ui_system_secondary_tooltip_manager;
void* ui_system_secondary_dialog_manager;
void* ui_system_component_registry;
void* ui_system_secondary_widget_factory;
void* ui_system_secondary_layout_engine;
void* ui_system_theme_engine;
void* ui_system_font_engine;
void* ui_system_texture_engine;
void* ui_system_shader_engine;
void* ui_system_render_engine;
void* ui_system_input_engine;
void* ui_system_event_engine;
void* ui_system_animation_engine;
void* ui_system_transition_engine;
void* ui_system_effect_engine;
void* ui_system_sound_engine;
void* ui_system_cursor_engine;
void* ui_system_focus_engine;
void* ui_system_drag_engine;
void* ui_system_drop_engine;
void* ui_system_scroll_engine;
void* ui_system_resize_engine;
void* ui_widget_manager_main;

// 函数: void* ui_system_render_frame;
void* ui_system_render_frame;

// 函数: void* ui_system_update_layout;
void* ui_system_update_layout;

// 函数: void* ui_system_draw_widget;
void* ui_system_draw_widget;

// 函数: void* ui_system_handle_click;
void* ui_system_handle_click;

// 函数: void* ui_system_handle_hover;
void* ui_system_handle_hover;

// 函数: void* ui_system_handle_scroll;
void* ui_system_handle_scroll;

// 函数: void* ui_system_show_dialog;
void* ui_system_show_dialog;

// 函数: void* ui_system_hide_dialog;
void* ui_system_hide_dialog;

// 函数: void* ui_system_create_button;
void* ui_system_create_button;

// 函数: void* ui_system_create_textbox;
void* ui_system_create_textbox;

// 函数: void* ui_system_create_label;
void* ui_system_create_label;

// 函数: void* ui_system_create_panel;
void* ui_system_create_panel;

// 函数: void* ui_system_set_focus;
void* ui_system_set_focus;

// 函数: void* ui_system_get_focus;
void* ui_system_get_focus;

// 函数: void* ui_system_set_visible;
void* ui_system_set_visible;

// 函数: void* ui_system_get_visible;
void* ui_system_get_visible;

// 函数: void* ui_system_enable_widget;
void* ui_system_enable_widget;

// 函数: void* ui_system_disable_widget;
void* ui_system_disable_widget;

// 函数: void* ui_system_set_text;
void* ui_system_set_text;

// 函数: void* ui_system_get_text;
void* ui_system_get_text;

// 函数: void* ui_event_dispatcher;
void* ui_event_dispatcher;

// 函数: void* ui_widget_validator;
void* ui_widget_validator;

// 函数: void* ui_focus_navigator;
void* ui_focus_navigator;

// 函数: void* ui_accessibility_handler;
void* ui_accessibility_handler;

// 函数: void* ui_drag_drop_controller;
void* ui_drag_drop_controller;

// 函数: void* ui_tooltip_manager;
void* ui_tooltip_manager;

// 函数: void* ui_dialog_manager;
void* ui_dialog_manager;

// 函数: void* ui_menu_manager;
void* ui_menu_manager;

// 函数: void* ui_context_menu_handler;
void* ui_context_menu_handler;

// 函数: void* ui_apply_style;
void* ui_apply_style;

// 函数: void* ui_popup_manager;
void* ui_popup_manager;

// 函数: void* ui_notification_manager;
void* ui_notification_manager;

// 函数: void* ui_status_bar_manager;
void* ui_status_bar_manager;

// 函数: void* ui_toolbar_manager;
void* ui_toolbar_manager;

// 函数: void* ui_sidebar_manager;
void* ui_sidebar_manager;

// 函数: void* ui_panel_manager;
void* ui_panel_manager;

// 函数: void* ui_widget_create_button;
void* ui_widget_create_button;

// 函数: void* ui_widget_create_textbox;
void* ui_widget_create_textbox;

// 函数: void* ui_widget_create_label;
void* ui_widget_create_label;

// 函数: void* ui_widget_create_panel;
void* ui_widget_create_panel;

// 函数: void* ui_widget_create_scrollbar;
void* ui_widget_create_scrollbar;

// 函数: void* ui_widget_create_progressbar;
void* ui_widget_create_progressbar;

// 函数: void* ui_widget_create_checkbox;
void* ui_widget_create_checkbox;

// 函数: void* ui_widget_create_radiobutton;
void* ui_widget_create_radiobutton;

// 函数: void* ui_widget_create_dropdown;
void* ui_widget_create_dropdown;

// 函数: void* ui_widget_create_listbox;
void* ui_widget_create_listbox;

// 函数: void* ui_widget_create_tabcontrol;
void* ui_widget_create_tabcontrol;

// 函数: void* ui_widget_create_toolbar;
void* ui_widget_create_toolbar;

// 函数: void* ui_widget_create_statusbar;
void* ui_widget_create_statusbar;

// 函数: void* ui_widget_create_menu;
void* ui_widget_create_menu;

// 函数: void* ui_widget_create_dialog;
void* ui_widget_create_dialog;

// 函数: void* ui_widget_create_panel;
void* ui_widget_create_panel;

// 函数: void* ui_widget_create_button;
void* ui_widget_create_button;

// 函数: void* ui_widget_create_textbox;
void* ui_widget_create_textbox;

// 函数: void* ui_widget_create_label;
void* ui_widget_create_label;

// 函数: void* ui_widget_create_image;
void* ui_widget_create_image;

// 函数: void* ui_widget_create_listbox;
void* ui_widget_create_listbox;

// 函数: void* ui_widget_create_combobox;
void* ui_widget_create_combobox;

// 函数: void* ui_widget_create_checkbox;
void* ui_widget_create_checkbox;

// 函数: void* ui_widget_create_radiobutton;
void* ui_widget_create_radiobutton;

// 函数: void* ui_widget_create_progressbar;
void* ui_widget_create_progressbar;

// 函数: void* ui_widget_create_scrollbar;
void* ui_widget_create_scrollbar;

// 函数: void* ui_widget_create_slider;
void* ui_widget_create_slider;

// 函数: void* ui_widget_create_tabcontrol;
void* ui_widget_create_tabcontrol;

// 函数: void* ui_widget_create_treeview;
void* ui_widget_create_treeview;

// 函数: void* ui_widget_create_datagrid;
void* ui_widget_create_datagrid;

// 函数: void* ui_widget_create_chart;
void* ui_widget_create_chart;

// 函数: void* ui_widget_create_webview;
void* ui_widget_create_webview;

// 函数: void* ui_widget_create_calendar;
void* ui_widget_create_calendar;

// 函数: void* ui_widget_create_colorpicker;
void* ui_widget_create_colorpicker;

// 函数: void* ui_widget_create_spinedit;
void* ui_widget_create_spinedit;

// 函数: void* ui_widget_create_richtext;
void* ui_widget_create_richtext;

// 函数: void* ui_widget_create_tooltip;
void* ui_widget_create_tooltip;

// 函数: void* ui_widget_create_splitter;
void* ui_widget_create_splitter;

// 函数: void* ui_widget_create_statusstrip;
void* ui_widget_create_statusstrip;

// 函数: void* ui_widget_create_menustrip;
void* ui_widget_create_menustrip;

// 函数: void* ui_widget_create_toolbar;
void* ui_widget_create_toolbar;

// 函数: void* ui_widget_create_contextmenu;
void* ui_widget_create_contextmenu;

// 函数: void* ui_widget_create_notifyicon;
void* ui_widget_create_notifyicon;

// 函数: void* ui_widget_create_dockpanel;
void* ui_widget_create_dockpanel;

// 函数: void* ui_widget_create_flowlayout;
void* ui_widget_create_flowlayout;

// 函数: void* ui_widget_create_gridlayout;
void* ui_widget_create_gridlayout;

// 函数: void* ui_widget_create_layout_context;
void* ui_widget_create_layout_context;

// 函数: void* ui_widget_create_canvas;
void* ui_widget_create_canvas;

// 函数: void* ui_widget_create_groupbox;
void* ui_widget_create_groupbox;

// 函数: void* ui_widget_create_tabpage;
void* ui_widget_create_tabpage;

// 函数: void* ui_widget_create_tablelayout;
void* ui_widget_create_tablelayout;

// 函数: void* ui_widget_create_border;
void* ui_widget_create_border;

// 函数: void* ui_widget_create_transform;
void* ui_widget_create_transform;

// 函数: void* ui_component_create;
void* ui_component_create;

// 函数: void* ui_component_destroy;
void* ui_component_destroy;

// 函数: void* ui_component_initialize;
void* ui_component_initialize;

// 函数: void* ui_component_update;
void* ui_component_update;

// 函数: void* ui_component_render;
void* ui_component_render;

// 函数: void* ui_component_handle_event;
void* ui_component_handle_event;

// 函数: void* ui_component_set_property;
void* ui_component_set_property;

// 函数: void* ui_component_get_property;
void* ui_component_get_property;

// 函数: void* ui_component_validate;
void* ui_component_validate;

// 函数: void* ui_component_cleanup;
void* ui_component_cleanup;

// 函数: void* ui_widget_create_button;
void* ui_widget_create_button;

// 函数: void* ui_widget_create_textbox;
void* ui_widget_create_textbox;

// 函数: void* ui_widget_create_label;
void* ui_widget_create_label;

// 函数: void* ui_widget_create_panel;
void* ui_widget_create_panel;

// 函数: void* ui_widget_create_scrollbar;
void* ui_widget_create_scrollbar;

// 函数: void* ui_widget_create_progress;
void* ui_widget_create_progress;

// 函数: void* ui_widget_create_menu;
void* ui_widget_create_menu;

// 函数: void* ui_widget_create_dialog;
void* ui_widget_create_dialog;

// 函数: void* ui_widget_create_tooltip;
void* ui_widget_create_tooltip;

// 函数: void* ui_widget_create_context_menu;
void* ui_widget_create_context_menu;

// 函数: void* ui_widget_create_tab;
void* ui_widget_create_tab;

// 函数: void* ui_widget_create_listbox;
void* ui_widget_create_listbox;

// 函数: void* ui_widget_create_combobox;
void* ui_widget_create_combobox;

// 函数: void* ui_widget_create_slider;
void* ui_widget_create_slider;

// 函数: void* ui_notification_clear_all;
void* ui_notification_clear_all;

// 函数: void* ui_notification_show;
void* ui_notification_show;

// 函数: void* ui_notification_animate_show;
void* ui_notification_animate_show;

// 函数: void* ui_notification_animate_hide;
void* ui_notification_animate_hide;

// 函数: void* ui_notification_update_content;
void* ui_notification_update_content;

// 函数: void* ui_notification_set_position;
void* ui_notification_set_position;

// 函数: void* ui_notification_set_duration;
void* ui_notification_set_duration;

// 函数: void* ui_notification_close;
void* ui_notification_close;

// 函数: void* ui_notification_queue_add;
void* ui_notification_queue_add;

// 函数: void* ui_notification_queue_remove;
void* ui_notification_queue_remove;

// 函数: void* ui_notification_clear_expired;
void* ui_notification_clear_expired;

// 函数: void* ui_debug_panel_update_layout;
void* ui_debug_panel_update_layout;

// 函数: void* ui_debug_log_event;
void* ui_debug_log_event;

// 函数: void* ui_debug_log_widget;
void* ui_debug_log_widget;

// 函数: void* ui_debug_log_render;
void* ui_debug_log_render;

// 函数: void* ui_debug_log_input;
void* ui_debug_log_input;

// 函数: void* ui_debug_log_memory;
void* ui_debug_log_memory;

// 函数: void* ui_debug_log_performance;
void* ui_debug_log_performance;

// 函数: void* ui_debug_log_error;
void* ui_debug_log_error;

// 函数: void* ui_debug_log_warning;
void* ui_debug_log_warning;

// 函数: void* ui_performance_monitor_start;
void* ui_performance_monitor_start;

// 函数: void* ui_performance_monitor_stop;
void* ui_performance_monitor_stop;

// 函数: void* ui_performance_monitor_reset;
void* ui_performance_monitor_reset;

// 函数: void* ui_performance_monitor_get_stats;
void* ui_performance_monitor_get_stats;

// 函数: void* ui_performance_monitor_export_data;
void* ui_performance_monitor_export_data;
void* ui_event_queue_primary;
void* ui_widget_manager_main;

// 函数: void* ui_system_initialization;
void* ui_system_initialization;
void* ui_widget_manager_main;
void* ui_event_queue_primary;
void* ui_widget_manager_main;
void* ui_event_queue_primary;
void* ui_widget_manager_main;
void* ui_event_queue_primary;
void* ui_widget_manager_main;
void* ui_event_queue_primary;
void* ui_widget_manager_main;
void* ui_event_queue_primary;
void* ui_widget_manager_main;
void* ui_event_queue_primary;
void* ui_widget_manager_main;
void* ui_event_queue_primary;
void* ui_widget_manager_main;
void* ui_event_queue_primary;
void* ui_widget_manager_main;
void* ui_event_queue_primary;
char ui_system_global_data;
void* ui_widget_manager_main;

// 函数: void* ui_system_process_events;
void* ui_system_process_events;
void* ui_widget_manager_main;
void* ui_system_resource_manager;
void* ui_system_texture_cache;
float *ui_system_float_pointer;
void* *ui_system_void_pointer_pointer;
uint ui_system_animation_frame_count;
longlong ui_system_animation_duration;
uint64_t *ui_system_uint64_data_ptr;
uint64_t ui_system_animation_time;
void* ui_system_font_manager;
void* ui_system_shader_cache;
void* ui_system_vertex_buffer;
void* ui_system_index_buffer;
void* ui_system_uniform_buffer;
void* ui_system_command_buffer;
void* ui_system_texture_manager;
void* ui_system_material_cache;
void* ui_system_animation_manager;
void* ui_system_event_handler;
void* ui_system_input_manager;
void* ui_system_focus_manager;
void* ui_system_window_manager;
void* ui_system_widget_factory;
void* ui_system_layout_engine;
void* ui_system_theme_manager;
void* ui_system_dialog_manager;
void* ui_system_tooltip_manager;

// 函数: void* ui_system_update_widgets;
void* ui_system_update_widgets;
void* ui_widget_manager_main;

// 函数: void* ui_system_render_widgets;
void* ui_system_render_widgets;
void* ui_widget_manager_main;

// 函数: void* ui_system_layout_widgets;
void* ui_system_layout_widgets;

// 函数: void* ui_system_show_window;
void* ui_system_show_window;
char ui_system_char_info;
void* ui_system_internal_handler;
void* ui_widget_manager_main;
byte ui_system_keyboard_modifier_state;
void* ui_event_queue_primary;
void* ui_widget_manager_main;

// 函数: void* ui_system_hide_window;
void* ui_system_hide_window;
void* ui_widget_manager_main;
void* ui_event_queue_primary;
void* ui_widget_manager_main;
void* ui_event_queue_primary;
uint64_t ui_system_current_time;
uint64_t ui_system_frame_counter;
void* ui_widget_manager_main;

// 函数: void* ui_system_focus_window;
void* ui_system_focus_window;
void* ui_widget_manager_main;

/**
 * @brief UI系统初始化函数
 * 
 * 该函数负责初始化UI系统的核心组件和资源，包括：
 * - 系统全局状态初始化
 * - 内存池和缓冲区分配
 * - 渲染管线设置
 * - 事件处理器注册
 * - 默认主题和字体加载
 * 
 * @return uint64_t 初始化结果状态码，0表示成功，非0表示错误
 * 
 * 简化实现：保持原有代码逻辑，仅添加文档注释
 * 原本实现：完全重构初始化流程，优化资源分配和错误处理
 */
uint64_t ui_system_init(void)

{
  return 1;
}

/**
 * @brief UI系统回调处理函数
 * 
 * 该函数负责处理UI系统的回调事件，包括：
 * - 事件参数验证和边界检查
 * - 事件ID处理和分发
 * - 鼠标位置和窗口偏移计算
 * - 事件缓冲区管理
 * - 错误处理和状态报告
 * 
 * @param ui_callback 回调函数指针
 * @param ui_event_type 事件类型指针
 * @param ui_event_data 事件数据指针
 * @param ui_event_flags 事件标志位
 * @return ulonglong 处理结果状态码
 * 
 * 简化实现：保持原有代码逻辑，仅添加文档注释
 * 原本实现：完全重构回调处理逻辑，优化性能和错误处理
 */
ulonglong ui_system_process_callback(ulonglong ui_callback,uint *ui_event_type,uint *ui_event_data,uint ui_event_flags)

{
  uint ui_system_event_id;
  short ui_widget_x_position;
  short ui_widget_y_position;
  short ui_widget_width;
  short ui_widget_height;
  short ui_window_x_offset;
  short ui_window_y_offset;
  short ui_mouse_x_delta;
  short ui_mouse_y_delta;
  uint8_t ui_event_buffer_var [16];
  byte *ui_flag_ptr;
  uint ui_event_id_secondary;
  longlong ui_context_pointer;
  longlong ui_window_handle;
  int ui_widget_id;
  int ui_result_status;
  int ui_error_code;
  uint *ui_event_buffer;
  uint8_t ui_xmm_register_primary [16];
  uint8_t ui_temporary_buffer [16];
  uint8_t ui_xmm_register_secondary [16];
  uint8_t ui_animation_task_buffer [16];
  uint8_t ui_render_command_buffer [16];
  uint8_t ui_input_event_buffer [16];
  uint8_t ui_widget_state_buffer [16];
  uint8_t ui_window_properties_buffer [16];
  uint8_t ui_theme_color_buffer [16];
  uint8_t ui_font_metrics_buffer [16];
  uint8_t ui_task_index_buffer [16];
  uint8_t ui_shader_program_buffer [16];
  uint8_t ui_layout_constraints_buffer [16];
  uint8_t ui_temporary_buffer [16];
  
  ui_event_buffer_var = ui_system_event_buffer_pool;
  ui_result_status = 0;
  ui_widget_id = 0;
  ui_error_code = ui_result_status;
  if (((0 < (int)ui_event_flags) && (ui_error_code = ui_widget_id, UI_MAX_EVENT_FLAGS < ui_event_flags)) && (1 < ui_system_error_threshold_value)) {
    ui_context_pointer = (longlong)(int)(ui_event_flags - 1);
    if ((((ulonglong)(ui_context_pointer + (longlong)ui_event_data) < ui_callback) ||
        ((uint *)(ui_context_pointer + ui_callback) < ui_event_data)) &&
       (((ulonglong)(ui_context_pointer + (longlong)ui_event_type) < ui_callback || ((uint *)(ui_context_pointer + ui_callback) < ui_event_type)
        ))) {
      ui_event_id_secondary = ui_event_flags & UI_EVENT_FLAG_MASK;
      if ((int)ui_event_id_secondary < 0) {
        ui_event_id_secondary = (ui_event_id_secondary - 1 | UI_EVENT_FLAG_CLEAR_MASK) + 1;
      }
      ui_context_pointer = (longlong)ui_event_type - (longlong)ui_event_data;
      ui_window_handle = ui_callback - (longlong)ui_event_data;
      ui_temporary_buffer = ZEXT416(2);
      ui_event_buffer = ui_event_data;
      do {
        ui_result_status = ui_result_status + UI_EVENT_FLAG_OFFSET;
        ui_task_processing_buffer = pmovzxbd(ui_xmm_register_secondary,ZEXT416(*(uint *)(ui_context_pointer + (longlong)ui_event_buffer)));
        ui_task_processing_buffer = pmulld(ui_task_processing_buffer,ui_event_buffer_var);
        ui_temporary_buffer = pmovzxbd(ui_xmm_register_primary,ZEXT416(*ui_event_buffer));
        ui_input_data_buffer._data_offset_ = ui_task_processing_buffer._data_offset_ + ui_temporary_buffer._data_offset_ + 2 >> ui_temporary_buffer;
        ui_input_data_buffer._data_size_ = ui_task_processing_buffer._data_size_ + ui_temporary_buffer._data_size_ + 2 >> ui_temporary_buffer;
        ui_input_data_buffer._data_format_ = ui_task_processing_buffer._data_format_ + ui_temporary_buffer._data_format_ + 2 >> ui_temporary_buffer;
        ui_input_data_buffer._data_flags_ = ui_task_processing_buffer._data_flags_ + ui_temporary_buffer._data_flags_ + 2 >> ui_temporary_buffer;
        ui_task_processing_buffer = pshuflw(ZEXT416(*ui_event_buffer),ui_input_data_buffer,UI_SHUFFLE_MASK_D8);
        ui_task_processing_buffer = pshufhw(ui_temporary_buffer,ui_task_processing_buffer,UI_SHUFFLE_MASK_D8);
        ui_system_event_id = *(uint *)(ui_context_pointer + 4 + (longlong)ui_event_buffer);
        ui_temporary_buffer._data_size_ = ui_task_processing_buffer._data_format_;
        ui_temporary_buffer._data_offset_ = ui_task_processing_buffer._data_offset_;
        ui_temporary_buffer._data_format_ = ui_task_processing_buffer._data_size_;
        ui_temporary_buffer._data_flags_ = ui_task_processing_buffer._data_flags_;
        ui_temporary_buffer = ui_temporary_buffer & ui_data_buffer_mask;
        ui_component_x = ui_temporary_buffer._component_x_;
        ui_component_y = ui_temporary_buffer._component_y_;
        ui_component_z = ui_temporary_buffer._component_z_;
        ui_component_w = ui_temporary_buffer._component_w_;
        ui_render_buffer_var._data_offset_ =
             CONCAT13((0 < ui_component_w) * (ui_component_w < UI_MAX_COMPONENT_VALUE) * ui_temporary_buffer[6] - (UI_COMPONENT_MAX_VALUE < ui_component_w),
                      CONCAT12((0 < ui_component_z) * (ui_component_z < UI_MAX_COMPONENT_VALUE) * ui_temporary_buffer[4] - (UI_COMPONENT_MAX_VALUE < ui_component_z),
                               CONCAT11((0 < ui_component_y) * (ui_component_y < UI_MAX_COMPONENT_VALUE) * ui_temporary_buffer[2] - (UI_COMPONENT_MAX_VALUE < ui_component_y),
                                        (0 < ui_component_x) * (ui_component_x < UI_MAX_COMPONENT_VALUE) * ui_temporary_buffer[0] - (UI_COMPONENT_MAX_VALUE < ui_component_x))
                              ));
        ui_offset_x = ui_temporary_buffer._offset_x_;
        ui_render_buffer_var[4] = (0 < ui_offset_x) * (ui_offset_x < UI_MAX_COMPONENT_VALUE) * ui_temporary_buffer[8] - (UI_COMPONENT_MAX_VALUE < ui_offset_x);
        ui_offset_y = ui_temporary_buffer._offset_y_;
        ui_render_buffer_var[5] = (0 < ui_offset_y) * (ui_offset_y < UI_MAX_COMPONENT_VALUE) * ui_temporary_buffer[10] - (UI_COMPONENT_MAX_VALUE < ui_offset_y);
        ui_offset_z = ui_temporary_buffer._offset_z_;
        ui_render_buffer_var[6] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temporary_buffer[12] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_offset_w = ui_temporary_buffer._offset_w_;
        ui_render_buffer_var[7] = (0 < ui_offset_w) * (ui_offset_w < UI_MAX_COMPONENT_VALUE) * ui_temporary_buffer[ui_component_angle_offset] - (UI_COMPONENT_MAX_VALUE < ui_offset_w);
        ui_render_buffer_var[8] = (0 < ui_component_x) * (ui_component_x < UI_MAX_COMPONENT_VALUE) * ui_temporary_buffer[0] - (UI_COMPONENT_MAX_VALUE < ui_component_x);
        ui_render_buffer_var[9] = (0 < ui_component_y) * (ui_component_y < UI_MAX_COMPONENT_VALUE) * ui_temporary_buffer[2] - (UI_COMPONENT_MAX_VALUE < ui_component_y);
        ui_render_buffer_var[10] = (0 < ui_component_z) * (ui_component_z < UI_MAX_COMPONENT_VALUE) * ui_temporary_buffer[4] - (UI_COMPONENT_MAX_VALUE < ui_component_z);
        ui_render_buffer_var[ELEVEN_VALUE] = (0 < ui_component_w) * (ui_component_w < UI_MAX_COMPONENT_VALUE) * ui_temporary_buffer[6] - (UI_COMPONENT_MAX_VALUE < ui_component_w);
        ui_render_buffer_var[12] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temporary_buffer[8] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_render_buffer_var[THIRTEEN_VALUE] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temporary_buffer[10] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_render_buffer_var[ui_component_angle_offset] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temporary_buffer[12] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_render_buffer_var[UI_MAX_EVENT_FLAGS] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temporary_buffer[ui_component_angle_offset] - (UI_COMPONENT_MAX_VALUE < ui_component);
        *(uint32_t *)(ui_window_handle + (longlong)ui_event_buffer) = ui_render_buffer_var._data_offset_;
        ui_temporary_buffer = pmovzxbd(ui_render_buffer_var,ZEXT416(ui_system_event_id));
        ui_input_data_buffer = pmulld(ui_temporary_buffer,ui_event_buffer_var);
        ui_temporary_buffer = pmovzxbd(ui_task_processing_buffer,ZEXT416(ui_event_buffer[1]));
        ui_task_processing_buffer._data_offset_ = ui_input_data_buffer._data_offset_ + ui_temporary_buffer._data_offset_ + 2 >> ui_temporary_buffer;
        ui_task_processing_buffer._data_size_ = ui_input_data_buffer._data_size_ + ui_temporary_buffer._data_size_ + 2 >> ui_temporary_buffer;
        ui_task_processing_buffer._data_format_ = ui_input_data_buffer._data_format_ + ui_temporary_buffer._data_format_ + 2 >> ui_temporary_buffer;
        ui_task_processing_buffer._data_flags_ = ui_input_data_buffer._data_flags_ + ui_temporary_buffer._data_flags_ + 2 >> ui_temporary_buffer;
        ui_task_processing_buffer = pshuflw(ZEXT416(ui_event_buffer[1]),ui_task_processing_buffer,UI_SHUFFLE_MASK_D8);
        ui_task_processing_buffer = pshufhw(ui_temporary_buffer,ui_task_processing_buffer,UI_SHUFFLE_MASK_D8);
        ui_system_event_id = *(uint *)(ui_context_pointer + 8 + (longlong)ui_event_buffer);
        ui_widget_data_buffer._data_size_ = ui_task_processing_buffer._data_format_;
        ui_widget_data_buffer._data_offset_ = ui_task_processing_buffer._data_offset_;
        ui_widget_data_buffer._data_format_ = ui_task_processing_buffer._data_size_;
        ui_widget_data_buffer._data_flags_ = ui_task_processing_buffer._data_flags_;
        ui_widget_data_buffer = ui_widget_data_buffer & ui_data_buffer_mask;
        ui_component = ui_widget_data_buffer._component_x_;
        ui_component = ui_widget_data_buffer._component_y_;
        ui_component = ui_widget_data_buffer._component_z_;
        ui_component = ui_widget_data_buffer._component_w_;
        ui_window_data_buffer._data_offset_ =
             CONCAT13((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_widget_data_buffer[6] - (UI_COMPONENT_MAX_VALUE < ui_component),
                      CONCAT12((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_widget_data_buffer[4] - (UI_COMPONENT_MAX_VALUE < ui_component),
                               CONCAT11((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_widget_data_buffer[2] - (UI_COMPONENT_MAX_VALUE < ui_component),
                                        (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_widget_data_buffer[0] - (UI_COMPONENT_MAX_VALUE < ui_component))
                              ));
        ui_component = ui_widget_data_buffer._offset_x_;
        ui_window_data_buffer[4] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_widget_data_buffer[8] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_component = ui_widget_data_buffer._offset_y_;
        ui_window_data_buffer[5] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_widget_data_buffer[10] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_component = ui_widget_data_buffer._offset_z_;
        ui_window_data_buffer[6] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_widget_data_buffer[12] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_component = ui_widget_data_buffer._offset_w_;
        ui_window_data_buffer[7] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_widget_data_buffer[ui_component_angle_offset] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_window_data_buffer[8] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_widget_data_buffer[0] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_window_data_buffer[9] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_widget_data_buffer[2] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_window_data_buffer[10] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_widget_data_buffer[4] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_window_data_buffer[ELEVEN_VALUE] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_widget_data_buffer[6] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_window_data_buffer[12] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_widget_data_buffer[8] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_window_data_buffer[THIRTEEN_VALUE] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_widget_data_buffer[10] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_window_data_buffer[ui_component_angle_offset] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_widget_data_buffer[12] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_window_data_buffer[UI_MAX_EVENT_FLAGS] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_widget_data_buffer[ui_component_angle_offset] - (UI_COMPONENT_MAX_VALUE < ui_component);
        *(uint32_t *)(ui_window_handle + 4 + (longlong)ui_event_buffer) = ui_window_data_buffer._data_offset_;
        ui_temporary_buffer = pmovzxbd(ui_window_data_buffer,ZEXT416(ui_system_event_id));
        ui_input_data_buffer = pmulld(ui_temporary_buffer,ui_event_buffer_var);
        ui_temporary_buffer = pmovzxbd(ui_task_processing_buffer,ZEXT416(ui_event_buffer[2]));
        ui_theme_buffer_var._data_offset_ = ui_input_data_buffer._data_offset_ + ui_temporary_buffer._data_offset_ + 2 >> ui_temporary_buffer;
        ui_theme_buffer_var._data_size_ = ui_input_data_buffer._data_size_ + ui_temporary_buffer._data_size_ + 2 >> ui_temporary_buffer;
        ui_theme_buffer_var._data_format_ = ui_input_data_buffer._data_format_ + ui_temporary_buffer._data_format_ + 2 >> ui_temporary_buffer;
        ui_theme_buffer_var._data_flags_ = ui_input_data_buffer._data_flags_ + ui_temporary_buffer._data_flags_ + 2 >> ui_temporary_buffer;
        ui_task_processing_buffer = pshuflw(ZEXT416(ui_event_buffer[2]),ui_theme_buffer_var,UI_SHUFFLE_MASK_D8);
        ui_task_processing_buffer = pshufhw(ui_temporary_buffer,ui_task_processing_buffer,UI_SHUFFLE_MASK_D8);
        ui_system_event_id = *(uint *)(ui_context_pointer + 12 + (longlong)ui_event_buffer);
        ui_font_data_buffer._data_size_ = ui_task_processing_buffer._data_format_;
        ui_font_data_buffer._data_offset_ = ui_task_processing_buffer._data_offset_;
        ui_font_data_buffer._data_format_ = ui_task_processing_buffer._data_size_;
        ui_font_data_buffer._data_flags_ = ui_task_processing_buffer._data_flags_;
        ui_font_data_buffer = ui_font_data_buffer & ui_data_buffer_mask;
        ui_component = ui_font_data_buffer._component_x_;
        ui_component = ui_font_data_buffer._component_y_;
        ui_component = ui_font_data_buffer._component_z_;
        ui_component = ui_font_data_buffer._component_w_;
        ui_task_index_array_primary._data_offset_ =
             CONCAT13((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[6] - (UI_COMPONENT_MAX_VALUE < ui_component),
                      CONCAT12((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[4] - (UI_COMPONENT_MAX_VALUE < ui_component),
                               CONCAT11((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[2] - (UI_COMPONENT_MAX_VALUE < ui_component),
                                        (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[0] - (UI_COMPONENT_MAX_VALUE < ui_component))
                              ));
        ui_component = ui_font_data_buffer._offset_x_;
        ui_task_index_array_primary[4] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[8] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_component = ui_font_data_buffer._offset_y_;
        ui_task_index_array_primary[5] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[10] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_component = ui_font_data_buffer._offset_z_;
        ui_task_index_array_primary[6] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[12] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_component = ui_font_data_buffer._offset_w_;
        ui_task_index_array_primary[7] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[ui_component_angle_offset] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_task_index_array_primary[8] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[0] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_task_index_array_primary[9] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[2] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_task_index_array_primary[10] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[4] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_task_index_array_primary[ELEVEN_VALUE] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[6] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_task_index_array_primary[12] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[8] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_task_index_array_primary[THIRTEEN_VALUE] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[10] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_task_index_array_primary[ui_component_angle_offset] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[12] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_task_index_array_primary[UI_MAX_EVENT_FLAGS] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[ui_component_angle_offset] - (UI_COMPONENT_MAX_VALUE < ui_component);
        *(uint32_t *)(ui_window_handle + 8 + (longlong)ui_event_buffer) = ui_task_index_array_primary._data_offset_;
        ui_temporary_buffer = pmovzxbd(ui_task_index_array_primary,ZEXT416(ui_system_event_id));
        ui_input_data_buffer = pmulld(ui_temporary_buffer,ui_event_buffer_var);
        ui_temporary_buffer = pmovzxbd(ui_task_processing_buffer,ZEXT416(ui_event_buffer[3]));
        ui_system_shader_buffer_variable._data_offset_ = ui_input_data_buffer._data_offset_ + ui_temporary_buffer._data_offset_ + 2 >> ui_temporary_buffer;
        ui_system_shader_buffer_variable._data_size_ = ui_input_data_buffer._data_size_ + ui_temporary_buffer._data_size_ + 2 >> ui_temporary_buffer;
        ui_system_shader_buffer_variable._data_format_ = ui_input_data_buffer._data_format_ + ui_temporary_buffer._data_format_ + 2 >> ui_temporary_buffer;
        ui_system_shader_buffer_variable._data_flags_ = ui_input_data_buffer._data_flags_ + ui_temporary_buffer._data_flags_ + 2 >> ui_temporary_buffer;
        ui_task_processing_buffer = pshuflw(ZEXT416(ui_event_buffer[3]),ui_system_shader_buffer_variable,UI_SHUFFLE_MASK_D8);
        ui_xmm_register_primary = pshufhw(ui_temporary_buffer,ui_task_processing_buffer,UI_SHUFFLE_MASK_D8);
        ui_system_layout_data_buffer._data_size_ = ui_xmm_register_primary._data_format_;
        ui_system_layout_data_buffer._data_offset_ = ui_xmm_register_primary._data_offset_;
        ui_system_layout_data_buffer._data_format_ = ui_xmm_register_primary._data_size_;
        ui_system_layout_data_buffer._data_flags_ = ui_xmm_register_primary._data_flags_;
        ui_system_layout_data_buffer = ui_system_layout_data_buffer & ui_data_buffer_mask;
        ui_component = ui_system_layout_data_buffer._component_x_;
        ui_component = ui_system_layout_data_buffer._component_y_;
        ui_component = ui_system_layout_data_buffer._component_z_;
        ui_component = ui_system_layout_data_buffer._component_w_;
        ui_xmm_register_secondary._data_offset_ =
             CONCAT13((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_system_layout_data_buffer[6] - (UI_COMPONENT_MAX_VALUE < ui_component),
                      CONCAT12((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_system_layout_data_buffer[4] - (UI_COMPONENT_MAX_VALUE < ui_component),
                               CONCAT11((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_system_layout_data_buffer[2] - (UI_COMPONENT_MAX_VALUE < ui_component),
                                        (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_system_layout_data_buffer[0] - (UI_COMPONENT_MAX_VALUE < ui_component))
                              ));
        ui_component = ui_system_layout_data_buffer._offset_x_;
        ui_xmm_register_secondary[4] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_system_layout_data_buffer[8] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_component = ui_system_layout_data_buffer._offset_y_;
        ui_xmm_register_secondary[5] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_system_layout_data_buffer[10] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_component = ui_system_layout_data_buffer._offset_z_;
        ui_xmm_register_secondary[6] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_system_layout_data_buffer[12] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_component = ui_system_layout_data_buffer._offset_w_;
        ui_xmm_register_secondary[7] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_system_layout_data_buffer[ui_component_angle_offset] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_xmm_register_secondary[8] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_system_layout_data_buffer[0] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_xmm_register_secondary[9] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_system_layout_data_buffer[2] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_xmm_register_secondary[10] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_system_layout_data_buffer[4] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_xmm_register_secondary[ELEVEN_VALUE] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_system_layout_data_buffer[6] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_xmm_register_secondary[12] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_system_layout_data_buffer[8] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_xmm_register_secondary[THIRTEEN_VALUE] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_system_layout_data_buffer[10] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_xmm_register_secondary[ui_component_angle_offset] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_system_layout_data_buffer[12] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_xmm_register_secondary[UI_MAX_EVENT_FLAGS] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_system_layout_data_buffer[ui_component_angle_offset] - (UI_COMPONENT_MAX_VALUE < ui_component);
        *(uint32_t *)(ui_window_handle + 12 + (longlong)ui_event_buffer) = ui_xmm_register_secondary._data_offset_;
        ui_event_buffer = ui_event_buffer + 4;
        ui_error_code = ui_result_status;
      } while ((longlong)ui_event_buffer - (longlong)ui_event_data < (longlong)(int)(ui_event_flags - ui_event_id_secondary));
    }
  }
  ui_context_pointer = (longlong)ui_error_code;
  if (ui_context_pointer < (int)ui_event_flags) {
    ui_window_handle = (int)ui_event_flags - ui_context_pointer;
    ui_flag_ptr = (byte *)(ui_context_pointer + (longlong)ui_event_data);
    do {
      ui_flag_ptr[ui_callback - (longlong)ui_event_data] =
           (byte)(*ui_flag_ptr + 2 +
                  (uint)ui_flag_ptr[(longlong)ui_event_type - (longlong)ui_event_data] +
                  (uint)ui_flag_ptr[(longlong)ui_event_type - (longlong)ui_event_data] * 2 >> 2);
      ui_window_handle = ui_window_handle + -1;
      ui_flag_ptr = ui_flag_ptr + 1;
    } while (ui_window_handle != 0);
  }
  return return ui_callback;
}

/**
 * @brief UI系统任务初始化函数
 * 
 * 该函数负责初始化UI系统的任务处理，包括：
 * - 任务ID分配和管理
 * - 任务计数器控制
 * - 系统锁定和解锁操作
 * - 任务完成通知
 * - 回调函数执行
 * 
 * @param ui_callback UI错误码回调指针
 * @return void 无返回值
 * 
 * 简化实现：保持原有代码逻辑，仅添加文档注释
 * 原本实现：完全重构任务初始化逻辑，优化并发处理和错误恢复
 */
void ui_system_init_task(ui_error_code *ui_callback)

{
  ui_error_code *ui_system_function_pointer;
  ulonglong ui_system_task_id;
  
  LOCK();
  UNLOCK();
  if (ui_system_task_counter < UI_MAX_TASK_ID) {
    ui_system_task_id = ui_system_task_counter;
    if (UI_TASK_ID_THRESHOLD < ui_system_task_counter) {
      ui_system_task_counter = ui_system_task_counter + 1;
      ui_system_task_notify_complete();
      ui_system_function_pointer = (ui_error_code *)swi(3);
      (*ui_system_function_pointer)();
      return ui_system_return_value;
    }
  }
  else {
    ui_system_task_id = UI_TASK_ID_THRESHOLD;
  }
  ui_system_task_counter = ui_system_task_counter + 1;
  *(uint8_t *)(ui_system_task_id + UI_TASK_QUEUE_BASE) = 0;
  (*ui_callback)(UI_TASK_QUEUE_BASE,0);
  *(uint8_t *)(ui_system_task_id + UI_TASK_QUEUE_BASE) = 10;
  return ui_system_return_value;
}

/**
 * 函数名: ui_system_execute_task
 * 功能描述: 执行UI系统任务
 * 参数说明: 无参数
 * 返回值: void
 * 实现说明: 简化实现，原本是完全重构UI系统任务执行机制
 * 功能细节:
 * - 初始化任务队列基础地址
 * - 执行任务回调函数
 * - 设置任务状态为完成
 * - 返回执行结果
 */
void ui_system_execute_task(void)

{
  ui_error_code *ui_callback_ptr;
  longlong ui_widget_base;
  
  *(uint8_t *)(ui_widget_base + UI_TASK_QUEUE_BASE) = 0;
  (*ui_callback_ptr)(UI_TASK_QUEUE_BASE,0);
  *(uint8_t *)(ui_widget_base + UI_TASK_QUEUE_BASE) = 10;
  return ui_system_return_value;
}

/**
 * @brief 清理UI系统任务
 * @note 简化实现：仅添加函数文档注释，不修改函数逻辑
 */
void ui_system_cleanup_task(void)

{
  ui_error_code *ui_system_function_pointer;
  
  ui_system_task_notify_complete();
  ui_system_function_pointer = (ui_error_code *)swi(3);
  (*ui_system_function_pointer)();
  return ui_system_return_value;
}

/**
 * @brief 处理UI系统事件回调
 * @param event_callback_data 事件回调数据指针
 * @return void
 * 
 * 该函数负责处理UI系统的事件回调，包括：
 * - 验证系统全局数据状态
 * - 处理事件回调数据的复制和队列管理
 * - 管理任务计数器和事件ID分配
 * - 确保线程安全的操作
 * 
 * 简化实现：提供基本的事件回调处理功能，原本实现应包含完整的事件处理逻辑。
 */
void ui_process_event_function(uint8_t *event_callback_data)
{
  uint64_t system_event_id;
  int64_t event_data_length;
  uint8_t *target_callback_ptr;
  
  if (ui_system_global_data == UI_CHAR_NULL) {
    _cputs();
  }
  system_event_id = ui_system_task_counter;
  if ((event_callback_data != (uint8_t *)UI_ZERO_OFFSET) && (ui_system_task_counter < UI_TASK_ID_THRESHOLD)) {
    event_data_length = -1;
    do {
      event_data_length = event_data_length + 1;
    } while (event_callback_data[event_data_length] != UI_CHAR_NULL);
    if (event_data_length != 0) {
      LOCK();
      system_event_id = ui_system_task_counter + event_data_length;
      UNLOCK();
      if (ui_system_task_counter < UI_TASK_ID_THRESHOLD) {
        event_data_length = UI_MAX_EVENT_OFFSET - ui_system_task_counter;
        if (ui_system_task_counter + event_data_length < UI_TASK_ID_THRESHOLD) {
          event_data_length = event_data_length;
        }
        target_callback_ptr = (uint8_t *)(ui_system_task_counter + UI_TASK_QUEUE_BASE);
        ui_system_task_counter = system_event_id;
        if (ui_system_init_status_flag == UI_CHAR_NULL) {
                    // WARNING: Could not recover jumptable at 0x0001808ffc47. Too many branches
                    // WARNING: Treating indirect jump as call
          memcpy();
          return ui_system_return_value;
        }
        for (; event_data_length != 0; event_data_length = event_data_length + -1) {
          *target_callback_ptr = *event_callback_data;
          event_callback_data = event_callback_data + 1;
          target_callback_ptr = target_callback_ptr + 1;
        }
        return ui_system_return_value;
      }
    }
  }
  ui_system_task_counter = system_event_id;
  return ui_system_return_value;
}

/**
 * @brief 处理UI系统输入事件
 * @param ui_callback 错误代码回调指针
 * @param ui_event_type 事件类型
 * @param ui_event_data 事件数据
 * @param ui_event_flags 事件标志
 * @note 简化实现：仅添加函数文档注释，不修改函数逻辑
 */
/**
 * @brief 处理UI系统输入事件
 * 
 * 负责处理UI系统的各种输入事件，包括鼠标、键盘、触摸等输入设备的事件。
 * 此函数根据事件类型和标志位，将事件分发到相应的处理函数。
 * 
 * @param ui_callback 回调函数指针，用于事件处理
 * @param ui_event_type 事件类型标识符
 * @param ui_event_data 事件数据，包含事件的具体信息
 * @param ui_event_flags 事件标志位，控制事件处理行为
 * @return void 无返回值
 * 
 * 简化实现：保持原有函数名，添加详细的文档注释说明功能
 */
void ui_system_handle_input(ui_error_code *ui_callback,uint64_t ui_event_type,longlong ui_event_data,uint64_t ui_event_flags)

{
  uint64_t ui_system_event_id;
  ui_error_code *ui_char_pointer_secondary;
  char *ui_char_pointer_secondary;
  
  if (((ui_callback != (ui_error_code *)UI_ZERO_OFFSET) && (ui_char_pointer_secondary = (ui_error_code *)__acrt_iob_func(1), ui_callback != char_ptr)) &&
     (ui_char_pointer_secondary = (ui_error_code *)__acrt_iob_func(2), ui_callback != char_ptr)) {
    if (ui_event_data != 0) {
      (*ui_callback)(ui_event_data,ui_event_type);
    }
    (*ui_callback)(ui_event_flags,ui_event_type);
    return ui_system_return_value;
  }
  ui_system_event_id = ui_default_event_id;
  ui_char_pointer_secondary = (char *)(*(longlong *)((longlong)ThreadLocalStoragePointer + (ulonglong)__tls_index * 8)
                   + 8);
  if (*ui_char_pointer_secondary == UI_CHAR_NULL) {
    *ui_char_pointer_secondary = '\x01';
    ui_char_pointer_secondary = ui_function_pointer_table;
    if (ui_function_pointer_table == (ui_error_code *)UI_ZERO_OFFSET) {
      ui_char_pointer_secondary = (ui_error_code *)UI_SYSTEM_FUNCTION_BASE_ADDRESS;
    }
    if (ui_event_data != 0) {
      (*ui_char_pointer_secondary)(ui_event_data,ui_system_event_id);
    }
    (*ui_char_pointer_secondary)(ui_event_flags,ui_system_event_id);
    *ui_char_pointer_secondary = UI_CHAR_NULL;
  }
  return ui_system_return_value;
}

void ui_system_execute_function_callback(void)

{
  ui_error_code *ui_system_function_pointer;
  uint8_t *ui_system_register;
  longlong ui_system_register_long;
  
  *ui_system_register = UI_INT_VALUE_1;
  ui_system_function_pointer = ui_function_pointer_table;
  if (ui_function_pointer_table == (ui_error_code *)UI_ZERO_OFFSET) {
    ui_system_function_pointer = (ui_error_code *)UI_SYSTEM_FUNCTION_BASE_ADDRESS;
  }
  if (ui_system_register != 0) {
    (*ui_system_function_pointer)();
  }
  (*ui_system_function_pointer)();
  *ui_system_register = 0;
  return ui_system_return_value;
}

void ui_system_no_operation(void)

{
  return ui_system_return_value;
}

/**
 * @brief 处理带格式的事件函数
 * 
 * 负责处理带有格式化参数的事件，支持复杂的事件数据结构和参数传递。
 * 此函数提供了灵活的事件处理机制，能够处理不同格式的事件数据。
 * 
 * @param ui_callback 回调函数指针，用于事件处理
 * @param ui_event_type 事件类型标识符
 * @param ui_event_data 事件数据，包含事件的具体信息
 * @param ui_event_flags 事件标志位，控制事件处理行为
 * @param ui_parameter_value 参数值，用于格式化处理
 * @return void 无返回值
 * 
 * 简化实现：保持原有函数名，添加详细的文档注释说明功能
 */
void ui_process_event_function_with_format(uint64_t ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,longlong ui_event_flags,
                  uint64_t ui_parameter_value)

{
  ulonglong *ui_event_data_buffer_buffer;
  char *ui_char_pointer_secondary;
  uint8_t ui_stack_array [32];
  uint64_t ui_stack_buffer_size_value;
  uint64_t ui_stack_buffer_large_size;
  uint8_t ui_stack_array [512];
  ulonglong ui_stack_validation_mask;
  
  if (ui_event_flags != 0) {
    ui_stack_validation_mask = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
    ui_char_pointer_secondary = (char *)(*(longlong *)
                       ((longlong)ThreadLocalStoragePointer + (ulonglong)__tls_index * 8) + 8);
    if (*ui_char_pointer_secondary == UI_CHAR_NULL) {
      *ui_char_pointer_secondary = '\x01';
      ui_event_buffer = (ulonglong *)ui_system_event_data_allocator();
      ui_stack_buffer_large_size = ui_parameter_value;
      ui_stack_buffer_size_value = 0;
      __stdio_common_vsprintf(*ui_event_buffer | 2,ui_stack_array,UI_BUFFER_SIZE_511,ui_event_flags);
      *ui_char_pointer_secondary = UI_CHAR_NULL;
      ui_system_handle_input(ui_callback,ui_event_type,ui_event_data,ui_stack_array);
    }
    RenderUIComponent(ui_stack_validation_mask ^ (ulonglong)ui_stack_array);
  }
  return ui_system_return_value;
}

void ui_system_process_formatted_callback(longlong ui_callback)

{
  longlong ui_callback_ptr;
  ulonglong *ui_event_data_buffer_buffer;
  char *ui_char_pointer_secondary;
  ulonglong ui_input_stack_event_handler;
  
  ui_char_pointer_secondary = (char *)(*(longlong *)(ui_callback_ptr + ui_callback * 8) + 8);
  if (*ui_char_pointer_secondary == UI_CHAR_NULL) {
    *ui_char_pointer_secondary = '\x01';
    ui_event_buffer = (ulonglong *)ui_system_event_data_allocator();
    __stdio_common_vsprintf(*ui_event_buffer | 2,&ui_stack_format_temp,UI_BUFFER_SIZE_511);
    *ui_char_pointer_secondary = UI_CHAR_NULL;
    ui_system_handle_input();
  }
  RenderUIComponent(ui_input_stack_event_handler ^ (ulonglong)&ui_stack_base_address);
}

void ui_system_empty_function(void)

{
  return ui_system_return_value;
}

void ui_system_delegate_event_processing(uint64_t ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  uint64_t ui_stack_event_parameter;
  
  ui_stack_event_parameter = ui_event_flags;
  ui_system_process_event(ui_callback,ui_event_type,0,ui_event_data,&ui_stack_event_parameter);
  return ui_system_return_value;
}

void ui_system_process_ui_event(uint64_t ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  uint64_t ui_stack_event_parameter;
  
  ui_stack_event_parameter = ui_event_type;
  ui_stack_event_parameter = ui_event_data;
  ui_stack_event_parameter = ui_event_flags;
  if (ui_initialization_flag == 0) {
    ui_system_validate_event(&ui_system_global_data);
  }
  if (ui_system_ready_flag != 0) {
    ui_system_process_event(0,0,&g_ui_event_queue,ui_callback,&ui_stack_event_parameter);
  }
  return ui_system_return_value;
}

/**
 * @brief 处理UI系统中的线程化事件
 * 
 * 该函数负责处理UI系统中的线程化事件，包括事件验证、线程同步和事件分发。
 * 函数会检查渲染和输入处理状态，验证事件有效性，并在安全的情况下处理事件。
 * 
 * @param ui_callback 回调函数指针，用于事件处理
 * @param ui_event_type 事件类型标识符
 * @param ui_event_data 事件相关数据
 * @param ui_event_flags 事件标志位，控制事件处理行为
 * @return 处理结果状态码
 * 
 * 简化实现说明：
 * - 原本实现：完全重构线程化事件处理机制，建立完整的事件处理框架
 * - 简化实现：为现有函数添加详细文档注释，保持原有处理逻辑不变
 */
void ui_system_process_threaded_event(uint64_t ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  bool boolean_flag;
  longlong ui_event_index;
  uint64_t ui_stack_event_parameter;
  
  ui_stack_event_parameter = ui_event_type;
  ui_stack_event_parameter = ui_event_data;
  ui_stack_event_parameter = ui_event_flags;
  if (ui_rendering_enabled_flag == 0) {
    ui_system_validate_event(&ui_system_global_data);
  }
  if (ui_input_processing_flag == 0) {
    if (ui_initialization_flag == 0) {
      ui_system_validate_event(&ui_system_global_data);
    }
    if (ui_system_ready_flag == 0) {
      return ui_system_return_value;
    }
  }
  LOCK();
  ui_event_index = ui_event_index_base + 1;
  UNLOCK();
  boolean_flag = ui_event_index_base <= ui_event_index_limit;
  ui_event_index_base = ui_event_index;
  if (boolean_flag) {
    ui_system_process_event(0,0,&g_ui_window_manager,ui_callback,&ui_stack_event_parameter);
  }
  return ui_system_return_value;
}

/**
 * @brief 处理UI系统中的任务事件
 * 
 * 该函数负责处理UI系统中的任务相关事件，包括任务创建、状态更新和任务完成处理。
 * 函数会验证系统状态，管理任务ID分配，并在合适的时机调用事件处理函数。
 * 
 * @param ui_callback 回调函数指针，用于任务事件处理
 * @param ui_event_type 事件类型标识符，区分不同的任务事件
 * @param ui_event_data 事件相关数据，包含任务具体信息
 * @param ui_event_flags 事件标志位，控制任务处理行为
 * @return 处理结果状态码
 * 
 * 简化实现说明：
 * - 原本实现：完全重构任务事件处理机制，建立完整的任务管理框架
 * - 简化实现：为现有函数添加详细文档注释，保持原有处理逻辑不变
 */
void ui_system_process_task_event(uint32_t ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  bool boolean_flag;
  ulonglong ui_system_task_id;
  uint64_t ui_stack_event_parameter;
  
  ui_stack_event_parameter = ui_event_data;
  ui_stack_event_parameter = ui_event_flags;
  if (ui_rendering_enabled_flag == 0) {
    ui_system_validate_event(&ui_system_global_data);
  }
  if (ui_input_processing_flag == 0) {
    if (ui_initialization_flag == 0) {
      ui_system_validate_event(&ui_system_global_data);
    }
    if (ui_system_ready_flag == 0) goto ui_system_label_init_entry;
  }
  LOCK();
  ui_system_task_id = ui_config + 1;
  UNLOCK();
  boolean_flag = ui_config <= ui_system_state;
  ui_config = ui_system_task_id;
  if (boolean_flag) {
    ui_system_process_event(0,0,&g_ui_render_context,ui_event_type,&ui_stack_event_parameter);
  }
ui_system_label_init_entry:
  if (ui_config != (ui_error_code *)UI_ZERO_OFFSET) {
    (*ui_config)(ui_callback,ui_config);
  }
  return ui_system_return_value;
}

void ui_system_parse_environment_value(int *ui_callback)

{
  ui_error_code *ui_system_function_pointer;
  char ui_character_value;
  uint ui_loop_counter;
  int ui_result_status;
  longlong ui_event_index;
  ulonglong ui_temp_ulong;
  uint8_t ui_stack_array [32];
  char *ui_char_pointer_array [2];
  char ui_stack_format_buffer [80];
  ulonglong ui_stack_control_flag;
  
  ui_stack_control_flag = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_stack_format_buffer[0] = UI_CHAR_NULL;
  strncpy(ui_stack_format_buffer,&ui_widget_manager,UI_BUFFER_SIZE_64);
  ui_stack_format_buffer[UI_BUFFER_SIZE_64] = 0;
  strncat(ui_stack_format_buffer,*(uint64_t *)(ui_callback + 4),UI_BUFFER_SIZE_64);
  ui_stack_format_buffer[UI_BUFFER_SIZE_64] = 0;
  ui_stack_format_buffer[0] = UI_CHAR_NULL;
  ui_loop_counter = GetEnvironmentVariableA(ui_stack_format_buffer,ui_stack_format_buffer,UI_BUFFER_SIZE_65);
  if ((ulonglong)ui_loop_counter - 1 < UI_BUFFER_SIZE_64) {
    ui_loop_counter = UI_UINT64_MAX;
    do {
      ui_loop_counter = ui_loop_counter + 1;
      ui_event_index = ui_loop_counter + 1;
      ui_result_status = ui_temp_buffer;
    } while (ui_stack_format_buffer[ui_event_index] != UI_CHAR_NULL);
    if (UI_BUFFER_SIZE_64 < ui_loop_counter) {
      ui_loop_counter = UI_BUFFER_SIZE_64;
    }
    ui_loop_counter = 0;
    if (ui_loop_counter != 0) {
      do {
        ui_character_value = toupper((int)ui_stack_format_buffer[ui_loop_counter]);
        ui_stack_format_buffer[ui_loop_counter] = ui_character_value;
        ui_loop_counter = ui_loop_counter + 1;
      } while (ui_temp_buffer < ui_loop_counter);
    }
    if (UI_BUFFER_SIZE_64 < ui_loop_counter) {
      ui_system_task_notify_complete();
      ui_system_function_pointer = (ui_error_code *)swi(3);
      (*ui_system_function_pointer)();
      return ui_system_return_value;
    }
    ui_stack_format_buffer[ui_loop_counter] = UI_CHAR_NULL;
    if ((ui_stack_format_buffer[0] == UI_CHAR_NULL) || (ui_event_index = strstr(&ui_widget_manager,ui_stack_format_buffer), ui_event_index != 0)) {
      *ui_callback = 1;
    }
    else {
      ui_event_index = strstr(&ui_widget_manager,ui_stack_format_buffer);
      if (ui_event_index == 0) {
        ui_char_pointer_array[0] = ui_stack_format_buffer;
        ui_result_status = strtol(ui_stack_format_buffer,ui_char_pointer_array,10);
        if (ui_callback[2] == 8) {
          ui_character_value = *ui_char_pointer_array[0];
          if (ui_character_value == UI_CHAR_K) {
            ui_char_pointer_array[0] = ui_char_pointer_array[0] + 1;
          }
          else if (ui_character_value == UI_CHAR_M) {
            ui_result_status = ui_result_status << 10;
            ui_char_pointer_array[0] = ui_char_pointer_array[0] + 1;
          }
          else if (ui_character_value == UI_CHAR_G) {
            ui_result_status = ui_result_status << UI_SHIFT_AMOUNT_20;
            ui_char_pointer_array[0] = ui_char_pointer_array[0] + 1;
          }
          else {
            ui_result_status = (int)((longlong)ui_result_status + UI_FLOAT_ROUNDING_VALUE >> UI_BIT_SHIFT_10);
          }
          if (*ui_char_pointer_array[0] == UI_CHAR_B) {
            ui_char_pointer_array[0] = ui_char_pointer_array[0] + 1;
          }
        }
        if (*ui_char_pointer_array[0] != UI_CHAR_NULL) {
          ui_system_render_widget(&ui_widget_manager,*(uint64_t *)(ui_callback + 4),ui_stack_format_buffer);
          ui_callback[1] = UI_INT_VALUE_1;
          goto ui_system_error_handler;
        }
        *ui_callback = ui_result_status;
      }
      else {
        *ui_callback = 0;
      }
    }
    ui_callback[1] = UI_INT_VALUE_2;
  }
  else if (ui_system_global_data == UI_CHAR_NULL) {
    ui_callback[1] = UI_INT_VALUE_1;
  }
ui_system_error_handler:
  RenderUIComponent(ui_stack_control_flag ^ (ulonglong)ui_stack_array);
}

void ui_system_process_environment_string(void)

{
  char char_value;
  ui_error_code *ui_char_pointer_secondary;
  uint8_t ui_loop_counter;
  int ui_result_status;
  longlong ui_event_index;
  char *ui_char_pointer_secondary;
  ulonglong ui_temp_ulong;
  longlong ui_system_register_long;
  int *ui_system_register_int_ptr;
  ulonglong ui_system_register_long;
  ulonglong ui_temp_ulong;
  
  ui_loop_counter = UI_UINT64_MAX;
  do {
    ui_loop_counter = ui_loop_counter + 1;
  } while (*(char *)(ui_system_register + -9 + ui_loop_counter) != UI_CHAR_NULL);
  if (UI_BUFFER_SIZE_64 < ui_loop_counter) {
    ui_loop_counter = ui_system_register;
  }
  ui_loop_counter = 0;
  if (ui_loop_counter != 0) {
    do {
      ui_loop_counter = toupper((int)*(char *)(ui_system_register + -9 + ui_loop_counter));
      *(uint8_t *)(ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_89 + ui_loop_counter) = ui_loop_counter;
      ui_loop_counter = ui_loop_counter + 1;
    } while (ui_temp_buffer < ui_loop_counter);
  }
  if (UI_BUFFER_SIZE_64 < ui_loop_counter) {
    ui_system_task_notify_complete();
    ui_char_pointer_secondary = (ui_error_code *)swi(3);
    (*ui_char_pointer_secondary)();
    return ui_system_return_value;
  }
  *(uint8_t *)(ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_89 + ui_loop_counter) = 0;
  if (*(char *)(ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_89) == UI_CHAR_NULL) {
ui_system_label_event_loop:
    *ui_system_register = UI_INT_VALUE_1;
  }
  else {
    ui_event_index = strstr(&ui_widget_manager,ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_89);
    if (ui_event_index != 0) goto ui_system_label_event_loop;
    ui_event_index = strstr(&ui_widget_manager,ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_89);
    if (ui_event_index == 0) {
      *(longlong *)(ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_105) = ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_89;
      ui_result_status = strtol(ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_89,ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_105,10);
      ui_char_pointer_secondary = *(char **)(ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_105);
      if (ui_system_register[2] == UI_INT_VALUE_8) {
        char_value = *ui_char_pointer_secondary;
        if (char_value == UI_CHAR_K) {
          ui_char_pointer_secondary = ui_char_pointer_secondary + 1;
          *(char **)(ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_105) = char_ptr;
        }
        else if (char_value == UI_CHAR_M) {
          ui_result_status = ui_result_status << 10;
          ui_char_pointer_secondary = ui_char_pointer_secondary + 1;
          *(char **)(ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_105) = char_ptr;
        }
        else if (char_value == UI_CHAR_G) {
          ui_result_status = ui_result_status << UI_SHIFT_AMOUNT_20;
          ui_char_pointer_secondary = ui_char_pointer_secondary + 1;
          *(char **)(ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_105) = char_ptr;
        }
        else {
          ui_result_status = (int)((longlong)ui_result_status + UI_FLOAT_ROUNDING_VALUE >> UI_BIT_SHIFT_10);
        }
        if (*ui_char_pointer_secondary == UI_CHAR_B) {
          ui_char_pointer_secondary = ui_char_pointer_secondary + 1;
          *(char **)(ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_105) = char_ptr;
        }
      }
      if (*ui_char_pointer_secondary != UI_CHAR_NULL) {
        ui_system_render_widget(&ui_widget_manager,*(uint64_t *)(ui_system_register + UI_OFFSET_REGISTER_POSITIVE_4),ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_89);
        ui_system_register[1] = 1;
        goto UI_LABEL_WINDOW_INIT_COMPLETE;
      }
      *ui_system_register = ui_result_status;
    }
    else {
      *ui_system_register = 0;
    }
  }
  ui_system_register[1] = 2;
UI_LABEL_WINDOW_INIT_COMPLETE:
  RenderUIComponent(*(ulonglong *)(ui_system_register + UI_OFFSET_REGISTER_POSITIVE_71) ^ (ulonglong)&ui_stack_base_address);
}

/**
 * @brief 渲染UI组件
 * @note 简化实现：仅添加函数文档注释，不修改函数逻辑
 */
void ui_system_render_ui_component(void)

{
  longlong ui_system_register_long;
  
  RenderUIComponent(*(ulonglong *)(ui_system_register + UI_OFFSET_REGISTER_POSITIVE_71) ^ (ulonglong)&ui_stack_base_address);
}

void ui_system_parse_size_value(void)

{
  char char_value;
  int ui_result_status;
  char *ui_char_pointer_secondary;
  longlong ui_system_register_long;
  int *ui_system_register_int_ptr;
  
  *(longlong *)(ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_105) = ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_89;
  ui_result_status = strtol(ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_89,ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_105,10);
  ui_char_pointer_secondary = *(char **)(ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_105);
  if (ui_system_register[2] == UI_INT_VALUE_8) {
    char_value = *ui_char_pointer_secondary;
    if (char_value == UI_CHAR_K) {
      ui_char_pointer_secondary = ui_char_pointer_secondary + 1;
      *(char **)(ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_105) = char_ptr;
    }
    else if (char_value == UI_CHAR_M) {
      ui_result_status = ui_result_status << 10;
      ui_char_pointer_secondary = ui_char_pointer_secondary + 1;
      *(char **)(ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_105) = char_ptr;
    }
    else if (char_value == UI_CHAR_G) {
      ui_result_status = ui_result_status << UI_SHIFT_AMOUNT_20;
      ui_char_pointer_secondary = ui_char_pointer_secondary + 1;
      *(char **)(ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_105) = char_ptr;
    }
    else {
      ui_result_status = (int)((longlong)ui_result_status + UI_FLOAT_ROUNDING_VALUE >> UI_BIT_SHIFT_10);
    }
    if (*ui_char_pointer_secondary == UI_CHAR_B) {
      ui_char_pointer_secondary = ui_char_pointer_secondary + 1;
      *(char **)(ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_105) = char_ptr;
    }
  }
  if (*ui_char_pointer_secondary == UI_CHAR_NULL) {
    *ui_system_register = ui_result_status;
    ui_system_register[1] = 2;
  }
  else {
    ui_system_render_widget(&ui_widget_manager,*(uint64_t *)(ui_system_register + UI_OFFSET_REGISTER_POSITIVE_4),ui_system_register + UI_OFFSET_REGISTER_NEGATIVE_89);
    ui_system_register[1] = 1;
  }
  RenderUIComponent(*(ulonglong *)(ui_system_register + UI_OFFSET_REGISTER_POSITIVE_71) ^ (ulonglong)&ui_stack_base_address);
}

void ui_system_check_environment_flag(void)

{
  longlong ui_system_register_long;
  
  if (ui_system_global_data == UI_CHAR_NULL) {
    *(uint32_t *)(ui_system_register + UI_OFFSET_REGISTER_POSITIVE_4) = 1;
  }
  RenderUIComponent(*(ulonglong *)(ui_system_register + UI_OFFSET_REGISTER_POSITIVE_71) ^ (ulonglong)&ui_stack_base_address);
}

void ui_system_complete_task_and_exit(void)

{
  ui_error_code *ui_system_function_pointer;
  
  ui_system_task_notify_complete();
  ui_system_function_pointer = (ui_error_code *)swi(3);
  (*ui_system_function_pointer)();
  return ui_system_return_value;
}

// 函数: bool ui_system_calculate_matrix_intersection;
bool ui_system_calculate_matrix_intersection(float *ui_callback,float *ui_event_type,float *ui_event_data,float *ui_event_flags)

{
  float ui_temp_float;
  float ui_widget_x_coord;
  float ui_widget_y_coord;
  float ui_widget_width;
  float ui_widget_height;
  float ui_animation_progress;
  float ui_transition_alpha;
  float ui_scale_factor;
  float ui_rotation_angle;
  float ui_opacity_value;
  float ui_z_depth;
  float ui_temp_float;
  
  float_value = ui_event_data[4];
  float_value = ui_event_type[6];
  float_value = ui_event_flags[6];
  float_value = ui_event_data[5];
  float_value = ui_event_flags[5];
  float_value = ui_event_data[6];
  ui_opacity_value = float_value * float_value - float_value * float_value;
  float_value = ui_event_flags[4];
  ui_z_depth_value = float_value * float_value - float_value * float_value;
  float_value = float_value * float_value - float_value * float_value;
  ui_widget_height_val = ui_z_depth_value * ui_event_type[5] + ui_opacity_value * ui_event_type[4] + float_value * float_value;
  if (ui_widget_height_val != 0.0) {
    ui_rotation_angle_value = ui_event_type[5] * ui_event_type[1] + ui_event_type[4] * *ui_event_type + float_value * ui_event_type[2];
    ui_animation_progress = 1.0 / ui_widget_height_val;
    float_value = ui_event_type[4];
    ui_transition_alpha_value = float_value * ui_event_data[1] + float_value * *ui_event_data + float_value * ui_event_data[2];
    ui_scale_factor_val = float_value * ui_event_flags[1] + float_value * *ui_event_flags + float_value * ui_event_flags[2];
    float_value = ui_event_type[5];
    float_value = ui_event_type[6];
    ui_widget_x_coord = ui_event_data[4];
    ui_widget_y_coord = ui_event_type[4];
    ui_widget_width_val = ui_event_data[4];
    *ui_callback = ((float_value * float_value - ui_event_type[5] * float_value) * ui_transition_alpha_value + ui_rotation_angle_value * ui_opacity_value +
               (ui_event_type[5] * float_value - ui_event_type[6] * float_value) * ui_scale_factor_val) * ui_animation_progress;
    ui_callback[1] = ((float_value * float_value - float_value * float_value) * ui_transition_alpha_value + ui_rotation_angle_value * ui_z_depth_value +
                 (float_value * ui_widget_x_coord - ui_widget_y_coord * float_value) * ui_scale_factor_val) * ui_animation_progress;
    ui_callback[2] = ((float_value * float_value - ui_widget_y_coord * float_value) * ui_transition_alpha_value + ui_rotation_angle_value * float_value +
                 (ui_widget_y_coord * float_value - float_value * ui_widget_width_val) * ui_scale_factor_val) * ui_animation_progress;
    ui_callback[3] = UI_FLOAT_INFINITY;
  }
  return return ui_widget_height_val != 0.0;
}

// 函数: uint8_t ui_system_calculate_float_operation;
uint8_t ui_system_calculate_float_operation(float *ui_callback,float *ui_event_type,float ui_event_data,float ui_event_flags)

{
  float ui_temp_float;
  float *in_R8;
  float *in_R9;
  float ui_xmm_register_primary_value;
  float in_XMM4_Da;
  float ui_temp_float;
  float in_XMM5_Da;
  float ui_temp_float;
  float ui_min_value;
  float ui_temp_float;
  float ui_max_value;
  float ui_register_a;
  
  float_value = in_XMM5_Da * ui_event_type[1] + in_XMM4_Da * *ui_event_type + ui_xmm_register_primary_value * ui_event_type[2];
  ui_event_data = 1.0 / ui_event_data;
  float_value = ui_event_type[4];
  float_value = ui_register_a * in_R8[1] + ui_event_flags * *in_R8 + ui_register_a * in_R8[2];
  float_value = ui_register_a * in_R9[1] + ui_register_a * *in_R9 + ui_register_a * in_R9[2];
  float_value = ui_event_type[5];
  float_value = ui_event_type[6];
  float_value = in_R8[4];
  float_value = ui_event_type[4];
  float_value = in_R8[4];
  *ui_callback = ((ui_min_value * ui_register_a - ui_event_type[5] * ui_register_a) * float_value +
              float_value * ui_max_value +
             (ui_event_type[5] * ui_register_a - ui_event_type[6] * ui_register_a) * float_value) * ui_event_data;
  ui_callback[1] = ((float_value * ui_register_a - float_value * ui_register_a) * float_value + float_value * ui_register_a +
               (float_value * float_value - float_value * ui_register_a) * float_value) * ui_event_data;
  ui_callback[2] = ((float_value * ui_register_a - float_value * ui_register_a) * float_value + float_value * ui_register_a +
               (float_value * ui_register_a - float_value * float_value) * float_value) * ui_event_data;
  ui_callback[3] = UI_FLOAT_INFINITY;
  return return 1;
}

/**
 * @brief UI系统初始化函数
 * 
 * 该函数负责初始化UI系统的核心组件，包括：
 * - 系统全局状态初始化
 * - 事件处理系统设置
 * - 渲染管线配置
 * - 输入处理器初始化
 * - 内存分配器设置
 * 
 * @return void 无返回值
 * 
 * 简化实现：保持原有代码逻辑，仅添加文档注释
 * 原本实现：完全重构初始化流程，优化启动性能和内存使用
 */
void ui_system_initialize(void)

{
  return ui_system_return_value;
}

/**
 * @brief UI事件处理函数
 * 
 * 该函数负责处理UI系统的事件，包括：
 * - 路径分隔符处理和文件路径解析
 * - 字符串操作和缓冲区管理
 * - 回调函数指针处理
 * - 事件数据验证和转换
 * 
 * @param ui_callback 回调函数指针
 * @param ui_event_type 事件类型标识符
 * @return void 无返回值
 * 
 * 简化实现：保持原有代码逻辑，仅添加文档注释
 * 原本实现：完全重构事件处理流程，优化性能和错误处理
 */
void ui_process_event_function(longlong ui_callback,longlong ui_event_type)

{
  char char_value;
  ulonglong ui_system_task_id;
  ulonglong ui_temp_ulong;
  void* *ui_callback_ptr;
  char *ui_char_pointer_secondary;
  
  ui_callback_ptr = &ui_system_global_data;
  if (*(void* **)(ui_callback + 8) != (void* *)UI_ZERO_OFFSET) {
    ui_callback_ptr = *(void* **)(ui_callback + 8);
  }
  ui_system_task_id = strrchr(ui_callback_ptr,UI_PATH_SEPARATOR);
  ui_callback_ptr = &ui_system_global_data;
  if (*(void* **)(ui_callback + 8) != (void* *)UI_ZERO_OFFSET) {
    ui_callback_ptr = *(void* **)(ui_callback + 8);
  }
  ui_loop_counter = strrchr(ui_callback_ptr,UI_PATH_SEPARATOR);
  if (ui_system_task_id == 0) {
    if (ui_loop_counter == 0) {
      ui_char_pointer_secondary = "";
      if (*(char **)(ui_callback + 8) != (char *)UI_ZERO_OFFSET) {
        ui_char_pointer_secondary = *(char **)(ui_callback + 8);
      }
      ui_event_type = ui_event_type - (longlong)char_ptr;
      do {
        char_value = *ui_char_pointer_secondary;
        char_ptr[ui_event_type] = char_value;
        ui_char_pointer_secondary = ui_char_pointer_secondary + 1;
      } while (char_value != UI_CHAR_NULL);
    }
    else {
      ui_char_pointer_secondary = (char *)(ui_loop_counter + 1);
      ui_event_type = ui_event_type - (longlong)char_ptr;
      do {
        char_value = *ui_char_pointer_secondary;
        char_ptr[ui_event_type] = char_value;
        ui_char_pointer_secondary = ui_char_pointer_secondary + 1;
      } while (char_value != UI_CHAR_NULL);
    }
  }
  else if (ui_loop_counter == 0) {
    ui_char_pointer_secondary = (char *)(ui_system_task_id + 1);
    ui_event_type = ui_event_type - (longlong)char_ptr;
    do {
      char_value = *ui_char_pointer_secondary;
      char_ptr[ui_event_type] = char_value;
      ui_char_pointer_secondary = ui_char_pointer_secondary + 1;
    } while (char_value != UI_CHAR_NULL);
  }
  else if (ui_loop_counter < ui_system_task_id) {
    ui_char_pointer_secondary = (char *)(ui_system_task_id + 1);
    ui_event_type = ui_event_type - (longlong)char_ptr;
    do {
      char_value = *ui_char_pointer_secondary;
      char_ptr[ui_event_type] = char_value;
      ui_char_pointer_secondary = ui_char_pointer_secondary + 1;
    } while (char_value != UI_CHAR_NULL);
  }
  else {
    ui_char_pointer_secondary = (char *)(ui_loop_counter + 1);
    ui_event_type = ui_event_type - (longlong)char_ptr;
    do {
      char_value = *ui_char_pointer_secondary;
      char_ptr[ui_event_type] = char_value;
      ui_char_pointer_secondary = ui_char_pointer_secondary + 1;
    } while (char_value != UI_CHAR_NULL);
  }
  return ui_system_return_value;
}

void ui_system_handle_event(uint64_t ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  ui_system_process_command(ui_callback,ui_config,ui_event_data,ui_event_flags,UI_BIT_MASK_32BIT_FULLfffffffe);
  return ui_system_return_value;
}

longlong ui_system_validate_callback(longlong ui_callback,longlong ui_event_type)

{
  uint64_t ui_system_event_id;
  
  ui_event_handler_process_callback();
  ui_event_handler_process_callback(ui_callback + UI_OFFSET_32,ui_event_type + UI_OFFSET_32);
  *(uint8_t *)(ui_callback + UI_BUFFER_SIZE_64) = *(uint8_t *)(ui_event_type + UI_BUFFER_SIZE_64);
  *(uint32_t *)(ui_callback + UI_OFFSET_68) = *(uint32_t *)(ui_event_type + UI_OFFSET_68);
  *(uint64_t *)(ui_callback + UI_OFFSET_72) = *(uint64_t *)(ui_event_type + UI_OFFSET_72);
  *(uint32_t *)(ui_callback + UI_OFFSET_80) = *(uint32_t *)(ui_event_type + UI_OFFSET_80);
  ui_event_handler_process_callback(ui_callback + UI_OFFSET_88,ui_event_type + UI_OFFSET_88);
  ui_event_handler_process_callback(ui_callback + UI_OFFSET_120,ui_event_type + UI_OFFSET_120);
  ui_system_event_id = *(uint64_t *)(ui_event_type + UI_OFFSET_160);
  *(uint64_t *)(ui_callback + UI_OFFSET_152) = *(uint64_t *)(ui_event_type + UI_OFFSET_152);
  *(uint64_t *)(ui_callback + UI_OFFSET_160) = ui_system_event_id;
  *(uint32_t *)(ui_callback + UI_OFFSET_168) = *(uint32_t *)(ui_event_type + UI_OFFSET_168);
  *(uint32_t *)(ui_callback + UI_OFFSET_172) = *(uint32_t *)(ui_event_type + UI_OFFSET_172);
  return return ui_callback;
}

ulonglong ui_system_execute_callback(longlong ui_callback,longlong ui_event_type,longlong ui_event_data)

{
  uint ui_system_event_id;
  uint ui_system_task_id;
  uint ui_loop_counter;
  ulonglong ui_temp_ulong;
  longlong ui_event_index;
  int *ui_int_pointer;
  uint ui_loop_counter;
  ulonglong ui_temp_ulong;
  uint ui_loop_counter;
  uint *ui_event_buffer;
  
  ui_event_index = *(int *)(ui_event_data + UI_OFFSET_60) + ui_event_type;
  *(uint32_t *)(ui_callback + UI_OFFSET_80) = *(uint32_t *)(ui_event_index + UI_OFFSET_80);
  *(uint32_t *)(ui_callback + UI_OFFSET_68) = *(uint32_t *)(ui_event_index + 8);
  if ((*(ushort *)(ui_event_index + UI_OFFSET_22) & UI_OFFSET_320) != 0) {
    *(uint8_t *)(ui_callback + UI_BUFFER_SIZE_64) = 1;
  }
  ui_loop_counter = (ulonglong)*(uint *)(ui_event_index + UI_OFFSET_188);
  ui_loop_counter = ui_loop_counter * UI_LARGE_MULTIPLIER;
  ui_loop_counter = (uint)((ui_loop_counter - ui_loop_counter / 7 >> 1) + ui_loop_counter / 7 >> 4);
  if (ui_loop_counter == 0) {
UI_LABEL_EVENT_QUEUE_PROCESS:
    ui_loop_counter = ui_temp_buffer ui_loop_counter & UI_BIT_MASK_32BIT_FULL UI_BIT_MASK_32BIT_FULLffffff00;
  }
  else {
    ui_loop_counter = 0;
    if (ui_loop_counter != 0) {
      ui_int_pointer = (int *)((ulonglong)*(uint *)(ui_event_index + UI_OFFSET_184) + 12 + ui_event_type);
      do {
        if ((ui_int_pointer[1] != 0) && (*ui_int_pointer == 2)) {
          ui_event_buffer = (uint *)((ulonglong)(uint)ui_int_pointer[2] + ui_event_type);
          if (*ui_event_buffer != UI_RSDS_SIGNATURE) goto UI_LABEL_EVENT_QUEUE_PROCESS;
          *(uint *)(ui_callback + UI_OFFSET_172) = ui_event_buffer[5];
          (**(ui_error_code **)(*(longlong *)(ui_callback + UI_OFFSET_120) + UI_EVENT_FLAG_OFFSET))
                    ((longlong *)(ui_callback + UI_OFFSET_120),ui_event_buffer + 6);
          ui_loop_counter = (ulonglong)*ui_event_buffer;
          *(uint *)(ui_callback + UI_OFFSET_168) = *ui_event_buffer;
          ui_system_event_id = ui_event_buffer[2];
          ui_system_task_id = ui_event_buffer[3];
          ui_loop_counter = ui_event_buffer[4];
          *(uint *)(ui_callback + UI_OFFSET_152) = ui_event_buffer[1];
          *(uint *)(ui_callback + UI_EVENT_ID_OFFSET) = ui_system_event_id;
          *(uint *)(ui_callback + UI_OFFSET_160) = ui_system_task_id;
          *(uint *)(ui_callback + UI_TEMP_VALUE_OFFSET) = ui_loop_counter;
        }
        ui_loop_counter = ui_loop_counter + 1;
        ui_int_pointer = ui_int_pointer + 7;
      } while (ui_temp_buffer < ui_loop_counter);
    }
    ui_loop_counter = CONCAT71((int7)(ui_temp_buffer >> 8),1);
  }
  return return ui_loop_counter;
}

/**
 * @brief 更新UI系统状态
 * 
 * 负责更新UI系统的整体状态，包括任务索引管理、回调处理、事件验证等。
 * 此函数是UI系统状态管理的核心，确保系统能够正确响应状态变化。
 * 
 * @param ui_callback 回调函数指针，用于状态更新后的通知处理
 * @return void 无返回值
 * 
 * 简化实现：将原始的ui_main_window_processor函数重命名为语义化名称，保持原有功能不变
 */
void ui_system_update_state(longlong ui_callback)

{
  short *pshort_value;
  uint64_t *ui_task_index_pointer;
  uint64_t *ui_callback_ptr;
  void* *ui_callback_ptr;
  uint64_t *ui_callback_ptr;
  ulonglong ui_temp_ulong;
  uint8_t ui_stack_array [32];
  short **pui_stack_temp_short_pointer;
  short *ui_stack_main_short_pointer;
  uint64_t ui_stack_config_mask_value;
  uint8_t ui_stack_array [16];
  longlong ui_stack_parameter_buffer [4];
  uint8_t ui_stack_array [8];
  longlong ui_stack_extended_buffer;
  uint ui_stack_validation_flag;
  uint32_t ui_stack_handler_index;
  short *ui_stack_backup_short_pointer;
  uint8_t ui_stack_array [272];
  ulonglong ui_stack_control_flag;
  
  ui_stack_config_mask_value = UI_BIT_MASK_32BIT_FULLfffffffe;
  ui_stack_control_flag = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_callback_ptr = &ui_system_global_data;
  if (*(void* **)(ui_callback + 8) != (void* *)UI_ZERO_OFFSET) {
    ui_callback_ptr = *(void* **)(ui_callback + 8);
  }
  pshort_value = (short *)LoadLibraryA(ui_callback_ptr);
  if (pshort_value != (short *)UI_ZERO_OFFSET) {
    ui_callback_ptr = (uint64_t *)&ui_system_global_data;
    ui_task_index_pointer = ui_config;
    ui_stack_main_short_pointer = pshort_value;
    if (ui_config != (uint64_t *)UI_ZERO_OFFSET) {
      do {
        if ((short *)ui_task_index_pointer[4] < pshort_value) {
          ui_callback_ptr = (uint64_t *)*ui_task_index_pointer;
        }
        else {
          ui_callback_ptr = (uint64_t *)ui_task_index_pointer[1];
          ui_callback_ptr = ui_task_index_pointer;
        }
        ui_task_index_pointer = ui_callback_ptr;
      } while (ui_callback_ptr != (uint64_t *)UI_ZERO_OFFSET);
      if ((ui_callback_ptr != (uint64_t *)&ui_system_global_data) && ((short *)ui_callback_ptr[4] <= pshort_value))
      goto UI_LABEL_EVENT_HANDLER_START;
    }
    ui_process_event_function(ui_callback,ui_stack_array);
    ui_event_handler_cleanup(ui_stack_parameter_buffer);
    ui_stack_backup_short_pointer = pshort_value;
    (**(ui_error_code **)(ui_stack_parameter_buffer[0] + UI_EVENT_FLAG_OFFSET))(ui_stack_parameter_buffer,ui_stack_array);
    ui_stack_validation_flag = *(uint *)(ui_callback + UI_EVENT_FLAG_OFFSET);
    ui_loop_counter = (ulonglong)ui_stack_validation_flag;
    if (*(longlong *)(ui_callback + 8) != 0) {
      ui_event_handler_initialize(ui_stack_array,ui_loop_counter);
    }
    if (ui_stack_validation_flag != 0) {
      memcpy(ui_stack_extended_buffer,*(uint64_t *)(ui_callback + 8),ui_loop_counter);
    }
    if (ui_stack_extended_buffer != 0) {
      *(uint8_t *)(ui_loop_counter + ui_stack_extended_buffer) = 0;
    }
    ui_stack_handler_index = *(uint32_t *)(ui_callback + UI_OFFSET_28);
    if (*ui_stack_backup_short_pointer == UI_MZ_SIGNATURE) {
      ui_system_execute_callback(ui_stack_parameter_buffer,ui_stack_backup_short_pointer,ui_stack_backup_short_pointer);
    }
    ui_callback_ptr = (uint64_t *)&ui_system_global_data;
    ui_task_index_pointer = ui_config;
    while (ui_task_index_pointer != (uint64_t *)UI_ZERO_OFFSET) {
      if ((short *)ui_task_index_pointer[4] < pshort_value) {
        ui_task_index_pointer = (uint64_t *)*ui_task_index_pointer;
      }
      else {
        ui_callback_ptr = ui_task_index_pointer;
        ui_task_index_pointer = (uint64_t *)ui_task_index_pointer[1];
      }
    }
    if ((ui_callback_ptr == (uint64_t *)&ui_system_global_data) || (pshort_value < (short *)ui_callback_ptr[4])) {
      pui_stack_temp_short_pointer = &ui_stack_main_short_pointer;
      ui_callback_ptr = (uint64_t *)ui_system_process_event_queue(ui_callback_ptr,ui_stack_array);
      ui_callback_ptr = (uint64_t *)*ui_callback_ptr;
    }
    ui_system_validate_callback(ui_callback_ptr + 5,ui_stack_parameter_buffer);
    ui_event_handler_register_callback(ui_stack_parameter_buffer);
  }
UI_LABEL_EVENT_HANDLER_START:
  RenderUIComponent(ui_stack_control_flag ^ (ulonglong)ui_stack_array);
}

void ui_system_flush_queue(void)

{
  int ui_temp_state_value;
  uint32_t ui_system_task_id;
  uint64_t ui_loop_counter;
  longlong ui_event_index;
  uint8_t ui_stack_array [128];
  uint64_t ui_stack_variable_mask_primary;
  uint64_t ui_stack_variable_base_address;
  uint8_t ui_stack_array [748];
  ulonglong ui_stack_buffer_mask;
  
  ui_stack_variable_mask_primary = UI_BIT_MASK_32BIT_FULLfffffffe;
  ui_stack_buffer_mask = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_stack_variable_base_address = UI_SYSTEM_BASE_ADDRESS;
  ui_temp_state_value = _Mtx_lock(UI_SYSTEM_BASE_ADDRESS);
  if (ui_temp_state_value != 0) {
    __Throw_C_error_std__YAXH_Z(ui_temp_state_value);
  }
  ui_loop_counter = GetModuleHandleA(0);
  ui_system_task_id = GetProcessId(ui_loop_counter);
  ui_event_index = CreateToolhelp32Snapshot(UI_SNAPSHOT_CREATE_FLAGS,ui_system_task_id);
  while( true ) {
    if (ui_event_index != -1) {
      memset(ui_stack_array,0,UI_STACK_SIZE_564);
    }
    ui_temp_state_value = GetLastError();
    if (ui_temp_state_value != UI_SNAPSHOT_CREATE_FLAGS) break;
    ui_event_index = CreateToolhelp32Snapshot(UI_SNAPSHOT_CREATE_FLAGS,ui_system_task_id);
  }
  ui_temp_state_value = _Mtx_unlock(UI_SYSTEM_BASE_ADDRESS);
  if (ui_temp_state_value != 0) {
    __Throw_C_error_std__YAXH_Z(ui_temp_state_value);
  }
  RenderUIComponent(ui_stack_buffer_mask ^ (ulonglong)ui_stack_array);
}

void ui_system_dispatch_event(uint64_t ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  ui_system_process_command(ui_callback,ui_config,ui_event_data,ui_event_flags,UI_BIT_MASK_32BIT_FULLfffffffe);
  return ui_system_return_value;
}

void ui_system_process_command(uint64_t ui_callback,uint64_t *ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  if (ui_event_type != (uint64_t *)UI_ZERO_OFFSET) {
    ui_system_process_command(&ui_system_global_data,*ui_event_type,ui_event_data,ui_event_flags,UI_BIT_MASK_32BIT_FULLfffffffe);
    ui_event_handler_register_callback(ui_event_type + 5);
    ui_event_handler_process_event(ui_event_type);
  }
  return ui_system_return_value;
}

uint64_t *
/**
 * @brief 处理UI系统事件队列
 * 
 * 从UI事件队列中取出事件并进行处理，包括事件分发、状态更新和回调执行。
 * 这是UI系统的核心事件处理函数，负责管理所有UI事件的生命周期。
 * 
 * @param ui_callback 回调函数指针
 * @param ui_event_type 事件类型指针
 * @param ui_event_data 事件数据
 * @param ui_event_flags 事件标志指针
 * @param ui_parameter_value 参数值指针
 * @return 处理结果状态码
 */

ui_system_process_event_queue(uint64_t ui_callback,uint64_t *ui_event_type,uint64_t ui_event_data,longlong *ui_event_flags,
             ulonglong *ui_parameter_value)

{
  longlong *ui_long_counter_ptr;
  uint64_t *ui_task_index_ptr;
  ulonglong ui_temp_ulong;
  longlong ui_event_index;
  uint64_t *ui_callback_ptr;
  uint32_t ui_temp_size;
  bool ui_bool_result;
  
  if ((ui_event_flags == ui_config) || (ui_event_flags == (longlong *)&ui_system_global_data)) {
    if ((ui_config != 0) && (ui_event_flags = ui_config, (ulonglong)ui_config[4] < *ui_parameter_value)
       ) goto UI_LABEL_EVENT_DISPATCH_READY;
  }
  else {
    ui_memory_allocation_ptr = (longlong *)ui_system_allocate_long_memory(ui_event_flags);
    if (((ulonglong)ui_event_flags[4] < *ui_parameter_value) && (*ui_parameter_value < (ulonglong)ui_memory_allocation_ptr[4])) {
      if (*ui_event_flags != 0) {
        ui_event_flags = ui_memory_allocation_ptr;
      }
UI_LABEL_EVENT_DISPATCH_READY:
      if (ui_event_flags != (longlong *)UI_ZERO_OFFSET) {
        ui_system_handle_task();
        return return ui_event_type;
      }
    }
  }
  ui_callback_ptr = (uint64_t *)&ui_system_global_data;
  ui_bool_result = true;
  if (ui_config != (uint64_t *)UI_ZERO_OFFSET) {
    ui_task_index_pointer = ui_config;
    do {
      ui_callback_ptr = ui_task_index_pointer;
      ui_bool_result = *ui_parameter_value < (ulonglong)ui_callback_ptr[4];
      if (ui_bool_result) {
        ui_task_index_pointer = (uint64_t *)ui_callback_ptr[1];
      }
      else {
        ui_task_index_pointer = (uint64_t *)*ui_callback_ptr;
      }
    } while (ui_task_index_pointer != (uint64_t *)UI_ZERO_OFFSET);
  }
  ui_task_index_pointer = ui_callback_ptr;
  if (ui_bool_result) {
    if (ui_callback_ptr == ui_config) {
      ui_loop_counter = *ui_parameter_value;
      goto UI_LABEL_EVENT_PROCESS_COMPLETE;
    }
    ui_task_index_pointer = (uint64_t *)ui_system_allocate_uint64_memory(ui_callback_ptr);
  }
  ui_loop_counter = *ui_parameter_value;
  if (ui_loop_counter <= (ulonglong)ui_task_index_pointer[4]) {
    *ui_event_type = ui_task_index_pointer;
    return return ui_event_type;
  }
UI_LABEL_EVENT_PROCESS_COMPLETE:
  if ((ui_callback_ptr == (uint64_t *)&ui_system_global_data) || (ui_loop_counter < (ulonglong)ui_callback_ptr[4])) {
    ui_loop_counter = 0;
  }
  else {
    ui_loop_counter = 1;
  }
  ui_event_index = ui_event_dispatcher(ui_config,UI_SHUFFLE_MASK_D8,ui_system_global_data);
  *(ulonglong *)(ui_event_index + UI_OFFSET_32) = *ui_parameter_value;
  ui_event_handler_cleanup(ui_event_index + UI_CALLBACK_HANDLER_OFFSET);
  ui_system_update_widget_visibility_state(ui_event_index,ui_callback_ptr,&ui_system_global_data,ui_loop_counter);
}

void ui_system_handle_task(uint64_t ui_callback,uint64_t ui_event_type,void* *ui_event_data,uint64_t ui_event_flags,
                  ulonglong *ui_parameter_value)

{
  longlong ui_long_counter;
  uint32_t ui_system_task_id;
  
  if ((((char)ui_event_flags == UI_CHAR_NULL) && (ui_event_data != &ui_system_global_data)) &&
     (*(ulonglong *)(ui_event_data + UI_OFFSET_32) <= *ui_parameter_value)) {
    ui_system_task_id = 1;
  }
  else {
    ui_system_task_id = 0;
  }
  ui_long_counter = ui_event_dispatcher(ui_config,UI_SHUFFLE_MASK_D8,ui_system_global_data,ui_event_flags,UI_BIT_MASK_32BIT_FULLfffffffe);
  *(ulonglong *)(ui_long_counter + UI_OFFSET_32) = *ui_parameter_value;
  ui_event_handler_cleanup(ui_long_counter + UI_CALLBACK_HANDLER_OFFSET);
  ui_system_update_widget_visibility_state(ui_long_counter,ui_event_data,&ui_system_global_data,ui_system_task_id);
}

void ui_system_release_resources(longlong ui_callback)

{
  *(uint64_t *)(ui_callback + UI_STACK_SIZE_128) = &ui_widget_manager;
  if (*(longlong *)(ui_callback + UI_OFFSET_136) != 0) {
    ui_event_handler_process_event();
  }
  *(uint64_t *)(ui_callback + UI_OFFSET_136) = 0;
  *(uint32_t *)(ui_callback + UI_OFFSET_152) = 0;
  *(uint64_t *)(ui_callback + UI_STACK_SIZE_128) = &ui_widget_manager;
  *(uint64_t *)(ui_callback + UI_WIDGET_CREATE_CALLBACK_OFFSET) = &ui_widget_manager;
  if (*(longlong *)(ui_callback + UI_OFFSET_104) != 0) {
    ui_event_handler_process_event();
  }
  *(uint64_t *)(ui_callback + UI_OFFSET_104) = 0;
  *(uint32_t *)(ui_callback + UI_OFFSET_120) = 0;
  *(uint64_t *)(ui_callback + UI_WIDGET_CREATE_CALLBACK_OFFSET) = &ui_widget_manager;
  *(uint64_t *)(ui_callback + UI_CALLBACK_HANDLER_OFFSET) = &ui_widget_manager;
  if (*(longlong *)(ui_callback + UI_MEMORY_ALLOC_SIZE) != 0) {
    ui_event_handler_process_event();
  }
  *(uint64_t *)(ui_callback + UI_MEMORY_ALLOC_SIZE) = 0;
  *(uint32_t *)(ui_callback + UI_BUFFER_SIZE_64) = 0;
  *(uint64_t *)(ui_callback + UI_CALLBACK_HANDLER_OFFSET) = &ui_widget_manager;
  *(uint64_t *)(ui_callback + 8) = &ui_widget_manager;
  if (*(longlong *)(ui_callback + UI_EVENT_FLAG_OFFSET) != 0) {
    ui_event_handler_process_event();
  }
  *(uint64_t *)(ui_callback + UI_EVENT_FLAG_OFFSET) = 0;
  *(uint32_t *)(ui_callback + UI_OFFSET_32) = 0;
  *(uint64_t *)(ui_callback + 8) = &ui_widget_manager;
  return ui_system_return_value;
}

uint64_t * ui_system_get_widget(uint64_t *ui_callback,ulonglong ui_event_type)

{
  *ui_callback = &ui_focus_manager;
  if ((ui_event_type & 1) != 0) {
    ui_memory_free(ui_callback,UI_OFFSET_220);
  }
  return return ui_callback;
}

void pass_managed_library_callback_method_pointers(uint64_t ui_callback)

{
                    // UI_MANAGED_LIBRARY_CALLBACK_OFFSET  36  pass_managed_library_callback_method_pointers
                    // WARNING: Could not recover jumptable at 0x00018065189d. Too many branches
                    // WARNING: Treating indirect jump as call
  (**(ui_error_code **)(*ui_config + UI_BUFFER_SIZE_64))(ui_config,ui_callback);
  return ui_system_return_value;
}

void pass_controller_methods(uint64_t ui_callback)

{
                    // UI_CONTROLLER_METHODS_OFFSET  34  pass_controller_methods
  ui_config = ui_callback;
  return ui_system_return_value;
}

void pass_managed_initialize_method_pointer(uint64_t ui_callback)

{
                    // UI_MANAGED_INIT_OFFSET  35  pass_managed_initialize_method_pointer
  ui_config = ui_callback;
  return ui_system_return_value;
}

uint64_t ui_system_set_widget_property(uint64_t ui_callback,ulonglong ui_event_type)

{
  ui_system_update_display();
  if ((ui_event_type & 1) != 0) {
    ui_memory_free(ui_callback,400);
  }
  return return ui_callback;
}

void ui_system_update_display(uint64_t *ui_callback)

{
  *ui_callback = &ui_tooltip_handler;
  ui_config = 0;
  if (ui_callback[UI_WIDGET_ENABLED_FLAG] != 0) {
    ui_event_handler_process_event();
  }
  ui_callback[1] = &ui_focus_manager;
  return ui_system_return_value;
}

void ui_system_handle_mouse_event(longlong ui_callback,uint64_t ui_event_type)

{
  uint64_t ui_stack_unsigned_array [3];
  
  ui_stack_unsigned_array[0] = ui_event_type;
  ui_system_memory_operation(ui_callback + UI_OFFSET_228,ui_stack_unsigned_array);
  return ui_system_return_value;
}

void ui_system_process_keyboard_event(longlong ui_callback,longlong *ui_event_data_buffer_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  void* *ui_event_buffer;
  void* *ui_task_index_pointer;
  longlong *ui_stack_variable_extended_ptr_long;
  void* *ui_event_data_pointer_secondary;
  void* *ui_event_flag_pointer_primary;
  uint32_t ui_stack_buffer_mask;
  void* *pui_stack_unsigned_data_primary;
  void* *ui_pointer_stack_variable_offset;
  
  ui_stack_variable_extended_ptr_long = ui_event_type;
  ui_system_memory_operation(ui_callback + UI_OFFSET_228,&ui_stack_variable_extended_ptr_long,ui_event_data,ui_event_flags,UI_BIT_MASK_32BIT_FULLfffffffe);
  (**(ui_error_code **)(*ui_event_type + 8))(ui_event_type,&pui_stack_unsigned_data_primary);
  (**(ui_error_code **)(*ui_event_type + UI_EVENT_FLAG_OFFSET))(ui_event_type,&ui_event_data_pointer_secondary);
  ui_task_index_pointer = &ui_system_global_data;
  if (ui_event_flag_pointer_primary != (void* *)UI_ZERO_OFFSET) {
    ui_task_index_pointer = ui_event_flag_pointer_primary;
  }
  ui_event_buffer = &ui_system_global_data;
  if (ui_pointer_stack_variable_offset != (void* *)UI_ZERO_OFFSET) {
    ui_event_buffer = ui_pointer_stack_variable_offset;
  }
  (**(ui_error_code **)(ui_config + UI_SYSTEM_CONFIG_OFFSET))(ui_event_buffer,ui_task_index_pointer);
  (**(ui_error_code **)*ui_event_type)(ui_event_type);
  ui_event_data_pointer_secondary = &ui_widget_manager;
  if (ui_event_flag_pointer_primary != (void* *)UI_ZERO_OFFSET) {
    ui_event_handler_process_event();
  }
  ui_event_flag_pointer_primary = (void* *)UI_ZERO_OFFSET;
  ui_stack_buffer_mask = 0;
  ui_event_data_pointer_secondary = &ui_widget_manager;
  pui_stack_unsigned_data_primary = &ui_widget_manager;
  if (ui_pointer_stack_variable_offset != (void* *)UI_ZERO_OFFSET) {
    ui_event_handler_process_event();
  }
  return ui_system_return_value;
}

void ui_system_handle_focus_change(longlong ui_callback,longlong ui_event_type,longlong ui_event_data)

{
  ui_error_code *ui_system_function_pointer;
  void* *ui_task_index_pointer;
  void* *ui_callback_ptr;
  
  ui_system_function_pointer = ui_config;
  *(uint8_t *)(ui_callback + UI_FLAG_BYTE_9) = 1;
  if (ui_system_function_pointer == (ui_error_code *)UI_ZERO_OFFSET) {
    ui_system_thread_initialize(&ui_system_thread_context);
  }
  else {
    ui_task_index_pointer = &ui_system_global_data;
    if (*(void* **)(ui_event_type + 8) != (void* *)UI_ZERO_OFFSET) {
      ui_task_index_pointer = *(void* **)(ui_event_type + 8);
    }
    ui_callback_ptr = &ui_system_global_data;
    if (*(void* **)(ui_event_data + 8) != (void* *)UI_ZERO_OFFSET) {
      ui_callback_ptr = *(void* **)(ui_event_data + 8);
    }
    (*ui_system_function_pointer)(ui_task_index_pointer,ui_callback_ptr,_ui_system_clipboard_info,_ui_system_timer_info);
  }
  if (ui_config == (ui_error_code *)UI_ZERO_OFFSET) {
    ui_system_process_initialize(&ui_system_process_context);
    if (ui_config == (ui_error_code *)UI_ZERO_OFFSET) {
      ui_system_thread_initialize(&ui_system_thread_context);
      goto UI_LABEL_EVENT_VALIDATION_DONE;
    }
  }
  (*ui_config)();
UI_LABEL_EVENT_VALIDATION_DONE:
  *(longlong *)(ui_callback + UI_EVENT_FLAG_OFFSET) = ui_callback;
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(0,ui_system_unload_resources);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(1,ui_system_load_resources);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(2,&ui_system_input_device);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(3,ui_system_cleanup_memory);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(4,&ui_system_audio_device);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(5,&ui_system_main_window);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(6,&ui_system_network_device);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(7,&ui_system_audio_context);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(8,ui_update_widget_function);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(9,ui_destroy_widget_function);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(10,&ui_system_input_context);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(ELEVEN_VALUE,ui_create_widget_function);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(12,&ui_system_render_device);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(THIRTEEN_VALUE,ui_initialize_window_function);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(ui_component_angle_offset,&ui_system_graphics_context);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(UI_MAX_EVENT_FLAGS,&ui_system_resource_context);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(UI_EVENT_FLAG_OFFSET,ui_process_event_functions);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(UI_RESOURCE_LOAD_TYPE,ui_render_widget_function);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(UI_NETWORK_RESOURCE_TYPE,&ui_system_network_context);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(UI_RESOURCE_TYPE_CONFIG,ui_system_handle_input);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(UI_SHIFT_AMOUNT_20,ui_system_update_layout);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(UI_LAYOUT_RESOURCE_TYPE,ui_system_animate_widget);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(UI_OFFSET_22,ui_system_validate_layout);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(UI_RENDER_RESOURCE_TYPE,ui_system_optimize_render);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(UI_SNAPSHOT_CREATE_FLAGS,ui_system_callback_handler);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(UI_WIDGET_RESOURCE_TYPE,&ui_system_memory_context);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(UI_MEMORY_RESOURCE_TYPE,&ui_system_global_context);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(UI_GUARD_CHECK_TYPE,_guard_check_icall);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(UI_OFFSET_28,_guard_check_icall);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(UI_SYSTEM_CALLBACK_TYPE,UI_CALLBACK_TYPE_ID);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(UI_OFFSET_30,&ui_widget_manager);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(UI_GUARD_CHECK_TYPE_2,_guard_check_icall);
  (**(ui_error_code **)(ui_callback + UI_OFFSET_120))(UI_OFFSET_32,_guard_check_icall);
  (**(ui_error_code **)(ui_callback + UI_STACK_SIZE_128))();
                    // WARNING: Could not recover jumptable at 0x000180651d0e. Too many branches
                    // WARNING: Treating indirect jump as call
  (**(ui_error_code **)(ui_callback + UI_OFFSET_88))();
  return ui_system_return_value;
}

void ui_create_window_function(longlong ui_callback)

{
  ulonglong ui_system_event_id;
  uint ui_system_task_id;
  ulonglong ui_temp_ulong;
  
  ui_system_event_id = 0;
  ui_loop_counter = ui_system_event_id;
  if (*(longlong *)(ui_callback + UI_RENDER_RESOURCE_TYPE0) - *(longlong *)(ui_callback + UI_OFFSET_228) >> 3 == 0) {
    *(uint8_t *)(ui_callback + UI_FLAG_BYTE_8) = 1;
    return ui_system_return_value;
  }
  do {
    (**(ui_error_code **)**(uint64_t **)(ui_system_event_id + *(longlong *)(ui_callback + UI_OFFSET_228)))();
    ui_system_event_id = ui_system_event_id + 8;
    ui_system_task_id = (int)ui_loop_counter + 1;
    ui_loop_counter = (ulonglong)ui_system_task_id;
  } while ((ulonglong)(longlong)(int)ui_system_task_id <
           (ulonglong)(*(longlong *)(ui_callback + UI_RENDER_RESOURCE_TYPE0) - *(longlong *)(ui_callback + UI_OFFSET_228) >> 3));
  *(uint8_t *)(ui_callback + UI_FLAG_BYTE_8) = 1;
  return ui_system_return_value;
}

void ui_system_initialize_thread(void)

{
  longlong ui_widget_base;
  ulonglong ui_system_event_id;
  uint ui_system_register;
  
  ui_system_event_id = (ulonglong)ui_system_register;
  do {
    (**(ui_error_code **)**(uint64_t **)(ui_system_event_id + *(longlong *)(ui_widget_base + UI_OFFSET_228)))();
    ui_system_event_id = ui_system_event_id + 8;
    ui_system_register = ui_system_register + 1;
  } while ((ulonglong)(longlong)(int)ui_system_register <
           (ulonglong)(*(longlong *)(ui_widget_base + UI_RENDER_RESOURCE_TYPE0) - *(longlong *)(ui_widget_base + UI_OFFSET_228) >> 3));
  *(uint8_t *)(ui_widget_base + UI_FLAG_BYTE_8) = 1;
  return ui_system_return_value;
}

void ui_system_start_animation(longlong ui_callback)

{
  *(uint8_t *)(ui_callback + UI_FLAG_BYTE_8) = 1;
  return ui_system_return_value;
}

uint64_t ui_system_create_animation(longlong ui_callback,uint64_t ui_event_type,uint32_t ui_event_data)

{
  longlong ui_long_counter;
  void* *ui_task_index_pointer;
  
  ui_long_counter = (**(ui_error_code **)(ui_callback + UI_WIDGET_ANIMATION_CALLBACK_OFFSET))(ui_event_data);
  ui_task_index_pointer = &ui_system_global_data;
  if (*(void* **)(ui_long_counter + 8) != (void* *)UI_ZERO_OFFSET) {
    ui_task_index_pointer = *(void* **)(ui_long_counter + 8);
  }
  ui_system_data_processor(ui_event_type,ui_task_index_pointer);
  return return ui_event_type;
}

ulonglong ui_system_update_animation(longlong ui_callback,longlong ui_event_type,longlong ui_event_data,uint64_t ui_event_flags)

{
  ulonglong ui_callback_ptr;
  longlong ui_long_counter;
  longlong ui_event_index;
  void* *ui_callback_ptr;
  ulonglong ui_temp_ulong;
  uint64_t ui_loop_counter;
  void* *pui_stack_unsigned_data_primary;
  longlong ui_stack_parameter_long;
  uint ui_stack_extended_data_size;
  uint32_t ui_stack_extended_data_small;
  
  ui_loop_counter = UI_BIT_MASK_32BIT_FULLfffffffe;
  if (*(int *)(ui_event_data + UI_EVENT_FLAG_OFFSET) == 0) {
    return return ui_callback_ptr & UI_BIT_MASK_32BIT_FULLffffff00;
  }
  ui_callback_ptr = &ui_system_global_data;
  if (*(void* **)(ui_event_data + 8) != (void* *)UI_ZERO_OFFSET) {
    ui_callback_ptr = *(void* **)(ui_event_data + 8);
  }
  ui_long_counter = (**(ui_error_code **)(ui_callback + UI_WIDGET_STOP_CALLBACK_OFFSET))(ui_callback_ptr);
  ui_callback_ptr = &ui_system_global_data;
  if (*(void* **)(ui_long_counter + 8) != (void* *)UI_ZERO_OFFSET) {
    ui_callback_ptr = *(void* **)(ui_long_counter + 8);
  }
  ui_system_data_processor(&pui_stack_unsigned_data_primary,ui_callback_ptr);
  if (ui_stack_extended_data_size == 7) {
    ui_long_counter = 0;
    do {
      ui_event_index = ui_long_counter + 1;
      if (*(char *)(ui_stack_parameter_long + ui_long_counter) != (&ui_system_event_context)[ui_long_counter]) goto UI_LABEL_EVENT_CONTEXT_MATCH;
      ui_long_counter = ui_event_index;
    } while (ui_event_index != 8);
    ui_loop_counter = 0;
  }
  else {
UI_LABEL_EVENT_CONTEXT_MATCH:
    if (ui_stack_parameter_long != 0) {
      ui_event_handler_initialize(ui_event_type,ui_stack_extended_data_size);
    }
    if (ui_stack_extended_data_size != 0) {
      memcpy(*(uint64_t *)(ui_event_type + 8),ui_stack_parameter_long,(ulonglong)ui_stack_extended_data_size,ui_event_flags,ui_loop_counter);
    }
    *(uint32_t *)(ui_event_type + UI_EVENT_FLAG_OFFSET) = 0;
    if (*(longlong *)(ui_event_type + 8) != 0) {
      *(uint8_t *)((ulonglong)ui_stack_extended_data_size + *(longlong *)(ui_event_type + 8)) = 0;
    }
    *(uint32_t *)(ui_event_type + UI_OFFSET_28) = ui_stack_extended_data_small;
    ui_loop_counter = 1;
  }
  pui_stack_unsigned_data_primary = &ui_widget_manager;
  if (ui_stack_parameter_long != 0) {
    ui_event_handler_process_event();
  }
  return return ui_loop_counter;
}

uint64_t ui_system_stop_animation(longlong ui_callback,longlong ui_event_type)

{
  void* *ui_event_buffer;
  
  ui_event_buffer = &ui_system_global_data;
  if (*(void* **)(ui_event_type + 8) != (void* *)UI_ZERO_OFFSET) {
    ui_event_buffer = *(void* **)(ui_event_type + 8);
  }
  (**(ui_error_code **)(ui_callback + UI_RESOURCE_LOAD_TYPE0))(ui_event_buffer);
  return return 1;
}

uint64_t ui_system_pause_animation(longlong ui_callback,longlong ui_event_type)

{
  void* *ui_event_buffer;
  
  ui_event_buffer = &ui_system_global_data;
  if (*(void* **)(ui_event_type + 8) != (void* *)UI_ZERO_OFFSET) {
    ui_event_buffer = *(void* **)(ui_event_type + 8);
  }
  (**(ui_error_code **)(ui_callback + UI_RESOURCE_LOAD_TYPE8))(ui_event_buffer);
  return return 1;
}

int * ui_system_get_animation_state(longlong ui_callback,int *ui_event_type,longlong *ui_event_buffer,uint64_t ui_event_flags)

{
  void* *ui_event_buffer;
  int ui_result_status;
  longlong ui_event_index;
  uint ui_loop_counter;
  ulonglong ui_temp_ulong;
  void* *ui_callback_ptr;
  uint32_t ui_loop_counter;
  uint64_t ui_loop_counter;
  
  ui_loop_counter = UI_BIT_MASK_32BIT_FULLfffffffe;
  ui_loop_counter = 0;
  ui_result_status = (**(ui_error_code **)(ui_callback + UI_WIDGET_CREATE_CALLBACK_OFFSET))(ui_event_data[1] - *ui_event_data >> 5);
  *ui_event_type = ui_result_status;
  if ((ui_result_status != 0) && (ui_config != 0)) {
    (**(ui_error_code **)(ui_config + UI_MEMORY_ALLOC_SIZE))(ui_result_status);
  }
  ui_loop_counter = 1;
  ui_event_index = *ui_event_data;
  ui_result_status = ui_temp_buffer;
  if (ui_event_data[1] - ui_event_index >> 5 != 0) {
    do {
      ui_event_buffer = *(void* **)(ui_event_index + 8 + ui_loop_counter);
      ui_callback_ptr = &ui_system_global_data;
      if (ui_event_buffer != (void* *)UI_ZERO_OFFSET) {
        ui_callback_ptr = ui_event_buffer;
      }
      (**(ui_error_code **)(ui_callback + UI_NETWORK_RESOURCE_TYPE8))(*ui_event_type,ui_loop_counter,ui_callback_ptr,ui_event_flags,ui_loop_counter,ui_loop_counter);
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = (ulonglong)ui_loop_counter;
      ui_event_index = *ui_event_data;
      ui_loop_counter = ui_loop_counter + UI_OFFSET_32;
    } while ((ulonglong)(longlong)(int)ui_loop_counter < (ulonglong)(ui_event_data[1] - ui_event_index >> 5));
  }
  return return ui_event_type;
}

uint64_t get_ftdn_managed_interface(void)

{
                    // UI_FTDN_INTERFACE_OFFSET  33  get_ftdn_managed_interface
  return return ui_config;
}

void ui_system_process_layout(longlong *ui_callback_context,longlong ui_event_type)

{
  uint32_t *ui_event_buffer;
  uint32_t ui_system_task_id;
  uint32_t ui_loop_counter;
  uint64_t *ui_callback_ptr;
  int ui_result_status;
  ulonglong ui_temp_ulong;
  uint64_t *ui_event_buffer;
  longlong long_counter_one;
  longlong long_counter_two;
  uint64_t *ui_event_buffer;
  longlong ui_window_handle;
  uint64_t *ui_event_buffer;
  uint16_t ui_stack_unsigned_array [4];
  ulonglong ui_stack_event_parameter;
  uint64_t ui_stack_event_parameter;
  uint64_t *ui_stack_pointer_buffer_start;
  uint64_t *ui_stack_pointer_buffer_end;
  uint64_t ui_stack_extended_data_primary;
  uint32_t ui_stack_extended_buffer_size;
  void* *ui_stack_pointer_data_buffer;
  longlong ui_stack_parameter_long;
  uint32_t ui_stack_operation_flag;
  uint64_t *ui_stack_extended_pointer;
  uint64_t *ui_event_data_pointer_secondary;
  uint64_t ui_stack_validation_mask;
  uint32_t ui_stack_standard_buffer_size;
  
  if (*(int *)(ui_event_type + UI_EVENT_FLAG_OFFSET) != 0) {
    ui_stack_pointer_buffer_start = (uint64_t *)UI_ZERO_OFFSET;
    ui_stack_pointer_buffer_end = (uint64_t *)UI_ZERO_OFFSET;
    ui_stack_extended_data_primary = 0;
    ui_stack_extended_buffer_size = 3;
    ui_stack_unsigned_array[0] = 10;
    if (*(longlong *)(ui_event_type + 8) != 0) {
      ui_system_buffer_manager(ui_event_type,&ui_stack_pointer_buffer_start,ui_stack_unsigned_array);
    }
    ui_loop_counter = (longlong)ui_stack_pointer_buffer_end - (longlong)ui_stack_pointer_buffer_start >> 5;
    ui_event_buffer = ui_stack_pointer_buffer_start;
    ui_callback_ptr = ui_stack_pointer_buffer_end;
    if ((int)ui_loop_counter != 0) {
      ui_loop_counter = ui_temp_buffer ui_loop_counter & UI_BIT_MASK_32BIT_FULL UI_BIT_MASK_32BIT_FULL;
      do {
        ui_stack_extended_pointer = (uint64_t *)UI_ZERO_OFFSET;
        ui_event_data_pointer_secondary = (uint64_t *)UI_ZERO_OFFSET;
        ui_stack_validation_mask = 0;
        ui_stack_standard_buffer_size = 3;
        ui_stack_unsigned_array[0] = UI_BUFFER_SIZE_64;
        ui_stack_event_parameter = ui_loop_counter;
        if (ui_event_buffer[1] != 0) {
          ui_system_buffer_manager(ui_event_buffer,&ui_stack_extended_pointer,ui_stack_unsigned_array);
        }
        ui_callback_ptr = ui_event_data_pointer_secondary;
        ui_callback_ptr = ui_stack_extended_pointer;
        ui_event_buffer = ui_stack_extended_pointer;
        if (((longlong)ui_event_data_pointer_secondary - (longlong)ui_stack_extended_pointer & UI_BIT_MASK_32BIT_FULLffffffe0U) == UI_WIDGET_CREATE_CALLBACK_OFFSET) {
          ui_system_memory_allocator(&ui_stack_pointer_data_buffer,ui_stack_extended_pointer);
          ui_result_status = atoi(ui_callback_ptr[5]);
          ui_result_status = atoi(ui_callback_ptr[9]);
          ui_stack_event_parameter = ui_system_update_state(&ui_stack_pointer_data_buffer);
          ui_event_buffer = (uint64_t *)ui_callback[1];
          if (ui_event_buffer < (uint64_t *)ui_callback[2]) {
            *ui_event_buffer = ui_stack_event_parameter;
            ui_event_buffer[1] = (longlong)ui_result_status;
            ui_event_buffer[2] = (longlong)ui_result_status;
            ui_callback[1] = ui_callback[1] + UI_SNAPSHOT_CREATE_FLAGS;
          }
          else {
            ui_window_handle = *ui_callback;
            long_counter_two = ((longlong)ui_event_buffer - ui_window_handle) / UI_SNAPSHOT_CREATE_FLAGS;
            if (long_counter_two == 0) {
              long_counter_two = 1;
UI_LABEL_EVENT_LOOP_CONTINUE:
              ui_event_buffer = (uint64_t *)ui_event_dispatcher(ui_config,long_counter_two * UI_SNAPSHOT_CREATE_FLAGS,(char)ui_callback[3]);
              ui_event_buffer = (uint64_t *)ui_callback[1];
              ui_window_handle = *ui_callback;
            }
            else {
              long_counter_two = long_counter_two * 2;
              if (long_counter_two != 0) goto UI_LABEL_EVENT_LOOP_CONTINUE;
              ui_event_buffer = (uint64_t *)UI_ZERO_OFFSET;
            }
            long_counter_one = ((longlong)ui_event_buffer - ui_window_handle) / UI_SNAPSHOT_CREATE_FLAGS;
            ui_event_buffer = ui_event_buffer;
            if (0 < long_counter_one) {
              do {
                ui_event_buffer = (uint32_t *)((longlong)ui_event_buffer + (ui_window_handle - (longlong)ui_event_buffer));
                ui_system_task_id = ui_event_buffer[1];
                ui_loop_counter = ui_event_buffer[2];
                ui_loop_counter = ui_event_buffer[3];
                *(uint32_t *)ui_event_buffer = *ui_event_buffer;
                *(uint32_t *)((longlong)ui_event_buffer + 4) = ui_system_task_id;
                *(uint32_t *)(ui_event_buffer + 1) = ui_loop_counter;
                *(uint32_t *)((longlong)ui_event_buffer + 12) = ui_loop_counter;
                ui_event_buffer[2] = *(uint64_t *)
                              ((longlong)ui_event_buffer + (ui_window_handle - (longlong)ui_event_buffer) + UI_EVENT_FLAG_OFFSET);
                long_counter_one = long_counter_one + -1;
                ui_event_buffer = ui_event_buffer + 3;
              } while (0 < long_counter_one);
            }
            *ui_event_buffer = ui_stack_event_parameter;
            ui_event_buffer[1] = (longlong)ui_result_status;
            ui_event_buffer[2] = (longlong)ui_result_status;
            if (*ui_callback != 0) {
              ui_event_handler_process_event();
            }
            *ui_callback = (longlong)ui_event_buffer;
            ui_callback[1] = (longlong)(ui_event_buffer + 3);
            ui_callback[2] = (longlong)(ui_event_buffer + long_counter_two * 3);
            ui_loop_counter = ui_stack_event_parameter;
          }
          ui_stack_pointer_data_buffer = &ui_widget_manager;
          if (ui_stack_parameter_long != 0) {
            ui_event_handler_process_event();
          }
          ui_stack_parameter_long = 0;
          ui_stack_operation_flag = 0;
          ui_stack_pointer_data_buffer = &ui_widget_manager;
          for (ui_event_buffer = ui_callback_ptr; ui_event_buffer != ui_callback_ptr; ui_event_buffer = ui_event_buffer + 4) {
            (**(ui_error_code **)*ui_event_buffer)(ui_event_buffer,0);
          }
        }
        else {
          for (; ui_event_buffer != ui_callback_ptr; ui_event_buffer = ui_event_buffer + 4) {
            (**(ui_error_code **)*ui_event_buffer)(ui_event_buffer,0);
          }
        }
        if (ui_callback_ptr != (uint64_t *)UI_ZERO_OFFSET) {
          ui_event_handler_process_event(ui_callback_ptr);
        }
        ui_event_buffer = ui_event_buffer + 4;
        ui_loop_counter = ui_loop_counter - 1;
      } while (ui_loop_counter != 0);
      ui_stack_event_parameter = 0;
      ui_event_buffer = ui_stack_pointer_buffer_start;
      ui_callback_ptr = ui_stack_pointer_buffer_end;
    }
    for (; ui_event_buffer = ui_stack_pointer_buffer_end, ui_callback_ptr = ui_stack_pointer_buffer_start, ui_event_buffer != ui_stack_pointer_buffer_end; ui_event_buffer = ui_event_buffer + 4)
    {
      ui_stack_pointer_buffer_start = ui_event_buffer;
      ui_stack_pointer_buffer_end = ui_callback_ptr;
      (**(ui_error_code **)*ui_event_buffer)(ui_event_buffer,0);
      ui_event_buffer = ui_stack_pointer_buffer_start;
      ui_callback_ptr = ui_stack_pointer_buffer_end;
      ui_stack_pointer_buffer_end = ui_event_buffer;
      ui_stack_pointer_buffer_start = ui_callback_ptr;
    }
    if (ui_stack_pointer_buffer_start != (uint64_t *)UI_ZERO_OFFSET) {
      ui_stack_pointer_buffer_start = ui_event_buffer;
      ui_stack_pointer_buffer_end = ui_callback_ptr;
      ui_event_handler_process_event(ui_callback_ptr);
    }
  }
  return ui_system_return_value;
}

/**
 * @brief 更新UI系统布局缓存
 * 
 * 更新UI系统中的布局缓存数据，包括布局计算结果、尺寸信息和位置数据。
 * 该函数用于优化布局性能，减少重复计算。
 * 
 * 简化实现：保持原有的缓存更新逻辑，主要优化了变量命名和添加了详细注释
 */
void ui_system_update_layout_cache(void)

{
  uint8_t ui_stack_buffer_small [144];
  uint64_t ui_stack_flag_mask_value;
  uint8_t ui_stack_buffer_large [288];
  ulonglong ui_stack_buffer_xor_value;
  
  ui_stack_flag_mask_value = UI_BIT_MASK_32BIT_FULLfffffffe;
  ui_stack_buffer_xor_value = ui_stack_flag_mask ^ (ulonglong)ui_stack_buffer_small;
  memset(ui_stack_buffer_small,0,UI_RESOURCE_LOAD_TYPE8);
}

/**
 * @brief 计算UI系统布局
 * 
 * 计算UI系统中的布局信息，包括组件尺寸、位置、边距等。
 * 该函数是布局系统的核心计算函数，负责确定所有UI组件的最终位置和尺寸。
 * 
 * @param ui_callback 回调函数指针
 * @param ui_event_data_buffer_type 事件数据缓冲区类型指针
 * 
 * 简化实现：保持原有的布局计算逻辑，主要优化了变量命名和添加了详细注释
 */
void ui_system_calculate_layout(uint64_t ui_callback,longlong *ui_event_data_buffer_type)

{
  int ui_temp_state_value;
  longlong ui_event_index;
  uint8_t ui_stack_array [184];
  uint8_t ui_stack_array [32];
  uint64_t ui_stack_variable_uint_d10;
  uint64_t ui_stack_variable_uint_d08;
  uint8_t ui_stack_array [2048];
  ulonglong ui_stack_validation_mask;
  
  ui_stack_variable_uint_d10 = UI_BIT_MASK_32BIT_FULLfffffffe;
  ui_stack_validation_mask = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_system_initializer();
  ui_stack_variable_uint_d08 = UI_SYSTEM_BASE_ADDRESS;
  ui_temp_state_value = _Mtx_lock(UI_SYSTEM_BASE_ADDRESS);
  if (ui_temp_state_value != 0) {
    __Throw_C_error_std__YAXH_Z(ui_temp_state_value);
  }
  ui_event_index = (ui_event_type[1] - *ui_event_type) / 6 + (ui_event_type[1] - *ui_event_type >> UI_BIT_SHIFT_63);
  if ((int)(ui_event_index >> 2) != (int)(ui_event_index >> UI_BIT_SHIFT_63)) {
    ui_process_event_callback(ui_stack_array);
    memset(ui_stack_array,0,UI_STACK_SIZE_1280);
  }
  ui_temp_state_value = _Mtx_unlock(UI_SYSTEM_BASE_ADDRESS);
  if (ui_temp_state_value != 0) {
    __Throw_C_error_std__YAXH_Z(ui_temp_state_value);
  }
  RenderUIComponent(ui_stack_validation_mask ^ (ulonglong)ui_stack_array);
}

uint64_t *
/**
 * @brief 渲染UI布局
 * 
 * 负责UI布局的渲染计算和绘制，包括组件定位、尺寸计算和层级管理。
 * 该函数确保UI元素按照正确的布局规则进行渲染。
 * 
 * @param ui_callback_context 回调上下文指针
 * @param ui_event_type 事件类型指针
 * @param ui_event_data 事件数据
 * @param ui_event_flags 事件标志
 * @return 渲染操作结果
 */

ui_system_render_layout(longlong *ui_callback_context,uint64_t *ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  char *ui_system_function_pointer;
  void* *ui_task_index_pointer;
  longlong ui_event_index;
  ulonglong ui_temp_ulong;
  longlong ui_event_index;
  void* *ui_callback_ptr;
  void* *pui_stack_buffer_mask;
  longlong ui_stack_parameter_long;
  uint32_t ui_stack_variable_uint_28;
  uint32_t ui_stack_extended_data_size;
  uint32_t ui_stack_variable_uint_1c;
  longlong ui_event_index;
  
  ui_event_index = 0;
  ui_system_data_processor(&pui_stack_buffer_mask,&ui_system_global_data,ui_event_data,ui_event_flags,0,UI_BIT_MASK_32BIT_FULLfffffffe);
  ui_event_index = -1;
  do {
    ui_event_index = ui_event_index + 1;
    ui_system_function_pointer = (char *)(ui_event_index + UI_EVENT_HANDLER_OFFSET);
    ui_event_index = ui_event_index;
  } while (*ui_system_function_pointer != UI_CHAR_NULL);
  if (ui_event_index == 0) {
    ui_loop_counter = ui_callback[1] - *ui_callback >> 5;
    if ((int)ui_loop_counter == 0) {
      ui_system_data_processor(ui_event_type,&ui_system_render_context);
      pui_stack_buffer_mask = &ui_widget_manager;
      if (ui_stack_parameter_long == 0) {
        return return ui_event_type;
      }
      ui_event_handler_process_event();
    }
    ui_loop_counter = ui_temp_buffer ui_loop_counter & UI_BIT_MASK_32BIT_FULL UI_BIT_MASK_32BIT_FULL;
    do {
      ui_task_index_pointer = *(void* **)(ui_event_index + 8 + *ui_callback);
      ui_callback_ptr = &ui_system_global_data;
      if (ui_task_index_pointer != (void* *)UI_ZERO_OFFSET) {
        ui_callback_ptr = ui_task_index_pointer;
      }
      ui_initialize_event_handler(&pui_stack_buffer_mask,&ui_widget_manager,ui_callback_ptr);
      ui_event_index = ui_event_index + UI_OFFSET_32;
      ui_loop_counter = ui_loop_counter - 1;
    } while (ui_loop_counter != 0);
  }
  else {
    (**(ui_error_code **)(pui_stack_buffer_mask + UI_EVENT_FLAG_OFFSET))(&pui_stack_buffer_mask);
  }
  *ui_event_type = &ui_widget_manager;
  ui_event_type[1] = 0;
  *(uint32_t *)(ui_event_type + 2) = 0;
  *ui_event_type = &ui_widget_manager;
  *(uint32_t *)(ui_event_type + 2) = ui_stack_variable_uint_28;
  ui_event_type[1] = ui_stack_parameter_long;
  *(uint32_t *)((longlong)ui_event_type + UI_OFFSET_28) = ui_stack_variable_uint_1c;
  *(uint32_t *)(ui_event_type + 3) = ui_stack_extended_data_size;
  return return ui_event_type;
}

void ui_system_cleanup_render(longlong ui_callback)

{
  uint ui_system_event_id;
  longlong ui_event_index;
  
  if (ui_callback == 0) {

void ui_system_flush_render_buffer_var(longlong ui_callback)

{
  uint ui_system_event_id;
  longlong ui_event_index;
  
  ui_event_index = -1;
  do {
    ui_event_index = ui_event_index + 1;
  } while (*(char *)(ui_callback + ui_event_index) != UI_CHAR_NULL);
  ui_system_event_id = (uint)ui_event_index;
  if (UI_GUARD_CHECK_TYPE_2ff < ui_system_event_id) {
    ui_system_event_id = UI_GUARD_CHECK_TYPE_2ff;
  }
  memcpy(&ui_system_accessibility_flag,ui_callback,(longlong)(int)ui_system_event_id);
}

void ui_system_reset_render_state(void)

{
  ui_error_code *ui_system_function_pointer;
  
  ui_system_task_notify_complete();
  ui_system_function_pointer = (ui_error_code *)swi(3);
  (*ui_system_function_pointer)();
  return ui_system_return_value;
}

/**
 * UI系统渲染批次提交函数
 * 
 * 负责提交UI渲染批次到渲染管线，包括批次数据准备、内存管理和渲染优化。
 * 该函数是UI渲染性能优化的关键组件，确保高效的渲染批次处理。
 * 
 * @param ui_callback 回调函数指针
 * @param ui_event_type 事件类型
 * @param ui_event_data 事件数据
 * @param ui_event_flags 事件标志
 * @return 提交后的回调指针
 * 
 * 简化实现：主要处理了变量名的语义化替换，保持原有逻辑结构不变
 */
uint64_t *
/**
 * @brief 提交渲染批次
 * 
 * 将UI渲染命令批量提交给渲染引擎，优化渲染性能。
 * 该函数负责合并多个渲染操作为单个批次，减少渲染调用次数。
 * 
 * @param ui_callback 回调函数指针
 * @param ui_event_type 事件类型
 * @param ui_event_data 事件数据
 * @param ui_event_flags 事件标志
 * @return 提交操作结果
 */

ui_system_submit_render_batch(uint64_t *ui_callback,longlong ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  uint64_t ui_system_event_id;
  uint32_t ui_system_task_id;
  uint64_t ui_loop_counter;
  uint8_t ui_stack_array [8];
  uint64_t ui_stack_extended_data_size;
  uint32_t ui_stack_control_flag;
  uint32_t ui_stack_variable_uint_10;
  uint32_t ui_stack_variable_uint_c;
  
  ui_loop_counter = UI_BIT_MASK_32BIT_FULLfffffffe;
  ui_system_task_id = 0;
  if ((ui_event_type != 0) && (*(int *)(ui_event_type + UI_EVENT_FLAG_OFFSET) != 0)) {
    ui_system_event_id = mono_string_to_utf8(ui_event_type);
    ui_system_data_processor(ui_stack_array,ui_system_event_id,ui_event_data,ui_event_flags,ui_system_task_id,ui_loop_counter);
    mono_free(ui_system_event_id);
    *ui_callback = &ui_widget_manager;
    ui_callback[1] = 0;
    *(uint32_t *)(ui_callback + 2) = 0;
    *ui_callback = &ui_widget_manager;
    *(uint32_t *)(ui_callback + 2) = ui_stack_control_flag;
    ui_callback[1] = ui_stack_extended_data_size;
    *(uint32_t *)((longlong)ui_callback + UI_OFFSET_28) = ui_stack_variable_uint_c;
    *(uint32_t *)(ui_callback + 3) = ui_stack_variable_uint_10;
    return return ui_callback;
  }
  ui_loop_counter = ui_get_system_status();
  ui_system_memory_allocator(ui_callback,ui_loop_counter);
  return return ui_callback;
}

void ui_system_initialize_render(uint64_t ui_callback)

{
  ui_system_cleanup_render();
  OutputDebugStringA(ui_callback);
  ui_system_thread_initialize(&ui_system_shader_context);

void ui_system_create_panel(longlong ui_callback,longlong ui_event_type)

{
  uint64_t ui_system_event_id;
  
  ui_system_event_id = ui_event_dispatcher(ui_config,ui_callback * ui_event_type,UI_WIDGET_RESOURCE_TYPE);
  memset(ui_system_event_id,0,ui_callback * ui_event_type);
}

void ui_system_allocate_render_resources(void)

{
  uint64_t *ui_event_buffer;
  uint32_t *ui_task_index_pointer;
  
  ui_event_buffer = (uint64_t *)ui_allocate_event_buffer(ui_config,UI_CALLBACK_HANDLER_OFFSET,8,3,UI_BIT_MASK_32BIT_FULLfffffffe);
  *ui_event_buffer = 1;
  ui_event_buffer[1] = ui_system_create_button;
  ui_event_buffer[2] = ui_system_create_textbox;
  ui_event_buffer[3] = ui_system_create_label;
  ui_event_buffer[4] = ui_system_create_panel;
  mono_set_allocator_vtable(ui_event_buffer);
  ui_task_index_pointer = (uint32_t *)ui_event_dispatcher(ui_config,UI_RESOURCE_TYPE_CONFIG,UI_RESOURCE_TYPE_CONFIG);
  *(uint8_t *)ui_task_index_pointer = 0;
  ui_release_event_resource(ui_task_index_pointer);
  *ui_task_index_pointer = UI_SIGNATURE_RUNES;
  ui_task_index_pointer[1] = UI_WIDGET_ENABLED_FLAG_VER;
  ui_task_index_pointer[2] = UI_SIGNATURE_EZIS;
  ui_task_index_pointer[3] = UI_SIGNATURE_918;
  *(uint16_t *)(ui_task_index_pointer + 4) = UI_SIGNATURE_PART1;
  *(uint8_t *)((longlong)ui_task_index_pointer + UI_NETWORK_RESOURCE_TYPE) = 0;
  ui_event_buffer = (uint64_t *)ui_event_dispatcher(ui_config,UI_EVENT_FLAG_OFFSET,UI_RESOURCE_TYPE_CONFIG);
  *(uint8_t *)ui_event_buffer = 0;
  ui_release_event_resource(ui_event_buffer);
  *ui_event_buffer = UI_SIGNATURE_CG_ONOM;
  *(uint32_t *)(ui_event_buffer + 1) = UI_SIGNATURE_ARAP;
  *(uint16_t *)((longlong)ui_event_buffer + 12) = UI_SIGNATURE_PART2;
  *(uint8_t *)((longlong)ui_event_buffer + ui_component_angle_offset) = 0;
  SetEnvironmentVariableA(ui_event_buffer,ui_task_index_pointer);
  ui_event_handler_process_event(ui_event_buffer);
}

void ui_system_create_render_target(void)

{
  longlong *ui_long_counter_ptr;
  uint32_t *ui_task_index_pointer;
  uint32_t ui_loop_counter;
  longlong ui_event_index;
  uint64_t *ui_callback_ptr;
  uint32_t *ui_callback_ptr;
  ulonglong ui_temp_ulong;
  uint8_t ui_stack_array [32];
  void* *ui_pointer_stack_variable_b8;
  uint32_t *ui_pointer_stack_variable_b0;
  uint ui_stack_variable_uint_a8;
  ulonglong ui_stack_variable_uint_a0;
  uint32_t ui_stack_variable_uint_98;
  void* *ui_stack_pointer_buffer_end;
  uint64_t *pui_stack_extended_data_primary;
  uint32_t ui_stack_extended_buffer_size;
  uint64_t ui_stack_variable_uint_78;
  uint64_t ui_stack_variable_uint_50;
  ulonglong ui_stack_unsigned_data_primary;
  
  ui_long_counter_ptr = ui_config;
  ui_stack_variable_uint_50 = UI_BIT_MASK_32BIT_FULLfffffffe;
  ui_stack_unsigned_data_primary = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_stack_variable_uint_98 = 0;
  ui_pointer_stack_variable_b8 = &ui_widget_manager;
  ui_stack_variable_uint_a0 = 0;
  ui_pointer_stack_variable_b0 = (uint32_t *)UI_ZERO_OFFSET;
  ui_stack_variable_uint_a8 = 0;
  ui_event_handler_initialize(&ui_pointer_stack_variable_b8,UI_LAYOUT_RESOURCE_TYPE);
  ui_task_index_pointer = ui_pointer_stack_variable_b0;
  ui_loop_counter = (ulonglong)ui_stack_variable_uint_a8;
  ui_callback_ptr = (uint32_t *)((longlong)ui_pointer_stack_variable_b0 + ui_loop_counter);
  *ui_callback_ptr = UI_SIGNATURE_Tale;
  ui_callback_ptr[1] = UI_SIGNATURE_PART_Wor;
  ui_callback_ptr[2] = UI_OFFSET_ds.2h;
  ui_callback_ptr[3] = UI_SIGNATURE_Ntoe;
  *(uint32_t *)((longlong)ui_pointer_stack_variable_b0 + ui_loop_counter + UI_EVENT_FLAG_OFFSET) = UI_SIGNATURE_PART_dB.f;
  *(uint16_t *)((longlong)ui_pointer_stack_variable_b0 + ui_loop_counter + UI_SHIFT_AMOUNT_20) = UI_SIGNATURE_PART6;
  ui_stack_variable_uint_a8 = UI_LAYOUT_RESOURCE_TYPE;
  ui_callback_ptr = (uint32_t *)&ui_system_global_data;
  if (ui_pointer_stack_variable_b0 != (uint32_t *)UI_ZERO_OFFSET) {
    ui_callback_ptr = ui_pointer_stack_variable_b0;
  }
  ui_event_index = mono_domain_assembly_open(_ui_system_scale_data,ui_callback_ptr);
  ui_pointer_stack_variable_b8 = &ui_widget_manager;
  if (ui_task_index_pointer != (uint32_t *)UI_ZERO_OFFSET) {
    ui_event_handler_process_event(ui_task_index_pointer);
  }
  ui_pointer_stack_variable_b0 = (uint32_t *)UI_ZERO_OFFSET;
  ui_stack_variable_uint_a0 = ui_stack_variable_uint_a0 & UI_BIT_MASK_32BIT_FULL00000000;
  ui_pointer_stack_variable_b8 = &ui_widget_manager;
  *ui_long_counter_ptr = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_thread_initialize(&ui_system_texture_context,&ui_system_dpi_data);
    ui_event_index = *ui_long_counter_ptr;
  }
  ui_event_index = mono_assembly_get_image(ui_event_index);
  ui_long_counter_ptr[1] = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_thread_initialize(&ui_system_font_context);
  }
  ui_stack_pointer_buffer_end = &ui_widget_manager;
  ui_stack_variable_uint_78 = 0;
  pui_stack_extended_data_primary = (uint64_t *)UI_ZERO_OFFSET;
  ui_stack_extended_buffer_size = 0;
  ui_callback_ptr = (uint64_t *)ui_event_dispatcher(ui_config,UI_EVENT_FLAG_OFFSET,UI_RESOURCE_TYPE_CONFIG);
  *(uint8_t *)ui_callback_ptr = 0;
  pui_stack_extended_data_primary = ui_callback_ptr;
  ui_loop_counter = ui_release_event_resource(ui_callback_ptr);
  ui_stack_variable_uint_78 = CONCAT44(ui_stack_variable_uint_78._data_size_,ui_loop_counter);
  *ui_callback_ptr = UI_SIGNATURE_PART_Control;
  *(uint16_t *)(ui_callback_ptr + 1) = UI_SIGNATURE_PART3;
  *(uint8_t *)((longlong)ui_callback_ptr + 10) = 0;
  ui_stack_extended_buffer_size = 10;
  ui_pointer_stack_variable_b8 = &ui_widget_manager;
  ui_stack_variable_uint_a0 = 0;
  ui_pointer_stack_variable_b0 = (uint32_t *)UI_ZERO_OFFSET;
  ui_stack_variable_uint_a8 = 0;
  ui_callback_ptr = (uint32_t *)ui_event_dispatcher(ui_config,UI_NETWORK_RESOURCE_TYPE,UI_RESOURCE_TYPE_CONFIG);
  *(uint8_t *)ui_callback_ptr = 0;
  ui_pointer_stack_variable_b0 = ui_callback_ptr;
  ui_loop_counter = ui_release_event_resource(ui_callback_ptr);
  ui_stack_variable_uint_a0 = CONCAT44(ui_stack_variable_uint_a0._data_size_,ui_loop_counter);
  *ui_callback_ptr = UI_SIGNATURE_Tale;
  ui_callback_ptr[1] = UI_SIGNATURE_PART_Wor;
  ui_callback_ptr[2] = UI_OFFSET_ds.2h;
  ui_callback_ptr[3] = UI_SIGNATURE_Ntoe;
  *(uint16_t *)(ui_callback_ptr + 4) = UI_SIGNATURE_PART4;
  ui_stack_variable_uint_a8 = UI_RESOURCE_LOAD_TYPE;
  mono_class_from_name(ui_long_counter_ptr[1],ui_callback_ptr,ui_callback_ptr);
  ui_pointer_stack_variable_b8 = &ui_widget_manager;
  ui_event_handler_process_event(ui_callback_ptr);
}

/**
 * UI系统帧渲染函数
 * 
 * 负责UI系统的帧渲染操作，包括事件类型设置、组件管理和渲染准备。
 * 该函数是UI渲染管线的核心组件，确保每帧的UI内容正确显示。
 * 
 * @param ui_callback 回调函数指针
 * @param ui_event_type 事件类型指针
 * @param ui_event_data 事件数据
 * @param ui_event_flags 事件标志
 * @return 渲染后的事件类型指针
 * 
 * 简化实现：主要处理了变量名的语义化替换，保持原有逻辑结构不变
 */
uint64_t *
/**
 * @brief 渲染UI帧
 * 
 * 执行完整的UI帧渲染流程，包括清屏、绘制所有UI组件和后处理效果。
 * 这是UI渲染的主要入口点，每帧调用一次。
 * 
 * @param ui_callback 回调函数指针
 * @param ui_event_type 事件类型指针
 * @param ui_event_data 事件数据
 * @param ui_event_flags 事件标志
 * @return 帧渲染结果
 */

ui_system_render_frame(uint64_t ui_callback,uint64_t *ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  *ui_event_type = &ui_widget_manager;
  ui_event_type[1] = 0;
  *(uint32_t *)(ui_event_type + 2) = 0;
  *ui_event_type = &ui_widget_manager;
  ui_event_type[1] = ui_event_type + 3;
  *(uint8_t *)(ui_event_type + 3) = 0;
  *(uint32_t *)(ui_event_type + 2) = UI_EVENT_FLAG_OFFSET;
  strcpy_s(ui_event_type[1],UI_STACK_SIZE_128,&ui_widget_manager,ui_event_flags,0,UI_BIT_MASK_32BIT_FULLfffffffe);
  return return ui_event_type;
}

void ui_system_present_frame(longlong ui_callback,uint64_t ui_event_type,int ui_event_data)

{
  longlong ui_long_counter;
  longlong ui_event_index;
  ulonglong ui_temp_ulong;
  longlong ui_event_index;
  ulonglong ui_temp_ulong;
  int ui_result_status;
  
  ui_result_status = *(int *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS) - *(int *)(ui_callback + UI_EVENT_FLAG_OFFSET);
  ui_long_counter = *(longlong *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS);
  ui_event_index = *(longlong *)(ui_callback + UI_EVENT_FLAG_OFFSET);
  ui_loop_counter = ui_long_counter - ui_event_index;
  ui_loop_counter = (ulonglong)(ui_result_status + ui_event_data);
  if (ui_temp_buffer < ui_loop_counter) {
    ui_loop_counter = (ui_event_index - ui_long_counter) + ui_loop_counter;
    if ((ulonglong)(*(longlong *)(ui_callback + UI_OFFSET_32) - ui_long_counter) < ui_loop_counter) {
      ui_loop_counter = ui_temp_buffer * 2;
      if (ui_loop_counter == 0) {
        ui_loop_counter = 1;
      }
      if (ui_loop_counter < ui_loop_counter + ui_loop_counter) {
        ui_loop_counter = ui_loop_counter + ui_loop_counter;
      }
      if (ui_loop_counter == 0) {
        ui_event_index = ui_long_counter;
        ui_long_counter = 0;
      }
      else {
        ui_long_counter = ui_event_dispatcher(ui_config,ui_loop_counter,*(uint8_t *)(ui_callback + UI_CALLBACK_HANDLER_OFFSET));
        ui_event_index = *(longlong *)(ui_callback + UI_EVENT_FLAG_OFFSET);
        ui_event_index = *(longlong *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS);
      }
      if (ui_event_index != ui_event_index) {
        memmove(ui_long_counter,ui_event_index,ui_event_index - ui_event_index);
      }
      if (ui_loop_counter != 0) {
        memset(ui_long_counter,0,ui_loop_counter);
      }
      if (*(longlong *)(ui_callback + UI_EVENT_FLAG_OFFSET) != 0) {
        ui_event_handler_process_event();
      }
      *(longlong *)(ui_callback + UI_EVENT_FLAG_OFFSET) = ui_long_counter;
      *(ulonglong *)(ui_callback + UI_OFFSET_32) = ui_long_counter + ui_loop_counter;
    }
    else if (ui_loop_counter != 0) {
      memset(ui_long_counter,0,ui_loop_counter);
    }
  }
  else {
    ui_long_counter = ui_event_index + ui_loop_counter;
  }
  *(longlong *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS) = ui_long_counter;
                    // WARNING: Could not recover jumptable at 0x0001808ffc47. Too many branches
                    // WARNING: Treating indirect jump as call
  memcpy((longlong)ui_result_status + *(longlong *)(ui_callback + UI_EVENT_FLAG_OFFSET),ui_event_type,(longlong)ui_event_data);
  return ui_system_return_value;
}

void ui_system_swap_buffer_vars(longlong ui_callback,longlong ui_event_type,uint64_t ui_event_data,longlong ui_event_flags)

{
  longlong ui_callback_ptr;
  longlong ui_widget_base;
  longlong ui_long_counter;
  uint64_t ui_system_register;
  ulonglong ui_system_task_id;
  longlong ui_system_register_long;
  ulonglong ui_temp_ulong;
  int ui_system_register;
  longlong *ui_system_register;
  uint64_t ui_stack_temp_register_value;
  
  ui_loop_counter = (ui_callback - ui_widget_base) + ui_event_flags;
  if ((ulonglong)(ui_callback_ptr - ui_widget_base) < ui_loop_counter) {
    ui_system_task_id = ui_event_type * 2;
    if (ui_event_type == 0) {
      ui_system_task_id = 1;
    }
    if (ui_system_task_id < ui_event_type + ui_loop_counter) {
      ui_system_task_id = ui_event_type + ui_loop_counter;
    }
    if (ui_system_task_id == 0) {
      ui_long_counter = ui_widget_base;
      ui_widget_base = 0;
    }
    else {
      ui_widget_base = ui_event_dispatcher(ui_config,ui_system_task_id,*(uint8_t *)(ui_system_register + UI_CALLBACK_HANDLER_OFFSET));
      ui_callback = *(longlong *)(ui_system_register + UI_EVENT_FLAG_OFFSET);
      ui_long_counter = *ui_system_register;
    }
    if (ui_callback != ui_long_counter) {
      memmove(ui_widget_base,ui_callback,ui_long_counter - ui_callback);
    }
    if (ui_loop_counter != 0) {
      memset(ui_widget_base,0,ui_loop_counter);
    }
    if (*(longlong *)(ui_system_register + UI_EVENT_FLAG_OFFSET) != 0) {
      ui_event_handler_process_event();
    }
    *(longlong *)(ui_system_register + UI_EVENT_FLAG_OFFSET) = ui_widget_base;
    *(ulonglong *)(ui_system_register + UI_OFFSET_32) = ui_widget_base + ui_system_task_id;
  }
  else {
    ui_stack_system_register_value = ui_system_register;
    if (ui_loop_counter != 0) {
      memset();
    }
  }
  *ui_system_register = ui_widget_base;
                    // WARNING: Could not recover jumptable at 0x0001808ffc47. Too many branches
                    // WARNING: Treating indirect jump as call
  memcpy((longlong)ui_system_register + *(longlong *)(ui_system_register + UI_EVENT_FLAG_OFFSET),ui_stack_system_register_value);
  return ui_system_return_value;
}

void ui_system_vsync_enabled(void)

{
  uint64_t ui_widget_base;
  longlong ui_system_register_long;
  int ui_system_register;
  uint64_t *ui_system_register;
  
  if (ui_system_register != 0) {
    memset();
  }
  *ui_system_register = ui_widget_base;
                    // WARNING: Could not recover jumptable at 0x0001808ffc47. Too many branches
                    // WARNING: Treating indirect jump as call
  memcpy((longlong)ui_system_register + *(longlong *)(ui_system_register + UI_EVENT_FLAG_OFFSET));
  return ui_system_return_value;
}

void ui_system_set_vsync(longlong ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,longlong ui_event_flags)

{
  longlong ui_system_register_long;
  int ui_system_register;
  
  *(longlong *)(ui_system_register + UI_SNAPSHOT_CREATE_FLAGS) = ui_callback + ui_event_flags;
                    // WARNING: Could not recover jumptable at 0x0001808ffc47. Too many branches
                    // WARNING: Treating indirect jump as call
  memcpy((longlong)ui_system_register + *(longlong *)(ui_system_register + UI_EVENT_FLAG_OFFSET));
  return ui_system_return_value;
}

void ui_system_get_display_info(int *ui_callback)

{
  if ((*ui_callback != 0) && (ui_config != 0)) {
    (**(ui_error_code **)(ui_config + UI_SNAPSHOT_CREATE_FLAGS))();
  }
  return ui_system_return_value;
}

void ui_system_create_texture(void)

{
  uint ui_system_event_id;
  uint32_t ui_system_task_id;
  int ui_result_status;
  uint ui_loop_counter;
  uint32_t *ui_callback_ptr;
  longlong ui_event_index;
  uint8_t *ui_callback_ptr;
  uint16_t *ui_callback_ptr;
  void* *ui_callback_ptr;
  uint ui_event_id0;
  ulonglong ui_event_id1;
  uint8_t ui_stack_array [32];
  uint8_t ui_stack_resource_config;
  void* *pui_stack_variable_uint_2f8;
  uint16_t *pui_stack_variable_uint_2f0;
  uint32_t ui_stack_variable_uint_2e8;
  uint64_t ui_stack_variable_uint_2e0;
  void* *pui_stack_variable_uint_2d8;
  uint32_t *pui_stack_variable_uint_2d0;
  uint32_t ui_stack_unsigned_data_tertiary8;
  uint64_t ui_stack_unsigned_data_tertiary0;
  void* *pui_stack_variable_uint_2b8;
  uint8_t *pui_stack_variable_uint_2b0;
  uint ui_stack_variable_uint_2a8;
  uint64_t ui_stack_variable_uint_2a0;
  uint32_t ui_stack_variable_event_counter;
  void* *ui_stack_pointer_widget_manager_primary;
  uint8_t *ui_stack_pointer_callback_data_primary;
  uint32_t ui_stack_variable_data_size;
  uint64_t ui_stack_buffer_size_value;
  uint8_t ui_stack_array [32];
  uint64_t ui_stack_config_mask_value;
  uint8_t ui_stack_array [32];
  uint64_t ui_stack_buffer_mask_value;
  void* *pui_stack_event_handler_ptr;
  uint8_t *pui_stack_variable_callback_data;
  uint32_t ui_stack_variable_event_id;
  uint8_t ui_stack_array [16];
  uint8_t ui_stack_array [8];
  void* *pui_stack_variable_widget_manager_ptr;
  int ui_stack_variable_callback_size;
  ulonglong ui_stack_buffer_mask;
  
  ui_stack_buffer_mask_value = UI_BIT_MASK_32BIT_FULLfffffffe;
  ui_stack_buffer_mask = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_callback_ptr = (uint8_t *)UI_ZERO_OFFSET;
  ui_event_id0 = 0;
  ui_stack_variable_event_counter = 0;
  ui_stack_config_mask_value = ui_config;
  pui_stack_event_handler_ptr = &ui_widget_manager;
  pui_stack_variable_callback_data = ui_stack_array;
  ui_stack_array[0] = 0;
  ui_stack_variable_event_id = 6;
  strcpy_s(ui_stack_array,UI_EVENT_FLAG_OFFSET,&ui_widget_manager);
  ui_stack_variable_event_counter = 1;
  ui_setup_event_callbacks(ui_stack_array,&pui_stack_event_handler_ptr);
  ui_stack_variable_event_counter = 0;
  pui_stack_event_handler_ptr = &ui_widget_manager;
  ui_process_event_queue(ui_stack_array,ui_stack_array);
  ui_stack_pointer_widget_manager_primary = &ui_widget_manager;
  ui_stack_buffer_size_value = 0;
  ui_stack_pointer_callback_data_primary = (uint8_t *)UI_ZERO_OFFSET;
  ui_stack_variable_data_size = 0;
  ui_event_handler_initialize(&ui_stack_pointer_widget_manager_primary,ui_stack_variable_callback_size);
  if (0 < ui_stack_variable_callback_size) {
    ui_callback_ptr = &ui_system_global_data;
    if (pui_stack_variable_widget_manager_ptr != (void* *)UI_ZERO_OFFSET) {
      ui_callback_ptr = pui_stack_variable_widget_manager_ptr;
    }
    memcpy(ui_stack_pointer_callback_data_primary,ui_callback_ptr,(longlong)(ui_stack_variable_callback_size + 1));
  }
  if ((pui_stack_variable_widget_manager_ptr != (void* *)UI_ZERO_OFFSET) && (ui_stack_variable_data_size = 0, ui_stack_pointer_callback_data_primary != (uint8_t *)UI_ZERO_OFFSET)) {
    *ui_stack_pointer_callback_data_primary = 0;
  }
  pui_stack_variable_uint_2d8 = &ui_widget_manager;
  ui_stack_unsigned_data_tertiary0 = 0;
  pui_stack_variable_uint_2d0 = (uint32_t *)UI_ZERO_OFFSET;
  ui_stack_unsigned_data_tertiary8 = 0;
  ui_callback_ptr = (uint32_t *)ui_event_dispatcher(ui_config,UI_EVENT_FLAG_OFFSET,UI_RESOURCE_TYPE_CONFIG);
  *(uint8_t *)ui_callback_ptr = 0;
  pui_stack_variable_uint_2d0 = ui_callback_ptr;
  ui_system_task_id = ui_release_event_resource(ui_callback_ptr);
  ui_stack_unsigned_data_tertiary0 = CONCAT44(ui_stack_unsigned_data_tertiary0._data_size_,ui_system_task_id);
  *ui_callback_ptr = UI_SIGNATURE_PART56e6962;
  *(uint8_t *)(ui_callback_ptr + 1) = 0;
  ui_stack_unsigned_data_tertiary8 = 4;
  ui_event_index = ui_calculate_event_offset(&ui_stack_pointer_widget_manager_primary,&pui_stack_event_handler_ptr,&pui_stack_variable_uint_2d8);
  pui_stack_variable_uint_2b8 = &ui_widget_manager;
  ui_stack_variable_uint_2a0 = 0;
  pui_stack_variable_uint_2b0 = (uint8_t *)UI_ZERO_OFFSET;
  ui_stack_variable_uint_2a8 = 0;
  ui_stack_variable_event_counter = 2;
  ui_system_event_id = *(uint *)(ui_event_index + UI_EVENT_FLAG_OFFSET);
  ui_event_id1 = (ulonglong)ui_system_event_id;
  ui_loop_counter = 0;
  if (*(longlong *)(ui_event_index + 8) == 0) {
UI_LABEL_WIDGET_RENDER_START:
    ui_event_id0 = ui_loop_counter;
    if (ui_system_event_id != 0) {
      memcpy(ui_callback_ptr,*(uint64_t *)(ui_event_index + 8),ui_event_id1);
    }
  }
  else if (ui_system_event_id != 0) {
    ui_result_status = ui_system_event_id + 1;
    if (ui_result_status < UI_EVENT_FLAG_OFFSET) {
      ui_result_status = UI_EVENT_FLAG_OFFSET;
    }
    ui_callback_ptr = (uint8_t *)ui_event_dispatcher(ui_config,(longlong)ui_result_status,UI_RESOURCE_TYPE_CONFIG);
    *ui_callback_ptr = 0;
    pui_stack_variable_uint_2b0 = ui_callback_ptr;
    ui_loop_counter = ui_release_event_resource(ui_callback_ptr);
    ui_stack_variable_uint_2a0 = CONCAT44(ui_stack_variable_uint_2a0._data_size_,ui_loop_counter);
    goto UI_LABEL_WIDGET_RENDER_START;
  }
  if (ui_callback_ptr != (uint8_t *)UI_ZERO_OFFSET) {
    ui_callback_ptr[ui_event_id1] = 0;
  }
  ui_stack_variable_uint_2a0 = CONCAT44(*(uint32_t *)(ui_event_index + UI_OFFSET_28),(uint32_t)ui_stack_variable_uint_2a0);
  if (ui_system_event_id + UI_LAYOUT_RESOURCE_TYPE != 0) {
    ui_loop_counter = ui_system_event_id + UI_OFFSET_22;
    ui_stack_variable_uint_2a8 = ui_system_event_id;
    if (ui_callback_ptr == (uint8_t *)UI_ZERO_OFFSET) {
      if ((int)ui_loop_counter < UI_EVENT_FLAG_OFFSET) {
        ui_loop_counter = UI_EVENT_FLAG_OFFSET;
      }
      ui_callback_ptr = (uint8_t *)ui_event_dispatcher(ui_config,(longlong)(int)ui_loop_counter,UI_RESOURCE_TYPE_CONFIG);
      *ui_callback_ptr = 0;
    }
    else {
      if (ui_loop_counter <= ui_event_id0) goto UI_LABEL_WIDGET_RENDER_COMPLETE;
      ui_stack_resource_config = UI_RESOURCE_TYPE_CONFIG;
      ui_callback_ptr = (uint8_t *)ui_create_event_instance(ui_config,ui_callback_ptr,ui_loop_counter,UI_EVENT_FLAG_OFFSET);
    }
    pui_stack_variable_uint_2b0 = ui_callback_ptr;
    ui_system_task_id = ui_release_event_resource(ui_callback_ptr);
    ui_stack_variable_uint_2a0 = CONCAT44(ui_stack_variable_uint_2a0._data_size_,ui_system_task_id);
  }
UI_LABEL_WIDGET_RENDER_COMPLETE:
  ui_callback_ptr = (uint32_t *)(ui_callback_ptr + ui_event_id1);
  *ui_callback_ptr = UI_SIGNATURE_Win6;
  ui_callback_ptr[1] = UI_OFFSET_104535f34;
  ui_callback_ptr[2] = UI_SIGNATURE_ippi;
  ui_callback_ptr[3] = UI_REGISTER_Y_OFFSET_ng;
  *(uint32_t *)(ui_callback_ptr + ui_event_id1 + UI_EVENT_FLAG_OFFSET) = UI_SIGNATURE_line;
  *(uint16_t *)(ui_callback_ptr + ui_event_id1 + UI_SHIFT_AMOUNT_20) = UI_SIGNATURE_PART4;
  pui_stack_variable_uint_2f8 = &ui_widget_manager;
  ui_stack_variable_uint_2e0 = 0;
  pui_stack_variable_uint_2f0 = (uint16_t *)UI_ZERO_OFFSET;
  ui_stack_variable_uint_2e8 = 0;
  ui_stack_variable_uint_2a8 = ui_system_event_id + UI_LAYOUT_RESOURCE_TYPE;
  ui_callback_ptr = (uint16_t *)ui_event_dispatcher(ui_config,UI_EVENT_FLAG_OFFSET,UI_RESOURCE_TYPE_CONFIG);
  *(uint8_t *)ui_callback_ptr = 0;
  pui_stack_variable_uint_2f0 = ui_callback_ptr;
  ui_system_task_id = ui_release_event_resource(ui_callback_ptr);
  ui_stack_variable_uint_2e0 = CONCAT44(ui_stack_variable_uint_2e0._data_size_,ui_system_task_id);
  *ui_callback_ptr = UI_SIGNATURE_PART5;
  ui_stack_variable_uint_2e8 = 1;
  ui_calculate_event_offset(&pui_stack_variable_uint_2b8,ui_stack_array,&pui_stack_variable_uint_2f8);
  pui_stack_variable_uint_2f8 = &ui_widget_manager;
  ui_event_handler_process_event(ui_callback_ptr);
}

/**
 * UI系统纹理上传函数
 * 
 * 负责UI系统中的纹理上传操作，包括纹理数据处理、内存管理和显示更新。
 * 该函数是UI纹理管理系统的核心组件，确保纹理资源的正确加载和使用。
 * 
 * @param ui_callback 回调函数指针
 * @param ui_event_type 事件类型
 * @param ui_event_data 事件数据
 * @param ui_event_flags 事件标志
 * @return 上传后的回调指针
 * 
 * 简化实现：主要处理了变量名的语义化替换，保持原有逻辑结构不变
 */
uint64_t *
/**
 * @brief 上传纹理到GPU
 * 
 * 将UI纹理数据上传到GPU显存，供渲染使用。
 * 该函数处理纹理的格式转换和内存管理。
 * 
 * @param ui_callback 回调函数指针
 * @param ui_event_type 事件类型
 * @param ui_event_data 事件数据
 * @param ui_event_flags 事件标志
 * @return 上传操作结果
 */

ui_system_upload_texture(uint64_t *ui_callback,ulonglong ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  uint64_t ui_system_event_id;
  
  ui_system_event_id = UI_BIT_MASK_32BIT_FULLfffffffe;
  *ui_callback = &ui_drag_drop_manager;
  ui_system_update_display();
  if ((ui_event_type & 1) != 0) {
    ui_memory_free(ui_callback,400,ui_event_data,ui_event_flags,ui_system_event_id);
  }
  return return ui_callback;
}

uint32_t * ui_system_create_shader(uint64_t ui_callback,uint32_t *ui_event_type)

{
  *ui_event_type = 0;
  return return ui_event_type;
}

int ui_system_load_resources(uint64_t ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  int ui_temp_state_value;
  longlong ui_event_index;
  void* *ui_callback_ptr;
  void* *pui_stack_unsigned_data_primary;
  longlong ui_stack_parameter_long;
  int ui_stack_variable_event_type;
  
  ui_system_data_processor(&pui_stack_unsigned_data_primary,ui_callback,ui_event_data,ui_event_flags,UI_BIT_MASK_32BIT_FULLfffffffe);
  ui_event_index = ui_stack_parameter_long;
  if (ui_stack_variable_event_type == UI_WIDGET_RESOURCE_TYPE) {
    ui_temp_state_value = strcmp(ui_stack_parameter_long,&ui_system_particle_context);
    if (ui_temp_state_value == 0) {
      ui_temp_state_value = UI_WIDGET_ITEM_SIZE;
      goto UI_LABEL_EVENT_PROCESSING_DONE;
    }
  }
  else if (ui_stack_variable_event_type == UI_SNAPSHOT_CREATE_FLAGS) {
    ui_temp_state_value = strcmp(ui_stack_parameter_long,&ui_system_transition_context);
    if (ui_temp_state_value == 0) {
      ui_temp_state_value = UI_EVENT_FLAG_OFFSET;
      goto UI_LABEL_EVENT_PROCESSING_DONE;
    }
UI_LABEL_EVENT_ERROR_HANDLER:
    ui_callback_ptr = &ui_system_load_context;
UI_LABEL_EVENT_CLEANUP_START:
    ui_temp_state_value = strcmp(ui_event_index,ui_callback_ptr);
    if (ui_temp_state_value == 0) {
      ui_temp_state_value = 4;
      goto UI_LABEL_EVENT_PROCESSING_DONE;
    }
  }
  else if (ui_stack_variable_event_type == UI_NETWORK_RESOURCE_TYPE) {
    ui_temp_state_value = strcmp(ui_stack_parameter_long,&ui_system_effect_context);
    if (ui_temp_state_value == 0) {
      ui_temp_state_value = UI_OFFSET_160;
      goto UI_LABEL_EVENT_PROCESSING_DONE;
    }
UI_LABEL_EVENT_RESOURCE_RELEASE:
    ui_temp_state_value = strcmp(ui_event_index,&ui_system_render_context_data);
    if (ui_temp_state_value == 0) {
      ui_temp_state_value = 8;
      goto UI_LABEL_EVENT_PROCESSING_DONE;
    }
    ui_temp_state_value = strcmp(ui_event_index,&ui_system_memory_context_data);
    if (ui_temp_state_value == 0) {
      ui_temp_state_value = UI_EVENT_FLAG_OFFSET;
      goto UI_LABEL_EVENT_PROCESSING_DONE;
    }
    ui_callback_ptr = &ui_system_cpu_context;
UI_LABEL_EVENT_FINALIZE:
    ui_temp_state_value = strcmp(ui_event_index,ui_callback_ptr);
    if (ui_temp_state_value == 0) {
      ui_temp_state_value = UI_EVENT_FLAG_OFFSET;
      goto UI_LABEL_EVENT_PROCESSING_DONE;
    }
  }
  else if (ui_stack_variable_event_type == UI_MEMORY_RESOURCE_TYPE) {
    ui_temp_state_value = strcmp(ui_stack_parameter_long,&ui_system_layout_context);
    if (ui_temp_state_value == 0) {
      ui_temp_state_value = UI_OFFSET_324;
      goto UI_LABEL_EVENT_PROCESSING_DONE;
    }
  }
  else {
    if (ui_stack_variable_event_type == UI_LAYOUT_RESOURCE_TYPE) {
      ui_temp_state_value = strcmp(ui_stack_parameter_long,&ui_system_animation_context);
      if (ui_temp_state_value == 0) {
        ui_temp_state_value = UI_STACK_SIZE_644;
        goto UI_LABEL_EVENT_PROCESSING_DONE;
      }
      ui_callback_ptr = &ui_system_debug_context;
      goto UI_LABEL_EVENT_CLEANUP_START;
    }
    if (ui_stack_variable_event_type == UI_RESOURCE_LOAD_TYPE) {
      ui_temp_state_value = strcmp(ui_stack_parameter_long,&ui_system_performance_context);
      if (ui_temp_state_value == 0) {
        ui_temp_state_value = UI_OFFSET_80;
        goto UI_LABEL_EVENT_PROCESSING_DONE;
      }
    }
    else {
      if (ui_stack_variable_event_type == UI_SNAPSHOT_CREATE_FLAGS) goto UI_LABEL_EVENT_ERROR_HANDLER;
      if (ui_stack_variable_event_type == ELEVEN_VALUE) {
        ui_temp_state_value = strcmp(ui_stack_parameter_long,&ui_system_temp_var_context);
        if (ui_temp_state_value == 0) {
          ui_temp_state_value = 8;
          goto UI_LABEL_EVENT_PROCESSING_DONE;
        }
      }
      else if (ui_stack_variable_event_type == UI_OFFSET_22) {
        ui_callback_ptr = &ui_system_network_context_data;
UI_LABEL_INPUT_HANDLER_START:
        ui_temp_state_value = strcmp(ui_stack_parameter_long,ui_callback_ptr);
        if (ui_temp_state_value == 0) {
          ui_temp_state_value = 12;
          goto UI_LABEL_EVENT_PROCESSING_DONE;
        }
      }
      else {
        if (ui_stack_variable_event_type == 7) {
          ui_event_index = 0;
          do {
            ui_event_index = ui_event_index + 1;
            if (*(char *)(ui_stack_parameter_long + ui_event_index) != (&ui_system_save_context)[ui_event_index]) {
              ui_event_index = 0;
              goto UI_LABEL_WIDGET_CHECK;
            }
            ui_event_index = ui_event_index;
          } while (ui_event_index != 8);
          ui_temp_state_value = UI_EVENT_FLAG_OFFSET;
          goto UI_LABEL_EVENT_PROCESSING_DONE;
        }
        if (ui_stack_variable_event_type == UI_MAX_EVENT_FLAGS) {
          ui_temp_state_value = strcmp(ui_stack_parameter_long,&ui_system_input_context_data);
          if (ui_temp_state_value == 0) {
            ui_temp_state_value = UI_BUFFER_SIZE_64;
            goto UI_LABEL_EVENT_PROCESSING_DONE;
          }
        }
        else {
          if (ui_stack_variable_event_type == UI_RESOURCE_TYPE_CONFIG) {
            ui_callback_ptr = &ui_system_audio_context_data;
            goto UI_LABEL_INPUT_HANDLER_START;
          }
          if (ui_stack_variable_event_type == THIRTEEN_VALUE) {
            ui_callback_ptr = &ui_system_physics_context;
            goto UI_LABEL_EVENT_FINALIZE;
          }
          if (ui_stack_variable_event_type == 6) {
            ui_event_index = 0;
            do {
              ui_event_index = ui_event_index;
              if (*(char *)(ui_stack_parameter_long + ui_event_index) != (&ui_system_gpu_context)[ui_event_index]) goto UI_LABEL_SOUND_CONTEXT_CHECK;
              ui_event_index = ui_event_index + 1;
            } while (ui_event_index + 1 != 7);
            ui_temp_state_value = (int)ui_event_index + UI_OFFSET_30;
            goto UI_LABEL_EVENT_PROCESSING_DONE;
          }
          if (ui_stack_variable_event_type == UI_NETWORK_RESOURCE_TYPE) goto UI_LABEL_EVENT_RESOURCE_RELEASE;
        }
      }
    }
  }
UI_LABEL_SOUND_CONTEXT_CHECK:
  ui_temp_state_value = 0;
UI_LABEL_EVENT_PROCESSING_DONE:
  pui_stack_unsigned_data_primary = &ui_widget_manager;
  if (ui_stack_parameter_long != 0) {
    ui_event_handler_process_event();
  }
  return return ui_temp_state_value;
  while (ui_event_index = ui_event_index, ui_event_index != 8) {
UI_LABEL_WIDGET_CHECK:
    ui_event_index = ui_event_index + 1;
    if (*(char *)(ui_stack_parameter_long + ui_event_index) != (&ui_system_sound_context)[ui_event_index]) goto UI_LABEL_SOUND_CONTEXT_CHECK;
  }
  ui_temp_state_value = UI_MEMORY_ALLOC_SIZE;
  goto UI_LABEL_EVENT_PROCESSING_DONE;
}

ulonglong ui_system_unload_resources(uint64_t ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  char char_value;
  ulonglong ui_system_task_id;
  int ui_result_status;
  longlong ui_event_index;
  void* *ui_callback_ptr;
  ulonglong ui_temp_ulong;
  bool ui_bool_result;
  void* *ui_event_data_pointer_secondary;
  char *ui_stack_char_array_48;
  int ui_stack_variable_widget_type;
  uint32_t ui_stack_buffer_mask;
  void* *pui_stack_unsigned_data_primary;
  longlong ui_stack_parameter_long;
  int ui_stack_variable_event_type;
  
  ui_system_data_processor(&pui_stack_unsigned_data_primary,ui_callback,ui_event_data,ui_event_flags,UI_BIT_MASK_32BIT_FULLfffffffe);
  ui_system_data_processor(&ui_event_data_pointer_secondary,ui_event_type);
  ui_event_index = ui_stack_parameter_long;
  if (ui_stack_variable_event_type == UI_WIDGET_RESOURCE_TYPE) {
    ui_result_status = strcmp(ui_stack_parameter_long,&ui_system_particle_context);
    if (ui_result_status == 0) {
      if (ui_stack_variable_widget_type == 7) {
        ui_event_index = 0;
        do {
          ui_event_index = ui_event_index + 1;
          if (ui_stack_char_array_48[ui_event_index] != (&ui_system_ai_context)[ui_event_index]) break;
          ui_event_index = ui_event_index;
        } while (ui_event_index != 8);
      }
      else if (ui_stack_variable_widget_type == 9) {
        ui_callback_ptr = &ui_system_script_context;
UI_LABEL_EVENT_PROCESSING:
        ui_result_status = strcmp(ui_stack_char_array_48,ui_callback_ptr);
        ui_bool_result = ui_result_status == 0;
UI_LABEL_RENDER_PREPARE:
        if (ui_bool_result) {
          ui_loop_counter = 4;
          goto UI_LABEL_WIDGET_RENDER;
        }
      }
    }
  }
  else if (ui_stack_variable_event_type == UI_SNAPSHOT_CREATE_FLAGS) {
    ui_result_status = strcmp(ui_stack_parameter_long,&ui_system_transition_context);
    if ((ui_result_status == 0) && (ui_stack_variable_widget_type == 7)) {
      ui_loop_counter = 8;
      ui_event_index = 0;
      do {
        ui_event_index = ui_event_index + 1;
        if (ui_stack_char_array_48[ui_event_index] != (&ui_system_cursor_context)[ui_event_index]) {
          ui_event_index = 0;
          goto UI_LABEL_ANIMATION_UPDATE;
        }
        ui_event_index = ui_event_index;
      } while (ui_event_index != 8);
    }
  }
  else if (ui_stack_variable_event_type == UI_MEMORY_RESOURCE_TYPE) {
    ui_result_status = strcmp(ui_stack_parameter_long,&ui_system_layout_context);
    if ((ui_result_status == 0) && (ui_stack_variable_widget_type == 4)) {
      ui_event_index = 0;
      do {
        ui_event_index = ui_event_index + 1;
        if (ui_stack_char_array_48[ui_event_index] != (&ui_widget_manager)[ui_event_index]) {
          ui_system_task_id = 0;
          goto UI_LABEL_LAYOUT_CALCULATION;
        }
        ui_event_index = ui_event_index;
      } while (ui_event_index != 5);
    }
  }
  else if (ui_stack_variable_event_type == UI_LAYOUT_RESOURCE_TYPE) {
    ui_result_status = strcmp(ui_stack_parameter_long,&ui_system_animation_context);
    if (ui_result_status == 0) {
      if (ui_stack_variable_widget_type == ELEVEN_VALUE) {
        strcmp(ui_stack_char_array_48,&ui_system_scroll_context);
      }
      else if ((ui_stack_variable_widget_type == 9) && (ui_result_status = strcmp(ui_stack_char_array_48,&ui_system_tooltip_context), ui_result_status == 0)) {
        ui_loop_counter = UI_OFFSET_324;
        goto UI_LABEL_WIDGET_RENDER;
      }
    }
  }
  else if (ui_stack_variable_event_type == UI_RESOURCE_LOAD_TYPE) {
    ui_result_status = strcmp(ui_stack_parameter_long,&ui_system_performance_context);
    if (ui_result_status == 0) {
      if (ui_stack_variable_widget_type == 6) {
        ui_event_index = 0;
        do {
          ui_event_index = ui_event_index + 1;
          if (ui_stack_char_array_48[ui_event_index] != (&ui_widget_manager)[ui_event_index]) break;
          ui_event_index = ui_event_index;
        } while (ui_event_index != 7);
      }
      else if (ui_stack_variable_widget_type == 8) {
        ui_callback_ptr = &ui_widget_manager;
UI_LABEL_FOCUS_HANDLER:
        ui_result_status = strcmp(ui_stack_char_array_48,ui_callback_ptr);
        if (ui_result_status == 0) {
          ui_loop_counter = UI_EVENT_FLAG_OFFSET;
          goto UI_LABEL_WIDGET_RENDER;
        }
      }
      else if (ui_stack_variable_widget_type == 5) {
        ui_event_index = 0;
        do {
          ui_event_index = ui_event_index;
          if (ui_stack_char_array_48[ui_event_index] != (&ui_widget_manager)[ui_event_index]) goto UI_LABEL_WIDGET_MANAGER;
          ui_event_index = ui_event_index + 1;
        } while (ui_event_index + 1 != 6);
        ui_loop_counter = (ulonglong)((int)ui_event_index + UI_OFFSET_59);
        goto UI_LABEL_WIDGET_RENDER;
      }
    }
  }
  else if (ui_stack_variable_event_type == ELEVEN_VALUE) {
    ui_result_status = strcmp(ui_stack_parameter_long,&ui_system_temp_var_context);
    if (ui_result_status == 0) {
UI_LABEL_TOOLTIP_HANDLER:
      if ((ui_stack_variable_widget_type == 1) &&
         (((*ui_stack_char_array_48 != 'ui_x_coordinate' || (ui_stack_char_array_48[1] != UI_CHAR_NULL)) && (*ui_stack_char_array_48 == 'ui_y_coordinate')))) {
        ui_bool_result = ui_stack_char_array_48[1] == UI_CHAR_NULL;
        goto UI_LABEL_RENDER_PREPARE;
      }
    }
  }
  else if (ui_stack_variable_event_type == UI_OFFSET_22) {
    ui_result_status = strcmp(ui_stack_parameter_long,&ui_system_network_context_data);
    if (((ui_result_status == 0) && (ui_stack_variable_widget_type == 1)) && ((*ui_stack_char_array_48 != 'ui_x_coordinate' || (ui_stack_char_array_48[1] != UI_CHAR_NULL)))) {
      if ((*ui_stack_char_array_48 == 'ui_y_coordinate') && (ui_stack_char_array_48[1] == UI_CHAR_NULL)) {
        ui_loop_counter = 4;
        goto UI_LABEL_WIDGET_RENDER;
      }
      if (*ui_stack_char_array_48 == 'z') {
        ui_bool_result = ui_stack_char_array_48[1] == UI_CHAR_NULL;
UI_LABEL_CHECK_Z_CONDITION:
        if (ui_bool_result) {
          ui_loop_counter = 8;
          goto UI_LABEL_WIDGET_RENDER;
        }
      }
    }
  }
  else if (ui_stack_variable_event_type == 7) {
    ui_loop_counter = 8;
    ui_event_index = 0;
    do {
      ui_event_index = ui_event_index + 1;
      if (*(char *)(ui_stack_parameter_long + ui_event_index) != (&ui_system_save_context)[ui_event_index]) {
        ui_event_index = 0;
        goto UI_LABEL_GENERIC_655a80;
      }
      ui_event_index = ui_event_index;
    } while (ui_event_index != 8);
    if ((((ui_stack_variable_widget_type == 1) && ((*ui_stack_char_array_48 != 'ui_string_var' || (ui_stack_char_array_48[1] != UI_CHAR_NULL)))) &&
        (*ui_stack_char_array_48 == 'ui_float_var')) && (ui_stack_char_array_48[1] == UI_CHAR_NULL)) goto UI_LABEL_WIDGET_RENDER;
  }
  else if (ui_stack_variable_event_type == UI_MAX_EVENT_FLAGS) {
    ui_result_status = strcmp(ui_stack_parameter_long,&ui_system_input_context_data);
    if (ui_result_status == 0) {
      if (ui_stack_variable_widget_type == 3) {
        ui_event_index = 0;
        do {
          ui_event_index = ui_event_index + 1;
          if (ui_stack_char_array_48[ui_event_index] != (&ui_system_dialog_context)[ui_event_index]) break;
          ui_event_index = ui_event_index;
        } while (ui_event_index != 4);
      }
      else if (((ui_stack_variable_widget_type == 1) && (*ui_stack_char_array_48 == 'o')) && (ui_stack_char_array_48[1] == UI_CHAR_NULL)) {
        ui_loop_counter = UI_MEMORY_ALLOC_SIZE;
        goto UI_LABEL_WIDGET_RENDER;
      }
    }
  }
  else if (ui_stack_variable_event_type == UI_RESOURCE_TYPE_CONFIG) {
    ui_result_status = strcmp(ui_stack_parameter_long,&ui_system_audio_context_data);
    if (ui_result_status == 0) {
      if (ui_stack_variable_widget_type == 10) {
        strcmp(ui_stack_char_array_48,&ui_system_ui_context);
      }
      else {
        if (ui_stack_variable_widget_type == UI_EVENT_FLAG_OFFSET) {
          ui_callback_ptr = &ui_system_menu_context;
          goto UI_LABEL_EVENT_PROCESSING;
        }
        if (ui_stack_variable_widget_type == UI_RESOURCE_LOAD_TYPE) {
          ui_result_status = strcmp(ui_stack_char_array_48,&ui_system_resize_context);
          ui_bool_result = ui_result_status == 0;
          goto UI_LABEL_GENERIC_6559dc;
        }
      }
    }
  }
  else if (ui_stack_variable_event_type == THIRTEEN_VALUE) {
    ui_result_status = strcmp(ui_stack_parameter_long,&ui_system_physics_context);
    if (((ui_result_status == 0) && (ui_stack_variable_widget_type == 1)) && ((*ui_stack_char_array_48 != 'ui_width_parameter' || (ui_stack_char_array_48[1] != UI_CHAR_NULL)))) {
      if ((*ui_stack_char_array_48 == 'ui_x_coordinate') && (ui_stack_char_array_48[1] == UI_CHAR_NULL)) {
        ui_loop_counter = 4;
        goto UI_LABEL_WIDGET_RENDER;
      }
      if ((*ui_stack_char_array_48 == 'ui_y_coordinate') && (ui_stack_char_array_48[1] == UI_CHAR_NULL)) {
        ui_loop_counter = 8;
        goto UI_LABEL_WIDGET_RENDER;
      }
      if (*ui_stack_char_array_48 == 'z') {
        char_value = ui_stack_char_array_48[1];
UI_LABEL_EVENT_HANDLER_START:
        if (char_value == UI_CHAR_NULL) {
          ui_loop_counter = 12;
          goto UI_LABEL_WIDGET_RENDER;
        }
      }
    }
  }
  else if (ui_stack_variable_event_type == 6) {
    ui_event_index = 0;
    do {
      ui_event_index = ui_event_index + 1;
      if (*(char *)(ui_stack_parameter_long + ui_event_index) != (&ui_system_gpu_context)[ui_event_index]) goto UI_LABEL_WIDGET_MANAGER;
      ui_event_index = ui_event_index;
    } while (ui_event_index != 7);
    if (ui_stack_variable_widget_type == 7) {
      ui_event_index = 0;
      do {
        ui_event_index = ui_event_index + 1;
        if (ui_stack_char_array_48[ui_event_index] != (&ui_system_move_context)[ui_event_index]) break;
        ui_event_index = ui_event_index;
      } while (ui_event_index != 8);
    }
    else {
      if (ui_stack_variable_widget_type == 10) {
        ui_callback_ptr = &ui_system_drag_context;
        goto UI_LABEL_FOCUS_HANDLER;
      }
      if (ui_stack_variable_widget_type == THIRTEEN_VALUE) {
        ui_result_status = strcmp(ui_stack_char_array_48,&ui_system_drop_context);
        ui_bool_result = ui_result_status == 0;
        goto UI_LABEL_GENERIC_655afa;
      }
    }
  }
  else if (ui_stack_variable_event_type == UI_NETWORK_RESOURCE_TYPE) {
    ui_result_status = strcmp(ui_stack_parameter_long,&ui_system_render_context_data);
    if (ui_result_status == 0) goto UI_LABEL_TOOLTIP_HANDLER;
    ui_result_status = strcmp(ui_event_index,&ui_system_memory_context_data);
    if (((ui_result_status == 0) && (ui_stack_variable_widget_type == 1)) && ((*ui_stack_char_array_48 != 'ui_x_coordinate' || (ui_stack_char_array_48[1] != UI_CHAR_NULL)))) {
      if ((*ui_stack_char_array_48 == 'ui_y_coordinate') && (ui_stack_char_array_48[1] == UI_CHAR_NULL)) {
        ui_loop_counter = 4;
        goto UI_LABEL_WIDGET_RENDER;
      }
      if ((*ui_stack_char_array_48 == 'z') && (ui_stack_char_array_48[1] == UI_CHAR_NULL)) {
        ui_loop_counter = 8;
        goto UI_LABEL_WIDGET_RENDER;
      }
      if (*ui_stack_char_array_48 == 'ui_width_parameter') {
        char_value = ui_stack_char_array_48[1];
        goto UI_LABEL_GENERIC_655e30;
      }
    }
  }
  goto UI_LABEL_WIDGET_MANAGER;
  while (ui_system_task_id = ui_loop_counter + 1, ui_loop_counter + 1 != 5) {
UI_LABEL_LAYOUT_CALCULATION:
    ui_loop_counter = ui_system_task_id;
    if (ui_stack_char_array_48[ui_loop_counter] != (&ui_widget_manager)[ui_loop_counter]) goto UI_LABEL_WIDGET_MANAGER;
  }
  ui_loop_counter = ui_temp_buffer ui_loop_counter & UI_BIT_MASK_32BIT_FULL UI_BIT_MASK_32BIT_FULL;
  goto UI_LABEL_WIDGET_RENDER;
  while (ui_event_index = ui_event_index, ui_event_index != 8) {
UI_LABEL_ANIMATION_UPDATE:
    ui_event_index = ui_event_index + 1;
    if (ui_stack_char_array_48[ui_event_index] != (&ui_system_ai_context)[ui_event_index]) goto UI_LABEL_WIDGET_MANAGER;
  }
  goto UI_LABEL_WIDGET_RENDER;
  while (ui_event_index = ui_event_index, ui_event_index != 8) {
UI_LABEL_WIDGET_PROCESSING:
    ui_event_index = ui_event_index + 1;
    if (*(char *)(ui_stack_parameter_long + ui_event_index) != (&ui_system_sound_context)[ui_event_index]) goto UI_LABEL_WIDGET_MANAGER;
  }
  if ((ui_stack_variable_widget_type == 1) && ((*ui_stack_char_array_48 != 'ui_string_var' || (ui_stack_char_array_48[1] != UI_CHAR_NULL)))) {
    if ((*ui_stack_char_array_48 == 'ui_float_var') && (ui_stack_char_array_48[1] == UI_CHAR_NULL)) {
      ui_loop_counter = UI_EVENT_FLAG_OFFSET;
      goto UI_LABEL_WIDGET_RENDER;
    }
    if (*ui_stack_char_array_48 == 'ui_loop_counter') {
      ui_bool_result = ui_stack_char_array_48[1] == UI_CHAR_NULL;
UI_LABEL_INPUT_VALIDATION:
      if (ui_bool_result) {
        ui_loop_counter = UI_OFFSET_32;
        goto UI_LABEL_WIDGET_RENDER;
      }
    }
  }
UI_LABEL_WIDGET_MANAGER:
  ui_loop_counter = 0;
UI_LABEL_WIDGET_RENDER:
  ui_event_data_pointer_secondary = &ui_widget_manager;
  if (ui_stack_char_array_48 != (char *)UI_ZERO_OFFSET) {
    ui_event_handler_process_event();
  }
  ui_stack_char_array_48 = (char *)UI_ZERO_OFFSET;
  ui_stack_buffer_mask = 0;
  ui_event_data_pointer_secondary = &ui_widget_manager;
  pui_stack_unsigned_data_primary = &ui_widget_manager;
  if (ui_stack_parameter_long == 0) {
    return return ui_loop_counter;
  }
  ui_event_handler_process_event();
}

void ui_system_cleanup_memory(int ui_callback,uint64_t *ui_event_type)

{
  uint64_t *ui_event_buffer;
  uint32_t ui_system_task_id;
  longlong ui_event_index;
  ui_error_code *ui_char_pointer_secondary;
  uint64_t ui_loop_counter;
  uint64_t ui_event_id0;
  uint64_t ui_event_id1;
  uint64_t ui_event_id_secondary;
  uint64_t ui_task_identifier;
  uint64_t ui_event_id_fourth;
  uint64_t ui_event_id_fifth;
  uint64_t ui_event_id6;
  uint64_t ui_event_id7;
  uint64_t ui_event_id8;
  uint64_t ui_event_id9;
  longlong ui_event_index;
  
  ui_event_index = *ui_config;
  if ((ulonglong)(longlong)ui_callback < (ulonglong)((ui_config[1] - ui_event_index) / UI_WIDGET_ITEM_SIZE)) {
    ui_event_index = (longlong)ui_callback * UI_WIDGET_ITEM_SIZE;
    ui_event_buffer = (uint64_t *)(ui_event_index + UI_WIDGET_CREATE_CALLBACK_OFFSET + ui_event_index);
    ui_loop_counter = *ui_event_buffer;
    ui_loop_counter = ui_event_buffer[1];
    ui_system_task_id = *(uint32_t *)(ui_event_index + UI_STACK_SIZE_128 + ui_event_index);
    ui_event_buffer = (uint64_t *)(ui_event_index + UI_WIDGET_DATA_OFFSET + ui_event_index);
    ui_loop_counter = *ui_event_buffer;
    ui_loop_counter = ui_event_buffer[1];
    ui_loop_counter = ((uint64_t *)(ui_event_index + ui_event_index))[1];
    ui_event_buffer = (uint64_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET + ui_event_index);
    ui_event_id0 = *ui_event_buffer;
    ui_event_id1 = ui_event_buffer[1];
    ui_event_buffer = (uint64_t *)(ui_event_index + UI_OFFSET_32 + ui_event_index);
    ui_event_id_secondary = *ui_event_buffer;
    ui_task_identifier = ui_event_buffer[1];
    ui_event_buffer = (uint64_t *)(ui_event_index + UI_MEMORY_ALLOC_SIZE + ui_event_index);
    ui_event_id_fourth = *ui_event_buffer;
    ui_event_id_fifth = ui_event_buffer[1];
    ui_event_buffer = (uint64_t *)(ui_event_index + UI_BUFFER_SIZE_64 + ui_event_index);
    ui_event_id6 = *ui_event_buffer;
    ui_event_id7 = ui_event_buffer[1];
    ui_event_buffer = (uint64_t *)(ui_event_index + UI_OFFSET_80 + ui_event_index);
    ui_event_id8 = *ui_event_buffer;
    ui_event_id9 = ui_event_buffer[1];
    *ui_event_type = *(uint64_t *)(ui_event_index + ui_event_index);
    ui_event_type[1] = ui_loop_counter;
    ui_event_type[2] = ui_event_id0;
    ui_event_type[3] = ui_event_id1;
    ui_event_type[4] = ui_event_id_secondary;
    ui_event_type[5] = ui_task_identifier;
    ui_event_type[6] = ui_event_id_fourth;
    ui_event_type[7] = ui_event_id_fifth;
    ui_event_type[8] = ui_event_id6;
    ui_event_type[9] = ui_event_id7;
    ui_event_type[10] = ui_event_id8;
    ui_event_type[ELEVEN_VALUE] = ui_event_id9;
    ui_event_type[12] = ui_loop_counter;
    ui_event_type[THIRTEEN_VALUE] = ui_loop_counter;
    ui_event_type[ui_component_angle_offset] = ui_loop_counter;
    ui_event_type[UI_MAX_EVENT_FLAGS] = ui_loop_counter;
    *(uint32_t *)(ui_event_type + UI_EVENT_FLAG_OFFSET) = ui_system_task_id;
    return ui_system_return_value;
  }
  ui_cleanup_event_system();
  ui_char_pointer_secondary = (ui_error_code *)swi(3);
  (*ui_char_pointer_secondary)();
  return ui_system_return_value;
}

void ui_system_compile_shader(uint64_t ui_callback,uint64_t ui_event_type,uint64_t *ui_event_data)

{
  uint64_t *ui_event_buffer;
  uint32_t ui_system_task_id;
  uint64_t ui_loop_counter;
  uint64_t ui_event_id0;
  uint64_t ui_event_id1;
  uint64_t ui_event_id_secondary;
  uint64_t ui_task_identifier;
  uint64_t ui_event_id_fourth;
  uint64_t ui_event_id_fifth;
  uint64_t ui_event_id6;
  uint64_t ui_event_id7;
  longlong ui_callback_ptr;
  longlong in_R10;
  
  ui_event_buffer = (uint64_t *)(ui_callback_ptr + UI_WIDGET_CREATE_CALLBACK_OFFSET + in_R10);
  ui_loop_counter = *ui_event_buffer;
  ui_loop_counter = ui_event_buffer[1];
  ui_system_task_id = *(uint32_t *)(ui_callback_ptr + UI_STACK_SIZE_128 + in_R10);
  ui_event_buffer = (uint64_t *)(ui_callback_ptr + UI_WIDGET_DATA_OFFSET + in_R10);
  ui_loop_counter = *ui_event_buffer;
  ui_loop_counter = ui_event_buffer[1];
  ui_loop_counter = ((uint64_t *)(ui_callback_ptr + in_R10))[1];
  ui_event_buffer = (uint64_t *)(ui_callback_ptr + UI_EVENT_FLAG_OFFSET + in_R10);
  ui_loop_counter = *ui_event_buffer;
  ui_loop_counter = ui_event_buffer[1];
  ui_event_buffer = (uint64_t *)(ui_callback_ptr + UI_OFFSET_32 + in_R10);
  ui_event_id0 = *ui_event_buffer;
  ui_event_id1 = ui_event_buffer[1];
  ui_event_buffer = (uint64_t *)(ui_callback_ptr + UI_MEMORY_ALLOC_SIZE + in_R10);
  ui_event_id_secondary = *ui_event_buffer;
  ui_task_identifier = ui_event_buffer[1];
  ui_event_buffer = (uint64_t *)(ui_callback_ptr + UI_BUFFER_SIZE_64 + in_R10);
  ui_event_id_fourth = *ui_event_buffer;
  ui_event_id_fifth = ui_event_buffer[1];
  ui_event_buffer = (uint64_t *)(ui_callback_ptr + UI_OFFSET_80 + in_R10);
  ui_event_id6 = *ui_event_buffer;
  ui_event_id7 = ui_event_buffer[1];
  *ui_event_data = *(uint64_t *)(ui_callback_ptr + in_R10);
  ui_event_data[1] = ui_loop_counter;
  ui_event_data[2] = ui_loop_counter;
  ui_event_data[3] = ui_loop_counter;
  ui_event_data[4] = ui_event_id0;
  ui_event_data[5] = ui_event_id1;
  ui_event_data[6] = ui_event_id_secondary;
  ui_event_data[7] = ui_task_identifier;
  ui_event_data[8] = ui_event_id_fourth;
  ui_event_data[9] = ui_event_id_fifth;
  ui_event_data[10] = ui_event_id6;
  ui_event_data[ELEVEN_VALUE] = ui_event_id7;
  ui_event_data[12] = ui_loop_counter;
  ui_event_data[THIRTEEN_VALUE] = ui_loop_counter;
  ui_event_data[ui_component_angle_offset] = ui_loop_counter;
  ui_event_data[UI_MAX_EVENT_FLAGS] = ui_loop_counter;
  *(uint32_t *)(ui_event_data + UI_EVENT_FLAG_OFFSET) = ui_system_task_id;
  return ui_system_return_value;
}

void ui_system_link_shader_program(void)

{
  ui_error_code *ui_system_function_pointer;
  
  ui_cleanup_event_system();
  ui_system_function_pointer = (ui_error_code *)swi(3);
  (*ui_system_function_pointer)();
  return ui_system_return_value;
}

uint64_t
/**
 * @brief 初始化窗口功能
 * 
 * 初始化UI系统的窗口管理功能，包括窗口创建、事件处理和渲染设置。
 * 该函数在系统启动时调用，建立UI窗口的基础设施。
 * 
 * @param ui_callback 回调函数指针
 * @param ui_event_type 事件类型
 * @param ui_event_data 事件数据
 * @param ui_event_flags 事件标志
 * @return 初始化操作结果
 */

ui_initialize_window_function(uint64_t ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  uint64_t ui_stack_event_parameter;
  longlong ui_stack_parameter_buffer [3];
  uint32_t ui_stack_control_flag;
  
  ui_stack_parameter_buffer[0] = 0;
  ui_stack_parameter_buffer[1] = 0;
  ui_stack_parameter_buffer[2] = 0;
  ui_stack_control_flag = 3;
  ui_stack_event_parameter = (longlong *)((ulonglong)ui_stack_parameter_buffer & UI_BIT_MASK_32BIT_FULL00000000);
  ui_dispatch_event_to_handler(ui_stack_parameter_buffer,&ui_stack_event_parameter,ui_event_data,ui_event_flags,UI_BIT_MASK_32BIT_FULLfffffffe,&ui_widget_manager,0);
  ui_dispatch_event_to_handler(ui_stack_parameter_buffer,(longlong)&ui_stack_event_parameter + 1);
  ui_dispatch_event_to_handler(ui_stack_parameter_buffer,(longlong)&ui_stack_event_parameter + 2);
  ui_dispatch_event_to_handler(ui_stack_parameter_buffer,(longlong)&ui_stack_event_parameter + 3);
  ui_stack_event_parameter = ui_stack_parameter_buffer;
  if (ui_stack_parameter_buffer[0] != 0) {
    ui_event_handler_process_event();
  }
  return return UI_EVENT_FLAG_OFFSET;
}

uint32_t * ui_create_widget_function(uint32_t *ui_callback)

{
  uint32_t ui_system_event_id;
  longlong *ui_long_pointer_var;
  uint32_t ui_stack_extended_data_size;
  uint32_t ui_stack_variable_uint_1c;
  uint32_t ui_stack_extended_data_small;
  
  ui_long_pointer_var = (longlong *)ui_allocate_event_buffer(ui_config,UI_MEMORY_ALLOC_SIZE,8,3,UI_BIT_MASK_32BIT_FULLfffffffe);
  ui_long_pointer_var[1] = 0;
  ui_long_pointer_var[2] = 0;
  ui_long_pointer_var[3] = 0;
  ui_long_pointer_var[4] = 0;
  ui_long_pointer_var[5] = 0;
  *ui_long_pointer_var = (longlong)&ui_widget_manager;
  *(uint32_t *)(ui_long_pointer_var + 1) = 0;
  *ui_long_pointer_var = (longlong)&ui_widget_manager;
  ui_long_pointer_var[2] = 0;
  ui_long_pointer_var[3] = 0;
  ui_long_pointer_var[4] = 0;
  *(uint32_t *)(ui_long_pointer_var + 5) = 3;
  (**(ui_error_code **)(*ui_long_pointer_var + UI_CALLBACK_HANDLER_OFFSET))(ui_long_pointer_var);
  ui_system_event_id = (**(ui_error_code **)(*ui_long_pointer_var + 8))(ui_long_pointer_var);
  (**(ui_error_code **)(*ui_long_pointer_var + UI_CALLBACK_HANDLER_OFFSET))(ui_long_pointer_var);
  ui_stack_extended_data_size = ui_calculate_stack_size(ui_long_pointer_var,0);
  ui_stack_variable_uint_1c = (uint32_t)((ulonglong)ui_long_pointer_var >> UI_OFFSET_32);
  *ui_callback = ui_stack_extended_data_size;
  ui_callback[1] = ui_stack_variable_uint_1c;
  ui_callback[2] = ui_system_event_id;
  ui_callback[3] = ui_stack_extended_data_small;
  (**(ui_error_code **)(*ui_long_pointer_var + UI_MEMORY_DEALLOC_OFFSET))(ui_long_pointer_var);
  return return ui_callback;
}

/**
 * @brief 销毁UI组件函数
 * 
 * 销毁指定的UI组件，释放相关资源并清理事件处理。
 * 
 * @param ui_callback 回调函数指针
 * @param ui_event_type 事件类型
 * @return void 无返回值
 */
void ui_destroy_widget_function(longlong ui_callback,uint32_t ui_event_type)

{
  uint32_t ui_stack_event_parameter;
  
  ui_callback = ui_callback + UI_EVENT_FLAG_OFFSET;
  ui_stack_event_parameter = ui_event_type;
  ui_dispatch_event_to_handler(ui_callback,&ui_stack_event_parameter);
  ui_dispatch_event_to_handler(ui_callback,(longlong)&ui_stack_event_parameter + 1);
  ui_dispatch_event_to_handler(ui_callback,(longlong)&ui_stack_event_parameter + 2);
  ui_dispatch_event_to_handler(ui_callback,(longlong)&ui_stack_event_parameter + 3);
  return ui_system_return_value;
}

/**
 * @brief 更新UI组件函数
 * 
 * 更新指定的UI组件，重新计算布局和渲染状态。
 * 
 * @param ui_callback 回调函数指针
 * @param ui_event_type 事件类型
 * @return void 无返回值
 */
void ui_update_widget_function(longlong ui_callback,uint32_t ui_event_type)

{
  uint32_t ui_stack_event_parameter;
  
  ui_callback = ui_callback + UI_EVENT_FLAG_OFFSET;
  ui_stack_event_parameter = ui_event_type;
  ui_dispatch_event_to_handler(ui_callback,&ui_stack_event_parameter);
  ui_dispatch_event_to_handler(ui_callback,(longlong)&ui_stack_event_parameter + 1);
  ui_dispatch_event_to_handler(ui_callback,(longlong)&ui_stack_event_parameter + 2);
  ui_dispatch_event_to_handler(ui_callback,(longlong)&ui_stack_event_parameter + 3);
  return ui_system_return_value;
}

/**
 * @brief 渲染UI组件函数
 * 
 * 渲染指定的UI组件，处理图形绘制和显示逻辑。
 * 
 * @param ui_callback 回调函数指针
 * @return uint32_t* 渲染结果数据指针
 */
uint32_t * ui_render_widget_function(uint32_t *ui_callback)

{
  uint32_t ui_system_event_id;
  longlong *ui_long_pointer_var;
  uint32_t ui_stack_extended_data_size;
  uint32_t ui_stack_variable_uint_1c;
  uint32_t ui_stack_extended_data_small;
  
  ui_long_pointer_var = (longlong *)ui_allocate_event_buffer(ui_config,UI_MEMORY_ALLOC_SIZE,8,3,UI_BIT_MASK_32BIT_FULLfffffffe);
  ui_long_pointer_var[1] = 0;
  ui_long_pointer_var[2] = 0;
  ui_long_pointer_var[3] = 0;
  ui_long_pointer_var[4] = 0;
  ui_long_pointer_var[5] = 0;
  *ui_long_pointer_var = (longlong)&ui_widget_manager;
  *(uint32_t *)(ui_long_pointer_var + 1) = 0;
  *ui_long_pointer_var = (longlong)&ui_system_click_context;
  ui_long_pointer_var[2] = 0;
  ui_long_pointer_var[3] = 0;
  ui_long_pointer_var[4] = 0;
  *(uint32_t *)(ui_long_pointer_var + 5) = 3;
  (**(ui_error_code **)(*ui_long_pointer_var + UI_CALLBACK_HANDLER_OFFSET))(ui_long_pointer_var);
  ui_system_event_id = (**(ui_error_code **)(*ui_long_pointer_var + 8))(ui_long_pointer_var);
  (**(ui_error_code **)(*ui_long_pointer_var + UI_CALLBACK_HANDLER_OFFSET))(ui_long_pointer_var);
  ui_stack_extended_data_size = ui_calculate_stack_size(ui_long_pointer_var,0);
  ui_stack_variable_uint_1c = (uint32_t)((ulonglong)ui_long_pointer_var >> UI_OFFSET_32);
  *ui_callback = ui_stack_extended_data_size;
  ui_callback[1] = ui_stack_variable_uint_1c;
  ui_callback[2] = ui_system_event_id;
  ui_callback[3] = ui_stack_extended_data_small;
  (**(ui_error_code **)(*ui_long_pointer_var + UI_MEMORY_DEALLOC_OFFSET))(ui_long_pointer_var);
  return return ui_callback;
}

uint64_t *
ui_system_create_vertex_buffer_var(uint64_t *ui_callback,ulonglong ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  uint64_t ui_system_event_id;
  
  ui_system_event_id = UI_BIT_MASK_32BIT_FULLfffffffe;
  ui_initialize_ui_system();
  *ui_callback = &ui_widget_manager;
  if ((ui_event_type & 1) != 0) {
    ui_memory_free(ui_callback,UI_MEMORY_ALLOC_SIZE,ui_event_data,ui_event_flags,ui_system_event_id);
  }
  return return ui_callback;
}

longlong * ui_system_handle_input(longlong *ui_callback_context,longlong ui_event_type,int ui_event_data)

{
  longlong *ui_long_counter_ptr;
  uint32_t ui_system_task_id;
  uint32_t ui_stack_variable_uint_c;
  
  ui_long_counter_ptr = *(longlong **)(*(longlong *)(ui_event_type + UI_EVENT_FLAG_OFFSET) + (longlong)ui_event_data * 8);
  if (ui_long_counter_ptr == (longlong *)UI_ZERO_OFFSET) {
    ui_system_task_id = UI_BIT_MASK_32BIT_FULL;
  }
  else {
    ui_system_task_id = (**(ui_error_code **)(*ui_long_counter_ptr + 8))(ui_long_counter_ptr);
    (**(ui_error_code **)(*ui_long_counter_ptr + UI_CALLBACK_HANDLER_OFFSET))(ui_long_counter_ptr);
  }
  *ui_callback = (longlong)ui_long_counter_ptr;
  ui_callback[1] = CONCAT44(ui_stack_variable_uint_c,ui_system_task_id);
  return return ui_callback;
}

void ui_process_event_functions(longlong ui_callback)

{
  longlong *ui_long_counter_ptr;
  longlong *ui_long_pointer_var;
  
  ui_long_counter_ptr = *(longlong **)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS);
  ui_long_pointer_var = *(longlong **)(ui_callback + UI_EVENT_FLAG_OFFSET);
  if (ui_long_pointer_var != ui_long_counter_ptr) {
    do {
      if ((longlong *)*ui_long_pointer_var != (longlong *)UI_ZERO_OFFSET) {
        (**(ui_error_code **)(*(longlong *)*ui_long_pointer_var + UI_MEMORY_DEALLOC_OFFSET))();
      }
      ui_long_pointer_var = ui_long_pointer_var + 1;
    } while (ui_long_pointer_var != ui_long_counter_ptr);
    *(uint64_t *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS) = *(uint64_t *)(ui_callback + UI_EVENT_FLAG_OFFSET);
    return ui_system_return_value;
  }
  *(longlong **)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS) = ui_long_pointer_var;
  return ui_system_return_value;
}

uint32_t * ui_system_update_layout(uint32_t *ui_callback)

{
  uint32_t ui_system_event_id;
  longlong *ui_long_pointer_var;
  uint32_t ui_stack_extended_data_size;
  uint32_t ui_stack_variable_uint_1c;
  uint32_t ui_stack_extended_data_small;
  
  ui_long_pointer_var = (longlong *)ui_allocate_event_buffer(ui_config,UI_MEMORY_ALLOC_SIZE,8,3,UI_BIT_MASK_32BIT_FULLfffffffe);
  ui_long_pointer_var[1] = 0;
  ui_long_pointer_var[2] = 0;
  ui_long_pointer_var[3] = 0;
  ui_long_pointer_var[4] = 0;
  ui_long_pointer_var[5] = 0;
  *ui_long_pointer_var = (longlong)&ui_widget_manager;
  *(uint32_t *)(ui_long_pointer_var + 1) = 0;
  *ui_long_pointer_var = (longlong)&ui_system_double_click_context;
  ui_long_pointer_var[2] = (longlong)&ui_widget_manager;
  ui_long_pointer_var[3] = 0;
  *(uint32_t *)(ui_long_pointer_var + 4) = 0;
  ui_long_pointer_var[2] = (longlong)&ui_widget_manager;
  ui_long_pointer_var[5] = 0;
  ui_long_pointer_var[3] = 0;
  *(uint32_t *)(ui_long_pointer_var + 4) = 0;
  (**(ui_error_code **)(*ui_long_pointer_var + UI_CALLBACK_HANDLER_OFFSET))(ui_long_pointer_var);
  ui_system_event_id = (**(ui_error_code **)(*ui_long_pointer_var + 8))(ui_long_pointer_var);
  (**(ui_error_code **)(*ui_long_pointer_var + UI_CALLBACK_HANDLER_OFFSET))(ui_long_pointer_var);
  ui_stack_extended_data_size = ui_calculate_stack_size(ui_long_pointer_var,0);
  ui_stack_variable_uint_1c = (uint32_t)((ulonglong)ui_long_pointer_var >> UI_OFFSET_32);
  *ui_callback = ui_stack_extended_data_size;
  ui_callback[1] = ui_stack_variable_uint_1c;
  ui_callback[2] = ui_system_event_id;
  ui_callback[3] = ui_stack_extended_data_small;
  (**(ui_error_code **)(*ui_long_pointer_var + UI_MEMORY_DEALLOC_OFFSET))(ui_long_pointer_var);
  return return ui_callback;
}

uint64_t *
ui_system_create_index_buffer_var(uint64_t *ui_callback,ulonglong ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  ui_callback[2] = &ui_widget_manager;
  if (ui_callback[3] != 0) {
    ui_event_handler_process_event();
  }
  ui_callback[3] = 0;
  *(uint32_t *)(ui_callback + 5) = 0;
  ui_callback[2] = &ui_widget_manager;
  *ui_callback = &ui_widget_manager;
  if ((ui_event_type & 1) != 0) {
    ui_memory_free(ui_callback,UI_MEMORY_ALLOC_SIZE,ui_event_data,ui_event_flags,UI_BIT_MASK_32BIT_FULLfffffffe);
  }
  return return ui_callback;
}

uint32_t ui_system_animate_widget(longlong ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  uint32_t ui_system_event_id;
  void* *pui_stack_unsigned_data_primary;
  longlong ui_stack_parameter_long;
  
  ui_system_memory_allocator(&pui_stack_unsigned_data_primary,ui_callback + UI_EVENT_FLAG_OFFSET,ui_event_data,ui_event_flags,UI_BIT_MASK_32BIT_FULLfffffffe);
  ui_system_event_id = (**(ui_error_code **)(*ui_config + UI_WIDGET_DATA_OFFSET))(ui_config,&pui_stack_unsigned_data_primary);
  pui_stack_unsigned_data_primary = &ui_widget_manager;
  if (ui_stack_parameter_long != 0) {
    ui_event_handler_process_event();
  }
  return return ui_system_event_id;
}

void ui_system_validate_layout(longlong ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  ulonglong ui_system_event_id;
  uint64_t ui_system_task_id;
  void* *pui_stack_unsigned_data_primary;
  longlong ui_stack_parameter_long;
  uint ui_stack_extended_data_size;
  uint32_t ui_stack_extended_data_small;
  
  ui_system_task_id = UI_BIT_MASK_32BIT_FULLfffffffe;
  ui_system_data_processor(&pui_stack_unsigned_data_primary);
  ui_system_event_id = (ulonglong)ui_stack_extended_data_size;
  if (ui_stack_parameter_long != 0) {
    ui_event_handler_initialize(ui_callback + UI_EVENT_FLAG_OFFSET,ui_system_event_id);
  }
  if (ui_stack_extended_data_size != 0) {
    memcpy(*(uint64_t *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS),ui_stack_parameter_long,ui_system_event_id,ui_event_flags,ui_system_task_id);
  }
  *(uint32_t *)(ui_callback + UI_OFFSET_32) = 0;
  if (*(longlong *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS) != 0) {
    *(uint8_t *)(ui_system_event_id + *(longlong *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS)) = 0;
  }
  *(uint32_t *)(ui_callback + UI_CALLBACK_DATA_OFFSET) = ui_stack_extended_data_small;
  pui_stack_unsigned_data_primary = &ui_widget_manager;
  if (ui_stack_parameter_long != 0) {
    ui_event_handler_process_event(ui_stack_parameter_long,ui_stack_parameter_long);
  }
  return ui_system_return_value;
}

uint64_t * ui_system_optimize_render(longlong ui_callback)

{
  uint64_t *ui_event_buffer;
  ulonglong ui_system_task_id;
  ulonglong ui_temp_ulong;
  
  ui_event_buffer = (uint64_t *)ui_allocate_event_buffer(ui_config,UI_OFFSET_32,8,3);
  *ui_event_buffer = &ui_widget_manager;
  ui_event_buffer[1] = 0;
  *(uint32_t *)(ui_event_buffer + 2) = 0;
  *ui_event_buffer = &ui_widget_manager;
  ui_event_buffer[3] = 0;
  ui_event_buffer[1] = 0;
  *(uint32_t *)(ui_event_buffer + 2) = 0;
  if (ui_callback != 0) {
    ui_system_task_id = UI_UINT64_MAX;
    do {
      ui_loop_counter = ui_system_task_id;
      ui_system_task_id = ui_loop_counter + 1;
    } while (*(char *)(ui_callback + ui_system_task_id) != UI_CHAR_NULL);
    ui_event_handler_initialize(ui_event_buffer,ui_system_task_id & UI_BIT_MASK_32BIT_FULL);
    if ((int)ui_system_task_id != 0) {
      memcpy(ui_event_buffer[1],ui_callback,(int)ui_loop_counter + 2);
    }
    *(uint32_t *)(ui_event_buffer + 2) = 0;
    if ((uint8_t *)ui_event_buffer[1] != (uint8_t *)UI_ZERO_OFFSET) {
      *(uint8_t *)ui_event_buffer[1] = 0;
    }
  }
  return return ui_event_buffer;
}

uint64_t *
ui_system_create_uniform_buffer_var(uint64_t ui_callback,uint64_t *ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  *ui_event_type = &ui_widget_manager;
  ui_event_type[1] = 0;
  *(uint32_t *)(ui_event_type + 2) = 0;
  *ui_event_type = &ui_widget_manager;
  ui_event_type[1] = ui_event_type + 3;
  *(uint8_t *)(ui_event_type + 3) = 0;
  *(uint32_t *)(ui_event_type + 2) = UI_RENDER_RESOURCE_TYPE;
  strcpy_s(ui_event_type[1],UI_STACK_SIZE_128,&ui_widget_manager,ui_event_flags,0,UI_BIT_MASK_32BIT_FULLfffffffe);
  return return ui_event_type;
}

uint64_t *
ui_system_update_buffer_var(uint64_t ui_callback,uint64_t *ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  *ui_event_type = &ui_widget_manager;
  ui_event_type[1] = 0;
  *(uint32_t *)(ui_event_type + 2) = 0;
  *ui_event_type = &ui_widget_manager;
  ui_event_type[1] = ui_event_type + 3;
  *(uint8_t *)(ui_event_type + 3) = 0;
  *(uint32_t *)(ui_event_type + 2) = UI_RESOURCE_LOAD_TYPE;
  strcpy_s(ui_event_type[1],UI_STACK_SIZE_128,&ui_widget_manager,ui_event_flags,0,UI_BIT_MASK_32BIT_FULLfffffffe);
  return return ui_event_type;
}

void ui_system_bind_buffer_var(uint64_t ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  ui_system_dispatch_render_command(ui_callback,ui_config,ui_event_data,ui_event_flags,UI_BIT_MASK_32BIT_FULLfffffffe);
  return ui_system_return_value;
}

void ui_system_draw_call(longlong *ui_callback_context)

{
  byte boolean_flag;
  bool ui_bool_result;
  uint64_t *ui_callback_ptr;
  char ui_character_value;
  longlong ui_event_index;
  longlong *ui_long_pointer_var;
  byte *ui_boolean_pointer;
  uint64_t *ui_event_buffer;
  byte *ui_flag_ptr;
  int ui_event_processing_counter;
  ulonglong ui_task_identifier;
  int ui_resource_management_counter;
  longlong *ui_long_counter_ptr5;
  longlong ui_loop_counter_primary;
  ulonglong ui_event_id7;
  byte *ui_boolean_flag8;
  byte *ui_boolean_flag9;
  ulonglong ui_task_index0;
  longlong *ui_long_pointer_var;
  uint ui_task_index2;
  longlong ui_event_index;
  longlong *ui_stack_variable_extended_ptr_long;
  void* *ui_pointer_stack_variable_b8;
  byte *ui_stack_boolean_pointer;
  uint ui_stack_variable_uint_a8;
  ulonglong ui_stack_variable_uint_a0;
  void* *ui_stack_pointer_buffer_start;
  uint8_t *ui_stack_pointer_buffer_end;
  uint ui_stack_extended_data_primary;
  ulonglong ui_stack_extended_buffer_size;
  longlong *pui_stack_parameter_long;
  uint32_t ui_stack_operation_flag;
  uint64_t *ui_stack_extended_pointer;
  uint64_t *ui_event_data_pointer_secondary;
  uint64_t ui_stack_validation_mask;
  uint32_t ui_stack_standard_buffer_size;
  uint64_t ui_stack_buffer_mask;
  
  ui_stack_buffer_mask = UI_BIT_MASK_32BIT_FULLfffffffe;
  ui_config = ui_callback;
  if (ui_callback != (longlong *)UI_ZERO_OFFSET) {
    (**(ui_error_code **)(*ui_callback + 8))();
  }
  pui_stack_parameter_long = (longlong *)UI_ZERO_OFFSET;
  ui_task_index0 = 0;
  pui_stack_parameter_long = (longlong *)UI_ZERO_OFFSET;
  ui_stack_operation_flag = 3;
  ui_system_render_geometry(&pui_stack_parameter_long);
  ui_long_pointer_var = pui_stack_parameter_long;
  if (ui_config != (longlong *)UI_ZERO_OFFSET) {
    ui_stack_extended_pointer = (uint64_t *)UI_ZERO_OFFSET;
    ui_event_data_pointer_secondary = (uint64_t *)UI_ZERO_OFFSET;
    ui_stack_validation_mask = 0;
    ui_stack_standard_buffer_size = 3;
    (**(ui_error_code **)(*ui_config + UI_SNAPSHOT_CREATE_FLAGS))(ui_config,&ui_stack_extended_pointer);
    ui_event_buffer = ui_stack_extended_pointer;
    ui_callback_ptr = ui_event_data_pointer_secondary;
    ui_long_pointer_var = pui_stack_parameter_long;
    if ((longlong)ui_event_data_pointer_secondary - (longlong)ui_stack_extended_pointer >> 5 != 0) {
      ui_stack_variable_extended_ptr_long = pui_stack_parameter_long;
      ui_long_counter_ptr5 = pui_stack_parameter_long;
      ui_task_identifier = ui_task_index0;
      ui_long_pointer_var = pui_stack_parameter_long;
      do {
        ui_event_buffer = ui_stack_extended_pointer;
        ui_pointer_stack_variable_b8 = &ui_widget_manager;
        ui_stack_variable_uint_a0 = 0;
        ui_stack_boolean_pointer = (uint8_t *)UI_ZERO_OFFSET;
        ui_stack_variable_uint_a8 = 0;
        ui_event_handler_initialize(&ui_pointer_stack_variable_b8,*(uint32_t *)(ui_task_index0 + UI_EVENT_FLAG_OFFSET + (longlong)ui_stack_extended_pointer));
        ui_resource_management_counter = *(int *)(ui_task_index0 + UI_EVENT_FLAG_OFFSET + (longlong)ui_event_buffer);
        if (ui_resource_management_counter != 0) {
          memcpy(ui_stack_boolean_pointer,*(uint64_t *)(ui_task_index0 + 8 + (longlong)ui_event_buffer),ui_resource_management_counter + 1);
        }
        if (*(longlong *)(ui_task_index0 + 8 + (longlong)ui_event_buffer) != 0) {
          ui_stack_variable_uint_a8 = 0;
          if (ui_stack_boolean_pointer != (uint8_t *)UI_ZERO_OFFSET) {
            *ui_stack_boolean_pointer = 0;
          }
          ui_stack_variable_uint_a0 = ui_stack_variable_uint_a0 & UI_BIT_MASK_32BIT_FULL;
        }
        ui_stack_pointer_buffer_start = &ui_widget_manager;
        ui_stack_extended_buffer_size = 0;
        ui_stack_pointer_buffer_end = (uint8_t *)UI_ZERO_OFFSET;
        ui_stack_extended_data_primary = 0;
        ui_event_handler_initialize(&ui_stack_pointer_buffer_start,ui_stack_variable_uint_a8);
        if (ui_stack_variable_uint_a8 != 0) {
          memcpy(ui_stack_pointer_buffer_end,ui_stack_boolean_pointer,ui_stack_variable_uint_a8 + 1);
        }
        if (ui_stack_boolean_pointer != (uint8_t *)UI_ZERO_OFFSET) {
          ui_stack_extended_data_primary = 0;
          if (ui_stack_pointer_buffer_end != (uint8_t *)UI_ZERO_OFFSET) {
            *ui_stack_pointer_buffer_end = 0;
          }
          ui_stack_extended_buffer_size = ui_stack_extended_buffer_size & UI_BIT_MASK_32BIT_FULL;
        }
        ui_resource_management_counter = ui_stack_extended_data_primary + ui_component_angle_offset;
        ui_event_handler_initialize(&ui_stack_pointer_buffer_start,ui_resource_management_counter);
        ui_event_buffer = (uint64_t *)(ui_stack_pointer_buffer_end + ui_stack_extended_data_primary);
        *ui_event_buffer = UI_SYSTEM_MAGIC_NUMBER;
        *(uint32_t *)(ui_event_buffer + 1) = UI_OFFSET_l.le2;
        *(uint16_t *)((longlong)ui_event_buffer + 12) = UI_SIGNATURE_PART66d;
        *(uint8_t *)((longlong)ui_event_buffer + ui_component_angle_offset) = 0;
        ui_stack_extended_data_primary = ui_resource_management_counter;
        ui_character_value = ui_get_character_value(&ui_stack_pointer_buffer_start);
        ui_long_pointer_var = ui_long_pointer_var;
        if (ui_character_value != UI_CHAR_NULL) {
          ui_event_index = ui_system_calculate_layout(&ui_stack_pointer_buffer_start);
          if (ui_long_pointer_var < ui_long_counter_ptr5) {
            ui_long_pointer_var = ui_long_pointer_var + 1;
            *ui_long_pointer_var = ui_event_index;
            ui_stack_variable_extended_ptr_long = ui_long_pointer_var;
            pui_stack_parameter_long = ui_long_pointer_var;
          }
          else {
            ui_event_index = (longlong)ui_long_pointer_var - (longlong)pui_stack_parameter_long;
            ui_loop_counter_primary = ui_event_index >> 3;
            if (ui_loop_counter_primary == 0) {
              ui_loop_counter_primary = 1;
UI_LABEL_RENDER_PREPARE:
              ui_long_pointer_var = (longlong *)ui_event_dispatcher(ui_config,ui_loop_counter_primary * 8,(uint8_t)ui_stack_operation_flag);
            }
            else {
              ui_loop_counter_primary = ui_loop_counter_primary * 2;
              if (ui_loop_counter_primary != 0) goto UI_LABEL_GENERIC_656abd;
              ui_long_pointer_var = (longlong *)UI_ZERO_OFFSET;
            }
            if (pui_stack_parameter_long != ui_stack_variable_extended_ptr_long) {
              memmove(ui_long_pointer_var,pui_stack_parameter_long,ui_event_index);
            }
            *ui_long_pointer_var = ui_event_index;
            ui_long_pointer_var = ui_long_pointer_var + 1;
            ui_stack_variable_extended_ptr_long = ui_long_pointer_var;
            if (pui_stack_parameter_long != (longlong *)UI_ZERO_OFFSET) {
              ui_event_handler_process_event();
            }
            ui_long_counter_ptr5 = ui_long_pointer_var + ui_loop_counter_primary;
            pui_stack_parameter_long = ui_long_pointer_var;
            pui_stack_parameter_long = ui_long_counter_ptr5;
          }
        }
        ui_stack_pointer_buffer_start = &ui_widget_manager;
        if (ui_stack_pointer_buffer_end != (uint8_t *)UI_ZERO_OFFSET) {
          ui_event_handler_process_event();
        }
        ui_stack_pointer_buffer_end = (uint8_t *)UI_ZERO_OFFSET;
        ui_stack_extended_buffer_size = ui_stack_extended_buffer_size & UI_BIT_MASK_32BIT_FULL00000000;
        ui_stack_pointer_buffer_start = &ui_widget_manager;
        ui_pointer_stack_variable_b8 = &ui_widget_manager;
        if (ui_stack_boolean_pointer != (uint8_t *)UI_ZERO_OFFSET) {
          ui_event_handler_process_event();
        }
        ui_stack_boolean_pointer = (byte *)UI_ZERO_OFFSET;
        ui_stack_variable_uint_a0 = ui_stack_variable_uint_a0 & UI_BIT_MASK_32BIT_FULL00000000;
        ui_pointer_stack_variable_b8 = &ui_widget_manager;
        ui_task_index2 = (int)ui_task_identifier + 1;
        ui_task_identifier = (ulonglong)ui_task_index2;
        ui_task_index0 = ui_task_index0 + UI_OFFSET_32;
        ui_long_pointer_var = ui_long_pointer_var;
        ui_event_buffer = ui_stack_extended_pointer;
        ui_callback_ptr = ui_event_data_pointer_secondary;
      } while ((ulonglong)(longlong)(int)ui_task_index2 <
               (ulonglong)((longlong)ui_event_data_pointer_secondary - (longlong)ui_stack_extended_pointer >> 5));
    }
    for (; ui_callback_ptr = ui_event_data_pointer_secondary, ui_event_buffer != ui_event_data_pointer_secondary; ui_event_buffer = ui_event_buffer + 4) {
      ui_event_data_pointer_secondary = ui_callback_ptr;
      (**(ui_error_code **)*ui_event_buffer)(ui_event_buffer,0);
      ui_callback_ptr = ui_event_data_pointer_secondary;
      ui_event_data_pointer_secondary = ui_callback_ptr;
    }
    if (ui_stack_extended_pointer != (uint64_t *)UI_ZERO_OFFSET) {
      ui_event_data_pointer_secondary = ui_callback_ptr;
      ui_event_handler_process_event();
    }
    ui_stack_extended_pointer = (uint64_t *)UI_ZERO_OFFSET;
    ui_event_data_pointer_secondary = ui_callback_ptr;
  }
  ui_resource_management_counter = 0;
  ui_task_index0 = (longlong)ui_long_pointer_var - (longlong)pui_stack_parameter_long >> 3;
  ui_long_pointer_var = pui_stack_parameter_long;
  if (ui_task_index0 != 0) {
    do {
      ui_task_identifier = 0;
      ui_boolean_pointer = &ui_system_global_data;
      ui_event_index = *ui_long_pointer_var;
      ui_pointer_stack_variable_b8 = &ui_widget_manager;
      ui_stack_variable_uint_a0 = 0;
      ui_stack_boolean_pointer = (byte *)UI_ZERO_OFFSET;
      ui_stack_variable_uint_a8 = 0;
      ui_event_handler_initialize(&ui_pointer_stack_variable_b8,*(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET));
      if (*(int *)(ui_event_index + UI_EVENT_FLAG_OFFSET) != 0) {
        memcpy(ui_stack_boolean_pointer,*(uint64_t *)(ui_event_index + 8),*(int *)(ui_event_index + UI_EVENT_FLAG_OFFSET) + 1);
      }
      if (*(longlong *)(ui_event_index + 8) != 0) {
        ui_stack_variable_uint_a8 = 0;
        if (ui_stack_boolean_pointer != (byte *)UI_ZERO_OFFSET) {
          *ui_stack_boolean_pointer = 0;
        }
        ui_stack_variable_uint_a0 = ui_stack_variable_uint_a0 & UI_BIT_MASK_32BIT_FULL;
      }
      ui_event_id7 = ui_task_identifier;
      if (ui_stack_variable_uint_a8 != 0) {
        do {
          if ((byte)(ui_stack_boolean_pointer[ui_event_id7] + UI_MEMORY_RESOURCE_TYPE_EXTENDED) < UI_MEMORY_RESOURCE_TYPE) {
            ui_stack_boolean_pointer[ui_event_id7] = ui_stack_boolean_pointer[ui_event_id7] + UI_OFFSET_32;
          }
          ui_task_index2 = (int)ui_task_identifier + 1;
          ui_task_identifier = (ulonglong)ui_task_index2;
          ui_event_id7 = ui_event_id7 + 1;
        } while (ui_task_index2 < ui_stack_variable_uint_a8);
      }
      ui_boolean_flag8 = ui_config;
      if (ui_config == (byte *)UI_ZERO_OFFSET) {
UI_LABEL_EVENT_QUEUE:
        ui_flag_ptr = &ui_system_global_data;
        ui_boolean_pointer = ui_config;
        while (ui_boolean_pointer = ui_flag_ptr, ui_boolean_pointer != (byte *)UI_ZERO_OFFSET) {
          if (ui_stack_variable_uint_a8 == 0) {
            ui_bool_result = false;
            ui_boolean_flag9 = *(byte **)(ui_boolean_pointer + 8);
          }
          else {
            if (*(int *)(ui_boolean_pointer + UI_MEMORY_ALLOC_SIZE) == 0) {
              ui_bool_result = true;
            }
            else {
              ui_flag_ptr = ui_stack_boolean_pointer;
              do {
                ui_boolean_flag9 = ui_flag_ptr + (*(longlong *)(ui_boolean_pointer + UI_CALLBACK_HANDLER_OFFSET) - (longlong)ui_stack_boolean_pointer);
                ui_task_index2 = (uint)*ui_flag_ptr - (uint)*ui_boolean_flag9;
                ui_boolean_flag8 = (byte *)(ulonglong)ui_task_index2;
                if (ui_task_index2 != 0) break;
                ui_flag_ptr = ui_flag_ptr + 1;
              } while (*ui_boolean_flag9 != 0);
              ui_bool_result = 0 < (int)ui_task_index2;
              if ((int)ui_task_index2 < 1) {
                ui_boolean_flag9 = *(byte **)(ui_boolean_pointer + 8);
                goto UI_LABEL_INPUT_PROCESSING_COMPLETE;
              }
            }
            ui_boolean_flag9 = *(byte **)ui_boolean_pointer;
          }
UI_LABEL_FOCUS_HANDLER:
          ui_flag_ptr = ui_boolean_pointer;
          ui_boolean_pointer = ui_boolean_flag9;
          if (ui_bool_result) {
            ui_flag_ptr = ui_boolean_pointer;
          }
        }
        if (ui_boolean_pointer == &ui_system_global_data) {
UI_LABEL_ANIMATION_START:
          ui_event_buffer = (uint64_t *)ui_system_process_render_queue(&ui_pointer_stack_variable_b8,&ui_stack_variable_extended_ptr_long,ui_boolean_flag8,ui_boolean_pointer,&ui_pointer_stack_variable_b8);
          ui_boolean_pointer = (byte *)*ui_event_buffer;
        }
        else if (*(int *)(ui_boolean_pointer + UI_MEMORY_ALLOC_SIZE) != 0) {
          if (ui_stack_variable_uint_a8 != 0) {
            ui_boolean_pointer = *(byte **)(ui_boolean_pointer + UI_CALLBACK_HANDLER_OFFSET);
            ui_loop_counter_primary = (longlong)ui_stack_boolean_pointer - (longlong)ui_boolean_pointer;
            do {
              ui_flag_ptr = ui_boolean_pointer + ui_loop_counter_primary;
              ui_task_index2 = (uint)*ui_boolean_pointer - (uint)*ui_flag_ptr;
              ui_boolean_flag8 = (byte *)(ulonglong)ui_task_index2;
              if (ui_task_index2 != 0) break;
              ui_boolean_pointer = ui_boolean_pointer + 1;
            } while (*ui_flag_ptr != 0);
            if ((int)ui_task_index2 < 1) goto UI_LABEL_EVENT_DISPATCH_READY;
          }
          goto UI_LABEL_WIDGET_VALIDATION_START;
        }
UI_LABEL_SOUND_TRIGGER:
        *(longlong *)(ui_boolean_pointer + UI_BUFFER_SIZE_64) = ui_event_index;
      }
      else {
        do {
          if (ui_stack_variable_uint_a8 == 0) {
            ui_bool_result = false;
            ui_flag_ptr = *(byte **)(ui_boolean_flag8 + 8);
          }
          else {
            if (*(int *)(ui_boolean_flag8 + UI_MEMORY_ALLOC_SIZE) == 0) {
              ui_bool_result = true;
            }
            else {
              ui_flag_ptr = ui_stack_boolean_pointer;
              do {
                ui_task_index2 = (uint)ui_flag_ptr[*(longlong *)(ui_boolean_flag8 + UI_CALLBACK_HANDLER_OFFSET) - (longlong)ui_stack_boolean_pointer];
                ui_event_processing_counter = *ui_flag_ptr - ui_task_index2;
                if (*ui_flag_ptr != ui_task_index2) break;
                ui_flag_ptr = ui_flag_ptr + 1;
              } while (ui_task_index2 != 0);
              ui_bool_result = 0 < ui_event_processing_counter;
              if (ui_event_processing_counter < 1) {
                ui_flag_ptr = *(byte **)(ui_boolean_flag8 + 8);
                goto UI_LABEL_INPUT_HANDLER_RESET;
              }
            }
            ui_flag_ptr = *(byte **)ui_boolean_flag8;
          }
UI_LABEL_LAYOUT_UPDATE:
          if (ui_bool_result) {
            ui_boolean_flag8 = ui_boolean_pointer;
          }
          ui_boolean_pointer = ui_boolean_flag8;
          ui_boolean_flag8 = ui_flag_ptr;
        } while (ui_flag_ptr != (byte *)UI_ZERO_OFFSET);
        ui_boolean_flag8 = (byte *)UI_ZERO_OFFSET;
        if (ui_boolean_pointer == &ui_system_global_data) goto UI_LABEL_GENERIC_656d5b;
        if (*(int *)(ui_boolean_pointer + UI_MEMORY_ALLOC_SIZE) != 0) {
          if (ui_stack_variable_uint_a8 != 0) {
            ui_boolean_pointer = *(byte **)(ui_boolean_pointer + UI_CALLBACK_HANDLER_OFFSET);
            ui_boolean_flag8 = ui_stack_boolean_pointer + -(longlong)ui_boolean_pointer;
            do {
              boolean_flag = *ui_boolean_pointer;
              ui_task_index2 = (uint)ui_boolean_pointer[(longlong)ui_boolean_flag8];
              if (boolean_flag != ui_task_index2) break;
              ui_boolean_pointer = ui_boolean_pointer + 1;
            } while (ui_task_index2 != 0);
            if ((int)(boolean_flag - ui_task_index2) < 1) goto UI_LABEL_WIDGET_FOCUS_SET;
          }
          goto UI_LABEL_GENERIC_656d5b;
        }
      }
UI_LABEL_WIDGET_FOCUS_SET:
      ui_pointer_stack_variable_b8 = &ui_widget_manager;
      if (ui_stack_boolean_pointer != (byte *)UI_ZERO_OFFSET) {
        ui_event_handler_process_event();
      }
      ui_stack_boolean_pointer = (byte *)UI_ZERO_OFFSET;
      ui_stack_variable_uint_a0 = ui_stack_variable_uint_a0 & UI_BIT_MASK_32BIT_FULL00000000;
      ui_pointer_stack_variable_b8 = &ui_widget_manager;
      ui_resource_management_counter = ui_resource_management_counter + 1;
      ui_long_pointer_var = ui_long_pointer_var + 1;
    } while ((ulonglong)(longlong)ui_resource_management_counter < ui_task_index0);
  }
  if (pui_stack_parameter_long != (longlong *)UI_ZERO_OFFSET) {
    ui_event_handler_process_event(pui_stack_parameter_long);
  }
  return ui_system_return_value;
}

void ui_system_render_geometry(ulonglong *ui_callback_context)

{
  uint64_t *ui_event_buffer;
  uint64_t *ui_task_index_pointer;
  char ui_character_value;
  uint64_t ui_loop_counter;
  longlong ui_event_index;
  uint64_t *ui_callback_ptr;
  int ui_result_status;
  int *ui_ptr_int_counter;
  int ui_event_validation_counter;
  ulonglong ui_event_id_secondary;
  uint8_t ui_stack_array [32];
  void* *ui_stack_pointer_widget_control;
  uint8_t *ui_stack_pointer_buffer_control;
  uint ui_stack_unsigned_data_secondary;
  ulonglong ui_stack_variable_uint_c0;
  uint32_t ui_control_status;
  void* *ui_pointer_stack_variable_b0;
  longlong ui_stack_parameter_longa8;
  uint ui_stack_variable_uint_a0;
  uint32_t ui_stack_variable_uint_98;
  ulonglong ui_stack_ulong_event_id_primary;
  uint64_t *pui_stack_extended_data_primary;
  uint64_t *pui_stack_extended_size_128;
  uint64_t ui_stack_variable_uint_78;
  uint32_t ui_stack_uint_callback_count_primary;
  uint64_t ui_event_mask_primary;
  void* *ui_stack_pointer_widget_handler_primary;
  ulonglong *ui_stack_extended_pointer;
  int ui_stack_int_event_type_primary;
  ulonglong ui_stack_array [2];
  ulonglong ui_stack_buffer_mask;
  
  ui_event_mask_primary = UI_BIT_MASK_32BIT_FULLfffffffe;
  ui_stack_buffer_mask = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_event_validation_counter = 0;
  ui_control_status = 0;
  ui_stack_pointer_widget_handler_primary = &ui_widget_manager;
  ui_stack_extended_pointer = ui_stack_array;
  ui_stack_array[0] = ui_stack_array[0] & UI_BIT_MASK_32BIT_FULLffffff00;
  ui_stack_int_event_type_primary = 6;
  strcpy_s(ui_stack_array,UI_EVENT_FLAG_OFFSET,&ui_widget_manager);
  ui_control_status = 1;
  ui_setup_event_callbacks(&ui_pointer_stack_variable_b0,&ui_stack_pointer_widget_handler_primary);
  ui_control_status = 0;
  ui_stack_pointer_widget_handler_primary = &ui_widget_manager;
  ui_result_status = ui_stack_variable_uint_a0 + 8;
  ui_event_handler_initialize(&ui_pointer_stack_variable_b0,ui_result_status);
  *(uint64_t *)((ulonglong)ui_stack_variable_uint_a0 + ui_stack_parameter_longa8) = UI_SIGNATURE_PART573656c75646f4d;
  *(uint8_t *)((uint64_t *)((ulonglong)ui_stack_variable_uint_a0 + ui_stack_parameter_longa8) + 1) = 0;
  pui_stack_extended_data_primary = (uint64_t *)UI_ZERO_OFFSET;
  pui_stack_extended_size_128 = (uint64_t *)UI_ZERO_OFFSET;
  ui_stack_variable_uint_78 = 0;
  ui_stack_uint_callback_count_primary = 3;
  ui_stack_variable_uint_a0 = ui_result_status;
  ui_validate_event_data(&ui_pointer_stack_variable_b0,&pui_stack_extended_data_primary);
  ui_event_id_secondary = (longlong)pui_stack_extended_size_128 - (longlong)pui_stack_extended_data_primary >> 5;
  ui_stack_ulong_event_id_primary = ui_event_id_secondary;
  ui_callback_ptr = pui_stack_extended_data_primary;
  ui_callback_ptr = pui_stack_extended_size_128;
  if (ui_event_id_secondary != 0) {
    ui_ptr_int_counter = (int *)(pui_stack_extended_data_primary + 2);
    do {
      ui_stack_pointer_widget_handler_primary = &ui_widget_manager;
      ui_stack_array[0] = 0;
      ui_stack_extended_pointer = (ulonglong *)UI_ZERO_OFFSET;
      ui_stack_int_event_type_primary = 0;
      ui_event_handler_initialize(&ui_stack_pointer_widget_handler_primary,*ui_ptr_int_counter);
      if (*ui_ptr_int_counter != 0) {
        memcpy(ui_stack_extended_pointer,*(uint64_t *)(ui_ptr_int_counter + -2),*ui_ptr_int_counter + 1);
      }
      if (*(longlong *)(ui_ptr_int_counter + -2) != 0) {
        ui_stack_int_event_type_primary = 0;
        if (ui_stack_extended_pointer != (ulonglong *)UI_ZERO_OFFSET) {
          *(uint8_t *)ui_stack_extended_pointer = 0;
        }
        ui_stack_array[0] = ui_stack_array[0] & UI_BIT_MASK_32BIT_FULL;
      }
      ui_stack_pointer_widget_control = &ui_widget_manager;
      ui_stack_variable_uint_c0 = 0;
      ui_stack_pointer_buffer_control = (uint8_t *)UI_ZERO_OFFSET;
      ui_stack_unsigned_data_secondary = 0;
      ui_event_handler_initialize(&ui_stack_pointer_widget_control,ui_stack_int_event_type_primary);
      if (ui_stack_int_event_type_primary != 0) {
        memcpy(ui_stack_pointer_buffer_control,ui_stack_extended_pointer,ui_stack_int_event_type_primary + 1);
      }
      if (ui_stack_extended_pointer != (ulonglong *)UI_ZERO_OFFSET) {
        ui_stack_unsigned_data_secondary = 0;
        if (ui_stack_pointer_buffer_control != (uint8_t *)UI_ZERO_OFFSET) {
          *ui_stack_pointer_buffer_control = 0;
        }
        ui_stack_variable_uint_c0 = ui_stack_variable_uint_c0 & UI_BIT_MASK_32BIT_FULL;
      }
      ui_result_status = ui_stack_unsigned_data_secondary + ui_component_angle_offset;
      ui_event_handler_initialize(&ui_stack_pointer_widget_control,ui_result_status);
      ui_callback_ptr = (uint64_t *)(ui_stack_pointer_buffer_control + ui_stack_unsigned_data_secondary);
      *ui_callback_ptr = UI_SYSTEM_MAGIC_NUMBER;
      *(uint32_t *)(ui_callback_ptr + 1) = UI_OFFSET_l.le2;
      *(uint16_t *)((longlong)ui_callback_ptr + 12) = UI_SIGNATURE_PART66d;
      *(uint8_t *)((longlong)ui_callback_ptr + ui_component_angle_offset) = 0;
      ui_stack_unsigned_data_secondary = ui_result_status;
      ui_character_value = ui_get_character_value(&ui_stack_pointer_widget_control);
      if (ui_character_value != UI_CHAR_NULL) {
        ui_loop_counter = ui_system_calculate_layout(&ui_stack_pointer_widget_control);
        ui_callback_ptr = (uint64_t *)ui_callback[1];
        if (ui_callback_ptr < (uint64_t *)ui_callback[2]) {
          ui_callback[1] = (ulonglong)(ui_callback_ptr + 1);
          *ui_callback_ptr = ui_loop_counter;
        }
        else {
          ui_callback_ptr = (uint64_t *)*ui_callback;
          ui_event_index = (longlong)ui_callback_ptr - (longlong)ui_callback_ptr >> 3;
          if (ui_event_index == 0) {
            ui_event_index = 1;
UI_LABEL_LAYOUT_UPDATE_START:
            ui_callback_ptr = (uint64_t *)ui_event_dispatcher(ui_config,ui_event_index * 8,(char)ui_callback[3]);
            ui_callback_ptr = (uint64_t *)ui_callback[1];
            ui_callback_ptr = (uint64_t *)*ui_callback;
          }
          else {
            ui_event_index = ui_event_index * 2;
            if (ui_event_index != 0) goto UI_LABEL_LAYOUT_UPDATE_START;
            ui_callback_ptr = (uint64_t *)UI_ZERO_OFFSET;
          }
          if (ui_callback_ptr != ui_callback_ptr) {
            memmove(ui_callback_ptr,ui_callback_ptr,(longlong)ui_callback_ptr - (longlong)ui_callback_ptr);
          }
          *ui_callback_ptr = ui_loop_counter;
          if (*ui_callback != 0) {
            ui_event_handler_process_event();
          }
          *ui_callback = (ulonglong)ui_callback_ptr;
          ui_callback[1] = (ulonglong)(ui_callback_ptr + 1);
          ui_callback[2] = (ulonglong)(ui_callback_ptr + ui_event_index);
          ui_event_id_secondary = ui_stack_ulong_event_id_primary;
        }
      }
      ui_stack_pointer_widget_control = &ui_widget_manager;
      if (ui_stack_pointer_buffer_control != (uint8_t *)UI_ZERO_OFFSET) {
        ui_event_handler_process_event();
      }
      ui_stack_pointer_buffer_control = (uint8_t *)UI_ZERO_OFFSET;
      ui_stack_variable_uint_c0 = ui_stack_variable_uint_c0 & UI_BIT_MASK_32BIT_FULL00000000;
      ui_stack_pointer_widget_control = &ui_widget_manager;
      ui_stack_pointer_widget_handler_primary = &ui_widget_manager;
      if (ui_stack_extended_pointer != (ulonglong *)UI_ZERO_OFFSET) {
        ui_event_handler_process_event();
      }
      ui_stack_extended_pointer = (ulonglong *)UI_ZERO_OFFSET;
      ui_stack_array[0] = ui_stack_array[0] & UI_BIT_MASK_32BIT_FULL00000000;
      ui_stack_pointer_widget_handler_primary = &ui_widget_manager;
      ui_event_validation_counter = ui_event_validation_counter + 1;
      ui_ptr_int_counter = ui_ptr_int_counter + 8;
      ui_callback_ptr = pui_stack_extended_data_primary;
      ui_callback_ptr = pui_stack_extended_size_128;
    } while ((ulonglong)(longlong)ui_event_validation_counter < ui_event_id_secondary);
  }
  for (; ui_task_index_pointer = pui_stack_extended_size_128, ui_event_buffer = pui_stack_extended_data_primary, ui_callback_ptr != pui_stack_extended_size_128; ui_callback_ptr = ui_callback_ptr + 4) {
    pui_stack_extended_data_primary = ui_callback_ptr;
    pui_stack_extended_size_128 = ui_callback_ptr;
    (**(ui_error_code **)*ui_callback_ptr)(ui_callback_ptr,0);
    ui_callback_ptr = pui_stack_extended_data_primary;
    ui_callback_ptr = pui_stack_extended_size_128;
    pui_stack_extended_size_128 = ui_task_index_pointer;
    pui_stack_extended_data_primary = ui_event_buffer;
  }
  if (pui_stack_extended_data_primary != (uint64_t *)UI_ZERO_OFFSET) {
    pui_stack_extended_data_primary = ui_callback_ptr;
    pui_stack_extended_size_128 = ui_callback_ptr;
    ui_event_handler_process_event(ui_event_buffer);
  }
  ui_pointer_stack_variable_b0 = &ui_widget_manager;
  if (ui_stack_parameter_longa8 != 0) {
    pui_stack_extended_data_primary = ui_callback_ptr;
    pui_stack_extended_size_128 = ui_callback_ptr;
    ui_event_handler_process_event();
  }
  ui_stack_parameter_longa8 = 0;
  ui_stack_variable_uint_98 = 0;
  ui_pointer_stack_variable_b0 = &ui_widget_manager;
  pui_stack_extended_data_primary = ui_callback_ptr;
  pui_stack_extended_size_128 = ui_callback_ptr;
  RenderUIComponent(ui_stack_buffer_mask ^ (ulonglong)ui_stack_array);
}

/**
 * UI系统着色器应用函数
 * 
 * 负责UI系统中的着色器应用操作，包括着色器程序加载、参数设置和渲染效果应用。
 * 该函数是UI渲染系统的核心组件，确保UI元素的视觉效果正确显示。
 * 
 * @param ui_callback 回调函数指针
 * @param ui_event_type 事件类型
 * @param ui_event_data 事件数据
 * @param ui_event_flags 事件标志
 * @return 着色器应用结果码
 * 
 * 简化实现：主要处理了变量名的语义化替换，保持原有逻辑结构不变
 */
uint64_t
ui_system_apply_shader(uint64_t ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  uint ui_system_event_id;
  uint64_t ui_system_task_id;
  longlong ui_event_index;
  void* *apui_stack_event_parameter [3];
  void* *pui_stack_unsigned_data_primary;
  longlong ui_stack_parameter_long;
  uint ui_stack_extended_data_size;
  
  ui_system_memory_allocator(&pui_stack_unsigned_data_primary,ui_callback,ui_event_data,ui_event_flags,UI_BIT_MASK_32BIT_FULLfffffffe);
  ui_system_event_id = 0;
  if (ui_stack_extended_data_size != 0) {
    ui_event_index = 0;
    do {
      if ((byte)(*(char *)(ui_stack_parameter_long + ui_event_index) + 0xbfU) < UI_MEMORY_RESOURCE_TYPE) {
        *(char *)(ui_stack_parameter_long + ui_event_index) = *(char *)(ui_stack_parameter_long + ui_event_index) + ' ';
      }
      ui_system_event_id = ui_system_event_id + 1;
      ui_event_index = ui_event_index + 1;
    } while (ui_system_event_id < ui_stack_extended_data_size);
  }
  ui_system_get_uniform_location(ui_system_event_id,apui_stack_event_parameter,&pui_stack_unsigned_data_primary);
  if (apui_stack_event_parameter[0] == &ui_system_global_data) {
    ui_system_task_id = 0;
  }
  else {
    ui_system_task_id = *(uint64_t *)(apui_stack_event_parameter[0] + UI_BUFFER_SIZE_64);
  }
  pui_stack_unsigned_data_primary = &ui_widget_manager;
  if (ui_stack_parameter_long != 0) {
    ui_event_handler_process_event();
  }
  return return ui_system_task_id;
}

void ui_system_set_shader_uniform(uint64_t ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  ui_system_dispatch_render_command(ui_callback,ui_config,ui_event_data,ui_event_flags,UI_BIT_MASK_32BIT_FULLfffffffe);
  return ui_system_return_value;
}

uint64_t * ui_system_get_uniform_location(uint64_t ui_callback,uint64_t *ui_event_type,longlong ui_event_data)

{
  byte boolean_flag;
  bool ui_bool_result;
  byte *ui_boolean_pointer;
  uint ui_loop_counter;
  int ui_result_status;
  longlong ui_event_index;
  uint64_t *ui_callback_ptr;
  uint64_t *ui_event_buffer;
  
  if (ui_config != (uint64_t *)UI_ZERO_OFFSET) {
    ui_callback_ptr = ui_config;
    ui_event_buffer = (uint64_t *)&ui_system_global_data;
    do {
      if (*(int *)(ui_event_data + UI_EVENT_FLAG_OFFSET) == 0) {
        ui_callback_ptr = (uint64_t *)ui_callback_ptr[1];
        ui_bool_result = false;
      }
      else {
        if (*(int *)(ui_callback_ptr + 6) == 0) {
          ui_bool_result = true;
        }
        else {
          ui_boolean_pointer = *(byte **)(ui_event_data + 8);
          ui_event_index = ui_callback_ptr[5] - (longlong)ui_boolean_pointer;
          do {
            ui_loop_counter = (uint)ui_boolean_pointer[ui_event_index];
            ui_result_status = *ui_boolean_pointer - ui_loop_counter;
            if (*ui_boolean_pointer != ui_loop_counter) break;
            ui_boolean_pointer = ui_boolean_pointer + 1;
          } while (ui_loop_counter != 0);
          ui_bool_result = 0 < ui_result_status;
          if (ui_result_status < 1) {
            ui_callback_ptr = (uint64_t *)ui_callback_ptr[1];
            goto UI_LABEL_WIDGET_ANIMATION_BEGIN;
          }
        }
        ui_callback_ptr = (uint64_t *)*ui_callback_ptr;
      }
UI_LABEL_WIDGET_ANIMATION_BEGIN:
      ui_callback_ptr = ui_callback_ptr;
      if (ui_bool_result) {
        ui_callback_ptr = ui_event_buffer;
      }
      ui_callback_ptr = ui_callback_ptr;
      ui_event_buffer = ui_callback_ptr;
    } while (ui_callback_ptr != (uint64_t *)UI_ZERO_OFFSET);
    if (ui_callback_ptr != (uint64_t *)&ui_system_global_data) {
      if (*(int *)(ui_callback_ptr + 6) == 0) {
UI_LABEL_WIDGET_STATE_CHANGE:
        *ui_event_type = ui_callback_ptr;
        return return ui_event_type;
      }
      if (*(int *)(ui_event_data + UI_EVENT_FLAG_OFFSET) != 0) {
        ui_boolean_pointer = (byte *)ui_callback_ptr[5];
        ui_event_index = *(longlong *)(ui_event_data + 8) - (longlong)ui_boolean_pointer;
        do {
          boolean_flag = *ui_boolean_pointer;
          ui_loop_counter = (uint)ui_boolean_pointer[ui_event_index];
          if (boolean_flag != ui_loop_counter) break;
          ui_boolean_pointer = ui_boolean_pointer + 1;
        } while (ui_loop_counter != 0);
        if ((int)(boolean_flag - ui_loop_counter) < 1) goto UI_LABEL_WIDGET_STATE_CHANGE;
      }
    }
  }
  *ui_event_type = &ui_system_global_data;
  return return ui_event_type;
}

void ui_system_dispatch_render_command(uint64_t ui_callback,uint64_t *ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  if (ui_event_type == (uint64_t *)UI_ZERO_OFFSET) {
    return ui_system_return_value;
  }
  ui_system_dispatch_render_command(&ui_system_global_data,*ui_event_type,ui_event_data,ui_event_flags,UI_BIT_MASK_32BIT_FULLfffffffe);
  ui_event_type[4] = &ui_widget_manager;
  if (ui_event_type[5] != 0) {
    ui_event_handler_process_event();
  }
  ui_event_type[5] = 0;
  *(uint32_t *)(ui_event_type + 7) = 0;
  ui_event_type[4] = &ui_widget_manager;
  ui_event_handler_process_event(ui_event_type);
}

uint64_t *
ui_system_process_render_queue(ulonglong ui_callback,uint64_t *ui_event_type,uint64_t ui_event_data,longlong *ui_event_flags,
             longlong ui_parameter_value)

{
  byte boolean_flag;
  bool ui_bool_result;
  uint64_t *ui_callback_ptr;
  longlong *ui_long_pointer_var;
  byte *ui_boolean_pointer;
  uint64_t *ui_callback_ptr;
  uint ui_loop_counter;
  longlong *ui_long_pointer_var;
  longlong ui_event_index;
  longlong *ui_long_counter_ptr0;
  ulonglong ui_event_id1;
  uint64_t ui_event_id_secondary;
  
  if ((ui_event_flags == ui_config) || (ui_event_flags == (longlong *)&ui_system_global_data)) {
    if ((ui_config != 0) && (*(int *)(ui_parameter_value + UI_EVENT_FLAG_OFFSET) != 0)) {
      ui_long_pointer_var = ui_config;
      ui_long_counter_ptr0 = ui_event_flags;
      if ((int)ui_config[6] != 0) {
        ui_boolean_pointer = *(byte **)(ui_parameter_value + 8);
        ui_long_counter_ptr0 = (longlong *)(ui_config[5] - (longlong)ui_boolean_pointer);
        do {
          boolean_flag = *ui_boolean_pointer;
          ui_callback = (ulonglong)ui_boolean_pointer[(longlong)ui_long_counter_ptr0];
          ui_loop_counter = (uint)ui_boolean_pointer[(longlong)ui_long_counter_ptr0];
          if (boolean_flag != ui_loop_counter) break;
          ui_boolean_pointer = ui_boolean_pointer + 1;
        } while (ui_loop_counter != 0);
        if ((int)(boolean_flag - ui_loop_counter) < 1) goto UI_LABEL_WIDGET_UPDATE_COMPLETE;
      }
UI_LABEL_WIDGET_RENDER_START:
      ui_event_id1 = (ulonglong)ui_long_counter_ptr0 & UI_BIT_MASK_32BIT_FULLffffff00;
UI_LABEL_WIDGET_RENDER_END:
      if (ui_long_pointer_var != (longlong *)UI_ZERO_OFFSET) {
        ui_system_execute_render_pipeline(ui_callback,ui_event_type,ui_long_pointer_var,ui_event_id1,ui_parameter_value);
        return return ui_event_type;
      }
    }
  }
  else {
    ui_long_pointer_var = (longlong *)ui_system_allocate_long_memory(ui_event_flags);
    if (*(int *)(ui_parameter_value + UI_EVENT_FLAG_OFFSET) != 0) {
      if ((int)ui_event_flags[6] != 0) {
        ui_boolean_pointer = *(byte **)(ui_parameter_value + 8);
        ui_event_index = ui_event_flags[5] - (longlong)ui_boolean_pointer;
        do {
          boolean_flag = *ui_boolean_pointer;
          ui_loop_counter = (uint)ui_boolean_pointer[ui_event_index];
          if (boolean_flag != ui_loop_counter) break;
          ui_boolean_pointer = ui_boolean_pointer + 1;
        } while (ui_loop_counter != 0);
        if ((int)(boolean_flag - ui_loop_counter) < 1) goto UI_LABEL_WIDGET_UPDATE_COMPLETE;
      }
      if ((int)ui_long_pointer_var[6] != 0) {
        ui_boolean_pointer = (byte *)ui_long_pointer_var[5];
        ui_long_counter_ptr0 = (longlong *)(*(longlong *)(ui_parameter_value + 8) - (longlong)ui_boolean_pointer);
        do {
          boolean_flag = *ui_boolean_pointer;
          ui_callback = (ulonglong)ui_boolean_pointer[(longlong)ui_long_counter_ptr0];
          ui_loop_counter = (uint)ui_boolean_pointer[(longlong)ui_long_counter_ptr0];
          if (boolean_flag != ui_loop_counter) break;
          ui_boolean_pointer = ui_boolean_pointer + 1;
        } while (ui_loop_counter != 0);
        if (0 < (int)(boolean_flag - ui_loop_counter)) {
          ui_long_pointer_var = ui_event_flags;
          if (*ui_event_flags == 0) goto UI_LABEL_WIDGET_RENDER_START;
          ui_event_id1 = CONCAT71((int7)((ulonglong)ui_long_counter_ptr0 >> 8),1);
          ui_long_pointer_var = ui_long_pointer_var;
          goto UI_LABEL_WIDGET_RENDER_END;
        }
      }
    }
  }
UI_LABEL_WIDGET_UPDATE_COMPLETE:
  ui_bool_result = true;
  ui_callback_ptr = (uint64_t *)&ui_system_global_data;
  ui_callback_ptr = ui_config;
  while (ui_callback_ptr != (uint64_t *)UI_ZERO_OFFSET) {
    ui_callback_ptr = ui_callback_ptr;
    if (*(int *)(ui_callback_ptr + 6) == 0) {
      ui_bool_result = false;
UI_LABEL_WIDGET_EVENT_HANDLER:
      ui_callback_ptr = (uint64_t *)*ui_callback_ptr;
    }
    else {
      if (*(int *)(ui_parameter_value + UI_EVENT_FLAG_OFFSET) == 0) {
        ui_bool_result = true;
      }
      else {
        ui_boolean_pointer = (byte *)ui_callback_ptr[5];
        ui_event_index = *(longlong *)(ui_parameter_value + 8) - (longlong)ui_boolean_pointer;
        do {
          boolean_flag = *ui_boolean_pointer;
          ui_loop_counter = (uint)ui_boolean_pointer[ui_event_index];
          if (boolean_flag != ui_loop_counter) break;
          ui_boolean_pointer = ui_boolean_pointer + 1;
        } while (ui_loop_counter != 0);
        ui_bool_result = 0 < (int)(boolean_flag - ui_loop_counter);
      }
      if (!ui_bool_result) goto UI_LABEL_WIDGET_EVENT_HANDLER;
      ui_callback_ptr = (uint64_t *)ui_callback_ptr[1];
    }
  }
  ui_callback_ptr = ui_callback_ptr;
  if (ui_bool_result) {
    if (ui_callback_ptr != ui_config) {
      ui_callback_ptr = (uint64_t *)ui_system_allocate_uint64_memory(ui_callback_ptr);
      goto UI_LABEL_WIDGET_DATA_PROCESS;
    }
  }
  else {
UI_LABEL_WIDGET_DATA_PROCESS:
    if (*(int *)(ui_parameter_value + UI_EVENT_FLAG_OFFSET) == 0) {
UI_LABEL_WIDGET_CALLBACK_START:
      *ui_event_type = ui_callback_ptr;
      return return ui_event_type;
    }
    if (*(int *)(ui_callback_ptr + 6) != 0) {
      ui_boolean_pointer = *(byte **)(ui_parameter_value + 8);
      ui_event_index = ui_callback_ptr[5] - (longlong)ui_boolean_pointer;
      do {
        boolean_flag = *ui_boolean_pointer;
        ui_loop_counter = (uint)ui_boolean_pointer[ui_event_index];
        if (boolean_flag != ui_loop_counter) break;
        ui_boolean_pointer = ui_boolean_pointer + 1;
      } while (ui_loop_counter != 0);
      if ((int)(boolean_flag - ui_loop_counter) < 1) goto UI_LABEL_WIDGET_CALLBACK_START;
    }
  }
  if (ui_callback_ptr != (uint64_t *)&ui_system_global_data) {
    if (*(int *)(ui_callback_ptr + 6) == 0) {
UI_LABEL_WIDGET_CALLBACK_END:
      ui_event_id_secondary = 1;
      goto UI_LABEL_WIDGET_VALIDATION_END;
    }
    if (*(int *)(ui_parameter_value + UI_EVENT_FLAG_OFFSET) != 0) {
      ui_boolean_pointer = (byte *)ui_callback_ptr[5];
      ui_event_index = *(longlong *)(ui_parameter_value + 8) - (longlong)ui_boolean_pointer;
      do {
        boolean_flag = *ui_boolean_pointer;
        ui_loop_counter = (uint)ui_boolean_pointer[ui_event_index];
        if (boolean_flag != ui_loop_counter) break;
        ui_boolean_pointer = ui_boolean_pointer + 1;
      } while (ui_loop_counter != 0);
      if ((int)(boolean_flag - ui_loop_counter) < 1) goto UI_LABEL_WIDGET_CALLBACK_END;
    }
  }
  ui_event_id_secondary = 0;
UI_LABEL_WIDGET_VALIDATION_END:
  ui_event_index = ui_event_dispatcher(ui_config,UI_OFFSET_72,ui_system_orientation_flag);
  ui_system_memory_allocator(ui_event_index + UI_OFFSET_32,ui_parameter_value);
  *(uint64_t *)(ui_event_index + UI_BUFFER_SIZE_64) = 0;
  ui_system_update_widget_visibility_state(ui_event_index,ui_callback_ptr,&ui_system_global_data,ui_event_id_secondary);
}

void ui_system_execute_render_pipeline(uint64_t ui_callback,uint64_t ui_event_type,void* *ui_event_data,uint64_t ui_event_flags,
                  longlong ui_parameter_value)

{
  byte boolean_flag;
  byte *ui_boolean_pointer;
  uint ui_loop_counter;
  uint32_t ui_loop_counter;
  longlong ui_event_index;
  
  if (((char)ui_event_flags == UI_CHAR_NULL) && (ui_event_data != &ui_system_global_data)) {
    if (*(int *)(ui_event_data + UI_MEMORY_ALLOC_SIZE) == 0) {
UI_LABEL_WIDGET_LAYOUT_APPLY:
      ui_loop_counter = 1;
      goto UI_LABEL_WIDGET_POSITION_UPDATE;
    }
    if (*(int *)(ui_parameter_value + UI_EVENT_FLAG_OFFSET) != 0) {
      ui_boolean_pointer = *(byte **)(ui_event_data + UI_CALLBACK_HANDLER_OFFSET);
      ui_event_index = *(longlong *)(ui_parameter_value + 8) - (longlong)ui_boolean_pointer;
      do {
        boolean_flag = *ui_boolean_pointer;
        ui_loop_counter = (uint)ui_boolean_pointer[ui_event_index];
        if (boolean_flag != ui_loop_counter) break;
        ui_boolean_pointer = ui_boolean_pointer + 1;
      } while (ui_loop_counter != 0);
      if ((int)(boolean_flag - ui_loop_counter) < 1) goto UI_LABEL_WIDGET_LAYOUT_APPLY;
    }
  }
  ui_loop_counter = 0;
UI_LABEL_WIDGET_POSITION_UPDATE:
  ui_event_index = ui_event_dispatcher(ui_config,UI_OFFSET_72,ui_system_orientation_flag,ui_event_flags,UI_BIT_MASK_32BIT_FULLfffffffe);
  ui_system_memory_allocator(ui_event_index + UI_OFFSET_32,ui_parameter_value);
  *(uint64_t *)(ui_event_index + UI_BUFFER_SIZE_64) = 0;
  ui_system_update_widget_visibility_state(ui_event_index,ui_event_data,&ui_system_global_data,ui_loop_counter);
}

uint64_t * ui_system_get_render_stats(uint64_t *ui_callback,ulonglong ui_event_type)

{
  *ui_callback = &ui_system_right_click_context;
  if ((ui_event_type & 1) != 0) {
    ui_memory_free(ui_callback,8);
  }
  return return ui_callback;
}

void ui_system_reset_render_stats(uint64_t *ui_callback)

{
  uint64_t ui_system_event_id;
  uint32_t ui_system_task_id;
  
  ui_system_task_id = SteamAPI_GetHSteamUser();
  ui_system_event_id = SteamInternal_FindOrCreateUserInterface(ui_system_task_id,&ui_system_middle_click_context);
  *ui_callback = ui_system_event_id;
  return ui_system_return_value;
}

void ui_system_update_render_stats(uint64_t *ui_callback)

{
  uint64_t ui_system_event_id;
  uint32_t ui_system_task_id;
  
  ui_system_task_id = SteamAPI_GetHSteamUser();
  ui_system_event_id = SteamInternal_FindOrCreateUserInterface(ui_system_task_id,&ui_global_window_manager);
  *ui_callback = ui_system_event_id;
  return ui_system_return_value;
}

uint64_t *
ui_system_present_final_frame(uint64_t *ui_callback,ulonglong ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  uint64_t ui_system_event_id;
  
  ui_system_event_id = UI_BIT_MASK_32BIT_FULLfffffffe;
  *ui_callback = &ui_widget_manager;
  ui_process_ui_events();
  *ui_callback = &ui_system_right_click_context;
  if ((ui_event_type & 1) != 0) {
    ui_memory_free(ui_callback,UI_CALLBACK_HANDLER_OFFSET,ui_event_data,ui_event_flags,ui_system_event_id);
  }
  return return ui_callback;
}

void ui_system_end_frame(void)

{
  InitializeUIRenderer();
}

void ui_system_cleanup_frame(longlong ui_callback,longlong ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  int ui_temp_state_value;
  uint64_t *ui_task_index_pointer;
  longlong ui_event_index;
  ulonglong ui_temp_ulong;
  uint ui_loop_counter;
  ulonglong ui_temp_ulong;
  uint64_t ui_loop_counter;
  void* *ui_event_data_pointer_secondary;
  uint8_t *ui_event_flag_pointer_primary;
  int ui_stack_variable_widget_type;
  ulonglong ui_stack_buffer_mask;
  
  ui_loop_counter = UI_BIT_MASK_32BIT_FULLfffffffe;
  ui_loop_counter = 0;
  ui_event_index = *(longlong *)(ui_callback + 8);
  ui_result_status = ui_temp_buffer;
  if (*(longlong *)(ui_callback + UI_EVENT_FLAG_OFFSET) - ui_event_index >> 5 != 0) {
    do {
      ui_event_data_pointer_secondary = &ui_widget_manager;
      ui_stack_buffer_mask = 0;
      ui_event_flag_pointer_primary = (uint8_t *)UI_ZERO_OFFSET;
      ui_stack_variable_widget_type = 0;
      ui_event_handler_initialize(&ui_event_data_pointer_secondary,*(uint32_t *)(ui_loop_counter + UI_EVENT_FLAG_OFFSET + ui_event_index));
      ui_temp_state_value = *(int *)(ui_loop_counter + UI_EVENT_FLAG_OFFSET + ui_event_index);
      if (ui_temp_state_value != 0) {
        memcpy(ui_event_flag_pointer_primary,*(uint64_t *)(ui_loop_counter + 8 + ui_event_index),ui_temp_state_value + 1,ui_event_flags,ui_loop_counter);
      }
      if (*(longlong *)(ui_loop_counter + 8 + ui_event_index) != 0) {
        ui_stack_variable_widget_type = 0;
        if (ui_event_flag_pointer_primary != (uint8_t *)UI_ZERO_OFFSET) {
          *ui_event_flag_pointer_primary = 0;
        }
        ui_stack_buffer_mask = ui_stack_buffer_mask & UI_BIT_MASK_32BIT_FULL;
      }
      ui_task_index_pointer = *(uint64_t **)(ui_event_type + 8);
      if (ui_task_index_pointer < *(uint64_t **)(ui_event_type + UI_EVENT_FLAG_OFFSET)) {
        *(uint64_t **)(ui_event_type + 8) = ui_task_index_pointer + 4;
        *ui_task_index_pointer = &ui_widget_manager;
        ui_task_index_pointer[1] = 0;
        *(uint32_t *)(ui_task_index_pointer + 2) = 0;
        *ui_task_index_pointer = &ui_widget_manager;
        ui_task_index_pointer[3] = 0;
        ui_task_index_pointer[1] = 0;
        *(uint32_t *)(ui_task_index_pointer + 2) = 0;
        ui_event_handler_initialize(ui_task_index_pointer,ui_stack_variable_widget_type);
        if (ui_stack_variable_widget_type != 0) {
          memcpy(ui_task_index_pointer[1],ui_event_flag_pointer_primary,ui_stack_variable_widget_type + 1,ui_event_flags,ui_loop_counter);
        }
        if (ui_event_flag_pointer_primary != (uint8_t *)UI_ZERO_OFFSET) {
          *(uint32_t *)(ui_task_index_pointer + 2) = 0;
          if ((uint8_t *)ui_task_index_pointer[1] != (uint8_t *)UI_ZERO_OFFSET) {
            *(uint8_t *)ui_task_index_pointer[1] = 0;
          }
          *(uint32_t *)((longlong)ui_task_index_pointer + UI_OFFSET_28) = 0;
        }
      }
      else {
        ui_handle_event_type(ui_event_type,&ui_event_data_pointer_secondary);
      }
      ui_event_data_pointer_secondary = &ui_widget_manager;
      if (ui_event_flag_pointer_primary != (uint8_t *)UI_ZERO_OFFSET) {
        ui_event_handler_process_event();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = ui_loop_counter + UI_OFFSET_32;
      ui_event_index = *(longlong *)(ui_callback + 8);
      ui_loop_counter = (ulonglong)ui_loop_counter;
    } while ((ulonglong)(longlong)(int)ui_loop_counter <
             (ulonglong)(*(longlong *)(ui_callback + UI_EVENT_FLAG_OFFSET) - ui_event_index >> 5));
  }
  return ui_system_return_value;
}

void ui_system_calculate_layout(void)

{
  InitializeUIRenderer();
}

void ui_system_process_widget_data(longlong *ui_callback_context,longlong *ui_event_data_buffer_type,longlong *ui_event_buffer)

{
  uint32_t ui_system_event_id;
  uint32_t ui_system_task_id;
  uint64_t *ui_callback_ptr;
  int ui_result_status;
  longlong ui_event_index;
  longlong ui_data_size;
  uint64_t *ui_event_buffer_ptr;
  uint64_t *ui_task_buffer_ptr;
  uint64_t *ui_callback_buffer_ptr;
  uint64_t *ui_system_buffer_ptr;
  uint64_t *ui_event_buffer;
  uint64_t *ui_callback_data_buffer;
  uint32_t ui_event_identifier;
  longlong ui_stack_data_offset;
  uint64_t ui_stack_data_buffer_extended;
  uint64_t ui_task_identifier;
  uint64_t *ui_stack_pointer_widget_handler_primary;
  uint64_t *ui_stack_extended_pointer;
  uint64_t *ui_event_data_pointer_secondary;
  uint32_t ui_stack_validation_mask;
  
  ui_task_identifier = UI_BIT_MASK_32BIT_FULLfffffffe;
  ui_event_index = ui_event_type[1];
  ui_callback[9] = *ui_event_type;
  ui_callback[10] = ui_event_index;
  ui_event_index = ui_event_type[3];
  ui_callback[ELEVEN_VALUE] = ui_event_type[2];
  ui_callback[12] = ui_event_index;
  ui_event_index = ui_event_type[5];
  ui_callback[THIRTEEN_VALUE] = ui_event_type[4];
  ui_callback[ui_component_angle_offset] = ui_event_index;
  ui_system_event_id = *(uint32_t *)((longlong)ui_event_type + UI_EVENT_ID_OFFSET);
  ui_event_index = ui_event_type[7];
  ui_system_task_id = *(uint32_t *)((longlong)ui_event_type + UI_OFFSET_60);
  *(int *)(ui_callback + UI_MAX_EVENT_FLAGS) = (int)ui_event_type[6];
  *(uint32_t *)((longlong)ui_callback + UI_EVENT_ID_FOURTH_OFFSET) = ui_system_event_id;
  *(int *)(ui_callback + UI_EVENT_FLAG_OFFSET) = (int)ui_event_index;
  *(uint32_t *)((longlong)ui_callback + UI_WIDGET_ITEM_SIZE) = ui_system_task_id;
  ui_event_index = ui_event_data[1] - *ui_event_data >> 4;
  ui_stack_pointer_widget_handler_primary = (uint64_t *)UI_ZERO_OFFSET;
  ui_stack_extended_pointer = (uint64_t *)UI_ZERO_OFFSET;
  ui_callback_ptr = (uint64_t *)UI_ZERO_OFFSET;
  ui_event_data_pointer_secondary = (uint64_t *)UI_ZERO_OFFSET;
  ui_stack_validation_mask = 3;
  ui_result_status = (int)ui_event_index;
  ui_stack_data_offset = (longlong)ui_result_status;
  if (ui_result_status != 0) {
    ui_stack_extended_pointer = (uint64_t *)
                 ui_event_dispatcher(ui_config,ui_stack_data_offset * 8,
                               CONCAT71((int7)(int3)((ulonglong)ui_event_index >> 8),3),ui_event_data,
                               UI_BIT_MASK_32BIT_FULLfffffffe);
    ui_event_data_pointer_secondary = ui_stack_extended_pointer + ui_stack_data_offset;
  }
  ui_callback_ptr = ui_event_data_pointer_secondary;
  ui_callback_ptr = ui_stack_extended_pointer;
  ui_event_buffer = ui_stack_extended_pointer;
  ui_event_buffer = ui_callback_ptr;
  ui_stack_pointer_widget_handler_primary = ui_stack_extended_pointer;
  if (0 < ui_stack_data_offset) {
    do {
      ui_callback_ptr = ui_stack_extended_pointer;
      ui_event_index = *ui_event_data;
      if (ui_stack_extended_pointer < ui_callback_ptr) {
        *ui_stack_extended_pointer = *(uint64_t *)((longlong)ui_event_buffer + ui_event_index);
        ui_callback_ptr = ui_event_buffer;
      }
      else {
        ui_event_index = (longlong)ui_stack_extended_pointer - (longlong)ui_event_buffer >> 3;
        if (ui_event_index == 0) {
          ui_event_index = 1;
UI_LABEL_WINDOW_FOCUS_CHANGE:
          ui_callback_ptr = (uint64_t *)
                   ui_event_dispatcher(ui_config,ui_event_index * 8,
                                 CONCAT71((int7)((ulonglong)ui_stack_data_offset >> 8),3),ui_event_data,ui_task_identifier);
        }
        else {
          ui_event_index = ui_event_index * 2;
          ui_callback_ptr = ui_callback_ptr;
          if (ui_event_index != 0) goto UI_LABEL_WINDOW_FOCUS_CHANGE;
        }
        if (ui_event_buffer != ui_callback_ptr) {
          memmove(ui_callback_ptr,ui_event_buffer,(longlong)ui_callback_ptr - (longlong)ui_event_buffer);
        }
        *ui_callback_ptr = *(uint64_t *)((longlong)ui_event_buffer + ui_event_index);
        if (ui_event_buffer != (uint64_t *)UI_ZERO_OFFSET) {
          ui_event_handler_process_event(ui_event_buffer);
        }
        ui_callback_ptr = ui_callback_ptr + ui_event_index;
        ui_stack_pointer_widget_handler_primary = ui_callback_ptr;
        ui_event_data_pointer_secondary = ui_callback_ptr;
        ui_stack_extended_pointer = ui_callback_ptr;
      }
      ui_stack_extended_pointer = ui_stack_extended_pointer + 1;
      ui_stack_data_offset = ui_stack_data_offset + -1;
      ui_event_buffer = ui_callback_ptr;
      ui_event_buffer = ui_event_buffer + 2;
    } while (ui_stack_data_offset != 0);
  }
  ui_event_index = (longlong)ui_stack_extended_pointer - (longlong)ui_callback_ptr;
  ui_process_callback_data(ui_callback_ptr,ui_stack_extended_pointer);
  ui_register_event_callback(ui_callback,&ui_stack_pointer_widget_handler_primary,ui_event_index >> 3 & UI_BIT_MASK_32BIT_FULL,1);
  ui_process_callback_arguments(ui_callback + UI_RESOURCE_LOAD_TYPE,ui_callback[1] - *ui_callback >> 3);
  ui_callback_ptr = ui_callback_ptr;
  if (ui_callback[1] - *ui_callback >> 3 != 0) {
    do {
      ui_stack_event_parameter = CONCAT44(*(uint32_t *)((longlong)ui_callback_ptr + *ui_callback + 4),
                            *(uint32_t *)((longlong)ui_callback_ptr + *ui_callback));
      *(uint64_t *)((longlong)ui_callback_ptr + ui_callback[UI_RESOURCE_LOAD_TYPE]) = ui_stack_event_parameter;
      ui_event_id_secondary = (int)ui_callback_ptr + 1;
      ui_callback_ptr = ui_callback_ptr + 1;
      ui_callback_ptr = (uint64_t *)(ulonglong)ui_event_id_secondary;
    } while ((ulonglong)(longlong)(int)ui_event_id_secondary < (ulonglong)(ui_callback[1] - *ui_callback >> 3));
  }
  if (ui_callback_ptr == (uint64_t *)UI_ZERO_OFFSET) {
    return ui_system_return_value;
  }
  ui_event_handler_process_event(ui_callback_ptr);
}

uint64_t
/**
 * @brief UI系统组件度量计算函数
 * 
 * 该函数负责计算UI组件的各种度量信息，包括：
 * - 组件尺寸和位置计算
 * - 布局约束处理
 * - 动画插值计算
 * - 渲染参数优化
 * 
 * @param ui_callback_context 回调上下文指针
 * @param ui_event_type 事件类型指针
 * @param ui_event_data 事件数据指针
 * @param ui_event_flags 事件标志指针
 * @param ui_parameter_value 参数值
 * @return 计算结果
 * 
 * 简化实现：将十六进制函数名ui_system_handle_widget_interaction替换为语义化名称，并添加详细文档注释
 * 原本实现：完全重构度量计算系统，优化计算精度和性能
 */
ui_system_calculate_widget_metrics(longlong *ui_callback_context,float *ui_event_type,float *ui_event_data,float *ui_event_flags,char ui_parameter_value)

{
  float ui_temp_float;
  longlong ui_event_index;
  bool ui_bool_result;
  float ui_temp_float;
  float ui_widget_x_coord;
  float ui_widget_y_coord;
  float ui_widget_width;
  float *pui_widget_height_val;
  char char_value_four;
  longlong long_counter5;
  uint64_t ui_event_id6;
  float *ui_float_ptr7;
  int ui_performance_monitoring_counter;
  uint32_t *ui_event_buffer;
  float ui_temp_float;
  int ui_result_status;
  longlong ui_event_index;
  int ui_result_status;
  float ui_time_delta;
  float ui_temp_float;
  uint64_t ui_stack_event_parameter;
  float ui_stack_data_float_extended;
  float *ui_stack_pointer_float_extended;
  float ui_stack_rotation_angle;
  float ui_stack_float_value_secondary;
  float ui_stack_float_value_tertiary;
  float ui_stack_float_value_quaternary;
  float ui_stack_scale_factor;
  float ui_stack_float_value_senary;
  float ui_stack_float_value_septenary;
  float ui_stack_float_value_octonary;
  longlong ui_stack_parameter_longa8;
  longlong ui_stack_parameter_longa0;
  uint32_t ui_stack_data_control_value;
  uint32_t ui_stack_temp_unsigned_value;
  uint32_t ui_stack_data_control_tertiary;
  uint32_t ui_stack_control_flagc;
  uint32_t ui_stack_buffer_mask_value;
  uint32_t ui_stack_control_flag4;
  uint32_t ui_stack_event_handler_ptr;
  uint32_t ui_stack_data_control_quaternary;
  float ui_stack_float_value_novenary;
  float ui_stack_float_value_denary;
  float ui_stack_float_temp_value;
  uint32_t ui_stack_color_data;
  uint32_t ui_stack_temp_b;
  uint32_t ui_stack_animation_duration;
  uint32_t ui_stack_max_alpha_value;
  uint32_t ui_stack_texture_offset;
  uint32_t ui_stack_vertex_offset;
  uint32_t ui_stack_variable_widget_manager_ptr;
  uint32_t ui_stack_extended_data_smallc;
  float ui_stack_transition_alpha;
  float ui_stack_float_144;
  float ui_stack_float_140;
  float ui_stack_float_138;
  float ui_stack_float_134;
  float ui_stack_float_130;
  float ui_stack_z_depth;
  float ui_stack_float_124;
  float ui_stack_float_120;
  float ui_stack_float_118;
  float ui_stack_float_114;
  float ui_stack_float_110;
  float ui_stack_width_value;
  float ui_stack_float_108;
  float ui_stack_float_104;
  float ui_stack_float_100;
  float ui_stack_float_fc;
  float ui_stack_height_value;
  float ui_stack_float_f4;
  float ui_stack_float_f0;
  float ui_stack_float_ec;
  
  float_value = *ui_event_type;
  float_value = ui_event_type[1];
  float_value = ui_event_type[2];
  float_value = ui_event_type[3];
  float_value = ui_event_type[4];
  float_value = ui_event_type[5];
  float_value = ui_event_type[6];
  float_value = ui_event_type[7];
  float_value = ui_event_type[8];
  ui_widget_x_coord = ui_event_type[9];
  ui_widget_y_coord = ui_event_type[10];
  ui_widget_width_val = ui_event_type[ELEVEN_VALUE];
  float_value = *(float *)(ui_callback + 9);
  float_value = *(float *)(ui_callback + 10);
  ui_time_delta = *(float *)((longlong)ui_callback + UI_TIME_DELTA_OFFSET);
  float_value = *(float *)((longlong)ui_callback + UI_EVENT_ID_FOURTH_OFFSET);
  float_value = *(float *)((longlong)ui_callback + UI_SIGNATURE_PART6);
  float_value = *(float *)((longlong)ui_callback + UI_PATH_SEPARATOR);
  float_value = *(float *)(ui_callback + ELEVEN_VALUE);
  ui_stack_float_118 = ui_time_delta * float_value + float_value * float_value + float_value * float_value;
  ui_stack_float_114 = ui_time_delta * float_value + float_value * float_value + float_value * ui_widget_x_coord;
  ui_stack_float_110 = ui_time_delta * float_value + float_value * float_value + float_value * ui_widget_y_coord;
  ui_stack_width_value = ui_time_delta * float_value + float_value * float_value + float_value * ui_widget_width_val;
  float_value = *(float *)(ui_callback + 12);
  float_value = *(float *)(ui_callback + THIRTEEN_VALUE);
  float_value = float_value * float_value + float_value * float_value + float_value * float_value;
  float_value = float_value * float_value + float_value * float_value + float_value * ui_widget_x_coord;
  float_value = float_value * float_value + float_value * float_value + float_value * ui_widget_y_coord;
  ui_time_delta = *(float *)(ui_callback + ui_component_angle_offset);
  float_value = *(float *)(ui_callback + UI_MAX_EVENT_FLAGS);
  ui_stack_float_108 = float_value * float_value + float_value * float_value + ui_time_delta * float_value;
  ui_stack_float_104 = float_value * float_value + float_value * float_value + ui_time_delta * ui_widget_x_coord;
  ui_stack_float_100 = float_value * float_value + float_value * float_value + ui_time_delta * ui_widget_y_coord;
  ui_stack_float_fc = float_value * float_value + float_value * float_value + ui_time_delta * ui_widget_width_val;
  float_value = *(float *)(ui_callback + UI_EVENT_FLAG_OFFSET);
  ui_stack_height_value = float_value * float_value + float_value * float_value + float_value * float_value + ui_event_type[12];
  ui_stack_float_f4 = float_value * float_value + float_value * float_value + float_value * ui_widget_x_coord + ui_event_type[THIRTEEN_VALUE];
  ui_stack_float_f0 = float_value * float_value + float_value * float_value + float_value * ui_widget_y_coord + ui_event_type[ui_component_angle_offset];
  ui_stack_float_ec = float_value * float_value + float_value * float_value + float_value * ui_widget_width_val + ui_event_type[UI_MAX_EVENT_FLAGS];
  ui_time_delta = *ui_event_data - ui_stack_height_value;
  float_value = ui_event_data[1] - ui_stack_float_f4;
  float_value = ui_event_data[2] - ui_stack_float_f0;
  float_value = ui_event_data[8];
  float_value = ui_event_data[6] - ui_stack_float_f0;
  float_value = ui_event_data[4] - ui_stack_height_value;
  float_value = ui_event_data[5] - ui_stack_float_f4;
  ui_stack_scale_factor = float_value * ui_stack_float_114 + ui_time_delta * ui_stack_float_118 + ui_stack_float_110 * float_value;
  ui_stack_float_value_senary = float_value * float_value + ui_time_delta * float_value + float_value * float_value;
  float_value = float_value * ui_stack_float_104 + ui_time_delta * ui_stack_float_108 + ui_stack_float_100 * float_value;
  ui_stack_float_value_octonary = float_value * ui_stack_float_fc + ui_time_delta * ui_stack_float_fc + ui_stack_float_fc * float_value;
  ui_stack_rotation_angle = float_value * ui_stack_float_114 + float_value * ui_stack_float_118 + ui_stack_float_110 * float_value;
  ui_stack_float_value_secondary = float_value * float_value + float_value * float_value + float_value * float_value;
  ui_time_delta = float_value * ui_stack_float_104 + float_value * ui_stack_float_108 + ui_stack_float_100 * float_value;
  ui_stack_float_value_quaternary = float_value * ui_stack_float_fc + float_value * ui_stack_float_fc + ui_stack_float_fc * float_value;
  if (((ui_time_delta - float_value) * (float_value + float_value) <= 0.0) ||
     ((ui_time_delta + float_value) * (float_value - float_value) <= 0.0)) {
    float_value = UI_FLOAT_INFINITY;
    ui_event_index = ui_callback[UI_RESOURCE_LOAD_TYPE];
    ui_performance_monitoring_counter = (int)(ui_callback[UI_NETWORK_RESOURCE_TYPE] - ui_event_index >> 3);
    ui_stack_parameter_longa0 = (longlong)ui_performance_monitoring_counter;
    ui_stack_data_float_extended = 0.0;
    float_value = UI_FLOAT_INFINITY;
    ui_stack_data_float_extended = 0.0;
    ui_stack_pointer_float_extended = ui_event_flags;
    ui_stack_float_value_tertiary = ui_time_delta;
    ui_stack_float_value_septenary = float_value;
    if (0 < ui_performance_monitoring_counter) {
      ui_event_index = *ui_callback;
      ui_result_status = 1;
      ui_stack_data_control_tertiary = 0;
      ui_event_buffer = (uint32_t *)(ui_event_index + 4);
      ui_stack_control_flagc = UI_FLOAT_MAX_VALUE;
      ui_stack_event_handler_ptr = 0;
      ui_stack_data_control_quaternary = UI_FLOAT_MAX_VALUE;
      ui_stack_animation_duration = 0;
      ui_stack_max_alpha_value = UI_FLOAT_MAX_VALUE;
      ui_stack_variable_widget_manager_ptr = 0;
      ui_stack_extended_data_smallc = UI_FLOAT_MAX_VALUE;
      ui_stack_event_parameter = ui_callback;
      ui_stack_parameter_longa8 = ui_stack_parameter_longa0;
      float_value = ui_stack_data_float_extended;
      do {
        ui_stack_data_control_value = *(uint32_t *)((ui_event_index - ui_event_index) + -4 + (longlong)ui_event_buffer);
        ui_stack_temp_unsigned_value = *(uint32_t *)((ui_event_index - ui_event_index) + (longlong)ui_event_buffer);
        ui_event_index = (longlong)(ui_result_status % ui_performance_monitoring_counter);
        ui_stack_buffer_mask_value = *(uint32_t *)(ui_event_index + ui_event_index * 8);
        ui_stack_control_flag4 = *(uint32_t *)(ui_event_index + 4 + ui_event_index * 8);
        ui_system_render_component(&ui_stack_buffer_mask_value,&ui_stack_data_control_value,&ui_stack_scale_factor,&ui_stack_rotation_angle,&ui_stack_float_138,&ui_stack_float_value_novenary);
        ui_stack_temp_b = *ui_event_buffer;
        ui_stack_vertex_offset = *(uint32_t *)(ui_event_index + 4 + ui_event_index * 8);
        float_value = (ui_stack_float_value_denary - ui_stack_float_134) * (ui_stack_float_value_denary - ui_stack_float_134) +
                 (ui_stack_float_value_novenary - ui_stack_float_138) * (ui_stack_float_value_novenary - ui_stack_float_138) +
                 (ui_stack_float_temp_value - ui_stack_float_130) * (ui_stack_float_temp_value - ui_stack_float_130);
        ui_stack_color_data = ui_event_buffer[-1];
        ui_stack_texture_offset = *(uint32_t *)(ui_event_index + ui_event_index * 8);
        if (float_value < float_value) {
          float_value = ui_stack_float_value_novenary;
          float_value = ui_stack_float_value_denary;
          float_value = float_value;
        }
        ui_system_render_component(&ui_stack_texture_offset,&ui_stack_color_data,&ui_stack_scale_factor,&ui_stack_rotation_angle,&ui_stack_transition_alpha,&ui_stack_z_depth);
        float_value = (ui_stack_float_124 - ui_stack_float_144) * (ui_stack_float_124 - ui_stack_float_144) +
                 (ui_stack_z_depth - ui_stack_transition_alpha) * (ui_stack_z_depth - ui_stack_transition_alpha) +
                 (ui_stack_float_120 - ui_stack_float_140) * (ui_stack_float_120 - ui_stack_float_140);
        if (float_value < float_value) {
          float_value = ui_stack_transition_alpha;
          float_value = ui_stack_float_144;
          float_value = float_value;
        }
        ui_result_status = ui_result_status + 1;
        ui_event_buffer = ui_event_buffer + 2;
        ui_stack_parameter_longa8 = ui_stack_parameter_longa8 + -1;
      } while (ui_stack_parameter_longa8 != 0);
      ui_stack_parameter_longa8 = 0;
      ui_callback = ui_stack_event_parameter;
      ui_stack_data_float_extended = float_value;
    }
    pui_widget_height_val = ui_stack_pointer_float_extended;
    float_value = ui_stack_data_float_extended;
    ui_event_index = 0;
    ui_bool_result = true;
    ui_result_status = 0;
    if (3 < ui_stack_parameter_longa0) {
      ui_event_index = ui_callback[UI_RESOURCE_LOAD_TYPE];
      ui_result_status = 2;
      ui_event_index = (ui_stack_parameter_longa0 - 4U >> 2) + 1;
      ui_float_ptr7 = (float *)(ui_event_index + UI_SHIFT_AMOUNT_20);
      ui_result_status = (int)ui_event_index * 4;
      ui_event_index = ui_event_index * 4;
      do {
        long_counter5 = (longlong)((ui_result_status + -1) % ui_performance_monitoring_counter);
        if ((!ui_bool_result) ||
           ((float_value = (ui_float_ptr7[-4] - *(float *)(ui_event_index + 4 + long_counter5 * 8)) *
                      (ui_stack_data_float_extended - ui_float_ptr7[-5]) -
                      (ui_stack_data_float_extended - ui_float_ptr7[-4]) * (ui_float_ptr7[-5] - *(float *)(ui_event_index + long_counter5 * 8)),
            float_value <= 0.0 && (float_value < 0.0)))) {
          ui_bool_result = false;
        }
        else {
          ui_bool_result = true;
        }
        if ((!ui_bool_result) ||
           ((float_value = (ui_float_ptr7[-2] - *(float *)(ui_event_index + 4 + (longlong)(ui_result_status % ui_performance_monitoring_counter) * 8)) *
                      (ui_stack_data_float_extended - ui_float_ptr7[-3]) -
                      (ui_stack_data_float_extended - ui_float_ptr7[-2]) *
                      (ui_float_ptr7[-3] - *(float *)(ui_event_index + (longlong)(ui_result_status % ui_performance_monitoring_counter) * 8)),
            float_value <= 0.0 && (float_value < 0.0)))) {
          ui_bool_result = false;
        }
        else {
          ui_bool_result = true;
        }
        long_counter5 = (longlong)((ui_result_status + 1) % ui_performance_monitoring_counter);
        if ((!ui_bool_result) ||
           ((float_value = (*ui_float_ptr7 - *(float *)(ui_event_index + 4 + long_counter5 * 8)) * (ui_stack_data_float_extended - ui_float_ptr7[-1]) -
                      (ui_stack_data_float_extended - *ui_float_ptr7) * (ui_float_ptr7[-1] - *(float *)(ui_event_index + long_counter5 * 8)),
            float_value <= 0.0 && (float_value < 0.0)))) {
          ui_bool_result = false;
        }
        else {
          ui_bool_result = true;
        }
        long_counter5 = (longlong)((ui_result_status + 2) % ui_performance_monitoring_counter);
        if ((!ui_bool_result) ||
           ((float_value = (ui_float_ptr7[2] - *(float *)(ui_event_index + 4 + long_counter5 * 8)) * (ui_stack_data_float_extended - ui_float_ptr7[1])
                      - (ui_stack_data_float_extended - ui_float_ptr7[2]) * (ui_float_ptr7[1] - *(float *)(ui_event_index + long_counter5 * 8)),
            float_value <= 0.0 && (float_value < 0.0)))) {
          ui_bool_result = false;
        }
        else {
          ui_bool_result = true;
        }
        ui_result_status = ui_result_status + 4;
        ui_float_ptr7 = ui_float_ptr7 + 8;
        ui_event_index = ui_event_index + -1;
      } while (ui_event_index != 0);
    }
    if (ui_event_index < ui_stack_parameter_longa0) {
      ui_event_index = ui_callback[UI_RESOURCE_LOAD_TYPE];
      do {
        ui_result_status = ui_result_status + 1;
        if ((!ui_bool_result) ||
           ((float_value = *(float *)(ui_event_index + 4 + ui_event_index * 8), float_value = *(float *)(ui_event_index + ui_event_index * 8),
            float_value = (float_value - *(float *)(ui_event_index + 4 + (longlong)(ui_result_status % ui_performance_monitoring_counter) * 8)) *
                     (ui_stack_data_float_extended - float_value) -
                     (ui_stack_data_float_extended - float_value) *
                     (float_value - *(float *)(ui_event_index + (longlong)(ui_result_status % ui_performance_monitoring_counter) * 8)), float_value <= 0.0
            && (float_value < 0.0)))) {
          ui_bool_result = false;
        }
        else {
          ui_bool_result = true;
        }
        ui_event_index = ui_event_index + 1;
      } while (ui_event_index < ui_stack_parameter_longa0);
    }
    float_value = float_value;
    if (ui_bool_result) {
      if (ui_parameter_value == UI_CHAR_NULL) {
        if ((0.0 < ui_time_delta * float_value) ||
           ((float_value = float_value - ui_time_delta, -1e-05 < float_value && (float_value < 1e-05)))) {
          float_value = ui_stack_rotation_angle;
          float_value = ui_stack_float_value_secondary;
          if (ABS(float_value) < ABS(ui_time_delta)) {
            float_value = ui_stack_scale_factor;
            float_value = ui_stack_float_value_senary;
          }
        }
        else if (float_value <= ui_time_delta) {
          ui_time_delta = ui_time_delta / (ui_time_delta - float_value);
          float_value = (ui_stack_scale_factor - ui_stack_rotation_angle) * ui_time_delta + ui_stack_rotation_angle;
          float_value = (ui_stack_float_value_senary - ui_stack_float_value_secondary) * ui_time_delta + ui_stack_float_value_secondary;
        }
        else {
          float_value = (ui_stack_rotation_angle - ui_stack_scale_factor) * (float_value / float_value) + ui_stack_scale_factor;
          float_value = (ui_stack_float_value_secondary - ui_stack_float_value_senary) * (float_value / float_value) + ui_stack_float_value_senary;
        }
        ui_stack_event_parameter._data_offset_ = float_value;
        ui_stack_event_parameter._data_size_ = float_value;
        char_value_four = ui_extract_event_data(ui_callback,&ui_stack_event_parameter);
        if (char_value_four == UI_CHAR_NULL) {
          float_value = float_value;
        }
      }
    }
    else if (float_value * float_value <= float_value) goto UI_LABEL_DIALOG_CREATE_START;
    ui_event_id6 = 1;
    *pui_widget_height_val = float_value * float_value + ui_stack_float_118 * float_value + ui_stack_float_108 * 0.0 + ui_stack_height_value;
    pui_widget_height_val[1] = float_value * float_value + ui_stack_float_114 * float_value + ui_stack_float_104 * 0.0 + ui_stack_float_f4;
    pui_widget_height_val[2] = float_value * float_value + ui_stack_float_110 * float_value + ui_stack_float_100 * 0.0 + ui_stack_float_f0;
    pui_widget_height_val[3] = (float_value * float_value + float_value * float_value + float_value * ui_widget_width_val) * float_value + ui_stack_width_value * float_value +
                 ui_stack_float_fc * 0.0 + ui_stack_float_ec;
  }
  else {
UI_LABEL_DIALOG_CREATE_START:
    ui_event_id6 = 0;
  }
  return return ui_event_id6;
}

uint64_t ui_system_calculate_widget_bounds(longlong *ui_callback_context)

{
  float ui_temp_float;
  longlong ui_event_index;
  bool ui_bool_result;
  float ui_temp_float;
  char ui_character_value;
  longlong long_counter0;
  float *pui_widget_y_coord;
  int ui_event_processing_counter;
  longlong ui_widget_base;
  uint64_t ui_task_identifier;
  float *ui_system_register;
  uint64_t ui_event_id_fourth;
  int ui_widget_id;
  longlong ui_loop_counter_primary;
  longlong ui_loop_counter_secondary;
  longlong ui_system_register_long;
  float *ui_system_register;
  int ui_performance_monitoring_counter;
  float ui_z_depth;
  float ui_temp_float;
  float ui_min_value;
  float ui_temp_float;
  float ui_max_value;
  float ui_register_a;
  float ui_register_b;
  float ui_register_c;
  float ui_register_d;
  float ui_register_a;
  float ui_stack_float_temp_value;
  float uiAnimationSpeed;
  float ui_stack_float_temp_value;
  longlong ui_stack_event_parameter;
  longlong ui_event_processing_counter_var;
  uint32_t ui_stack_temp_unsigned_value;
  uint32_t ui_stack_unsigned_var_c;
  uint32_t ui_stack_temp_unsigned_value;
  uint32_t ui_stack_unsigned_var_c;
  
  float_value = 0.0;
  ui_loop_counter_secondary = ui_callback[UI_RESOURCE_LOAD_TYPE];
  ui_system_register[UI_REGISTER_X_OFFSET] = ui_register_a;
  ui_event_processing_counter = (int)(ui_widget_base - ui_loop_counter_secondary >> 3);
  ui_event_processing_counter_var = (longlong)ui_event_processing_counter;
  ui_system_register[UI_REGISTER_Y_OFFSET] = ui_register_a;
  ui_event_id_fourth = *(uint64_t *)(ui_system_register + UI_REGISTER_X_OFFSET);
  ui_system_register[UI_OFFSET_68] = 0.0;
  ui_system_register[UI_REGISTER_Z_OFFSET] = 0.0;
  if (0 < ui_event_processing_counter) {
    ui_event_index = *ui_callback;
    ui_performance_monitoring_counter = 1;
    ui_task_identifier = *(uint64_t *)(ui_system_register + UI_OFFSET_68);
    ui_stack_temp_unsigned_value = 0;
    pui_widget_y_coord = (float *)(ui_event_index + 4);
    ui_stack_unsigned_var_c = UI_FLOAT_MAX_VALUE;
    ui_stack_temp_unsigned_value = 0;
    ui_stack_unsigned_var_c = UI_FLOAT_MAX_VALUE;
    ui_system_register[-UI_MEMORY_RESOURCE_TYPE] = 0.0;
    ui_system_register[-UI_WIDGET_RESOURCE_TYPE] = UI_FLOAT_INFINITY;
    ui_system_register[-UI_OFFSET_22] = 0.0;
    ui_system_register[-UI_LAYOUT_RESOURCE_TYPE] = UI_FLOAT_INFINITY;
    float_value = ui_register_a;
    ui_stack_event_parameter = ui_event_processing_counter_var;
    do {
      ui_stack_temp_unsigned_value = *(uint32_t *)((ui_loop_counter_secondary - ui_event_index) + -4 + (longlong)pui_widget_y_coord);
      ui_stack_temp_unsigned_value = *(uint32_t *)((ui_loop_counter_secondary - ui_event_index) + (longlong)pui_widget_y_coord);
      ui_loop_counter_primary = (longlong)(ui_performance_monitoring_counter % ui_event_processing_counter);
      ui_stack_temp_unsigned_value = *(uint32_t *)(ui_loop_counter_secondary + ui_loop_counter_primary * 8);
      ui_stack_temp_unsigned_value = *(uint32_t *)(ui_loop_counter_secondary + 4 + ui_loop_counter_primary * 8);
      ui_system_render_component(&ui_stack_data_buffer_extended_70,&ui_stack_data_buffer_extended_60,&ui_stack_buffer_extended_40,&ui_stack_format_temp,
                    ui_system_register + -UI_EVENT_FLAG_OFFSET);
      ui_system_register[-UI_GUARD_CHECK_TYPE] = *pui_widget_y_coord;
      ui_system_register[-UI_RENDER_RESOURCE_TYPE] = *(float *)(ui_event_index + 4 + ui_loop_counter_primary * 8);
      ui_z_depth_value = (ui_system_register[-UI_GUARD_CHECK_TYPE_2] - ui_system_register[-UI_MAX_EVENT_FLAGS]) * (ui_system_register[-UI_GUARD_CHECK_TYPE_2] - ui_system_register[-UI_MAX_EVENT_FLAGS]) +
               (ui_system_register[-UI_OFFSET_32] - ui_system_register[-UI_EVENT_FLAG_OFFSET]) * (ui_system_register[-UI_OFFSET_32] - ui_system_register[-UI_EVENT_FLAG_OFFSET]) +
               (ui_system_register[-UI_OFFSET_30] - ui_system_register[-ui_component_angle_offset]) * (ui_system_register[-UI_OFFSET_30] - ui_system_register[-ui_component_angle_offset]);
      ui_system_register[-UI_OFFSET_28] = pui_widget_y_coord[-1];
      ui_system_register[-UI_SNAPSHOT_CREATE_FLAGS] = *(float *)(ui_event_index + ui_loop_counter_primary * 8);
      ui_register_a = ui_z_depth_value;
      if (float_value <= ui_z_depth_value) {
        ui_register_a = float_value;
      }
      if (ui_z_depth_value < float_value) {
        ui_task_identifier = *(uint64_t *)(ui_system_register + -UI_OFFSET_32);
      }
      ui_system_render_component(ui_system_register + -UI_SNAPSHOT_CREATE_FLAGS,ui_system_register + -UI_OFFSET_28,&ui_stack_buffer_extended_40,&ui_stack_format_temp,
                    ui_system_register + -UI_SHIFT_AMOUNT_20);
      float_value = (ui_system_register[-ELEVEN_VALUE] - ui_system_register[-UI_RESOURCE_TYPE_CONFIG]) * (ui_system_register[-ELEVEN_VALUE] - ui_system_register[-UI_RESOURCE_TYPE_CONFIG]) +
               (ui_system_register[-12] - ui_system_register[-UI_SHIFT_AMOUNT_20]) * (ui_system_register[-12] - ui_system_register[-UI_SHIFT_AMOUNT_20]) +
               (ui_system_register[-10] - ui_system_register[-UI_NETWORK_RESOURCE_TYPE]) * (ui_system_register[-10] - ui_system_register[-UI_NETWORK_RESOURCE_TYPE]);
      ui_z_depth_value = float_value;
      if (float_value <= float_value) {
        ui_z_depth_value = float_value;
      }
      if (float_value < float_value) {
        ui_event_id_fourth = *(uint64_t *)(ui_system_register + -UI_SHIFT_AMOUNT_20);
      }
      ui_performance_monitoring_counter = ui_performance_monitoring_counter + 1;
      pui_widget_y_coord = pui_widget_y_coord + 2;
      ui_stack_event_parameter = ui_stack_event_parameter + -1;
      float_value = ui_register_a;
      float_value = ui_z_depth_value;
    } while (ui_stack_event_parameter != 0);
    ui_system_register = *(longlong *)(ui_system_register + UI_BUFFER_SIZE_64);
    ui_system_register = *(float **)(ui_system_register + UI_TRANSFORM_MATRIX_OFFSET);
    *(uint64_t *)(ui_system_register + UI_OFFSET_68) = ui_task_identifier;
    float_value = ui_system_register[UI_REGISTER_Z_OFFSET];
    float_value = ui_system_register[UI_OFFSET_68];
    *(uint64_t *)(ui_system_register + UI_REGISTER_X_OFFSET) = ui_event_id_fourth;
    ui_register_a = ui_system_register[UI_REGISTER_Y_OFFSET];
    ui_register_a = ui_system_register[UI_REGISTER_X_OFFSET];
    ui_stack_event_parameter = 0;
  }
  ui_loop_counter_secondary = 0;
  ui_bool_result = true;
  ui_performance_monitoring_counter = 0;
  if (3 < ui_event_processing_counter_var) {
    ui_event_index = *(longlong *)(ui_system_register + UI_OFFSET_136);
    ui_widget_id = 2;
    ui_loop_counter_primary = (ui_event_processing_counter_var - 4U >> 2) + 1;
    pui_widget_y_coord = (float *)(ui_event_index + UI_SHIFT_AMOUNT_20);
    ui_performance_monitoring_counter = (int)ui_loop_counter_primary * 4;
    ui_loop_counter_secondary = ui_loop_counter_primary * 4;
    do {
      long_counter0 = (longlong)((ui_widget_id + -1) % ui_event_processing_counter);
      if ((!ui_bool_result) ||
         ((ui_z_depth_value = (pui_widget_y_coord[-4] - *(float *)(ui_event_index + 4 + long_counter0 * 8)) * (float_value - pui_widget_y_coord[-5]) -
                    (float_value - pui_widget_y_coord[-4]) * (pui_widget_y_coord[-5] - *(float *)(ui_event_index + long_counter0 * 8)),
          ui_z_depth_value <= ui_min_value && (ui_z_depth_value < ui_min_value)))) {
        ui_bool_result = false;
      }
      else {
        ui_bool_result = true;
      }
      if ((!ui_bool_result) ||
         ((ui_z_depth_value = (pui_widget_y_coord[-2] - *(float *)(ui_event_index + 4 + (longlong)(ui_widget_id % ui_event_processing_counter) * 8)) *
                    (float_value - pui_widget_y_coord[-3]) -
                    (float_value - pui_widget_y_coord[-2]) *
                    (pui_widget_y_coord[-3] - *(float *)(ui_event_index + (longlong)(ui_widget_id % ui_event_processing_counter) * 8)),
          ui_z_depth_value <= ui_min_value && (ui_z_depth_value < ui_min_value)))) {
        ui_bool_result = false;
      }
      else {
        ui_bool_result = true;
      }
      long_counter0 = (longlong)((ui_widget_id + 1) % ui_event_processing_counter);
      if ((!ui_bool_result) ||
         ((ui_z_depth_value = (*pui_widget_y_coord - *(float *)(ui_event_index + 4 + long_counter0 * 8)) * (float_value - pui_widget_y_coord[-1]) -
                    (float_value - *pui_widget_y_coord) * (pui_widget_y_coord[-1] - *(float *)(ui_event_index + long_counter0 * 8)),
          ui_z_depth_value <= ui_min_value && (ui_z_depth_value < ui_min_value)))) {
        ui_bool_result = false;
      }
      else {
        ui_bool_result = true;
      }
      long_counter0 = (longlong)((ui_widget_id + 2) % ui_event_processing_counter);
      if ((!ui_bool_result) ||
         ((ui_z_depth_value = (pui_widget_y_coord[2] - *(float *)(ui_event_index + 4 + long_counter0 * 8)) * (float_value - pui_widget_y_coord[1]) -
                    (float_value - pui_widget_y_coord[2]) * (pui_widget_y_coord[1] - *(float *)(ui_event_index + long_counter0 * 8)),
          ui_z_depth_value <= ui_min_value && (ui_z_depth_value < ui_min_value)))) {
        ui_bool_result = false;
      }
      else {
        ui_bool_result = true;
      }
      ui_widget_id = ui_widget_id + 4;
      pui_widget_y_coord = pui_widget_y_coord + 8;
      ui_loop_counter_primary = ui_loop_counter_primary + -1;
    } while (ui_loop_counter_primary != 0);
  }
  if (ui_loop_counter_secondary < ui_event_processing_counter_var) {
    ui_event_index = *(longlong *)(ui_system_register + UI_OFFSET_136);
    do {
      ui_performance_monitoring_counter = ui_performance_monitoring_counter + 1;
      if ((!ui_bool_result) ||
         ((ui_z_depth_value = *(float *)(ui_event_index + 4 + ui_loop_counter_secondary * 8), float_value = *(float *)(ui_event_index + ui_loop_counter_secondary * 8),
          ui_z_depth_value = (ui_z_depth_value - *(float *)(ui_event_index + 4 + (longlong)(ui_performance_monitoring_counter % ui_event_processing_counter) * 8)) *
                   (float_value - float_value) -
                   (float_value - ui_z_depth_value) * (float_value - *(float *)(ui_event_index + (longlong)(ui_performance_monitoring_counter % ui_event_processing_counter) * 8))
          , ui_z_depth_value <= ui_min_value && (ui_z_depth_value < ui_min_value)))) {
        ui_bool_result = false;
      }
      else {
        ui_bool_result = true;
      }
      ui_loop_counter_secondary = ui_loop_counter_secondary + 1;
    } while (ui_loop_counter_secondary < ui_event_processing_counter_var);
  }
  if (ui_bool_result) {
    if (*(char *)(ui_system_register + UI_OFFSET_72) == UI_CHAR_NULL) {
      if ((ui_min_value < ui_register_a * ui_max_value) ||
         ((float_value = ui_max_value - ui_register_a, -1e-05 < float_value && (float_value < 1e-05)))) {
        ui_task_identifier = CONCAT44(uiAnimationSpeed,ui_stack_float_temp_value);
        if (ABS(ui_max_value) < ABS(ui_register_a)) {
          ui_task_identifier = CONCAT44(ui_stack_float_temp_value,ui_stack_float_temp_value);
        }
      }
      else if (ui_max_value <= ui_register_a) {
        float_value = ui_register_a / (ui_register_a - ui_max_value);
        ui_system_register[UI_BUFFER_SIZE_64] =
             (ui_stack_float_temp_value - ui_stack_float_temp_value) * float_value + ui_stack_float_temp_value;
        ui_system_register[UI_BUFFER_SIZE_65] =
             (ui_stack_float_temp_value - uiAnimationSpeed) * float_value + uiAnimationSpeed;
        ui_task_identifier = *(uint64_t *)(ui_system_register + UI_BUFFER_SIZE_64);
      }
      else {
        ui_system_register[UI_BUFFER_SIZE_64] =
             (ui_stack_float_temp_value - ui_stack_float_temp_value) * (ui_max_value / float_value) +
             ui_stack_float_temp_value;
        ui_system_register[UI_BUFFER_SIZE_65] =
             (uiAnimationSpeed - ui_stack_float_temp_value) * (ui_max_value / float_value) +
             ui_stack_float_temp_value;
        ui_task_identifier = *(uint64_t *)(ui_system_register + UI_BUFFER_SIZE_64);
      }
      *(uint64_t *)(ui_system_register + UI_BUFFER_SIZE_64) = ui_task_identifier;
      ui_character_value = ui_extract_event_data(ui_system_register,ui_system_register + UI_BUFFER_SIZE_64);
      if (ui_character_value == UI_CHAR_NULL) {
        ui_task_identifier = ui_event_id_fourth;
      }
      *(uint64_t *)(ui_system_register + UI_BUFFER_SIZE_64) = ui_task_identifier;
      ui_register_a = ui_system_register[UI_BUFFER_SIZE_64];
      ui_register_a = ui_system_register[UI_BUFFER_SIZE_65];
    }
  }
  else if (ui_register_a * ui_register_a <= ui_register_a) {
    return return 0;
  }
  float_value = ui_system_register[-7];
  float_value = ui_system_register[-6];
  ui_z_depth_value = ui_system_register[-5];
  float_value = ui_system_register[-3];
  float_value = ui_system_register[-2];
  float_value = ui_system_register[-1];
  float_value = ui_system_register[1];
  float_value = ui_system_register[2];
  float_value = ui_system_register[3];
  *ui_system_register = ui_register_a * ui_register_a + ui_system_register[-8] * ui_register_a +
               ui_system_register[-4] * 0.0 + *ui_system_register;
  ui_system_register[1] = ui_register_b * ui_register_a + float_value * ui_register_a + float_value * 0.0 + float_value;
  ui_system_register[2] = ui_register_c * ui_register_a + float_value * ui_register_a + float_value * 0.0 + float_value;
  ui_system_register[3] = ui_register_d * ui_register_a + ui_z_depth_value * ui_register_a + float_value * 0.0 + float_value;
  return return 1;
}

uint64_t ui_system_update_widget_position(longlong *ui_callback_context)

{
  bool boolean_flag;
  float ui_temp_float;
  char ui_character_value;
  longlong ui_event_index;
  float *pui_widget_x_coord;
  int ui_system_register;
  uint64_t ui_event_id1;
  float *ui_system_register;
  longlong long_counter_two;
  uint64_t ui_system_register;
  int ui_widget_render_counter;
  longlong ui_window_handle;
  longlong long_counter5;
  longlong ui_system_register_long;
  float *ui_system_register;
  int ui_result_status;
  longlong ui_system_register_long;
  float ui_rotation_angle;
  float ui_opacity_value;
  float in_XMM5_Da;
  float ui_min_value;
  float ui_register_a;
  float ui_max_value;
  float ui_register_a;
  float ui_z_depth;
  float ui_register_a;
  float ui_register_b;
  float ui_register_c;
  float ui_register_d;
  float ui_register_a;
  float ui_stack_float_temp_value;
  float uiAnimationSpeed;
  float ui_stack_float_temp_value;
  longlong ui_stack_event_parameter;
  uint32_t ui_stack_temp_unsigned_value;
  uint32_t ui_stack_unsigned_var_c;
  uint32_t ui_stack_temp_unsigned_value;
  uint32_t ui_stack_unsigned_var_c;
  
  ui_system_register[UI_OFFSET_68] = in_XMM5_Da;
  ui_system_register[UI_REGISTER_Z_OFFSET] = ui_register_a;
  if (0 < ui_system_register) {
    long_counter5 = *ui_callback;
    ui_result_status = 1;
    ui_event_id1 = *(uint64_t *)(ui_system_register + UI_OFFSET_68);
    ui_stack_temp_unsigned_value = 0;
    pui_widget_x_coord = (float *)(long_counter5 + 4);
    ui_stack_unsigned_var_c = UI_FLOAT_MAX_VALUE;
    ui_stack_temp_unsigned_value = 0;
    ui_stack_unsigned_var_c = UI_FLOAT_MAX_VALUE;
    ui_system_register[-UI_MEMORY_RESOURCE_TYPE] = 0.0;
    ui_system_register[-UI_WIDGET_RESOURCE_TYPE] = UI_FLOAT_INFINITY;
    ui_system_register[-UI_OFFSET_22] = 0.0;
    ui_system_register[-UI_LAYOUT_RESOURCE_TYPE] = UI_FLOAT_INFINITY;
    ui_opacity_value = ui_register_a;
    ui_z_depth_value = ui_register_a;
    ui_stack_event_parameter = ui_system_register;
    do {
      ui_stack_temp_unsigned_value = *(uint32_t *)((ui_system_register - long_counter5) + -4 + (longlong)pui_widget_x_coord);
      ui_stack_temp_unsigned_value = *(uint32_t *)((ui_system_register - long_counter5) + (longlong)pui_widget_x_coord);
      ui_window_handle = (longlong)(ui_result_status % ui_system_register);
      ui_stack_temp_unsigned_value = *(uint32_t *)(ui_system_register + ui_window_handle * 8);
      ui_stack_temp_unsigned_value = *(uint32_t *)(ui_system_register + UI_OFFSET_REGISTER_POSITIVE_4 + ui_window_handle * 8);
      ui_system_render_component(&ui_stack_data_buffer_extended_70,&ui_stack_data_buffer_extended_60,&ui_stack_buffer_extended_40,&ui_stack_format_temp,
                    ui_system_register + -UI_EVENT_FLAG_OFFSET);
      ui_system_register[-UI_GUARD_CHECK_TYPE] = *pui_widget_x_coord;
      ui_system_register[-UI_RENDER_RESOURCE_TYPE] = *(float *)(long_counter5 + 4 + ui_window_handle * 8);
      ui_rotation_angle_value = (ui_system_register[-UI_GUARD_CHECK_TYPE_2] - ui_system_register[-UI_MAX_EVENT_FLAGS]) * (ui_system_register[-UI_GUARD_CHECK_TYPE_2] - ui_system_register[-UI_MAX_EVENT_FLAGS]) +
               (ui_system_register[-UI_OFFSET_32] - ui_system_register[-UI_EVENT_FLAG_OFFSET]) * (ui_system_register[-UI_OFFSET_32] - ui_system_register[-UI_EVENT_FLAG_OFFSET]) +
               (ui_system_register[-UI_OFFSET_30] - ui_system_register[-ui_component_angle_offset]) * (ui_system_register[-UI_OFFSET_30] - ui_system_register[-ui_component_angle_offset]);
      ui_system_register[-UI_OFFSET_28] = pui_widget_x_coord[-1];
      ui_system_register[-UI_SNAPSHOT_CREATE_FLAGS] = *(float *)(long_counter5 + ui_window_handle * 8);
      ui_register_a = ui_rotation_angle_value;
      if (ui_opacity_value <= ui_rotation_angle_value) {
        ui_register_a = ui_opacity_value;
      }
      if (ui_rotation_angle_value < ui_opacity_value) {
        ui_event_id1 = *(uint64_t *)(ui_system_register + -UI_OFFSET_32);
      }
      ui_system_render_component(ui_system_register + -UI_SNAPSHOT_CREATE_FLAGS,ui_system_register + -UI_OFFSET_28,&ui_stack_buffer_extended_40,&ui_stack_format_temp,
                    ui_system_register + -UI_SHIFT_AMOUNT_20);
      ui_opacity_value = (ui_system_register[-ELEVEN_VALUE] - ui_system_register[-UI_RESOURCE_TYPE_CONFIG]) * (ui_system_register[-ELEVEN_VALUE] - ui_system_register[-UI_RESOURCE_TYPE_CONFIG]) +
               (ui_system_register[-12] - ui_system_register[-UI_SHIFT_AMOUNT_20]) * (ui_system_register[-12] - ui_system_register[-UI_SHIFT_AMOUNT_20]) +
               (ui_system_register[-10] - ui_system_register[-UI_NETWORK_RESOURCE_TYPE]) * (ui_system_register[-10] - ui_system_register[-UI_NETWORK_RESOURCE_TYPE]);
      ui_rotation_angle_value = ui_opacity_value;
      if (ui_z_depth_value <= ui_opacity_value) {
        ui_rotation_angle_value = ui_z_depth_value;
      }
      if (ui_opacity_value < ui_z_depth_value) {
        ui_system_register = *(uint64_t *)(ui_system_register + -UI_SHIFT_AMOUNT_20);
      }
      ui_result_status = ui_result_status + 1;
      pui_widget_x_coord = pui_widget_x_coord + 2;
      ui_stack_event_parameter = ui_stack_event_parameter + -1;
      ui_opacity_value = ui_register_a;
      ui_z_depth_value = ui_rotation_angle_value;
    } while (ui_stack_event_parameter != 0);
    ui_system_register = *(longlong *)(ui_system_register + UI_BUFFER_SIZE_64);
    ui_system_register = *(float **)(ui_system_register + UI_TRANSFORM_MATRIX_OFFSET);
    *(uint64_t *)(ui_system_register + UI_OFFSET_68) = ui_event_id1;
    ui_register_a = ui_system_register[UI_REGISTER_Z_OFFSET];
    in_XMM5_Da = ui_system_register[UI_OFFSET_68];
    *(uint64_t *)(ui_system_register + UI_REGISTER_X_OFFSET) = ui_system_register;
    ui_register_a = ui_system_register[UI_REGISTER_Y_OFFSET];
    ui_register_a = ui_system_register[UI_REGISTER_X_OFFSET];
    ui_stack_event_parameter = 0;
  }
  long_counter5 = 0;
  boolean_flag = true;
  ui_result_status = 0;
  if (3 < ui_system_register) {
    ui_window_handle = *(longlong *)(ui_system_register + UI_OFFSET_136);
    ui_widget_render_counter = 2;
    long_counter_two = (ui_system_register - 4U >> 2) + 1;
    pui_widget_x_coord = (float *)(ui_window_handle + UI_SHIFT_AMOUNT_20);
    ui_result_status = (int)long_counter_two * 4;
    long_counter5 = long_counter_two * 4;
    do {
      ui_event_index = (longlong)((ui_widget_render_counter + -1) % ui_system_register);
      if ((!boolean_flag) ||
         ((ui_opacity_value = (pui_widget_x_coord[-4] - *(float *)(ui_window_handle + 4 + ui_event_index * 8)) * (in_XMM5_Da - pui_widget_x_coord[-5])
                    - (ui_register_a - pui_widget_x_coord[-4]) * (pui_widget_x_coord[-5] - *(float *)(ui_window_handle + ui_event_index * 8))
          , ui_opacity_value <= ui_min_value && (ui_opacity_value < ui_min_value)))) {
        boolean_flag = false;
      }
      else {
        boolean_flag = true;
      }
      if ((!boolean_flag) ||
         ((ui_opacity_value = (pui_widget_x_coord[-2] - *(float *)(ui_window_handle + 4 + (longlong)(ui_widget_render_counter % ui_system_register) * 8)) *
                    (in_XMM5_Da - pui_widget_x_coord[-3]) -
                    (ui_register_a - pui_widget_x_coord[-2]) *
                    (pui_widget_x_coord[-3] - *(float *)(ui_window_handle + (longlong)(ui_widget_render_counter % ui_system_register) * 8)),
          ui_opacity_value <= ui_min_value && (ui_opacity_value < ui_min_value)))) {
        boolean_flag = false;
      }
      else {
        boolean_flag = true;
      }
      ui_event_index = (longlong)((ui_widget_render_counter + 1) % ui_system_register);
      if ((!boolean_flag) ||
         ((ui_opacity_value = (*pui_widget_x_coord - *(float *)(ui_window_handle + 4 + ui_event_index * 8)) * (in_XMM5_Da - pui_widget_x_coord[-1]) -
                    (ui_register_a - *pui_widget_x_coord) * (pui_widget_x_coord[-1] - *(float *)(ui_window_handle + ui_event_index * 8)),
          ui_opacity_value <= ui_min_value && (ui_opacity_value < ui_min_value)))) {
        boolean_flag = false;
      }
      else {
        boolean_flag = true;
      }
      ui_event_index = (longlong)((ui_widget_render_counter + 2) % ui_system_register);
      if ((!boolean_flag) ||
         ((ui_opacity_value = (pui_widget_x_coord[2] - *(float *)(ui_window_handle + 4 + ui_event_index * 8)) * (in_XMM5_Da - pui_widget_x_coord[1]) -
                    (ui_register_a - pui_widget_x_coord[2]) * (pui_widget_x_coord[1] - *(float *)(ui_window_handle + ui_event_index * 8)),
          ui_opacity_value <= ui_min_value && (ui_opacity_value < ui_min_value)))) {
        boolean_flag = false;
      }
      else {
        boolean_flag = true;
      }
      ui_widget_render_counter = ui_widget_render_counter + 4;
      pui_widget_x_coord = pui_widget_x_coord + 8;
      long_counter_two = long_counter_two + -1;
    } while (long_counter_two != 0);
  }
  if (long_counter5 < ui_system_register) {
    ui_window_handle = *(longlong *)(ui_system_register + UI_OFFSET_136);
    do {
      ui_result_status = ui_result_status + 1;
      if ((!boolean_flag) ||
         ((ui_opacity_value = *(float *)(ui_window_handle + 4 + long_counter5 * 8), ui_z_depth_value = *(float *)(ui_window_handle + long_counter5 * 8),
          ui_opacity_value = (ui_opacity_value - *(float *)(ui_window_handle + 4 + (longlong)(ui_result_status % ui_system_register) * 8)) *
                   (in_XMM5_Da - ui_z_depth_value) -
                   (ui_register_a - ui_opacity_value) *
                   (ui_z_depth_value - *(float *)(ui_window_handle + (longlong)(ui_result_status % ui_system_register) * 8)),
          ui_opacity_value <= ui_min_value && (ui_opacity_value < ui_min_value)))) {
        boolean_flag = false;
      }
      else {
        boolean_flag = true;
      }
      long_counter5 = long_counter5 + 1;
    } while (long_counter5 < ui_system_register);
  }
  if (boolean_flag) {
    if (*(char *)(ui_system_register + UI_OFFSET_72) == UI_CHAR_NULL) {
      if ((ui_min_value < ui_register_a * ui_max_value) ||
         ((ui_opacity_value = ui_max_value - ui_register_a, -1e-05 < ui_opacity_value && (ui_opacity_value < 1e-05)))) {
        ui_event_id1 = CONCAT44(uiAnimationSpeed,ui_stack_float_temp_value);
        if (ABS(ui_max_value) < ABS(ui_register_a)) {
          ui_event_id1 = CONCAT44(ui_stack_float_temp_value,ui_stack_float_temp_value);
        }
      }
      else if (ui_max_value <= ui_register_a) {
        ui_opacity_value = ui_register_a / (ui_register_a - ui_max_value);
        ui_system_register[UI_BUFFER_SIZE_64] =
             (ui_stack_float_temp_value - ui_stack_float_temp_value) * ui_opacity_value + ui_stack_float_temp_value;
        ui_system_register[UI_BUFFER_SIZE_65] =
             (ui_stack_float_temp_value - uiAnimationSpeed) * ui_opacity_value + uiAnimationSpeed;
        ui_event_id1 = *(uint64_t *)(ui_system_register + UI_BUFFER_SIZE_64);
      }
      else {
        ui_system_register[UI_BUFFER_SIZE_64] =
             (ui_stack_float_temp_value - ui_stack_float_temp_value) * (ui_max_value / ui_opacity_value) +
             ui_stack_float_temp_value;
        ui_system_register[UI_BUFFER_SIZE_65] =
             (uiAnimationSpeed - ui_stack_float_temp_value) * (ui_max_value / ui_opacity_value) +
             ui_stack_float_temp_value;
        ui_event_id1 = *(uint64_t *)(ui_system_register + UI_BUFFER_SIZE_64);
      }
      *(uint64_t *)(ui_system_register + UI_BUFFER_SIZE_64) = ui_event_id1;
      ui_character_value = ui_extract_event_data(ui_system_register,ui_system_register + UI_BUFFER_SIZE_64);
      if (ui_character_value == UI_CHAR_NULL) {
        ui_event_id1 = ui_system_register;
      }
      *(uint64_t *)(ui_system_register + UI_BUFFER_SIZE_64) = ui_event_id1;
      ui_register_a = ui_system_register[UI_BUFFER_SIZE_64];
      ui_register_a = ui_system_register[UI_BUFFER_SIZE_65];
    }
  }
  else if (ui_register_a * ui_register_a <= ui_register_a) {
    return return 0;
  }
  ui_opacity_value = ui_system_register[-7];
  ui_z_depth_value = ui_system_register[-6];
  ui_rotation_angle_value = ui_system_register[-5];
  float_value = ui_system_register[-3];
  float_value = ui_system_register[-2];
  float_value = ui_system_register[-1];
  float_value = ui_system_register[1];
  float_value = ui_system_register[2];
  float_value = ui_system_register[3];
  *ui_system_register = ui_register_a * ui_register_a + ui_system_register[-8] * ui_register_a +
               ui_system_register[-4] * 0.0 + *ui_system_register;
  ui_system_register[1] = ui_register_b * ui_register_a + ui_opacity_value * ui_register_a + float_value * 0.0 + float_value;
  ui_system_register[2] = ui_register_c * ui_register_a + ui_z_depth_value * ui_register_a + float_value * 0.0 + float_value;
  ui_system_register[3] = ui_register_d * ui_register_a + ui_rotation_angle_value * ui_register_a + float_value * 0.0 + float_value;
  return return 1;
}

uint64_t ui_system_validate_widget_state(void)

{
  float ui_temp_float;
  longlong ui_event_index;
  float ui_temp_float;
  bool boolean_flag0;
  char char_value_one;
  longlong long_counter_two;
  float *pui_widget_height_val;
  int ui_system_register;
  float *ui_system_register;
  longlong ui_window_handle;
  uint64_t ui_system_register;
  char in_register_r9b;
  int ui_widget_id;
  longlong ui_loop_counter_primary;
  longlong ui_system_register_long;
  float *ui_system_register;
  longlong ui_system_register_long;
  int ui_system_register;
  int ui_error_code;
  float ui_opacity_value;
  float in_XMM5_Da;
  float ui_min_value;
  float ui_register_a;
  float ui_max_value;
  float ui_register_a;
  float ui_register_b;
  float ui_register_c;
  float ui_register_d;
  float ui_register_a;
  float ui_stack_float_temp_value;
  float uiAnimationSpeed;
  float ui_stack_float_temp_value;
  
  ui_event_index = *(longlong *)(ui_system_register + UI_OFFSET_136);
  ui_widget_id = ui_system_register + 2;
  ui_window_handle = (ui_system_register - 4U >> 2) + 1;
  pui_widget_height_val = (float *)(ui_event_index + UI_SHIFT_AMOUNT_20);
  ui_error_code = (int)ui_window_handle * 4;
  ui_loop_counter_primary = ui_window_handle * 4;
  do {
    long_counter_two = (longlong)((ui_widget_id + -1) % ui_system_register);
    if ((in_register_r9b == UI_CHAR_NULL) ||
       ((ui_opacity_value = (pui_widget_height_val[-4] - *(float *)(ui_event_index + 4 + long_counter_two * 8)) * (in_XMM5_Da - pui_widget_height_val[-5]) -
                  (ui_register_a - pui_widget_height_val[-4]) * (pui_widget_height_val[-5] - *(float *)(ui_event_index + long_counter_two * 8)),
        ui_opacity_value <= ui_min_value && (ui_opacity_value < ui_min_value)))) {
      boolean_flag0 = false;
    }
    else {
      boolean_flag0 = true;
    }
    if ((!boolean_flag0) ||
       ((ui_opacity_value = (pui_widget_height_val[-2] - *(float *)(ui_event_index + 4 + (longlong)(ui_widget_id % ui_system_register) * 8)) *
                  (in_XMM5_Da - pui_widget_height_val[-3]) -
                  (ui_register_a - pui_widget_height_val[-2]) *
                  (pui_widget_height_val[-3] - *(float *)(ui_event_index + (longlong)(ui_widget_id % ui_system_register) * 8)),
        ui_opacity_value <= ui_min_value && (ui_opacity_value < ui_min_value)))) {
      boolean_flag0 = false;
    }
    else {
      boolean_flag0 = true;
    }
    long_counter_two = (longlong)((ui_widget_id + 1) % ui_system_register);
    if ((!boolean_flag0) ||
       ((ui_opacity_value = (*pui_widget_height_val - *(float *)(ui_event_index + 4 + long_counter_two * 8)) * (in_XMM5_Da - pui_widget_height_val[-1]) -
                  (ui_register_a - *pui_widget_height_val) * (pui_widget_height_val[-1] - *(float *)(ui_event_index + long_counter_two * 8)),
        ui_opacity_value <= ui_min_value && (ui_opacity_value < ui_min_value)))) {
      boolean_flag0 = false;
    }
    else {
      boolean_flag0 = true;
    }
    long_counter_two = (longlong)((ui_widget_id + 2) % ui_system_register);
    if ((!boolean_flag0) ||
       ((ui_opacity_value = (pui_widget_height_val[2] - *(float *)(ui_event_index + 4 + long_counter_two * 8)) * (in_XMM5_Da - pui_widget_height_val[1]) -
                  (ui_register_a - pui_widget_height_val[2]) * (pui_widget_height_val[1] - *(float *)(ui_event_index + long_counter_two * 8)),
        ui_opacity_value <= ui_min_value && (ui_opacity_value < ui_min_value)))) {
      in_register_r9b = UI_CHAR_NULL;
    }
    else {
      in_register_r9b = '\x01';
    }
    ui_widget_id = ui_widget_id + 4;
    pui_widget_height_val = pui_widget_height_val + 8;
    ui_window_handle = ui_window_handle + -1;
  } while (ui_window_handle != 0);
  if (ui_loop_counter_primary < ui_system_register) {
    ui_event_index = *(longlong *)(ui_system_register + UI_OFFSET_136);
    do {
      ui_error_code = ui_error_code + 1;
      if ((in_register_r9b == UI_CHAR_NULL) ||
         ((ui_opacity_value = *(float *)(ui_event_index + 4 + ui_loop_counter_primary * 8), float_value = *(float *)(ui_event_index + ui_loop_counter_primary * 8),
          ui_opacity_value = (ui_opacity_value - *(float *)(ui_event_index + 4 + (longlong)(ui_error_code % ui_system_register) * 8)) *
                   (in_XMM5_Da - float_value) -
                   (ui_register_a - ui_opacity_value) *
                   (float_value - *(float *)(ui_event_index + (longlong)(ui_error_code % ui_system_register) * 8)),
          ui_opacity_value <= ui_min_value && (ui_opacity_value < ui_min_value)))) {
        in_register_r9b = UI_CHAR_NULL;
      }
      else {
        in_register_r9b = '\x01';
      }
      ui_loop_counter_primary = ui_loop_counter_primary + 1;
    } while (ui_loop_counter_primary < ui_system_register);
  }
  if (in_register_r9b == UI_CHAR_NULL) {
    if (ui_register_a * ui_register_a <= ui_register_a) {
      return return 0;
    }
  }
  else if (*(char *)(ui_system_register + UI_OFFSET_72) == UI_CHAR_NULL) {
    ui_opacity_value = ui_register_a * ui_max_value;
    if ((ui_min_value < ui_opacity_value) ||
       ((ui_opacity_value = ui_max_value - ui_register_a, -1e-05 < ui_opacity_value && (ui_opacity_value < 1e-05)))) {
      if (ABS(ui_max_value) < ABS(ui_register_a)) {
        _ui_stack_float_temp_value = _ui_stack_float_temp_value;
      }
    }
    else if (ui_max_value <= ui_register_a) {
      ui_opacity_value = ui_register_a - ui_max_value;
      ui_system_register[UI_BUFFER_SIZE_64] =
           (ui_stack_float_temp_value - ui_stack_float_temp_value) * (ui_register_a / ui_opacity_value) +
           ui_stack_float_temp_value;
      ui_system_register[UI_BUFFER_SIZE_65] =
           (ui_stack_float_temp_value - uiAnimationSpeed) * (ui_register_a / ui_opacity_value) +
           uiAnimationSpeed;
      _ui_stack_float_temp_value = *(uint64_t *)(ui_system_register + UI_BUFFER_SIZE_64);
    }
    else {
      ui_system_register[UI_BUFFER_SIZE_64] =
           (ui_stack_float_temp_value - ui_stack_float_temp_value) * (ui_max_value / ui_opacity_value) +
           ui_stack_float_temp_value;
      ui_system_register[UI_BUFFER_SIZE_65] =
           (uiAnimationSpeed - ui_stack_float_temp_value) * (ui_max_value / ui_opacity_value) +
           ui_stack_float_temp_value;
      _ui_stack_float_temp_value = *(uint64_t *)(ui_system_register + UI_BUFFER_SIZE_64);
    }
    *(uint64_t *)(ui_system_register + UI_BUFFER_SIZE_64) = _ui_stack_float_temp_value;
    char_value_one = ui_extract_event_data(ui_opacity_value,ui_system_register + UI_BUFFER_SIZE_64);
    if (char_value_one == UI_CHAR_NULL) {
      _ui_stack_float_temp_value = ui_system_register;
    }
    *(uint64_t *)(ui_system_register + UI_BUFFER_SIZE_64) = _ui_stack_float_temp_value;
    ui_register_a = ui_system_register[UI_BUFFER_SIZE_64];
    ui_register_a = ui_system_register[UI_BUFFER_SIZE_65];
  }
  ui_opacity_value = ui_system_register[-7];
  float_value = ui_system_register[-6];
  float_value = ui_system_register[-5];
  float_value = ui_system_register[-3];
  float_value = ui_system_register[-2];
  float_value = ui_system_register[-1];
  float_value = ui_system_register[1];
  float_value = ui_system_register[2];
  float_value = ui_system_register[3];
  *ui_system_register = ui_register_a * ui_register_a + ui_system_register[-8] * ui_register_a +
               ui_system_register[-4] * 0.0 + *ui_system_register;
  ui_system_register[1] = ui_register_b * ui_register_a + ui_opacity_value * ui_register_a + float_value * 0.0 + float_value;
  ui_system_register[2] = ui_register_c * ui_register_a + float_value * ui_register_a + float_value * 0.0 + float_value;
  ui_system_register[3] = ui_register_d * ui_register_a + float_value * ui_register_a + float_value * 0.0 + float_value;
  return return 1;
}

uint64_t ui_system_check_widget_visibility(void)

{
  float ui_temp_float;
  longlong ui_event_index;
  float ui_temp_float;
  char char_value_zero;
  int ui_system_register;
  float *ui_system_register;
  uint64_t ui_system_register;
  int ui_event_validation_counter;
  char in_register_r9b;
  longlong ui_register_r11;
  longlong ui_system_register_long;
  float *ui_system_register;
  longlong ui_system_register_long;
  int ui_system_register;
  float ui_widget_width;
  float in_XMM5_Da;
  float ui_min_value;
  float ui_register_a;
  float ui_max_value;
  float ui_register_a;
  float ui_register_b;
  float ui_register_c;
  float ui_register_d;
  float ui_register_a;
  float ui_stack_float_temp_value;
  float uiAnimationSpeed;
  float ui_stack_float_temp_value;
  
  ui_event_index = *(longlong *)(ui_system_register + UI_OFFSET_136);
  ui_event_validation_counter = ui_system_register + 1;
  do {
    if ((in_register_r9b == UI_CHAR_NULL) ||
       ((ui_widget_width_val = *(float *)(ui_event_index + 4 + ui_register_r11 * 8), float_value = *(float *)(ui_event_index + ui_register_r11 * 8),
        ui_widget_width_val = (ui_widget_width_val - *(float *)(ui_event_index + 4 + (longlong)(ui_event_validation_counter % ui_system_register) * 8)) *
                 (in_XMM5_Da - float_value) -
                 (ui_register_a - ui_widget_width_val) *
                 (float_value - *(float *)(ui_event_index + (longlong)(ui_event_validation_counter % ui_system_register) * 8)),
        ui_widget_width_val <= ui_min_value && (ui_widget_width_val < ui_min_value)))) {
      in_register_r9b = UI_CHAR_NULL;
    }
    else {
      in_register_r9b = '\x01';
    }
    ui_event_validation_counter = ui_event_validation_counter + 1;
    ui_register_r11 = ui_register_r11 + 1;
  } while (ui_register_r11 < ui_system_register);
  if (in_register_r9b == UI_CHAR_NULL) {
    if (ui_register_a * ui_register_a <= ui_register_a) {
      return return 0;
    }
  }
  else if (*(char *)(ui_system_register + UI_OFFSET_72) == UI_CHAR_NULL) {
    ui_widget_width_val = ui_register_a * ui_max_value;
    if ((ui_min_value < ui_widget_width_val) ||
       ((ui_widget_width_val = ui_max_value - ui_register_a, -1e-05 < ui_widget_width_val && (ui_widget_width_val < 1e-05)))) {
      if (ABS(ui_max_value) < ABS(ui_register_a)) {
        _ui_stack_float_temp_value = _ui_stack_float_temp_value;
      }
    }
    else if (ui_max_value <= ui_register_a) {
      ui_widget_width_val = ui_register_a - ui_max_value;
      ui_system_register[UI_BUFFER_SIZE_64] =
           (ui_stack_float_temp_value - ui_stack_float_temp_value) * (ui_register_a / ui_widget_width_val) +
           ui_stack_float_temp_value;
      ui_system_register[UI_BUFFER_SIZE_65] =
           (ui_stack_float_temp_value - uiAnimationSpeed) * (ui_register_a / ui_widget_width_val) +
           uiAnimationSpeed;
      _ui_stack_float_temp_value = *(uint64_t *)(ui_system_register + UI_BUFFER_SIZE_64);
    }
    else {
      ui_system_register[UI_BUFFER_SIZE_64] =
           (ui_stack_float_temp_value - ui_stack_float_temp_value) * (ui_max_value / ui_widget_width_val) +
           ui_stack_float_temp_value;
      ui_system_register[UI_BUFFER_SIZE_65] =
           (uiAnimationSpeed - ui_stack_float_temp_value) * (ui_max_value / ui_widget_width_val) +
           ui_stack_float_temp_value;
      _ui_stack_float_temp_value = *(uint64_t *)(ui_system_register + UI_BUFFER_SIZE_64);
    }
    *(uint64_t *)(ui_system_register + UI_BUFFER_SIZE_64) = _ui_stack_float_temp_value;
    char_value_zero = ui_extract_event_data(ui_widget_width_val,ui_system_register + UI_BUFFER_SIZE_64);
    if (char_value_zero == UI_CHAR_NULL) {
      _ui_stack_float_temp_value = ui_system_register;
    }
    *(uint64_t *)(ui_system_register + UI_BUFFER_SIZE_64) = _ui_stack_float_temp_value;
    ui_register_a = ui_system_register[UI_BUFFER_SIZE_64];
    ui_register_a = ui_system_register[UI_BUFFER_SIZE_65];
  }
  ui_widget_width_val = ui_system_register[-7];
  float_value = ui_system_register[-6];
  float_value = ui_system_register[-5];
  float_value = ui_system_register[-3];
  float_value = ui_system_register[-2];
  float_value = ui_system_register[-1];
  float_value = ui_system_register[1];
  float_value = ui_system_register[2];
  float_value = ui_system_register[3];
  *ui_system_register = ui_register_a * ui_register_a + ui_system_register[-8] * ui_register_a +
               ui_system_register[-4] * 0.0 + *ui_system_register;
  ui_system_register[1] = ui_register_b * ui_register_a + ui_widget_width_val * ui_register_a + float_value * 0.0 + float_value;
  ui_system_register[2] = ui_register_c * ui_register_a + float_value * ui_register_a + float_value * 0.0 + float_value;
  ui_system_register[3] = ui_register_d * ui_register_a + float_value * ui_register_a + float_value * 0.0 + float_value;
  return return 1;
}

bool ui_system_is_widget_enabled(void)

{
  bool boolean_flag;
  float ui_temp_float;
  float ui_widget_x_coord;
  float *ui_system_register;
  float ui_register_a;
  float ui_register_b;
  float ui_register_c;
  float ui_register_d;
  float ui_register_a;
  
  boolean_flag = ui_register_a < ui_register_a * ui_register_a;
  if (boolean_flag) {
    float_value = ui_system_register[-7];
    float_value = ui_system_register[-6];
    float_value = ui_system_register[-5];
    float_value = ui_system_register[-3];
    float_value = ui_system_register[-2];
    float_value = ui_system_register[-1];
    float_value = ui_system_register[1];
    float_value = ui_system_register[2];
    ui_widget_x_coord = ui_system_register[3];
    *ui_system_register = ui_register_a * ui_register_a + ui_system_register[-8] * ui_register_a +
                 ui_system_register[-4] * 0.0 + *ui_system_register;
    ui_system_register[1] = ui_register_b * ui_register_a + float_value * ui_register_a + float_value * 0.0 + float_value;
    ui_system_register[2] = ui_register_c * ui_register_a + float_value * ui_register_a + float_value * 0.0 + float_value;
    ui_system_register[3] = ui_register_d * ui_register_a + float_value * ui_register_a + float_value * 0.0 + ui_widget_x_coord;
  }
  return return boolean_flag;
}

void ui_system_apply_widget_transform(longlong *ui_callback_context,float ui_event_type)

{
  ulonglong ui_system_event_id;
  longlong ui_event_index;
  uint ui_loop_counter;
  ulonglong ui_temp_ulong;
  float ui_temp_float;
  uint8_t ui_temp_buffer [16];
  float ui_stack_data_float_extended;
  
  ui_event_index = *ui_callback;
  ui_system_event_id = 0;
  ui_loop_counter = ui_system_event_id;
  if (ui_callback[1] - ui_event_index >> 3 != 0) {
    do {
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_stack_data_float_extended = (float)((ulonglong)*(uint64_t *)(ui_system_event_id + ui_event_index) >> UI_OFFSET_32);
      ui_stack_data_float_extended = (float)*(uint64_t *)(ui_system_event_id + ui_event_index);
      float_value = ui_stack_data_float_extended * ui_stack_data_float_extended + ui_stack_data_float_extended * ui_stack_data_float_extended;
      ui_temp_buffer = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
      float_value = ui_temp_buffer._data_offset_;
      float_value = float_value * 0.5 * (3.0 - float_value * float_value * float_value);
      *(ulonglong *)(ui_system_event_id + ui_callback[UI_RESOURCE_LOAD_TYPE]) =
           CONCAT44(float_value * ui_stack_data_float_extended * ui_event_type + *(float *)(ui_system_event_id + 4 + ui_event_index),
                    float_value * ui_stack_data_float_extended * ui_event_type + *(float *)(ui_system_event_id + ui_event_index));
      ui_system_event_id = ui_system_event_id + 8;
      ui_event_index = *ui_callback;
      ui_loop_counter = (ulonglong)ui_loop_counter;
    } while ((ulonglong)(longlong)(int)ui_loop_counter < (ulonglong)(ui_callback[1] - ui_event_index >> 3));
  }
  return ui_system_return_value;
}

void ui_system_update_widget_animation(uint64_t ui_callback,longlong *ui_event_data_buffer_type,uint64_t ui_event_data,longlong ui_event_flags)

{
  ulonglong ui_system_event_id;
  uint in_R10D;
  float ui_temp_float;
  uint8_t ui_temp_buffer [16];
  float ui_register_a;
  float ui_stack_float_temp_value;
  
  ui_system_event_id = (ulonglong)in_R10D;
  do {
    in_R10D = in_R10D + 1;
    ui_stack_float_temp_value = (float)((ulonglong)*(uint64_t *)(ui_system_event_id + ui_event_flags) >> UI_OFFSET_32);
    ui_stack_float_temp_value = (float)*(uint64_t *)(ui_system_event_id + ui_event_flags);
    float_value = ui_stack_float_temp_value * ui_stack_float_temp_value +
            ui_stack_float_temp_value * ui_stack_float_temp_value;
    ui_temp_buffer = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
    float_value = ui_temp_buffer._data_offset_;
    float_value = float_value * 0.5 * (3.0 - float_value * float_value * float_value);
    *(ulonglong *)(ui_system_event_id + ui_event_type[UI_RESOURCE_LOAD_TYPE]) =
         CONCAT44(float_value * ui_stack_float_temp_value * ui_register_a + *(float *)(ui_system_event_id + 4 + ui_event_flags),
                  float_value * ui_stack_float_temp_value * ui_register_a + *(float *)(ui_system_event_id + ui_event_flags));
    ui_system_event_id = ui_system_event_id + 8;
    ui_event_flags = *ui_event_type;
  } while ((ulonglong)(longlong)(int)in_R10D < (ulonglong)(ui_event_type[1] - ui_event_flags >> 3));
  return ui_system_return_value;
}

void ui_system_reset_widget_state(void)

{
  return ui_system_return_value;
}

void ui_system_process_widget_interaction_batch(float *ui_callback,float ui_event_type,longlong ui_event_data,char ui_event_flags,char ui_parameter_value,
                  char ui_parameter_value,uint64_t ui_parameter_value,uint64_t ui_parameter_value,float ui_parameter_value,
                  uint64_t ui_callback_primary)

{
  uint64_t ui_system_event_id;
  uint64_t ui_system_task_id;
  bool ui_bool_result;
  char ui_character_value;
  int ui_result_status;
  longlong ui_event_index;
  float *float_ptr;
  longlong ui_event_index;
  float *pui_widget_x_coord;
  int ui_event_validation_counter;
  ulonglong ui_event_id_secondary;
  float ui_widget_height;
  float ui_animation_progress;
  float ui_transition_alpha;
  float ui_scale_factor;
  float ui_rotation_angle;
  float ui_opacity_value;
  float ui_z_depth;
  float ui_temp_float;
  uint8_t ui_input_data_buffer [16];
  float ui_distance_delta;
  float ui_temp_float;
  float ui_time_delta;
  float ui_stack_float_array_6260 [6200];
  uint64_t ui_stack_event_handler_ptr;
  uint8_t ui_stack_array [32];
  float ui_stack_float_158;
  float *pui_stack_float_150;
  char ui_stack_event_character;
  float ui_stack_float_144;
  uint64_t ui_stack_small_data_buffer;
  float ui_stack_float_138;
  uint64_t ui_stack_position_data;
  float ui_stack_z_depth;
  float ui_stack_float_124;
  float ui_stack_float_120;
  float ui_stack_float_11c;
  uint64_t ui_stack_callback_data;
  float ui_stack_float_110;
  float ui_stack_width_value;
  float ui_stack_float_108;
  float ui_stack_float_104;
  float ui_stack_float_100;
  float ui_stack_float_fc;
  float ui_stack_height_value;
  float ui_stack_float_f4;
  float ui_stack_float_f0;
  float ui_stack_float_ec;
  ulonglong ui_stack_temp_e8;
  
  ui_stack_temp_e8 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_time_delta = 0.0;
  ui_result_status = 0;
  ui_stack_callback_data = ui_callback_primary;
  ui_stack_event_character = ui_event_flags;
  ui_stack_float_144 = ui_event_type;
  if (0 < (int)ui_callback[UI_SNAPSHOT_CREATE_FLAGS]) {
    float_ptr = ui_callback + UI_GUARD_CHECK_TYPE;
    pui_widget_x_coord = float_ptr;
    ui_event_validation_counter = ui_result_status;
    do {
      ui_z_depth_value = pui_widget_x_coord[1];
      ui_widget_height_val = *pui_widget_x_coord;
      ui_stack_float_158 = ui_callback[UI_RESOURCE_LOAD_TYPE];
      if (ui_z_depth_value <= ui_widget_height_val) {
        ui_widget_height_val = ui_widget_height_val - ui_event_type * 4.0;
        if (ui_widget_height_val <= ui_z_depth_value) {
          ui_widget_height_val = ui_z_depth_value;
        }
      }
      else {
        ui_widget_height_val = ui_event_type * 4.0 + ui_widget_height_val;
        if (ui_z_depth_value <= ui_widget_height_val) {
          ui_widget_height_val = ui_z_depth_value;
        }
      }
      pui_stack_float_150 = pui_widget_x_coord + UI_TIME_DELTA_OFFSET9;
      *pui_widget_x_coord = ui_widget_height_val;
      ui_stack_event_handler_ptr = UI_ANIMATION_HANDLER_1;
      ui_system_update_widget_animation_frame(*(uint64_t *)(pui_widget_x_coord + UI_WIDGET_ANIMATION_OFFSET_0X495),ui_callback + UI_OFFSET_54);
      if ((*(char *)(pui_widget_x_coord + UI_COMPONENT_STATE_OFFSET_4AF) == UI_CHAR_NULL) && (*(char *)(pui_widget_x_coord + UI_TIME_DELTA_OFFSETe) != UI_CHAR_NULL)) {
        *(uint8_t *)(pui_widget_x_coord + UI_COMPONENT_STATE_OFFSET_4AF) = 1;
      }
      if ((*(char *)(pui_widget_x_coord + UI_TIME_DELTA_OFFSET8) == UI_CHAR_NULL) && (*(char *)(pui_widget_x_coord + UI_COMPONENT_STATE_OFFSET_4D4) != UI_CHAR_NULL)) {
        *(uint8_t *)(pui_widget_x_coord + UI_TIME_DELTA_OFFSET8) = 1;
      }
      ui_time_delta = ui_time_delta + *pui_widget_x_coord;
      pui_widget_x_coord = pui_widget_x_coord + UI_COMPONENT_DATA_END_OFFSET;
      ui_event_validation_counter = ui_event_validation_counter + 1;
    } while (ui_event_validation_counter < (int)ui_callback[UI_SNAPSHOT_CREATE_FLAGS]);
    if (((0.0 < ui_time_delta) && (ui_time_delta != 1.0)) && (0 < (int)ui_callback[UI_SNAPSHOT_CREATE_FLAGS])) {
      do {
        ui_result_status = ui_result_status + 1;
        *float_ptr = (1.0 / ui_time_delta) * *float_ptr;
        float_ptr = float_ptr + UI_COMPONENT_DATA_END_OFFSET;
      } while (ui_result_status < (int)ui_callback[UI_SNAPSHOT_CREATE_FLAGS]);
    }
  }
  ui_character_value = ui_stack_event_character;
  ui_stack_event_handler_ptr = UI_ANIMATION_HANDLER_2;
  ui_system_set_widget_selection(ui_callback);
  if (((ui_callback[4] == 0.0) && (ui_callback[5] == 0.0)) &&
     (0.25 < ui_callback[2] * ui_callback[2] + ui_callback[3] * ui_callback[3])) {
    *(uint64_t *)(ui_callback + 4) = *(uint64_t *)(ui_callback + 2);
  }
  ui_system_event_id = *(uint64_t *)(ui_callback + 4);
  ui_system_task_id = *(uint64_t *)(ui_callback + 2);
  ui_stack_small_data_buffer = ui_system_event_id;
  ui_stack_position_data = ui_system_task_id;
  if (ui_callback[8] != 0.0) {
    ui_stack_event_handler_ptr = UI_ANIMATION_HANDLER_3;
    ProcessUIRenderCommand(-ui_callback[8]);
  }
  ui_stack_small_data_buffer._data_size_ = (float)((ulonglong)ui_system_event_id >> UI_OFFSET_32);
  float_value = ui_stack_small_data_buffer._data_size_;
  ui_stack_small_data_buffer._data_offset_ = (float)ui_system_event_id;
  ui_widget_height_val = (float)ui_stack_small_data_buffer;
  ui_stack_position_data._data_size_ = (float)((ulonglong)ui_system_task_id >> UI_OFFSET_32);
  float_value = ui_stack_position_data._data_size_;
  ui_stack_position_data._data_offset_ = (float)ui_system_task_id;
  ui_rotation_angle_value = (float)ui_stack_position_data;
  ui_z_depth_value = ui_callback[UI_OFFSET_5D];
  if (((ui_callback[UI_EVENT_FLAG_OFFSET] == 0.0) || (ui_callback[UI_EVENT_FLAG_OFFSET] == 0.5)) || (ui_z_depth_value <= 0.0)) {
    ui_bool_result = false;
  }
  else {
    ui_bool_result = true;
  }
  ui_stack_event_handler_ptr = UI_ANIMATION_HANDLER_4;
  ui_animation_progress = (float)atan2f(*(uint *)(*(longlong *)(ui_event_data + UI_EVENT_FLAG_OFFSET) + UI_STACK_SIZE_128) ^ UI_STACK_SIZE_128000000,
                         *(uint32_t *)(*(longlong *)(ui_event_data + UI_EVENT_FLAG_OFFSET) + UI_WIDGET_ITEM_SIZE));
  ui_animation_progress = ui_animation_progress + ui_callback[6];
  ui_callback[ELEVEN_VALUE] = ui_animation_progress;
  if (ui_animation_progress <= 3.1415927) {
    if (ui_animation_progress < -3.1415927) {
      ui_animation_progress = ui_animation_progress + 6.2831855;
      goto UI_LABEL_DIALOG_RENDER_START;
    }
  }
  else {
    ui_animation_progress = ui_animation_progress - 6.2831855;
UI_LABEL_DIALOG_RENDER_START:
    ui_callback[ELEVEN_VALUE] = ui_animation_progress;
  }
  ui_animation_progress = ui_callback[UI_SNAPSHOT_CREATE_FLAGS];
  ui_event_index = (longlong)(int)ui_animation_progress;
  if (0 < (int)ui_animation_progress) {
    if (*(char *)(ui_event_index * UI_RESOURCE_TYPE_CONFIG58 + UI_COMPONENT_CONFIG_OFFSET_4E + (longlong)ui_callback) == UI_CHAR_NULL) {
      ui_transition_alpha_value = 0.0;
    }
    else {
      ui_transition_alpha_value = ui_callback[ui_event_index * UI_COMPONENT_SIZE_MULTIPLIER + UI_NETWORK_RESOURCE_TYPE] * UI_TRANSITION_ALPHA_MULTIPLIER;
    }
    if ((ui_transition_alpha_value + ui_callback[ui_event_index * UI_COMPONENT_SIZE_MULTIPLIER + ui_component_angle_offset] < ui_callback[ui_event_index * UI_COMPONENT_SIZE_MULTIPLIER + UI_RESOURCE_LOAD_TYPE]) ||
       (*(char *)(ui_callback + ui_event_index * UI_COMPONENT_SIZE_MULTIPLIER + UI_RESOURCE_TYPE_CONFIG) != UI_CHAR_NULL)) {
      ui_callback[12] = ui_callback[ELEVEN_VALUE];
      ui_animation_progress = ui_callback[UI_SNAPSHOT_CREATE_FLAGS];
    }
    ui_event_index = (longlong)(int)ui_animation_progress;
    if (*(char *)(ui_event_index * UI_RESOURCE_TYPE_CONFIG58 + UI_COMPONENT_CONFIG_OFFSET_66 + (longlong)ui_callback) == UI_CHAR_NULL) {
      ui_transition_alpha_value = 0.0;
    }
    else {
      ui_transition_alpha_value = ui_callback[ui_event_index * UI_COMPONENT_SIZE_MULTIPLIER + UI_SNAPSHOT_CREATE_FLAGS] * UI_TRANSITION_ALPHA_MULTIPLIER;
    }
    if ((ui_transition_alpha_value + ui_callback[ui_event_index * 0x4d6 + UI_SHIFT_AMOUNT_20] < ui_callback[ui_event_index * 0x4d6 + UI_RENDER_RESOURCE_TYPE]) ||
       (*(char *)(ui_callback + ui_event_index * 0x4d6 + UI_WIDGET_RESOURCE_TYPE) != UI_CHAR_NULL)) {
      ui_callback[THIRTEEN_VALUE] = ui_callback[ELEVEN_VALUE];
      ui_animation_progress = ui_callback[UI_SNAPSHOT_CREATE_FLAGS];
    }
  }
  ui_stack_float_138 = 1.0;
  if ((((((int)ui_animation_progress < 1) || (ui_callback[2] != 0.0)) || (ui_callback[3] != 0.0)) || (ui_callback[6] == 0.0))
     || ((ABS(ui_callback[ELEVEN_VALUE] - ui_callback[12]) < 0.5 && (ABS(ui_callback[ELEVEN_VALUE] - ui_callback[THIRTEEN_VALUE]) < 0.5)))) {
    if ((ui_bool_result) && ((ui_callback[2] == 0.0 && (ui_callback[3] == 0.0)))) goto UI_LABEL_DIALOG_RENDER_END;
    ui_callback[UI_SHIFT_AMOUNT_20] = 0.0;
    if (0.0 <= ui_widget_height_val) {
      if (ui_widget_height_val <= 0.0) goto UI_LABEL_DIALOG_RENDER_END;
      ui_stack_float_138 = 1.0;
    }
    else {
      ui_stack_float_138 = 0.0;
    }
  }
  else {
    ui_bool_result = true;
    ui_callback[UI_SHIFT_AMOUNT_20] = 1.0;
UI_LABEL_DIALOG_RENDER_END:
    if ((ui_character_value == UI_CHAR_NULL) || (1.0 < ui_callback[UI_OFFSET_54] || ui_callback[UI_OFFSET_54] == 1.0)) {
      if (*(char *)(ui_callback + UI_RENDER_RESOURCE_TYPE) == UI_CHAR_NULL) {
        ui_stack_float_138 = 1.0;
      }
      else {
        ui_stack_float_138 = 0.0;
      }
    }
  }
  if ((ui_z_depth_value <= 0.0) && (0.0 < ui_callback[UI_SHIFT_AMOUNT_20])) {
    ui_z_depth_value = ui_callback[ELEVEN_VALUE] - ui_callback[12];
    ui_animation_progress = ui_callback[ELEVEN_VALUE] - ui_callback[THIRTEEN_VALUE];
    if (ABS(ui_z_depth_value) <= ABS(ui_animation_progress)) {
      ui_z_depth_value = ui_animation_progress;
    }
    if (ui_z_depth_value <= 3.1415927) {
      if (ui_z_depth_value < -3.1415927) {
        ui_z_depth_value = ui_z_depth_value + 6.2831855;
      }
    }
    else {
      ui_z_depth_value = ui_z_depth_value + -6.2831855;
    }
    if (ui_z_depth_value <= 0.0) {
      ui_z_depth_value = 0.0;
    }
    else {
      ui_z_depth_value = 0.5;
    }
    ui_callback[UI_EVENT_FLAG_OFFSET] = ui_z_depth_value;
  }
  if ((ui_bool_result) && (0 < (int)ui_callback[UI_SNAPSHOT_CREATE_FLAGS])) {
    ui_z_depth_value = 0.0;
    float_ptr = ui_callback + UI_GUARD_CHECK_TYPE;
    ui_event_id_secondary = (ulonglong)(uint)ui_callback[UI_SNAPSHOT_CREATE_FLAGS];
    do {
      pui_widget_x_coord = float_ptr + UI_WIDGET_ANIMATION_OFFSET_0X495;
      ui_animation_progress = *float_ptr;
      float_ptr = float_ptr + UI_COMPONENT_DATA_END_OFFSET;
      ui_z_depth_value = ui_z_depth_value + *(float *)(*(longlong *)(*(longlong *)pui_widget_x_coord + UI_OFFSET_72) + UI_FLAG_BYTE_8) * ui_animation_progress;
      ui_event_id_secondary = ui_event_id_secondary - 1;
    } while (ui_event_id_secondary != 0);
    ui_animation_progress = ui_callback[UI_EVENT_FLAG_OFFSET];
    ui_z_depth_value = (ui_stack_float_144 * ui_callback[7]) / ui_z_depth_value + ui_animation_progress;
    ui_callback[UI_EVENT_FLAG_OFFSET] = ui_z_depth_value;
    if (ui_z_depth_value <= 1.0) {
      if ((((ui_animation_progress <= 0.5) && (0.5 < ui_z_depth_value)) && (ABS(ui_callback[ELEVEN_VALUE] - ui_callback[12]) < 0.5)) &&
         (ABS(ui_callback[ELEVEN_VALUE] - ui_callback[THIRTEEN_VALUE]) < 0.5)) {
        ui_callback[UI_EVENT_FLAG_OFFSET] = 0.5;
      }
    }
    else if ((0.5 <= ABS(ui_callback[ELEVEN_VALUE] - ui_callback[12])) || (0.5 <= ABS(ui_callback[ELEVEN_VALUE] - ui_callback[THIRTEEN_VALUE])))
    {
      ui_callback[UI_EVENT_FLAG_OFFSET] = ui_z_depth_value - 1.0;
    }
    else {
      ui_callback[UI_EVENT_FLAG_OFFSET] = 0.0;
    }
  }
  ui_z_depth_value = 1.0;
  if ((((ui_parameter_value != UI_CHAR_NULL) || (ui_parameter_value != UI_CHAR_NULL)) && ((ui_callback[2] != 0.0 || (ui_callback[3] != 0.0)))) ||
     (((ui_callback[4] != 0.0 || (ui_callback[5] != 0.0)) || (0.0 < ui_callback[UI_SHIFT_AMOUNT_20])))) {
    ui_z_depth_value = 0.0;
  }
  float_value = ui_stack_float_144 + ui_stack_float_144;
  ui_transition_alpha_value = *ui_callback - ui_callback[1];
  ui_animation_progress = ui_transition_alpha_value;
  if ((float_value < ABS(ui_transition_alpha_value)) && (ui_animation_progress = float_value, ui_transition_alpha_value < 0.0)) {
    ui_animation_progress = -float_value;
  }
  ui_callback[1] = ui_callback[1] + ui_animation_progress;
  ui_stack_event_handler_ptr = UI_ANIMATION_HANDLER_5;
  ui_transition_alpha_value = (float)ui_system_validate_widget_focus(ui_callback,ui_event_data,ui_stack_callback_data);
  ui_animation_progress = ui_stack_float_144;
  if (ui_transition_alpha_value <= 0.75) {
    ui_transition_alpha_value = 0.75;
  }
  float_value = ui_transition_alpha_value - ui_callback[UI_OFFSET_22];
  if (0.001 <= ABS(float_value)) {
    ui_transition_alpha_value = float_value * ui_stack_float_144 + ui_callback[UI_OFFSET_22];
  }
  ui_callback[UI_OFFSET_22] = ui_transition_alpha_value;
  if ((ui_time_delta <= 0.0) || (ui_callback[UI_OFFSET_54] <= 0.0)) {
    ui_callback[UI_MAX_EVENT_FLAGS] = 0.0;
  }
  else {
    ui_time_delta = 0.0;
    if (0 < (int)ui_callback[UI_SNAPSHOT_CREATE_FLAGS]) {
      float_ptr = ui_callback + UI_GUARD_CHECK_TYPE;
      ui_event_id_secondary = (ulonglong)(uint)ui_callback[UI_SNAPSHOT_CREATE_FLAGS];
      do {
        pui_widget_x_coord = float_ptr + UI_WIDGET_ANIMATION_OFFSET_0X495;
        ui_transition_alpha_value = *float_ptr;
        float_ptr = float_ptr + UI_COMPONENT_DATA_END_OFFSET;
        ui_time_delta = ui_time_delta + *(float *)(**(longlong **)pui_widget_x_coord + UI_FLAG_BYTE_8) * ui_transition_alpha_value;
        ui_event_id_secondary = ui_event_id_secondary - 1;
      } while (ui_event_id_secondary != 0);
    }
    ui_stack_event_handler_ptr = UI_ANIMATION_HANDLER_6;
    ui_time_delta = (float)fmodf(ui_stack_float_144 / ui_time_delta + ui_callback[UI_MAX_EVENT_FLAGS],UI_BIT_SHIFT_63800000);
    ui_callback[UI_MAX_EVENT_FLAGS] = ui_time_delta;
  }
  ui_time_delta = ui_callback[UI_SNAPSHOT_CREATE_FLAGS];
  ui_result_status = 0;
  ui_transition_alpha_value = 0.0;
  if (0 < (int)ui_time_delta) {
    float_ptr = ui_callback + UI_GUARD_CHECK_TYPE;
    do {
      ui_stack_event_handler_ptr = UI_ANIMATION_HANDLER_7;
      ui_scale_factor_val = (float)ui_system_remove_widget_focus(ui_callback,ui_result_status);
      float_value = *float_ptr;
      ui_result_status = ui_result_status + 1;
      float_ptr = float_ptr + UI_COMPONENT_DATA_END_OFFSET;
      ui_transition_alpha_value = ui_transition_alpha_value + ui_scale_factor_val * float_value;
    } while (ui_result_status < (int)ui_time_delta);
  }
  if (ui_z_depth_value < 1.0) {
    if (ui_callback[UI_OFFSET_54] <= 1.0 && ui_callback[UI_OFFSET_54] != 1.0) {
      ui_time_delta = ui_transition_alpha_value * ui_animation_progress + ui_callback[ui_component_angle_offset];
      ui_callback[ui_component_angle_offset] = ui_time_delta;
      if (1.0 < ui_time_delta) {
        ui_callback[ui_component_angle_offset] = ui_time_delta - 1.0;
      }
    }
    else if ((int)ui_time_delta < 1) {
      ui_callback[ui_component_angle_offset] = 0.0;
    }
    else {
      if (*(char *)(ui_callback + UI_RENDER_RESOURCE_TYPE) == UI_CHAR_NULL) {
        ui_animation_progress = 1.0;
      }
      else {
        ui_animation_progress = -1.0;
      }
      ui_event_index = *(longlong *)(ui_callback + (longlong)(int)ui_time_delta * 0x4d6 + -UI_FOCUS_STATE_OFFSET);
      ui_stack_event_handler_ptr = UI_ANIMATION_HANDLER_8;
      ui_event_index = ui_system_get_widget_property(*(uint64_t *)(ui_event_index + 8));
      ui_event_index = UI_SHIFT_AMOUNT_20;
      if (0.0 <= (float_value - ABS(ui_rotation_angle_value)) * ui_animation_progress) {
        ui_event_index = UI_SNAPSHOT_CREATE_FLAGS;
      }
      ui_time_delta = *(float *)(ui_event_index + ui_event_index);
      ui_stack_event_handler_ptr = UI_ANIMATION_HANDLER_9;
      ui_system_get_widget_property(*(uint64_t *)(ui_event_index + 8));
      ui_callback[ui_component_angle_offset] = ui_time_delta;
    }
  }
  ui_time_delta = float_value * float_value + ui_widget_height_val * ui_widget_height_val;
  ui_time_delta = (float)(ui_time_delta <= 1.1754944e-38) * 1.1754944e-38 + ui_time_delta;
  ui_input_data_buffer = rsqrtss(ZEXT416((uint)ui_time_delta),ZEXT416((uint)ui_time_delta));
  ui_animation_progress = ui_input_data_buffer._data_offset_;
  if (-0.2 <= float_value * ui_animation_progress * 0.5 * (3.0 - ui_time_delta * ui_animation_progress * ui_animation_progress)) {
    ui_time_delta = 1.0;
  }
  else {
    ui_time_delta = 0.0;
  }
  ui_callback[UI_RESOURCE_TYPE_CONFIG] = ui_time_delta;
  ui_animation_progress = ui_rotation_angle_value;
  float_value = float_value;
  if ((ui_widget_height_val != 0.0) || (float_value != 0.0)) {
    if (0.0 <= ui_rotation_angle_value * ui_widget_height_val) {
      if (ABS(ui_rotation_angle_value) < ABS(ui_widget_height_val)) {
        ui_animation_progress = ui_widget_height_val;
      }
    }
    else {
      ui_animation_progress = ui_rotation_angle_value + ui_widget_height_val;
    }
    if (0.0 <= float_value * float_value) {
      if (ABS(float_value) < ABS(float_value)) {
        float_value = float_value;
      }
    }
    else {
      float_value = float_value + float_value;
    }
  }
  ui_stack_event_handler_ptr = UI_ANIMATION_HANDLER_10;
  ui_stack_small_data_buffer = ui_system_task_id;
  ui_animation_progress = (float)atan2f(-ui_animation_progress,float_value);
  ui_animation_progress = ABS(ui_animation_progress);
  if (1.5707964 < ui_animation_progress) {
    ui_animation_progress = 3.1415927 - ui_animation_progress;
  }
  ui_animation_progress = ui_animation_progress * 0.63661975;
  float_value = (1.0 - ui_parameter_value) * 0.3;
  if (float_value + 0.05 <= ui_animation_progress) {
    if (0.95 - float_value < ui_animation_progress) {
      ui_animation_progress = 1.0;
    }
  }
  else {
    ui_animation_progress = 0.0;
  }
  ui_scale_factor_val = ui_animation_progress - ui_callback[UI_LAYOUT_RESOURCE_TYPE];
  ui_distance_delta = ABS(ui_scale_factor_val);
  float_value = ui_animation_progress;
  if (0.001 <= ui_distance_delta) {
    ui_opacity_value = ui_stack_float_144;
    if (ui_scale_factor_val < 0.0) {
      ui_opacity_value = -ui_stack_float_144;
    }
    ui_scale_factor_val = 0.1;
    if ((0.1 <= ui_distance_delta) && (ui_scale_factor_val = ui_distance_delta, 0.5 <= ui_distance_delta)) {
      ui_scale_factor_val = 0.5;
    }
    ui_scale_factor_val = ui_opacity_value * ui_scale_factor_val * 12.0;
    if (ABS(ui_scale_factor_val) <= ui_distance_delta) {
      float_value = ui_callback[UI_LAYOUT_RESOURCE_TYPE] + ui_scale_factor_val;
    }
  }
  ui_callback[UI_LAYOUT_RESOURCE_TYPE] = float_value;
  if ((((float_value <= -0.1) || (ui_parameter_value == UI_CHAR_NULL)) || (ui_parameter_value != UI_CHAR_NULL)) || (float_value <= -0.1)) {
UI_LABEL_DIALOG_EVENT_HANDLE:
    if ((ui_callback[UI_RESOURCE_LOAD_TYPE] <= 0.0) || (1.0 <= ui_callback[UI_RESOURCE_LOAD_TYPE])) {
      ui_callback[UI_RESOURCE_LOAD_TYPE] = 0.0;
      ui_callback[UI_NETWORK_RESOURCE_TYPE] = -1.0;
      goto UI_LABEL_DIALOG_UPDATE_START;
    }
  }
  else {
    float_value = float_value * float_value + float_value * float_value;
    float_value = float_value + float_value;
    if (float_value <= 1.0) {
      float_value = 1.0;
    }
    if (-float_value <= ui_rotation_angle_value * ui_widget_height_val) goto UI_LABEL_DIALOG_EVENT_HANDLE;
  }
  float_value = ui_callback[UI_RESOURCE_LOAD_TYPE];
  if (float_value == 0.0) {
    *(bool *)((longlong)ui_callback + 0x5d) = ui_widget_height_val < 0.0;
  }
  float_value = (*(float *)(*(longlong *)
                        (*(longlong *)(ui_callback + (longlong)(int)ui_callback[UI_SNAPSHOT_CREATE_FLAGS] * 0x4d6 + -UI_FOCUS_STATE_OFFSET) + 8)
                      + UI_FLAG_BYTE_8) /
           *(float *)(*(longlong *)
                       (*(longlong *)(ui_callback + (longlong)(int)ui_callback[UI_SNAPSHOT_CREATE_FLAGS] * 0x4d6 + -UI_FOCUS_STATE_OFFSET) + UI_MEMORY_DEALLOC_OFFSET
                       ) + UI_FLAG_BYTE_8)) * ui_transition_alpha_value * ui_stack_float_144 + float_value;
  if (1.0 <= float_value) {
    float_value = 1.0;
  }
  ui_callback[UI_RESOURCE_LOAD_TYPE] = float_value;
  if (ui_callback[UI_NETWORK_RESOURCE_TYPE] <= 0.0 && ui_callback[UI_NETWORK_RESOURCE_TYPE] != 0.0) {
    if (*(char *)((longlong)ui_callback + 0x5d) == UI_CHAR_NULL) {
      ui_rotation_angle_value = 1.0;
    }
    else {
      ui_rotation_angle_value = -1.0;
    }
    if (0.0 <= ui_rotation_angle_value * ui_widget_height_val) {
      ui_widget_height_val = float_value;
      if (*(char *)((longlong)ui_callback + 0x5d) == UI_CHAR_NULL) {
        ui_stack_event_handler_ptr = UI_ANIMATION_HANDLER_11;
        ui_widget_height_val = (float)fmodf(float_value + 0.5,UI_BIT_SHIFT_63800000);
      }
      ui_widget_height_val = ui_widget_height_val - ui_callback[ui_component_angle_offset];
      if (ui_widget_height_val <= 0.5) {
        if (ui_widget_height_val < -0.5) {
          ui_widget_height_val = ui_widget_height_val + 1.0;
        }
      }
      else {
        ui_widget_height_val = ui_widget_height_val + -1.0;
      }
      ui_rotation_angle_value = float_value * float_value * float_value + ui_stack_float_144;
      if (1.0 <= ui_rotation_angle_value) {
        ui_rotation_angle_value = 1.0;
      }
      ui_widget_height_val = ui_rotation_angle_value * float_value * ui_widget_height_val + ui_callback[ui_component_angle_offset];
      ui_callback[ui_component_angle_offset] = ui_widget_height_val;
      if (0.0 <= ui_widget_height_val) {
        if (1.0 <= ui_widget_height_val) {
          ui_callback[ui_component_angle_offset] = ui_widget_height_val - 1.0;
        }
      }
      else {
        ui_callback[ui_component_angle_offset] = ui_widget_height_val + 1.0;
      }
    }
    else {
      ui_callback[UI_NETWORK_RESOURCE_TYPE] = float_value + 0.25;
    }
  }
UI_LABEL_DIALOG_UPDATE_START:
  ui_widget_height_val = ui_callback[UI_SHIFT_AMOUNT_20];
  float_value = 0.0;
  ui_stack_float_124 = (1.0 - ui_widget_height_val) * (1.0 - ui_z_depth_value);
  ui_stack_float_ec = (1.0 - ui_z_depth_value) * ui_widget_height_val;
  ui_stack_z_depth = (1.0 - ui_time_delta) * ui_stack_float_124;
  ui_stack_width_value = (1.0 - ui_animation_progress) * ui_time_delta * ui_stack_float_124;
  ui_stack_float_108 = (1.0 - ui_animation_progress) * ui_stack_z_depth;
  ui_stack_position_data = CONCAT44(ui_stack_position_data._data_size_,ui_stack_width_value);
  ui_stack_float_120 = ui_time_delta * ui_stack_float_124 * ui_animation_progress;
  ui_stack_z_depth = ui_stack_z_depth * ui_animation_progress;
  ui_stack_float_124 = ui_stack_float_124 * ui_animation_progress;
  ui_stack_float_104 = ui_stack_float_120 * ui_stack_float_138;
  ui_stack_float_100 = ui_stack_z_depth * ui_stack_float_138;
  ui_stack_height_value = (1.0 - ui_stack_float_138) * ui_stack_z_depth;
  ui_stack_float_11c = (1.0 - ui_stack_float_138) * ui_stack_float_120;
  ui_stack_callback_data = CONCAT44(ui_stack_callback_data._data_size_,ui_stack_height_value);
  if ((ui_stack_event_character == UI_CHAR_NULL) || (0.0 < ui_stack_float_138)) {
    if (ui_widget_height_val <= 0.0) {
      ui_time_delta = 3.0;
    }
    else {
      ui_time_delta = 5.0;
    }
  }
  else {
    ui_time_delta = 2.0;
  }
  ui_widget_height_val = ui_callback[UI_OFFSET_4A];
  if (ui_z_depth_value <= ui_widget_height_val) {
    ui_widget_height_val = ui_widget_height_val - ui_time_delta * ui_stack_float_144;
    if (ui_widget_height_val <= ui_z_depth_value) {
      ui_widget_height_val = ui_z_depth_value;
    }
  }
  else {
    ui_widget_height_val = ui_widget_height_val + ui_time_delta * ui_stack_float_144;
    if (ui_z_depth_value <= ui_widget_height_val) {
      ui_widget_height_val = ui_z_depth_value;
    }
  }
  ui_callback[UI_OFFSET_4A] = ui_widget_height_val;
  ui_callback[UI_OFFSET_54] = ui_widget_height_val;
  ui_time_delta = ui_callback[UI_RESOURCE_LOAD_TYPE];
  if (0.2 <= ui_time_delta) {
    ui_widget_height_val = 1.0;
    if (0.7 < ui_time_delta) {
      ui_widget_height_val = (1.0 - ui_time_delta) * 3.333333;
    }
  }
  else {
    ui_widget_height_val = ui_time_delta * 5.0;
  }
  if (0.0 < ui_callback[UI_NETWORK_RESOURCE_TYPE]) {
    ui_time_delta = (ui_callback[UI_NETWORK_RESOURCE_TYPE] - ui_time_delta) * 4.0;
    if (ui_time_delta <= 0.0) {
      ui_time_delta = 0.0;
    }
    ui_widget_height_val = ui_widget_height_val * ui_time_delta;
  }
  float_ptr = ui_callback + UI_OFFSET_55;
  ui_result_status = 1;
  do {
    ui_time_delta = *(float *)(((longlong)ui_stack_float_array_6260 - (longlong)ui_callback) + (longlong)float_ptr);
    ui_rotation_angle_value = ui_time_delta - float_ptr[-10];
    float_value = ABS(ui_rotation_angle_value);
    if (0.001 <= float_value) {
      if (ui_rotation_angle_value < 0.0) {
        ui_animation_progress = -1.0;
      }
      else {
        ui_animation_progress = 1.0;
      }
      if (0.05 <= float_value) {
        if (0.5 <= float_value) {
          float_value = 0.5;
        }
      }
      else {
        float_value = 0.05;
      }
      float_value = float_value * ui_animation_progress * ui_stack_float_144 * 6.0;
      if (float_value * ui_animation_progress <= ui_animation_progress * ui_rotation_angle_value) {
        ui_time_delta = float_ptr[-10] + float_value;
      }
    }
    float_ptr[-10] = ui_time_delta;
    *float_ptr = ui_time_delta;
    if (2 < ui_result_status) {
      if (ui_result_status < 7) {
        ui_rotation_angle_value = 1.0 - ui_widget_height_val;
      }
      else {
        ui_rotation_angle_value = ui_widget_height_val;
        if (ui_result_status == 7) {
          if (*(char *)((longlong)ui_callback + 0x5d) != UI_CHAR_NULL) {
UI_LABEL_DIALOG_INPUT_PROCESS:
            ui_rotation_angle_value = 0.0;
          }
        }
        else {
          if (ui_result_status != 8) goto UI_LABEL_DIALOG_INPUT_VALIDATE;
          if (*(char *)((longlong)ui_callback + 0x5d) == UI_CHAR_NULL) goto UI_LABEL_DIALOG_INPUT_PROCESS;
        }
      }
      ui_time_delta = ui_rotation_angle_value * ui_time_delta;
      *float_ptr = ui_time_delta;
    }
UI_LABEL_DIALOG_INPUT_VALIDATE:
    ui_rotation_angle_value = *(float *)((longlong)ui_stack_float_array_6260 + (4 - (longlong)ui_callback) + (longlong)float_ptr);
    float_value = ui_rotation_angle_value - float_ptr[-9];
    ui_animation_progress = ABS(float_value);
    if (0.001 <= ui_animation_progress) {
      if (float_value < 0.0) {
        ui_transition_alpha_value = -1.0;
      }
      else {
        ui_transition_alpha_value = 1.0;
      }
      if (0.05 <= ui_animation_progress) {
        if (0.5 <= ui_animation_progress) {
          ui_animation_progress = 0.5;
        }
      }
      else {
        ui_animation_progress = 0.05;
      }
      ui_animation_progress = ui_animation_progress * ui_transition_alpha_value * ui_stack_float_144 * 6.0;
      if (ui_animation_progress * ui_transition_alpha_value <= ui_transition_alpha_value * float_value) {
        ui_rotation_angle_value = float_ptr[-9] + ui_animation_progress;
      }
    }
    ui_event_validation_counter = ui_result_status + 1;
    float_ptr[-9] = ui_rotation_angle_value;
    float_ptr[1] = ui_rotation_angle_value;
    if (2 < ui_event_validation_counter) {
      if (ui_event_validation_counter < 7) {
        float_value = 1.0 - ui_widget_height_val;
      }
      else {
        float_value = ui_widget_height_val;
        if (ui_event_validation_counter == 7) {
          if (*(char *)((longlong)ui_callback + 0x5d) != UI_CHAR_NULL) {
UI_LABEL_DIALOG_CALLBACK_START:
            float_value = 0.0;
          }
        }
        else {
          if (ui_event_validation_counter != 8) goto UI_LABEL_DIALOG_CALLBACK_END;
          if (*(char *)((longlong)ui_callback + 0x5d) == UI_CHAR_NULL) goto UI_LABEL_DIALOG_CALLBACK_START;
        }
      }
      ui_rotation_angle_value = float_value * ui_rotation_angle_value;
      float_ptr[1] = ui_rotation_angle_value;
    }
UI_LABEL_DIALOG_CALLBACK_END:
    float_value = *(float *)((longlong)ui_stack_float_array_6260 + (8 - (longlong)ui_callback) + (longlong)float_ptr);
    ui_animation_progress = float_value - float_ptr[-8];
    ui_transition_alpha_value = ABS(ui_animation_progress);
    if (0.001 <= ui_transition_alpha_value) {
      if (ui_animation_progress < 0.0) {
        float_value = -1.0;
      }
      else {
        float_value = 1.0;
      }
      if (0.05 <= ui_transition_alpha_value) {
        if (0.5 <= ui_transition_alpha_value) {
          ui_transition_alpha_value = 0.5;
        }
      }
      else {
        ui_transition_alpha_value = 0.05;
      }
      ui_transition_alpha_value = ui_transition_alpha_value * float_value * ui_stack_float_144 * 6.0;
      if (ui_transition_alpha_value * float_value <= float_value * ui_animation_progress) {
        float_value = float_ptr[-8] + ui_transition_alpha_value;
      }
    }
    ui_event_validation_counter = ui_result_status + 2;
    float_ptr[-8] = float_value;
    float_ptr[2] = float_value;
    if (2 < ui_event_validation_counter) {
      if (ui_event_validation_counter < 7) {
        ui_animation_progress = 1.0 - ui_widget_height_val;
      }
      else {
        ui_animation_progress = ui_widget_height_val;
        if (ui_event_validation_counter == 7) {
          if (*(char *)((longlong)ui_callback + 0x5d) != UI_CHAR_NULL) {
UI_LABEL_DIALOG_CLEANUP_START:
            ui_animation_progress = 0.0;
          }
        }
        else {
          if (ui_event_validation_counter != 8) goto UI_LABEL_DIALOG_CLEANUP_END;
          if (*(char *)((longlong)ui_callback + 0x5d) == UI_CHAR_NULL) goto UI_LABEL_DIALOG_CLEANUP_START;
        }
      }
      float_value = ui_animation_progress * float_value;
      float_ptr[2] = float_value;
    }
UI_LABEL_DIALOG_CLEANUP_END:
    ui_result_status = ui_result_status + 3;
    float_value = float_value + ui_time_delta + ui_rotation_angle_value + float_value;
    float_ptr = float_ptr + 3;
    if (9 < ui_result_status) {
      ui_time_delta = ui_callback[UI_OFFSET_54];
      ui_time_delta = 1.0 - ((ui_time_delta * 6.0 - 15.0) * ui_time_delta + 10.0) * ui_time_delta * ui_time_delta * ui_time_delta;
      if (float_value != ui_time_delta) {
        if (float_value <= 0.0) {
          ui_callback[UI_OFFSET_54] = 1.0;
        }
        else {
          ui_time_delta = ui_time_delta / float_value;
          ui_callback[UI_OFFSET_55] = ui_callback[UI_OFFSET_55] * ui_time_delta;
          ui_callback[UI_OFFSET_56] = ui_callback[UI_OFFSET_56] * ui_time_delta;
          ui_callback[UI_OFFSET_57] = ui_callback[UI_OFFSET_57] * ui_time_delta;
          ui_callback[UI_OFFSET_58] = ui_callback[UI_OFFSET_58] * ui_time_delta;
          ui_callback[UI_OFFSET_59] = ui_callback[UI_OFFSET_59] * ui_time_delta;
          ui_callback[UI_OFFSET_5A] = ui_callback[UI_OFFSET_5A] * ui_time_delta;
          ui_callback[UI_OFFSET_5B] = ui_callback[UI_OFFSET_5B] * ui_time_delta;
          ui_callback[UI_OFFSET_5C] = ui_callback[UI_OFFSET_5C] * ui_time_delta;
          ui_callback[UI_OFFSET_5D] = ui_time_delta * ui_callback[UI_OFFSET_5D];
        }
      }
      float_value = ui_stack_width_value - ui_stack_float_108;
      ui_rotation_angle_value = ((((ui_stack_z_depth + ui_stack_float_120) * ui_stack_float_138 + ui_stack_float_124) - ui_stack_float_11c) - ui_stack_height_value) -
               ui_stack_float_124;
      ui_time_delta = float_value * float_value + ui_rotation_angle_value * ui_rotation_angle_value;
      ui_time_delta = (float)(ui_time_delta <= 1.1754944e-38) * 1.1754944e-38 + ui_time_delta;
      ui_input_data_buffer = rsqrtss(ZEXT416((uint)ui_time_delta),ZEXT416((uint)ui_time_delta));
      ui_widget_height_val = ui_input_data_buffer._data_offset_;
      ui_time_delta = ui_widget_height_val * 0.5 * (3.0 - ui_time_delta * ui_widget_height_val * ui_widget_height_val);
      float_value = ui_time_delta * float_value;
      ui_time_delta = ui_time_delta * ui_rotation_angle_value;
      ui_stack_small_data_buffer = CONCAT44(float_value,ui_time_delta);
      if (ABS(ui_time_delta * ui_callback[UI_OFFSET_5E] + float_value * ui_callback[UI_OFFSET_5F]) <= 0.999) {
        ui_rotation_angle_value = ui_callback[UI_OFFSET_55] - ui_callback[UI_OFFSET_56];
        float_value = (((ui_callback[UI_OFFSET_58] + ui_callback[UI_OFFSET_57] + ui_callback[UI_OFFSET_5B]) - ui_callback[UI_OFFSET_59]) -
                 ui_callback[UI_OFFSET_5A]) - ui_callback[UI_OFFSET_5C];
        ui_time_delta = ui_rotation_angle_value * ui_rotation_angle_value + float_value * float_value;
        ui_time_delta = (float)(ui_time_delta <= 1.1754944e-38) * 1.1754944e-38 + ui_time_delta;
        ui_input_data_buffer = rsqrtss(ZEXT416((uint)ui_time_delta),ZEXT416((uint)ui_time_delta));
        ui_widget_height_val = ui_input_data_buffer._data_offset_;
        float_value = ui_stack_float_144 * 8.0;
        ui_time_delta = ui_widget_height_val * 0.5 * (3.0 - ui_time_delta * ui_widget_height_val * ui_widget_height_val);
        ui_stack_small_data_buffer = CONCAT44(ui_time_delta * ui_rotation_angle_value * float_value + (1.0 - float_value) * ui_callback[UI_OFFSET_5F],
                              ui_time_delta * float_value * float_value + (1.0 - float_value) * ui_callback[UI_OFFSET_5E]);
        *(uint64_t *)(ui_callback + UI_OFFSET_5E) = ui_stack_small_data_buffer;
        ui_time_delta = ui_callback[UI_OFFSET_5F];
        ui_widget_height_val = ui_callback[UI_OFFSET_5E];
        float_value = ui_widget_height_val * ui_widget_height_val + ui_time_delta * ui_time_delta;
        ui_input_data_buffer = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
        ui_rotation_angle_value = ui_input_data_buffer._data_offset_;
        float_value = ui_rotation_angle_value * 0.5 * (3.0 - float_value * ui_rotation_angle_value * ui_rotation_angle_value);
        ui_callback[UI_OFFSET_5F] = float_value * ui_time_delta;
        ui_callback[UI_OFFSET_5E] = float_value * ui_widget_height_val;
      }
      else {
        *(uint64_t *)(ui_callback + UI_OFFSET_5E) = ui_stack_small_data_buffer;
      }
      ui_stack_event_handler_ptr = UI_ANIMATION_HANDLER_12;
      ui_stack_float_110 = ui_z_depth_value;
      ui_stack_float_fc = ui_stack_float_11c;
      ui_stack_float_f4 = ui_stack_float_124;
      ui_stack_float_f0 = ui_stack_float_124;
      RenderUIComponent(ui_stack_temp_e8 ^ (ulonglong)ui_stack_array);
    }
  } while( true );
}

/**
 * 处理UI小部件交互事件
 * 功能：处理用户与小部件的交互事件，如点击、拖拽等
 * 参数：
 *   - ui_callback: 事件回调函数指针
 *   - ui_event_type: 事件类型
 *   - ui_event_data: 事件数据
 *   - ui_event_flags: 事件标志
 * 返回值：无
 */
void ui_system_handle_widget_interaction(longlong ui_callback,float ui_event_type,longlong ui_event_data,char ui_event_flags)

{
  char char_value;
  bool ui_bool_result;
  int ui_result_status;
  uint64_t ui_callback_ptr;
  longlong ui_event_index;
  float *float_ptr;
  longlong ui_event_index;
  uint64_t ui_widget_base;
  float *float_ptr;
  longlong ui_system_register_long;
  int ui_result_status;
  uint64_t ui_system_register;
  ulonglong ui_event_id0;
  longlong ui_register_r11;
  uint64_t ui_system_register;
  float *ui_system_register;
  char char_value_one;
  uint64_t ui_system_register;
  float ui_render_result;
  float ui_widget_width;
  float ui_widget_height;
  float ui_animation_progress;
  float ui_transition_alpha;
  float ui_scale_factor;
  float ui_rotation_angle;
  float ui_opacity_value;
  float ui_z_depth;
  float ui_temp_float;
  uint8_t ui_input_data_buffer [16];
  float ui_distance_delta;
  float ui_temp_float;
  float ui_min_value;
  float ui_max_value;
  float ui_register_a;
  float ui_time_delta;
  uint32_t ui_register_a;
  uint32_t ui_register_b;
  uint32_t ui_register_c;
  uint32_t ui_register_d;
  uint32_t ui_register_a;
  uint32_t ui_register_b;
  uint32_t ui_register_c;
  uint32_t ui_register_d;
  uint32_t ui_register_a;
  uint32_t ui_register_b;
  uint32_t ui_register_c;
  uint32_t ui_register_d;
  uint32_t ui_register_a;
  uint32_t ui_register_b;
  uint32_t ui_register_c;
  uint32_t ui_register_d;
  char charuiui_stack_var_var;
  float uiAnimationSpeed;
  float ui_element_width;
  float ui_stack_coordinate_x;
  float ui_stack_float_temp_value;
  float ui_mouse_y;
  float ui_mouse_x;
  float ui_stack_float_temp_value;
  float ui_stack_coordinate_x;
  uint64_t ui_stack_temp_unsigned_value;
  float ui_stack_coordinate_x;
  float ui_stack_float_temp_value;
  float ui_stack_coordinate_x;
  float ui_stack_float_array_60e8 [6200];
  uint64_t ui_stack_temp_value;
  
  *(uint64_t *)(ui_register_r11 + UI_EVENT_FLAG_OFFSET) = ui_widget_base;
  *(uint64_t *)(ui_register_r11 + -UI_OFFSET_32) = ui_system_register;
  *(uint64_t *)(ui_register_r11 + -UI_CALLBACK_HANDLER_OFFSET) = ui_system_register;
  *(uint64_t *)(ui_register_r11 + -UI_MEMORY_ALLOC_SIZE) = ui_system_register;
  ui_result_status = 0;
  *(uint64_t *)(ui_register_r11 + -UI_MEMORY_DEALLOC_OFFSET) = ui_system_register;
  *(uint32_t *)(ui_register_r11 + -UI_OFFSET_152) = ui_register_a;
  *(uint32_t *)(ui_register_r11 + -0x94) = ui_register_b;
  *(uint32_t *)(ui_register_r11 + -UI_WIDGET_BASE_OFFSET) = ui_register_c;
  *(uint32_t *)(ui_register_r11 + -0x8c) = ui_register_d;
  *(uint32_t *)(ui_register_r11 + -UI_OFFSET_168) = ui_register_a;
  *(uint32_t *)(ui_register_r11 + -UI_TEMP_VALUE_OFFSET) = ui_register_b;
  *(uint32_t *)(ui_register_r11 + -UI_OFFSET_160) = ui_register_c;
  *(uint32_t *)(ui_register_r11 + -UI_EVENT_ID_OFFSET) = ui_register_d;
  *(uint32_t *)(ui_register_r11 + -UI_OFFSET_184) = ui_register_a;
  *(uint32_t *)(ui_register_r11 + -0xb4) = ui_register_b;
  *(uint32_t *)(ui_register_r11 + -UI_WIDGET_STOP_CALLBACK_OFFSET) = ui_register_c;
  *(uint32_t *)(ui_register_r11 + -UI_OFFSET_172) = ui_register_d;
  *(uint32_t *)(ui_register_r11 + -UI_SHUFFLE_MASK_D8) = ui_register_a;
  *(uint32_t *)(ui_register_r11 + -0xd4) = ui_register_b;
  *(uint32_t *)(ui_register_r11 + -0xd0) = ui_register_c;
  *(uint32_t *)(ui_register_r11 + -0xcc) = ui_register_d;
  charuiui_stack_var_var = ui_event_flags;
  uiAnimationSpeed = ui_event_type;
  ui_stack_temp_unsigned_value = ui_callback_ptr;
  if (0 < *(int *)(ui_callback + UI_WIDGET_CREATE_CALLBACK_OFFSET)) {
    float_ptr = (float *)(ui_callback + UI_SIGNATURE_PART6);
    float_ptr = float_ptr;
    ui_result_status = ui_result_status;
    do {
      ui_rotation_angle_value = float_ptr[1];
      ui_widget_width_val = *float_ptr;
      if (ui_rotation_angle_value <= ui_widget_width_val) {
        ui_widget_width_val = ui_widget_width_val - ui_event_type * ui_render_result;
        if (ui_widget_width_val <= ui_rotation_angle_value) {
          ui_widget_width_val = ui_rotation_angle_value;
        }
      }
      else {
        ui_widget_width_val = ui_event_type * ui_render_result + ui_widget_width_val;
        if (ui_rotation_angle_value <= ui_widget_width_val) {
          ui_widget_width_val = ui_rotation_angle_value;
        }
      }
      *float_ptr = ui_widget_width_val;
      ui_stack_temp_value = UI_ANIMATION_HANDLER_1;
      ui_system_update_widget_animation_frame(*(uint64_t *)(float_ptr + UI_WIDGET_ANIMATION_OFFSET_0X495),ui_callback + UI_SYSTEM_REGISTER_OFFSET_0X6150);
      if ((*(char *)(float_ptr + UI_COMPONENT_STATE_OFFSET_4AF) == UI_CHAR_NULL) && (*(char *)(float_ptr + UI_TIME_DELTA_OFFSETe) != UI_CHAR_NULL)) {
        *(uint8_t *)(float_ptr + UI_COMPONENT_STATE_OFFSET_4AF) = 1;
      }
      if ((*(char *)(float_ptr + UI_TIME_DELTA_OFFSET8) == UI_CHAR_NULL) && (*(char *)(float_ptr + UI_COMPONENT_STATE_OFFSET_4D4) != UI_CHAR_NULL)) {
        *(uint8_t *)(float_ptr + UI_TIME_DELTA_OFFSET8) = 1;
      }
      ui_register_a = ui_register_a + *float_ptr;
      float_ptr = float_ptr + UI_COMPONENT_DATA_END_OFFSET;
      ui_result_status = ui_result_status + 1;
    } while (ui_result_status < (int)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS]);
    if (((ui_min_value < ui_register_a) && (ui_register_a != ui_max_value)) &&
       (0 < (int)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS])) {
      do {
        ui_result_status = ui_result_status + 1;
        *float_ptr = (ui_max_value / ui_register_a) * *float_ptr;
        float_ptr = float_ptr + UI_COMPONENT_DATA_END_OFFSET;
      } while (ui_result_status < (int)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS]);
    }
  }
  char_value_one = charuiui_stack_var_var;
  ui_stack_temp_value = UI_ANIMATION_HANDLER_2;
  ui_system_set_widget_selection();
  if (((ui_min_value == ui_system_register[4]) && (ui_min_value == ui_system_register[5])) &&
     (0.25 < ui_system_register[2] * ui_system_register[2] + ui_system_register[3] * ui_system_register[3])) {
    *(uint64_t *)(ui_system_register + UI_OFFSET_REGISTER_POSITIVE_4) = *(uint64_t *)(ui_system_register + 2);
  }
  if (ui_system_register[8] != ui_min_value) {
    ui_stack_temp_value = UI_ANIMATION_HANDLER_3;
    ProcessUIRenderCommand(-ui_system_register[8]);
  }
  ui_stack_coordinate_x = (float)((ulonglong)*(uint64_t *)(ui_system_register + UI_OFFSET_REGISTER_POSITIVE_4) >> UI_OFFSET_32);
  ui_element_width = (float)*(uint64_t *)(ui_system_register + UI_OFFSET_REGISTER_POSITIVE_4);
  ui_mouse_x = (float)((ulonglong)*(uint64_t *)(ui_system_register + 2) >> UI_OFFSET_32);
  ui_mouse_y = (float)*(uint64_t *)(ui_system_register + 2);
  ui_rotation_angle_value = ui_system_register[UI_OFFSET_5D];
  if (((ui_system_register[UI_EVENT_FLAG_OFFSET] == ui_min_value) || (ui_system_register[UI_EVENT_FLAG_OFFSET] == 0.5)) || (ui_rotation_angle_value <= ui_min_value))
  {
    ui_bool_result = false;
  }
  else {
    ui_bool_result = true;
  }
  ui_stack_temp_value = UI_ANIMATION_HANDLER_4;
  ui_widget_width_val = (float)atan2f(*(uint *)(*(longlong *)(ui_event_data + UI_EVENT_FLAG_OFFSET) + UI_STACK_SIZE_128) ^ UI_STACK_SIZE_128000000,
                         *(uint32_t *)(*(longlong *)(ui_event_data + UI_EVENT_FLAG_OFFSET) + UI_WIDGET_ITEM_SIZE));
  ui_widget_width_val = ui_widget_width_val + ui_system_register[6];
  ui_system_register[ELEVEN_VALUE] = ui_widget_width_val;
  if (ui_widget_width_val <= 3.1415927) {
    if (ui_widget_width_val < -3.1415927) {
      ui_widget_width_val = ui_widget_width_val + 6.2831855;
      goto UI_LABEL_DIALOG_RENDER_START;
    }
  }
  else {
    ui_widget_width_val = ui_widget_width_val - 6.2831855;
UI_LABEL_DIALOG_RENDER_START:
    ui_system_register[ELEVEN_VALUE] = ui_widget_width_val;
  }
  ui_widget_width_val = ui_system_register[UI_SNAPSHOT_CREATE_FLAGS];
  ui_event_index = (longlong)(int)ui_widget_width_val;
  if (0 < (int)ui_widget_width_val) {
    ui_transition_alpha_value = ui_min_value;
    if (*(char *)(ui_event_index * UI_RESOURCE_TYPE_CONFIG58 + UI_COMPONENT_CONFIG_OFFSET + (longlong)ui_system_register) != UI_CHAR_NULL) {
      ui_transition_alpha_value = ui_system_register[ui_event_index * 0x4d6 + UI_NETWORK_RESOURCE_TYPE] * 0.05;
    }
    if ((ui_transition_alpha_value + ui_system_register[ui_event_index * 0x4d6 + ui_component_angle_offset] < ui_system_register[ui_event_index * 0x4d6 + UI_RESOURCE_LOAD_TYPE]) ||
       (*(char *)(ui_system_register + ui_event_index * 0x4d6 + UI_RESOURCE_TYPE_CONFIG) != UI_CHAR_NULL)) {
      ui_system_register[12] = ui_system_register[ELEVEN_VALUE];
      ui_widget_width_val = ui_system_register[UI_SNAPSHOT_CREATE_FLAGS];
    }
    ui_event_index = (longlong)(int)ui_widget_width_val;
    ui_transition_alpha_value = ui_min_value;
    if (*(char *)(ui_event_index * UI_RESOURCE_TYPE_CONFIG58 + UI_ANIMATION_CONFIG_OFFSET + (longlong)ui_system_register) != UI_CHAR_NULL) {
      ui_transition_alpha_value = ui_system_register[ui_event_index * 0x4d6 + UI_SNAPSHOT_CREATE_FLAGS] * 0.05;
    }
    if ((ui_transition_alpha_value + ui_system_register[ui_event_index * 0x4d6 + UI_SHIFT_AMOUNT_20] < ui_system_register[ui_event_index * 0x4d6 + UI_RENDER_RESOURCE_TYPE]) ||
       (*(char *)(ui_system_register + ui_event_index * 0x4d6 + UI_WIDGET_RESOURCE_TYPE) != UI_CHAR_NULL)) {
      ui_system_register[THIRTEEN_VALUE] = ui_system_register[ELEVEN_VALUE];
      ui_widget_width_val = ui_system_register[UI_SNAPSHOT_CREATE_FLAGS];
    }
  }
  if ((((((int)ui_widget_width_val < 1) || (ui_min_value != ui_system_register[2])) || (ui_min_value != ui_system_register[3]))
      || (ui_min_value == ui_system_register[6])) ||
     ((ABS(ui_system_register[ELEVEN_VALUE] - ui_system_register[12]) < 0.5 && (ABS(ui_system_register[ELEVEN_VALUE] - ui_system_register[THIRTEEN_VALUE]) < 0.5))))
  {
    if (((ui_bool_result) && ((ui_min_value == ui_system_register[2] && (ui_min_value == ui_system_register[3])))) ||
       ((ui_system_register[UI_SHIFT_AMOUNT_20] = 0.0, ui_stack_float_temp_value = ui_min_value,
        ui_min_value <= ui_element_width &&
        (ui_stack_float_temp_value = ui_max_value, ui_element_width <= ui_min_value))))
    goto UI_LABEL_DIALOG_RENDER_END;
  }
  else {
    ui_bool_result = true;
    ui_system_register[UI_SHIFT_AMOUNT_20] = 1.0;
UI_LABEL_DIALOG_RENDER_END:
    if (((char_value_one == UI_CHAR_NULL) ||
        (ui_stack_float_temp_value = ui_max_value,
        ui_max_value < ui_system_register[UI_OFFSET_54] || ui_max_value == ui_system_register[UI_OFFSET_54])) &&
       (ui_stack_float_temp_value = ui_max_value, *(char *)(ui_system_register + UI_RENDER_RESOURCE_TYPE) != UI_CHAR_NULL)) {
      ui_stack_float_temp_value = ui_min_value;
    }
  }
  if ((ui_rotation_angle_value <= ui_min_value) && (ui_min_value < ui_system_register[UI_SHIFT_AMOUNT_20])) {
    ui_rotation_angle_value = ui_system_register[ELEVEN_VALUE] - ui_system_register[12];
    ui_widget_width_val = ui_system_register[ELEVEN_VALUE] - ui_system_register[THIRTEEN_VALUE];
    if (ABS(ui_rotation_angle_value) <= ABS(ui_widget_width_val)) {
      ui_rotation_angle_value = ui_widget_width_val;
    }
    if (ui_rotation_angle_value <= 3.1415927) {
      if (ui_rotation_angle_value < -3.1415927) {
        ui_rotation_angle_value = ui_rotation_angle_value + 6.2831855;
      }
    }
    else {
      ui_rotation_angle_value = ui_rotation_angle_value + -6.2831855;
    }
    ui_widget_width_val = ui_min_value;
    if (ui_min_value < ui_rotation_angle_value) {
      ui_widget_width_val = 0.5;
    }
    ui_system_register[UI_EVENT_FLAG_OFFSET] = ui_widget_width_val;
  }
  if ((ui_bool_result) && (0 < (int)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS])) {
    float_ptr = ui_system_register + UI_GUARD_CHECK_TYPE;
    ui_event_id0 = (ulonglong)(uint)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS];
    ui_rotation_angle_value = ui_min_value;
    do {
      float_ptr = float_ptr + UI_WIDGET_ANIMATION_OFFSET_0X495;
      ui_widget_width_val = *float_ptr;
      float_ptr = float_ptr + UI_COMPONENT_DATA_END_OFFSET;
      ui_rotation_angle_value = ui_rotation_angle_value + *(float *)(*(longlong *)(*(longlong *)float_ptr + UI_OFFSET_72) + UI_FLAG_BYTE_8) * ui_widget_width_val;
      ui_event_id0 = ui_event_id0 - 1;
    } while (ui_event_id0 != 0);
    ui_widget_width_val = ui_system_register[UI_EVENT_FLAG_OFFSET];
    ui_rotation_angle_value = (uiAnimationSpeed * ui_system_register[7]) / ui_rotation_angle_value + ui_widget_width_val;
    ui_system_register[UI_EVENT_FLAG_OFFSET] = ui_rotation_angle_value;
    if (ui_rotation_angle_value <= ui_max_value) {
      if ((((ui_widget_width_val <= 0.5) && (0.5 < ui_rotation_angle_value)) && (ABS(ui_system_register[ELEVEN_VALUE] - ui_system_register[12]) < 0.5)) &&
         (ABS(ui_system_register[ELEVEN_VALUE] - ui_system_register[THIRTEEN_VALUE]) < 0.5)) {
        ui_system_register[UI_EVENT_FLAG_OFFSET] = 0.5;
      }
    }
    else if ((0.5 <= ABS(ui_system_register[ELEVEN_VALUE] - ui_system_register[12])) ||
            (0.5 <= ABS(ui_system_register[ELEVEN_VALUE] - ui_system_register[THIRTEEN_VALUE]))) {
      ui_system_register[UI_EVENT_FLAG_OFFSET] = ui_rotation_angle_value - ui_max_value;
    }
    else {
      ui_system_register[UI_EVENT_FLAG_OFFSET] = ui_min_value;
    }
  }
  char_value_one = *(char *)(ui_system_register + UI_OFFSET_160);
  char_value = *(char *)(ui_system_register + UI_OFFSET_168);
  if ((((char_value_one != UI_CHAR_NULL) || (char_value != UI_CHAR_NULL)) &&
      ((ui_min_value != ui_system_register[2] || (ui_min_value != ui_system_register[3])))) ||
     (((ui_min_value != ui_system_register[4] || (ui_min_value != ui_system_register[5])) ||
      (ui_rotation_angle_value = ui_max_value, ui_min_value < ui_system_register[UI_SHIFT_AMOUNT_20])))) {
    ui_rotation_angle_value = ui_min_value;
  }
  ui_opacity_value = uiAnimationSpeed + uiAnimationSpeed;
  ui_transition_alpha_value = *ui_system_register - ui_system_register[1];
  ui_widget_width_val = ui_transition_alpha_value;
  if ((ui_opacity_value < ABS(ui_transition_alpha_value)) && (ui_widget_width_val = ui_opacity_value, ui_transition_alpha_value < ui_min_value)) {
    ui_widget_width_val = -ui_opacity_value;
  }
  ui_system_register[1] = ui_system_register[1] + ui_widget_width_val;
  ui_stack_temp_value = UI_ANIMATION_HANDLER_5;
  ui_transition_alpha_value = (float)ui_system_validate_widget_focus(ABS(ui_transition_alpha_value),ui_event_data,ui_stack_temp_unsigned_value);
  ui_widget_width_val = uiAnimationSpeed;
  if (ui_transition_alpha_value <= 0.75) {
    ui_transition_alpha_value = 0.75;
  }
  ui_opacity_value = ui_transition_alpha_value - ui_system_register[UI_OFFSET_22];
  if (0.001 <= ABS(ui_opacity_value)) {
    ui_transition_alpha_value = ui_opacity_value * uiAnimationSpeed + ui_system_register[UI_OFFSET_22];
  }
  ui_system_register[UI_OFFSET_22] = ui_transition_alpha_value;
  if ((ui_register_a <= ui_min_value) || (ui_system_register[UI_OFFSET_54] <= ui_min_value)) {
    ui_system_register[UI_MAX_EVENT_FLAGS] = 0.0;
  }
  else {
    ui_transition_alpha_value = ui_min_value;
    if (0 < (int)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS]) {
      float_ptr = ui_system_register + UI_GUARD_CHECK_TYPE;
      ui_event_id0 = (ulonglong)(uint)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS];
      do {
        float_ptr = float_ptr + UI_WIDGET_ANIMATION_OFFSET_0X495;
        ui_opacity_value = *float_ptr;
        float_ptr = float_ptr + UI_COMPONENT_DATA_END_OFFSET;
        ui_transition_alpha_value = ui_transition_alpha_value + *(float *)(**(longlong **)float_ptr + UI_FLAG_BYTE_8) * ui_opacity_value;
        ui_event_id0 = ui_event_id0 - 1;
      } while (ui_event_id0 != 0);
    }
    ui_stack_temp_value = UI_ANIMATION_HANDLER_6;
    ui_transition_alpha_value = (float)fmodf(uiAnimationSpeed / ui_transition_alpha_value + ui_system_register[UI_MAX_EVENT_FLAGS]);
    ui_system_register[UI_MAX_EVENT_FLAGS] = ui_transition_alpha_value;
  }
  ui_opacity_value = ui_system_register[UI_SNAPSHOT_CREATE_FLAGS];
  ui_result_status = 0;
  ui_time_delta = ui_min_value;
  if (0 < (int)ui_opacity_value) {
    float_ptr = ui_system_register + UI_GUARD_CHECK_TYPE;
    do {
      ui_stack_temp_value = UI_ANIMATION_HANDLER_7;
      ui_transition_alpha_value = (float)ui_system_remove_widget_focus(ui_transition_alpha_value,ui_result_status);
      ui_transition_alpha_value = ui_transition_alpha_value * *float_ptr;
      ui_result_status = ui_result_status + 1;
      float_ptr = float_ptr + UI_COMPONENT_DATA_END_OFFSET;
      ui_time_delta = ui_time_delta + ui_transition_alpha_value;
    } while (ui_result_status < (int)ui_opacity_value);
    char_value_one = *(char *)(ui_system_register + UI_OFFSET_160);
  }
  if (ui_rotation_angle_value < ui_max_value) {
    if (ui_system_register[UI_OFFSET_54] <= ui_max_value && ui_max_value != ui_system_register[UI_OFFSET_54]) {
      ui_widget_width_val = ui_time_delta * ui_widget_width_val + ui_system_register[ui_component_angle_offset];
      ui_system_register[ui_component_angle_offset] = ui_widget_width_val;
      if (ui_max_value < ui_widget_width_val) {
        ui_system_register[ui_component_angle_offset] = ui_widget_width_val - ui_max_value;
      }
    }
    else if ((int)ui_opacity_value < 1) {
      ui_system_register[ui_component_angle_offset] = ui_min_value;
    }
    else {
      ui_widget_width_val = ui_max_value;
      if (*(char *)(ui_system_register + UI_RENDER_RESOURCE_TYPE) != UI_CHAR_NULL) {
        ui_widget_width_val = -1.0;
      }
      ui_event_index = *(longlong *)(ui_system_register + (longlong)(int)ui_opacity_value * 0x4d6 + -UI_FOCUS_STATE_OFFSET);
      ui_stack_temp_value = UI_ANIMATION_HANDLER_8;
      ui_event_index = ui_system_get_widget_property(*(uint64_t *)(ui_event_index + 8));
      ui_event_index = UI_SHIFT_AMOUNT_20;
      if (ui_min_value <= (ui_mouse_x - ABS(ui_mouse_y)) * ui_widget_width_val) {
        ui_event_index = UI_SNAPSHOT_CREATE_FLAGS;
      }
      ui_widget_width_val = *(float *)(ui_event_index + ui_event_index);
      ui_stack_temp_value = UI_ANIMATION_HANDLER_9;
      ui_system_get_widget_property(*(uint64_t *)(ui_event_index + 8));
      ui_system_register[ui_component_angle_offset] = ui_widget_width_val;
    }
  }
  ui_transition_alpha_value = ui_stack_coordinate_x * ui_stack_coordinate_x +
           ui_element_width * ui_element_width;
  ui_transition_alpha_value = (float)(ui_transition_alpha_value <= 1.1754944e-38) * 1.1754944e-38 + ui_transition_alpha_value;
  ui_input_data_buffer = rsqrtss(ZEXT416((uint)ui_transition_alpha_value),ZEXT416((uint)ui_transition_alpha_value));
  ui_opacity_value = ui_input_data_buffer._data_offset_;
  ui_widget_width_val = ui_max_value;
  if (ui_stack_coordinate_x * ui_opacity_value * 0.5 * (3.0 - ui_transition_alpha_value * ui_opacity_value * ui_opacity_value) < -0.2) {
    ui_widget_width_val = ui_min_value;
  }
  ui_system_register[UI_RESOURCE_TYPE_CONFIG] = ui_widget_width_val;
  ui_transition_alpha_value = ui_mouse_y;
  ui_opacity_value = ui_mouse_x;
  if ((ui_element_width != ui_min_value) || (ui_stack_coordinate_x != ui_min_value)) {
    if (ui_min_value <= ui_mouse_y * ui_element_width) {
      if (ABS(ui_mouse_y) < ABS(ui_element_width)) {
        ui_transition_alpha_value = ui_element_width;
      }
    }
    else {
      ui_transition_alpha_value = ui_mouse_y + ui_element_width;
    }
    if (ui_min_value <= ui_stack_coordinate_x * ui_mouse_x) {
      if (ABS(ui_mouse_x) < ABS(ui_stack_coordinate_x)) {
        ui_opacity_value = ui_stack_coordinate_x;
      }
    }
    else {
      ui_opacity_value = ui_mouse_x + ui_stack_coordinate_x;
    }
  }
  ui_stack_temp_value = UI_ANIMATION_HANDLER_10;
  ui_transition_alpha_value = (float)atan2f(-ui_transition_alpha_value,ui_opacity_value);
  ui_transition_alpha_value = ABS(ui_transition_alpha_value);
  if (1.5707964 < ui_transition_alpha_value) {
    ui_transition_alpha_value = 3.1415927 - ui_transition_alpha_value;
  }
  ui_transition_alpha_value = ui_transition_alpha_value * 0.63661975;
  ui_scale_factor_val = (ui_max_value - *(float *)(ui_system_register + UI_RENDER_CONTEXT_OFFSET)) * 0.3;
  ui_opacity_value = ui_min_value;
  if ((ui_scale_factor_val + 0.05 <= ui_transition_alpha_value) && (ui_opacity_value = ui_transition_alpha_value, 0.95 - ui_scale_factor_val < ui_transition_alpha_value)) {
    ui_opacity_value = ui_max_value;
  }
  ui_scale_factor_val = ui_opacity_value - ui_system_register[UI_LAYOUT_RESOURCE_TYPE];
  ui_distance_delta = ABS(ui_scale_factor_val);
  ui_transition_alpha_value = ui_opacity_value;
  if (0.001 <= ui_distance_delta) {
    ui_widget_height_val = uiAnimationSpeed;
    if (ui_scale_factor_val < ui_min_value) {
      ui_widget_height_val = -uiAnimationSpeed;
    }
    ui_scale_factor_val = 0.1;
    if ((0.1 <= ui_distance_delta) && (ui_scale_factor_val = ui_distance_delta, 0.5 <= ui_distance_delta)) {
      ui_scale_factor_val = 0.5;
    }
    ui_scale_factor_val = ui_widget_height_val * ui_scale_factor_val * 12.0;
    if (ABS(ui_scale_factor_val) <= ui_distance_delta) {
      ui_transition_alpha_value = ui_system_register[UI_LAYOUT_RESOURCE_TYPE] + ui_scale_factor_val;
    }
  }
  ui_system_register[UI_LAYOUT_RESOURCE_TYPE] = ui_transition_alpha_value;
  if ((((ui_mouse_x <= -0.1) || (char_value == UI_CHAR_NULL)) || (char_value_one != UI_CHAR_NULL)) ||
     (ui_stack_coordinate_x <= -0.1)) {
UI_LABEL_DIALOG_EVENT_HANDLE:
    if ((ui_system_register[UI_RESOURCE_LOAD_TYPE] <= ui_min_value) || (ui_max_value <= ui_system_register[UI_RESOURCE_LOAD_TYPE])) {
      ui_system_register[UI_RESOURCE_LOAD_TYPE] = 0.0;
      ui_system_register[UI_NETWORK_RESOURCE_TYPE] = -1.0;
      goto UI_LABEL_DIALOG_UPDATE_START;
    }
  }
  else {
    ui_transition_alpha_value = ui_mouse_x * ui_mouse_x +
             ui_mouse_x * ui_mouse_x;
    ui_transition_alpha_value = ui_transition_alpha_value + ui_transition_alpha_value;
    if (ui_transition_alpha_value <= ui_max_value) {
      ui_transition_alpha_value = ui_max_value;
    }
    if (-ui_transition_alpha_value <= ui_mouse_y * ui_element_width) goto UI_LABEL_DIALOG_EVENT_HANDLE;
  }
  ui_transition_alpha_value = ui_system_register[UI_RESOURCE_LOAD_TYPE];
  if (ui_transition_alpha_value == ui_min_value) {
    *(bool *)((longlong)ui_system_register + 0x5d) = ui_element_width < ui_min_value;
  }
  ui_transition_alpha_value = (*(float *)(*(longlong *)
                        (*(longlong *)(ui_system_register + (longlong)(int)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS] * 0x4d6 + -UI_FOCUS_STATE_OFFSET) +
                        8) + UI_FLAG_BYTE_8) /
           *(float *)(*(longlong *)
                       (*(longlong *)(ui_system_register + (longlong)(int)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS] * 0x4d6 + -UI_FOCUS_STATE_OFFSET) +
                       UI_MEMORY_DEALLOC_OFFSET) + UI_FLAG_BYTE_8)) * ui_time_delta * uiAnimationSpeed + ui_transition_alpha_value;
  if (ui_max_value <= ui_transition_alpha_value) {
    ui_transition_alpha_value = ui_max_value;
  }
  ui_system_register[UI_RESOURCE_LOAD_TYPE] = ui_transition_alpha_value;
  if (ui_system_register[UI_NETWORK_RESOURCE_TYPE] <= ui_min_value && ui_min_value != ui_system_register[UI_NETWORK_RESOURCE_TYPE]) {
    ui_time_delta = ui_max_value;
    if (*(char *)((longlong)ui_system_register + 0x5d) != UI_CHAR_NULL) {
      ui_time_delta = -1.0;
    }
    if (ui_min_value <= ui_time_delta * ui_element_width) {
      ui_time_delta = ui_transition_alpha_value;
      if (*(char *)((longlong)ui_system_register + 0x5d) == UI_CHAR_NULL) {
        ui_stack_temp_value = UI_ANIMATION_HANDLER_11;
        ui_time_delta = (float)fmodf(ui_transition_alpha_value + 0.5);
      }
      ui_time_delta = ui_time_delta - ui_system_register[ui_component_angle_offset];
      if (ui_time_delta <= 0.5) {
        if (ui_time_delta < -0.5) {
          ui_time_delta = ui_time_delta + ui_max_value;
        }
      }
      else {
        ui_time_delta = ui_time_delta + -1.0;
      }
      ui_scale_factor_val = ui_transition_alpha_value * ui_transition_alpha_value * ui_transition_alpha_value + uiAnimationSpeed;
      if (ui_max_value <= ui_scale_factor_val) {
        ui_scale_factor_val = ui_max_value;
      }
      ui_transition_alpha_value = ui_scale_factor_val * ui_transition_alpha_value * ui_time_delta + ui_system_register[ui_component_angle_offset];
      ui_system_register[ui_component_angle_offset] = ui_transition_alpha_value;
      if (ui_min_value <= ui_transition_alpha_value) {
        if (ui_max_value <= ui_transition_alpha_value) {
          ui_system_register[ui_component_angle_offset] = ui_transition_alpha_value - ui_max_value;
        }
      }
      else {
        ui_system_register[ui_component_angle_offset] = ui_transition_alpha_value + ui_max_value;
      }
    }
    else {
      ui_system_register[UI_NETWORK_RESOURCE_TYPE] = ui_transition_alpha_value + 0.25;
    }
  }
UI_LABEL_DIALOG_UPDATE_START:
  ui_transition_alpha_value = ui_system_register[UI_SHIFT_AMOUNT_20];
  ui_stack_float_temp_value = (ui_max_value - ui_transition_alpha_value) * (ui_max_value - ui_rotation_angle_value);
  ui_scale_factor_val = (ui_max_value - ui_widget_width_val) * ui_stack_float_temp_value;
  ui_stack_coordinate_x = (ui_max_value - ui_opacity_value) * ui_widget_width_val * ui_stack_float_temp_value;
  ui_time_delta = ui_widget_width_val * ui_stack_float_temp_value * ui_opacity_value;
  ui_distance_delta = ui_scale_factor_val * ui_opacity_value;
  ui_stack_float_temp_value = ui_stack_float_temp_value * ui_opacity_value;
  ui_stack_float_temp_value = ui_time_delta * ui_stack_float_temp_value;
  *(float *)(ui_system_register + -UI_EVENT_ID_FOURTH_OFFSET) = ui_stack_float_temp_value;
  *(float *)(ui_system_register + -UI_OFFSET_120) = ui_stack_float_temp_value;
  *(float *)(ui_system_register + -UI_SIGNATURE_PART4) = (ui_max_value - ui_rotation_angle_value) * ui_transition_alpha_value;
  ui_widget_width_val = (ui_max_value - ui_stack_float_temp_value) * ui_distance_delta;
  ui_stack_coordinate_x = (ui_max_value - ui_stack_float_temp_value) * ui_time_delta;
  ui_stack_temp_unsigned_value = CONCAT44(ui_stack_temp_unsigned_value._data_size_,ui_widget_width_val);
  *(float *)(ui_system_register + -UI_STACK_SIZE_128) = ui_widget_width_val;
  if ((charuiui_stack_var_var == UI_CHAR_NULL) || (ui_min_value < ui_stack_float_temp_value)) {
    if (ui_transition_alpha_value <= ui_min_value) {
      ui_transition_alpha_value = 3.0;
    }
    else {
      ui_transition_alpha_value = 5.0;
    }
  }
  else {
    ui_transition_alpha_value = 2.0;
  }
  ui_widget_height_val = ui_system_register[UI_OFFSET_4A];
  if (ui_rotation_angle_value <= ui_widget_height_val) {
    ui_widget_height_val = ui_widget_height_val - ui_transition_alpha_value * uiAnimationSpeed;
    if (ui_widget_height_val <= ui_rotation_angle_value) {
      ui_widget_height_val = ui_rotation_angle_value;
    }
  }
  else {
    ui_widget_height_val = ui_widget_height_val + ui_transition_alpha_value * uiAnimationSpeed;
    if (ui_rotation_angle_value <= ui_widget_height_val) {
      ui_widget_height_val = ui_rotation_angle_value;
    }
  }
  ui_system_register[UI_OFFSET_4A] = ui_widget_height_val;
  ui_system_register[UI_OFFSET_54] = ui_widget_height_val;
  ui_rotation_angle_value = ui_system_register[UI_RESOURCE_LOAD_TYPE];
  if (0.2 <= ui_rotation_angle_value) {
    ui_transition_alpha_value = ui_max_value;
    if (0.7 < ui_rotation_angle_value) {
      ui_transition_alpha_value = (ui_max_value - ui_rotation_angle_value) * 3.333333;
    }
  }
  else {
    ui_transition_alpha_value = ui_rotation_angle_value * 5.0;
  }
  if (ui_min_value < ui_system_register[UI_NETWORK_RESOURCE_TYPE]) {
    ui_rotation_angle_value = (ui_system_register[UI_NETWORK_RESOURCE_TYPE] - ui_rotation_angle_value) * 4.0;
    if (ui_rotation_angle_value <= ui_min_value) {
      ui_rotation_angle_value = ui_min_value;
    }
    ui_transition_alpha_value = ui_transition_alpha_value * ui_rotation_angle_value;
  }
  float_ptr = ui_system_register + UI_OFFSET_55;
  ui_result_status = 1;
  ui_rotation_angle_value = ui_min_value;
  do {
    ui_widget_height_val = *(float *)(((longlong)ui_stack_float_array_60e8 - (longlong)ui_system_register) + (longlong)float_ptr);
    ui_animation_progress = ui_widget_height_val - float_ptr[-10];
    ui_z_depth_value = ABS(ui_animation_progress);
    if (0.001 <= ui_z_depth_value) {
      float_value = ui_max_value;
      if (ui_animation_progress < ui_min_value) {
        float_value = -1.0;
      }
      if (0.05 <= ui_z_depth_value) {
        if (0.5 <= ui_z_depth_value) {
          ui_z_depth_value = 0.5;
        }
      }
      else {
        ui_z_depth_value = 0.05;
      }
      ui_z_depth_value = ui_z_depth_value * float_value * uiAnimationSpeed * 6.0;
      if (ui_z_depth_value * float_value <= float_value * ui_animation_progress) {
        ui_widget_height_val = float_ptr[-10] + ui_z_depth_value;
      }
    }
    float_ptr[-10] = ui_widget_height_val;
    *float_ptr = ui_widget_height_val;
    if (2 < ui_result_status) {
      if (ui_result_status < 7) {
        ui_animation_progress = ui_max_value - ui_transition_alpha_value;
      }
      else {
        ui_animation_progress = ui_min_value;
        if (ui_result_status == 7) {
          if (*(char *)((longlong)ui_system_register + 0x5d) == UI_CHAR_NULL) {
UI_LABEL_GENERIC_65a5b3:
            ui_animation_progress = ui_transition_alpha_value;
          }
        }
        else {
          if (ui_result_status != 8) goto UI_LABEL_DIALOG_INPUT_VALIDATE;
          if (*(char *)((longlong)ui_system_register + 0x5d) != UI_CHAR_NULL) goto UI_LABEL_GENERIC_65a5b3;
        }
      }
      ui_widget_height_val = ui_animation_progress * ui_widget_height_val;
      *float_ptr = ui_widget_height_val;
    }
UI_LABEL_DIALOG_INPUT_VALIDATE:
    ui_animation_progress = *(float *)((longlong)ui_stack_float_array_60e8 + (4 - (longlong)ui_system_register) + (longlong)float_ptr);
    ui_z_depth_value = ui_animation_progress - float_ptr[-9];
    float_value = ABS(ui_z_depth_value);
    if (0.001 <= float_value) {
      float_value = ui_max_value;
      if (ui_z_depth_value < ui_min_value) {
        float_value = -1.0;
      }
      if (0.05 <= float_value) {
        if (0.5 <= float_value) {
          float_value = 0.5;
        }
      }
      else {
        float_value = 0.05;
      }
      float_value = float_value * float_value * uiAnimationSpeed * 6.0;
      if (float_value * float_value <= float_value * ui_z_depth_value) {
        ui_animation_progress = float_ptr[-9] + float_value;
      }
    }
    ui_result_status = ui_result_status + 1;
    float_ptr[-9] = ui_animation_progress;
    float_ptr[1] = ui_animation_progress;
    if (2 < ui_result_status) {
      if (ui_result_status < 7) {
        ui_z_depth_value = ui_max_value - ui_transition_alpha_value;
      }
      else {
        ui_z_depth_value = ui_min_value;
        if (ui_result_status == 7) {
          if (*(char *)((longlong)ui_system_register + 0x5d) == UI_CHAR_NULL) {
UI_LABEL_GENERIC_65a67b:
            ui_z_depth_value = ui_transition_alpha_value;
          }
        }
        else {
          if (ui_result_status != 8) goto UI_LABEL_DIALOG_CALLBACK_END;
          if (*(char *)((longlong)ui_system_register + 0x5d) != UI_CHAR_NULL) goto UI_LABEL_GENERIC_65a67b;
        }
      }
      ui_animation_progress = ui_z_depth_value * ui_animation_progress;
      float_ptr[1] = ui_animation_progress;
    }
UI_LABEL_DIALOG_CALLBACK_END:
    ui_z_depth_value = *(float *)((longlong)ui_stack_float_array_60e8 + (8 - (longlong)ui_system_register) + (longlong)float_ptr);
    float_value = ui_z_depth_value - float_ptr[-8];
    float_value = ABS(float_value);
    if (0.001 <= float_value) {
      float_value = ui_max_value;
      if (float_value < ui_min_value) {
        float_value = -1.0;
      }
      if (0.05 <= float_value) {
        if (0.5 <= float_value) {
          float_value = 0.5;
        }
      }
      else {
        float_value = 0.05;
      }
      float_value = float_value * float_value * uiAnimationSpeed * 6.0;
      if (float_value * float_value <= float_value * float_value) {
        ui_z_depth_value = float_ptr[-8] + float_value;
      }
    }
    ui_result_status = ui_result_status + 2;
    float_ptr[-8] = ui_z_depth_value;
    float_ptr[2] = ui_z_depth_value;
    if (2 < ui_result_status) {
      if (ui_result_status < 7) {
        float_value = ui_max_value - ui_transition_alpha_value;
      }
      else {
        float_value = ui_min_value;
        if (ui_result_status == 7) {
          if (*(char *)((longlong)ui_system_register + 0x5d) == UI_CHAR_NULL) {
UI_LABEL_GENERIC_65a744:
            float_value = ui_transition_alpha_value;
          }
        }
        else {
          if (ui_result_status != 8) goto UI_LABEL_DIALOG_CLEANUP_END;
          if (*(char *)((longlong)ui_system_register + 0x5d) != UI_CHAR_NULL) goto UI_LABEL_GENERIC_65a744;
        }
      }
      ui_z_depth_value = float_value * ui_z_depth_value;
      float_ptr[2] = ui_z_depth_value;
    }
UI_LABEL_DIALOG_CLEANUP_END:
    ui_result_status = ui_result_status + 3;
    ui_rotation_angle_value = ui_rotation_angle_value + ui_widget_height_val + ui_animation_progress + ui_z_depth_value;
    float_ptr = float_ptr + 3;
    if (9 < ui_result_status) {
      ui_transition_alpha_value = ui_system_register[UI_OFFSET_54];
      ui_transition_alpha_value = ui_max_value - ((ui_transition_alpha_value * 6.0 - 15.0) * ui_transition_alpha_value + 10.0) * ui_transition_alpha_value * ui_transition_alpha_value * ui_transition_alpha_value;
      if (ui_rotation_angle_value != ui_transition_alpha_value) {
        if (ui_rotation_angle_value <= ui_min_value) {
          ui_system_register[UI_OFFSET_54] = 1.0;
        }
        else {
          ui_transition_alpha_value = ui_transition_alpha_value / ui_rotation_angle_value;
          ui_system_register[UI_OFFSET_55] = ui_system_register[UI_OFFSET_55] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_56] = ui_system_register[UI_OFFSET_56] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_57] = ui_system_register[UI_OFFSET_57] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_58] = ui_system_register[UI_OFFSET_58] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_59] = ui_system_register[UI_OFFSET_59] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_5A] = ui_system_register[UI_OFFSET_5A] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_5B] = ui_system_register[UI_OFFSET_5B] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_5C] = ui_system_register[UI_OFFSET_5C] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_5D] = ui_transition_alpha_value * ui_system_register[UI_OFFSET_5D];
        }
      }
      ui_transition_alpha_value = ui_stack_coordinate_x - (ui_max_value - ui_opacity_value) * ui_scale_factor_val;
      ui_opacity_value = ((((ui_distance_delta + ui_time_delta) * ui_stack_float_temp_value + ui_stack_float_temp_value) -
                ui_stack_coordinate_x) - ui_widget_width_val) - ui_stack_float_temp_value;
      ui_rotation_angle_value = ui_transition_alpha_value * ui_transition_alpha_value + ui_opacity_value * ui_opacity_value;
      ui_rotation_angle_value = (float)(ui_rotation_angle_value <= 1.1754944e-38) * 1.1754944e-38 + ui_rotation_angle_value;
      ui_input_data_buffer = rsqrtss(ZEXT416((uint)ui_rotation_angle_value),ZEXT416((uint)ui_rotation_angle_value));
      ui_widget_width_val = ui_input_data_buffer._data_offset_;
      ui_rotation_angle_value = ui_widget_width_val * 0.5 * (3.0 - ui_rotation_angle_value * ui_widget_width_val * ui_widget_width_val);
      ui_transition_alpha_value = ui_rotation_angle_value * ui_transition_alpha_value;
      ui_rotation_angle_value = ui_rotation_angle_value * ui_opacity_value;
      _ui_element_width = CONCAT44(ui_transition_alpha_value,ui_rotation_angle_value);
      if (ABS(ui_rotation_angle_value * ui_system_register[UI_OFFSET_5E] + ui_transition_alpha_value * ui_system_register[UI_OFFSET_5F]) <= 0.999) {
        ui_opacity_value = ui_system_register[UI_OFFSET_55] - ui_system_register[UI_OFFSET_56];
        ui_time_delta = (((ui_system_register[UI_OFFSET_58] + ui_system_register[UI_OFFSET_57] + ui_system_register[UI_OFFSET_5B]) - ui_system_register[UI_OFFSET_59])
                 - ui_system_register[UI_OFFSET_5A]) - ui_system_register[UI_OFFSET_5C];
        ui_rotation_angle_value = ui_opacity_value * ui_opacity_value + ui_time_delta * ui_time_delta;
        ui_rotation_angle_value = (float)(ui_rotation_angle_value <= 1.1754944e-38) * 1.1754944e-38 + ui_rotation_angle_value;
        ui_input_data_buffer = rsqrtss(ZEXT416((uint)ui_rotation_angle_value),ZEXT416((uint)ui_rotation_angle_value));
        ui_widget_width_val = ui_input_data_buffer._data_offset_;
        ui_transition_alpha_value = uiAnimationSpeed * 8.0;
        ui_rotation_angle_value = ui_widget_width_val * 0.5 * (3.0 - ui_rotation_angle_value * ui_widget_width_val * ui_widget_width_val);
        _ui_element_width =
             CONCAT44(ui_rotation_angle_value * ui_opacity_value * ui_transition_alpha_value + (ui_max_value - ui_transition_alpha_value) * ui_system_register[UI_OFFSET_5F],
                      ui_rotation_angle_value * ui_time_delta * ui_transition_alpha_value + (ui_max_value - ui_transition_alpha_value) * ui_system_register[UI_OFFSET_5E]);
        *(uint64_t *)(ui_system_register + UI_OFFSET_5E) = _ui_element_width;
        ui_rotation_angle_value = ui_system_register[UI_OFFSET_5F];
        ui_widget_width_val = ui_system_register[UI_OFFSET_5E];
        ui_transition_alpha_value = ui_widget_width_val * ui_widget_width_val + ui_rotation_angle_value * ui_rotation_angle_value;
        ui_input_data_buffer = rsqrtss(ZEXT416((uint)ui_transition_alpha_value),ZEXT416((uint)ui_transition_alpha_value));
        ui_opacity_value = ui_input_data_buffer._data_offset_;
        ui_transition_alpha_value = ui_opacity_value * 0.5 * (3.0 - ui_transition_alpha_value * ui_opacity_value * ui_opacity_value);
        ui_system_register[UI_OFFSET_5F] = ui_transition_alpha_value * ui_rotation_angle_value;
        ui_system_register[UI_OFFSET_5E] = ui_transition_alpha_value * ui_widget_width_val;
      }
      else {
        *(uint64_t *)(ui_system_register + UI_OFFSET_5E) = _ui_element_width;
      }
      ui_stack_temp_value = UI_ANIMATION_HANDLER_12;
      ui_stack_coordinate_x = ui_stack_coordinate_x;
      RenderUIComponent(*(ulonglong *)(ui_system_register + -UI_WIDGET_DATA_OFFSET) ^ (ulonglong)&ui_stack_base_address);
    }
  } while( true );
}

void ui_system_process_widget_click(float ui_callback,float ui_event_type,longlong ui_event_data,char ui_event_flags)

{
  char char_value;
  bool ui_bool_result;
  int ui_result_status;
  uint64_t ui_callback_ptr;
  longlong ui_event_index;
  float *float_ptr;
  longlong in_RCX;
  longlong ui_event_index;
  float *float_ptr;
  longlong ui_system_register_long;
  int ui_result_status;
  uint64_t ui_system_register;
  ulonglong ui_event_id0;
  longlong ui_register_r11;
  uint64_t ui_system_register;
  float *ui_system_register;
  char char_value_one;
  uint64_t ui_system_register;
  float ui_widget_width;
  float ui_widget_height;
  float ui_animation_progress;
  float ui_transition_alpha;
  float ui_scale_factor;
  float ui_rotation_angle;
  float ui_opacity_value;
  float ui_z_depth;
  float ui_temp_float;
  uint8_t ui_input_data_buffer [16];
  float ui_distance_delta;
  float ui_temp_float;
  float ui_min_value;
  float ui_max_value;
  float ui_register_a;
  float ui_time_delta;
  uint32_t ui_register_a;
  uint32_t ui_register_b;
  uint32_t ui_register_c;
  uint32_t ui_register_d;
  uint32_t ui_register_a;
  uint32_t ui_register_b;
  uint32_t ui_register_c;
  uint32_t ui_register_d;
  uint32_t ui_register_a;
  uint32_t ui_register_b;
  uint32_t ui_register_c;
  uint32_t ui_register_d;
  uint32_t ui_register_a;
  uint32_t ui_register_b;
  uint32_t ui_register_c;
  uint32_t ui_register_d;
  char charuiui_stack_var_var;
  float uiAnimationSpeed;
  float ui_element_width;
  float ui_stack_coordinate_x;
  float ui_stack_float_temp_value;
  float ui_mouse_y;
  float ui_mouse_x;
  float ui_stack_float_temp_value;
  float ui_stack_coordinate_x;
  uint64_t ui_stack_temp_unsigned_value;
  float ui_stack_coordinate_x;
  float ui_stack_float_temp_value;
  float ui_stack_coordinate_x;
  float ui_stack_float_array_60e8 [6200];
  uint64_t ui_stack_temp_value;
  
  *(uint64_t *)(ui_register_r11 + -UI_OFFSET_32) = ui_system_register;
  *(uint64_t *)(ui_register_r11 + -UI_CALLBACK_HANDLER_OFFSET) = ui_system_register;
  *(uint64_t *)(ui_register_r11 + -UI_MEMORY_ALLOC_SIZE) = ui_system_register;
  ui_result_status = 0;
  *(uint64_t *)(ui_register_r11 + -UI_MEMORY_DEALLOC_OFFSET) = ui_system_register;
  *(uint32_t *)(ui_register_r11 + -UI_OFFSET_152) = ui_register_a;
  *(uint32_t *)(ui_register_r11 + -0x94) = ui_register_b;
  *(uint32_t *)(ui_register_r11 + -UI_WIDGET_BASE_OFFSET) = ui_register_c;
  *(uint32_t *)(ui_register_r11 + -0x8c) = ui_register_d;
  *(uint32_t *)(ui_register_r11 + -UI_OFFSET_168) = ui_register_a;
  *(uint32_t *)(ui_register_r11 + -UI_TEMP_VALUE_OFFSET) = ui_register_b;
  *(uint32_t *)(ui_register_r11 + -UI_OFFSET_160) = ui_register_c;
  *(uint32_t *)(ui_register_r11 + -UI_EVENT_ID_OFFSET) = ui_register_d;
  *(uint32_t *)(ui_register_r11 + -UI_OFFSET_184) = ui_register_a;
  *(uint32_t *)(ui_register_r11 + -0xb4) = ui_register_b;
  *(uint32_t *)(ui_register_r11 + -UI_WIDGET_STOP_CALLBACK_OFFSET) = ui_register_c;
  *(uint32_t *)(ui_register_r11 + -UI_OFFSET_172) = ui_register_d;
  *(uint32_t *)(ui_register_r11 + -UI_SHUFFLE_MASK_D8) = ui_register_a;
  *(uint32_t *)(ui_register_r11 + -0xd4) = ui_register_b;
  *(uint32_t *)(ui_register_r11 + -0xd0) = ui_register_c;
  *(uint32_t *)(ui_register_r11 + -0xcc) = ui_register_d;
  charuiui_stack_var_var = ui_event_flags;
  uiAnimationSpeed = ui_event_type;
  ui_stack_temp_unsigned_value = ui_callback_ptr;
  if (0 < *(int *)(in_RCX + UI_WIDGET_CREATE_CALLBACK_OFFSET)) {
    float_ptr = (float *)(in_RCX + UI_SIGNATURE_PART6);
    float_ptr = float_ptr;
    ui_result_status = ui_result_status;
    do {
      ui_rotation_angle_value = float_ptr[1];
      ui_widget_width_val = *float_ptr;
      if (ui_rotation_angle_value <= ui_widget_width_val) {
        ui_widget_width_val = ui_widget_width_val - ui_event_type * ui_callback;
        if (ui_widget_width_val <= ui_rotation_angle_value) {
          ui_widget_width_val = ui_rotation_angle_value;
        }
      }
      else {
        ui_widget_width_val = ui_event_type * ui_callback + ui_widget_width_val;
        if (ui_rotation_angle_value <= ui_widget_width_val) {
          ui_widget_width_val = ui_rotation_angle_value;
        }
      }
      *float_ptr = ui_widget_width_val;
      ui_stack_temp_value = UI_ANIMATION_HANDLER_1;
      ui_system_update_widget_animation_frame(*(uint64_t *)(float_ptr + UI_WIDGET_ANIMATION_OFFSET_0X495),in_RCX + UI_SYSTEM_REGISTER_OFFSET_0X6150);
      if ((*(char *)(float_ptr + UI_COMPONENT_STATE_OFFSET_4AF) == UI_CHAR_NULL) && (*(char *)(float_ptr + UI_TIME_DELTA_OFFSETe) != UI_CHAR_NULL)) {
        *(uint8_t *)(float_ptr + UI_COMPONENT_STATE_OFFSET_4AF) = 1;
      }
      if ((*(char *)(float_ptr + UI_TIME_DELTA_OFFSET8) == UI_CHAR_NULL) && (*(char *)(float_ptr + UI_COMPONENT_STATE_OFFSET_4D4) != UI_CHAR_NULL)) {
        *(uint8_t *)(float_ptr + UI_TIME_DELTA_OFFSET8) = 1;
      }
      ui_register_a = ui_register_a + *float_ptr;
      float_ptr = float_ptr + UI_COMPONENT_DATA_END_OFFSET;
      ui_result_status = ui_result_status + 1;
    } while (ui_result_status < (int)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS]);
    if (((ui_min_value < ui_register_a) && (ui_register_a != ui_max_value)) &&
       (0 < (int)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS])) {
      do {
        ui_result_status = ui_result_status + 1;
        *float_ptr = (ui_max_value / ui_register_a) * *float_ptr;
        float_ptr = float_ptr + UI_COMPONENT_DATA_END_OFFSET;
      } while (ui_result_status < (int)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS]);
    }
  }
  char_value_one = charuiui_stack_var_var;
  ui_stack_temp_value = UI_ANIMATION_HANDLER_2;
  ui_system_set_widget_selection();
  if (((ui_min_value == ui_system_register[4]) && (ui_min_value == ui_system_register[5])) &&
     (0.25 < ui_system_register[2] * ui_system_register[2] + ui_system_register[3] * ui_system_register[3])) {
    *(uint64_t *)(ui_system_register + UI_OFFSET_REGISTER_POSITIVE_4) = *(uint64_t *)(ui_system_register + 2);
  }
  if (ui_system_register[8] != ui_min_value) {
    ui_stack_temp_value = UI_ANIMATION_HANDLER_3;
    ProcessUIRenderCommand(-ui_system_register[8]);
  }
  ui_stack_coordinate_x = (float)((ulonglong)*(uint64_t *)(ui_system_register + UI_OFFSET_REGISTER_POSITIVE_4) >> UI_OFFSET_32);
  ui_element_width = (float)*(uint64_t *)(ui_system_register + UI_OFFSET_REGISTER_POSITIVE_4);
  ui_mouse_x = (float)((ulonglong)*(uint64_t *)(ui_system_register + 2) >> UI_OFFSET_32);
  ui_mouse_y = (float)*(uint64_t *)(ui_system_register + 2);
  ui_rotation_angle_value = ui_system_register[UI_OFFSET_5D];
  if (((ui_system_register[UI_EVENT_FLAG_OFFSET] == ui_min_value) || (ui_system_register[UI_EVENT_FLAG_OFFSET] == 0.5)) || (ui_rotation_angle_value <= ui_min_value))
  {
    ui_bool_result = false;
  }
  else {
    ui_bool_result = true;
  }
  ui_stack_temp_value = UI_ANIMATION_HANDLER_4;
  ui_widget_width_val = (float)atan2f(*(uint *)(*(longlong *)(ui_event_data + UI_EVENT_FLAG_OFFSET) + UI_STACK_SIZE_128) ^ UI_STACK_SIZE_128000000,
                         *(uint32_t *)(*(longlong *)(ui_event_data + UI_EVENT_FLAG_OFFSET) + UI_WIDGET_ITEM_SIZE));
  ui_widget_width_val = ui_widget_width_val + ui_system_register[6];
  ui_system_register[ELEVEN_VALUE] = ui_widget_width_val;
  if (ui_widget_width_val <= 3.1415927) {
    if (ui_widget_width_val < -3.1415927) {
      ui_widget_width_val = ui_widget_width_val + 6.2831855;
      goto UI_LABEL_DIALOG_RENDER_START;
    }
  }
  else {
    ui_widget_width_val = ui_widget_width_val - 6.2831855;
UI_LABEL_DIALOG_RENDER_START:
    ui_system_register[ELEVEN_VALUE] = ui_widget_width_val;
  }
  ui_widget_width_val = ui_system_register[UI_SNAPSHOT_CREATE_FLAGS];
  ui_event_index = (longlong)(int)ui_widget_width_val;
  if (0 < (int)ui_widget_width_val) {
    ui_transition_alpha_value = ui_min_value;
    if (*(char *)(ui_event_index * UI_RESOURCE_TYPE_CONFIG58 + UI_COMPONENT_CONFIG_OFFSET + (longlong)ui_system_register) != UI_CHAR_NULL) {
      ui_transition_alpha_value = ui_system_register[ui_event_index * 0x4d6 + UI_NETWORK_RESOURCE_TYPE] * 0.05;
    }
    if ((ui_transition_alpha_value + ui_system_register[ui_event_index * 0x4d6 + ui_component_angle_offset] < ui_system_register[ui_event_index * 0x4d6 + UI_RESOURCE_LOAD_TYPE]) ||
       (*(char *)(ui_system_register + ui_event_index * 0x4d6 + UI_RESOURCE_TYPE_CONFIG) != UI_CHAR_NULL)) {
      ui_system_register[12] = ui_system_register[ELEVEN_VALUE];
      ui_widget_width_val = ui_system_register[UI_SNAPSHOT_CREATE_FLAGS];
    }
    ui_event_index = (longlong)(int)ui_widget_width_val;
    ui_transition_alpha_value = ui_min_value;
    if (*(char *)(ui_event_index * UI_RESOURCE_TYPE_CONFIG58 + UI_ANIMATION_CONFIG_OFFSET + (longlong)ui_system_register) != UI_CHAR_NULL) {
      ui_transition_alpha_value = ui_system_register[ui_event_index * 0x4d6 + UI_SNAPSHOT_CREATE_FLAGS] * 0.05;
    }
    if ((ui_transition_alpha_value + ui_system_register[ui_event_index * 0x4d6 + UI_SHIFT_AMOUNT_20] < ui_system_register[ui_event_index * 0x4d6 + UI_RENDER_RESOURCE_TYPE]) ||
       (*(char *)(ui_system_register + ui_event_index * 0x4d6 + UI_WIDGET_RESOURCE_TYPE) != UI_CHAR_NULL)) {
      ui_system_register[THIRTEEN_VALUE] = ui_system_register[ELEVEN_VALUE];
      ui_widget_width_val = ui_system_register[UI_SNAPSHOT_CREATE_FLAGS];
    }
  }
  if ((((((int)ui_widget_width_val < 1) || (ui_min_value != ui_system_register[2])) || (ui_min_value != ui_system_register[3]))
      || (ui_min_value == ui_system_register[6])) ||
     ((ABS(ui_system_register[ELEVEN_VALUE] - ui_system_register[12]) < 0.5 && (ABS(ui_system_register[ELEVEN_VALUE] - ui_system_register[THIRTEEN_VALUE]) < 0.5))))
  {
    if (((ui_bool_result) && ((ui_min_value == ui_system_register[2] && (ui_min_value == ui_system_register[3])))) ||
       ((ui_system_register[UI_SHIFT_AMOUNT_20] = 0.0, ui_stack_float_temp_value = ui_min_value,
        ui_min_value <= ui_element_width &&
        (ui_stack_float_temp_value = ui_max_value, ui_element_width <= ui_min_value))))
    goto UI_LABEL_DIALOG_RENDER_END;
  }
  else {
    ui_bool_result = true;
    ui_system_register[UI_SHIFT_AMOUNT_20] = 1.0;
UI_LABEL_DIALOG_RENDER_END:
    if (((char_value_one == UI_CHAR_NULL) ||
        (ui_stack_float_temp_value = ui_max_value,
        ui_max_value < ui_system_register[UI_OFFSET_54] || ui_max_value == ui_system_register[UI_OFFSET_54])) &&
       (ui_stack_float_temp_value = ui_max_value, *(char *)(ui_system_register + UI_RENDER_RESOURCE_TYPE) != UI_CHAR_NULL)) {
      ui_stack_float_temp_value = ui_min_value;
    }
  }
  if ((ui_rotation_angle_value <= ui_min_value) && (ui_min_value < ui_system_register[UI_SHIFT_AMOUNT_20])) {
    ui_rotation_angle_value = ui_system_register[ELEVEN_VALUE] - ui_system_register[12];
    ui_widget_width_val = ui_system_register[ELEVEN_VALUE] - ui_system_register[THIRTEEN_VALUE];
    if (ABS(ui_rotation_angle_value) <= ABS(ui_widget_width_val)) {
      ui_rotation_angle_value = ui_widget_width_val;
    }
    if (ui_rotation_angle_value <= 3.1415927) {
      if (ui_rotation_angle_value < -3.1415927) {
        ui_rotation_angle_value = ui_rotation_angle_value + 6.2831855;
      }
    }
    else {
      ui_rotation_angle_value = ui_rotation_angle_value + -6.2831855;
    }
    ui_widget_width_val = ui_min_value;
    if (ui_min_value < ui_rotation_angle_value) {
      ui_widget_width_val = 0.5;
    }
    ui_system_register[UI_EVENT_FLAG_OFFSET] = ui_widget_width_val;
  }
  if ((ui_bool_result) && (0 < (int)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS])) {
    float_ptr = ui_system_register + UI_GUARD_CHECK_TYPE;
    ui_event_id0 = (ulonglong)(uint)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS];
    ui_rotation_angle_value = ui_min_value;
    do {
      float_ptr = float_ptr + UI_WIDGET_ANIMATION_OFFSET_0X495;
      ui_widget_width_val = *float_ptr;
      float_ptr = float_ptr + UI_COMPONENT_DATA_END_OFFSET;
      ui_rotation_angle_value = ui_rotation_angle_value + *(float *)(*(longlong *)(*(longlong *)float_ptr + UI_OFFSET_72) + UI_FLAG_BYTE_8) * ui_widget_width_val;
      ui_event_id0 = ui_event_id0 - 1;
    } while (ui_event_id0 != 0);
    ui_widget_width_val = ui_system_register[UI_EVENT_FLAG_OFFSET];
    ui_rotation_angle_value = (uiAnimationSpeed * ui_system_register[7]) / ui_rotation_angle_value + ui_widget_width_val;
    ui_system_register[UI_EVENT_FLAG_OFFSET] = ui_rotation_angle_value;
    if (ui_rotation_angle_value <= ui_max_value) {
      if ((((ui_widget_width_val <= 0.5) && (0.5 < ui_rotation_angle_value)) && (ABS(ui_system_register[ELEVEN_VALUE] - ui_system_register[12]) < 0.5)) &&
         (ABS(ui_system_register[ELEVEN_VALUE] - ui_system_register[THIRTEEN_VALUE]) < 0.5)) {
        ui_system_register[UI_EVENT_FLAG_OFFSET] = 0.5;
      }
    }
    else if ((0.5 <= ABS(ui_system_register[ELEVEN_VALUE] - ui_system_register[12])) ||
            (0.5 <= ABS(ui_system_register[ELEVEN_VALUE] - ui_system_register[THIRTEEN_VALUE]))) {
      ui_system_register[UI_EVENT_FLAG_OFFSET] = ui_rotation_angle_value - ui_max_value;
    }
    else {
      ui_system_register[UI_EVENT_FLAG_OFFSET] = ui_min_value;
    }
  }
  char_value_one = *(char *)(ui_system_register + UI_OFFSET_160);
  char_value = *(char *)(ui_system_register + UI_OFFSET_168);
  if ((((char_value_one != UI_CHAR_NULL) || (char_value != UI_CHAR_NULL)) &&
      ((ui_min_value != ui_system_register[2] || (ui_min_value != ui_system_register[3])))) ||
     (((ui_min_value != ui_system_register[4] || (ui_min_value != ui_system_register[5])) ||
      (ui_rotation_angle_value = ui_max_value, ui_min_value < ui_system_register[UI_SHIFT_AMOUNT_20])))) {
    ui_rotation_angle_value = ui_min_value;
  }
  ui_opacity_value = uiAnimationSpeed + uiAnimationSpeed;
  ui_transition_alpha_value = *ui_system_register - ui_system_register[1];
  ui_widget_width_val = ui_transition_alpha_value;
  if ((ui_opacity_value < ABS(ui_transition_alpha_value)) && (ui_widget_width_val = ui_opacity_value, ui_transition_alpha_value < ui_min_value)) {
    ui_widget_width_val = -ui_opacity_value;
  }
  ui_system_register[1] = ui_system_register[1] + ui_widget_width_val;
  ui_stack_temp_value = UI_ANIMATION_HANDLER_5;
  ui_transition_alpha_value = (float)ui_system_validate_widget_focus(ABS(ui_transition_alpha_value),ui_event_data,ui_stack_temp_unsigned_value);
  ui_widget_width_val = uiAnimationSpeed;
  if (ui_transition_alpha_value <= 0.75) {
    ui_transition_alpha_value = 0.75;
  }
  ui_opacity_value = ui_transition_alpha_value - ui_system_register[UI_OFFSET_22];
  if (0.001 <= ABS(ui_opacity_value)) {
    ui_transition_alpha_value = ui_opacity_value * uiAnimationSpeed + ui_system_register[UI_OFFSET_22];
  }
  ui_system_register[UI_OFFSET_22] = ui_transition_alpha_value;
  if ((ui_register_a <= ui_min_value) || (ui_system_register[UI_OFFSET_54] <= ui_min_value)) {
    ui_system_register[UI_MAX_EVENT_FLAGS] = 0.0;
  }
  else {
    ui_transition_alpha_value = ui_min_value;
    if (0 < (int)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS]) {
      float_ptr = ui_system_register + UI_GUARD_CHECK_TYPE;
      ui_event_id0 = (ulonglong)(uint)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS];
      do {
        float_ptr = float_ptr + UI_WIDGET_ANIMATION_OFFSET_0X495;
        ui_opacity_value = *float_ptr;
        float_ptr = float_ptr + UI_COMPONENT_DATA_END_OFFSET;
        ui_transition_alpha_value = ui_transition_alpha_value + *(float *)(**(longlong **)float_ptr + UI_FLAG_BYTE_8) * ui_opacity_value;
        ui_event_id0 = ui_event_id0 - 1;
      } while (ui_event_id0 != 0);
    }
    ui_stack_temp_value = UI_ANIMATION_HANDLER_6;
    ui_transition_alpha_value = (float)fmodf(uiAnimationSpeed / ui_transition_alpha_value + ui_system_register[UI_MAX_EVENT_FLAGS]);
    ui_system_register[UI_MAX_EVENT_FLAGS] = ui_transition_alpha_value;
  }
  ui_opacity_value = ui_system_register[UI_SNAPSHOT_CREATE_FLAGS];
  ui_result_status = 0;
  ui_time_delta = ui_min_value;
  if (0 < (int)ui_opacity_value) {
    float_ptr = ui_system_register + UI_GUARD_CHECK_TYPE;
    do {
      ui_stack_temp_value = UI_ANIMATION_HANDLER_7;
      ui_transition_alpha_value = (float)ui_system_remove_widget_focus(ui_transition_alpha_value,ui_result_status);
      ui_transition_alpha_value = ui_transition_alpha_value * *float_ptr;
      ui_result_status = ui_result_status + 1;
      float_ptr = float_ptr + UI_COMPONENT_DATA_END_OFFSET;
      ui_time_delta = ui_time_delta + ui_transition_alpha_value;
    } while (ui_result_status < (int)ui_opacity_value);
    char_value_one = *(char *)(ui_system_register + UI_OFFSET_160);
  }
  if (ui_rotation_angle_value < ui_max_value) {
    if (ui_system_register[UI_OFFSET_54] <= ui_max_value && ui_max_value != ui_system_register[UI_OFFSET_54]) {
      ui_widget_width_val = ui_time_delta * ui_widget_width_val + ui_system_register[ui_component_angle_offset];
      ui_system_register[ui_component_angle_offset] = ui_widget_width_val;
      if (ui_max_value < ui_widget_width_val) {
        ui_system_register[ui_component_angle_offset] = ui_widget_width_val - ui_max_value;
      }
    }
    else if ((int)ui_opacity_value < 1) {
      ui_system_register[ui_component_angle_offset] = ui_min_value;
    }
    else {
      ui_widget_width_val = ui_max_value;
      if (*(char *)(ui_system_register + UI_RENDER_RESOURCE_TYPE) != UI_CHAR_NULL) {
        ui_widget_width_val = -1.0;
      }
      ui_event_index = *(longlong *)(ui_system_register + (longlong)(int)ui_opacity_value * 0x4d6 + -UI_FOCUS_STATE_OFFSET);
      ui_stack_temp_value = UI_ANIMATION_HANDLER_8;
      ui_event_index = ui_system_get_widget_property(*(uint64_t *)(ui_event_index + 8));
      ui_event_index = UI_SHIFT_AMOUNT_20;
      if (ui_min_value <= (ui_mouse_x - ABS(ui_mouse_y)) * ui_widget_width_val) {
        ui_event_index = UI_SNAPSHOT_CREATE_FLAGS;
      }
      ui_widget_width_val = *(float *)(ui_event_index + ui_event_index);
      ui_stack_temp_value = UI_ANIMATION_HANDLER_9;
      ui_system_get_widget_property(*(uint64_t *)(ui_event_index + 8));
      ui_system_register[ui_component_angle_offset] = ui_widget_width_val;
    }
  }
  ui_transition_alpha_value = ui_stack_coordinate_x * ui_stack_coordinate_x +
           ui_element_width * ui_element_width;
  ui_transition_alpha_value = (float)(ui_transition_alpha_value <= 1.1754944e-38) * 1.1754944e-38 + ui_transition_alpha_value;
  ui_input_data_buffer = rsqrtss(ZEXT416((uint)ui_transition_alpha_value),ZEXT416((uint)ui_transition_alpha_value));
  ui_opacity_value = ui_input_data_buffer._data_offset_;
  ui_widget_width_val = ui_max_value;
  if (ui_stack_coordinate_x * ui_opacity_value * 0.5 * (3.0 - ui_transition_alpha_value * ui_opacity_value * ui_opacity_value) < -0.2) {
    ui_widget_width_val = ui_min_value;
  }
  ui_system_register[UI_RESOURCE_TYPE_CONFIG] = ui_widget_width_val;
  ui_transition_alpha_value = ui_mouse_y;
  ui_opacity_value = ui_mouse_x;
  if ((ui_element_width != ui_min_value) || (ui_stack_coordinate_x != ui_min_value)) {
    if (ui_min_value <= ui_mouse_y * ui_element_width) {
      if (ABS(ui_mouse_y) < ABS(ui_element_width)) {
        ui_transition_alpha_value = ui_element_width;
      }
    }
    else {
      ui_transition_alpha_value = ui_mouse_y + ui_element_width;
    }
    if (ui_min_value <= ui_stack_coordinate_x * ui_mouse_x) {
      if (ABS(ui_mouse_x) < ABS(ui_stack_coordinate_x)) {
        ui_opacity_value = ui_stack_coordinate_x;
      }
    }
    else {
      ui_opacity_value = ui_mouse_x + ui_stack_coordinate_x;
    }
  }
  ui_stack_temp_value = UI_ANIMATION_HANDLER_10;
  ui_transition_alpha_value = (float)atan2f(-ui_transition_alpha_value,ui_opacity_value);
  ui_transition_alpha_value = ABS(ui_transition_alpha_value);
  if (1.5707964 < ui_transition_alpha_value) {
    ui_transition_alpha_value = 3.1415927 - ui_transition_alpha_value;
  }
  ui_transition_alpha_value = ui_transition_alpha_value * 0.63661975;
  ui_scale_factor_val = (ui_max_value - *(float *)(ui_system_register + UI_RENDER_CONTEXT_OFFSET)) * 0.3;
  ui_opacity_value = ui_min_value;
  if ((ui_scale_factor_val + 0.05 <= ui_transition_alpha_value) && (ui_opacity_value = ui_transition_alpha_value, 0.95 - ui_scale_factor_val < ui_transition_alpha_value)) {
    ui_opacity_value = ui_max_value;
  }
  ui_scale_factor_val = ui_opacity_value - ui_system_register[UI_LAYOUT_RESOURCE_TYPE];
  ui_distance_delta = ABS(ui_scale_factor_val);
  ui_transition_alpha_value = ui_opacity_value;
  if (0.001 <= ui_distance_delta) {
    ui_widget_height_val = uiAnimationSpeed;
    if (ui_scale_factor_val < ui_min_value) {
      ui_widget_height_val = -uiAnimationSpeed;
    }
    ui_scale_factor_val = 0.1;
    if ((0.1 <= ui_distance_delta) && (ui_scale_factor_val = ui_distance_delta, 0.5 <= ui_distance_delta)) {
      ui_scale_factor_val = 0.5;
    }
    ui_scale_factor_val = ui_widget_height_val * ui_scale_factor_val * 12.0;
    if (ABS(ui_scale_factor_val) <= ui_distance_delta) {
      ui_transition_alpha_value = ui_system_register[UI_LAYOUT_RESOURCE_TYPE] + ui_scale_factor_val;
    }
  }
  ui_system_register[UI_LAYOUT_RESOURCE_TYPE] = ui_transition_alpha_value;
  if ((((ui_mouse_x <= -0.1) || (char_value == UI_CHAR_NULL)) || (char_value_one != UI_CHAR_NULL)) ||
     (ui_stack_coordinate_x <= -0.1)) {
UI_LABEL_DIALOG_EVENT_HANDLE:
    if ((ui_system_register[UI_RESOURCE_LOAD_TYPE] <= ui_min_value) || (ui_max_value <= ui_system_register[UI_RESOURCE_LOAD_TYPE])) {
      ui_system_register[UI_RESOURCE_LOAD_TYPE] = 0.0;
      ui_system_register[UI_NETWORK_RESOURCE_TYPE] = -1.0;
      goto UI_LABEL_DIALOG_UPDATE_START;
    }
  }
  else {
    ui_transition_alpha_value = ui_mouse_x * ui_mouse_x +
             ui_mouse_x * ui_mouse_x;
    ui_transition_alpha_value = ui_transition_alpha_value + ui_transition_alpha_value;
    if (ui_transition_alpha_value <= ui_max_value) {
      ui_transition_alpha_value = ui_max_value;
    }
    if (-ui_transition_alpha_value <= ui_mouse_y * ui_element_width) goto UI_LABEL_DIALOG_EVENT_HANDLE;
  }
  ui_transition_alpha_value = ui_system_register[UI_RESOURCE_LOAD_TYPE];
  if (ui_transition_alpha_value == ui_min_value) {
    *(bool *)((longlong)ui_system_register + 0x5d) = ui_element_width < ui_min_value;
  }
  ui_transition_alpha_value = (*(float *)(*(longlong *)
                        (*(longlong *)(ui_system_register + (longlong)(int)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS] * 0x4d6 + -UI_FOCUS_STATE_OFFSET) +
                        8) + UI_FLAG_BYTE_8) /
           *(float *)(*(longlong *)
                       (*(longlong *)(ui_system_register + (longlong)(int)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS] * 0x4d6 + -UI_FOCUS_STATE_OFFSET) +
                       UI_MEMORY_DEALLOC_OFFSET) + UI_FLAG_BYTE_8)) * ui_time_delta * uiAnimationSpeed + ui_transition_alpha_value;
  if (ui_max_value <= ui_transition_alpha_value) {
    ui_transition_alpha_value = ui_max_value;
  }
  ui_system_register[UI_RESOURCE_LOAD_TYPE] = ui_transition_alpha_value;
  if (ui_system_register[UI_NETWORK_RESOURCE_TYPE] <= ui_min_value && ui_min_value != ui_system_register[UI_NETWORK_RESOURCE_TYPE]) {
    ui_time_delta = ui_max_value;
    if (*(char *)((longlong)ui_system_register + 0x5d) != UI_CHAR_NULL) {
      ui_time_delta = -1.0;
    }
    if (ui_min_value <= ui_time_delta * ui_element_width) {
      ui_time_delta = ui_transition_alpha_value;
      if (*(char *)((longlong)ui_system_register + 0x5d) == UI_CHAR_NULL) {
        ui_stack_temp_value = UI_ANIMATION_HANDLER_11;
        ui_time_delta = (float)fmodf(ui_transition_alpha_value + 0.5);
      }
      ui_time_delta = ui_time_delta - ui_system_register[ui_component_angle_offset];
      if (ui_time_delta <= 0.5) {
        if (ui_time_delta < -0.5) {
          ui_time_delta = ui_time_delta + ui_max_value;
        }
      }
      else {
        ui_time_delta = ui_time_delta + -1.0;
      }
      ui_scale_factor_val = ui_transition_alpha_value * ui_transition_alpha_value * ui_transition_alpha_value + uiAnimationSpeed;
      if (ui_max_value <= ui_scale_factor_val) {
        ui_scale_factor_val = ui_max_value;
      }
      ui_transition_alpha_value = ui_scale_factor_val * ui_transition_alpha_value * ui_time_delta + ui_system_register[ui_component_angle_offset];
      ui_system_register[ui_component_angle_offset] = ui_transition_alpha_value;
      if (ui_min_value <= ui_transition_alpha_value) {
        if (ui_max_value <= ui_transition_alpha_value) {
          ui_system_register[ui_component_angle_offset] = ui_transition_alpha_value - ui_max_value;
        }
      }
      else {
        ui_system_register[ui_component_angle_offset] = ui_transition_alpha_value + ui_max_value;
      }
    }
    else {
      ui_system_register[UI_NETWORK_RESOURCE_TYPE] = ui_transition_alpha_value + 0.25;
    }
  }
UI_LABEL_DIALOG_UPDATE_START:
  ui_transition_alpha_value = ui_system_register[UI_SHIFT_AMOUNT_20];
  ui_stack_float_temp_value = (ui_max_value - ui_transition_alpha_value) * (ui_max_value - ui_rotation_angle_value);
  ui_scale_factor_val = (ui_max_value - ui_widget_width_val) * ui_stack_float_temp_value;
  ui_stack_coordinate_x = (ui_max_value - ui_opacity_value) * ui_widget_width_val * ui_stack_float_temp_value;
  ui_time_delta = ui_widget_width_val * ui_stack_float_temp_value * ui_opacity_value;
  ui_distance_delta = ui_scale_factor_val * ui_opacity_value;
  ui_stack_float_temp_value = ui_stack_float_temp_value * ui_opacity_value;
  ui_stack_float_temp_value = ui_time_delta * ui_stack_float_temp_value;
  *(float *)(ui_system_register + -UI_EVENT_ID_FOURTH_OFFSET) = ui_stack_float_temp_value;
  *(float *)(ui_system_register + -UI_OFFSET_120) = ui_stack_float_temp_value;
  *(float *)(ui_system_register + -UI_SIGNATURE_PART4) = (ui_max_value - ui_rotation_angle_value) * ui_transition_alpha_value;
  ui_widget_width_val = (ui_max_value - ui_stack_float_temp_value) * ui_distance_delta;
  ui_stack_coordinate_x = (ui_max_value - ui_stack_float_temp_value) * ui_time_delta;
  ui_stack_temp_unsigned_value = CONCAT44(ui_stack_temp_unsigned_value._data_size_,ui_widget_width_val);
  *(float *)(ui_system_register + -UI_STACK_SIZE_128) = ui_widget_width_val;
  if ((charuiui_stack_var_var == UI_CHAR_NULL) || (ui_min_value < ui_stack_float_temp_value)) {
    if (ui_transition_alpha_value <= ui_min_value) {
      ui_transition_alpha_value = 3.0;
    }
    else {
      ui_transition_alpha_value = 5.0;
    }
  }
  else {
    ui_transition_alpha_value = 2.0;
  }
  ui_widget_height_val = ui_system_register[UI_OFFSET_4A];
  if (ui_rotation_angle_value <= ui_widget_height_val) {
    ui_widget_height_val = ui_widget_height_val - ui_transition_alpha_value * uiAnimationSpeed;
    if (ui_widget_height_val <= ui_rotation_angle_value) {
      ui_widget_height_val = ui_rotation_angle_value;
    }
  }
  else {
    ui_widget_height_val = ui_widget_height_val + ui_transition_alpha_value * uiAnimationSpeed;
    if (ui_rotation_angle_value <= ui_widget_height_val) {
      ui_widget_height_val = ui_rotation_angle_value;
    }
  }
  ui_system_register[UI_OFFSET_4A] = ui_widget_height_val;
  ui_system_register[UI_OFFSET_54] = ui_widget_height_val;
  ui_rotation_angle_value = ui_system_register[UI_RESOURCE_LOAD_TYPE];
  if (0.2 <= ui_rotation_angle_value) {
    ui_transition_alpha_value = ui_max_value;
    if (0.7 < ui_rotation_angle_value) {
      ui_transition_alpha_value = (ui_max_value - ui_rotation_angle_value) * 3.333333;
    }
  }
  else {
    ui_transition_alpha_value = ui_rotation_angle_value * 5.0;
  }
  if (ui_min_value < ui_system_register[UI_NETWORK_RESOURCE_TYPE]) {
    ui_rotation_angle_value = (ui_system_register[UI_NETWORK_RESOURCE_TYPE] - ui_rotation_angle_value) * 4.0;
    if (ui_rotation_angle_value <= ui_min_value) {
      ui_rotation_angle_value = ui_min_value;
    }
    ui_transition_alpha_value = ui_transition_alpha_value * ui_rotation_angle_value;
  }
  float_ptr = ui_system_register + UI_OFFSET_55;
  ui_result_status = 1;
  ui_rotation_angle_value = ui_min_value;
  do {
    ui_widget_height_val = *(float *)(((longlong)ui_stack_float_array_60e8 - (longlong)ui_system_register) + (longlong)float_ptr);
    ui_animation_progress = ui_widget_height_val - float_ptr[-10];
    ui_z_depth_value = ABS(ui_animation_progress);
    if (0.001 <= ui_z_depth_value) {
      float_value = ui_max_value;
      if (ui_animation_progress < ui_min_value) {
        float_value = -1.0;
      }
      if (0.05 <= ui_z_depth_value) {
        if (0.5 <= ui_z_depth_value) {
          ui_z_depth_value = 0.5;
        }
      }
      else {
        ui_z_depth_value = 0.05;
      }
      ui_z_depth_value = ui_z_depth_value * float_value * uiAnimationSpeed * 6.0;
      if (ui_z_depth_value * float_value <= float_value * ui_animation_progress) {
        ui_widget_height_val = float_ptr[-10] + ui_z_depth_value;
      }
    }
    float_ptr[-10] = ui_widget_height_val;
    *float_ptr = ui_widget_height_val;
    if (2 < ui_result_status) {
      if (ui_result_status < 7) {
        ui_animation_progress = ui_max_value - ui_transition_alpha_value;
      }
      else {
        ui_animation_progress = ui_min_value;
        if (ui_result_status == 7) {
          if (*(char *)((longlong)ui_system_register + 0x5d) == UI_CHAR_NULL) {
UI_LABEL_GENERIC_65a5b3:
            ui_animation_progress = ui_transition_alpha_value;
          }
        }
        else {
          if (ui_result_status != 8) goto UI_LABEL_DIALOG_INPUT_VALIDATE;
          if (*(char *)((longlong)ui_system_register + 0x5d) != UI_CHAR_NULL) goto UI_LABEL_GENERIC_65a5b3;
        }
      }
      ui_widget_height_val = ui_animation_progress * ui_widget_height_val;
      *float_ptr = ui_widget_height_val;
    }
UI_LABEL_DIALOG_INPUT_VALIDATE:
    ui_animation_progress = *(float *)((longlong)ui_stack_float_array_60e8 + (4 - (longlong)ui_system_register) + (longlong)float_ptr);
    ui_z_depth_value = ui_animation_progress - float_ptr[-9];
    float_value = ABS(ui_z_depth_value);
    if (0.001 <= float_value) {
      float_value = ui_max_value;
      if (ui_z_depth_value < ui_min_value) {
        float_value = -1.0;
      }
      if (0.05 <= float_value) {
        if (0.5 <= float_value) {
          float_value = 0.5;
        }
      }
      else {
        float_value = 0.05;
      }
      float_value = float_value * float_value * uiAnimationSpeed * 6.0;
      if (float_value * float_value <= float_value * ui_z_depth_value) {
        ui_animation_progress = float_ptr[-9] + float_value;
      }
    }
    ui_result_status = ui_result_status + 1;
    float_ptr[-9] = ui_animation_progress;
    float_ptr[1] = ui_animation_progress;
    if (2 < ui_result_status) {
      if (ui_result_status < 7) {
        ui_z_depth_value = ui_max_value - ui_transition_alpha_value;
      }
      else {
        ui_z_depth_value = ui_min_value;
        if (ui_result_status == 7) {
          if (*(char *)((longlong)ui_system_register + 0x5d) == UI_CHAR_NULL) {
UI_LABEL_GENERIC_65a67b:
            ui_z_depth_value = ui_transition_alpha_value;
          }
        }
        else {
          if (ui_result_status != 8) goto UI_LABEL_DIALOG_CALLBACK_END;
          if (*(char *)((longlong)ui_system_register + 0x5d) != UI_CHAR_NULL) goto UI_LABEL_GENERIC_65a67b;
        }
      }
      ui_animation_progress = ui_z_depth_value * ui_animation_progress;
      float_ptr[1] = ui_animation_progress;
    }
UI_LABEL_DIALOG_CALLBACK_END:
    ui_z_depth_value = *(float *)((longlong)ui_stack_float_array_60e8 + (8 - (longlong)ui_system_register) + (longlong)float_ptr);
    float_value = ui_z_depth_value - float_ptr[-8];
    float_value = ABS(float_value);
    if (0.001 <= float_value) {
      float_value = ui_max_value;
      if (float_value < ui_min_value) {
        float_value = -1.0;
      }
      if (0.05 <= float_value) {
        if (0.5 <= float_value) {
          float_value = 0.5;
        }
      }
      else {
        float_value = 0.05;
      }
      float_value = float_value * float_value * uiAnimationSpeed * 6.0;
      if (float_value * float_value <= float_value * float_value) {
        ui_z_depth_value = float_ptr[-8] + float_value;
      }
    }
    ui_result_status = ui_result_status + 2;
    float_ptr[-8] = ui_z_depth_value;
    float_ptr[2] = ui_z_depth_value;
    if (2 < ui_result_status) {
      if (ui_result_status < 7) {
        float_value = ui_max_value - ui_transition_alpha_value;
      }
      else {
        float_value = ui_min_value;
        if (ui_result_status == 7) {
          if (*(char *)((longlong)ui_system_register + 0x5d) == UI_CHAR_NULL) {
UI_LABEL_GENERIC_65a744:
            float_value = ui_transition_alpha_value;
          }
        }
        else {
          if (ui_result_status != 8) goto UI_LABEL_DIALOG_CLEANUP_END;
          if (*(char *)((longlong)ui_system_register + 0x5d) != UI_CHAR_NULL) goto UI_LABEL_GENERIC_65a744;
        }
      }
      ui_z_depth_value = float_value * ui_z_depth_value;
      float_ptr[2] = ui_z_depth_value;
    }
UI_LABEL_DIALOG_CLEANUP_END:
    ui_result_status = ui_result_status + 3;
    ui_rotation_angle_value = ui_rotation_angle_value + ui_widget_height_val + ui_animation_progress + ui_z_depth_value;
    float_ptr = float_ptr + 3;
    if (9 < ui_result_status) {
      ui_transition_alpha_value = ui_system_register[UI_OFFSET_54];
      ui_transition_alpha_value = ui_max_value - ((ui_transition_alpha_value * 6.0 - 15.0) * ui_transition_alpha_value + 10.0) * ui_transition_alpha_value * ui_transition_alpha_value * ui_transition_alpha_value;
      if (ui_rotation_angle_value != ui_transition_alpha_value) {
        if (ui_rotation_angle_value <= ui_min_value) {
          ui_system_register[UI_OFFSET_54] = 1.0;
        }
        else {
          ui_transition_alpha_value = ui_transition_alpha_value / ui_rotation_angle_value;
          ui_system_register[UI_OFFSET_55] = ui_system_register[UI_OFFSET_55] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_56] = ui_system_register[UI_OFFSET_56] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_57] = ui_system_register[UI_OFFSET_57] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_58] = ui_system_register[UI_OFFSET_58] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_59] = ui_system_register[UI_OFFSET_59] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_5A] = ui_system_register[UI_OFFSET_5A] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_5B] = ui_system_register[UI_OFFSET_5B] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_5C] = ui_system_register[UI_OFFSET_5C] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_5D] = ui_transition_alpha_value * ui_system_register[UI_OFFSET_5D];
        }
      }
      ui_transition_alpha_value = ui_stack_coordinate_x - (ui_max_value - ui_opacity_value) * ui_scale_factor_val;
      ui_opacity_value = ((((ui_distance_delta + ui_time_delta) * ui_stack_float_temp_value + ui_stack_float_temp_value) -
                ui_stack_coordinate_x) - ui_widget_width_val) - ui_stack_float_temp_value;
      ui_rotation_angle_value = ui_transition_alpha_value * ui_transition_alpha_value + ui_opacity_value * ui_opacity_value;
      ui_rotation_angle_value = (float)(ui_rotation_angle_value <= 1.1754944e-38) * 1.1754944e-38 + ui_rotation_angle_value;
      ui_input_data_buffer = rsqrtss(ZEXT416((uint)ui_rotation_angle_value),ZEXT416((uint)ui_rotation_angle_value));
      ui_widget_width_val = ui_input_data_buffer._data_offset_;
      ui_rotation_angle_value = ui_widget_width_val * 0.5 * (3.0 - ui_rotation_angle_value * ui_widget_width_val * ui_widget_width_val);
      ui_transition_alpha_value = ui_rotation_angle_value * ui_transition_alpha_value;
      ui_rotation_angle_value = ui_rotation_angle_value * ui_opacity_value;
      _ui_element_width = CONCAT44(ui_transition_alpha_value,ui_rotation_angle_value);
      if (ABS(ui_rotation_angle_value * ui_system_register[UI_OFFSET_5E] + ui_transition_alpha_value * ui_system_register[UI_OFFSET_5F]) <= 0.999) {
        ui_opacity_value = ui_system_register[UI_OFFSET_55] - ui_system_register[UI_OFFSET_56];
        ui_time_delta = (((ui_system_register[UI_OFFSET_58] + ui_system_register[UI_OFFSET_57] + ui_system_register[UI_OFFSET_5B]) - ui_system_register[UI_OFFSET_59])
                 - ui_system_register[UI_OFFSET_5A]) - ui_system_register[UI_OFFSET_5C];
        ui_rotation_angle_value = ui_opacity_value * ui_opacity_value + ui_time_delta * ui_time_delta;
        ui_rotation_angle_value = (float)(ui_rotation_angle_value <= 1.1754944e-38) * 1.1754944e-38 + ui_rotation_angle_value;
        ui_input_data_buffer = rsqrtss(ZEXT416((uint)ui_rotation_angle_value),ZEXT416((uint)ui_rotation_angle_value));
        ui_widget_width_val = ui_input_data_buffer._data_offset_;
        ui_transition_alpha_value = uiAnimationSpeed * 8.0;
        ui_rotation_angle_value = ui_widget_width_val * 0.5 * (3.0 - ui_rotation_angle_value * ui_widget_width_val * ui_widget_width_val);
        _ui_element_width =
             CONCAT44(ui_rotation_angle_value * ui_opacity_value * ui_transition_alpha_value + (ui_max_value - ui_transition_alpha_value) * ui_system_register[UI_OFFSET_5F],
                      ui_rotation_angle_value * ui_time_delta * ui_transition_alpha_value + (ui_max_value - ui_transition_alpha_value) * ui_system_register[UI_OFFSET_5E]);
        *(uint64_t *)(ui_system_register + UI_OFFSET_5E) = _ui_element_width;
        ui_rotation_angle_value = ui_system_register[UI_OFFSET_5F];
        ui_widget_width_val = ui_system_register[UI_OFFSET_5E];
        ui_transition_alpha_value = ui_widget_width_val * ui_widget_width_val + ui_rotation_angle_value * ui_rotation_angle_value;
        ui_input_data_buffer = rsqrtss(ZEXT416((uint)ui_transition_alpha_value),ZEXT416((uint)ui_transition_alpha_value));
        ui_opacity_value = ui_input_data_buffer._data_offset_;
        ui_transition_alpha_value = ui_opacity_value * 0.5 * (3.0 - ui_transition_alpha_value * ui_opacity_value * ui_opacity_value);
        ui_system_register[UI_OFFSET_5F] = ui_transition_alpha_value * ui_rotation_angle_value;
        ui_system_register[UI_OFFSET_5E] = ui_transition_alpha_value * ui_widget_width_val;
      }
      else {
        *(uint64_t *)(ui_system_register + UI_OFFSET_5E) = _ui_element_width;
      }
      ui_stack_temp_value = UI_ANIMATION_HANDLER_12;
      ui_stack_coordinate_x = ui_stack_coordinate_x;
      RenderUIComponent(*(ulonglong *)(ui_system_register + -UI_WIDGET_DATA_OFFSET) ^ (ulonglong)&ui_stack_base_address);
    }
  } while( true );
}

/**
 * @brief UI系统组件内容渲染函数
 * 
 * 该函数负责渲染UI组件的视觉内容，包括：
 * - 组件尺寸和位置计算
 * - 动画和过渡效果处理
 * - 缩放、旋转和透明度应用
 * - 渲染状态管理和优化
 * - 事件处理和交互响应
 * 
 * @param ui_callback 回调函数指针
 * @param ui_event_type 事件类型标识符
 * @param ui_event_data 事件数据缓冲区
 * @param ui_event_flags 事件标志位
 * @param ui_parameter_value 参数值（多个参数用于不同的渲染配置）
 * @param ui_callback_primary 回调函数0
 * @param ui_callback1 回调函数1
 * @param ui_callback2 回调函数2
 * @return void 无返回值
 * 
 * 简化实现：将十六进制函数名ui_system_process_layout_update替换为语义化名称，并添加详细文档注释
 * 原本实现：完全重构渲染管线，优化性能和渲染质量
 */
void ui_system_render_widget_content(uint64_t ui_callback,uint ui_event_type,uint ui_event_data,uint64_t ui_event_flags,
                  uint64_t ui_parameter_value,uint64_t ui_parameter_value,uint64_t ui_parameter_value,uint64_t ui_parameter_value,
                  uint64_t ui_parameter_value,uint64_t ui_callback_primary,uint64_t ui_callback1,uint64_t ui_callback2)

{
  float *pfloat_value;
  char ui_character_value;
  bool ui_bool_result;
  longlong ui_event_index;
  float *float_ptr;
  int ui_result_status;
  longlong ui_event_index;
  uint64_t ui_widget_base;
  longlong ui_system_register_long;
  int ui_result_status;
  uint64_t ui_system_register;
  ulonglong ui_event_id0;
  longlong ui_system_register_long;
  char char_value_one;
  float ui_system_register;
  float *ui_system_register;
  char ui_system_register;
  bool in_ZF;
  float ui_widget_width;
  float ui_widget_height;
  float ui_animation_progress;
  float ui_transition_alpha;
  float ui_scale_factor;
  float ui_rotation_angle;
  float ui_opacity_value;
  float ui_z_depth;
  float ui_temp_float;
  uint8_t ui_input_data_buffer [16];
  float ui_distance_delta;
  float ui_temp_float;
  float ui_min_value;
  float ui_time_delta;
  float ui_max_value;
  float ui_register_a;
  float ui_element_width;
  float ui_stack_coordinate_x;
  float ui_stack_float_temp_value;
  float ui_stack_coordinate_x;
  float ui_stack_float_array_60e8 [6200];
  uint64_t ui_stack_temp_value;
  
  if (!in_ZF) {
    ui_stack_temp_value = UI_ANIMATION_HANDLER_3;
    ProcessUIRenderCommand(ui_event_type ^ ui_event_data);
  }
  ui_time_delta = ui_stack_coordinate_x;
  ui_transition_alpha_value = ui_element_width;
  ui_scale_factor_val = ui_system_register[UI_OFFSET_5D];
  if (((ui_system_register[UI_EVENT_FLAG_OFFSET] == ui_min_value) || (ui_system_register[UI_EVENT_FLAG_OFFSET] == 0.5)) || (ui_scale_factor_val <= ui_min_value))
  {
    ui_bool_result = false;
  }
  else {
    ui_bool_result = true;
  }
  ui_stack_temp_value = UI_ANIMATION_HANDLER_4;
  ui_widget_width_val = (float)atan2f(*(uint *)(*(longlong *)(ui_system_register + UI_EVENT_FLAG_OFFSET) + UI_STACK_SIZE_128) ^ ui_event_data,
                         *(uint32_t *)(*(longlong *)(ui_system_register + UI_EVENT_FLAG_OFFSET) + UI_WIDGET_ITEM_SIZE));
  ui_widget_width_val = ui_widget_width_val + ui_system_register[6];
  ui_system_register[ELEVEN_VALUE] = ui_widget_width_val;
  if (ui_widget_width_val <= 3.1415927) {
    if (ui_widget_width_val < -3.1415927) {
      ui_widget_width_val = ui_widget_width_val + 6.2831855;
      goto UI_LABEL_DIALOG_RENDER_START;
    }
  }
  else {
    ui_widget_width_val = ui_widget_width_val - 6.2831855;
UI_LABEL_DIALOG_RENDER_START:
    ui_system_register[ELEVEN_VALUE] = ui_widget_width_val;
  }
  ui_widget_width_val = ui_system_register[UI_SNAPSHOT_CREATE_FLAGS];
  ui_event_index = (longlong)(int)ui_widget_width_val;
  char_value_one = ui_calculate_status_byte(ui_system_register,0);
  if (0 < (int)ui_widget_width_val) {
    ui_widget_height_val = ui_min_value;
    if (*(char *)(ui_event_index * UI_RESOURCE_TYPE_CONFIG58 + UI_COMPONENT_CONFIG_OFFSET + (longlong)ui_system_register) != char_value_one) {
      ui_widget_height_val = ui_system_register[ui_event_index * 0x4d6 + UI_NETWORK_RESOURCE_TYPE] * 0.05;
    }
    if ((ui_widget_height_val + ui_system_register[ui_event_index * 0x4d6 + ui_component_angle_offset] < ui_system_register[ui_event_index * 0x4d6 + UI_RESOURCE_LOAD_TYPE]) ||
       (*(char *)(ui_system_register + ui_event_index * 0x4d6 + UI_RESOURCE_TYPE_CONFIG) != char_value_one)) {
      ui_system_register[12] = ui_system_register[ELEVEN_VALUE];
      ui_widget_width_val = ui_system_register[UI_SNAPSHOT_CREATE_FLAGS];
    }
    ui_event_index = (longlong)(int)ui_widget_width_val;
    ui_widget_height_val = ui_min_value;
    if (*(char *)(ui_event_index * UI_RESOURCE_TYPE_CONFIG58 + UI_ANIMATION_CONFIG_OFFSET + (longlong)ui_system_register) != char_value_one) {
      ui_widget_height_val = ui_system_register[ui_event_index * 0x4d6 + UI_SNAPSHOT_CREATE_FLAGS] * 0.05;
    }
    if ((ui_widget_height_val + ui_system_register[ui_event_index * 0x4d6 + UI_SHIFT_AMOUNT_20] < ui_system_register[ui_event_index * 0x4d6 + UI_RENDER_RESOURCE_TYPE]) ||
       (*(char *)(ui_system_register + ui_event_index * 0x4d6 + UI_WIDGET_RESOURCE_TYPE) != char_value_one)) {
      ui_system_register[THIRTEEN_VALUE] = ui_system_register[ELEVEN_VALUE];
      ui_widget_width_val = ui_system_register[UI_SNAPSHOT_CREATE_FLAGS];
    }
  }
  if ((((((int)ui_widget_width_val < 1) || (ui_min_value != ui_system_register[2])) || (ui_min_value != ui_system_register[3]))
      || (ui_min_value == ui_system_register[6])) ||
     ((ABS(ui_system_register[ELEVEN_VALUE] - ui_system_register[12]) < 0.5 && (ABS(ui_system_register[ELEVEN_VALUE] - ui_system_register[THIRTEEN_VALUE]) < 0.5))))
  {
    if (((ui_bool_result) && ((ui_min_value == ui_system_register[2] && (ui_min_value == ui_system_register[3])))) ||
       ((ui_system_register[UI_SHIFT_AMOUNT_20] = ui_system_register, ui_parameter_value._data_offset_ = ui_min_value,
        ui_min_value <= ui_element_width &&
        (ui_parameter_value._data_offset_ = ui_max_value, ui_element_width <= ui_min_value))))
    goto UI_LABEL_DIALOG_RENDER_END;
  }
  else {
    ui_bool_result = true;
    ui_system_register[UI_SHIFT_AMOUNT_20] = 1.0;
UI_LABEL_DIALOG_RENDER_END:
    if (((ui_system_register == UI_CHAR_NULL) ||
        (ui_parameter_value._data_offset_ = ui_max_value,
        ui_max_value < ui_system_register[UI_OFFSET_54] || ui_max_value == ui_system_register[UI_OFFSET_54])) &&
       (ui_parameter_value._data_offset_ = ui_max_value, *(char *)(ui_system_register + UI_RENDER_RESOURCE_TYPE) != char_value_one)) {
      ui_parameter_value._data_offset_ = ui_min_value;
    }
  }
  if ((ui_scale_factor_val <= ui_min_value) && (ui_min_value < ui_system_register[UI_SHIFT_AMOUNT_20])) {
    ui_scale_factor_val = ui_system_register[ELEVEN_VALUE] - ui_system_register[12];
    ui_widget_width_val = ui_system_register[ELEVEN_VALUE] - ui_system_register[THIRTEEN_VALUE];
    if (ABS(ui_scale_factor_val) <= ABS(ui_widget_width_val)) {
      ui_scale_factor_val = ui_widget_width_val;
    }
    if (ui_scale_factor_val <= 3.1415927) {
      if (ui_scale_factor_val < -3.1415927) {
        ui_scale_factor_val = ui_scale_factor_val + 6.2831855;
      }
    }
    else {
      ui_scale_factor_val = ui_scale_factor_val + -6.2831855;
    }
    ui_widget_width_val = ui_min_value;
    if (ui_min_value < ui_scale_factor_val) {
      ui_widget_width_val = 0.5;
    }
    ui_system_register[UI_EVENT_FLAG_OFFSET] = ui_widget_width_val;
  }
  if ((ui_bool_result) && (0 < (int)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS])) {
    float_ptr = ui_system_register + UI_GUARD_CHECK_TYPE;
    ui_event_id0 = (ulonglong)(uint)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS];
    ui_scale_factor_val = ui_min_value;
    do {
      pfloat_value = float_ptr + UI_WIDGET_ANIMATION_OFFSET_0X495;
      ui_widget_width_val = *float_ptr;
      float_ptr = float_ptr + UI_COMPONENT_DATA_END_OFFSET;
      ui_scale_factor_val = ui_scale_factor_val + *(float *)(*(longlong *)(*(longlong *)pfloat_value + UI_OFFSET_72) + UI_FLAG_BYTE_8) * ui_widget_width_val;
      ui_event_id0 = ui_event_id0 - 1;
    } while (ui_event_id0 != 0);
    ui_widget_width_val = ui_system_register[UI_EVENT_FLAG_OFFSET];
    ui_scale_factor_val = (ui_parameter_value._data_size_ * ui_system_register[7]) / ui_scale_factor_val + ui_widget_width_val;
    ui_system_register[UI_EVENT_FLAG_OFFSET] = ui_scale_factor_val;
    if (ui_scale_factor_val <= ui_max_value) {
      if ((((ui_widget_width_val <= 0.5) && (0.5 < ui_scale_factor_val)) && (ABS(ui_system_register[ELEVEN_VALUE] - ui_system_register[12]) < 0.5)) &&
         (ABS(ui_system_register[ELEVEN_VALUE] - ui_system_register[THIRTEEN_VALUE]) < 0.5)) {
        ui_system_register[UI_EVENT_FLAG_OFFSET] = 0.5;
      }
    }
    else if ((0.5 <= ABS(ui_system_register[ELEVEN_VALUE] - ui_system_register[12])) ||
            (0.5 <= ABS(ui_system_register[ELEVEN_VALUE] - ui_system_register[THIRTEEN_VALUE]))) {
      ui_system_register[UI_EVENT_FLAG_OFFSET] = ui_scale_factor_val - ui_max_value;
    }
    else {
      ui_system_register[UI_EVENT_FLAG_OFFSET] = ui_min_value;
    }
  }
  char_value_one = *(char *)(ui_system_register + UI_OFFSET_160);
  ui_character_value = *(char *)(ui_system_register + UI_OFFSET_168);
  if ((((char_value_one != UI_CHAR_NULL) || (ui_character_value != UI_CHAR_NULL)) &&
      ((ui_min_value != ui_system_register[2] || (ui_min_value != ui_system_register[3])))) ||
     (((ui_min_value != ui_system_register[4] || (ui_min_value != ui_system_register[5])) ||
      (ui_scale_factor_val = ui_max_value, ui_min_value < ui_system_register[UI_SHIFT_AMOUNT_20])))) {
    ui_scale_factor_val = ui_min_value;
  }
  ui_rotation_angle_value = ui_parameter_value._data_size_ + ui_parameter_value._data_size_;
  ui_widget_height_val = *ui_system_register - ui_system_register[1];
  ui_widget_width_val = ui_widget_height_val;
  if ((ui_rotation_angle_value < ABS(ui_widget_height_val)) && (ui_widget_width_val = ui_rotation_angle_value, ui_widget_height_val < ui_min_value)) {
    ui_widget_width_val = -ui_rotation_angle_value;
  }
  ui_system_register[1] = ui_system_register[1] + ui_widget_width_val;
  ui_stack_temp_value = UI_ANIMATION_HANDLER_5;
  ui_widget_width_val = (float)ui_system_validate_widget_focus(ABS(ui_widget_height_val),ui_widget_width_val,ui_callback2);
  if (ui_widget_width_val <= 0.75) {
    ui_widget_width_val = 0.75;
  }
  ui_widget_height_val = ui_widget_width_val - ui_system_register[UI_OFFSET_22];
  if (0.001 <= ABS(ui_widget_height_val)) {
    ui_widget_width_val = ui_widget_height_val * ui_parameter_value._data_size_ + ui_system_register[UI_OFFSET_22];
  }
  ui_system_register[UI_OFFSET_22] = ui_widget_width_val;
  if ((ui_register_a <= ui_min_value) || (ui_system_register[UI_OFFSET_54] <= ui_min_value)) {
    ui_system_register[UI_MAX_EVENT_FLAGS] = 0.0;
  }
  else {
    ui_widget_width_val = ui_min_value;
    if (0 < (int)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS]) {
      float_ptr = ui_system_register + UI_GUARD_CHECK_TYPE;
      ui_event_id0 = (ulonglong)(uint)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS];
      do {
        pfloat_value = float_ptr + UI_WIDGET_ANIMATION_OFFSET_0X495;
        ui_widget_height_val = *float_ptr;
        float_ptr = float_ptr + UI_COMPONENT_DATA_END_OFFSET;
        ui_widget_width_val = ui_widget_width_val + *(float *)(**(longlong **)pfloat_value + UI_FLAG_BYTE_8) * ui_widget_height_val;
        ui_event_id0 = ui_event_id0 - 1;
      } while (ui_event_id0 != 0);
    }
    ui_stack_temp_value = UI_ANIMATION_HANDLER_6;
    ui_widget_width_val = (float)fmodf(ui_parameter_value._data_size_ / ui_widget_width_val + ui_system_register[UI_MAX_EVENT_FLAGS]);
    ui_system_register[UI_MAX_EVENT_FLAGS] = ui_widget_width_val;
  }
  ui_widget_height_val = ui_system_register[UI_SNAPSHOT_CREATE_FLAGS];
  ui_result_status = 0;
  ui_rotation_angle_value = ui_min_value;
  if (0 < (int)ui_widget_height_val) {
    float_ptr = ui_system_register + UI_GUARD_CHECK_TYPE;
    do {
      ui_stack_temp_value = UI_ANIMATION_HANDLER_7;
      ui_widget_width_val = (float)ui_system_remove_widget_focus(ui_widget_width_val,ui_result_status);
      ui_widget_width_val = ui_widget_width_val * *float_ptr;
      ui_result_status = ui_result_status + 1;
      float_ptr = float_ptr + UI_COMPONENT_DATA_END_OFFSET;
      ui_rotation_angle_value = ui_rotation_angle_value + ui_widget_width_val;
    } while (ui_result_status < (int)ui_widget_height_val);
    char_value_one = *(char *)(ui_system_register + UI_OFFSET_160);
  }
  if (ui_scale_factor_val < ui_max_value) {
    if (ui_system_register[UI_OFFSET_54] <= ui_max_value && ui_max_value != ui_system_register[UI_OFFSET_54]) {
      ui_widget_width_val = ui_rotation_angle_value * ui_parameter_value._data_size_ + ui_system_register[ui_component_angle_offset];
      ui_system_register[ui_component_angle_offset] = ui_widget_width_val;
      if (ui_max_value < ui_widget_width_val) {
        ui_system_register[ui_component_angle_offset] = ui_widget_width_val - ui_max_value;
      }
    }
    else if ((int)ui_widget_height_val < 1) {
      ui_system_register[ui_component_angle_offset] = ui_min_value;
    }
    else {
      ui_widget_width_val = ui_max_value;
      if (*(char *)(ui_system_register + UI_RENDER_RESOURCE_TYPE) != UI_CHAR_NULL) {
        ui_widget_width_val = -1.0;
      }
      ui_event_index = *(longlong *)(ui_system_register + (longlong)(int)ui_widget_height_val * 0x4d6 + -UI_FOCUS_STATE_OFFSET);
      ui_stack_temp_value = UI_ANIMATION_HANDLER_8;
      ui_event_index = ui_system_get_widget_property(*(uint64_t *)(ui_event_index + 8));
      ui_event_index = UI_SHIFT_AMOUNT_20;
      if (ui_min_value <= (ui_parameter_value._data_size_ - ABS((float)ui_parameter_value)) * ui_widget_width_val) {
        ui_event_index = UI_SNAPSHOT_CREATE_FLAGS;
      }
      ui_widget_width_val = *(float *)(ui_event_index + ui_event_index);
      ui_stack_temp_value = UI_ANIMATION_HANDLER_9;
      ui_system_get_widget_property(*(uint64_t *)(ui_event_index + 8));
      ui_system_register[ui_component_angle_offset] = ui_widget_width_val;
    }
  }
  ui_stack_coordinate_x = (float)((ulonglong)ui_system_register >> UI_OFFSET_32);
  ui_element_width = (float)ui_system_register;
  ui_widget_height_val = ui_stack_coordinate_x * ui_stack_coordinate_x +
           ui_element_width * ui_element_width;
  ui_widget_height_val = (float)(ui_widget_height_val <= 1.1754944e-38) * 1.1754944e-38 + ui_widget_height_val;
  ui_input_data_buffer = rsqrtss(ZEXT416((uint)ui_widget_height_val),ZEXT416((uint)ui_widget_height_val));
  ui_opacity_value = ui_input_data_buffer._data_offset_;
  ui_widget_width_val = ui_max_value;
  if (ui_stack_coordinate_x * ui_opacity_value * 0.5 * (3.0 - ui_widget_height_val * ui_opacity_value * ui_opacity_value) < -0.2) {
    ui_widget_width_val = ui_min_value;
  }
  ui_system_register[UI_RESOURCE_TYPE_CONFIG] = ui_widget_width_val;
  ui_element_width = (float)ui_widget_base;
  ui_stack_coordinate_x = (float)((ulonglong)ui_widget_base >> UI_OFFSET_32);
  if ((ui_transition_alpha_value != ui_min_value) || (ui_time_delta != ui_min_value)) {
    if (ui_min_value <= ui_element_width * ui_transition_alpha_value) {
      if (ABS(ui_element_width) < ABS(ui_transition_alpha_value)) {
        ui_element_width = ui_transition_alpha_value;
      }
    }
    else {
      ui_element_width = ui_element_width + ui_transition_alpha_value;
    }
    if (ui_min_value <= ui_time_delta * ui_stack_coordinate_x) {
      if (ABS(ui_stack_coordinate_x) < ABS(ui_time_delta)) {
        ui_stack_coordinate_x = ui_time_delta;
      }
    }
    else {
      ui_stack_coordinate_x = ui_stack_coordinate_x + ui_time_delta;
    }
  }
  ui_stack_temp_value = UI_ANIMATION_HANDLER_10;
  ui_widget_height_val = (float)atan2f(-ui_element_width,ui_stack_coordinate_x);
  ui_widget_height_val = ABS(ui_widget_height_val);
  if (1.5707964 < ui_widget_height_val) {
    ui_widget_height_val = 3.1415927 - ui_widget_height_val;
  }
  ui_widget_height_val = ui_widget_height_val * 0.63661975;
  ui_animation_progress = (ui_max_value - *(float *)(ui_system_register + UI_RENDER_CONTEXT_OFFSET)) * 0.3;
  ui_opacity_value = ui_min_value;
  if ((ui_animation_progress + 0.05 <= ui_widget_height_val) && (ui_opacity_value = ui_widget_height_val, 0.95 - ui_animation_progress < ui_widget_height_val)) {
    ui_opacity_value = ui_max_value;
  }
  ui_animation_progress = ui_opacity_value - ui_system_register[UI_LAYOUT_RESOURCE_TYPE];
  ui_distance_delta = ABS(ui_animation_progress);
  ui_widget_height_val = ui_opacity_value;
  if (0.001 <= ui_distance_delta) {
    ui_z_depth_value = ui_parameter_value._data_size_;
    if (ui_animation_progress < ui_min_value) {
      ui_z_depth_value = -ui_parameter_value._data_size_;
    }
    ui_animation_progress = 0.1;
    if ((0.1 <= ui_distance_delta) && (ui_animation_progress = ui_distance_delta, 0.5 <= ui_distance_delta)) {
      ui_animation_progress = 0.5;
    }
    ui_animation_progress = ui_z_depth_value * ui_animation_progress * 12.0;
    if (ABS(ui_animation_progress) <= ui_distance_delta) {
      ui_widget_height_val = ui_system_register[UI_LAYOUT_RESOURCE_TYPE] + ui_animation_progress;
    }
  }
  ui_system_register[UI_LAYOUT_RESOURCE_TYPE] = ui_widget_height_val;
  if ((((ui_parameter_value._data_size_ <= -0.1) || (ui_character_value == UI_CHAR_NULL)) || (char_value_one != UI_CHAR_NULL)) || (ui_time_delta <= -0.1)) {
UI_LABEL_DIALOG_EVENT_HANDLE:
    if ((ui_system_register[UI_RESOURCE_LOAD_TYPE] <= ui_min_value) || (ui_max_value <= ui_system_register[UI_RESOURCE_LOAD_TYPE])) {
      ui_system_register[UI_RESOURCE_LOAD_TYPE] = 0.0;
      ui_system_register[UI_NETWORK_RESOURCE_TYPE] = -1.0;
      goto UI_LABEL_DIALOG_UPDATE_START;
    }
  }
  else {
    ui_time_delta = ui_parameter_value._data_size_ * ui_parameter_value._data_size_ + ui_parameter_value._data_size_ * ui_parameter_value._data_size_;
    ui_time_delta = ui_time_delta + ui_time_delta;
    if (ui_time_delta <= ui_max_value) {
      ui_time_delta = ui_max_value;
    }
    if (-ui_time_delta <= (float)ui_parameter_value * ui_transition_alpha_value) goto UI_LABEL_DIALOG_EVENT_HANDLE;
  }
  ui_time_delta = ui_system_register[UI_RESOURCE_LOAD_TYPE];
  if (ui_time_delta == ui_min_value) {
    *(bool *)((longlong)ui_system_register + 0x5d) = ui_transition_alpha_value < ui_min_value;
  }
  ui_time_delta = (*(float *)(*(longlong *)
                        (*(longlong *)(ui_system_register + (longlong)(int)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS] * 0x4d6 + -UI_FOCUS_STATE_OFFSET) +
                        8) + UI_FLAG_BYTE_8) /
           *(float *)(*(longlong *)
                       (*(longlong *)(ui_system_register + (longlong)(int)ui_system_register[UI_SNAPSHOT_CREATE_FLAGS] * 0x4d6 + -UI_FOCUS_STATE_OFFSET) +
                       UI_MEMORY_DEALLOC_OFFSET) + UI_FLAG_BYTE_8)) * ui_rotation_angle_value * ui_parameter_value._data_size_ + ui_time_delta;
  if (ui_max_value <= ui_time_delta) {
    ui_time_delta = ui_max_value;
  }
  ui_system_register[UI_RESOURCE_LOAD_TYPE] = ui_time_delta;
  if (ui_system_register[UI_NETWORK_RESOURCE_TYPE] <= ui_min_value && ui_min_value != ui_system_register[UI_NETWORK_RESOURCE_TYPE]) {
    ui_widget_height_val = ui_max_value;
    if (*(char *)((longlong)ui_system_register + 0x5d) != UI_CHAR_NULL) {
      ui_widget_height_val = -1.0;
    }
    if (ui_min_value <= ui_widget_height_val * ui_transition_alpha_value) {
      ui_transition_alpha_value = ui_time_delta;
      if (*(char *)((longlong)ui_system_register + 0x5d) == UI_CHAR_NULL) {
        ui_stack_temp_value = UI_ANIMATION_HANDLER_11;
        ui_transition_alpha_value = (float)fmodf(ui_time_delta + 0.5);
      }
      ui_transition_alpha_value = ui_transition_alpha_value - ui_system_register[ui_component_angle_offset];
      if (ui_transition_alpha_value <= 0.5) {
        if (ui_transition_alpha_value < -0.5) {
          ui_transition_alpha_value = ui_transition_alpha_value + ui_max_value;
        }
      }
      else {
        ui_transition_alpha_value = ui_transition_alpha_value + -1.0;
      }
      ui_widget_height_val = ui_time_delta * ui_time_delta * ui_time_delta + ui_parameter_value._data_size_;
      if (ui_max_value <= ui_widget_height_val) {
        ui_widget_height_val = ui_max_value;
      }
      ui_transition_alpha_value = ui_widget_height_val * ui_time_delta * ui_transition_alpha_value + ui_system_register[ui_component_angle_offset];
      ui_system_register[ui_component_angle_offset] = ui_transition_alpha_value;
      if (ui_min_value <= ui_transition_alpha_value) {
        if (ui_max_value <= ui_transition_alpha_value) {
          ui_system_register[ui_component_angle_offset] = ui_transition_alpha_value - ui_max_value;
        }
      }
      else {
        ui_system_register[ui_component_angle_offset] = ui_transition_alpha_value + ui_max_value;
      }
    }
    else {
      ui_system_register[UI_NETWORK_RESOURCE_TYPE] = ui_time_delta + 0.25;
    }
  }
UI_LABEL_DIALOG_UPDATE_START:
  ui_transition_alpha_value = ui_system_register[UI_SHIFT_AMOUNT_20];
  ui_callback_primary._data_size_ = (ui_max_value - ui_transition_alpha_value) * (ui_max_value - ui_scale_factor_val);
  ui_widget_height_val = (ui_max_value - ui_widget_width_val) * ui_callback_primary._data_size_;
  ui_stack_coordinate_x = (ui_max_value - ui_opacity_value) * ui_widget_width_val * ui_callback_primary._data_size_;
  ui_widget_width_val = ui_widget_width_val * ui_callback_primary._data_size_ * ui_opacity_value;
  ui_rotation_angle_value = ui_widget_height_val * ui_opacity_value;
  ui_callback_primary._data_size_ = ui_callback_primary._data_size_ * ui_opacity_value;
  ui_stack_float_temp_value = ui_widget_width_val * (float)ui_parameter_value;
  *(float *)(ui_system_register + -UI_EVENT_ID_FOURTH_OFFSET) = ui_callback_primary._data_size_;
  *(float *)(ui_system_register + -UI_OFFSET_120) = ui_callback_primary._data_size_;
  *(float *)(ui_system_register + -UI_SIGNATURE_PART4) = (ui_max_value - ui_scale_factor_val) * ui_transition_alpha_value;
  ui_time_delta = (ui_max_value - (float)ui_parameter_value) * ui_rotation_angle_value;
  ui_callback1._data_size_ = (ui_max_value - (float)ui_parameter_value) * ui_widget_width_val;
  *(float *)(ui_system_register + -UI_STACK_SIZE_128) = ui_time_delta;
  if (((char)ui_parameter_value == UI_CHAR_NULL) || (ui_min_value < (float)ui_parameter_value)) {
    if (ui_transition_alpha_value <= ui_min_value) {
      ui_transition_alpha_value = 3.0;
    }
    else {
      ui_transition_alpha_value = 5.0;
    }
  }
  else {
    ui_transition_alpha_value = 2.0;
  }
  ui_animation_progress = ui_system_register[UI_OFFSET_4A];
  if (ui_scale_factor_val <= ui_animation_progress) {
    ui_animation_progress = ui_animation_progress - ui_transition_alpha_value * ui_parameter_value._data_size_;
    if (ui_animation_progress <= ui_scale_factor_val) {
      ui_animation_progress = ui_scale_factor_val;
    }
  }
  else {
    ui_animation_progress = ui_animation_progress + ui_transition_alpha_value * ui_parameter_value._data_size_;
    if (ui_scale_factor_val <= ui_animation_progress) {
      ui_animation_progress = ui_scale_factor_val;
    }
  }
  ui_system_register[UI_OFFSET_4A] = ui_animation_progress;
  ui_system_register[UI_OFFSET_54] = ui_animation_progress;
  ui_scale_factor_val = ui_system_register[UI_RESOURCE_LOAD_TYPE];
  if (0.2 <= ui_scale_factor_val) {
    ui_transition_alpha_value = ui_max_value;
    if (0.7 < ui_scale_factor_val) {
      ui_transition_alpha_value = (ui_max_value - ui_scale_factor_val) * 3.333333;
    }
  }
  else {
    ui_transition_alpha_value = ui_scale_factor_val * 5.0;
  }
  if (ui_min_value < ui_system_register[UI_NETWORK_RESOURCE_TYPE]) {
    ui_scale_factor_val = (ui_system_register[UI_NETWORK_RESOURCE_TYPE] - ui_scale_factor_val) * 4.0;
    if (ui_scale_factor_val <= ui_min_value) {
      ui_scale_factor_val = ui_min_value;
    }
    ui_transition_alpha_value = ui_transition_alpha_value * ui_scale_factor_val;
  }
  float_ptr = ui_system_register + UI_OFFSET_55;
  ui_result_status = 1;
  ui_scale_factor_val = ui_min_value;
  do {
    ui_animation_progress = *(float *)(((longlong)ui_stack_float_array_60e8 - (longlong)ui_system_register) + (longlong)float_ptr);
    ui_distance_delta = ui_animation_progress - float_ptr[-10];
    ui_z_depth_value = ABS(ui_distance_delta);
    if (0.001 <= ui_z_depth_value) {
      float_value = ui_max_value;
      if (ui_distance_delta < ui_min_value) {
        float_value = -1.0;
      }
      if (0.05 <= ui_z_depth_value) {
        if (0.5 <= ui_z_depth_value) {
          ui_z_depth_value = 0.5;
        }
      }
      else {
        ui_z_depth_value = 0.05;
      }
      ui_z_depth_value = ui_z_depth_value * float_value * ui_parameter_value._data_size_ * 6.0;
      if (ui_z_depth_value * float_value <= float_value * ui_distance_delta) {
        ui_animation_progress = float_ptr[-10] + ui_z_depth_value;
      }
    }
    float_ptr[-10] = ui_animation_progress;
    *float_ptr = ui_animation_progress;
    if (2 < ui_result_status) {
      if (ui_result_status < 7) {
        ui_distance_delta = ui_max_value - ui_transition_alpha_value;
      }
      else {
        ui_distance_delta = ui_min_value;
        if (ui_result_status == 7) {
          if (*(char *)((longlong)ui_system_register + 0x5d) == UI_CHAR_NULL) {
UI_LABEL_GENERIC_65a5b3:
            ui_distance_delta = ui_transition_alpha_value;
          }
        }
        else {
          if (ui_result_status != 8) goto UI_LABEL_DIALOG_INPUT_VALIDATE;
          if (*(char *)((longlong)ui_system_register + 0x5d) != UI_CHAR_NULL) goto UI_LABEL_GENERIC_65a5b3;
        }
      }
      ui_animation_progress = ui_distance_delta * ui_animation_progress;
      *float_ptr = ui_animation_progress;
    }
UI_LABEL_DIALOG_INPUT_VALIDATE:
    ui_distance_delta = *(float *)((longlong)ui_stack_float_array_60e8 + (4 - (longlong)ui_system_register) + (longlong)float_ptr);
    ui_z_depth_value = ui_distance_delta - float_ptr[-9];
    float_value = ABS(ui_z_depth_value);
    if (0.001 <= float_value) {
      float_value = ui_max_value;
      if (ui_z_depth_value < ui_min_value) {
        float_value = -1.0;
      }
      if (0.05 <= float_value) {
        if (0.5 <= float_value) {
          float_value = 0.5;
        }
      }
      else {
        float_value = 0.05;
      }
      float_value = float_value * float_value * ui_parameter_value._data_size_ * 6.0;
      if (float_value * float_value <= float_value * ui_z_depth_value) {
        ui_distance_delta = float_ptr[-9] + float_value;
      }
    }
    ui_result_status = ui_result_status + 1;
    float_ptr[-9] = ui_distance_delta;
    float_ptr[1] = ui_distance_delta;
    if (2 < ui_result_status) {
      if (ui_result_status < 7) {
        ui_z_depth_value = ui_max_value - ui_transition_alpha_value;
      }
      else {
        ui_z_depth_value = ui_min_value;
        if (ui_result_status == 7) {
          if (*(char *)((longlong)ui_system_register + 0x5d) == UI_CHAR_NULL) {
UI_LABEL_GENERIC_65a67b:
            ui_z_depth_value = ui_transition_alpha_value;
          }
        }
        else {
          if (ui_result_status != 8) goto UI_LABEL_DIALOG_CALLBACK_END;
          if (*(char *)((longlong)ui_system_register + 0x5d) != UI_CHAR_NULL) goto UI_LABEL_GENERIC_65a67b;
        }
      }
      ui_distance_delta = ui_z_depth_value * ui_distance_delta;
      float_ptr[1] = ui_distance_delta;
    }
UI_LABEL_DIALOG_CALLBACK_END:
    ui_z_depth_value = *(float *)((longlong)ui_stack_float_array_60e8 + (8 - (longlong)ui_system_register) + (longlong)float_ptr);
    float_value = ui_z_depth_value - float_ptr[-8];
    float_value = ABS(float_value);
    if (0.001 <= float_value) {
      float_value = ui_max_value;
      if (float_value < ui_min_value) {
        float_value = -1.0;
      }
      if (0.05 <= float_value) {
        if (0.5 <= float_value) {
          float_value = 0.5;
        }
      }
      else {
        float_value = 0.05;
      }
      float_value = float_value * float_value * ui_parameter_value._data_size_ * 6.0;
      if (float_value * float_value <= float_value * float_value) {
        ui_z_depth_value = float_ptr[-8] + float_value;
      }
    }
    ui_result_status = ui_result_status + 2;
    float_ptr[-8] = ui_z_depth_value;
    float_ptr[2] = ui_z_depth_value;
    if (2 < ui_result_status) {
      if (ui_result_status < 7) {
        float_value = ui_max_value - ui_transition_alpha_value;
      }
      else {
        float_value = ui_min_value;
        if (ui_result_status == 7) {
          if (*(char *)((longlong)ui_system_register + 0x5d) == UI_CHAR_NULL) {
UI_LABEL_GENERIC_65a744:
            float_value = ui_transition_alpha_value;
          }
        }
        else {
          if (ui_result_status != 8) goto UI_LABEL_DIALOG_CLEANUP_END;
          if (*(char *)((longlong)ui_system_register + 0x5d) != UI_CHAR_NULL) goto UI_LABEL_GENERIC_65a744;
        }
      }
      ui_z_depth_value = float_value * ui_z_depth_value;
      float_ptr[2] = ui_z_depth_value;
    }
UI_LABEL_DIALOG_CLEANUP_END:
    ui_result_status = ui_result_status + 3;
    ui_scale_factor_val = ui_scale_factor_val + ui_animation_progress + ui_distance_delta + ui_z_depth_value;
    float_ptr = float_ptr + 3;
    if (9 < ui_result_status) {
      ui_transition_alpha_value = ui_system_register[UI_OFFSET_54];
      ui_transition_alpha_value = ui_max_value - ((ui_transition_alpha_value * 6.0 - 15.0) * ui_transition_alpha_value + 10.0) * ui_transition_alpha_value * ui_transition_alpha_value * ui_transition_alpha_value;
      if (ui_scale_factor_val != ui_transition_alpha_value) {
        if (ui_scale_factor_val <= ui_min_value) {
          ui_system_register[UI_OFFSET_54] = 1.0;
        }
        else {
          ui_transition_alpha_value = ui_transition_alpha_value / ui_scale_factor_val;
          ui_system_register[UI_OFFSET_55] = ui_system_register[UI_OFFSET_55] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_56] = ui_system_register[UI_OFFSET_56] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_57] = ui_system_register[UI_OFFSET_57] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_58] = ui_system_register[UI_OFFSET_58] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_59] = ui_system_register[UI_OFFSET_59] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_5A] = ui_system_register[UI_OFFSET_5A] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_5B] = ui_system_register[UI_OFFSET_5B] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_5C] = ui_system_register[UI_OFFSET_5C] * ui_transition_alpha_value;
          ui_system_register[UI_OFFSET_5D] = ui_transition_alpha_value * ui_system_register[UI_OFFSET_5D];
        }
      }
      ui_widget_height_val = ui_stack_coordinate_x - (ui_max_value - ui_opacity_value) * ui_widget_height_val;
      ui_time_delta = ((((ui_rotation_angle_value + ui_widget_width_val) * (float)ui_parameter_value + ui_callback_primary._data_size_) - ui_callback1._data_size_) - ui_time_delta) -
               ui_callback_primary._data_size_;
      ui_scale_factor_val = ui_widget_height_val * ui_widget_height_val + ui_time_delta * ui_time_delta;
      ui_scale_factor_val = (float)(ui_scale_factor_val <= 1.1754944e-38) * 1.1754944e-38 + ui_scale_factor_val;
      ui_input_data_buffer = rsqrtss(ZEXT416((uint)ui_scale_factor_val),ZEXT416((uint)ui_scale_factor_val));
      ui_transition_alpha_value = ui_input_data_buffer._data_offset_;
      ui_scale_factor_val = ui_transition_alpha_value * 0.5 * (3.0 - ui_scale_factor_val * ui_transition_alpha_value * ui_transition_alpha_value);
      ui_widget_height_val = ui_scale_factor_val * ui_widget_height_val;
      ui_scale_factor_val = ui_scale_factor_val * ui_time_delta;
      _ui_element_width = CONCAT44(ui_widget_height_val,ui_scale_factor_val);
      if (ABS(ui_scale_factor_val * ui_system_register[UI_OFFSET_5E] + ui_widget_height_val * ui_system_register[UI_OFFSET_5F]) <= 0.999) {
        ui_time_delta = ui_system_register[UI_OFFSET_55] - ui_system_register[UI_OFFSET_56];
        ui_widget_width_val = (((ui_system_register[UI_OFFSET_58] + ui_system_register[UI_OFFSET_57] + ui_system_register[UI_OFFSET_5B]) - ui_system_register[UI_OFFSET_59])
                 - ui_system_register[UI_OFFSET_5A]) - ui_system_register[UI_OFFSET_5C];
        ui_scale_factor_val = ui_time_delta * ui_time_delta + ui_widget_width_val * ui_widget_width_val;
        ui_scale_factor_val = (float)(ui_scale_factor_val <= 1.1754944e-38) * 1.1754944e-38 + ui_scale_factor_val;
        ui_input_data_buffer = rsqrtss(ZEXT416((uint)ui_scale_factor_val),ZEXT416((uint)ui_scale_factor_val));
        ui_transition_alpha_value = ui_input_data_buffer._data_offset_;
        ui_parameter_value._data_size_ = ui_parameter_value._data_size_ * 8.0;
        ui_scale_factor_val = ui_transition_alpha_value * 0.5 * (3.0 - ui_scale_factor_val * ui_transition_alpha_value * ui_transition_alpha_value);
        _ui_element_width =
             CONCAT44(ui_scale_factor_val * ui_time_delta * ui_parameter_value._data_size_ +
                      (ui_max_value - ui_parameter_value._data_size_) * ui_system_register[UI_OFFSET_5F],
                      ui_scale_factor_val * ui_widget_width_val * ui_parameter_value._data_size_ +
                      (ui_max_value - ui_parameter_value._data_size_) * ui_system_register[UI_OFFSET_5E]);
        *(uint64_t *)(ui_system_register + UI_OFFSET_5E) = _ui_element_width;
        ui_scale_factor_val = ui_system_register[UI_OFFSET_5F];
        ui_transition_alpha_value = ui_system_register[UI_OFFSET_5E];
        ui_time_delta = ui_transition_alpha_value * ui_transition_alpha_value + ui_scale_factor_val * ui_scale_factor_val;
        ui_input_data_buffer = rsqrtss(ZEXT416((uint)ui_time_delta),ZEXT416((uint)ui_time_delta));
        ui_widget_width_val = ui_input_data_buffer._data_offset_;
        ui_time_delta = ui_widget_width_val * 0.5 * (3.0 - ui_time_delta * ui_widget_width_val * ui_widget_width_val);
        ui_system_register[UI_OFFSET_5F] = ui_time_delta * ui_scale_factor_val;
        ui_system_register[UI_OFFSET_5E] = ui_time_delta * ui_transition_alpha_value;
      }
      else {
        *(uint64_t *)(ui_system_register + UI_OFFSET_5E) = _ui_element_width;
      }
      ui_stack_temp_value = UI_ANIMATION_HANDLER_12;
      ui_stack_coordinate_x = ui_callback1._data_size_;
      RenderUIComponent(*(ulonglong *)(ui_system_register + -UI_WIDGET_DATA_OFFSET) ^ (ulonglong)&ui_stack_base_address);
    }
  } while( true );
}

void ui_system_cleanup_widget_resources(void)

{
  longlong ui_long_counter;
  uint8_t ui_system_task_id;
  float *float_ptr;
  int ui_result_status;
  uint64_t ui_widget_base;
  longlong ui_system_register_long;
  char ui_character_value;
  uint32_t ui_system_register;
  char ui_system_register;
  longlong ui_system_register_long;
  char ui_system_register;
  float ui_temp_float;
  float ui_widget_x_coord;
  float ui_widget_y_coord;
  float ui_widget_width;
  float ui_widget_height;
  float ui_animation_progress;
  float ui_transition_alpha;
  uint8_t aui_event_id6 [16];
  float ui_rotation_angle;
  float ui_opacity_value;
  float ui_min_value;
  float ui_register_a;
  float ui_max_value;
  float ui_register_a;
  float ui_z_depth;
  float ui_temp_float;
  float ui_register_a;
  char charuiui_stack_var_var;
  float uiAnimationSpeed;
  float ui_stack_transition_alpha;
  float ui_stack_float_temp_value;
  float ui_stack_coordinate_x;
  float ui_stack_float_temp_value;
  float ui_stack_coordinate_x;
  float ui_stack_float_array_60e8 [6200];
  uint64_t ui_stack_temp_value;
  
  *(float *)(ui_system_register + UI_TIME_DELTA_OFFSET) = ui_min_value;
  float_value = (float)ui_widget_base;
  ui_transition_alpha_value = (float)((ulonglong)ui_widget_base >> UI_OFFSET_32);
  if ((ui_register_a != ui_min_value) || (ui_register_a != ui_min_value)) {
    if (ui_min_value <= float_value * ui_register_a) {
      if (ABS(float_value) < ABS(ui_register_a)) {
        float_value = ui_register_a;
      }
    }
    else {
      float_value = float_value + ui_register_a;
    }
    if (ui_min_value <= ui_register_a * ui_transition_alpha_value) {
      if (ABS(ui_transition_alpha_value) < ABS(ui_register_a)) {
        ui_transition_alpha_value = ui_register_a;
      }
    }
    else {
      ui_transition_alpha_value = ui_transition_alpha_value + ui_register_a;
    }
  }
  ui_stack_temp_value = UI_ANIMATION_HANDLER_10;
  float_value = (float)atan2f(-float_value,ui_transition_alpha_value);
  float_value = ABS(float_value);
  if (1.5707964 < float_value) {
    float_value = ui_register_a - float_value;
  }
  float_value = float_value * 0.63661975;
  ui_widget_y_coord = (ui_max_value - *(float *)(ui_system_register + UI_RENDER_CONTEXT_OFFSET)) * 0.3;
  ui_transition_alpha_value = ui_min_value;
  if ((ui_widget_y_coord + 0.05 <= float_value) && (ui_transition_alpha_value = float_value, 0.95 - ui_widget_y_coord < float_value)) {
    ui_transition_alpha_value = ui_max_value;
  }
  ui_widget_y_coord = ui_transition_alpha_value - *(float *)(ui_system_register + 0x54);
  ui_rotation_angle_value = ABS(ui_widget_y_coord);
  float_value = ui_transition_alpha_value;
  if (0.001 <= ui_rotation_angle_value) {
    ui_z_depth_value = uiAnimationSpeed;
    if (ui_widget_y_coord < ui_min_value) {
      ui_z_depth_value = -uiAnimationSpeed;
    }
    ui_widget_y_coord = 0.1;
    if ((0.1 <= ui_rotation_angle_value) && (ui_widget_y_coord = ui_rotation_angle_value, 0.5 <= ui_rotation_angle_value)) {
      ui_widget_y_coord = 0.5;
    }
    ui_widget_y_coord = ui_z_depth_value * ui_widget_y_coord * 12.0;
    if (ABS(ui_widget_y_coord) <= ui_rotation_angle_value) {
      float_value = *(float *)(ui_system_register + 0x54) + ui_widget_y_coord;
    }
  }
  *(float *)(ui_system_register + 0x54) = float_value;
  if ((((ui_register_a <= -0.1) || (ui_system_register == UI_CHAR_NULL)) || (ui_system_register != UI_CHAR_NULL)) ||
     (ui_register_a <= -0.1)) {
UI_LABEL_DIALOG_EVENT_HANDLE:
    if ((*(float *)(ui_system_register + UI_OFFSET_68) <= ui_min_value) ||
       (ui_max_value <= *(float *)(ui_system_register + UI_OFFSET_68))) {
      *(uint32_t *)(ui_system_register + UI_OFFSET_68) = ui_system_register;
      *(uint32_t *)(ui_system_register + UI_OFFSET_72) = UI_FLOAT_NEGATIVE_ONE;
      goto UI_LABEL_DIALOG_UPDATE_START;
    }
  }
  else {
    float_value = ui_register_a * ui_register_a + ui_register_a * ui_register_a;
    float_value = float_value + float_value;
    if (float_value <= ui_max_value) {
      float_value = ui_max_value;
    }
    if (-float_value <= ui_register_a * ui_register_a) goto UI_LABEL_DIALOG_EVENT_HANDLE;
  }
  float_value = *(float *)(ui_system_register + UI_OFFSET_68);
  if (float_value == ui_min_value) {
    *(bool *)(ui_system_register + 0x5d) = ui_register_a < ui_min_value;
  }
  ui_long_counter = *(longlong *)((longlong)*(int *)(ui_system_register + UI_WIDGET_CREATE_CALLBACK_OFFSET) * UI_RESOURCE_TYPE_CONFIG58 + -UI_OFFSET_152 + ui_system_register);
  float_value = (*(float *)(*(longlong *)(ui_long_counter + 8) + UI_FLAG_BYTE_8) /
          *(float *)(*(longlong *)(ui_long_counter + UI_MEMORY_DEALLOC_OFFSET) + UI_FLAG_BYTE_8)) * ui_register_a * uiAnimationSpeed
          + float_value;
  if (ui_max_value <= float_value) {
    float_value = ui_max_value;
  }
  *(float *)(ui_system_register + UI_OFFSET_68) = float_value;
  if (*(float *)(ui_system_register + UI_OFFSET_72) <= ui_min_value && ui_min_value != *(float *)(ui_system_register + UI_OFFSET_72)
     ) {
    ui_widget_y_coord = ui_max_value;
    if (*(char *)(ui_system_register + 0x5d) != UI_CHAR_NULL) {
      ui_widget_y_coord = -1.0;
    }
    if (ui_min_value <= ui_widget_y_coord * ui_register_a) {
      ui_widget_y_coord = float_value;
      if (*(char *)(ui_system_register + 0x5d) == UI_CHAR_NULL) {
        ui_stack_temp_value = UI_ANIMATION_HANDLER_11;
        ui_widget_y_coord = (float)fmodf(float_value + 0.5);
      }
      ui_widget_y_coord = ui_widget_y_coord - *(float *)(ui_system_register + UI_MEMORY_DEALLOC_OFFSET);
      if (ui_widget_y_coord <= 0.5) {
        if (ui_widget_y_coord < -0.5) {
          ui_widget_y_coord = ui_widget_y_coord + ui_max_value;
        }
      }
      else {
        ui_widget_y_coord = ui_widget_y_coord + -1.0;
      }
      ui_rotation_angle_value = float_value * float_value * float_value + uiAnimationSpeed;
      if (ui_max_value <= ui_rotation_angle_value) {
        ui_rotation_angle_value = ui_max_value;
      }
      float_value = ui_rotation_angle_value * float_value * ui_widget_y_coord + *(float *)(ui_system_register + UI_MEMORY_DEALLOC_OFFSET);
      *(float *)(ui_system_register + UI_MEMORY_DEALLOC_OFFSET) = float_value;
      if (ui_min_value <= float_value) {
        if (ui_max_value <= float_value) {
          *(float *)(ui_system_register + UI_MEMORY_DEALLOC_OFFSET) = float_value - ui_max_value;
        }
      }
      else {
        *(float *)(ui_system_register + UI_MEMORY_DEALLOC_OFFSET) = float_value + ui_max_value;
      }
    }
    else {
      *(float *)(ui_system_register + UI_OFFSET_72) = float_value + 0.25;
    }
  }
UI_LABEL_DIALOG_UPDATE_START:
  float_value = *(float *)(ui_system_register + UI_OFFSET_80);
  ui_stack_float_temp_value = (ui_max_value - float_value) * (ui_max_value - ui_register_a);
  ui_z_depth_value = (ui_max_value - ui_min_value) * ui_stack_float_temp_value;
  ui_stack_coordinate_x = (ui_max_value - ui_transition_alpha_value) * ui_min_value * ui_stack_float_temp_value;
  ui_rotation_angle_value = ui_min_value * ui_stack_float_temp_value * ui_transition_alpha_value;
  float_value = ui_z_depth_value * ui_transition_alpha_value;
  ui_stack_float_temp_value = ui_stack_float_temp_value * ui_transition_alpha_value;
  ui_stack_float_temp_value = ui_rotation_angle_value * ui_stack_transition_alpha;
  *(float *)(ui_system_register + -UI_EVENT_ID_FOURTH_OFFSET) = ui_stack_float_temp_value;
  *(float *)(ui_system_register + -UI_OFFSET_120) = ui_stack_float_temp_value;
  *(float *)(ui_system_register + -UI_SIGNATURE_PART4) = (ui_max_value - ui_register_a) * float_value;
  ui_widget_y_coord = (ui_max_value - ui_stack_transition_alpha) * float_value;
  ui_stack_coordinate_x = (ui_max_value - ui_stack_transition_alpha) * ui_rotation_angle_value;
  *(float *)(ui_system_register + -UI_STACK_SIZE_128) = ui_widget_y_coord;
  ui_character_value = (char)ui_system_register;
  if ((charuiui_stack_var_var == ui_character_value) || (ui_min_value < ui_stack_transition_alpha)) {
    if (float_value <= ui_min_value) {
      float_value = 3.0;
    }
    else {
      float_value = 5.0;
    }
  }
  else {
    float_value = 2.0;
  }
  float_value = *(float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6128);
  if (ui_register_a <= float_value) {
    float_value = float_value - float_value * uiAnimationSpeed;
    if (float_value <= ui_register_a) {
      float_value = ui_register_a;
    }
  }
  else {
    float_value = float_value + float_value * uiAnimationSpeed;
    if (ui_register_a <= float_value) {
      float_value = ui_register_a;
    }
  }
  *(float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6128) = float_value;
  *(float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6150) = float_value;
  float_value = *(float *)(ui_system_register + UI_OFFSET_68);
  if (0.2 <= float_value) {
    float_value = ui_max_value;
    if (0.7 < float_value) {
      float_value = (ui_max_value - float_value) * 3.333333;
    }
  }
  else {
    float_value = float_value * 5.0;
  }
  if (ui_min_value < *(float *)(ui_system_register + UI_OFFSET_72)) {
    float_value = (*(float *)(ui_system_register + UI_OFFSET_72) - float_value) * 4.0;
    if (float_value <= ui_min_value) {
      float_value = ui_min_value;
    }
    float_value = float_value * float_value;
  }
  float_ptr = (float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6154);
  ui_result_status = 1;
  float_value = ui_min_value;
  do {
    ui_widget_x_coord = *(float *)(((longlong)ui_stack_float_array_60e8 - ui_system_register) + (longlong)float_ptr);
    float_value = ui_widget_x_coord - float_ptr[-10];
    ui_widget_width_val = ABS(float_value);
    if (0.001 <= ui_widget_width_val) {
      ui_widget_height_val = ui_max_value;
      if (float_value < ui_min_value) {
        ui_widget_height_val = -1.0;
      }
      if (0.05 <= ui_widget_width_val) {
        if (0.5 <= ui_widget_width_val) {
          ui_widget_width_val = 0.5;
        }
      }
      else {
        ui_widget_width_val = 0.05;
      }
      ui_widget_width_val = ui_widget_width_val * ui_widget_height_val * uiAnimationSpeed * 6.0;
      if (ui_widget_width_val * ui_widget_height_val <= ui_widget_height_val * float_value) {
        ui_widget_x_coord = float_ptr[-10] + ui_widget_width_val;
      }
    }
    float_ptr[-10] = ui_widget_x_coord;
    *float_ptr = ui_widget_x_coord;
    if (2 < ui_result_status) {
      if (ui_result_status < 7) {
        float_value = ui_max_value - float_value;
      }
      else {
        float_value = ui_min_value;
        if (ui_result_status == 7) {
          if (*(char *)(ui_system_register + 0x5d) == ui_character_value) {
UI_LABEL_GENERIC_65a5b3:
            float_value = float_value;
          }
        }
        else {
          if (ui_result_status != 8) goto UI_LABEL_DIALOG_INPUT_VALIDATE;
          if (*(char *)(ui_system_register + 0x5d) != ui_character_value) goto UI_LABEL_GENERIC_65a5b3;
        }
      }
      ui_widget_x_coord = float_value * ui_widget_x_coord;
      *float_ptr = ui_widget_x_coord;
    }
UI_LABEL_DIALOG_INPUT_VALIDATE:
    float_value = *(float *)((longlong)ui_stack_float_array_60e8 + (4 - ui_system_register) + (longlong)float_ptr);
    ui_widget_width_val = float_value - float_ptr[-9];
    ui_widget_height_val = ABS(ui_widget_width_val);
    if (0.001 <= ui_widget_height_val) {
      ui_animation_progress = ui_max_value;
      if (ui_widget_width_val < ui_min_value) {
        ui_animation_progress = -1.0;
      }
      if (0.05 <= ui_widget_height_val) {
        if (0.5 <= ui_widget_height_val) {
          ui_widget_height_val = 0.5;
        }
      }
      else {
        ui_widget_height_val = 0.05;
      }
      ui_widget_height_val = ui_widget_height_val * ui_animation_progress * uiAnimationSpeed * 6.0;
      if (ui_widget_height_val * ui_animation_progress <= ui_animation_progress * ui_widget_width_val) {
        float_value = float_ptr[-9] + ui_widget_height_val;
      }
    }
    ui_result_status = ui_result_status + 1;
    float_ptr[-9] = float_value;
    float_ptr[1] = float_value;
    if (2 < ui_result_status) {
      if (ui_result_status < 7) {
        ui_widget_width_val = ui_max_value - float_value;
      }
      else {
        ui_widget_width_val = ui_min_value;
        if (ui_result_status == 7) {
          if (*(char *)(ui_system_register + 0x5d) == ui_character_value) {
UI_LABEL_GENERIC_65a67b:
            ui_widget_width_val = float_value;
          }
        }
        else {
          if (ui_result_status != 8) goto UI_LABEL_DIALOG_CALLBACK_END;
          if (*(char *)(ui_system_register + 0x5d) != ui_character_value) goto UI_LABEL_GENERIC_65a67b;
        }
      }
      float_value = ui_widget_width_val * float_value;
      float_ptr[1] = float_value;
    }
UI_LABEL_DIALOG_CALLBACK_END:
    ui_widget_width_val = *(float *)((longlong)ui_stack_float_array_60e8 + (8 - ui_system_register) + (longlong)float_ptr);
    ui_widget_height_val = ui_widget_width_val - float_ptr[-8];
    ui_animation_progress = ABS(ui_widget_height_val);
    if (0.001 <= ui_animation_progress) {
      ui_opacity_value = ui_max_value;
      if (ui_widget_height_val < ui_min_value) {
        ui_opacity_value = -1.0;
      }
      if (0.05 <= ui_animation_progress) {
        if (0.5 <= ui_animation_progress) {
          ui_animation_progress = 0.5;
        }
      }
      else {
        ui_animation_progress = 0.05;
      }
      ui_animation_progress = ui_animation_progress * ui_opacity_value * uiAnimationSpeed * 6.0;
      if (ui_animation_progress * ui_opacity_value <= ui_opacity_value * ui_widget_height_val) {
        ui_widget_width_val = float_ptr[-8] + ui_animation_progress;
      }
    }
    ui_result_status = ui_result_status + 2;
    float_ptr[-8] = ui_widget_width_val;
    float_ptr[2] = ui_widget_width_val;
    if (2 < ui_result_status) {
      if (ui_result_status < 7) {
        ui_widget_height_val = ui_max_value - float_value;
      }
      else {
        ui_widget_height_val = ui_min_value;
        if (ui_result_status == 7) {
          if (*(char *)(ui_system_register + 0x5d) == ui_character_value) {
UI_LABEL_GENERIC_65a744:
            ui_widget_height_val = float_value;
          }
        }
        else {
          if (ui_result_status != 8) goto UI_LABEL_DIALOG_CLEANUP_END;
          if (*(char *)(ui_system_register + 0x5d) != ui_character_value) goto UI_LABEL_GENERIC_65a744;
        }
      }
      ui_widget_width_val = ui_widget_height_val * ui_widget_width_val;
      float_ptr[2] = ui_widget_width_val;
    }
UI_LABEL_DIALOG_CLEANUP_END:
    ui_result_status = ui_result_status + 3;
    float_value = float_value + ui_widget_x_coord + float_value + ui_widget_width_val;
    float_ptr = float_ptr + 3;
    if (9 < ui_result_status) {
      float_value = *(float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6150);
      float_value = ui_max_value - ((float_value * 6.0 - 15.0) * float_value + 10.0) * float_value * float_value * float_value;
      if (float_value != float_value) {
        if (float_value <= ui_min_value) {
          *(uint32_t *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6150) = UI_BIT_SHIFT_63800000;
        }
        else {
          float_value = float_value / float_value;
          *(float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6154) = *(float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6154) * float_value;
          *(float *)(ui_system_register + 0x6158) = *(float *)(ui_system_register + 0x6158) * float_value;
          *(float *)(ui_system_register + 0x615c) = *(float *)(ui_system_register + 0x615c) * float_value;
          *(float *)(ui_system_register + 0x6160) = *(float *)(ui_system_register + 0x6160) * float_value;
          *(float *)(ui_system_register + 0x6164) = *(float *)(ui_system_register + 0x6164) * float_value;
          *(float *)(ui_system_register + 0x6168) = *(float *)(ui_system_register + 0x6168) * float_value;
          *(float *)(ui_system_register + 0x616c) = *(float *)(ui_system_register + 0x616c) * float_value;
          *(float *)(ui_system_register + 0x6170) = *(float *)(ui_system_register + 0x6170) * float_value;
          *(float *)(ui_system_register + 0x6174) = float_value * *(float *)(ui_system_register + 0x6174);
        }
      }
      ui_z_depth_value = ui_stack_coordinate_x - (ui_max_value - ui_transition_alpha_value) * ui_z_depth_value;
      ui_widget_y_coord = ((((float_value + ui_rotation_angle_value) * ui_stack_transition_alpha + ui_stack_float_temp_value) -
                ui_stack_coordinate_x) - ui_widget_y_coord) - ui_stack_float_temp_value;
      float_value = ui_z_depth_value * ui_z_depth_value + ui_widget_y_coord * ui_widget_y_coord;
      ui_system_task_id = (uint8_t)((uint)ui_system_register >> 8);
      float_value = (float)CONCAT31(ui_system_task_id,float_value <= 1.1754944e-38) * 1.1754944e-38 + float_value;
      aui_event_id6 = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
      ui_transition_alpha_value = aui_event_id6._data_offset_;
      float_value = ui_transition_alpha_value * 0.5 * (3.0 - float_value * ui_transition_alpha_value * ui_transition_alpha_value);
      ui_z_depth_value = float_value * ui_z_depth_value;
      float_value = float_value * ui_widget_y_coord;
      if (ABS(float_value * *(float *)(ui_system_register + 0x6178) + ui_z_depth_value * *(float *)(ui_system_register + 0x617c)) <=
          0.999) {
        ui_widget_y_coord = *(float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6154) - *(float *)(ui_system_register + 0x6158);
        ui_rotation_angle_value = (((*(float *)(ui_system_register + 0x6160) + *(float *)(ui_system_register + 0x615c) +
                   *(float *)(ui_system_register + 0x616c)) - *(float *)(ui_system_register + 0x6164)) -
                 *(float *)(ui_system_register + 0x6168)) - *(float *)(ui_system_register + 0x6170);
        float_value = ui_widget_y_coord * ui_widget_y_coord + ui_rotation_angle_value * ui_rotation_angle_value;
        float_value = (float)CONCAT31(ui_system_task_id,float_value <= 1.1754944e-38) * 1.1754944e-38 + float_value;
        aui_event_id6 = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
        ui_transition_alpha_value = aui_event_id6._data_offset_;
        uiAnimationSpeed = uiAnimationSpeed * 8.0;
        float_value = ui_transition_alpha_value * 0.5 * (3.0 - float_value * ui_transition_alpha_value * ui_transition_alpha_value);
        *(ulonglong *)(ui_system_register + 0x6178) =
             CONCAT44(float_value * ui_widget_y_coord * uiAnimationSpeed +
                      (ui_max_value - uiAnimationSpeed) * *(float *)(ui_system_register + 0x617c),
                      float_value * ui_rotation_angle_value * uiAnimationSpeed +
                      (ui_max_value - uiAnimationSpeed) * *(float *)(ui_system_register + 0x6178));
        float_value = *(float *)(ui_system_register + 0x617c);
        ui_transition_alpha_value = *(float *)(ui_system_register + 0x6178);
        ui_widget_y_coord = ui_transition_alpha_value * ui_transition_alpha_value + float_value * float_value;
        aui_event_id6 = rsqrtss(ZEXT416((uint)ui_widget_y_coord),ZEXT416((uint)ui_widget_y_coord));
        ui_rotation_angle_value = aui_event_id6._data_offset_;
        ui_widget_y_coord = ui_rotation_angle_value * 0.5 * (3.0 - ui_widget_y_coord * ui_rotation_angle_value * ui_rotation_angle_value);
        *(float *)(ui_system_register + 0x617c) = ui_widget_y_coord * float_value;
        *(float *)(ui_system_register + 0x6178) = ui_widget_y_coord * ui_transition_alpha_value;
      }
      else {
        *(ulonglong *)(ui_system_register + 0x6178) = CONCAT44(ui_z_depth_value,float_value);
      }
      ui_stack_temp_value = UI_ANIMATION_HANDLER_12;
      ui_stack_coordinate_x = ui_stack_coordinate_x;
      RenderUIComponent(*(ulonglong *)(ui_system_register + -UI_WIDGET_DATA_OFFSET) ^ (ulonglong)&ui_stack_base_address);
    }
  } while( true );
}

void ui_system_handle_widget_hover(uint64_t ui_callback,uint64_t ui_event_type,float ui_event_data,float ui_event_flags,
                  uint64_t ui_parameter_value,uint64_t ui_parameter_value,float ui_parameter_value,float ui_parameter_value,float ui_parameter_value,
                  uint64_t ui_callback_primary,uint64_t ui_callback1,float ui_callback2)

{
  uint8_t ui_system_event_id;
  float *float_ptr;
  int ui_result_status;
  float *ui_widget_base;
  longlong ui_system_register_long;
  char ui_character_value;
  uint32_t ui_system_register;
  longlong ui_system_register_long;
  float ui_temp_float;
  float ui_widget_x_coord;
  float ui_widget_y_coord;
  uint8_t aui_event_id_secondary [16];
  uint in_XMM5_Da;
  float ui_widget_height;
  float ui_min_value;
  float ui_register_a;
  float ui_max_value;
  float ui_register_a;
  float ui_stack_coordinate_x;
  float ui_stack_float_array_60e8 [6200];
  uint64_t ui_stack_temp_value;
  
  if (ui_min_value < ui_register_a) {
    float_value = ui_event_flags;
    if (ui_event_data <= ui_min_value) {
      float_value = 3.0;
    }
  }
  else {
    float_value = 2.0;
  }
  float_value = *(float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6128);
  if (ui_register_a <= float_value) {
    float_value = float_value - float_value * ui_parameter_value._data_size_;
    if (float_value <= ui_register_a) {
      float_value = ui_register_a;
    }
  }
  else {
    float_value = float_value + float_value * ui_parameter_value._data_size_;
    if (ui_register_a <= float_value) {
      float_value = ui_register_a;
    }
  }
  *(float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6128) = float_value;
  *(float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6150) = float_value;
  float_value = *ui_widget_base;
  if (0.2 <= float_value) {
    float_value = ui_max_value;
    if (0.7 < float_value) {
      float_value = (ui_max_value - float_value) * 3.333333;
    }
  }
  else {
    float_value = float_value * ui_event_flags;
  }
  if (ui_min_value < *(float *)(ui_system_register + UI_OFFSET_72)) {
    float_value = (*(float *)(ui_system_register + UI_OFFSET_72) - float_value) * 4.0;
    if (float_value <= ui_min_value) {
      float_value = ui_min_value;
    }
    float_value = float_value * float_value;
  }
  float_ptr = (float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6154);
  ui_result_status = 1;
  do {
    float_value = *(float *)(((longlong)ui_stack_float_array_60e8 - ui_system_register) + (longlong)float_ptr);
    float_value = float_value - float_ptr[-10];
    float_value = (float)((uint)float_value & in_XMM5_Da);
    if (0.001 <= float_value) {
      ui_widget_x_coord = ui_register_a;
      if (ui_min_value <= float_value) {
        ui_widget_x_coord = ui_max_value;
      }
      if (0.05 <= float_value) {
        if (0.5 <= float_value) {
          float_value = 0.5;
        }
      }
      else {
        float_value = 0.05;
      }
      float_value = float_value * ui_widget_x_coord * ui_parameter_value._data_size_ * 6.0;
      in_XMM5_Da = UI_INT32_MAX;
      if (float_value * ui_widget_x_coord <= ui_widget_x_coord * float_value) {
        float_value = float_ptr[-10] + float_value;
      }
    }
    float_ptr[-10] = float_value;
    *float_ptr = float_value;
    ui_character_value = (char)ui_system_register;
    if (2 < ui_result_status) {
      if (ui_result_status < 7) {
        float_value = ui_max_value - float_value;
      }
      else {
        float_value = ui_min_value;
        if (ui_result_status == 7) {
          if (*(char *)(ui_system_register + 0x5d) == ui_character_value) {
UI_LABEL_GENERIC_65a5b3:
            float_value = float_value;
          }
        }
        else {
          if (ui_result_status != 8) goto UI_LABEL_DIALOG_INPUT_VALIDATE;
          if (*(char *)(ui_system_register + 0x5d) != ui_character_value) goto UI_LABEL_GENERIC_65a5b3;
        }
      }
      float_value = float_value * float_value;
      *float_ptr = float_value;
    }
UI_LABEL_DIALOG_INPUT_VALIDATE:
    float_value = *(float *)((longlong)ui_stack_float_array_60e8 + (4 - ui_system_register) + (longlong)float_ptr);
    float_value = float_value - float_ptr[-9];
    ui_widget_x_coord = (float)((uint)float_value & in_XMM5_Da);
    if (0.001 <= ui_widget_x_coord) {
      ui_widget_y_coord = ui_register_a;
      if (ui_min_value <= float_value) {
        ui_widget_y_coord = ui_max_value;
      }
      if (0.05 <= ui_widget_x_coord) {
        if (0.5 <= ui_widget_x_coord) {
          ui_widget_x_coord = 0.5;
        }
      }
      else {
        ui_widget_x_coord = 0.05;
      }
      ui_widget_x_coord = ui_widget_x_coord * ui_widget_y_coord * ui_parameter_value._data_size_ * 6.0;
      in_XMM5_Da = UI_INT32_MAX;
      if (ui_widget_x_coord * ui_widget_y_coord <= ui_widget_y_coord * float_value) {
        float_value = float_ptr[-9] + ui_widget_x_coord;
      }
    }
    ui_result_status = ui_result_status + 1;
    float_ptr[-9] = float_value;
    float_ptr[1] = float_value;
    if (2 < ui_result_status) {
      if (ui_result_status < 7) {
        float_value = ui_max_value - float_value;
      }
      else {
        float_value = ui_min_value;
        if (ui_result_status == 7) {
          if (*(char *)(ui_system_register + 0x5d) == ui_character_value) {
UI_LABEL_GENERIC_65a67b:
            float_value = float_value;
          }
        }
        else {
          if (ui_result_status != 8) goto UI_LABEL_DIALOG_CALLBACK_END;
          if (*(char *)(ui_system_register + 0x5d) != ui_character_value) goto UI_LABEL_GENERIC_65a67b;
        }
      }
      float_value = float_value * float_value;
      float_ptr[1] = float_value;
    }
UI_LABEL_DIALOG_CALLBACK_END:
    float_value = *(float *)((longlong)ui_stack_float_array_60e8 + (8 - ui_system_register) + (longlong)float_ptr);
    ui_widget_x_coord = float_value - float_ptr[-8];
    ui_widget_y_coord = (float)((uint)ui_widget_x_coord & in_XMM5_Da);
    if (0.001 <= ui_widget_y_coord) {
      ui_widget_height_val = ui_register_a;
      if (ui_min_value <= ui_widget_x_coord) {
        ui_widget_height_val = ui_max_value;
      }
      if (0.05 <= ui_widget_y_coord) {
        if (0.5 <= ui_widget_y_coord) {
          ui_widget_y_coord = 0.5;
        }
      }
      else {
        ui_widget_y_coord = 0.05;
      }
      ui_widget_y_coord = ui_widget_y_coord * ui_widget_height_val * ui_parameter_value._data_size_ * 6.0;
      in_XMM5_Da = UI_INT32_MAX;
      if (ui_widget_y_coord * ui_widget_height_val <= ui_widget_height_val * ui_widget_x_coord) {
        float_value = float_ptr[-8] + ui_widget_y_coord;
      }
    }
    ui_result_status = ui_result_status + 2;
    float_ptr[-8] = float_value;
    float_ptr[2] = float_value;
    if (2 < ui_result_status) {
      if (ui_result_status < 7) {
        ui_widget_x_coord = ui_max_value - float_value;
      }
      else {
        ui_widget_x_coord = ui_min_value;
        if (ui_result_status == 7) {
          if (*(char *)(ui_system_register + 0x5d) == ui_character_value) {
UI_LABEL_GENERIC_65a744:
            ui_widget_x_coord = float_value;
          }
        }
        else {
          if (ui_result_status != 8) goto UI_LABEL_DIALOG_CLEANUP_END;
          if (*(char *)(ui_system_register + 0x5d) != ui_character_value) goto UI_LABEL_GENERIC_65a744;
        }
      }
      float_value = ui_widget_x_coord * float_value;
      float_ptr[2] = float_value;
    }
UI_LABEL_DIALOG_CLEANUP_END:
    ui_result_status = ui_result_status + 3;
    ui_register_a = ui_register_a + float_value + float_value + float_value;
    float_ptr = float_ptr + 3;
    if (9 < ui_result_status) {
      float_value = *(float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6150);
      float_value = ui_max_value - ((float_value * 6.0 - 15.0) * float_value + 10.0) * float_value * float_value * float_value;
      if (ui_register_a != float_value) {
        if (ui_register_a <= ui_min_value) {
          *(uint32_t *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6150) = UI_BIT_SHIFT_63800000;
        }
        else {
          float_value = float_value / ui_register_a;
          *(float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6154) = *(float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6154) * float_value;
          *(float *)(ui_system_register + 0x6158) = *(float *)(ui_system_register + 0x6158) * float_value;
          *(float *)(ui_system_register + 0x615c) = *(float *)(ui_system_register + 0x615c) * float_value;
          *(float *)(ui_system_register + 0x6160) = *(float *)(ui_system_register + 0x6160) * float_value;
          *(float *)(ui_system_register + 0x6164) = *(float *)(ui_system_register + 0x6164) * float_value;
          *(float *)(ui_system_register + 0x6168) = *(float *)(ui_system_register + 0x6168) * float_value;
          *(float *)(ui_system_register + 0x616c) = *(float *)(ui_system_register + 0x616c) * float_value;
          *(float *)(ui_system_register + 0x6170) = *(float *)(ui_system_register + 0x6170) * float_value;
          *(float *)(ui_system_register + 0x6174) = float_value * *(float *)(ui_system_register + 0x6174);
        }
      }
      ui_parameter_value = ui_parameter_value - ui_parameter_value;
      ui_callback_primary._data_size_ =
           (((((float)ui_callback_primary + (float)ui_callback1) * ui_parameter_value + ui_callback_primary._data_size_) - ui_callback1._data_size_) -
           ui_callback2) - ui_callback_primary._data_size_;
      float_value = ui_parameter_value * ui_parameter_value + ui_callback_primary._data_size_ * ui_callback_primary._data_size_;
      ui_system_event_id = (uint8_t)((uint)ui_system_register >> 8);
      float_value = (float)CONCAT31(ui_system_event_id,float_value <= 1.1754944e-38) * 1.1754944e-38 + float_value;
      aui_event_id_secondary = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
      float_value = aui_event_id_secondary._data_offset_;
      float_value = float_value * 0.5 * (3.0 - float_value * float_value * float_value);
      ui_stack_coordinate_x = float_value * ui_parameter_value;
      float_value = float_value * ui_callback_primary._data_size_;
      if ((float)((uint)(float_value * *(float *)(ui_system_register + 0x6178) +
                        ui_stack_coordinate_x * *(float *)(ui_system_register + 0x617c)) & in_XMM5_Da) <=
          0.999) {
        float_value = *(float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6154) - *(float *)(ui_system_register + 0x6158);
        float_value = (((*(float *)(ui_system_register + 0x6160) + *(float *)(ui_system_register + 0x615c) +
                  *(float *)(ui_system_register + 0x616c)) - *(float *)(ui_system_register + 0x6164)) -
                *(float *)(ui_system_register + 0x6168)) - *(float *)(ui_system_register + 0x6170);
        float_value = float_value * float_value + float_value * float_value;
        float_value = (float)CONCAT31(ui_system_event_id,float_value <= 1.1754944e-38) * 1.1754944e-38 + float_value;
        aui_event_id_secondary = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
        float_value = aui_event_id_secondary._data_offset_;
        ui_parameter_value._data_size_ = ui_parameter_value._data_size_ * 8.0;
        float_value = float_value * 0.5 * (3.0 - float_value * float_value * float_value);
        ui_stack_coordinate_x =
             float_value * float_value * ui_parameter_value._data_size_ +
             (ui_max_value - ui_parameter_value._data_size_) * *(float *)(ui_system_register + 0x617c);
        *(ulonglong *)(ui_system_register + 0x6178) =
             CONCAT44(ui_stack_coordinate_x,
                      float_value * float_value * ui_parameter_value._data_size_ +
                      (ui_max_value - ui_parameter_value._data_size_) * *(float *)(ui_system_register + 0x6178));
        float_value = *(float *)(ui_system_register + 0x617c);
        float_value = *(float *)(ui_system_register + 0x6178);
        float_value = float_value * float_value + float_value * float_value;
        aui_event_id_secondary = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
        float_value = aui_event_id_secondary._data_offset_;
        float_value = float_value * 0.5 * (3.0 - float_value * float_value * float_value);
        *(float *)(ui_system_register + 0x617c) = float_value * float_value;
        *(float *)(ui_system_register + 0x6178) = float_value * float_value;
      }
      else {
        *(ulonglong *)(ui_system_register + 0x6178) = CONCAT44(ui_stack_coordinate_x,float_value);
      }
      ui_stack_temp_value = UI_ANIMATION_HANDLER_12;
      RenderUIComponent(*(ulonglong *)(ui_system_register + -UI_WIDGET_DATA_OFFSET) ^ (ulonglong)&ui_stack_base_address);
    }
  } while( true );
}

void ui_system_update_widget_style(uint64_t ui_callback,float ui_event_type,uint64_t ui_event_data,float ui_event_flags,
                  uint64_t ui_parameter_value,uint64_t ui_parameter_value,float ui_parameter_value,float ui_parameter_value,float ui_parameter_value,
                  uint64_t ui_callback_primary,uint64_t ui_callback1,float ui_callback2)

{
  uint8_t ui_system_event_id;
  float *float_ptr;
  int ui_result_status;
  longlong ui_system_register_long;
  char ui_character_value;
  uint32_t ui_system_register;
  longlong ui_system_register_long;
  float ui_temp_float;
  float ui_widget_x_coord;
  uint8_t aui_event_id1 [16];
  uint in_XMM5_Da;
  float ui_widget_width;
  float ui_min_value;
  float ui_max_value;
  float ui_register_a;
  float ui_stack_coordinate_x;
  float ui_stack_float_array_60e8 [6200];
  uint64_t ui_stack_temp_value;
  
  ui_event_flags = ui_event_type * ui_event_flags;
  if (ui_min_value < *(float *)(ui_system_register + UI_OFFSET_72)) {
    float_value = (*(float *)(ui_system_register + UI_OFFSET_72) - ui_event_type) * 4.0;
    if (float_value <= ui_min_value) {
      float_value = ui_min_value;
    }
    ui_event_flags = ui_event_flags * float_value;
  }
  float_ptr = (float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6154);
  ui_result_status = 1;
  do {
    float_value = *(float *)(((longlong)ui_stack_float_array_60e8 - ui_system_register) + (longlong)float_ptr);
    float_value = float_value - float_ptr[-10];
    float_value = (float)((uint)float_value & in_XMM5_Da);
    if (0.001 <= float_value) {
      float_value = ui_register_a;
      if (ui_min_value <= float_value) {
        float_value = ui_max_value;
      }
      if (0.05 <= float_value) {
        if (0.5 <= float_value) {
          float_value = 0.5;
        }
      }
      else {
        float_value = 0.05;
      }
      float_value = float_value * float_value * ui_parameter_value._data_size_ * 6.0;
      in_XMM5_Da = UI_INT32_MAX;
      if (float_value * float_value <= float_value * float_value) {
        float_value = float_ptr[-10] + float_value;
      }
    }
    float_ptr[-10] = float_value;
    *float_ptr = float_value;
    ui_character_value = (char)ui_system_register;
    if (2 < ui_result_status) {
      if (ui_result_status < 7) {
        float_value = ui_max_value - ui_event_flags;
      }
      else {
        float_value = ui_min_value;
        if (ui_result_status == 7) {
          if (*(char *)(ui_system_register + 0x5d) == ui_character_value) {
UI_LABEL_GENERIC_65a5b3:
            float_value = ui_event_flags;
          }
        }
        else {
          if (ui_result_status != 8) goto UI_LABEL_DIALOG_INPUT_VALIDATE;
          if (*(char *)(ui_system_register + 0x5d) != ui_character_value) goto UI_LABEL_GENERIC_65a5b3;
        }
      }
      float_value = float_value * float_value;
      *float_ptr = float_value;
    }
UI_LABEL_DIALOG_INPUT_VALIDATE:
    float_value = *(float *)((longlong)ui_stack_float_array_60e8 + (4 - ui_system_register) + (longlong)float_ptr);
    float_value = float_value - float_ptr[-9];
    float_value = (float)((uint)float_value & in_XMM5_Da);
    if (0.001 <= float_value) {
      ui_widget_x_coord = ui_register_a;
      if (ui_min_value <= float_value) {
        ui_widget_x_coord = ui_max_value;
      }
      if (0.05 <= float_value) {
        if (0.5 <= float_value) {
          float_value = 0.5;
        }
      }
      else {
        float_value = 0.05;
      }
      float_value = float_value * ui_widget_x_coord * ui_parameter_value._data_size_ * 6.0;
      in_XMM5_Da = UI_INT32_MAX;
      if (float_value * ui_widget_x_coord <= ui_widget_x_coord * float_value) {
        float_value = float_ptr[-9] + float_value;
      }
    }
    ui_result_status = ui_result_status + 1;
    float_ptr[-9] = float_value;
    float_ptr[1] = float_value;
    if (2 < ui_result_status) {
      if (ui_result_status < 7) {
        float_value = ui_max_value - ui_event_flags;
      }
      else {
        float_value = ui_min_value;
        if (ui_result_status == 7) {
          if (*(char *)(ui_system_register + 0x5d) == ui_character_value) {
UI_LABEL_GENERIC_65a67b:
            float_value = ui_event_flags;
          }
        }
        else {
          if (ui_result_status != 8) goto UI_LABEL_DIALOG_CALLBACK_END;
          if (*(char *)(ui_system_register + 0x5d) != ui_character_value) goto UI_LABEL_GENERIC_65a67b;
        }
      }
      float_value = float_value * float_value;
      float_ptr[1] = float_value;
    }
UI_LABEL_DIALOG_CALLBACK_END:
    float_value = *(float *)((longlong)ui_stack_float_array_60e8 + (8 - ui_system_register) + (longlong)float_ptr);
    float_value = float_value - float_ptr[-8];
    ui_widget_x_coord = (float)((uint)float_value & in_XMM5_Da);
    if (0.001 <= ui_widget_x_coord) {
      ui_widget_width_val = ui_register_a;
      if (ui_min_value <= float_value) {
        ui_widget_width_val = ui_max_value;
      }
      if (0.05 <= ui_widget_x_coord) {
        if (0.5 <= ui_widget_x_coord) {
          ui_widget_x_coord = 0.5;
        }
      }
      else {
        ui_widget_x_coord = 0.05;
      }
      ui_widget_x_coord = ui_widget_x_coord * ui_widget_width_val * ui_parameter_value._data_size_ * 6.0;
      in_XMM5_Da = UI_INT32_MAX;
      if (ui_widget_x_coord * ui_widget_width_val <= ui_widget_width_val * float_value) {
        float_value = float_ptr[-8] + ui_widget_x_coord;
      }
    }
    ui_result_status = ui_result_status + 2;
    float_ptr[-8] = float_value;
    float_ptr[2] = float_value;
    if (2 < ui_result_status) {
      if (ui_result_status < 7) {
        float_value = ui_max_value - ui_event_flags;
      }
      else {
        float_value = ui_min_value;
        if (ui_result_status == 7) {
          if (*(char *)(ui_system_register + 0x5d) == ui_character_value) {
UI_LABEL_GENERIC_65a744:
            float_value = ui_event_flags;
          }
        }
        else {
          if (ui_result_status != 8) goto UI_LABEL_DIALOG_CLEANUP_END;
          if (*(char *)(ui_system_register + 0x5d) != ui_character_value) goto UI_LABEL_GENERIC_65a744;
        }
      }
      float_value = float_value * float_value;
      float_ptr[2] = float_value;
    }
UI_LABEL_DIALOG_CLEANUP_END:
    ui_result_status = ui_result_status + 3;
    ui_register_a = ui_register_a + float_value + float_value + float_value;
    float_ptr = float_ptr + 3;
    if (9 < ui_result_status) {
      float_value = *(float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6150);
      float_value = ui_max_value - ((float_value * 6.0 - 15.0) * float_value + 10.0) * float_value * float_value * float_value;
      if (ui_register_a != float_value) {
        if (ui_register_a <= ui_min_value) {
          *(uint32_t *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6150) = UI_BIT_SHIFT_63800000;
        }
        else {
          float_value = float_value / ui_register_a;
          *(float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6154) = *(float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6154) * float_value;
          *(float *)(ui_system_register + 0x6158) = *(float *)(ui_system_register + 0x6158) * float_value;
          *(float *)(ui_system_register + 0x615c) = *(float *)(ui_system_register + 0x615c) * float_value;
          *(float *)(ui_system_register + 0x6160) = *(float *)(ui_system_register + 0x6160) * float_value;
          *(float *)(ui_system_register + 0x6164) = *(float *)(ui_system_register + 0x6164) * float_value;
          *(float *)(ui_system_register + 0x6168) = *(float *)(ui_system_register + 0x6168) * float_value;
          *(float *)(ui_system_register + 0x616c) = *(float *)(ui_system_register + 0x616c) * float_value;
          *(float *)(ui_system_register + 0x6170) = *(float *)(ui_system_register + 0x6170) * float_value;
          *(float *)(ui_system_register + 0x6174) = float_value * *(float *)(ui_system_register + 0x6174);
        }
      }
      ui_parameter_value = ui_parameter_value - ui_parameter_value;
      ui_callback_primary._data_size_ =
           (((((float)ui_callback_primary + (float)ui_callback1) * ui_parameter_value + ui_callback_primary._data_size_) - ui_callback1._data_size_) -
           ui_callback2) - ui_callback_primary._data_size_;
      float_value = ui_parameter_value * ui_parameter_value + ui_callback_primary._data_size_ * ui_callback_primary._data_size_;
      ui_system_event_id = (uint8_t)((uint)ui_system_register >> 8);
      float_value = (float)CONCAT31(ui_system_event_id,float_value <= 1.1754944e-38) * 1.1754944e-38 + float_value;
      aui_event_id1 = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
      float_value = aui_event_id1._data_offset_;
      float_value = float_value * 0.5 * (3.0 - float_value * float_value * float_value);
      ui_stack_coordinate_x = float_value * ui_parameter_value;
      float_value = float_value * ui_callback_primary._data_size_;
      if ((float)((uint)(float_value * *(float *)(ui_system_register + 0x6178) +
                        ui_stack_coordinate_x * *(float *)(ui_system_register + 0x617c)) & in_XMM5_Da) <=
          0.999) {
        float_value = *(float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6154) - *(float *)(ui_system_register + 0x6158);
        float_value = (((*(float *)(ui_system_register + 0x6160) + *(float *)(ui_system_register + 0x615c) +
                  *(float *)(ui_system_register + 0x616c)) - *(float *)(ui_system_register + 0x6164)) -
                *(float *)(ui_system_register + 0x6168)) - *(float *)(ui_system_register + 0x6170);
        float_value = float_value * float_value + float_value * float_value;
        float_value = (float)CONCAT31(ui_system_event_id,float_value <= 1.1754944e-38) * 1.1754944e-38 + float_value;
        aui_event_id1 = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
        float_value = aui_event_id1._data_offset_;
        ui_parameter_value._data_size_ = ui_parameter_value._data_size_ * 8.0;
        float_value = float_value * 0.5 * (3.0 - float_value * float_value * float_value);
        ui_stack_coordinate_x =
             float_value * float_value * ui_parameter_value._data_size_ +
             (ui_max_value - ui_parameter_value._data_size_) * *(float *)(ui_system_register + 0x617c);
        *(ulonglong *)(ui_system_register + 0x6178) =
             CONCAT44(ui_stack_coordinate_x,
                      float_value * float_value * ui_parameter_value._data_size_ +
                      (ui_max_value - ui_parameter_value._data_size_) * *(float *)(ui_system_register + 0x6178));
        float_value = *(float *)(ui_system_register + 0x617c);
        float_value = *(float *)(ui_system_register + 0x6178);
        float_value = float_value * float_value + float_value * float_value;
        aui_event_id1 = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
        float_value = aui_event_id1._data_offset_;
        float_value = float_value * 0.5 * (3.0 - float_value * float_value * float_value);
        *(float *)(ui_system_register + 0x617c) = float_value * float_value;
        *(float *)(ui_system_register + 0x6178) = float_value * float_value;
      }
      else {
        *(ulonglong *)(ui_system_register + 0x6178) = CONCAT44(ui_stack_coordinate_x,float_value);
      }
      ui_stack_temp_value = UI_ANIMATION_HANDLER_12;
      RenderUIComponent(*(ulonglong *)(ui_system_register + -UI_WIDGET_DATA_OFFSET) ^ (ulonglong)&ui_stack_base_address);
    }
  } while( true );
}

void ui_system_finalize_widget_layout(void)

{
  uint8_t ui_system_event_id;
  longlong ui_system_register_long;
  uint32_t ui_system_register;
  longlong ui_system_register_long;
  float ui_temp_float;
  uint8_t ui_temp_buffer [16];
  float in_XMM3_Da;
  uint in_XMM5_Da;
  float ui_min_value;
  float ui_temp_float;
  float ui_max_value;
  float ui_register_a;
  float ui_temp_float;
  float ui_register_a;
  uint64_t ui_stack_data_offset_30;
  float ui_stack_event_data_offset;
  float ui_stack_coordinate_x;
  float ui_stack_transition_alpha;
  float ui_stack_data_offset_48;
  float ui_stack_float_temp_value;
  float ui_stack_coordinate_x;
  float ui_stack_data_offset_60;
  
  if (ui_register_a <= ui_min_value) {
    *(uint32_t *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6150) = UI_BIT_SHIFT_63800000;
  }
  else {
    in_XMM3_Da = in_XMM3_Da / ui_register_a;
    *(float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6154) = *(float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6154) * in_XMM3_Da;
    *(float *)(ui_system_register + 0x6158) = *(float *)(ui_system_register + 0x6158) * in_XMM3_Da;
    *(float *)(ui_system_register + 0x615c) = *(float *)(ui_system_register + 0x615c) * in_XMM3_Da;
    *(float *)(ui_system_register + 0x6160) = *(float *)(ui_system_register + 0x6160) * in_XMM3_Da;
    *(float *)(ui_system_register + 0x6164) = *(float *)(ui_system_register + 0x6164) * in_XMM3_Da;
    *(float *)(ui_system_register + 0x6168) = *(float *)(ui_system_register + 0x6168) * in_XMM3_Da;
    *(float *)(ui_system_register + 0x616c) = *(float *)(ui_system_register + 0x616c) * in_XMM3_Da;
    *(float *)(ui_system_register + 0x6170) = *(float *)(ui_system_register + 0x6170) * in_XMM3_Da;
    *(float *)(ui_system_register + 0x6174) = in_XMM3_Da * *(float *)(ui_system_register + 0x6174);
  }
  ui_stack_data_offset_48 = ui_stack_data_offset_48 - ui_stack_event_data_offset;
  float_value = ((((ui_register_a + ui_stack_float_temp_value) * ui_stack_transition_alpha + ui_register_a) -
           ui_stack_coordinate_x) - ui_stack_data_offset_60) - ui_register_a;
  float_value = ui_stack_data_offset_48 * ui_stack_data_offset_48 + float_value * float_value;
  ui_system_event_id = (uint8_t)((uint)ui_system_register >> 8);
  float_value = (float)CONCAT31(ui_system_event_id,float_value <= 1.1754944e-38) * 1.1754944e-38 + float_value;
  ui_temp_buffer = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
  float_value = ui_temp_buffer._data_offset_;
  float_value = float_value * 0.5 * (3.0 - float_value * float_value * float_value);
  ui_stack_coordinate_x = float_value * ui_stack_data_offset_48;
  float_value = float_value * float_value;
  if ((float)((uint)(float_value * *(float *)(ui_system_register + 0x6178) +
                    ui_stack_coordinate_x * *(float *)(ui_system_register + 0x617c)) & in_XMM5_Da) <= 0.999)
  {
    float_value = *(float *)(ui_system_register + UI_SYSTEM_REGISTER_OFFSET_0X6154) - *(float *)(ui_system_register + 0x6158);
    float_value = (((*(float *)(ui_system_register + 0x6160) + *(float *)(ui_system_register + 0x615c) +
              *(float *)(ui_system_register + 0x616c)) - *(float *)(ui_system_register + 0x6164)) -
            *(float *)(ui_system_register + 0x6168)) - *(float *)(ui_system_register + 0x6170);
    float_value = float_value * float_value + float_value * float_value;
    float_value = (float)CONCAT31(ui_system_event_id,float_value <= 1.1754944e-38) * 1.1754944e-38 + float_value;
    ui_temp_buffer = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
    float_value = ui_temp_buffer._data_offset_;
    ui_stack_data_offset_30._data_size_ = ui_stack_data_offset_30._data_size_ * 8.0;
    float_value = float_value * 0.5 * (3.0 - float_value * float_value * float_value);
    ui_stack_coordinate_x =
         float_value * float_value * ui_stack_data_offset_30._data_size_ +
         (ui_max_value - ui_stack_data_offset_30._data_size_) * *(float *)(ui_system_register + 0x617c);
    *(ulonglong *)(ui_system_register + 0x6178) =
         CONCAT44(ui_stack_coordinate_x,
                  float_value * float_value * ui_stack_data_offset_30._data_size_ +
                  (ui_max_value - ui_stack_data_offset_30._data_size_) * *(float *)(ui_system_register + 0x6178));
    float_value = *(float *)(ui_system_register + 0x617c);
    float_value = *(float *)(ui_system_register + 0x6178);
    float_value = float_value * float_value + float_value * float_value;
    ui_temp_buffer = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
    float_value = ui_temp_buffer._data_offset_;
    float_value = float_value * 0.5 * (3.0 - float_value * float_value * float_value);
    *(float *)(ui_system_register + 0x617c) = float_value * float_value;
    *(float *)(ui_system_register + 0x6178) = float_value * float_value;
  }
  else {
    *(ulonglong *)(ui_system_register + 0x6178) = CONCAT44(ui_stack_coordinate_x,float_value);
  }
  RenderUIComponent(*(ulonglong *)(ui_system_register + -UI_WIDGET_DATA_OFFSET) ^ (ulonglong)&ui_stack_base_address);
}

void ui_system_validate_widget_layout(void)

{
  longlong ui_system_register_long;
  uint64_t ui_stack_event_data_offset;
  
  *(uint64_t *)(ui_system_register + 0x6178) = ui_stack_event_data_offset;
  RenderUIComponent(*(ulonglong *)(ui_system_register + -UI_WIDGET_DATA_OFFSET) ^ (ulonglong)&ui_stack_base_address);
}

void ui_system_apply_widget_theme(longlong ui_callback,longlong ui_event_type,longlong ui_event_data,float ui_event_flags,
                  uint8_t *ui_parameter_value,char *ui_parameter_value)

{
  float *pfloat_value;
  float *float_ptr;
  char ui_character_value;
  uint64_t ui_loop_counter;
  uint8_t ui_temp_buffer [16];
  uint8_t ui_event_buffer_var [16];
  uint ui_event_id1;
  longlong long_counter_two;
  float *pui_widget_height_val;
  longlong ui_window_handle;
  longlong long_counter5;
  longlong ui_loop_counter_primary;
  longlong ui_loop_counter_secondary;
  ulonglong ui_event_id8;
  ulonglong ui_event_id9;
  longlong ui_event_index;
  float *float_ptr;
  uint8_t *ui_task_index_pointer2;
  float ui_distance_delta;
  float ui_temp_float;
  float ui_xmm0_register;
  float ui_time_delta;
  float ui_xmm0_register_00;
  float ui_temp_float;
  uint8_t ui_temporary_buffer [16];
  uint8_t ui_temp_buffer [16];
  float ui_temp_float;
  uint8_t ui_stack_array [32];
  uint32_t ui_stack_validation_flag;
  uint8_t ui_stack_temp_1a0;
  float ui_stack_float_198;
  float ui_stack_float_194;
  longlong ui_stack_parameter_long;
  char *ui_stack_event_character_ptr_180;
  uint64_t ui_stack_variable_callback_data;
  float ui_stack_float_temp_value;
  float ui_stack_float_16c;
  float ui_stack_float_168;
  longlong ui_stack_parameter_long;
  char *ui_stack_event_character_ptr_148;
  longlong ui_stack_parameter_long;
  uint8_t *pui_stack_temp_138;
  float aui_stack_float_130 [15];
  uint8_t ui_stack_temp_f4;
  ulonglong ui_stack_temp_e8;
  
  ui_stack_temp_e8 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  float_value = *(float *)(ui_callback + UI_SYSTEM_REGISTER_OFFSET_0X6150);
  ui_stack_parameter_long = *(longlong *)(ui_event_type + UI_OFFSET_328);
  pui_stack_temp_138 = ui_parameter_value;
  ui_stack_event_character_ptr_180 = ui_parameter_value;
  ui_stack_parameter_long = 2;
  ui_stack_float_198 = ((float_value * 6.0 - 15.0) * float_value + 10.0) * float_value * float_value * float_value;
  float_value = (1.0 - (ui_stack_float_198 + *(float *)(ui_callback + 0x6174))) * ui_event_flags;
  ui_stack_parameter_long = ui_event_data;
  ui_stack_float_168 = ui_event_flags;
  ui_stack_parameter_long = ui_callback;
  ui_stack_parameter_long = ui_event_type;
  if ((0.0 < float_value) && (long_counter_two = (longlong)*(int *)(ui_callback + UI_WIDGET_CREATE_CALLBACK_OFFSET), 0 < *(int *)(ui_callback + UI_WIDGET_CREATE_CALLBACK_OFFSET)))
  {
    float_ptr = aui_stack_float_130;
    ui_event_index = UI_NETWORK_RESOURCE_TYPEb8;
    ui_loop_counter_primary = -UI_FOCUS_STATE_OFFSET10;
    ui_loop_counter_secondary = 2;
    do {
      *float_ptr = 0.0;
      ui_temp_buffer = ZEXT816(0);
      ui_window_handle = 0;
      if (3 < long_counter_two) {
        pui_widget_height_val = (float *)(ui_callback + 0x271c + ui_event_index);
        long_counter5 = (long_counter_two - 4U >> 2) + 1;
        ui_window_handle = long_counter5 * 4;
        do {
          float_value = (1.0 - pui_widget_height_val[-0x9ac]) * 0.8;
          ui_distance_delta = (1.0 - pui_widget_height_val[-0x4d6]) * 0.8;
          if (float_value <= 0.0) {
            float_value = 0.0;
          }
          if (ui_distance_delta <= 0.0) {
            ui_distance_delta = 0.0;
          }
          float_ptr = (float *)((longlong)pui_widget_height_val + ui_loop_counter_primary + -UI_RESOURCE_TYPE_CONFIG58);
          pfloat_value = (float *)(ui_loop_counter_primary + (longlong)pui_widget_height_val);
          float_value = (1.0 - *pui_widget_height_val) * 0.8;
          float_value = (1.0 - pui_widget_height_val[0x4d6]) * 0.8;
          if (float_value <= 0.0) {
            float_value = 0.0;
          }
          if (float_value <= 0.0) {
            float_value = 0.0;
          }
          float_ptr = (float *)((longlong)pui_widget_height_val + ui_loop_counter_primary + UI_RESOURCE_TYPE_CONFIG58);
          float_ptr = (float *)((longlong)pui_widget_height_val + ui_loop_counter_primary + UI_FOCUS_STATE_OFFSETb0);
          pui_widget_height_val = pui_widget_height_val + UI_RESOURCE_TYPE_CONFIG58;
          ui_distance_delta = float_value * float_value * *float_ptr + ui_temp_buffer._data_offset_ + ui_distance_delta * float_value * *pfloat_value +
                   float_value * float_value * *float_ptr + float_value * float_value * *float_ptr;
          ui_temp_buffer = ZEXT416((uint)ui_distance_delta);
          long_counter5 = long_counter5 + -1;
        } while (long_counter5 != 0);
        *float_ptr = ui_distance_delta;
      }
      if (ui_window_handle < long_counter_two) {
        pui_widget_height_val = (float *)(ui_callback + UI_SIGNATURE_PART6 + ui_window_handle * UI_RESOURCE_TYPE_CONFIG58);
        ui_window_handle = long_counter_two - ui_window_handle;
        do {
          ui_distance_delta = (1.0 - *(float *)(ui_event_index + (longlong)pui_widget_height_val)) * 0.8;
          if (ui_distance_delta <= 0.0) {
            ui_distance_delta = 0.0;
          }
          float_value = *pui_widget_height_val;
          pui_widget_height_val = pui_widget_height_val + UI_COMPONENT_DATA_END_OFFSET;
          ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + ui_distance_delta * float_value * float_value;
          ui_window_handle = ui_window_handle + -1;
        } while (ui_window_handle != 0);
        *float_ptr = ui_temp_buffer._data_offset_;
      }
      float_ptr = float_ptr + 1;
      ui_loop_counter_primary = ui_loop_counter_primary + -100;
      ui_event_index = ui_event_index + 100;
      ui_loop_counter_secondary = ui_loop_counter_secondary + -1;
    } while (ui_loop_counter_secondary != 0);
    float_ptr = aui_stack_float_130;
    long_counter_two = (longlong)ui_parameter_value - (longlong)ui_parameter_value;
    ui_loop_counter_secondary = -UI_RESOURCE_TYPE_CONFIG34;
    ui_loop_counter_primary = UI_RESOURCE_TYPE_CONFIG28;
    ui_stack_parameter_long = 2;
    ui_stack_event_character_ptr_148 = ui_parameter_value;
    ui_stack_variable_callback_data = long_counter_two;
    do {
      float_value = *float_ptr;
      if (0.0001 < float_value) {
        ui_event_index = (longlong)*(int *)(ui_callback + UI_WIDGET_CREATE_CALLBACK_OFFSET);
        ui_distance_delta = 0.0;
        if (0 < ui_event_index) {
          pui_widget_height_val = (float *)(ui_loop_counter_primary + UI_OFFSET_120 + ui_callback);
          do {
            if (*(char *)((longlong)pui_widget_height_val + 6) == UI_CHAR_NULL) {
              float_value = 0.0;
            }
            else {
              float_value = *pui_widget_height_val * 0.05;
            }
            float_value = pui_widget_height_val[-4];
            float_value = pui_widget_height_val[-1];
            if (float_value + float_value < float_value) {
              float_value = *pui_widget_height_val;
              float_value = float_value;
              if (0.0 < float_value) {
                float_value = float_value / float_value;
              }
              if (*(char *)((longlong)pui_widget_height_val + 6) == UI_CHAR_NULL) {
                float_value = 0.0;
              }
              else {
                float_value = float_value * 0.05;
              }
              if (float_value + float_value < float_value) {
                float_value = float_value - float_value;
              }
              else {
                float_value = pui_widget_height_val[-2];
              }
              if (0.0 < float_value) {
                float_value = float_value / float_value;
              }
              float_value = float_value / (1.0 - float_value);
              if (1.0 <= float_value) {
                float_value = 1.0;
              }
              float_value = float_value * 50.0 - 10.0;
              float_value = 2.0 - ABS((float_value + float_value) - 1.0) * 2.0;
              if (1.0 <= float_value) {
                float_value = 1.0;
              }
              ui_distance_delta = ui_distance_delta + (float_value / (ABS(float_value) + 1.0) -
                                (float_value - 30.0) / (ABS(float_value - 30.0) + 1.0)) * 0.53333336 * float_value
                                * *(float *)(ui_loop_counter_secondary + (longlong)pui_widget_height_val);
            }
            pui_widget_height_val = pui_widget_height_val + UI_COMPONENT_DATA_END_OFFSET;
            ui_event_index = ui_event_index + -1;
          } while (ui_event_index != 0);
        }
        ui_event_id8 = (ulonglong)ui_stack_event_character_ptr_148[long_counter_two];
        ui_character_value = *ui_stack_event_character_ptr_148;
        long_counter_two = ui_event_id8 * UI_GUARD_CHECK_TYPE0;
        pui_widget_height_val = (float *)(*(longlong *)(ui_stack_parameter_long + UI_ANIMATION_DATA_OFFSET) + UI_WIDGET_BASE_OFFSET + long_counter_two);
        float_value = *pui_widget_height_val;
        float_value = pui_widget_height_val[1];
        float_value = pui_widget_height_val[2];
        float_value = pui_widget_height_val[3];
        pui_widget_height_val = (float *)(*(longlong *)(ui_stack_parameter_long + UI_ANIMATION_DATA_OFFSET) + UI_BUFFER_SIZE_64 + long_counter_two);
        float_value = *pui_widget_height_val;
        float_value = pui_widget_height_val[1];
        float_value = pui_widget_height_val[2];
        float_value = pui_widget_height_val[3];
        ui_stack_float_194 = float_value;
        pui_widget_height_val = (float *)ui_system_cleanupuiui_stack_var_var(ui_stack_parameter_long,*(uint8_t *)(ui_event_id8 + UI_MAX_COMPONENT_VALUE + ui_stack_parameter_long),
                                         ui_stack_parameter_long);
        float_value = *pui_widget_height_val;
        float_value = pui_widget_height_val[1];
        ui_time_delta = pui_widget_height_val[2];
        float_value = pui_widget_height_val[3];
        float_value = ui_time_delta * float_value * -1.0 + float_value * float_value * -1.0 + float_value * float_value + float_value * float_value
        ;
        float_value = float_value * float_value * -1.0 + float_value * ui_time_delta * -1.0 + float_value * float_value + float_value * float_value
        ;
        float_value = float_value * float_value * -1.0 + float_value * float_value * -1.0 + float_value * float_value + ui_time_delta * float_value
        ;
        float_value = float_value * float_value * 1.0 + float_value * float_value * 1.0 + ui_time_delta * float_value + float_value * float_value;
        float_value = float_value;
        if ((0.001 <= ui_distance_delta) &&
           (float_value = float_value, float_value = float_value, float_value = float_value, float_value = float_value, ui_distance_delta <= 0.999)) {
          float_value = float_value * float_value;
          aui_stack_float_130[6] = -1.0;
          aui_stack_float_130[7] = -1.0;
          aui_stack_float_130[8] = -1.0;
          aui_stack_float_130[9] = -1.0;
          ui_temporary_buffer._data_offset_ = float_value + float_value * float_value;
          ui_temporary_buffer._data_size_ = float_value + float_value * float_value;
          ui_temporary_buffer._data_format_ = float_value + float_value;
          ui_temporary_buffer._data_flags_ = float_value + float_value;
          ui_temp_buffer._4_12_ = ui_temporary_buffer._4_12_;
          ui_temp_buffer._data_offset_ = ui_temporary_buffer._data_offset_ + ui_temporary_buffer._data_size_;
          aui_stack_float_130[2] = 1.0;
          aui_stack_float_130[3] = 1.0;
          aui_stack_float_130[4] = 1.0;
          aui_stack_float_130[5] = 1.0;
          ui_event_id1 = movmskps((int)pui_widget_height_val,ui_temp_buffer);
          ui_event_id9 = (ulonglong)(ui_event_id1 & 1);
          pui_widget_height_val = (float *)(ui_event_id9 * 2);
          float_value = aui_stack_float_130[ui_event_id9 * 4 + 2];
          float_value = aui_stack_float_130[ui_event_id9 * 4 + 3];
          float_value = aui_stack_float_130[ui_event_id9 * 4 + 4];
          float_value = aui_stack_float_130[ui_event_id9 * 4 + 5];
          if (0.9995 < ABS(ui_temp_buffer._data_offset_)) {
            float_value = 1.0 - ui_distance_delta;
            float_value = float_value * float_value + ui_distance_delta * float_value * float_value;
            ui_time_delta = float_value * float_value + ui_distance_delta * float_value * float_value;
            float_value = float_value * float_value + ui_distance_delta * float_value * float_value;
            float_value = float_value * float_value + float_value * float_value;
            float_value = ui_time_delta * ui_time_delta + float_value * float_value;
            float_value = float_value + float_value * float_value + ui_time_delta * ui_time_delta;
            float_value = float_value + float_value * float_value + float_value * float_value;
            ui_event_buffer_var._data_size_ = float_value + float_value + 1.1754944e-38;
            ui_event_buffer_var._data_offset_ = float_value + float_value + 1.1754944e-38;
            ui_event_buffer_var._data_format_ = float_value + 1.1754944e-38;
            ui_event_buffer_var._data_flags_ = float_value + 1.1754944e-38;
            ui_temp_buffer = rsqrtps(ui_temp_buffer,ui_event_buffer_var);
            float_value = ui_temp_buffer._data_offset_;
            float_value = ui_temp_buffer._data_size_;
            float_value = ui_temp_buffer._data_format_;
            float_value = ui_temp_buffer._data_flags_;
            float_value = float_value * (3.0 - float_value * float_value * (float_value + float_value)) * float_value * 0.5;
            float_value = ui_time_delta * (3.0 - float_value * float_value * float_value) * float_value * 0.5;
            float_value = float_value * (3.0 - float_value * float_value * float_value) * float_value * 0.5;
          }
          else {
            float_value = (float)acosf();
            ui_time_delta = (float)sinf();
            float_value = (float)sinf(float_value - float_value * ui_distance_delta);
            float_value = float_value * (1.0 / ui_time_delta);
            pui_widget_height_val = (float *)sinf(float_value * ui_distance_delta);
            float_value = ui_xmm0_register * (1.0 / ui_time_delta);
            float_value = float_value * float_value + float_value * float_value * float_value;
          }
        }
        ui_event_index = ui_event_id8 + 0x82;
        if (0.001 <= float_value) {
          if (float_value <= 0.999) {
            pfloat_value = (float *)(ui_stack_parameter_long + ui_event_index * UI_EVENT_FLAG_OFFSET);
            float_value = *pfloat_value;
            float_value = pfloat_value[1];
            float_value = pfloat_value[2];
            float_value = pfloat_value[3];
            float_value = float_value * float_value;
            aui_stack_float_130[6] = -1.0;
            aui_stack_float_130[7] = -1.0;
            aui_stack_float_130[8] = -1.0;
            aui_stack_float_130[9] = -1.0;
            ui_temp_buffer._data_offset_ = float_value + float_value * float_value;
            ui_temp_buffer._data_size_ = float_value + float_value * float_value;
            ui_temp_buffer._data_format_ = float_value + float_value;
            ui_temp_buffer._data_flags_ = float_value + float_value;
            ui_temp_buffer._4_12_ = ui_temp_buffer._4_12_;
            ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + ui_temp_buffer._data_size_;
            aui_stack_float_130[2] = 1.0;
            aui_stack_float_130[3] = 1.0;
            aui_stack_float_130[4] = 1.0;
            aui_stack_float_130[5] = 1.0;
            ui_event_id1 = movmskps((int)pui_widget_height_val,ui_temp_buffer);
            ui_event_id9 = (ulonglong)(ui_event_id1 & 1);
            float_value = aui_stack_float_130[ui_event_id9 * 4 + 2];
            float_value = aui_stack_float_130[ui_event_id9 * 4 + 3];
            ui_time_delta = aui_stack_float_130[ui_event_id9 * 4 + 4];
            float_value = aui_stack_float_130[ui_event_id9 * 4 + 5];
            if (0.9995 < ABS(ui_temp_buffer._data_offset_)) {
              float_value = 1.0 - *float_ptr;
              float_value = *float_ptr;
              float_value = float_value * float_value + float_value * float_value * float_value;
              float_value = float_value * float_value + float_value * ui_time_delta * float_value;
              float_value = float_value * float_value + float_value * float_value * float_value;
              float_value = float_value * float_value + float_value * float_value;
              ui_time_delta = float_value + float_value * float_value + float_value * float_value;
              float_value = float_value + float_value * float_value + float_value * float_value;
              ui_temp_buffer._data_size_ = float_value + float_value + 1.1754944e-38;
              ui_temp_buffer._data_offset_ = float_value + float_value + 1.1754944e-38;
              ui_temp_buffer._data_format_ = ui_time_delta + 1.1754944e-38;
              ui_temp_buffer._data_flags_ = float_value + 1.1754944e-38;
              ui_temp_buffer = rsqrtps(ui_temp_buffer,ui_temp_buffer);
              float_value = ui_temp_buffer._data_offset_;
              float_value = ui_temp_buffer._data_size_;
              float_value = ui_temp_buffer._data_format_;
              float_value = ui_temp_buffer._data_flags_;
              float_value = float_value * (3.0 - float_value * float_value * (float_value + float_value)) * float_value * 0.5;
              float_value = float_value * (3.0 - float_value * float_value * ui_time_delta) * float_value * 0.5;
              float_value = float_value * (3.0 - float_value * float_value * float_value) * float_value * 0.5;
            }
            else {
              float_value = (float)acosf();
              float_value = (float)sinf();
              float_value = *float_ptr;
              float_value = (float)sinf(float_value - float_value * float_value);
              float_value = float_value * (1.0 / float_value);
              float_value = (float)sinf(float_value * float_value);
              float_value = float_value * (1.0 / float_value);
              float_value = float_value * float_value + float_value * float_value * float_value;
              float_value = float_value * float_value + float_value * ui_time_delta * float_value;
              float_value = float_value * float_value + float_value * float_value * float_value;
              float_value = ui_stack_float_194;
            }
          }
        }
        else {
          pui_widget_height_val = (float *)(ui_stack_parameter_long + ui_event_index * UI_EVENT_FLAG_OFFSET);
          float_value = *pui_widget_height_val;
          float_value = pui_widget_height_val[1];
          float_value = pui_widget_height_val[2];
          float_value = pui_widget_height_val[3];
        }
        ui_window_handle = ui_stack_parameter_long;
        pui_widget_height_val = (float *)(ui_stack_parameter_long + ui_event_index * UI_EVENT_FLAG_OFFSET);
        *pui_widget_height_val = float_value;
        pui_widget_height_val[1] = float_value;
        pui_widget_height_val[2] = float_value;
        pui_widget_height_val[3] = float_value;
        *(ulonglong *)(ui_stack_parameter_long + UI_STACK_SIZE_1280) =
             *(ulonglong *)(ui_stack_parameter_long + UI_STACK_SIZE_1280) |
             *(ulonglong *)(*(longlong *)(ui_stack_parameter_long + UI_ANIMATION_DATA_OFFSET) + UI_SYSTEM_CONFIG_OFFSET + long_counter_two);
        ui_event_id9 = (ulonglong)ui_character_value;
        *(ulonglong *)(ui_stack_parameter_long + UI_STACK_SIZE_1288) =
             *(ulonglong *)(ui_stack_parameter_long + UI_STACK_SIZE_1288) | 1L << (ui_event_id8 & UI_BIT_SHIFT_63);
        long_counter_two = ui_event_id9 * UI_GUARD_CHECK_TYPE0;
        pui_widget_height_val = (float *)(*(longlong *)(ui_stack_parameter_long + UI_ANIMATION_DATA_OFFSET) + UI_WIDGET_BASE_OFFSET + long_counter_two);
        float_value = *pui_widget_height_val;
        float_value = pui_widget_height_val[1];
        float_value = pui_widget_height_val[2];
        float_value = pui_widget_height_val[3];
        pui_widget_height_val = (float *)(*(longlong *)(ui_stack_parameter_long + UI_ANIMATION_DATA_OFFSET) + UI_BUFFER_SIZE_64 + long_counter_two);
        float_value = *pui_widget_height_val;
        float_value = pui_widget_height_val[1];
        float_value = pui_widget_height_val[2];
        float_value = pui_widget_height_val[3];
        pui_widget_height_val = (float *)ui_system_cleanupuiui_stack_var_var(ui_stack_parameter_long,*(uint8_t *)(ui_event_id9 + UI_MAX_COMPONENT_VALUE + ui_stack_parameter_long),
                                         ui_stack_parameter_long);
        float_value = *pui_widget_height_val;
        float_value = pui_widget_height_val[1];
        ui_time_delta = pui_widget_height_val[2];
        float_value = pui_widget_height_val[3];
        float_value = float_value * ui_time_delta * -1.0 + float_value * float_value * -1.0 + float_value * float_value + float_value * float_value
        ;
        float_value = float_value * float_value * -1.0 + float_value * ui_time_delta * -1.0 + float_value * float_value + float_value * float_value
        ;
        float_value = float_value * float_value * -1.0 + float_value * float_value * -1.0 + float_value * float_value + float_value * ui_time_delta
        ;
        float_value = float_value * float_value * 1.0 + float_value * float_value * 1.0 + float_value * ui_time_delta + float_value * float_value;
        float_value = float_value;
        if ((0.001 <= ui_distance_delta) &&
           (float_value = float_value, float_value = float_value, float_value = float_value, float_value = float_value, ui_distance_delta <= 0.999)) {
          float_value = float_value * float_value;
          aui_stack_float_130[6] = -1.0;
          aui_stack_float_130[7] = -1.0;
          aui_stack_float_130[8] = -1.0;
          aui_stack_float_130[9] = -1.0;
          ui_temp_buffer._data_offset_ = float_value + float_value * float_value;
          ui_temp_buffer._data_size_ = float_value + float_value * float_value;
          ui_temp_buffer._data_format_ = float_value + float_value;
          ui_temp_buffer._data_flags_ = float_value + float_value;
          ui_temp_buffer._4_12_ = ui_temp_buffer._4_12_;
          ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + ui_temp_buffer._data_size_;
          aui_stack_float_130[2] = 1.0;
          aui_stack_float_130[3] = 1.0;
          aui_stack_float_130[4] = 1.0;
          aui_stack_float_130[5] = 1.0;
          ui_event_id1 = movmskps((int)pui_widget_height_val,ui_temp_buffer);
          ui_event_id8 = (ulonglong)(ui_event_id1 & 1);
          pui_widget_height_val = (float *)(ui_event_id8 * 2);
          float_value = aui_stack_float_130[ui_event_id8 * 4 + 2];
          float_value = aui_stack_float_130[ui_event_id8 * 4 + 3];
          float_value = aui_stack_float_130[ui_event_id8 * 4 + 4];
          float_value = aui_stack_float_130[ui_event_id8 * 4 + 5];
          if (0.9995 < ABS(ui_temp_buffer._data_offset_)) {
            float_value = 1.0 - ui_distance_delta;
            float_value = float_value * float_value + ui_distance_delta * float_value * float_value;
            ui_time_delta = float_value * float_value + ui_distance_delta * float_value * float_value;
            float_value = float_value * float_value + ui_distance_delta * float_value * float_value;
            ui_distance_delta = float_value * float_value + float_value * float_value;
            float_value = ui_time_delta * ui_time_delta + float_value * float_value;
            float_value = ui_distance_delta + float_value * float_value + ui_time_delta * ui_time_delta;
            float_value = float_value + float_value * float_value + float_value * float_value;
            ui_temp_buffer._data_size_ = ui_distance_delta + float_value + 1.1754944e-38;
            ui_temp_buffer._data_offset_ = float_value + ui_distance_delta + 1.1754944e-38;
            ui_temp_buffer._data_format_ = float_value + 1.1754944e-38;
            ui_temp_buffer._data_flags_ = float_value + 1.1754944e-38;
            ui_temp_buffer = rsqrtps(ui_temp_buffer,ui_temp_buffer);
            float_value = ui_temp_buffer._data_offset_;
            float_value = ui_temp_buffer._data_size_;
            float_value = ui_temp_buffer._data_format_;
            float_value = ui_temp_buffer._data_flags_;
            float_value = float_value * (3.0 - float_value * float_value * (float_value + ui_distance_delta)) * float_value * 0.5;
            float_value = float_value * (3.0 - float_value * float_value * (ui_distance_delta + float_value)) * float_value * 0.5;
            float_value = ui_time_delta * (3.0 - float_value * float_value * float_value) * float_value * 0.5;
            float_value = float_value * (3.0 - float_value * float_value * float_value) * float_value * 0.5;
          }
          else {
            float_value = (float)acosf();
            ui_time_delta = (float)sinf();
            float_value = (float)sinf(float_value - float_value * ui_distance_delta);
            float_value = float_value * (1.0 / ui_time_delta);
            pui_widget_height_val = (float *)sinf(float_value * ui_distance_delta);
            ui_distance_delta = ui_xmm0_register_00 * (1.0 / ui_time_delta);
            float_value = float_value * float_value + ui_distance_delta * float_value * float_value;
          }
        }
        ui_event_index = ui_event_id9 + 0x82;
        if (0.001 <= float_value) {
          if (float_value <= 0.999) {
            pfloat_value = (float *)(ui_window_handle + ui_event_index * UI_EVENT_FLAG_OFFSET);
            ui_distance_delta = *pfloat_value;
            float_value = pfloat_value[1];
            float_value = pfloat_value[2];
            float_value = pfloat_value[3];
            float_value = float_value * float_value;
            aui_stack_float_130[6] = -1.0;
            aui_stack_float_130[7] = -1.0;
            aui_stack_float_130[8] = -1.0;
            aui_stack_float_130[9] = -1.0;
            ui_temp_buffer._data_offset_ = float_value + float_value * ui_distance_delta;
            ui_temp_buffer._data_size_ = float_value + float_value * float_value;
            ui_temp_buffer._data_format_ = float_value + float_value;
            ui_temp_buffer._data_flags_ = float_value + float_value;
            ui_temp_buffer._4_12_ = ui_temp_buffer._4_12_;
            ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + ui_temp_buffer._data_size_;
            aui_stack_float_130[2] = 1.0;
            aui_stack_float_130[3] = 1.0;
            aui_stack_float_130[4] = 1.0;
            aui_stack_float_130[5] = 1.0;
            ui_event_id1 = movmskps((int)pui_widget_height_val,ui_temp_buffer);
            ui_event_id8 = (ulonglong)(ui_event_id1 & 1);
            float_value = aui_stack_float_130[ui_event_id8 * 4 + 2];
            float_value = aui_stack_float_130[ui_event_id8 * 4 + 3];
            float_value = aui_stack_float_130[ui_event_id8 * 4 + 4];
            ui_time_delta = aui_stack_float_130[ui_event_id8 * 4 + 5];
            if (0.9995 < ABS(ui_temp_buffer._data_offset_)) {
              float_value = 1.0 - float_value;
              float_value = float_value * ui_distance_delta + float_value * float_value * float_value;
              float_value = float_value * float_value + float_value * float_value * float_value;
              float_value = float_value * float_value + float_value * ui_time_delta * float_value;
              float_value = float_value * float_value + float_value * float_value;
              ui_distance_delta = float_value * float_value + float_value * float_value;
              float_value = float_value + float_value * float_value + float_value * float_value;
              float_value = ui_distance_delta + float_value * float_value + float_value * float_value;
              ui_temp_buffer._data_size_ = float_value + ui_distance_delta + 1.1754944e-38;
              ui_temp_buffer._data_offset_ = ui_distance_delta + float_value + 1.1754944e-38;
              ui_temp_buffer._data_format_ = float_value + 1.1754944e-38;
              ui_temp_buffer._data_flags_ = float_value + 1.1754944e-38;
              ui_temp_buffer = rsqrtps(ui_temp_buffer,ui_temp_buffer);
              float_value = ui_temp_buffer._data_offset_;
              float_value = ui_temp_buffer._data_size_;
              float_value = ui_temp_buffer._data_format_;
              float_value = ui_temp_buffer._data_flags_;
              float_value = float_value * (3.0 - float_value * float_value * (ui_distance_delta + float_value)) * float_value * 0.5;
              float_value = float_value * (3.0 - float_value * float_value * (float_value + ui_distance_delta)) * float_value * 0.5;
              float_value = float_value * (3.0 - float_value * float_value * float_value) * float_value * 0.5;
            }
            else {
              float_value = (float)acosf();
              float_value = (float)sinf();
              float_value = (float)sinf(float_value - float_value * float_value);
              float_value = float_value * (1.0 / float_value);
              float_value = (float)sinf(float_value * float_value);
              float_value = float_value * (1.0 / float_value);
              float_value = float_value * ui_distance_delta + float_value * float_value * float_value;
              float_value = float_value * float_value + float_value * float_value * float_value;
              float_value = float_value * float_value + float_value * ui_time_delta * float_value;
            }
          }
        }
        else {
          pui_widget_height_val = (float *)(ui_window_handle + ui_event_index * UI_EVENT_FLAG_OFFSET);
          float_value = *pui_widget_height_val;
          float_value = pui_widget_height_val[1];
          float_value = pui_widget_height_val[2];
          float_value = pui_widget_height_val[3];
        }
        pui_widget_height_val = (float *)(ui_window_handle + ui_event_index * UI_EVENT_FLAG_OFFSET);
        *pui_widget_height_val = float_value;
        pui_widget_height_val[1] = float_value;
        pui_widget_height_val[2] = float_value;
        pui_widget_height_val[3] = float_value;
        *(ulonglong *)(ui_window_handle + UI_STACK_SIZE_1280) =
             *(ulonglong *)(ui_window_handle + UI_STACK_SIZE_1280) |
             *(ulonglong *)(*(longlong *)(ui_stack_parameter_long + UI_ANIMATION_DATA_OFFSET) + UI_SYSTEM_CONFIG_OFFSET + long_counter_two);
        *(ulonglong *)(ui_window_handle + UI_STACK_SIZE_1288) = *(ulonglong *)(ui_window_handle + UI_STACK_SIZE_1288) | 1L << (ui_event_id9 & UI_BIT_SHIFT_63);
        ui_callback = ui_stack_parameter_long;
        long_counter_two = ui_stack_variable_callback_data;
      }
      ui_stack_event_character_ptr_148 = ui_stack_event_character_ptr_148 + 1;
      ui_loop_counter_primary = ui_loop_counter_primary + UI_SNAPSHOT_CREATE_FLAGS;
      ui_loop_counter_secondary = ui_loop_counter_secondary + -UI_SNAPSHOT_CREATE_FLAGS;
      float_ptr = float_ptr + 1;
      ui_stack_parameter_long = ui_stack_parameter_long + -1;
    } while (ui_stack_parameter_long != 0);
    ui_stack_parameter_long = 0;
    ui_parameter_value = ui_stack_event_character_ptr_180;
  }
  long_counter_two = ui_stack_parameter_long;
  ui_loop_counter_secondary = -UI_RESOURCE_TYPE_CONFIG34;
  ui_loop_counter_primary = 2;
  float_ptr = (float *)(ui_callback + UI_RESOURCE_TYPE_CONFIGa0);
  ui_distance_delta = 1.0 - ui_stack_float_198;
  ui_stack_event_character_ptr_180 = (char *)((longlong)ui_parameter_value - (longlong)pui_stack_temp_138);
  ui_task_index_pointer2 = pui_stack_temp_138;
  float_value = ui_stack_float_198;
  ui_stack_float_194 = ui_distance_delta;
  do {
    ui_event_index = (longlong)*(int *)(ui_callback + UI_WIDGET_CREATE_CALLBACK_OFFSET);
    float_value = 0.0;
    pui_widget_height_val = float_ptr;
    if (0 < ui_event_index) {
      do {
        if (*(char *)((longlong)pui_widget_height_val + 6) == UI_CHAR_NULL) {
          float_value = 0.0;
        }
        else {
          float_value = *pui_widget_height_val * 0.05;
        }
        float_value = pui_widget_height_val[-4];
        float_value = pui_widget_height_val[-1];
        if (float_value + float_value < float_value) {
          float_value = *pui_widget_height_val;
          if (*(char *)((longlong)pui_widget_height_val + 6) == UI_CHAR_NULL) {
            float_value = 0.0;
          }
          else {
            float_value = float_value * 0.05;
          }
          if (float_value + float_value < float_value) {
            float_value = float_value - float_value;
          }
          else {
            float_value = pui_widget_height_val[-2];
          }
          if (0.0 < float_value) {
            float_value = float_value / float_value;
          }
          float_value = float_value - (0.9 - float_value);
          if (float_value <= 0.1 - float_value) {
            float_value = 0.1 - float_value;
          }
          if (float_value <= 0.0) {
            float_value = 0.0;
          }
          float_value = float_value * *(float *)(ui_loop_counter_secondary + (longlong)pui_widget_height_val) * 10.0;
        }
        else {
          float_value = *(float *)(ui_loop_counter_secondary + (longlong)pui_widget_height_val);
        }
        float_value = float_value + float_value;
        ui_event_index = ui_event_index + -1;
        pui_widget_height_val = pui_widget_height_val + UI_COMPONENT_DATA_END_OFFSET;
      } while (ui_event_index != 0);
    }
    float_value = ui_distance_delta * float_value + float_value;
    if (0.0 < float_value) {
      ui_character_value = ui_task_index_pointer2[(longlong)ui_stack_event_character_ptr_180];
      ui_loop_counter_primary = *(longlong *)(ui_stack_parameter_long + UI_EVENT_FLAG_OFFSET);
      aui_stack_float_130[6] = 0.0;
      aui_stack_float_130[7] = 0.0;
      aui_stack_float_130[8] = 1.0;
      aui_stack_float_130[9] = UI_FLOAT_INFINITY;
      ui_stack_temp_f4 = 0;
      aui_stack_float_130[ui_component_angle_offset] = 0.0;
      ui_loop_counter = *(uint64_t *)(ui_loop_counter_primary + UI_OFFSET_32);
      aui_stack_float_130[10] = 0.0;
      aui_stack_float_130[ELEVEN_VALUE] = 0.0;
      aui_stack_float_130[12] = 0.0;
      aui_stack_float_130[THIRTEEN_VALUE] = 0.0;
      ui_system_cleanupuiui_stack_var_var(long_counter_two,ui_character_value,ui_stack_parameter_long);
      ui_stack_temp_1a0 = 1;
      ui_stack_validation_flag = 0x51b189;
      pui_widget_height_val = (float *)(long_counter_two + ((longlong)ui_character_value + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET);
      float_value = *pui_widget_height_val;
      float_value = pui_widget_height_val[1];
      float_value = pui_widget_height_val[2];
      ui_stack_float_temp_value = *(float *)(ui_loop_counter_primary + UI_OFFSET_136) * float_value + *(float *)(ui_loop_counter_primary + UI_OFFSET_120) * float_value +
                   *(float *)(ui_loop_counter_primary + UI_OFFSET_152) * float_value + *(float *)(ui_loop_counter_primary + UI_OFFSET_168);
      ui_stack_float_16c = *(float *)(ui_loop_counter_primary + 0x8c) * float_value + *(float *)(ui_loop_counter_primary + UI_EVENT_ID_FOURTH_OFFSET) * float_value +
                   *(float *)(ui_loop_counter_primary + UI_EVENT_ID_OFFSET) * float_value + *(float *)(ui_loop_counter_primary + UI_OFFSET_172);
      ui_stack_variable_callback_data = CONCAT44(*(float *)(ui_loop_counter_primary + UI_WIDGET_ITEM_SIZE) * float_value + *(float *)(ui_loop_counter_primary + UI_SIGNATURE_PART4) * float_value
                            + *(float *)(ui_loop_counter_primary + 0x94) * float_value + *(float *)(ui_loop_counter_primary + UI_TEMP_VALUE_OFFSET),
                            *(float *)(ui_loop_counter_primary + UI_STACK_SIZE_128) * float_value + *(float *)(ui_loop_counter_primary + UI_WIDGET_DATA_OFFSET) * float_value
                            + *(float *)(ui_loop_counter_primary + UI_WIDGET_BASE_OFFSET) * float_value + *(float *)(ui_loop_counter_primary + UI_OFFSET_160));
      ui_process_ui_command(ui_loop_counter,&ui_stack_variable_callback_data);
      float_value = -aui_stack_float_130[7];
      float_value = aui_stack_float_130[6] * aui_stack_float_130[6] + float_value * float_value;
      ui_loop_counter_primary = ui_stack_parameter_long;
      ui_callback = ui_stack_parameter_long;
      float_value = ui_stack_float_198;
      if (9.999999e-09 < float_value) {
        ui_temp_buffer = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
        float_value = ui_temp_buffer._data_offset_;
        float_value = float_value * 0.5 * (3.0 - float_value * float_value * float_value);
        float_value = float_value * float_value;
        float_value = float_value * aui_stack_float_130[6];
        if (0.0 <= float_value) {
          if (1.0 <= float_value) {
            float_value = 1.0;
          }
        }
        else {
          float_value = 0.0;
        }
        float_value = (float)asinf(float_value);
        ui_loop_counter_primary = *(longlong *)(ui_stack_parameter_long + UI_EVENT_FLAG_OFFSET);
        ui_distance_delta = *(float *)(ui_loop_counter_primary + UI_WIDGET_BASE_OFFSET);
        float_value = *(float *)(ui_loop_counter_primary + UI_SIGNATURE_PART4) * float_value + *(float *)(ui_loop_counter_primary + UI_WIDGET_DATA_OFFSET) * float_value +
                 *(float *)(ui_loop_counter_primary + UI_OFFSET_120) * 0.0;
        float_value = *(float *)(ui_loop_counter_primary + UI_WIDGET_ITEM_SIZE) * float_value + *(float *)(ui_loop_counter_primary + UI_STACK_SIZE_128) * float_value +
                 *(float *)(ui_loop_counter_primary + UI_OFFSET_136) * 0.0;
        float_value = *(float *)(ui_loop_counter_primary + 0x94) * float_value + ui_distance_delta * float_value +
                 *(float *)(ui_loop_counter_primary + UI_OFFSET_152) * 0.0;
        float_value = float_value * float_value + float_value * float_value + float_value * float_value;
        if ((float_value <= 0.98010004) || (1.0201 <= float_value)) {
          ui_temp_buffer = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
          ui_distance_delta = ui_temp_buffer._data_offset_;
          ui_distance_delta = ui_distance_delta * 0.5 * (3.0 - float_value * ui_distance_delta * ui_distance_delta);
        }
        if (-0.47123894 <= float_value) {
          if (0.47123894 <= float_value) {
            float_value = 0.47123894;
          }
        }
        else {
          float_value = -0.47123894;
        }
        ui_system_cleanupuiui_stack_var_var(long_counter_two,*ui_task_index_pointer2,ui_stack_parameter_long,ui_distance_delta);
        ProcessUIRenderCommand(float_value * float_value * ui_stack_float_168 * 0.5);
      }
    }
    float_ptr = float_ptr + 6;
    ui_loop_counter_secondary = ui_loop_counter_secondary + -UI_SNAPSHOT_CREATE_FLAGS;
    ui_task_index_pointer2 = ui_task_index_pointer2 + 1;
    ui_loop_counter_primary = ui_loop_counter_primary + -1;
    ui_stack_parameter_long = ui_loop_counter_primary;
  } while (ui_loop_counter_primary != 0);
  RenderUIComponent(ui_stack_temp_e8 ^ (ulonglong)ui_stack_array);
}

void ui_system_handle_widget_focus(longlong ui_callback,longlong ui_event_type,float *ui_event_data,char ui_event_flags)

{
  ulonglong ui_system_event_id;
  longlong ui_event_index;
  ulonglong ui_temp_ulong;
  float *float_ptr;
  ulonglong ui_temp_ulong;
  longlong ui_event_index;
  float ui_temp_float;
  
  ui_event_index = (longlong)*(int *)(ui_callback + UI_WIDGET_CREATE_CALLBACK_OFFSET);
  if (*(int *)(ui_callback + UI_WIDGET_CREATE_CALLBACK_OFFSET) == 0) {
    if (UI_CHAR_NULL < ui_event_flags) {
      for (ui_event_index = (longlong)ui_event_flags; ui_event_index != 0; ui_event_index = ui_event_index + -1) {
        *ui_event_data = 0.0;
        ui_event_data = ui_event_data + 1;
      }
      return ui_system_return_value;
    }
  }
  else {
    ui_event_index = 0;
    ui_system_event_id = *(ulonglong *)(ui_event_type + UI_LAYOUT_RESOURCE_TYPE0);
    float_value = 1.0;
    if (3 < ui_event_index) {
      float_ptr = (float *)(ui_callback + UI_SIGNATURE_PART6);
      ui_event_index = (ui_event_index - 4U >> 2) + 1;
      ui_event_index = ui_event_index * 4;
      do {
        if (((int)float_ptr[2] - 2U < 2) && (float_value = float_value - *float_ptr, float_value <= 0.0)) {
          float_value = 0.0;
        }
        if (((int)float_ptr[0x4d8] - 2U < 2) && (float_value = float_value - float_ptr[0x4d6], float_value <= 0.0)) {
          float_value = 0.0;
        }
        if (((int)float_ptr[0x9ae] - 2U < 2) && (float_value = float_value - float_ptr[0x9ac], float_value <= 0.0)) {
          float_value = 0.0;
        }
        if (((int)float_ptr[UI_SYSTEM_CONFIG_OFFSET4] - 2U < 2) && (float_value = float_value - float_ptr[UI_SYSTEM_CONFIG_OFFSET2], float_value <= 0.0)) {
          float_value = 0.0;
        }
        float_ptr = float_ptr + UI_RESOURCE_TYPE_CONFIG58;
        ui_event_index = ui_event_index + -1;
      } while (ui_event_index != 0);
    }
    if (ui_event_index < ui_event_index) {
      float_ptr = (float *)(ui_callback + UI_SIGNATURE_PART6 + ui_event_index * UI_RESOURCE_TYPE_CONFIG58);
      ui_event_index = ui_event_index - ui_event_index;
      do {
        if (((int)float_ptr[2] - 2U < 2) && (float_value = float_value - *float_ptr, float_value <= 0.0)) {
          float_value = 0.0;
        }
        float_ptr = float_ptr + UI_COMPONENT_DATA_END_OFFSET;
        ui_event_index = ui_event_index + -1;
      } while (ui_event_index != 0);
    }
    float_value = *(float *)(ui_callback + UI_SYSTEM_REGISTER_OFFSET_0X6150);
    ui_loop_counter = (ulonglong)(uint)(int)ui_event_flags;
    float_value = ((float_value * 6.0 - 15.0) * float_value + 10.0) * float_value * float_value * float_value * float_value;
    if (UI_CHAR_NULL < ui_event_flags) {
      ui_loop_counter = 1;
      do {
        if ((ui_system_event_id & ui_loop_counter) == 0) {
UI_LABEL_GENERIC_65bd31:
          float_value = 0.0;
        }
        else if (1.001358e-05 < float_value) {
          float_value = 1.0 - float_value;
          if (0.99999 < float_value) goto UI_LABEL_GENERIC_65bd31;
        }
        else {
          float_value = 1.0;
        }
        *ui_event_data = float_value;
        ui_event_data = ui_event_data + 1;
        ui_loop_counter = ui_loop_counter << 1 | (ulonglong)((longlong)ui_loop_counter < 0);
        ui_loop_counter = ui_loop_counter - 1;
      } while (ui_loop_counter != 0);
    }
  }
  return ui_system_return_value;
}

void ui_system_update_widget_focus(longlong ui_callback,longlong ui_event_type,float *ui_event_data)

{
  ulonglong ui_system_event_id;
  longlong ui_callback_ptr;
  ulonglong ui_system_task_id;
  float *float_ptr;
  ulonglong ui_temp_ulong;
  longlong ui_event_index;
  char in_R10B;
  longlong ui_register_r11;
  float ui_temp_float;
  
  ui_event_index = 0;
  ui_system_event_id = *(ulonglong *)(ui_event_type + UI_LAYOUT_RESOURCE_TYPE0);
  float_value = 1.0;
  if (3 < ui_callback_ptr) {
    float_ptr = (float *)(ui_callback + UI_SIGNATURE_PART6);
    ui_event_index = (ui_callback_ptr - 4U >> 2) + 1;
    ui_event_index = ui_event_index * 4;
    do {
      if (((int)float_ptr[2] - 2U < 2) && (float_value = float_value - *float_ptr, float_value <= 0.0)) {
        float_value = 0.0;
      }
      if (((int)float_ptr[0x4d8] - 2U < 2) && (float_value = float_value - float_ptr[0x4d6], float_value <= 0.0)) {
        float_value = 0.0;
      }
      if (((int)float_ptr[0x9ae] - 2U < 2) && (float_value = float_value - float_ptr[0x9ac], float_value <= 0.0)) {
        float_value = 0.0;
      }
      if (((int)float_ptr[UI_SYSTEM_CONFIG_OFFSET4] - 2U < 2) && (float_value = float_value - float_ptr[UI_SYSTEM_CONFIG_OFFSET2], float_value <= 0.0)) {
        float_value = 0.0;
      }
      float_ptr = float_ptr + UI_RESOURCE_TYPE_CONFIG58;
      ui_event_index = ui_event_index + -1;
    } while (ui_event_index != 0);
  }
  if (ui_event_index < ui_callback_ptr) {
    float_ptr = (float *)(ui_register_r11 + UI_SIGNATURE_PART6 + ui_event_index * UI_RESOURCE_TYPE_CONFIG58);
    ui_event_index = ui_callback_ptr - ui_event_index;
    do {
      if (((int)float_ptr[2] - 2U < 2) && (float_value = float_value - *float_ptr, float_value <= 0.0)) {
        float_value = 0.0;
      }
      float_ptr = float_ptr + UI_COMPONENT_DATA_END_OFFSET;
      ui_event_index = ui_event_index + -1;
    } while (ui_event_index != 0);
  }
  float_value = *(float *)(ui_register_r11 + UI_SYSTEM_REGISTER_OFFSET_0X6150);
  ui_loop_counter = (ulonglong)(uint)(int)in_R10B;
  float_value = ((float_value * 6.0 - 15.0) * float_value + 10.0) * float_value * float_value * float_value * float_value;
  if (UI_CHAR_NULL < in_R10B) {
    ui_system_task_id = 1;
    do {
      if ((ui_system_event_id & ui_system_task_id) == 0) {
UI_LABEL_GENERIC_65bd31:
        float_value = 0.0;
      }
      else if (1.001358e-05 < float_value) {
        float_value = 1.0 - float_value;
        if (0.99999 < float_value) goto UI_LABEL_GENERIC_65bd31;
      }
      else {
        float_value = 1.0;
      }
      *ui_event_data = float_value;
      ui_event_data = ui_event_data + 1;
      ui_system_task_id = ui_system_task_id << 1 | (ulonglong)((longlong)ui_system_task_id < 0);
      ui_loop_counter = ui_loop_counter - 1;
    } while (ui_loop_counter != 0);
  }
  return ui_system_return_value;
}

void ui_system_clear_widget_focus(void)

{
  return ui_system_return_value;
}

void ui_system_set_widget_focus(longlong ui_callback)

{
  uint64_t *ui_event_buffer;
  longlong ui_event_index;
  uint64_t *ui_callback_ptr;
  longlong ui_event_index;
  
  ui_callback_ptr = (uint64_t *)(ui_callback + UI_RESOURCE_TYPE_CONFIG98);
  ui_event_index = 4;
  do {
    *(uint32_t *)(ui_callback_ptr + -UI_FOCUS_STATE_OFFSET6) = UI_BIT_MASK_32BIT_FULL;
    ui_callback_ptr = ui_callback_ptr + -UI_FOCUS_STATE_OFFSET4;
    *(uint32_t *)((longlong)ui_callback_ptr + -UI_RESOURCE_TYPE_CONFIG2c) = UI_BIT_SHIFT_63800000;
    ui_event_index = UI_NETWORK_RESOURCE_TYPE;
    ui_callback_ptr[-UI_FOCUS_STATE_OFFSET5] = UI_BIT_SHIFT_63800000;
    ui_callback_ptr[-UI_GUARD_CHECK_TYPE] = 0;
    do {
      *(uint32_t *)(ui_callback_ptr + UI_OFFSET_32) = UI_BIT_MASK_32BIT_FULL;
      ui_event_index = 4;
      ui_event_buffer = ui_callback_ptr;
      do {
        *ui_event_buffer = UI_UINT64_MAX;
        ui_event_buffer[1] = UI_UINT64_MAX;
        ui_event_buffer[2] = UI_UINT64_MAX;
        ui_event_buffer[3] = UI_UINT64_MAX;
        ui_event_buffer[4] = UI_UINT64_MAX;
        ui_event_buffer[5] = UI_UINT64_MAX;
        ui_event_buffer[6] = UI_UINT64_MAX;
        ui_event_buffer[7] = UI_UINT64_MAX;
        ui_event_index = ui_event_index + -1;
        ui_event_buffer = ui_event_buffer + 8;
      } while (ui_event_index != 0);
      ui_callback_ptr = (uint64_t *)((longlong)ui_callback_ptr + 0x104);
      ui_event_index = ui_event_index + -1;
    } while (ui_event_index != 0);
    ui_callback_ptr[-UI_MEMORY_RESOURCE_TYPE] = 0;
    ui_callback_ptr[-UI_WIDGET_RESOURCE_TYPE] = 0;
    *(uint32_t *)(ui_callback_ptr + -UI_RENDER_RESOURCE_TYPE) = 0x7149f2ca;
    *(uint32_t *)((longlong)ui_callback_ptr + -0xb4) = 0x7149f2ca;
    *(uint32_t *)(ui_callback_ptr + -UI_OFFSET_22) = 0x7149f2ca;
    *(uint32_t *)((longlong)ui_callback_ptr + -UI_OFFSET_172) = UI_FLOAT_MAX_VALUE;
    ui_callback_ptr[-UI_SNAPSHOT_CREATE_FLAGS] = 0x7149f2ca7149f2ca;
    *(uint32_t *)(ui_callback_ptr + -UI_LAYOUT_RESOURCE_TYPE) = 0x7149f2ca;
    *(uint32_t *)((longlong)ui_callback_ptr + -UI_TEMP_VALUE_OFFSET) = 0x7149f2ca;
    *(uint32_t *)(ui_callback_ptr + -UI_SHIFT_AMOUNT_20) = 0x7149f2ca;
    *(uint32_t *)((longlong)ui_callback_ptr + -UI_EVENT_ID_OFFSET) = UI_FLOAT_MAX_VALUE;
    *(uint16_t *)(ui_callback_ptr + -UI_RESOURCE_TYPE_CONFIG) = 0;
    *(uint64_t *)((longlong)ui_callback_ptr + -0x94) = 0;
    *(uint64_t *)((longlong)ui_callback_ptr + -0x8c) = 0;
    *(uint64_t *)((longlong)ui_callback_ptr + -UI_WIDGET_ITEM_SIZE) = 0;
    *(uint64_t *)((longlong)ui_callback_ptr + -UI_EVENT_ID_FOURTH_OFFSET) = 0;
    *(uint32_t *)((longlong)ui_callback_ptr + -UI_SIGNATURE_PART4) = 0;
    *(uint8_t *)(ui_callback_ptr + -ui_component_angle_offset) = 0;
    *(uint64_t *)((longlong)ui_callback_ptr + -UI_SIGNATURE_PART6) = 0;
    *(uint64_t *)((longlong)ui_callback_ptr + -100) = 0;
    *(uint32_t *)((longlong)ui_callback_ptr + -0x54) = 0x7149f2ca;
    *(uint32_t *)(ui_callback_ptr + -10) = 0x7149f2ca;
    *(uint32_t *)((longlong)ui_callback_ptr + -0x4c) = 0x7149f2ca;
    *(uint32_t *)(ui_callback_ptr + -9) = UI_FLOAT_MAX_VALUE;
    *(uint64_t *)((longlong)ui_callback_ptr + -UI_PATH_SEPARATOR) = 0x7149f2ca7149f2ca;
    *(uint32_t *)((longlong)ui_callback_ptr + -UI_OFFSET_68) = 0x7149f2ca;
    *(uint32_t *)(ui_callback_ptr + -8) = 0x7149f2ca;
    *(uint32_t *)((longlong)ui_callback_ptr + -UI_OFFSET_60) = 0x7149f2ca;
    *(uint32_t *)(ui_callback_ptr + -7) = UI_FLOAT_MAX_VALUE;
    *(uint16_t *)((longlong)ui_callback_ptr + -0x34) = 0;
    ui_callback_ptr[-6] = 0;
    ui_callback_ptr[-5] = 0;
    ui_callback_ptr[-4] = 0;
    ui_callback_ptr[-3] = 0;
    *(uint32_t *)(ui_callback_ptr + -2) = 0;
    *(uint8_t *)((longlong)ui_callback_ptr + -12) = 0;
    ui_callback_ptr[-1] = 0;
    *ui_callback_ptr = 0;
    *(uint32_t *)(ui_callback_ptr + 1) = 0;
    *(uint32_t *)((longlong)ui_callback_ptr + 12) = 0x1010000;
    ui_callback_ptr[2] = 0;
    ui_callback_ptr[3] = 0;
    *(uint32_t *)(ui_callback_ptr + 4) = 0;
    *(uint32_t *)((longlong)ui_callback_ptr + UI_EVENT_COUNTER_OFFSET) = 0x1010000;
    ui_callback_ptr = ui_callback_ptr + UI_FOCUS_STATE_OFFSETb;
    ui_event_index = ui_event_index + -1;
  } while (ui_event_index != 0);
  ui_system_execute_callback_effect_handler(ui_callback + 0x4dc8);
  *(uint32_t *)(ui_callback + UI_WIDGET_CREATE_CALLBACK_OFFSET) = 0;
  *(uint64_t *)(ui_callback + 0x6120) = 0;
  return ui_system_return_value;
}

void ui_system_remove_widget_focus(longlong ui_callback)

{
  ProcessUIRenderCommand(*(uint *)(ui_callback + UI_OFFSET_32) ^ UI_STACK_SIZE_128000000);
}

void ui_system_validate_widget_focus(longlong ui_callback)

{
  ProcessUIRenderCommand(*(uint *)(ui_callback + UI_OFFSET_32) ^ UI_STACK_SIZE_128000000);
}

void ui_system_handle_widget_selection(longlong ui_callback)

{
  float ui_temp_float;
  longlong ui_system_register_long;
  uint8_t *ui_system_register;
  float *ui_system_register;
  char *ui_char_pointer_secondary;
  int ui_result_status;
  float *float_ptr;
  float ui_temp_float;
  float ui_widget_x_coord;
  longlong ui_stack_long_var_28;
  longlong ui_stack_cleanup_flag;
  uint32_t ui_stack_temp_unsigned_value;
  uint64_t ui_stack_data_offset_60;
  uint8_t *pui_stack_temp_unsigned_value;
  char *ui_stack_event_character_ptr;
  float ui_stack_float_temp_value;
  uint64_t ui_stack_var_a0;
  longlong ui_stack_render_command_ptr;
  uint8_t *ui_stack_system_register_ptr;
  float ui_stack_coordinate_x8;
  
  ui_charuiui_stack_var_var_pointer = (char *)(ui_callback + UI_RESOURCE_TYPE_CONFIG00);
  do {
    float_ptr = (float *)(ui_charuiui_stack_var_var_pointer + UI_EVENT_ID_OFFSET);
    ui_result_status = 0;
    ui_char_pointer_secondary = ui_charuiui_stack_var_var_pointer;
    do {
      if (*ui_char_pointer_secondary != UI_CHAR_NULL) {
        if (*(char *)((longlong)float_ptr + 10) == UI_CHAR_NULL) {
          float_value = 0.0;
        }
        else {
          float_value = float_ptr[1] * 0.05;
        }
        if (float_value + float_ptr[-3] < *float_ptr) {
          float_value = ui_system_register[9];
          float_value = ui_system_register[10];
          float_value = ui_system_register[6];
          ui_stack_float_temp_value = ui_system_register[2];
          float_value = ui_system_register[8];
          float_value = ui_system_register[4];
          float_value = ui_system_register[5];
          ui_widget_x_coord = float_value * float_value - float_value * float_value;
          ui_stack_float_temp_value = float_value * ui_stack_float_temp_value;
          ui_stack_coordinate_x8 =
               ((((float_value * ui_system_register[ui_component_angle_offset] - ui_system_register[THIRTEEN_VALUE] * float_value) * float_value -
                 float_value * (float_value * ui_system_register[ui_component_angle_offset] - ui_system_register[THIRTEEN_VALUE] * float_value)) -
                ui_widget_x_coord * ui_system_register[12]) +
               (float_value * float_value - float_value * ui_system_register[10]) * *(float *)(ui_char_pointer_secondary + -UI_OFFSET_28) +
               *(float *)(ui_char_pointer_secondary + -UI_OFFSET_32) * ui_widget_x_coord) *
               (1.0 / ((ui_system_register[1] * float_value - float_value * ui_stack_float_temp_value) * float_value +
                      *ui_system_register * ui_widget_x_coord + float_value * (ui_stack_float_temp_value - ui_system_register[1] * float_value))
               );
          ui_stack_temp_unsigned_value = *(uint32_t *)(ui_callback + UI_OFFSET_68);
          ui_stack_cleanup_flag = ui_callback + 0x6178;
          ui_stack_temp_unsigned_value = *(uint32_t *)(ui_callback + UI_BUFFER_SIZE_64);
          ui_stack_long_var_28 = ui_callback + UI_SYSTEM_REGISTER_OFFSET_0X6150;
          ui_stack_temp_unsigned_value = *(uint32_t *)(ui_callback + UI_MEMORY_DEALLOC_OFFSET);
          ui_stack_temp_unsigned_value = 0;
          pui_stack_temp_unsigned_value = ui_system_register;
          ui_system_create_widget_instance(ui_charuiui_stack_var_var_pointer + -UI_NETWORK_RESOURCE_TYPE98,&ui_stack_data_buffer_extended_78,
                        *(uint64_t *)(ui_system_register + UI_OFFSET_328),ui_result_status,*ui_system_register);
          ProcessUIRenderCommand(*(uint32_t *)(ui_stack_render_command_ptr + UI_OFFSET_32));
        }
      }
      ui_system_register = ui_system_register + 1;
      ui_result_status = ui_result_status + 1;
      ui_char_pointer_secondary = ui_char_pointer_secondary + 100;
      float_ptr = float_ptr + 6;
    } while (ui_result_status < 2);
    ui_charuiui_stack_var_var_pointer = ui_charuiui_stack_var_var_pointer + UI_RESOURCE_TYPE_CONFIG58;
    ui_stack_data_offset_60._data_size_ = ui_stack_data_offset_60._data_size_ + 1;
    ui_system_register = ui_stack_system_register_ptr;
    if (*(int *)(ui_callback + UI_WIDGET_CREATE_CALLBACK_OFFSET) <= ui_stack_data_offset_60._data_size_) {
      *(uint32_t *)(ui_callback + UI_OFFSET_88) = ui_stack_var_a0._data_size_;
      return ui_system_return_value;
    }
  } while( true );
}

void ui_system_update_widget_selection(uint32_t ui_callback)

{
  longlong in_RCX;
  
  *(uint32_t *)(in_RCX + UI_OFFSET_88) = ui_callback;
  return ui_system_return_value;
}

void ui_system_clear_widget_selection(void)

{
  InitializeUIRenderer();
}

void ui_system_set_widget_selection(longlong ui_callback)

{
  int ui_temp_state_value;
  float *float_ptr;
  int ui_result_status;
  float ui_temp_float;
  
  ui_result_status = 0;
  if (0 < *(int *)(ui_callback + UI_WIDGET_CREATE_CALLBACK_OFFSET)) {
    float_value = 0.0;
    float_ptr = (float *)(ui_callback + UI_SIGNATURE_PART6);
    ui_temp_state_value = ui_result_status;
    do {
      if (float_value < *float_ptr) {
        if (ui_result_status < ui_temp_state_value) {
          ui_system_execute_callback_shifted((longlong)ui_result_status * UI_RESOURCE_TYPE_CONFIG58 + UI_OFFSET_104 + ui_callback,
                              ui_callback + UI_OFFSET_104 + (longlong)ui_temp_state_value * UI_RESOURCE_TYPE_CONFIG58);
        }
        ui_result_status = ui_result_status + 1;
      }
      ui_temp_state_value = ui_temp_state_value + 1;
      float_ptr = float_ptr + UI_COMPONENT_DATA_END_OFFSET;
    } while (ui_temp_state_value < *(int *)(ui_callback + UI_WIDGET_CREATE_CALLBACK_OFFSET));
    *(int *)(ui_callback + UI_WIDGET_CREATE_CALLBACK_OFFSET) = ui_result_status;
    return ui_system_return_value;
  }
  *(uint32_t *)(ui_callback + UI_WIDGET_CREATE_CALLBACK_OFFSET) = 0;
  return ui_system_return_value;
}

void ui_system_validate_widget_selection(longlong ui_callback)

{
  int ui_system_register;
  float *pfloat_value;
  longlong ui_system_register_long;
  int ui_input_register;
  float ui_temp_float;
  
  float_value = 0.0;
  pfloat_value = (float *)(ui_callback + UI_SIGNATURE_PART6);
  do {
    if (float_value < *pfloat_value) {
      if (ui_input_register < ui_system_register) {
        ui_system_execute_callback_shifted((longlong)ui_input_register * UI_RESOURCE_TYPE_CONFIG58 + UI_OFFSET_104 + ui_system_register,
                            ui_system_register + UI_OFFSET_104 + (longlong)ui_system_register * UI_RESOURCE_TYPE_CONFIG58);
      }
      ui_input_register = ui_input_register + 1;
    }
    ui_system_register = ui_system_register + 1;
    pfloat_value = pfloat_value + UI_COMPONENT_DATA_END_OFFSET;
  } while (ui_system_register < *(int *)(ui_system_register + UI_WIDGET_CREATE_CALLBACK_OFFSET));
  *(int *)(ui_system_register + UI_WIDGET_CREATE_CALLBACK_OFFSET) = ui_input_register;
  return ui_system_return_value;
}

void ui_system_handle_widget_drag(longlong ui_callback)

{
  uint32_t ui_input_register;
  
  *(uint32_t *)(ui_callback + UI_WIDGET_CREATE_CALLBACK_OFFSET) = ui_input_register;
  return ui_system_return_value;
}

void ui_system_update_widget_drag(longlong ui_callback)

{
  longlong *ui_long_counter_ptr;
  ulonglong ui_system_task_id;
  uint ui_loop_counter;
  uint32_t ui_loop_counter;
  uint8_t ui_stack_array [32];
  void* *aui_stack_pointer_data_buffer [10];
  ulonglong ui_stack_variable_uint_28;
  ulonglong ui_temp_ulong;
  
  ui_stack_variable_uint_28 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  aui_stack_pointer_data_buffer[0] = &ui_widget_manager;
  aui_stack_pointer_data_buffer[1] = &ui_widget_manager;
  aui_stack_pointer_data_buffer[2] = &ui_widget_manager;
  aui_stack_pointer_data_buffer[3] = &ui_widget_manager;
  aui_stack_pointer_data_buffer[4] = &ui_widget_manager;
  aui_stack_pointer_data_buffer[5] = &ui_widget_manager;
  aui_stack_pointer_data_buffer[6] = &ui_widget_manager;
  aui_stack_pointer_data_buffer[7] = &ui_widget_manager;
  aui_stack_pointer_data_buffer[8] = &ui_widget_manager;
  aui_stack_pointer_data_buffer[9] = &ui_widget_manager;
  ui_long_counter_ptr = (longlong *)(**(ui_error_code **)(*ui_config + UI_WIDGET_DATA_OFFSET))(ui_config,&ui_global_event_queue);
  ui_long_counter_ptr = (longlong *)(**(ui_error_code **)(*ui_long_counter_ptr + UI_CALLBACK_HANDLER_OFFSET))(ui_long_counter_ptr,*(uint32_t *)(ui_callback + UI_MEMORY_DEALLOC_OFFSET));
  (**(ui_error_code **)(*ui_long_counter_ptr + UI_WIDGET_DATA_OFFSET))(ui_long_counter_ptr,&ui_system_global_data);
  ui_long_counter_ptr = (longlong *)(**(ui_error_code **)(*ui_config + UI_WIDGET_DATA_OFFSET))(ui_config,&ui_global_render_context);
  ui_long_counter_ptr = (longlong *)(**(ui_error_code **)(*ui_long_counter_ptr + UI_CALLBACK_HANDLER_OFFSET))(ui_long_counter_ptr,*(uint32_t *)(ui_callback + UI_OFFSET_60));
  (**(ui_error_code **)(*ui_long_counter_ptr + UI_WIDGET_DATA_OFFSET))(ui_long_counter_ptr,&ui_system_global_data);
  ui_long_counter_ptr = (longlong *)(**(ui_error_code **)(*ui_config + UI_WIDGET_DATA_OFFSET))(ui_config,&ui_global_texture_manager);
  ui_long_counter_ptr = (longlong *)(**(ui_error_code **)(*ui_long_counter_ptr + UI_CALLBACK_HANDLER_OFFSET))(ui_long_counter_ptr,*(uint32_t *)(ui_callback + UI_BUFFER_SIZE_64));
  (**(ui_error_code **)(*ui_long_counter_ptr + UI_WIDGET_DATA_OFFSET))(ui_long_counter_ptr,&ui_system_global_data);
  ui_long_counter_ptr = (longlong *)(**(ui_error_code **)(*ui_config + UI_WIDGET_DATA_OFFSET))(ui_config,&ui_global_widget_factory);
  ui_long_counter_ptr = (longlong *)(**(ui_error_code **)(*ui_long_counter_ptr + UI_CALLBACK_HANDLER_OFFSET))(ui_long_counter_ptr,*(uint32_t *)(ui_callback + UI_OFFSET_68));
  (**(ui_error_code **)(*ui_long_counter_ptr + UI_WIDGET_DATA_OFFSET))(ui_long_counter_ptr,&ui_system_global_data);
  ui_system_task_id = 0;
  ui_loop_counter = ui_system_task_id;
  if (0 < *(int *)(ui_callback + UI_WIDGET_CREATE_CALLBACK_OFFSET)) {
    do {
      ui_long_counter_ptr = (longlong *)(**(ui_error_code **)(*ui_config + UI_WIDGET_DATA_OFFSET))(ui_config,&ui_global_theme_manager);
      ui_long_counter_ptr = (longlong *)(**(ui_error_code **)(*ui_long_counter_ptr + UI_CALLBACK_HANDLER_OFFSET))(ui_long_counter_ptr,*(uint32_t *)(ui_callback + 4));
      (**(ui_error_code **)(*ui_long_counter_ptr + UI_WIDGET_DATA_OFFSET))(ui_long_counter_ptr,&ui_system_global_data);
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = (ulonglong)ui_loop_counter;
    } while ((int)ui_loop_counter < *(int *)(ui_callback + UI_WIDGET_CREATE_CALLBACK_OFFSET));
  }
  do {
    if (0.0 < *(float *)(ui_callback + UI_SYSTEM_REGISTER_OFFSET_0X6150 + ui_system_task_id * 4)) {
      ui_long_counter_ptr = (longlong *)(**(ui_error_code **)(*ui_config + UI_WIDGET_DATA_OFFSET))(ui_config,&ui_global_font_cache);
      ui_long_counter_ptr = (longlong *)(**(ui_error_code **)(*ui_long_counter_ptr + UI_WIDGET_DATA_OFFSET))(ui_long_counter_ptr,aui_stack_pointer_data_buffer[ui_system_task_id]);
      ui_long_counter_ptr = (longlong *)(**(ui_error_code **)(*ui_long_counter_ptr + UI_WIDGET_DATA_OFFSET))(ui_long_counter_ptr,&ui_global_input_handler);
      if (ui_system_task_id == 0) {
        ui_loop_counter = *(uint32_t *)(ui_callback + UI_OFFSET_60);
      }
      else if ((longlong)ui_system_task_id < 9) {
        if (ui_system_task_id - 7 < 2) {
          ui_loop_counter = *(uint32_t *)(ui_callback + UI_OFFSET_68);
        }
        else {
          ui_loop_counter = *(uint32_t *)(ui_callback + UI_MEMORY_DEALLOC_OFFSET);
        }
      }
      else {
        ui_loop_counter = *(uint32_t *)(ui_callback + UI_BUFFER_SIZE_64);
      }
      ui_long_counter_ptr = (longlong *)(**(ui_error_code **)(*ui_long_counter_ptr + UI_CALLBACK_HANDLER_OFFSET))(ui_long_counter_ptr,ui_loop_counter);
      ui_long_counter_ptr = (longlong *)(**(ui_error_code **)(*ui_long_counter_ptr + UI_WIDGET_DATA_OFFSET))(ui_long_counter_ptr,&uiSystemMainData);
      (**(ui_error_code **)(*ui_long_counter_ptr + UI_CALLBACK_HANDLER_OFFSET))(ui_long_counter_ptr,*(uint32_t *)(ui_callback + UI_SYSTEM_REGISTER_OFFSET_0X6150 + ui_system_task_id * 4));
    }
    ui_system_task_id = ui_system_task_id + 1;
  } while ((longlong)ui_system_task_id < 10);
  RenderUIComponent(ui_stack_variable_uint_28 ^ (ulonglong)ui_stack_array);
}

uint64_t ui_system_start_widget_drag(longlong ui_callback,int ui_event_type)

{
  longlong ui_long_counter;
  int ui_result_status;
  longlong *ui_long_pointer_var;
  
  ui_result_status = 0;
  ui_long_counter = *(longlong *)(ui_callback + (longlong)ui_event_type * 8);
  ui_long_pointer_var = (longlong *)(ui_long_counter + UI_WIDGET_RESOURCE_TYPE8);
  do {
    if ((longlong *)*ui_long_pointer_var != (longlong *)UI_ZERO_OFFSET) {
      ui_result_status = (**(ui_error_code **)(*(longlong *)*ui_long_pointer_var + UI_SNAPSHOT_CREATE_FLAGS))();
      if (ui_result_status == 1) {
        return return *(uint64_t *)(ui_long_counter + UI_WIDGET_RESOURCE_TYPE8 + (longlong)ui_result_status * 8);
      }
    }
    ui_result_status = ui_result_status + 1;
    ui_long_pointer_var = ui_long_pointer_var + 1;
  } while (ui_result_status < 2);
  return return 0;
}

uint64_t * ui_system_end_widget_drag(uint64_t *ui_callback,ulonglong ui_event_type)

{
  ui_callback[399] = 0;
  *ui_callback = &ui_widget_manager;
  if ((ui_event_type & 1) != 0) {
    ui_memory_free(ui_callback,0xc88);
  }
  return return ui_callback;
}

ulonglong ui_system_handle_widget_drop(longlong ui_callback,float ui_event_type)

{
  int ui_temp_state_value;
  longlong ui_event_index;
  longlong *ui_long_pointer_var;
  ulonglong ui_temp_ulong;
  longlong ui_event_index;
  int ui_result_status;
  ulonglong ui_temp_ulong;
  longlong ui_event_index;
  
  ui_loop_counter = (ulonglong)*(int *)(ui_callback + UI_EVENT_FLAG_OFFSET);
  ui_event_index = ui_loop_counter * UI_MEMORY_ALLOC_SIZE;
  ui_result_status = ui_temp_buffer;
  do {
    ui_result_status = 0;
    ui_event_index = 0;
    ui_event_index = *(longlong *)(ui_event_index + *(longlong *)(ui_callback + 0xc78));
    ui_long_pointer_var = (longlong *)(ui_event_index + UI_WIDGET_RESOURCE_TYPE8);
    do {
      if ((longlong *)*ui_long_pointer_var != (longlong *)UI_ZERO_OFFSET) {
        ui_temp_state_value = (**(ui_error_code **)(*(longlong *)*ui_long_pointer_var + UI_SNAPSHOT_CREATE_FLAGS))();
        if (ui_temp_state_value == 1) {
          ui_event_index = *(longlong *)(ui_event_index + UI_WIDGET_RESOURCE_TYPE8 + ui_event_index * 8);
          goto UI_LABEL_GENERIC_65cfea;
        }
      }
      ui_result_status = ui_result_status + 1;
      ui_event_index = ui_event_index + 1;
      ui_long_pointer_var = ui_long_pointer_var + 1;
    } while (ui_result_status < 2);
    ui_event_index = 0;
UI_LABEL_GENERIC_65cfea:
    if ((ui_event_type < *(float *)(ui_event_index + UI_EVENT_FLAG_OFFSET) || ui_event_type == *(float *)(ui_event_index + UI_EVENT_FLAG_OFFSET)) ||
       (*(int *)(ui_callback + 8) + -1 <= (int)ui_loop_counter)) {
      ui_event_index = ui_loop_counter * UI_MEMORY_ALLOC_SIZE;
      do {
        ui_result_status = 0;
        ui_event_index = 0;
        ui_event_index = *(longlong *)(ui_event_index + *(longlong *)(ui_callback + 0xc78));
        ui_long_pointer_var = (longlong *)(ui_event_index + UI_WIDGET_RESOURCE_TYPE8);
        do {
          if ((longlong *)*ui_long_pointer_var != (longlong *)UI_ZERO_OFFSET) {
            ui_temp_state_value = (**(ui_error_code **)(*(longlong *)*ui_long_pointer_var + UI_SNAPSHOT_CREATE_FLAGS))();
            if (ui_temp_state_value == 1) {
              ui_event_index = *(longlong *)(ui_event_index + UI_WIDGET_RESOURCE_TYPE8 + ui_event_index * 8);
              goto UI_LABEL_GENERIC_65d05a;
            }
          }
          ui_result_status = ui_result_status + 1;
          ui_event_index = ui_event_index + 1;
          ui_long_pointer_var = ui_long_pointer_var + 1;
        } while (ui_result_status < 2);
        ui_event_index = 0;
UI_LABEL_GENERIC_65d05a:
        if ((*(float *)(ui_event_index + 12) <= ui_event_type) || ((longlong)ui_loop_counter < 1)) {
          return return ui_temp_buffer ui_loop_counter & UI_BIT_MASK_32BIT_FULL UI_BIT_MASK_32BIT_FULL;
        }
        ui_loop_counter = (ulonglong)((int)ui_loop_counter - 1);
        ui_loop_counter = ui_loop_counter - 1;
        ui_event_index = ui_event_index + -UI_MEMORY_ALLOC_SIZE;
      } while( true );
    }
    ui_loop_counter = (ulonglong)((int)ui_loop_counter + 1);
    ui_loop_counter = ui_loop_counter + 1;
    ui_event_index = ui_event_index + UI_MEMORY_ALLOC_SIZE;
  } while( true );
}

void ui_system_validate_widget_drop(longlong ui_callback,float ui_event_type,uint64_t ui_event_data,float ui_event_flags)

{
  float ui_temp_float;
  uint ui_system_task_id;
  longlong ui_event_index;
  uint ui_loop_counter;
  int ui_result_status;
  float ui_temp_float;
  uint32_t ui_loop_counter;
  float ui_temp_float;
  float ui_widget_x_coord;
  float ui_widget_y_coord;
  float ui_widget_width;
  
  ui_system_task_id = *(int *)(ui_callback + UI_EVENT_FLAG_OFFSET) - *(int *)(ui_callback + UI_SHIFT_AMOUNT_20);
  ui_loop_counter = (int)ui_system_task_id >> UI_GUARD_CHECK_TYPE_2;
  if ((int)((ui_system_task_id ^ ui_loop_counter) - ui_loop_counter) < 2) {
    float_value = 2.0;
  }
  else {
    float_value = 4.0;
  }
  ui_widget_width_val = 1.0;
  ui_widget_y_coord = (2.0 - ui_event_flags) * float_value * ui_event_type;
  float_value = ui_widget_y_coord + *(float *)(ui_callback + UI_OPERATION_RESULT_OFFSET);
  if (1.0 <= float_value) {
    float_value = 1.0;
  }
  *(float *)(ui_callback + UI_OPERATION_RESULT_OFFSET) = float_value;
  ui_loop_counter = ui_system_handle_widget_drop(float_value,*(uint32_t *)(ui_callback + UI_OFFSET_28));
  ui_system_task_id = ui_loop_counter;
  if ((1 < (int)ui_loop_counter) &&
     (ui_system_task_id = *(uint *)(ui_callback + 12), (int)*(uint *)(ui_callback + 12) < (int)ui_loop_counter)) {
    ui_system_task_id = ui_loop_counter;
  }
  if (((ui_system_task_id & 0xfffffffd) == 0) &&
     (ABS(*(float *)(ui_callback + UI_OFFSET_28)) * 2.0 < ABS(*(float *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS)))) {
    ui_system_task_id = 1;
  }
  ui_loop_counter = *(uint *)(ui_callback + UI_EVENT_FLAG_OFFSET);
  if (ui_system_task_id != ui_loop_counter) {
    float_value = *(float *)(ui_callback + UI_OPERATION_RESULT_OFFSET);
    if (float_value <= 0.9999) {
      if (ui_widget_y_coord + 0.0001 <= float_value) {
        if ((ui_loop_counter != 1) || (0.5 < float_value)) {
          float_value = ui_widget_y_coord * 1.5 + float_value;
          if (1.0 <= float_value) {
            float_value = 1.0;
          }
          *(float *)(ui_callback + UI_OPERATION_RESULT_OFFSET) = float_value;
        }
        else {
          ui_loop_counter = 1;
          float_value = float_value - (ui_widget_y_coord + ui_widget_y_coord);
          if (float_value <= 0.0) {
            float_value = 0.0;
          }
          *(float *)(ui_callback + UI_OPERATION_RESULT_OFFSET) = float_value;
        }
      }
      else {
        *(uint *)(ui_callback + UI_EVENT_FLAG_OFFSET) = ui_system_task_id;
        *(uint32_t *)(ui_callback + UI_OPERATION_RESULT_OFFSET) = 0;
        ui_loop_counter = ui_system_task_id;
      }
    }
    else {
      *(uint *)(ui_callback + UI_SHIFT_AMOUNT_20) = ui_loop_counter;
      *(uint *)(ui_callback + UI_EVENT_FLAG_OFFSET) = ui_system_task_id;
      *(uint32_t *)(ui_callback + UI_OPERATION_RESULT_OFFSET) = 0;
      ui_loop_counter = ui_system_task_id;
    }
  }
  float_value = 0.0;
  ui_widget_y_coord = 0.0;
  if (ui_loop_counter == 1) {
    ui_widget_x_coord = 0.2;
    float_value = 0.05;
    ui_loop_counter = 1;
  }
  else {
    float_value = (1.0 - ui_event_flags) * 3.5 + 0.4;
    ui_widget_x_coord = (1.0 - ui_event_flags) * 4.0 + 0.5;
  }
  float_value = *(float *)(ui_callback + UI_EVENT_ID_OFFSET);
  float_value = *(float *)(ui_callback + UI_MEMORY_DEALLOC_OFFSET);
  if (float_value + float_value <= 0.0) {
    float_value = ui_widget_x_coord;
  }
  ui_widget_x_coord = ABS(*(float *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS));
  if (ui_widget_x_coord <= float_value) {
    if ((*(char *)(ui_callback + UI_CALLBACK_HANDLER_OFFSET) != UI_CHAR_NULL) || ((float_value == 0.0 && (float_value == 0.0)))) {
      if (*(char *)(ui_callback + 0x29) == UI_CHAR_NULL) {
        float_value = 0.5;
      }
      else {
        float_value = 0.1;
      }
      if ((float_value < *(float *)(ui_callback + UI_OFFSET_32)) && (ui_loop_counter == 1)) {
        *(char *)(ui_callback + UI_CALLBACK_HANDLER_OFFSET) = (char)ui_loop_counter;
        goto UI_LABEL_GENERIC_65d2fb;
      }
      if (*(char *)(ui_callback + 0x29) == UI_CHAR_NULL) {
        float_value = 0.5;
      }
      else {
        float_value = 0.1;
      }
      if ((-*(float *)(ui_callback + UI_OFFSET_32) <= float_value) || (ui_loop_counter != 1)) {
        if ((float_value == 0.0) && (float_value == 0.0)) {
          *(uint8_t *)(ui_callback + UI_CALLBACK_HANDLER_OFFSET) = 0;
        }
      }
      else {
        *(char *)(ui_callback + UI_CALLBACK_HANDLER_OFFSET) = (char)ui_loop_counter;
        ui_widget_y_coord = 1.0;
      }
    }
  }
  else if ((*(char *)(ui_callback + UI_CALLBACK_HANDLER_OFFSET) == UI_CHAR_NULL) || ((float_value == 0.0 && (float_value == 0.0)))) {
    *(uint8_t *)(ui_callback + UI_CALLBACK_HANDLER_OFFSET) = 0;
    if (*(float *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS) <= 0.0) {
UI_LABEL_GENERIC_65d2fb:
      float_value = 1.0;
    }
    else {
      ui_widget_y_coord = 1.0;
    }
  }
  float_value = *(float *)(ui_callback + UI_OPERATION_RESULT_OFFSET);
  float_value = (3.0 - (float_value + float_value)) * float_value * float_value;
  if (ui_loop_counter == 1) {
    ui_widget_x_coord = (float)ui_system_calculate_widget_scale(*(longlong *)(ui_callback + 0xc78) + UI_MEMORY_ALLOC_SIZE,ui_widget_x_coord);
  }
  else {
    ui_widget_x_coord = (float)ui_system_calculate_widget_animation_value((longlong)(int)ui_loop_counter * UI_MEMORY_ALLOC_SIZE + *(longlong *)(ui_callback + 0xc78),
                                  *(uint32_t *)(ui_callback + UI_OFFSET_28));
  }
  if (*(int *)(ui_callback + UI_SHIFT_AMOUNT_20) == 1) {
    float_value = (float)ui_system_calculate_widget_scale(*(longlong *)(ui_callback + 0xc78) + UI_MEMORY_ALLOC_SIZE,
                                 *(uint *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS) & UI_INT32_MAX);
  }
  else {
    float_value = (float)ui_system_calculate_widget_animation_value((longlong)*(int *)(ui_callback + UI_SHIFT_AMOUNT_20) * UI_MEMORY_ALLOC_SIZE +
                                 *(longlong *)(ui_callback + 0xc78),*(uint32_t *)(ui_callback + UI_OFFSET_28));
  }
  float_value = ui_widget_x_coord * float_value + float_value * (1.0 - float_value);
  if (float_value <= 0.0) {
UI_LABEL_GENERIC_65d446:
    ui_widget_x_coord = 0.0;
  }
  else {
    ui_event_index = ui_system_start_widget_drag((longlong)*(int *)(ui_callback + UI_EVENT_FLAG_OFFSET) * UI_MEMORY_ALLOC_SIZE + *(longlong *)(ui_callback + 0xc78)
                          ,0);
    ui_widget_x_coord = *(float *)(ui_event_index + 8) / float_value;
    if ((ui_widget_x_coord == 0.0) ||
       (ui_widget_x_coord = ABS(*(float *)(ui_callback + UI_OFFSET_28)) / ((ui_event_flags * 0.9 + 0.1) * ui_widget_x_coord), ui_widget_x_coord < 0.0))
    goto UI_LABEL_GENERIC_65d446;
    if (1.0 <= ui_widget_x_coord) {
      ui_widget_x_coord = 1.0;
    }
  }
  if ((*(char *)(ui_callback + UI_CALLBACK_HANDLER_OFFSET) == UI_CHAR_NULL) && ((float_value != 0.0 || (ui_widget_y_coord != 0.0)))) {
    ui_event_index = ui_system_start_widget_drag((longlong)*(int *)(ui_callback + UI_EVENT_FLAG_OFFSET) * UI_MEMORY_ALLOC_SIZE + *(longlong *)(ui_callback + 0xc78)
                          ,2);
    float_value = (*(float *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS) * float_value) / *(float *)(ui_event_index + 8);
    if (0.0 <= *(float *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS)) {
      if (1.0 <= float_value) {
        float_value = 1.0;
      }
      ui_widget_y_coord = ui_widget_y_coord * float_value * *(float *)(ui_callback + UI_OPERATION_RESULT_OFFSET);
    }
    else {
      float_value = -float_value;
      if (1.0 <= float_value) {
        float_value = 1.0;
      }
      float_value = float_value * float_value * *(float *)(ui_callback + UI_OPERATION_RESULT_OFFSET);
    }
  }
  float_value = *(float *)(ui_callback + UI_MEMORY_DEALLOC_OFFSET);
  float_value = 5.0;
  if (float_value <= float_value) {
    if (float_value < float_value) {
      float_value = ui_event_type + ui_event_type + float_value;
      if (float_value <= float_value) {
        float_value = float_value;
      }
      goto UI_LABEL_GENERIC_65d515;
    }
  }
  else {
    if (*(char *)(ui_callback + UI_CALLBACK_HANDLER_OFFSET) == UI_CHAR_NULL) {
      float_value = float_value - ui_event_type * 5.0;
      if (float_value <= float_value) {
        float_value = float_value;
      }
    }
    else {
      float_value = float_value - ui_event_type * 4.0;
      if (float_value <= float_value) {
        float_value = float_value;
      }
    }
UI_LABEL_GENERIC_65d515:
    *(float *)(ui_callback + UI_MEMORY_DEALLOC_OFFSET) = float_value;
  }
  float_value = *(float *)(ui_callback + UI_EVENT_ID_OFFSET);
  if (float_value <= ui_widget_y_coord) {
    if (ui_widget_y_coord <= float_value) goto UI_LABEL_GENERIC_65d55b;
    float_value = ui_event_type + ui_event_type + float_value;
    if (ui_widget_y_coord <= float_value) {
      float_value = ui_widget_y_coord;
    }
  }
  else {
    if (*(char *)(ui_callback + UI_CALLBACK_HANDLER_OFFSET) != UI_CHAR_NULL) {
      float_value = 4.0;
    }
    float_value = float_value - float_value * ui_event_type;
    if (float_value <= ui_widget_y_coord) {
      float_value = ui_widget_y_coord;
    }
  }
  *(float *)(ui_callback + UI_EVENT_ID_OFFSET) = float_value;
UI_LABEL_GENERIC_65d55b:
  ui_widget_y_coord = *(float *)(ui_callback + UI_MEMORY_ALLOC_SIZE);
  if (ui_widget_y_coord <= ui_widget_x_coord) {
    if (ui_widget_y_coord < ui_widget_x_coord) {
      ui_widget_y_coord = ui_event_type + ui_event_type + ui_widget_y_coord;
      if (ui_widget_x_coord <= ui_widget_y_coord) {
        ui_widget_y_coord = ui_widget_x_coord;
      }
      *(float *)(ui_callback + UI_MEMORY_ALLOC_SIZE) = ui_widget_y_coord;
    }
  }
  else {
    ui_widget_y_coord = ui_widget_y_coord - ui_event_type * 4.0;
    if (ui_widget_y_coord <= ui_widget_x_coord) {
      ui_widget_y_coord = ui_widget_x_coord;
    }
    *(float *)(ui_callback + UI_MEMORY_ALLOC_SIZE) = ui_widget_y_coord;
  }
  ui_result_status = *(int *)(ui_callback + UI_EVENT_FLAG_OFFSET);
  if ((ui_result_status == 1) && ((float_value != 0.0 || (float_value != 0.0)))) {
    float_value = (float)ui_system_calculate_widget_scale(*(longlong *)(ui_callback + 0xc78) + UI_MEMORY_ALLOC_SIZE,
                                 *(uint *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS) & UI_INT32_MAX);
    ui_result_status = *(int *)(ui_callback + UI_EVENT_FLAG_OFFSET);
    float_value = ui_event_type / float_value;
  }
  else {
    float_value = 0.0;
  }
  if ((ui_result_status == 1) || ((*(int *)(ui_callback + UI_SHIFT_AMOUNT_20) == 1 && (*(float *)(ui_callback + UI_OPERATION_RESULT_OFFSET) != 1.0)))) {
    ui_loop_counter = fmodf(ui_event_type / *(float *)(*(longlong *)
                                        (*(longlong *)(ui_callback + 0xc78) + 8 + (longlong)ui_result_status * UI_MEMORY_ALLOC_SIZE
                                        ) + UI_FLAG_BYTE_8) + *(float *)(ui_callback + UI_OFFSET_68),UI_BIT_SHIFT_63800000);
    *(uint32_t *)(ui_callback + UI_OFFSET_68) = ui_loop_counter;
  }
  else {
    *(uint32_t *)(ui_callback + UI_OFFSET_68) = 0;
  }
  if ((ui_result_status == 1) && (*(float *)(ui_callback + UI_OPERATION_RESULT_OFFSET) == 1.0)) {
    *(uint32_t *)(ui_callback + UI_BUFFER_SIZE_64) = 0;
  }
  else {
    float_value = (float)ui_system_calculate_widget_animation_value((longlong)ui_result_status * UI_MEMORY_ALLOC_SIZE + *(longlong *)(ui_callback + 0xc78),
                                 *(uint *)(ui_callback + UI_OFFSET_28) & UI_INT32_MAX);
    ui_widget_y_coord = ui_event_type / float_value;
    if (ui_event_type / float_value <= float_value) {
      ui_widget_y_coord = float_value;
    }
    ui_widget_y_coord = ui_widget_y_coord + *(float *)(ui_callback + UI_BUFFER_SIZE_64);
    *(float *)(ui_callback + UI_BUFFER_SIZE_64) = ui_widget_y_coord;
    if (1.0 < ui_widget_y_coord) {
      ui_loop_counter = fmodf(ui_widget_y_coord,UI_BIT_SHIFT_63800000);
      *(uint32_t *)(ui_callback + UI_BUFFER_SIZE_64) = ui_loop_counter;
    }
  }
  if ((0.0 < *(float *)(ui_callback + UI_MEMORY_DEALLOC_OFFSET)) || (0.0 < *(float *)(ui_callback + UI_EVENT_ID_OFFSET))) {
    if (*(char *)(ui_callback + UI_CALLBACK_HANDLER_OFFSET) != UI_CHAR_NULL) {
      float_value = *(float *)(ui_callback + UI_OFFSET_32);
      ui_event_index = (longlong)*(int *)(ui_callback + UI_EVENT_FLAG_OFFSET) * UI_MEMORY_ALLOC_SIZE + *(longlong *)(ui_callback + 0xc78);
      ui_widget_y_coord = *(float *)(*(longlong *)(ui_event_index + UI_OFFSET_32) + UI_FLAG_BYTE_8);
      ui_event_index = ui_system_start_widget_drag(ui_event_index,4);
      float_value = (ABS(float_value) / (ui_widget_y_coord * *(float *)(ui_event_index + 8))) * ui_event_type;
    }
    float_value = float_value + *(float *)(ui_callback + UI_EVENT_COUNTER_OFFSET);
    *(float *)(ui_callback + UI_EVENT_COUNTER_OFFSET) = float_value;
    if (1.0 < float_value) {
      *(float *)(ui_callback + UI_EVENT_COUNTER_OFFSET) = float_value - 1.0;
    }
  }
  else {
    *(uint32_t *)(ui_callback + UI_EVENT_COUNTER_OFFSET) = 0;
  }
  if (*(char *)(ui_callback + 0x29) == UI_CHAR_NULL) {
    float_value = 0.5;
  }
  else {
    float_value = 0.1;
  }
  if (*(float *)(ui_callback + UI_OFFSET_32) <= float_value) {
    if (((*(int *)(ui_callback + UI_EVENT_FLAG_OFFSET) != 5) &&
        ((*(int *)(ui_callback + UI_SHIFT_AMOUNT_20) != 5 ||
         (1.0 < *(float *)(ui_callback + UI_OPERATION_RESULT_OFFSET) || *(float *)(ui_callback + UI_OPERATION_RESULT_OFFSET) == 1.0)))) ||
       (float_value = *(float *)(ui_callback + UI_OFFSET_60), float_value < 0.001)) {
      *(uint32_t *)(ui_callback + UI_OFFSET_60) = 0;
    }
    else {
      *(float *)(ui_callback + UI_OFFSET_60) = float_value - float_value * ui_event_type * 4.0;
    }
  }
  else {
    if (((*(int *)(ui_callback + UI_EVENT_FLAG_OFFSET) == 5) ||
        ((*(int *)(ui_callback + UI_SHIFT_AMOUNT_20) == 5 &&
         (*(float *)(ui_callback + UI_OPERATION_RESULT_OFFSET) <= 1.0 && *(float *)(ui_callback + UI_OPERATION_RESULT_OFFSET) != 1.0)))) &&
       (float_value = *(float *)(ui_callback + UI_OFFSET_60), float_value <= 0.999)) {
      ui_widget_width_val = (1.0 - float_value) * ui_event_type * 4.0 + float_value;
    }
    *(float *)(ui_callback + UI_OFFSET_60) = ui_widget_width_val;
  }
  return ui_system_return_value;
}

void ui_system_process_widget_drop(longlong ui_callback,longlong ui_event_type)

{
  float ui_temp_float;
  int ui_result_status;
  uint64_t *ui_callback_ptr;
  float ui_temp_float;
  float ui_widget_x_coord;
  float ui_widget_y_coord;
  float ui_widget_width;
  
  float_value = *(float *)(ui_callback + UI_OPERATION_RESULT_OFFSET);
  ui_widget_width_val = (3.0 - (float_value + float_value)) * float_value * float_value;
  float_value = 1.0 - ui_widget_width_val;
  if (*(int *)(ui_callback + UI_EVENT_FLAG_OFFSET) == 1) {
    ui_system_calculate_widget_scale(*(longlong *)(ui_callback + 0xc78) + UI_MEMORY_ALLOC_SIZE,*(uint *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS) & UI_INT32_MAX);
  }
  else {
    ui_system_calculate_widget_animation_value((longlong)*(int *)(ui_callback + UI_EVENT_FLAG_OFFSET) * UI_MEMORY_ALLOC_SIZE + *(longlong *)(ui_callback + 0xc78),
                  *(uint32_t *)(ui_callback + UI_OFFSET_28));
  }
  if (*(int *)(ui_callback + UI_SHIFT_AMOUNT_20) == 1) {
    ui_system_calculate_widget_scale(*(longlong *)(ui_callback + 0xc78) + UI_MEMORY_ALLOC_SIZE,*(uint *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS) & UI_INT32_MAX);
  }
  else {
    ui_system_calculate_widget_animation_value((longlong)*(int *)(ui_callback + UI_SHIFT_AMOUNT_20) * UI_MEMORY_ALLOC_SIZE + *(longlong *)(ui_callback + 0xc78),
                  *(uint32_t *)(ui_callback + UI_OFFSET_28));
  }
  ui_result_status = 0;
  if (0.0 < float_value) {
    if (*(int *)(ui_callback + UI_SHIFT_AMOUNT_20) == 5) {
      ui_widget_x_coord = *(float *)(ui_callback + UI_OFFSET_60);
      if (ui_widget_x_coord < 1.0) {
        float_value = *(float *)(ui_callback + UI_EVENT_ID_OFFSET);
        float_value = *(float *)(ui_callback + UI_MEMORY_DEALLOC_OFFSET);
        float_value = *(float *)(ui_callback + UI_MEMORY_ALLOC_SIZE);
        ui_callback_ptr = (uint64_t *)(*(longlong *)(ui_callback + 0xc78) + 0xf0);
        float_value = (1.0 - float_value) - float_value;
        ui_result_status = ui_result_status;
        do {
          switch(ui_result_status) {
          case 0:
            ui_widget_y_coord = float_value * float_value;
            break;
          case 1:
            ui_widget_y_coord = (1.0 - float_value) * float_value;
            break;
          case 2:
            ui_widget_y_coord = float_value;
            break;
          case 3:
            ui_widget_y_coord = float_value;
            break;
          default:
            goto UI_LABEL_GENERIC_65da24;
          }
          if (0.001 < (1.0 - ui_widget_x_coord) * float_value * ui_widget_y_coord) {
            ui_execute_event_action(*ui_callback_ptr,ui_event_type);
          }
UI_LABEL_GENERIC_65da24:
          ui_result_status = ui_result_status + 1;
          ui_callback_ptr = ui_callback_ptr + 1;
        } while (ui_result_status < 6);
        ui_widget_x_coord = *(float *)(ui_callback + UI_OFFSET_60);
      }
      if (0.0 < ui_widget_x_coord) {
        float_value = *(float *)(ui_callback + UI_EVENT_ID_OFFSET);
        float_value = *(float *)(ui_callback + UI_MEMORY_DEALLOC_OFFSET);
        ui_callback_ptr = (uint64_t *)(*(longlong *)(ui_callback + 0xc78) + UI_NETWORK_RESOURCE_TYPE0);
        float_value = *(float *)(ui_callback + UI_MEMORY_ALLOC_SIZE);
        float_value = (1.0 - float_value) - float_value;
        ui_result_status = ui_result_status;
        do {
          switch(ui_result_status) {
          case 0:
            ui_widget_y_coord = float_value * float_value;
            break;
          case 1:
            ui_widget_y_coord = (1.0 - float_value) * float_value;
            break;
          case 2:
            ui_widget_y_coord = float_value;
            break;
          case 3:
            ui_widget_y_coord = float_value;
            break;
          default:
            goto UI_LABEL_GENERIC_65dae7;
          }
          if (0.001 < ui_widget_x_coord * float_value * ui_widget_y_coord) {
            ui_execute_event_action(*ui_callback_ptr,ui_event_type);
          }
UI_LABEL_GENERIC_65dae7:
          ui_result_status = ui_result_status + 1;
          ui_callback_ptr = ui_callback_ptr + 1;
        } while (ui_result_status < 6);
      }
    }
    else {
      ui_system_set_widget_property((longlong)*(int *)(ui_callback + UI_SHIFT_AMOUNT_20) * UI_MEMORY_ALLOC_SIZE + *(longlong *)(ui_callback + 0xc78),
                    ui_event_type);
    }
  }
  if (*(int *)(ui_callback + UI_EVENT_FLAG_OFFSET) == 5) {
    float_value = *(float *)(ui_callback + UI_OFFSET_60);
    ui_widget_x_coord = -1.0;
    if (float_value < 1.0) {
      float_value = *(float *)(ui_callback + UI_EVENT_ID_OFFSET);
      float_value = *(float *)(ui_callback + UI_MEMORY_DEALLOC_OFFSET);
      float_value = *(float *)(ui_callback + UI_MEMORY_ALLOC_SIZE);
      float_value = (1.0 - float_value) * ui_widget_width_val;
      ui_callback_ptr = (uint64_t *)(*(longlong *)(ui_callback + 0xc78) + 0xf0);
      ui_widget_y_coord = (1.0 - float_value) - float_value;
      float_value = -1.0;
      do {
        switch(ui_result_status) {
        case 0:
          float_value = ui_widget_y_coord * float_value * float_value;
          break;
        case 1:
          float_value = (1.0 - float_value) * ui_widget_y_coord * float_value;
          break;
        case 2:
          float_value = float_value * float_value;
          break;
        case 3:
          float_value = float_value * float_value;
          break;
        default:
          float_value = 0.0;
        }
        if (((int *)(ui_callback + 0xc84) != (int *)UI_ZERO_OFFSET) && (float_value < float_value)) {
          *(int *)(ui_callback + 0xc84) = ui_result_status;
          float_value = float_value;
        }
        if (0.001 < float_value) {
          ui_execute_event_action(*ui_callback_ptr,ui_event_type);
        }
        ui_result_status = ui_result_status + 1;
        ui_callback_ptr = ui_callback_ptr + 1;
      } while (ui_result_status < 6);
      float_value = *(float *)(ui_callback + UI_OFFSET_60);
    }
    ui_result_status = 0;
    if (0.0 < float_value) {
      float_value = *(float *)(ui_callback + UI_EVENT_ID_OFFSET);
      float_value = *(float *)(ui_callback + UI_MEMORY_DEALLOC_OFFSET);
      ui_callback_ptr = (uint64_t *)(*(longlong *)(ui_callback + 0xc78) + UI_NETWORK_RESOURCE_TYPE0);
      float_value = *(float *)(ui_callback + UI_MEMORY_ALLOC_SIZE);
      float_value = float_value * ui_widget_width_val;
      ui_widget_width_val = (1.0 - float_value) - float_value;
      do {
        switch(ui_result_status) {
        case 0:
          float_value = ui_widget_width_val * float_value * float_value;
          break;
        case 1:
          float_value = (1.0 - float_value) * ui_widget_width_val * float_value;
          break;
        case 2:
          float_value = float_value * float_value;
          break;
        case 3:
          float_value = float_value * float_value;
          break;
        default:
          float_value = 0.0;
        }
        if (((int *)(ui_callback + 0xc84) != (int *)UI_ZERO_OFFSET) && (ui_widget_x_coord < float_value)) {
          *(int *)(ui_callback + 0xc84) = ui_result_status;
          ui_widget_x_coord = float_value;
        }
        if (0.001 < float_value) {
          ui_execute_event_action(*ui_callback_ptr,ui_event_type);
        }
        ui_result_status = ui_result_status + 1;
        ui_callback_ptr = ui_callback_ptr + 1;
      } while (ui_result_status < 6);
    }
  }
  else {
    ui_system_set_widget_property((longlong)*(int *)(ui_callback + UI_EVENT_FLAG_OFFSET) * UI_MEMORY_ALLOC_SIZE + *(longlong *)(ui_callback + 0xc78),ui_event_type
                 );
  }
  if (*(longlong *)(ui_event_type + UI_STACK_SIZE_1288) != 0) {
    ui_system_render_widget_content(ui_event_type);
  }
  return ui_system_return_value;
}

void ui_system_complete_widget_drop(longlong ui_callback,float ui_event_type)

{
  float ui_temp_float;
  longlong ui_callback_ptr;
  uint64_t ui_widget_base;
  uint64_t ui_system_register;
  int ui_result_status;
  longlong ui_system_register_long;
  uint64_t ui_system_register;
  uint64_t *ui_callback_ptr;
  uint64_t ui_system_register;
  float ui_temp_float;
  uint32_t ui_min_value;
  float ui_temp_float;
  uint32_t ui_register_b;
  uint32_t ui_register_c;
  uint32_t ui_register_d;
  uint32_t ui_register_a;
  float ui_temp_float;
  uint32_t ui_register_b;
  uint32_t ui_register_c;
  uint32_t ui_register_d;
  float ui_widget_x_coord;
  float ui_widget_y_coord;
  uint32_t ui_register_a;
  uint32_t ui_register_b;
  uint32_t ui_register_c;
  uint32_t ui_register_d;
  uint32_t ui_register_a;
  uint32_t ui_register_b;
  uint32_t ui_register_c;
  uint32_t ui_register_d;
  uint32_t ui_register_a;
  uint32_t ui_register_b;
  uint32_t ui_register_c;
  uint32_t ui_register_d;
  uint32_t ui_register_a;
  float ui_widget_width;
  uint32_t ui_register_b;
  uint32_t ui_register_c;
  uint32_t ui_register_d;
  
  *(uint64_t *)(ui_callback_ptr + 8) = ui_widget_base;
  *(uint64_t *)(ui_callback_ptr + UI_SNAPSHOT_CREATE_FLAGS) = ui_system_register;
  *(uint64_t *)(ui_callback_ptr + -UI_SNAPSHOT_CREATE_FLAGS) = ui_system_register;
  *(uint64_t *)(ui_callback_ptr + -UI_CALLBACK_HANDLER_OFFSET) = ui_system_register;
  *(uint32_t *)(ui_callback_ptr + -UI_MEMORY_DEALLOC_OFFSET) = ui_min_value;
  *(uint32_t *)(ui_callback_ptr + -0x34) = ui_register_b;
  *(uint32_t *)(ui_callback_ptr + -UI_MEMORY_ALLOC_SIZE) = ui_register_c;
  *(uint32_t *)(ui_callback_ptr + -UI_OPERATION_RESULT_OFFSET) = ui_register_d;
  *(uint32_t *)(ui_callback_ptr + -UI_OFFSET_72) = ui_register_a;
  *(uint32_t *)(ui_callback_ptr + -UI_OFFSET_68) = ui_register_b;
  *(uint32_t *)(ui_callback_ptr + -UI_BUFFER_SIZE_64) = ui_register_c;
  *(uint32_t *)(ui_callback_ptr + -UI_OFFSET_60) = ui_register_d;
  *(uint32_t *)(ui_callback_ptr + -UI_OFFSET_152) = ui_register_a;
  *(uint32_t *)(ui_callback_ptr + -0x94) = ui_register_b;
  *(uint32_t *)(ui_callback_ptr + -UI_WIDGET_BASE_OFFSET) = ui_register_c;
  *(uint32_t *)(ui_callback_ptr + -0x8c) = ui_register_d;
  *(uint32_t *)(ui_callback_ptr + -UI_OFFSET_168) = ui_register_a;
  *(uint32_t *)(ui_callback_ptr + -UI_TEMP_VALUE_OFFSET) = ui_register_b;
  *(uint32_t *)(ui_callback_ptr + -UI_OFFSET_160) = ui_register_c;
  *(uint32_t *)(ui_callback_ptr + -UI_EVENT_ID_OFFSET) = ui_register_d;
  *(uint32_t *)(ui_callback_ptr + -UI_OFFSET_184) = ui_register_a;
  *(uint32_t *)(ui_callback_ptr + -0xb4) = ui_register_b;
  *(uint32_t *)(ui_callback_ptr + -UI_WIDGET_STOP_CALLBACK_OFFSET) = ui_register_c;
  *(uint32_t *)(ui_callback_ptr + -UI_OFFSET_172) = ui_register_d;
  *(uint32_t *)(ui_callback_ptr + -200) = ui_register_a;
  *(uint32_t *)(ui_callback_ptr + -0xc4) = ui_register_b;
  *(uint32_t *)(ui_callback_ptr + -UI_RENDER_CONTEXT_OFFSET) = ui_register_c;
  *(uint32_t *)(ui_callback_ptr + -UI_OFFSET_188) = ui_register_d;
  ui_widget_width_val = (3.0 - (ui_event_type + ui_event_type)) * ui_event_type * ui_event_type;
  float_value = 1.0 - ui_widget_width_val;
  if (*(int *)(ui_callback + UI_EVENT_FLAG_OFFSET) == 1) {
    ui_system_calculate_widget_scale(*(longlong *)(ui_callback + 0xc78) + UI_MEMORY_ALLOC_SIZE,*(uint *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS) & UI_INT32_MAX);
  }
  else {
    ui_system_calculate_widget_animation_value((longlong)*(int *)(ui_callback + UI_EVENT_FLAG_OFFSET) * UI_MEMORY_ALLOC_SIZE + *(longlong *)(ui_callback + 0xc78),
                  *(uint32_t *)(ui_callback + UI_OFFSET_28));
  }
  if (*(int *)(ui_callback + UI_SHIFT_AMOUNT_20) == 1) {
    ui_system_calculate_widget_scale(*(longlong *)(ui_callback + 0xc78) + UI_MEMORY_ALLOC_SIZE,*(uint *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS) & UI_INT32_MAX);
  }
  else {
    ui_system_calculate_widget_animation_value((longlong)*(int *)(ui_callback + UI_SHIFT_AMOUNT_20) * UI_MEMORY_ALLOC_SIZE + *(longlong *)(ui_callback + 0xc78),
                  *(uint32_t *)(ui_callback + UI_OFFSET_28));
  }
  ui_result_status = 0;
  if (0.0 < float_value) {
    if (*(int *)(ui_callback + UI_SHIFT_AMOUNT_20) == 5) {
      ui_widget_x_coord = *(float *)(ui_callback + UI_OFFSET_60);
      if (ui_widget_x_coord < 1.0) {
        float_value = *(float *)(ui_callback + UI_EVENT_ID_OFFSET);
        float_value = *(float *)(ui_callback + UI_MEMORY_DEALLOC_OFFSET);
        float_value = *(float *)(ui_callback + UI_MEMORY_ALLOC_SIZE);
        ui_callback_ptr = (uint64_t *)(*(longlong *)(ui_callback + 0xc78) + 0xf0);
        float_value = (1.0 - float_value) - float_value;
        ui_result_status = ui_result_status;
        do {
          switch(ui_result_status) {
          case 0:
            ui_widget_y_coord = float_value * float_value;
            break;
          case 1:
            ui_widget_y_coord = (1.0 - float_value) * float_value;
            break;
          case 2:
            ui_widget_y_coord = float_value;
            break;
          case 3:
            ui_widget_y_coord = float_value;
            break;
          default:
            goto UI_LABEL_GENERIC_65da24;
          }
          if (0.001 < (1.0 - ui_widget_x_coord) * float_value * ui_widget_y_coord) {
            ui_execute_event_action(*ui_callback_ptr);
          }
UI_LABEL_GENERIC_65da24:
          ui_result_status = ui_result_status + 1;
          ui_callback_ptr = ui_callback_ptr + 1;
        } while (ui_result_status < 6);
        ui_widget_x_coord = *(float *)(ui_callback + UI_OFFSET_60);
      }
      if (0.0 < ui_widget_x_coord) {
        float_value = *(float *)(ui_callback + UI_EVENT_ID_OFFSET);
        float_value = *(float *)(ui_callback + UI_MEMORY_DEALLOC_OFFSET);
        ui_callback_ptr = (uint64_t *)(*(longlong *)(ui_callback + 0xc78) + UI_NETWORK_RESOURCE_TYPE0);
        float_value = *(float *)(ui_callback + UI_MEMORY_ALLOC_SIZE);
        float_value = (1.0 - float_value) - float_value;
        ui_result_status = ui_result_status;
        do {
          switch(ui_result_status) {
          case 0:
            ui_widget_y_coord = float_value * float_value;
            break;
          case 1:
            ui_widget_y_coord = (1.0 - float_value) * float_value;
            break;
          case 2:
            ui_widget_y_coord = float_value;
            break;
          case 3:
            ui_widget_y_coord = float_value;
            break;
          default:
            goto UI_LABEL_GENERIC_65dae7;
          }
          if (0.001 < ui_widget_x_coord * float_value * ui_widget_y_coord) {
            ui_execute_event_action(*ui_callback_ptr);
          }
UI_LABEL_GENERIC_65dae7:
          ui_result_status = ui_result_status + 1;
          ui_callback_ptr = ui_callback_ptr + 1;
        } while (ui_result_status < 6);
      }
    }
    else {
      ui_system_set_widget_property((longlong)*(int *)(ui_callback + UI_SHIFT_AMOUNT_20) * UI_MEMORY_ALLOC_SIZE + *(longlong *)(ui_callback + 0xc78));
    }
  }
  if (*(int *)(ui_callback + UI_EVENT_FLAG_OFFSET) == 5) {
    float_value = *(float *)(ui_callback + UI_OFFSET_60);
    ui_widget_x_coord = -1.0;
    if (float_value < 1.0) {
      float_value = *(float *)(ui_callback + UI_EVENT_ID_OFFSET);
      float_value = *(float *)(ui_callback + UI_MEMORY_DEALLOC_OFFSET);
      float_value = *(float *)(ui_callback + UI_MEMORY_ALLOC_SIZE);
      float_value = (1.0 - float_value) * ui_widget_width_val;
      ui_callback_ptr = (uint64_t *)(*(longlong *)(ui_callback + 0xc78) + 0xf0);
      ui_widget_y_coord = (1.0 - float_value) - float_value;
      float_value = -1.0;
      do {
        switch(ui_result_status) {
        case 0:
          float_value = ui_widget_y_coord * float_value * float_value;
          break;
        case 1:
          float_value = (1.0 - float_value) * ui_widget_y_coord * float_value;
          break;
        case 2:
          float_value = float_value * float_value;
          break;
        case 3:
          float_value = float_value * float_value;
          break;
        default:
          float_value = 0.0;
        }
        if (((int *)(ui_callback + 0xc84) != (int *)UI_ZERO_OFFSET) && (float_value < float_value)) {
          *(int *)(ui_callback + 0xc84) = ui_result_status;
          float_value = float_value;
        }
        if (0.001 < float_value) {
          ui_execute_event_action(*ui_callback_ptr);
        }
        ui_result_status = ui_result_status + 1;
        ui_callback_ptr = ui_callback_ptr + 1;
      } while (ui_result_status < 6);
      float_value = *(float *)(ui_callback + UI_OFFSET_60);
    }
    ui_result_status = 0;
    if (0.0 < float_value) {
      float_value = *(float *)(ui_callback + UI_EVENT_ID_OFFSET);
      float_value = *(float *)(ui_callback + UI_MEMORY_DEALLOC_OFFSET);
      ui_callback_ptr = (uint64_t *)(*(longlong *)(ui_callback + 0xc78) + UI_NETWORK_RESOURCE_TYPE0);
      float_value = *(float *)(ui_callback + UI_MEMORY_ALLOC_SIZE);
      float_value = float_value * ui_widget_width_val;
      ui_widget_width_val = (1.0 - float_value) - float_value;
      do {
        switch(ui_result_status) {
        case 0:
          float_value = ui_widget_width_val * float_value * float_value;
          break;
        case 1:
          float_value = (1.0 - float_value) * ui_widget_width_val * float_value;
          break;
        case 2:
          float_value = float_value * float_value;
          break;
        case 3:
          float_value = float_value * float_value;
          break;
        default:
          float_value = 0.0;
        }
        if (((int *)(ui_callback + 0xc84) != (int *)UI_ZERO_OFFSET) && (ui_widget_x_coord < float_value)) {
          *(int *)(ui_callback + 0xc84) = ui_result_status;
          ui_widget_x_coord = float_value;
        }
        if (0.001 < float_value) {
          ui_execute_event_action(*ui_callback_ptr);
        }
        ui_result_status = ui_result_status + 1;
        ui_callback_ptr = ui_callback_ptr + 1;
      } while (ui_result_status < 6);
    }
  }
  else {
    ui_system_set_widget_property((longlong)*(int *)(ui_callback + UI_EVENT_FLAG_OFFSET) * UI_MEMORY_ALLOC_SIZE + *(longlong *)(ui_callback + 0xc78));
  }
  if (*(longlong *)(ui_system_register + UI_STACK_SIZE_1288) != 0) {
    ui_system_render_widget_content();
  }
  return ui_system_return_value;
}

void ui_system_cleanup_widget_drop(uint32_t ui_callback)

{
  float ui_temp_float;
  ui_error_code *UNRECOVERED_JUMPTABLE_00;
  longlong ui_widget_base;
  uint ui_loop_counter;
  longlong ui_system_register_long;
  uint64_t *ui_callback_ptr;
  longlong ui_system_register_long;
  float ui_temp_float;
  float ui_register_a;
  float ui_temp_float;
  float ui_widget_x_coord;
  float ui_widget_y_coord;
  float ui_register_a;
  
  ui_loop_counter = 0;
  if (0.0 < ui_register_a) {
    if (*(int *)(ui_widget_base + UI_SHIFT_AMOUNT_20) == 5) {
      float_value = *(float *)(ui_widget_base + UI_OFFSET_60);
      if (float_value < ui_register_a) {
        ui_callback = UI_BIT_SHIFT_63800000;
        ui_result_status = ui_temp_buffer;
        do {
          if (ui_loop_counter < 6) {
            UNRECOVERED_JUMPTABLE_00 =
                 (ui_error_code *)((ulonglong)*(uint *)(ui_system_register + 0x65ded4 + (longlong)(int)ui_loop_counter * 4) +
                         ui_system_register);
                    // WARNING: Could not recover jumptable at 0x00018065d9d3. Too many branches
                    // WARNING: Treating indirect jump as call
            (*UNRECOVERED_JUMPTABLE_00)(UNRECOVERED_JUMPTABLE_00);
            return ui_system_return_value;
          }
          ui_loop_counter = ui_loop_counter + 1;
        } while ((int)ui_loop_counter < 6);
        float_value = *(float *)(ui_widget_base + UI_OFFSET_60);
        ui_register_a = 1.0;
      }
      ui_result_status = ui_temp_buffer;
      if (0.0 < float_value) {
        do {
          if (ui_loop_counter < 6) {
            UNRECOVERED_JUMPTABLE_00 =
                 (ui_error_code *)((ulonglong)*(uint *)(ui_system_register + 0x65deec + (longlong)(int)ui_loop_counter * 4) +
                         ui_system_register);
                    // WARNING: Could not recover jumptable at 0x00018065da9b. Too many branches
                    // WARNING: Treating indirect jump as call
            (*UNRECOVERED_JUMPTABLE_00)(UNRECOVERED_JUMPTABLE_00);
            return ui_system_return_value;
          }
          ui_loop_counter = ui_loop_counter + 1;
        } while ((int)ui_loop_counter < 6);
      }
    }
    else {
      ui_callback = ui_system_set_widget_property((longlong)*(int *)(ui_widget_base + UI_SHIFT_AMOUNT_20) * UI_MEMORY_ALLOC_SIZE +
                              *(longlong *)(ui_widget_base + 0xc78));
    }
  }
  if (*(int *)(ui_widget_base + UI_EVENT_FLAG_OFFSET) == 5) {
    float_value = *(float *)(ui_widget_base + UI_OFFSET_60);
    ui_widget_x_coord = -1.0;
    if (float_value < ui_register_a) {
      float_value = *(float *)(ui_widget_base + UI_EVENT_ID_OFFSET);
      float_value = *(float *)(ui_widget_base + UI_MEMORY_DEALLOC_OFFSET);
      float_value = *(float *)(ui_widget_base + UI_MEMORY_ALLOC_SIZE);
      float_value = (1.0 - float_value) * ui_register_a;
      ui_callback_ptr = (uint64_t *)(*(longlong *)(ui_widget_base + 0xc78) + 0xf0);
      ui_widget_y_coord = (1.0 - float_value) - float_value;
      float_value = -1.0;
      do {
        switch(ui_loop_counter) {
        case 0:
          float_value = ui_widget_y_coord * float_value * float_value;
          break;
        case 1:
          float_value = (1.0 - float_value) * ui_widget_y_coord * float_value;
          break;
        case 2:
          float_value = float_value * float_value;
          break;
        case 3:
          float_value = float_value * float_value;
          break;
        default:
          float_value = 0.0;
        }
        if (((uint *)(ui_widget_base + 0xc84) != (uint *)UI_ZERO_OFFSET) && (float_value < float_value)) {
          *(uint *)(ui_widget_base + 0xc84) = ui_loop_counter;
          float_value = float_value;
        }
        if (0.001 < float_value) {
          ui_execute_event_action(*ui_callback_ptr);
        }
        ui_callback = UI_BIT_SHIFT_63800000;
        ui_loop_counter = ui_loop_counter + 1;
        ui_callback_ptr = ui_callback_ptr + 1;
      } while ((int)ui_loop_counter < 6);
      float_value = *(float *)(ui_widget_base + UI_OFFSET_60);
      ui_system_register = UI_SNAPSHOT_CREATE_FLAGS0000000;
      ui_register_a = 0.001;
    }
    ui_loop_counter = 0;
    if (0.0 < float_value) {
      ui_callback_ptr = (uint64_t *)(*(longlong *)(ui_widget_base + 0xc78) + UI_NETWORK_RESOURCE_TYPE0);
      do {
        if (ui_loop_counter < 6) {
                    // WARNING: Could not recover jumptable at 0x00018065dd17. Too many branches
                    // WARNING: Treating indirect jump as call
          (*(ui_error_code *)((ulonglong)*(uint *)(ui_system_register + 0x65df1c + (longlong)(int)ui_loop_counter * 4) +
                    ui_system_register))(UI_BIT_SHIFT_63800000);
          return ui_system_return_value;
        }
        if (((uint *)(ui_widget_base + 0xc84) != (uint *)UI_ZERO_OFFSET) && (ui_widget_x_coord < 0.0)) {
          ui_widget_x_coord = 0.0;
          *(uint *)(ui_widget_base + 0xc84) = ui_loop_counter;
        }
        if (ui_register_a < 0.0) {
          ui_execute_event_action(*ui_callback_ptr);
        }
        ui_callback = UI_BIT_SHIFT_63800000;
        ui_loop_counter = ui_loop_counter + 1;
        ui_callback_ptr = ui_callback_ptr + 1;
      } while ((int)ui_loop_counter < 6);
    }
  }
  else {
    ui_callback = ui_system_set_widget_property((longlong)*(int *)(ui_widget_base + UI_EVENT_FLAG_OFFSET) * UI_MEMORY_ALLOC_SIZE +
                            *(longlong *)(ui_widget_base + 0xc78));
  }
  if (*(longlong *)(ui_system_register + UI_STACK_SIZE_1288) != 0) {
    ui_system_render_widget_content(ui_callback);
  }
  return ui_system_return_value;
}

void ui_system_handle_widget_resize(void)

{
  ui_system_render_widget_content();
  return ui_system_return_value;
}

void ui_system_update_widget_resize(uint64_t *ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,uint64_t *ui_event_flags,
                  float ui_parameter_value,float ui_parameter_value)

{
  longlong ui_long_counter;
  float ui_temp_float;
  float ui_widget_x_coord;
  
  float_value = 1.0;
  *ui_callback = *ui_event_flags;
  ui_callback[1] = ui_event_flags[1];
  ui_callback[2] = ui_event_flags[2];
  ui_callback[3] = ui_event_flags[3];
  ui_callback[4] = ui_event_flags[4];
  ui_callback[5] = ui_event_flags[5];
  ui_callback[6] = ui_event_flags[6];
  ui_callback[7] = ui_event_flags[7];
  ui_callback[8] = ui_event_flags[8];
  ui_callback[9] = ui_event_flags[9];
  ui_callback[10] = ui_event_flags[10];
  ui_callback[ELEVEN_VALUE] = ui_event_flags[ELEVEN_VALUE];
  ui_callback[12] = ui_event_flags[12];
  ui_callback[THIRTEEN_VALUE] = ui_event_flags[THIRTEEN_VALUE];
  ui_callback[ui_component_angle_offset] = ui_event_flags[ui_component_angle_offset];
  ui_callback[UI_MAX_EVENT_FLAGS] = ui_event_flags[UI_MAX_EVENT_FLAGS];
  ui_callback[UI_EVENT_FLAG_OFFSET] = ui_event_flags[UI_EVENT_FLAG_OFFSET];
  ui_callback[UI_RESOURCE_LOAD_TYPE] = ui_event_flags[UI_RESOURCE_LOAD_TYPE];
  ui_long_counter = ui_system_get_widget_property();
  float_value = *(float *)(ui_long_counter + 8) / (ui_parameter_value * *(float *)(ui_callback[3] + UI_FLAG_BYTE_8));
  ui_long_counter = ui_system_get_widget_property(ui_callback[4]);
  ui_widget_x_coord = *(float *)(ui_long_counter + 8) / (ui_parameter_value * *(float *)(ui_callback[4] + UI_FLAG_BYTE_8));
  ui_long_counter = ui_system_get_widget_property(ui_callback[1]);
  float_value = *(float *)(ui_long_counter + 8) / *(float *)(ui_callback[1] + UI_FLAG_BYTE_8);
  ui_long_counter = ui_system_get_widget_property(ui_callback[2]);
  ui_parameter_value = ui_parameter_value * *(float *)(ui_callback[2] + UI_FLAG_BYTE_8);
  float_value = ui_widget_x_coord;
  if (float_value <= ui_widget_x_coord) {
    float_value = float_value;
  }
  float_value = *(float *)(ui_long_counter + 8) / ui_parameter_value;
  if (float_value <= float_value) {
    float_value = float_value;
  }
  if (float_value <= float_value) {
    float_value = float_value;
  }
  if (float_value < float_value) {
    float_value = float_value / float_value;
  }
  if (float_value < ui_widget_x_coord) {
    float_value = float_value / ui_widget_x_coord;
  }
  if (float_value < float_value) {
    float_value = float_value / float_value;
  }
  if (float_value < float_value) {
    float_value = (ui_parameter_value * float_value) / *(float *)(ui_long_counter + 8);
  }
  ui_long_counter = ui_system_get_widget_property(ui_callback[3]);
  *(float *)(ui_callback + UI_NETWORK_RESOURCE_TYPE) = (float_value * *(float *)(ui_long_counter + 8)) / *(float *)(ui_callback[3] + UI_FLAG_BYTE_8);
  ui_long_counter = ui_system_get_widget_property(ui_callback[4]);
  *(float *)((longlong)ui_callback + 0x94) =
       (float_value * *(float *)(ui_long_counter + 8)) / *(float *)(ui_callback[4] + UI_FLAG_BYTE_8);
  ui_long_counter = ui_system_get_widget_property(ui_callback[1]);
  *(float *)((longlong)ui_callback + UI_EVENT_ID_OFFSET) =
       (float_value * *(float *)(ui_long_counter + 8)) / *(float *)(ui_callback[1] + UI_FLAG_BYTE_8);
  ui_long_counter = ui_system_get_widget_property(ui_callback[2]);
  *(float *)(ui_callback + UI_RESOURCE_TYPE_CONFIG) = (float_value * *(float *)(ui_long_counter + 8)) / *(float *)(ui_callback[2] + UI_FLAG_BYTE_8);
  return ui_system_return_value;
}

void ui_system_validate_widget_resize(void)

{
  InitializeUIRenderer();
}

void ui_system_start_widget_resize(longlong ui_callback,uint64_t ui_event_type,longlong ui_event_data,uint64_t ui_event_flags)

{
  int ui_temp_state_value;
  longlong ui_system_register_long;
  ulonglong ui_system_register_long;
  longlong *ui_long_pointer_var;
  uint8_t *ui_callback_ptr;
  longlong ui_event_index;
  float *float_ptr;
  ulonglong ui_temp_ulong;
  float ui_temp_float;
  float ui_register_a;
  longlong ui_stack_long_var_48;
  uint64_t ui_stack_temp_unsigned_value;
  
  float_value = **(float **)(ui_system_register + 0x10d0);
  float_value = ((float_value * 6.0 - 15.0) * float_value + 10.0) * float_value * float_value * float_value +
          (*(float **)(ui_system_register + 0x10d0))[9];
  ui_stack_long_var_48 = ui_callback;
  ui_stack_temp_unsigned_value = ui_event_flags;
  if ((1e-06 < float_value) && (*(longlong *)(ui_event_data + 0x810) != 0)) {
    ui_callback_ptr = &ui_stack_data_buffer_extended_60;
    ui_loop_counter = ui_system_register & UI_BIT_MASK_32BIT_FULL;
    do {
      ui_system_process_widget_event(ui_callback_ptr);
      ui_callback_ptr = ui_callback_ptr + UI_EVENT_FLAG_OFFSET;
      ui_loop_counter = ui_loop_counter - 1;
    } while (ui_loop_counter != 0);
    ui_event_index = ui_system_register + UI_OFFSET_1200;
    do {
      ui_system_process_widget_event(ui_event_index);
      ui_event_index = ui_event_index + UI_EVENT_FLAG_OFFSET;
      ui_system_register = ui_system_register - 1;
    } while (ui_system_register != 0);
    memset(&ui_stack_data_buffer_extended_60,0,0x1050);
  }
  if (float_value < 1.0) {
    ui_callback_ptr = &ui_stack_data_buffer_extended_60;
    ui_loop_counter = ui_system_register;
    do {
      ui_system_process_widget_event(ui_callback_ptr);
      ui_callback_ptr = ui_callback_ptr + UI_EVENT_FLAG_OFFSET;
      ui_loop_counter = ui_loop_counter - 1;
    } while (ui_loop_counter != 0);
    ui_event_index = ui_system_register + UI_OFFSET_1200;
    do {
      ui_system_process_widget_event(ui_event_index);
      ui_event_index = ui_event_index + UI_EVENT_FLAG_OFFSET;
      ui_system_register = ui_system_register - 1;
    } while (ui_system_register != 0);
    memset(&ui_stack_data_buffer_extended_60,0,0x1050);
  }
  ui_temp_state_value = 10;
  float_ptr = *(float **)(ui_system_register + 0x10d0);
  ui_long_pointer_var = (longlong *)(ui_callback + UI_OFFSET_80);
  do {
    float_ptr = float_ptr + 1;
    if ((*ui_long_pointer_var != 0) && (ui_register_a < ui_register_a * *float_ptr)) {
      ui_execute_event_action(*ui_long_pointer_var,ui_event_flags);
    }
    ui_temp_state_value = ui_temp_state_value + 1;
    ui_long_pointer_var = ui_long_pointer_var + 1;
  } while (ui_temp_state_value < UI_NETWORK_RESOURCE_TYPE);
  RenderUIComponent(*(ulonglong *)(ui_system_register + 0xfb0) ^ (ulonglong)&ui_stack_base_address);
}

void ui_system_end_widget_resize(void)

{
  float *pfloat_value;
  float ui_temp_float;
  float *float_ptr;
  uint8_t ui_temp_buffer [16];
  int ui_result_status;
  char ui_character_value;
  byte ui_bool_result;
  longlong ui_widget_base;
  longlong ui_system_register_long;
  float *float_ptr;
  longlong *ui_long_counter_ptr0;
  char char_value_one;
  ulonglong ui_event_id_secondary;
  char ui_system_register;
  longlong ui_system_register_long;
  longlong ui_context_pointer;
  bool in_ZF;
  float ui_animation_progress;
  float ui_transition_alpha;
  float ui_scale_factor;
  float ui_rotation_angle;
  float ui_opacity_value;
  float ui_z_depth;
  float ui_temp_float;
  uint8_t ui_xmm_register_secondary [16];
  float ui_temp_float;
  float ui_distance_delta;
  float ui_temp_float;
  uint ui_register_a;
  float ui_register_a;
  float ui_time_delta;
  float ui_register_a;
  float ui_stack_coordinate_x;
  longlong ui_stack_transition_alpha;
  longlong ui_stack_data_offset_48;
  longlong ui_stack_event_parameter;
  uint64_t ui_stack_system_register_value;
  
  ui_time_delta = ui_register_a * ui_register_a;
  if (!in_ZF) {
    char_value_one = *(char *)(ui_system_register + UI_OFFSET_REGISTER_POSITIVE_4000);
    ui_event_id_secondary = 0;
    if (UI_CHAR_NULL < char_value_one) {
      do {
        ui_character_value = (char)ui_event_id_secondary;
        if ((*(ulonglong *)(ui_system_register + 0x770) >> (ui_event_id_secondary & UI_BIT_SHIFT_63) & 1) != 0) {
          float_ptr = (float *)(ui_system_register + UI_OFFSET_1200 + (longlong)ui_character_value * UI_EVENT_FLAG_OFFSET);
          float_value = *float_ptr;
          ui_transition_alpha_value = float_ptr[1];
          float_value = float_ptr[2];
          float_value = float_ptr[3];
          ui_z_depth_value = float_value * float_value + float_value * float_value;
          float_value = float_value * float_value + ui_transition_alpha_value * ui_transition_alpha_value;
          ui_distance_delta = ui_z_depth_value + ui_transition_alpha_value * ui_transition_alpha_value + float_value * float_value;
          float_value = float_value + float_value * float_value + float_value * float_value;
          ui_temp_buffer._data_size_ = ui_z_depth_value + float_value + 1.1754944e-38;
          ui_temp_buffer._data_offset_ = float_value + ui_z_depth_value + 1.1754944e-38;
          ui_temp_buffer._data_format_ = ui_distance_delta + 1.1754944e-38;
          ui_temp_buffer._data_flags_ = float_value + 1.1754944e-38;
          ui_xmm_register_secondary = rsqrtps(ui_xmm_register_secondary,ui_temp_buffer);
          ui_animation_progress = ui_xmm_register_secondary._data_offset_;
          ui_scale_factor_val = ui_xmm_register_secondary._data_size_;
          ui_rotation_angle_value = ui_xmm_register_secondary._data_format_;
          ui_opacity_value = ui_xmm_register_secondary._data_flags_;
          float_ptr = (float *)(ui_system_register + UI_OFFSET_1200 + (longlong)ui_character_value * UI_EVENT_FLAG_OFFSET);
          *float_ptr = (3.0 - ui_animation_progress * ui_animation_progress * (float_value + ui_z_depth_value)) * ui_animation_progress * 0.5 * float_value;
          float_ptr[1] = (3.0 - ui_scale_factor_val * ui_scale_factor_val * (ui_z_depth_value + float_value)) * ui_scale_factor_val * 0.5 * ui_transition_alpha_value;
          float_ptr[2] = (3.0 - ui_rotation_angle_value * ui_rotation_angle_value * ui_distance_delta) * ui_rotation_angle_value * 0.5 * float_value;
          float_ptr[3] = (3.0 - ui_opacity_value * ui_opacity_value * float_value) * ui_opacity_value * 0.5 * float_value;
          char_value_one = *(char *)(ui_system_register + UI_OFFSET_REGISTER_POSITIVE_4000);
        }
        ui_event_id_secondary = (ulonglong)(byte)(ui_character_value + 1U);
      } while ((char)(ui_character_value + 1U) < char_value_one);
    }
    if (ui_system_register != UI_CHAR_NULL) {
      float_ptr = *(float **)(ui_system_register + 0x10d8);
      float_ptr = (float *)(ui_system_register + UI_OFFSET_REGISTER_POSITIVE_4);
      ui_context_pointer = 0;
      do {
        ui_bool_result = *(byte *)(ui_stack_transition_alpha + ui_context_pointer);
        if ((*(ulonglong *)(ui_system_register + 0x770) >> ((ulonglong)ui_bool_result & UI_BIT_SHIFT_63) & 1) != 0) {
          ui_system_cleanupuiui_stack_var_var(&ui_stack_data_buffer_extended_60);
          float_value = float_ptr[1];
          ui_transition_alpha_value = *float_ptr;
          pfloat_value = (float *)(ui_system_register + 0x360 + (longlong)(char)ui_bool_result * UI_EVENT_FLAG_OFFSET);
          float_value = pfloat_value[2];
          float_value = *(float *)((longlong)(char)ui_bool_result * UI_GUARD_CHECK_TYPE0 + UI_MEMORY_DEALLOC_OFFSET +
                             *(longlong *)(ui_system_register + UI_ANIMATION_DATA_OFFSET));
          float_value = (ui_transition_alpha_value * *pfloat_value + float_value * pfloat_value[1]) * float_ptr[UI_OFFSET_22];
          ui_z_depth_value = ui_transition_alpha_value * pfloat_value[1] - float_value * *pfloat_value;
          float_ptr[-1] = (ui_transition_alpha_value * float_value - float_value * ui_z_depth_value) * ui_register_a + float_ptr[-1];
          *float_ptr = (ui_transition_alpha_value * ui_z_depth_value + float_value * float_value) * ui_register_a + *float_ptr;
          float_ptr[1] = ((float_value - float_value) * (float_ptr[UI_OFFSET_22] + 1.0) * 0.5 + float_value) * ui_register_a +
                      float_ptr[1];
        }
        ui_context_pointer = ui_context_pointer + 1;
        float_ptr = float_ptr + UI_WIDGET_RESOURCE_TYPE;
        ui_widget_base = ui_stack_event_parameter;
      } while (ui_context_pointer < 2);
    }
  }
  float_value = *(float *)(ui_system_register + UI_RENDER_CONTEXT_OFFSET);
  ui_bool_result = 0;
  ui_transition_alpha_value = *(float *)(ui_system_register + UI_PATH_SEPARATOR);
  ui_stack_coordinate_x = *(float *)(ui_widget_base + 0x102c);
  float_value = *(float *)(ui_system_register + 0xf88);
  float_value = *(float *)(ui_system_register + 0xf80);
  *(ulonglong *)(ui_widget_base + UI_STACK_SIZE_1280) =
       *(ulonglong *)(ui_widget_base + UI_STACK_SIZE_1280) | *(ulonglong *)(ui_widget_base + 0x810);
  ui_z_depth_value = *(float *)(ui_system_register + 0xf84);
  *(float *)(ui_widget_base + 0x1020) = float_value * ui_time_delta + *(float *)(ui_widget_base + 0x1020);
  *(float *)(ui_widget_base + 0x1024) = *(float *)(ui_widget_base + 0x1024) + ui_z_depth_value * ui_time_delta;
  *(float *)(ui_widget_base + 0x1028) =
       (float_value * ui_time_delta + *(float *)(ui_widget_base + 0x1028)) -
       (0.5 - (float_value + ui_transition_alpha_value) * 0.25) * float_value * ui_time_delta;
  *(float *)(ui_widget_base + 0x102c) = ui_stack_coordinate_x;
  if (UI_CHAR_NULL < *(char *)(ui_widget_base + 0x1040)) {
    do {
      if ((*(ulonglong *)(ui_widget_base + 0x810) >> ((ulonglong)ui_bool_result & UI_BIT_SHIFT_63) & 1) != 0) {
        ui_event_id_secondary = (ulonglong)(char)ui_bool_result;
        float_ptr = (float *)(ui_system_register + UI_OFFSET_1200 + ui_event_id_secondary * UI_EVENT_FLAG_OFFSET);
        float_value = *float_ptr;
        ui_transition_alpha_value = float_ptr[1];
        float_value = float_ptr[2];
        ui_stack_coordinate_x = float_ptr[3];
        float_ptr = (float *)(ui_widget_base + (ui_event_id_secondary + 0x82) * UI_EVENT_FLAG_OFFSET);
        float_value = float_ptr[1];
        ui_z_depth_value = float_ptr[2];
        float_value = float_ptr[3];
        ui_animation_progress = *float_ptr * float_value;
        ui_scale_factor_val = float_value * ui_transition_alpha_value;
        ui_rotation_angle_value = ui_z_depth_value * float_value;
        ui_opacity_value = float_value * ui_stack_coordinate_x;
        ui_distance_delta = ui_opacity_value + ui_animation_progress;
        float_value = ui_rotation_angle_value + ui_scale_factor_val;
        ui_temp_buffer._data_size_ = ui_distance_delta + float_value;
        ui_temp_buffer._data_offset_ = float_value + ui_distance_delta;
        ui_temp_buffer._data_format_ = ui_distance_delta + ui_scale_factor_val + ui_rotation_angle_value;
        ui_temp_buffer._data_flags_ = float_value + ui_animation_progress + ui_opacity_value;
        ui_result_status = movmskps((char)ui_bool_result * 2,ui_temp_buffer);
        if (ui_result_status != 0) {
          float_value = (float)((uint)float_value ^ ui_register_a);
          ui_transition_alpha_value = (float)((uint)ui_transition_alpha_value ^ ui_register_a);
          float_value = (float)((uint)float_value ^ ui_register_a);
          ui_stack_coordinate_x = (float)((uint)ui_stack_coordinate_x ^ ui_register_a);
        }
        float_ptr = (float *)(ui_widget_base + (ui_event_id_secondary + 0x82) * UI_EVENT_FLAG_OFFSET);
        *float_ptr = *float_ptr + ui_time_delta * float_value;
        float_ptr[1] = float_value + ui_time_delta * ui_transition_alpha_value;
        float_ptr[2] = ui_z_depth_value + ui_time_delta * float_value;
        float_ptr[3] = float_value + ui_time_delta * ui_stack_coordinate_x;
        *(ulonglong *)(ui_widget_base + UI_STACK_SIZE_1280) =
             *(ulonglong *)(ui_widget_base + UI_STACK_SIZE_1280) |
             *(ulonglong *)(ui_event_id_secondary * UI_GUARD_CHECK_TYPE0 + UI_SYSTEM_CONFIG_OFFSET + *(longlong *)(ui_system_register + UI_ANIMATION_DATA_OFFSET));
        *(ulonglong *)(ui_widget_base + UI_STACK_SIZE_1288) =
             *(ulonglong *)(ui_widget_base + UI_STACK_SIZE_1288) | 1L << (ui_event_id_secondary & UI_BIT_SHIFT_63);
      }
      ui_bool_result = ui_bool_result + 1;
    } while ((char)ui_bool_result < *(char *)(ui_widget_base + 0x1040));
  }
  ui_time_delta = *(float *)(ui_system_register + UI_RESOURCE_LOAD_TYPE08);
  ui_result_status = 10;
  float_ptr = *(float **)(ui_system_register + 0x10d0);
  ui_long_counter_ptr0 = (longlong *)(ui_stack_data_offset_48 + UI_OFFSET_80);
  do {
    float_ptr = float_ptr + 1;
    if ((*ui_long_counter_ptr0 != 0) && (ui_register_a < ui_time_delta * *float_ptr)) {
      ui_execute_event_action(*ui_long_counter_ptr0,ui_stack_system_register_value);
    }
    ui_result_status = ui_result_status + 1;
    ui_long_counter_ptr0 = ui_long_counter_ptr0 + 1;
  } while (ui_result_status < UI_NETWORK_RESOURCE_TYPE);
  RenderUIComponent(*(ulonglong *)(ui_system_register + 0xfb0) ^ (ulonglong)&ui_stack_base_address);
}

void ui_system_cancel_widget_resize(void)

{
  int ui_temp_state_value;
  longlong ui_system_register_long;
  longlong *ui_long_pointer_var;
  float *float_ptr;
  float ui_register_a;
  longlong ui_stack_data_offset_48;
  uint64_t ui_stack_system_register_value;
  
  ui_temp_state_value = 10;
  float_ptr = *(float **)(ui_system_register + 0x10d0);
  ui_long_pointer_var = (longlong *)(ui_stack_data_offset_48 + UI_OFFSET_80);
  do {
    float_ptr = float_ptr + 1;
    if ((*ui_long_pointer_var != 0) && (ui_register_a < ui_register_a * *float_ptr)) {
      ui_execute_event_action(*ui_long_pointer_var,ui_stack_system_register_value);
    }
    ui_temp_state_value = ui_temp_state_value + 1;
    ui_long_pointer_var = ui_long_pointer_var + 1;
  } while (ui_temp_state_value < UI_NETWORK_RESOURCE_TYPE);
  RenderUIComponent(*(ulonglong *)(ui_system_register + 0xfb0) ^ (ulonglong)&ui_stack_base_address);
}

void ui_system_finalize_widget_resize(void)

{
  int ui_system_register;
  longlong ui_system_register_long;
  longlong *ui_system_register;
  float *ui_system_register;
  float ui_register_a;
  
  do {
    if ((*ui_system_register != 0) && (ui_register_a < ui_register_a * *ui_system_register)) {
      ui_execute_event_action();
    }
    ui_system_register = ui_system_register + 1;
  } while (ui_system_register < UI_NETWORK_RESOURCE_TYPE);
  RenderUIComponent(*(ulonglong *)(ui_system_register + 0xfb0) ^ (ulonglong)&ui_stack_base_address);
}

void ui_process_event_callback(longlong ui_callback,float *ui_event_type,uint32_t ui_event_data,uint32_t ui_event_flags,
                  uint32_t ui_parameter_value,float *ui_parameter_value)

{
  float ui_temp_float;
  char ui_character_value;
  float *float_ptr;
  longlong ui_event_index;
  uint8_t ui_loop_counter;
  uint64_t *ui_callback_ptr;
  int ui_result_status;
  float ui_temp_float;
  float ui_widget_x_coord;
  float ui_widget_y_coord;
  uint32_t ui_event_id_secondary;
  float ui_stack_data_float_extended;
  uint32_t ui_stack_event_parameter;
  
  float_ptr = ui_parameter_value;
  float_ptr[0] = 0.0;
  float_ptr[1] = 0.0;
  float_ptr[2] = 0.0;
  float_ptr[3] = 0.0;
  ui_parameter_value[4] = 0.0;
  float_ptr[6] = 0.0;
  float_ptr[7] = 0.0;
  float_ptr[8] = 0.0;
  float_ptr[9] = 0.0;
  ui_parameter_value[10] = 0.0;
  float_value = *ui_event_type;
  ui_widget_x_coord = ui_event_type[9];
  if (0.0 < ui_widget_x_coord) {
    ui_event_index = ui_system_get_widget_property(*(uint64_t *)(ui_callback + UI_OFFSET_72));
    ui_widget_y_coord = *(float *)(ui_event_index + UI_SHIFT_AMOUNT_20) - *(float *)(ui_event_index + UI_OFFSET_28);
    if (ui_widget_y_coord < 0.0) {
      ui_widget_y_coord = ui_widget_y_coord + 1.0;
    }
    float_value = *(float *)(ui_event_index + 12);
    ui_event_index = ui_system_get_widget_property(*(uint64_t *)(ui_callback + UI_OFFSET_72));
    float_value = *(float *)(ui_event_index + UI_SHIFT_AMOUNT_20);
    ui_event_index = ui_system_get_widget_property(*(uint64_t *)(ui_callback + UI_OFFSET_72));
    ui_parameter_value._data_offset_ = float_value;
    ui_parameter_value._data_size_ = fmodf(float_value + *(float *)(ui_event_index + 12),UI_BIT_SHIFT_63800000);
    ui_event_index = ui_system_get_widget_property(*(uint64_t *)(ui_callback + UI_OFFSET_72));
    ui_system_layout_function(float_ptr,*(uint32_t *)(ui_event_index + 12),&ui_parameter_value,ui_widget_y_coord + float_value,ui_event_flags,ui_widget_x_coord);
    ui_event_index = ui_system_get_widget_property(*(uint64_t *)(ui_callback + UI_OFFSET_72));
    ui_widget_y_coord = *(float *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS) - *(float *)(ui_event_index + UI_OFFSET_32);
    if (ui_widget_y_coord < 0.0) {
      ui_widget_y_coord = ui_widget_y_coord + 1.0;
    }
    float_value = *(float *)(ui_event_index + UI_EVENT_FLAG_OFFSET);
    ui_event_index = ui_system_get_widget_property(*(uint64_t *)(ui_callback + UI_OFFSET_72));
    float_value = *(float *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS);
    ui_event_index = ui_system_get_widget_property(*(uint64_t *)(ui_callback + UI_OFFSET_72));
    ui_parameter_value._data_offset_ = float_value;
    ui_parameter_value._data_size_ = fmodf(float_value + *(float *)(ui_event_index + UI_EVENT_FLAG_OFFSET),UI_BIT_SHIFT_63800000);
    ui_event_index = ui_system_get_widget_property(*(uint64_t *)(ui_callback + UI_OFFSET_72));
    ui_system_layout_function(float_ptr + 6,*(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET),&ui_parameter_value,ui_widget_y_coord + float_value,ui_event_flags,
                        ui_widget_x_coord);
  }
  if (((float_value * 6.0 - 15.0) * float_value + 10.0) * float_value * float_value * float_value + ui_widget_x_coord < 1.0) {
    ui_callback_ptr = (uint64_t *)(ui_callback + 8);
    ui_result_status = 1;
    do {
      ui_event_type = ui_event_type + 1;
      float_value = *ui_event_type;
      if (0.0 < float_value) {
        ui_event_id_secondary = ui_parameter_value;
        if (1 < ui_result_status - 7U) {
          ui_event_id_secondary = ui_event_data;
        }
        ui_event_index = ui_system_get_widget_property(*ui_callback_ptr);
        ui_widget_x_coord = *(float *)(ui_event_index + UI_SHIFT_AMOUNT_20) - *(float *)(ui_event_index + UI_OFFSET_28);
        if (ui_widget_x_coord < 0.0) {
          ui_widget_x_coord = ui_widget_x_coord + 1.0;
        }
        ui_widget_y_coord = *(float *)(ui_event_index + 12);
        ui_event_index = ui_system_get_widget_property(*ui_callback_ptr);
        float_value = *(float *)(ui_event_index + UI_SHIFT_AMOUNT_20);
        ui_event_index = ui_system_get_widget_property(*ui_callback_ptr);
        ui_parameter_value._data_offset_ = float_value;
        ui_parameter_value._data_size_ = fmodf(float_value + *(float *)(ui_event_index + 12),UI_BIT_SHIFT_63800000);
        ui_event_index = ui_system_get_widget_property(*ui_callback_ptr);
        ui_system_layout_function(float_ptr,*(uint32_t *)(ui_event_index + 12),&ui_parameter_value,ui_widget_x_coord + ui_widget_y_coord,ui_event_id_secondary,
                            float_value);
        float_value = *ui_event_type;
        ui_event_index = ui_system_get_widget_property(*ui_callback_ptr);
        ui_widget_x_coord = *(float *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS) - *(float *)(ui_event_index + UI_OFFSET_32);
        if (ui_widget_x_coord < 0.0) {
          ui_widget_x_coord = ui_widget_x_coord + 1.0;
        }
        ui_widget_y_coord = *(float *)(ui_event_index + UI_EVENT_FLAG_OFFSET);
        ui_event_index = ui_system_get_widget_property(*ui_callback_ptr);
        float_value = *(float *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS);
        ui_event_index = ui_system_get_widget_property(*ui_callback_ptr);
        ui_stack_data_float_extended = float_value;
        ui_stack_event_parameter = fmodf(float_value + *(float *)(ui_event_index + UI_EVENT_FLAG_OFFSET),UI_BIT_SHIFT_63800000);
        ui_event_index = ui_system_get_widget_property(*ui_callback_ptr);
        ui_system_layout_function(float_ptr + 6,*(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET),&ui_stack_data_float_extended,ui_widget_x_coord + ui_widget_y_coord,
                            ui_event_id_secondary,float_value);
      }
      ui_result_status = ui_result_status + 1;
      ui_callback_ptr = ui_callback_ptr + 1;
    } while (ui_result_status < 9);
  }
  ui_character_value = *(char *)((longlong)float_ptr + UI_OFFSET_22);
  float_value = 0.0;
  if (ui_character_value == UI_CHAR_NULL) {
    ui_widget_x_coord = 0.0;
  }
  else {
    ui_widget_x_coord = float_ptr[4] * 0.05;
  }
  ui_widget_y_coord = *float_ptr;
  float_value = float_ptr[3];
  if ((ui_widget_y_coord + ui_widget_x_coord < float_value) || (ui_character_value != UI_CHAR_NULL)) {
    ui_loop_counter = 0;
  }
  else {
    ui_loop_counter = 1;
  }
  *(uint8_t *)(float_ptr + 5) = ui_loop_counter;
  if (ui_character_value != UI_CHAR_NULL) {
    float_value = float_ptr[4] * 0.05;
  }
  ui_widget_x_coord = ui_widget_y_coord + 0.2;
  *(bool *)((longlong)float_ptr + UI_OFFSET_22) = float_value <= ui_widget_y_coord + float_value;
  if ((float_value <= ui_widget_x_coord) && (*(char *)((longlong)float_ptr + UI_RENDER_RESOURCE_TYPE) == UI_CHAR_NULL)) {
    *(uint8_t *)((longlong)float_ptr + UI_LAYOUT_RESOURCE_TYPE) = 1;
    *(bool *)((longlong)float_ptr + UI_RENDER_RESOURCE_TYPE) = float_value <= ui_widget_x_coord;
    return ui_system_return_value;
  }
  *(uint8_t *)((longlong)float_ptr + UI_LAYOUT_RESOURCE_TYPE) = 0;
  *(bool *)((longlong)float_ptr + UI_RENDER_RESOURCE_TYPE) = float_value <= ui_widget_x_coord;
  return ui_system_return_value;
}

void ui_update_widget_transform(void)

{
  float ui_temp_float;
  char ui_character_value;
  longlong ui_event_index;
  uint8_t ui_loop_counter;
  uint64_t *ui_widget_base;
  longlong ui_system_register_long;
  float *float_ptr;
  int ui_result_status;
  float *ui_system_register;
  uint32_t ui_xmm0_register;
  float ui_temp_float;
  float ui_max_value;
  uint32_t ui_event_id0;
  float ui_register_a;
  uint32_t ui_register_a;
  float ui_stack_float_temp_value;
  uint32_t ui_stack_temp_unsigned_value;
  float ui_stack_float_temp_value;
  uint32_t ui_stack_temp_unsigned_value;
  
  float_ptr = (float *)(ui_system_register + UI_OFFSET_REGISTER_POSITIVE_4);
  ui_result_status = 1;
  do {
    if (ui_register_a < *float_ptr) {
      ui_event_id0 = ui_register_a;
      if (1 < ui_result_status - 7U) {
        ui_event_id0 = ui_register_a;
      }
      ui_event_index = ui_system_get_widget_property(*ui_widget_base);
      float_value = *(float *)(ui_event_index + UI_SHIFT_AMOUNT_20) - *(float *)(ui_event_index + UI_OFFSET_28);
      if (float_value < ui_register_a) {
        float_value = float_value + ui_max_value;
      }
      float_value = *(float *)(ui_event_index + 12);
      ui_event_index = ui_system_get_widget_property(*ui_widget_base);
      float_value = *(float *)(ui_event_index + UI_SHIFT_AMOUNT_20);
      ui_event_index = ui_system_get_widget_property(*ui_widget_base);
      ui_stack_float_temp_value = float_value;
      ui_stack_temp_unsigned_value = fmodf(float_value + *(float *)(ui_event_index + 12));
      ui_event_index = ui_system_get_widget_property(*ui_widget_base);
      ui_system_layout_function(ui_xmm0_register,*(uint32_t *)(ui_event_index + 12),&ui_stack_data_buffer_extended_f8,
                          float_value + float_value,ui_event_id0);
      ui_event_index = ui_system_get_widget_property(*ui_widget_base);
      float_value = *(float *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS) - *(float *)(ui_event_index + UI_OFFSET_32);
      if (float_value < ui_register_a) {
        float_value = float_value + ui_max_value;
      }
      float_value = *(float *)(ui_event_index + UI_EVENT_FLAG_OFFSET);
      ui_event_index = ui_system_get_widget_property(*ui_widget_base);
      float_value = *(float *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS);
      ui_event_index = ui_system_get_widget_property(*ui_widget_base);
      ui_stack_float_temp_value = float_value;
      ui_stack_temp_unsigned_value = fmodf(float_value + *(float *)(ui_event_index + UI_EVENT_FLAG_OFFSET));
      ui_event_index = ui_system_get_widget_property(*ui_widget_base);
      ui_system_layout_function(ui_system_register + 6,*(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET),&ui_stack_data_buffer_extended_d8,float_value + float_value
                          ,ui_event_id0);
    }
    ui_result_status = ui_result_status + 1;
    float_ptr = float_ptr + 1;
    ui_widget_base = ui_widget_base + 1;
  } while (ui_result_status < 9);
  ui_character_value = *(char *)((longlong)ui_system_register + UI_OFFSET_22);
  float_value = 0.0;
  if (ui_character_value == UI_CHAR_NULL) {
    float_value = 0.0;
  }
  else {
    float_value = ui_system_register[4] * 0.05;
  }
  float_value = *ui_system_register;
  float_value = ui_system_register[3];
  if ((float_value + float_value < float_value) || (ui_character_value != UI_CHAR_NULL)) {
    ui_loop_counter = 0;
  }
  else {
    ui_loop_counter = 1;
  }
  *(uint8_t *)(ui_system_register + 5) = ui_loop_counter;
  if (ui_character_value != UI_CHAR_NULL) {
    float_value = ui_system_register[4] * 0.05;
  }
  float_value = float_value + 0.2;
  *(bool *)((longlong)ui_system_register + UI_OFFSET_22) = float_value <= float_value + float_value;
  if ((float_value <= float_value) && (*(char *)((longlong)ui_system_register + UI_RENDER_RESOURCE_TYPE) == UI_CHAR_NULL)) {
    *(uint8_t *)((longlong)ui_system_register + UI_LAYOUT_RESOURCE_TYPE) = 1;
    *(bool *)((longlong)ui_system_register + UI_RENDER_RESOURCE_TYPE) = float_value <= float_value;
    return ui_system_return_value;
  }
  *(uint8_t *)((longlong)ui_system_register + UI_LAYOUT_RESOURCE_TYPE) = 0;
  *(bool *)((longlong)ui_system_register + UI_RENDER_RESOURCE_TYPE) = float_value <= float_value;
  return ui_system_return_value;
}

void ui_check_widget_state(void)

{
  float ui_temp_float;
  char ui_character_value;
  uint8_t ui_loop_counter;
  float *ui_system_register;
  float ui_temp_float;
  
  ui_character_value = *(char *)((longlong)ui_system_register + UI_OFFSET_22);
  float_value = 0.0;
  if (ui_character_value == UI_CHAR_NULL) {
    float_value = 0.0;
  }
  else {
    float_value = ui_system_register[4] * 0.05;
  }
  float_value = *ui_system_register;
  float_value = ui_system_register[3];
  if ((float_value + float_value < float_value) || (ui_character_value != UI_CHAR_NULL)) {
    ui_loop_counter = 0;
  }
  else {
    ui_loop_counter = 1;
  }
  *(uint8_t *)(ui_system_register + 5) = ui_loop_counter;
  if (ui_character_value != UI_CHAR_NULL) {
    float_value = ui_system_register[4] * 0.05;
  }
  float_value = float_value + 0.2;
  *(bool *)((longlong)ui_system_register + UI_OFFSET_22) = float_value <= float_value + float_value;
  if ((float_value <= float_value) && (*(char *)((longlong)ui_system_register + UI_RENDER_RESOURCE_TYPE) == UI_CHAR_NULL)) {
    *(uint8_t *)((longlong)ui_system_register + UI_LAYOUT_RESOURCE_TYPE) = 1;
    *(bool *)((longlong)ui_system_register + UI_RENDER_RESOURCE_TYPE) = float_value <= float_value;
    return ui_system_return_value;
  }
  *(uint8_t *)((longlong)ui_system_register + UI_LAYOUT_RESOURCE_TYPE) = 0;
  *(bool *)((longlong)ui_system_register + UI_RENDER_RESOURCE_TYPE) = float_value <= float_value;
  return ui_system_return_value;
}

void ui_system_reset_widget_animation(void)

{
  InitializeUIRenderer();
}

void ui_system_process_widget_animation_batch(longlong *ui_callback_context,longlong ui_event_type,uint64_t ui_event_data,longlong ui_event_flags,
                  uint64_t ui_parameter_value,float ui_parameter_value,float ui_parameter_value,float ui_parameter_value,float ui_parameter_value,
                  float ui_callback_primary,float ui_callback1,char ui_callback2)

{
  uint64_t ui_system_event_id;
  longlong ui_event_index;
  char ui_character_value;
  uint8_t ui_loop_counter;
  int ui_result_status;
  float ui_temp_float;
  uint8_t ui_stack_unsigned_array [8];
  uint64_t ui_stack_event_parameter;
  ulonglong ui_temp_ulong;
  uint64_t ui_event_id0;
  uint64_t ui_stack_temp_f8;
  longlong ui_stack_parameter_longf0;
  char charuiui_stack_var_var_e8;
  uint64_t ui_stack_temp_e0;
  longlong ui_stack_parameter_longd8;
  char charuiui_stack_var_var_d0;
  uint64_t ui_stack_unsigned_data_secondary;
  uint8_t ui_stack_array [32];
  uint8_t ui_stack_array [96];
  
  ui_stack_unsigned_data_secondary = UI_BIT_MASK_32BIT_FULLfffffffe;
  ui_system_event_id = *(uint64_t *)(ui_event_type + UI_OFFSET_328);
  float_value = (1.0 - ui_callback_primary) - ui_callback1;
  ui_result_status = 0;
  ui_stack_event_parameter = ui_event_data;
  do {
    float_value = ui_callback_primary;
    switch(ui_result_status) {
    case 0:
      float_value = float_value * ui_parameter_value;
      break;
    case 1:
      float_value = (1.0 - ui_parameter_value) * float_value;
      break;
    case 2:
      goto LAB_UI_WIDGET_UPDATE_COMPLETE;
    case 3:
      float_value = ui_callback1;
LAB_UI_WIDGET_UPDATE_COMPLETE:
      if (ui_callback2 == UI_CHAR_NULL) break;
      goto UI_LABEL_GENERIC_65fce5;
    case 4:
      goto LAB_UI_RENDER_OPERATION_COMPLETE;
    case 5:
      float_value = ui_callback1;
LAB_UI_RENDER_OPERATION_COMPLETE:
      if (ui_callback2 != UI_CHAR_NULL) break;
    default:
      goto UI_LABEL_GENERIC_65fce5;
    }
    float_value = ui_parameter_value * float_value;
    if (0.001 < float_value) {
      float_value = ui_parameter_value;
      if (ui_result_status - 2U < 4) {
        float_value = ui_parameter_value;
      }
      ui_loop_counter = (ulonglong)(uint)float_value;
      ui_event_id0 = ui_system_event_id;
      ui_execute_event_action(*ui_callback,ui_event_data,ui_event_data,float_value,ui_loop_counter,ui_system_event_id);
      if (*(longlong *)(ui_event_flags + 0x810) != 0) {
        ui_loop_counter = (ulonglong)(uint)float_value;
        ui_event_id0 = ui_system_event_id;
        ui_execute_event_action(ui_callback[6],ui_event_flags);
      }
      ui_character_value = ui_system_calculate_widget_metrics(ui_parameter_value,0);
      ui_event_data = ui_stack_event_parameter;
      if (-1 < ui_character_value) {
        ui_loop_counter = ui_system_get_widget_timestamp();
        ui_event_index = *ui_callback;
        float_value = (float)(*(int *)(ui_event_index + 400) - *(int *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGSc)) * float_value +
                (float)*(int *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGSc);
        ui_stack_unsigned_array[0] = 0;
        ui_setup_event_parameters(&ui_stack_temp_f8,ui_event_index,float_value,0,ui_loop_counter,ui_event_id0);
        ui_process_event_callback(ui_stack_temp_f8,ui_stack_array,ui_character_value,float_value,ui_system_event_id,ui_stack_unsigned_array);
        if ((charuiui_stack_var_var_e8 == UI_CHAR_NULL) && (*(char *)(ui_stack_parameter_longf0 + UI_WIDGET_RESOURCE_TYPE4) != UI_CHAR_NULL)) {
          LOCK();
          *(int *)(ui_stack_parameter_longf0 + UI_SHUFFLE_MASK_D8) = *(int *)(ui_stack_parameter_longf0 + UI_SHUFFLE_MASK_D8) + -1;
          UNLOCK();
        }
        ui_setup_event_parameters(&ui_stack_temp_e0,*ui_callback,float_value,0);
        ui_process_event_callback(ui_stack_temp_e0,ui_stack_array,ui_loop_counter,float_value,ui_system_event_id,ui_stack_unsigned_array);
        if ((charuiui_stack_var_var_d0 == UI_CHAR_NULL) && (*(char *)(ui_stack_parameter_longd8 + UI_WIDGET_RESOURCE_TYPE4) != UI_CHAR_NULL)) {
          LOCK();
          *(int *)(ui_stack_parameter_longd8 + UI_SHUFFLE_MASK_D8) = *(int *)(ui_stack_parameter_longd8 + UI_SHUFFLE_MASK_D8) + -1;
          UNLOCK();
        }
        ui_handle_event_parameter(ui_parameter_value,ui_character_value,ui_stack_array,float_value);
        ui_handle_event_parameter(ui_parameter_value,ui_loop_counter,ui_stack_array,float_value);
        ui_event_data = ui_stack_event_parameter;
      }
    }
UI_LABEL_GENERIC_65fce5:
    ui_result_status = ui_result_status + 1;
    ui_callback = ui_callback + 1;
    if (5 < ui_result_status) {
      return ui_system_return_value;
    }
  } while( true );
}

uint64_t ui_system_get_widget_property(longlong ui_callback)

{
  int ui_temp_state_value;
  int ui_result_status;
  longlong *ui_long_pointer_var;
  
  ui_long_pointer_var = (longlong *)(ui_callback + UI_WIDGET_RESOURCE_TYPE8);
  ui_result_status = 0;
  do {
    if ((longlong *)*ui_long_pointer_var != (longlong *)UI_ZERO_OFFSET) {
      ui_temp_state_value = (**(ui_error_code **)(*(longlong *)*ui_long_pointer_var + UI_SNAPSHOT_CREATE_FLAGS))();
      if (ui_temp_state_value == 2) {
        return return *(uint64_t *)(ui_callback + UI_WIDGET_RESOURCE_TYPE8 + (longlong)ui_result_status * 8);
      }
    }
    ui_result_status = ui_result_status + 1;
    ui_long_pointer_var = ui_long_pointer_var + 1;
  } while (ui_result_status < 2);
  return return 0;
}

void ui_system_set_widget_property(uint64_t *ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags,
                  uint64_t ui_parameter_value,uint32_t ui_parameter_value,uint32_t ui_parameter_value,float ui_parameter_value,
                  uint64_t ui_parameter_value,float ui_callback_primary,float ui_callback1,float ui_callback2,char ui_callback3,
                  longlong ui_callback4,int *ui_callback5)

{
  uint64_t ui_system_event_id;
  int ui_result_status;
  float ui_temp_float;
  uint32_t ui_loop_counter;
  float ui_temp_float;
  
  float_value = -1.0;
  ui_result_status = 0;
  float_value = (1.0 - ui_callback2) - ui_callback1;
  ui_system_event_id = *(uint64_t *)(ui_callback4 + UI_OFFSET_328);
  do {
    switch(ui_result_status) {
    case 0:
      float_value = float_value * ui_callback_primary * ui_parameter_value;
      break;
    case 1:
      float_value = (1.0 - ui_callback_primary) * float_value * ui_parameter_value;
      break;
    case 2:
      if (ui_callback3 != UI_CHAR_NULL) goto UI_LABEL_GENERIC_65fef9;
      float_value = ui_parameter_value * ui_callback2;
      break;
    case 3:
      if (ui_callback3 != UI_CHAR_NULL) goto UI_LABEL_GENERIC_65fef9;
      float_value = ui_parameter_value * ui_callback1;
      break;
    case 4:
      if (ui_callback3 == UI_CHAR_NULL) goto UI_LABEL_GENERIC_65fef9;
      float_value = ui_parameter_value * ui_callback2;
      break;
    case 5:
      if (ui_callback3 == UI_CHAR_NULL) goto UI_LABEL_GENERIC_65fef9;
      float_value = ui_parameter_value * ui_callback1;
      break;
    default:
UI_LABEL_GENERIC_65fef9:
      float_value = 0.0;
    }
    if ((ui_callback5 != (int *)UI_ZERO_OFFSET) && (float_value < float_value)) {
      *ui_callback5 = ui_result_status;
      float_value = float_value;
    }
    if (0.001 < float_value) {
      ui_loop_counter = ui_parameter_value;
      if (ui_result_status - 2U < 4) {
        ui_loop_counter = ui_parameter_value;
      }
      ui_execute_event_action(*ui_callback,ui_event_type,ui_event_data,ui_loop_counter,float_value,ui_system_event_id);
    }
    ui_result_status = ui_result_status + 1;
    ui_callback = ui_callback + 1;
    if (5 < ui_result_status) {
      return ui_system_return_value;
    }
  } while( true );
}

float ui_system_calculate_widget_animation_value(longlong *ui_callback_context,float ui_event_type)

{
  float ui_temp_float;
  longlong ui_event_index;
  float ui_temp_float;
  
  ui_event_index = ui_system_start_widget_drag(ui_callback,0);
  float_value = *(float *)(*ui_callback + UI_FLAG_BYTE_8);
  if (*(float *)(ui_event_index + 8) != 0.0) {
    float_value = *(float *)(ui_callback[1] + UI_FLAG_BYTE_8);
    ui_event_index = ui_system_start_widget_drag(ui_callback,0);
    float_value = *(float *)(ui_event_index + 12);
    float_value = *(float *)(ui_event_index + UI_EVENT_FLAG_OFFSET);
    float_value = float_value;
    if (float_value < 0.0) {
      float_value = -float_value;
    }
    float_value = (ui_event_type - float_value) / (float_value - float_value);
    if (float_value <= 1.0) {
      if (float_value <= 0.0) {
        float_value = 0.0;
      }
    }
    else {
      float_value = SQRT(float_value);
    }
    float_value = (float_value - float_value) * float_value + float_value;
  }
  return return float_value;
}

float ui_system_get_widget_animation_speed(void)

{
  float ui_temp_float;
  longlong ui_callback_ptr;
  longlong ui_event_index;
  float ui_temp_float;
  float ui_min_value;
  float ui_temp_float;
  float ui_register_a;
  float ui_max_value;
  
  float_value = *(float *)(ui_callback_ptr + UI_FLAG_BYTE_8);
  ui_event_index = ui_system_start_widget_drag();
  float_value = *(float *)(ui_event_index + 12);
  float_value = *(float *)(ui_event_index + UI_EVENT_FLAG_OFFSET);
  float_value = float_value;
  if (float_value < ui_max_value) {
    float_value = -float_value;
  }
  float_value = (ui_min_value - float_value) / (float_value - float_value);
  if (float_value <= 1.0) {
    if (float_value <= ui_max_value) {
      float_value = ui_max_value;
    }
  }
  else {
    float_value = SQRT(float_value);
  }
  return return (ui_register_a - float_value) * float_value + float_value;
}

void ui_system_cleanup_memory_pool(void)

{
  return ui_system_return_value;
}

float ui_system_calculate_widget_scale(longlong ui_callback,float ui_event_type)

{
  float ui_temp_float;
  longlong ui_event_index;
  float ui_temp_float;
  
  float_value = *(float *)(*(longlong *)(ui_callback + UI_EVENT_FLAG_OFFSET) + UI_FLAG_BYTE_8);
  if (0.0 < ui_event_type) {
    ui_event_index = ui_system_start_widget_drag(ui_callback,2);
    float_value = *(float *)(ui_event_index + 8) / (float_value * ui_event_type);
    float_value = float_value * 0.7;
    if ((float_value * 0.7 <= float_value) && (float_value = float_value * 1.3, float_value <= float_value * 1.3)) {
      float_value = float_value;
    }
    return return float_value;
  }
  return return float_value;
}

longlong ui_system_get_widget_handle(longlong ui_callback)

{
  longlong ui_long_counter;
  longlong ui_event_index;
  
  ui_event_index = 6;
  ui_long_counter = ui_callback;
  do {
    ui_system_clear_widget_callback(ui_long_counter);
    ui_long_counter = ui_long_counter + 0x104;
    ui_event_index = ui_event_index + -1;
  } while (ui_event_index != 0);
  ui_long_counter = ui_callback + 0x618;
  do {
    ui_system_clear_widget_callback(ui_long_counter);
    ui_long_counter = ui_long_counter + 0x104;
    ui_event_index = ui_event_index + -1;
  } while (ui_event_index != 0);
  *(uint64_t *)(ui_callback + 0xc30) = 0;
  return return ui_callback;
}

/**
 * @brief UI系统组件事件处理函数
 * 
 * 该函数负责处理UI组件的各种用户交互事件，包括：
 * - 鼠标点击和移动事件
 * - 键盘输入事件
 * - 触摸事件处理
 * - 焦点管理
 * - 事件分发和路由
 * 
 * @param ui_callback 回调函数指针
 * @param ui_event_type 事件类型
 * @param ui_event_data 事件数据
 * @return void 无返回值
 * 
 * 简化实现：将十六进制函数名ui_system_render_widget替换为语义化名称，并添加详细文档注释
 * 原本实现：完全重构事件处理系统，优化事件分发性能
 */
void ui_system_process_widget_event(longlong ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,longlong ui_event_flags,
                  uint64_t ui_parameter_value,longlong ui_parameter_value)

{
  uint32_t ui_system_event_id;
  uint32_t ui_system_task_id;
  uint32_t ui_loop_counter;
  int ui_result_status;
  float ui_temp_float;
  uint32_t ui_loop_counter;
  uint32_t ui_event_id0;
  uint32_t ui_event_id1;
  uint8_t ui_event_id_secondary;
  
  float_value = *(float *)(ui_parameter_value + UI_OPERATION_RESULT_OFFSET);
  ui_result_status = *(int *)(ui_parameter_value + UI_EVENT_FLAG_OFFSET);
  ui_loop_counter = *(uint32_t *)(ui_parameter_value + UI_BUFFER_SIZE_64);
  ui_system_event_id = *(uint32_t *)(ui_parameter_value + UI_MEMORY_ALLOC_SIZE);
  ui_system_task_id = *(uint32_t *)(ui_parameter_value + UI_EVENT_ID_OFFSET);
  ui_loop_counter = *(uint32_t *)(ui_parameter_value + UI_MEMORY_DEALLOC_OFFSET);
  ui_loop_counter = *(uint32_t *)(ui_parameter_value + UI_OFFSET_68);
  ui_event_id1 = *(uint32_t *)(ui_parameter_value + UI_EVENT_COUNTER_OFFSET);
  float_value = (3.0 - (float_value + float_value)) * float_value * float_value;
  float_value = 1.0 - float_value;
  if (0.0 < float_value) {
    if (*(int *)(ui_parameter_value + UI_SHIFT_AMOUNT_20) == 1) {
      ui_event_id_secondary = *(uint8_t *)(ui_parameter_value + UI_CALLBACK_HANDLER_OFFSET);
      ui_result_status = ui_temp_buffer;
      ui_event_id0 = ui_event_id1;
    }
    else {
      ui_event_id_secondary = 0;
      ui_result_status = ui_temp_buffer;
      ui_event_id0 = ui_loop_counter;
    }
    ui_system_process_widget_animation_batch(**(longlong **)(ui_callback + 0xc30) + (longlong)*(int *)(ui_parameter_value + UI_SHIFT_AMOUNT_20) * UI_WIDGET_CREATE_CALLBACK_OFFSET,
                  ui_event_type,float_value,ui_event_flags,ui_parameter_value,ui_loop_counter,ui_event_id0,float_value,ui_system_event_id,ui_system_task_id,ui_loop_counter,ui_event_id_secondary);
  }
  if (ui_result_status == 1) {
    ui_event_id_secondary = *(uint8_t *)(ui_parameter_value + UI_CALLBACK_HANDLER_OFFSET);
    ui_result_status = ui_temp_buffer;
  }
  else {
    ui_event_id_secondary = 0;
    ui_event_id1 = ui_loop_counter;
  }
  ui_system_process_widget_animation_batch(**(longlong **)(ui_callback + 0xc30) + (longlong)ui_result_status * UI_WIDGET_CREATE_CALLBACK_OFFSET,ui_event_type,ui_event_data,ui_event_flags,
                ui_parameter_value,ui_loop_counter,ui_event_id1,float_value,ui_system_event_id,ui_system_task_id,ui_loop_counter,ui_event_id_secondary);
  ui_system_render_widget_content(ui_event_data);
  if (*(longlong *)(ui_event_flags + UI_STACK_SIZE_1288) != 0) {
    ui_system_render_widget_content(ui_event_flags);
  }
  return ui_system_return_value;
}

void ui_system_handle_widget_input(longlong ui_callback,longlong ui_event_type,longlong ui_event_data,float ui_event_flags,float ui_parameter_value,
                  float *ui_parameter_value,uint8_t ui_parameter_value,uint64_t ui_parameter_value,float ui_parameter_value,
                  uint32_t ui_callback_primary,uint8_t ui_callback1,uint64_t ui_callback2,float ui_callback3,
                  uint32_t ui_callback4,uint8_t ui_callback5,uint64_t ui_callback6,uint8_t ui_callback7,
                  uint8_t ui_callback8,float *ui_callback9)

{
  longlong ui_long_counter;
  uint64_t ui_system_task_id;
  uint8_t ui_temp_buffer [16];
  uint8_t ui_event_buffer_var [16];
  int ui_event_validation_counter;
  uint ui_event_id_secondary;
  float *pui_widget_height_val;
  float ui_animation_progress;
  float ui_xmm0_register;
  float ui_xmm0_register_00;
  float ui_transition_alpha;
  float ui_xmm0_register_01;
  float ui_xmm0_register_02;
  uint32_t ui_event_id6;
  float ui_xmm0_register_03;
  float ui_rotation_angle;
  float ui_opacity_value;
  float ui_z_depth;
  float ui_temp_float;
  uint8_t ui_task_processing_buffer [16];
  uint8_t ui_render_buffer_var [16];
  uint8_t ui_input_data_buffer [16];
  uint8_t ui_widget_data_buffer [16];
  uint8_t ui_window_data_buffer [16];
  uint8_t ui_theme_buffer_var [16];
  uint8_t ui_font_data_buffer [16];
  uint8_t ui_task_index_array_primary [16];
  uint8_t ui_system_shader_buffer_variable [16];
  uint8_t ui_system_layout_data_buffer [16];
  uint8_t ui_temporary_buffer [16];
  uint8_t ui_temp_buffer [16];
  float ui_temp_float;
  uint8_t ui_temp_buffer [4];
  float ui_temp_float;
  uint8_t ui_stack_array [32];
  float *pui_stack_float_198;
  uint32_t ui_stack_data_control_tertiary;
  uint8_t ui_stack_array [8];
  float ui_stack_float_180;
  float ui_stack_float_17c;
  uint64_t ui_stack_variable_callback_data;
  uint64_t ui_stack_variable_event_id;
  float ui_stack_float_168;
  float ui_stack_float_164;
  float ui_stack_float_160;
  uint8_t ui_stack_array [8];
  float ui_stack_float_150;
  float ui_stack_float_14c;
  float ui_stack_transition_alpha;
  float ui_stack_float_144;
  float ui_stack_float_140;
  float ui_stack_float_13c;
  float ui_stack_float_138;
  float ui_stack_float_134;
  float ui_stack_float_130;
  float ui_stack_float_12c;
  uint8_t ui_stack_array [4];
  float ui_stack_float_124;
  uint64_t ui_stack_temp_var_120;
  uint32_t ui_stack_callback_data;
  uint32_t ui_stack_temp_float_param1;
  uint32_t ui_stack_temp_float_param2;
  uint32_t ui_stack_variable_uint_10c;
  uint8_t ui_stack_array [4];
  float ui_stack_float_104;
  uint64_t ui_stack_variable_uint_100;
  uint32_t ui_stack_temp_f8;
  uint32_t ui_stack_temp_f4;
  uint32_t ui_stack_temp_f0;
  uint32_t ui_stack_temp_ec;
  ulonglong ui_stack_temp_e8;
  
  ui_stack_temp_e8 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_system_task_id = *(uint64_t *)(ui_event_data + UI_OFFSET_328);
  if (1e-05 < ABS(ui_event_flags)) {
    ui_stack_data_buffer_extended_neg_184 = 0;
    ProcessUIRenderCommand(ui_event_flags * 0.5);
  }
  float_value = *(float *)(ui_callback + 8);
  if (1.0000001e-06 < *(float *)(ui_callback + 12) * *(float *)(ui_callback + 12) + float_value * float_value) {
    float_value = *(float *)(ui_callback + 12);
    ui_animation_progress = float_value * float_value + float_value * float_value + 1.0;
    ui_task_processing_buffer = rsqrtss(ZEXT416((uint)ui_animation_progress),ZEXT416((uint)ui_animation_progress));
    float_value = ui_task_processing_buffer._data_offset_;
    ui_animation_progress = float_value * 0.5 * (3.0 - ui_animation_progress * float_value * float_value);
    float_value = float_value * ui_animation_progress;
    float_value = -(float_value * ui_animation_progress);
    float_value = float_value * float_value + float_value * float_value;
    ui_task_processing_buffer = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
    float_value = ui_task_processing_buffer._data_offset_;
    float_value = (float)asinf(float_value * 0.5 * (3.0 - float_value * float_value * float_value) * float_value);
    ProcessUIRenderCommand(float_value * 0.5);
  }
  ui_stack_float_168 = *(float *)(ui_callback + UI_EVENT_FLAG_OFFSET);
  if (1.0000001e-06 <
      *(float *)(ui_callback + UI_SHIFT_AMOUNT_20) * *(float *)(ui_callback + UI_SHIFT_AMOUNT_20) + ui_stack_float_168 * ui_stack_float_168) {
    float_value = *(float *)(ui_callback + UI_SHIFT_AMOUNT_20);
    float_value = float_value * float_value + ui_stack_float_168 * ui_stack_float_168 + 1.0;
    ui_task_processing_buffer = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
    ui_animation_progress = ui_task_processing_buffer._data_offset_;
    float_value = ui_animation_progress * 0.5 * (3.0 - float_value * ui_animation_progress * ui_animation_progress);
    ui_stack_float_168 = ui_stack_float_168 * float_value;
    ui_stack_float_160 = -(float_value * float_value);
    float_value = ui_stack_float_160 * ui_stack_float_160 + ui_stack_float_168 * ui_stack_float_168;
    ui_task_processing_buffer = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
    float_value = ui_task_processing_buffer._data_offset_;
    float_value = float_value * 0.5 * (3.0 - float_value * float_value * float_value);
    ui_stack_float_160 = ui_stack_float_160 * float_value;
    ui_stack_float_168 = ui_stack_float_168 * float_value;
    ui_stack_float_164 = (float)asinf(float_value * float_value);
    ProcessUIRenderCommand(ui_stack_float_164 * 0.5);
  }
  if ((*ui_callback9 == 0.0) && (ui_callback9[1] == 0.0)) {
    pui_widget_height_val = (float *)ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_callback7,ui_system_task_id);
    float_value = *pui_widget_height_val;
    float_value = pui_widget_height_val[1];
    ui_animation_progress = pui_widget_height_val[2];
    float_value = pui_widget_height_val[3];
    pui_widget_height_val = (float *)ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_callback8,ui_system_task_id);
    float_value = *pui_widget_height_val;
    float_value = pui_widget_height_val[1];
    float_value = pui_widget_height_val[2];
    float_value = pui_widget_height_val[3];
    pui_widget_height_val = (float *)ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_parameter_value,ui_system_task_id);
    float_value = *pui_widget_height_val;
    float_value = pui_widget_height_val[1];
    float_value = pui_widget_height_val[2];
    float_value = pui_widget_height_val[3];
    pui_widget_height_val = (float *)ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_callback5,ui_system_task_id);
    float_value = *pui_widget_height_val;
    ui_rotation_angle_value = pui_widget_height_val[1];
    ui_opacity_value = pui_widget_height_val[2];
    float_value = pui_widget_height_val[3];
    pui_widget_height_val = (float *)ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_callback1,ui_system_task_id);
    float_value = *pui_widget_height_val;
    float_value = pui_widget_height_val[1];
    float_value = pui_widget_height_val[2];
    float_value = pui_widget_height_val[3];
    float_value = float_value * float_value * -1.0 + float_value * float_value * -1.0 + float_value * float_value + float_value * float_value;
    float_value = float_value * float_value * 1.0 + float_value * float_value * 1.0 + float_value * float_value + float_value * float_value;
    ui_stack_float_124 = float_value * float_value * -1.0 + float_value * float_value * -1.0 + ui_rotation_angle_value * float_value + ui_opacity_value * float_value
    ;
    ui_stack_array = (uint8_t  [4])
                  (float_value * float_value * 1.0 + float_value * float_value * 1.0 + ui_opacity_value * float_value + ui_rotation_angle_value * float_value
                  );
    ui_stack_temp_var_120._data_offset_ =
         ui_rotation_angle_value * float_value * -1.0 + float_value * float_value * -1.0 + ui_opacity_value * float_value + float_value * float_value;
    ui_stack_temp_var_120._data_size_ =
         ui_opacity_value * float_value * -1.0 + float_value * float_value * -1.0 + float_value * float_value + ui_rotation_angle_value * float_value;
    float_value = *ui_parameter_value;
    ui_rotation_angle_value = ui_parameter_value[1];
    ui_opacity_value = ui_parameter_value[2];
    float_value = ui_parameter_value[3];
    float_value = ui_parameter_value * 0.33;
    ui_stack_float_140 = float_value * float_value * -1.0 + float_value * float_value * -1.0 + ui_rotation_angle_value * float_value + ui_opacity_value * float_value
    ;
    ui_stack_transition_alpha = ui_rotation_angle_value * float_value * -1.0 + float_value * float_value * -1.0 + ui_opacity_value * float_value + float_value * float_value
    ;
    ui_stack_float_144 = ui_opacity_value * float_value * -1.0 + float_value * float_value * -1.0 + float_value * float_value + ui_rotation_angle_value * float_value
    ;
    ui_stack_variable_callback_data._data_offset_ =
         float_value * float_value * 1.0 + float_value * float_value * 1.0 + ui_opacity_value * float_value + ui_rotation_angle_value * float_value;
    ui_stack_array._data_size_ = ui_stack_transition_alpha;
    ui_stack_array._data_offset_ = ui_stack_float_140;
    ui_stack_float_150 = ui_stack_float_144;
    ui_stack_float_14c = ui_stack_transition_alpha;
    float_value = float_value * ui_stack_float_140 * 1.0 + ui_animation_progress * ui_stack_float_144 * 1.0 +
             (float_value * (float)ui_stack_variable_callback_data - float_value * ui_stack_transition_alpha);
    float_value = float_value * ui_stack_transition_alpha * 1.0 + float_value * ui_stack_float_140 * 1.0 +
             (ui_animation_progress * (float)ui_stack_variable_callback_data - float_value * ui_stack_float_144);
    float_value = float_value * ui_stack_float_144 * 1.0 + float_value * ui_stack_transition_alpha * 1.0 +
             (float_value * (float)ui_stack_variable_callback_data - ui_animation_progress * ui_stack_float_140);
    float_value = ui_animation_progress * ui_stack_transition_alpha * -1.0 + float_value * ui_stack_float_144 * -1.0 +
             (float_value * (float)ui_stack_variable_callback_data - float_value * ui_stack_float_140);
    float_value = float_value;
    ui_rotation_angle_value = float_value;
    ui_opacity_value = ui_animation_progress;
    float_value = float_value;
    ui_stack_float_13c = ui_stack_float_140;
    ui_stack_float_138 = ui_stack_float_144;
    ui_stack_float_134 = ui_stack_float_140;
    ui_stack_float_130 = ui_stack_transition_alpha;
    ui_stack_float_12c = ui_stack_float_144;
    ui_stack_variable_callback_data._data_size_ = (float)ui_stack_variable_callback_data;
    ui_stack_variable_event_id._data_offset_ = (float)ui_stack_variable_callback_data;
    ui_stack_variable_event_id._data_size_ = (float)ui_stack_variable_callback_data;
    if ((0.001 <= float_value) &&
       (float_value = float_value, ui_rotation_angle_value = float_value, ui_opacity_value = float_value, float_value = float_value, float_value <= 0.999)) {
      float_value = ui_animation_progress * float_value;
      ui_rotation_angle_value = float_value * float_value;
      ui_stack_temp_f8 = UI_FLOAT_NEGATIVE_ONE;
      ui_stack_temp_f4 = UI_FLOAT_NEGATIVE_ONE;
      ui_stack_temp_f0 = UI_FLOAT_NEGATIVE_ONE;
      ui_stack_temp_ec = UI_FLOAT_NEGATIVE_ONE;
      ui_task_processing_buffer._data_offset_ = float_value + float_value * float_value;
      ui_task_processing_buffer._data_size_ = ui_rotation_angle_value + float_value * float_value;
      ui_task_processing_buffer._data_format_ = float_value + float_value;
      ui_task_processing_buffer._data_flags_ = ui_rotation_angle_value + ui_rotation_angle_value;
      ui_render_buffer_var._4_12_ = ui_task_processing_buffer._4_12_;
      ui_render_buffer_var._data_offset_ = ui_task_processing_buffer._data_offset_ + ui_task_processing_buffer._data_size_;
      ui_stack_variable_uint_100 = UI_BIT_SHIFT_638000003f800000;
      _aui_stack_variable_uint_108 = UI_BIT_SHIFT_638000003f800000;
      ui_event_id_secondary = movmskps((int)pui_widget_height_val,ui_render_buffer_var);
      pui_widget_height_val = (float *)((ulonglong)(ui_event_id_secondary & 1) * 2);
      ui_long_counter = (ulonglong)(ui_event_id_secondary & 1) * UI_EVENT_FLAG_OFFSET;
      ui_stack_array = (uint8_t  [4])(*(float *)(ui_stack_array + ui_long_counter) * float_value);
      ui_stack_float_104 = *(float *)(ui_stack_array + ui_long_counter + 4) * float_value;
      ui_stack_variable_uint_100._data_offset_ = *(float *)(ui_stack_array + ui_long_counter + 8) * float_value;
      ui_stack_variable_uint_100._data_size_ = *(float *)(ui_stack_array + ui_long_counter + 12) * float_value;
      if (0.9995 < ABS(ui_render_buffer_var._data_offset_)) {
        float_value = 1.0 - float_value;
        ui_rotation_angle_value = float_value * float_value + float_value * (float)ui_stack_array;
        float_value = float_value * float_value + float_value * ui_stack_float_104;
        float_value = ui_animation_progress * float_value + float_value * (float)ui_stack_variable_uint_100;
        float_value = float_value * float_value + float_value * ui_stack_variable_uint_100._data_size_;
        float_value = float_value * float_value + ui_rotation_angle_value * ui_rotation_angle_value;
        float_value = float_value * float_value + float_value * float_value;
        float_value = float_value + float_value * float_value + float_value * float_value;
        float_value = float_value + ui_rotation_angle_value * ui_rotation_angle_value + float_value * float_value;
        ui_event_buffer_var._data_size_ = float_value + float_value + 1.1754944e-38;
        ui_event_buffer_var._data_offset_ = float_value + float_value + 1.1754944e-38;
        ui_event_buffer_var._data_format_ = float_value + 1.1754944e-38;
        ui_event_buffer_var._data_flags_ = float_value + 1.1754944e-38;
        ui_task_processing_buffer = rsqrtps(_aui_stack_variable_uint_108,ui_event_buffer_var);
        ui_animation_progress = ui_task_processing_buffer._data_offset_;
        float_value = ui_task_processing_buffer._data_size_;
        ui_opacity_value = ui_task_processing_buffer._data_format_;
        float_value = ui_task_processing_buffer._data_flags_;
        float_value = ui_rotation_angle_value * (3.0 - ui_animation_progress * ui_animation_progress * (float_value + float_value)) * ui_animation_progress * 0.5;
        ui_rotation_angle_value = float_value * (3.0 - float_value * float_value * (float_value + float_value)) * float_value * 0.5;
        ui_opacity_value = float_value * (3.0 - ui_opacity_value * ui_opacity_value * float_value) * ui_opacity_value * 0.5;
        float_value = float_value * (3.0 - float_value * float_value * float_value) * float_value * 0.5;
      }
      else {
        ui_stack_variable_event_id._data_size_ = (float)ui_stack_variable_event_id;
        float_value = (float)acosf();
        ui_rotation_angle_value = (float)sinf();
        float_value = (float)sinf(float_value - float_value * float_value);
        float_value = float_value * (1.0 / ui_rotation_angle_value);
        pui_widget_height_val = (float *)sinf(float_value * float_value);
        float_value = ui_xmm0_register * (1.0 / ui_rotation_angle_value);
        float_value = float_value * float_value + float_value * (float)ui_stack_array;
        ui_rotation_angle_value = float_value * float_value + float_value * ui_stack_float_104;
        ui_opacity_value = float_value * ui_animation_progress + float_value * (float)ui_stack_variable_uint_100;
        float_value = float_value * float_value + float_value * ui_stack_variable_uint_100._data_size_;
      }
    }
    ui_event_validation_counter = (int)pui_widget_height_val;
    ui_stack_array._data_size_ = ui_rotation_angle_value;
    ui_stack_array._data_offset_ = float_value;
    ui_stack_float_180 = ui_opacity_value;
    ui_stack_float_17c = float_value;
    ui_stack_float_168 = ui_parameter_value * 0.66;
    float_value = float_value * (float)ui_stack_array._data_offset_ * 1.0 + ui_opacity_value * ui_stack_float_138 * 1.0 +
             (ui_rotation_angle_value * (float)ui_stack_variable_callback_data - float_value * ui_stack_transition_alpha);
    float_value = float_value * (float)ui_stack_array._data_size_ * 1.0 + float_value * ui_stack_float_134 * 1.0 +
             (ui_opacity_value * ui_stack_variable_callback_data._data_size_ - ui_rotation_angle_value * ui_stack_float_144);
    float_value = float_value * ui_stack_float_150 * 1.0 + ui_rotation_angle_value * ui_stack_float_130 * 1.0 +
             (float_value * (float)ui_stack_variable_event_id - ui_opacity_value * ui_stack_float_140);
    float_value = ui_opacity_value * ui_stack_float_14c * -1.0 + float_value * ui_stack_float_12c * -1.0 +
             (float_value * ui_stack_variable_event_id._data_size_ - ui_rotation_angle_value * ui_stack_float_13c);
    float_value = float_value;
    ui_animation_progress = float_value;
    float_value = float_value;
    if ((0.001 <= ui_stack_float_168) &&
       (float_value = float_value, float_value = float_value, ui_animation_progress = float_value, float_value = float_value, ui_stack_float_168 <= 0.999)) {
      float_value = float_value * float_value;
      ui_stack_temp_f8 = UI_FLOAT_NEGATIVE_ONE;
      ui_stack_temp_f4 = UI_FLOAT_NEGATIVE_ONE;
      ui_stack_temp_f0 = UI_FLOAT_NEGATIVE_ONE;
      ui_stack_temp_ec = UI_FLOAT_NEGATIVE_ONE;
      ui_input_data_buffer._data_offset_ = float_value + float_value * float_value;
      ui_input_data_buffer._data_size_ = float_value + float_value * float_value;
      ui_input_data_buffer._data_format_ = float_value + float_value;
      ui_input_data_buffer._data_flags_ = float_value + float_value;
      ui_widget_data_buffer._4_12_ = ui_input_data_buffer._4_12_;
      ui_widget_data_buffer._data_offset_ = ui_input_data_buffer._data_offset_ + ui_input_data_buffer._data_size_;
      ui_stack_variable_uint_100 = UI_BIT_SHIFT_638000003f800000;
      _aui_stack_variable_uint_108 = UI_BIT_SHIFT_638000003f800000;
      ui_event_id_secondary = movmskps(ui_event_validation_counter,ui_widget_data_buffer);
      ui_event_validation_counter = (ui_event_id_secondary & 1) * 2;
      ui_long_counter = (ulonglong)(ui_event_id_secondary & 1) * UI_EVENT_FLAG_OFFSET;
      ui_stack_array = (uint8_t  [4])(*(float *)(ui_stack_array + ui_long_counter) * float_value);
      ui_stack_float_104 = *(float *)(ui_stack_array + ui_long_counter + 4) * float_value;
      ui_stack_variable_uint_100._data_offset_ = *(float *)(ui_stack_array + ui_long_counter + 8) * float_value;
      ui_stack_variable_uint_100._data_size_ = *(float *)(ui_stack_array + ui_long_counter + 12) * float_value;
      if (0.9995 < ABS(ui_widget_data_buffer._data_offset_)) {
        float_value = 1.0 - ui_stack_float_168;
        float_value = float_value * float_value + ui_stack_float_168 * (float)ui_stack_array;
        float_value = float_value * float_value + ui_stack_float_168 * ui_stack_float_104;
        float_value = float_value * float_value + ui_stack_float_168 * (float)ui_stack_variable_uint_100;
        float_value = float_value * float_value + ui_stack_float_168 * ui_stack_variable_uint_100._data_size_;
        float_value = float_value * float_value + float_value * float_value;
        ui_animation_progress = float_value * float_value + float_value * float_value;
        float_value = float_value + float_value * float_value + float_value * float_value;
        float_value = ui_animation_progress + float_value * float_value + float_value * float_value;
        ui_temp_buffer._data_size_ = float_value + ui_animation_progress + 1.1754944e-38;
        ui_temp_buffer._data_offset_ = ui_animation_progress + float_value + 1.1754944e-38;
        ui_temp_buffer._data_format_ = float_value + 1.1754944e-38;
        ui_temp_buffer._data_flags_ = float_value + 1.1754944e-38;
        ui_task_processing_buffer = rsqrtps(_aui_stack_variable_uint_108,ui_temp_buffer);
        float_value = ui_task_processing_buffer._data_offset_;
        float_value = ui_task_processing_buffer._data_size_;
        float_value = ui_task_processing_buffer._data_format_;
        float_value = ui_task_processing_buffer._data_flags_;
        float_value = float_value * (3.0 - float_value * float_value * (ui_animation_progress + float_value)) * float_value * 0.5;
        float_value = float_value * (3.0 - float_value * float_value * (float_value + ui_animation_progress)) * float_value * 0.5;
        ui_animation_progress = float_value * (3.0 - float_value * float_value * float_value) * float_value * 0.5;
        float_value = float_value * (3.0 - float_value * float_value * float_value) * float_value * 0.5;
      }
      else {
        float_value = (float)acosf();
        float_value = (float)sinf();
        ui_animation_progress = float_value * ui_stack_float_168;
        float_value = (float)sinf(float_value - ui_animation_progress);
        float_value = float_value * (1.0 / float_value);
        ui_event_validation_counter = sinf(ui_animation_progress);
        float_value = ui_xmm0_register_00 * (1.0 / float_value);
        float_value = float_value * float_value + float_value * (float)ui_stack_array;
        float_value = float_value * float_value + float_value * ui_stack_float_104;
        ui_animation_progress = float_value * float_value + float_value * (float)ui_stack_variable_uint_100;
        float_value = float_value * float_value + float_value * ui_stack_variable_uint_100._data_size_;
      }
    }
    ui_stack_variable_callback_data = CONCAT44(float_value,float_value);
    ui_stack_variable_event_id = CONCAT44(float_value,ui_animation_progress);
    if (0.001 <= ui_parameter_value) {
      if (ui_parameter_value <= 0.999) {
        float_value = ui_parameter_value[2] * float_value;
        float_value = ui_parameter_value[3] * float_value;
        ui_stack_temp_f8 = UI_FLOAT_NEGATIVE_ONE;
        ui_stack_temp_f4 = UI_FLOAT_NEGATIVE_ONE;
        ui_stack_temp_f0 = UI_FLOAT_NEGATIVE_ONE;
        ui_stack_temp_ec = UI_FLOAT_NEGATIVE_ONE;
        ui_window_data_buffer._data_offset_ = float_value + *ui_parameter_value * float_value;
        ui_window_data_buffer._data_size_ = float_value + ui_parameter_value[1] * float_value;
        ui_window_data_buffer._data_format_ = float_value + float_value;
        ui_window_data_buffer._data_flags_ = float_value + float_value;
        ui_theme_buffer_var._4_12_ = ui_window_data_buffer._4_12_;
        ui_theme_buffer_var._data_offset_ = ui_window_data_buffer._data_offset_ + ui_window_data_buffer._data_size_;
        ui_stack_variable_uint_100 = UI_BIT_SHIFT_638000003f800000;
        _aui_stack_variable_uint_108 = UI_BIT_SHIFT_638000003f800000;
        ui_event_id_secondary = movmskps(ui_event_validation_counter,ui_theme_buffer_var);
        ui_long_counter = (ulonglong)(ui_event_id_secondary & 1) * UI_EVENT_FLAG_OFFSET;
        float_value = *(float *)(ui_stack_array + ui_long_counter);
        float_value = *(float *)(ui_stack_array + ui_long_counter + 4);
        float_value = *(float *)(ui_stack_array + ui_long_counter + 8);
        float_value = *(float *)(ui_stack_array + ui_long_counter + 12);
        float_value = *ui_parameter_value;
        float_value = ui_parameter_value[1];
        float_value = ui_parameter_value[2];
        float_value = ui_parameter_value[3];
        if (0.9995 < ABS(ui_theme_buffer_var._data_offset_)) {
          float_value = 1.0 - ui_parameter_value;
          float_value = float_value * float_value + ui_parameter_value * float_value * float_value;
          float_value = float_value * float_value + float_value * float_value;
          float_value = float_value + float_value * float_value + float_value * float_value;
          ui_temp_buffer._data_size_ = float_value + float_value + 1.1754944e-38;
          ui_temp_buffer._data_offset_ = float_value + float_value + 1.1754944e-38;
          ui_temp_buffer._data_format_ = float_value + 1.1754944e-38;
          ui_temp_buffer._data_flags_ = float_value + 1.1754944e-38;
          ui_task_processing_buffer = rsqrtps(ui_theme_buffer_var,ui_temp_buffer);
          float_value = ui_task_processing_buffer._data_offset_;
          float_value = ui_task_processing_buffer._data_size_;
          float_value = ui_task_processing_buffer._data_format_;
          float_value = ui_task_processing_buffer._data_flags_;
          float_value = float_value * (3.0 - float_value * float_value * (float_value + float_value)) * float_value * 0.5;
          float_value = float_value * (3.0 - float_value * float_value * float_value) * float_value * 0.5;
        }
        else {
          float_value = (float)acosf();
          float_value = (float)sinf();
          float_value = (float)sinf(float_value - float_value * ui_parameter_value);
          float_value = float_value * (1.0 / float_value);
          float_value = (float)sinf(float_value * ui_parameter_value);
          float_value = float_value * (1.0 / float_value);
          float_value = float_value * float_value + float_value * float_value * float_value;
        }
      }
      else {
        float_value = *ui_parameter_value;
        float_value = ui_parameter_value[1];
        float_value = ui_parameter_value[2];
        float_value = ui_parameter_value[3];
      }
    }
    float_value = float_value * float_value * 1.0 + float_value * float_value * 1.0 + (float_value * float_value - float_value * float_value);
    float_value = float_value * float_value * -1.0 + float_value * float_value * -1.0 + (float_value * float_value - float_value * float_value);
    float_value = ui_stack_float_124 * float_value * 1.0 + ui_stack_temp_var_120._data_size_ * float_value * 1.0 +
             ((float)ui_stack_array * float_value - (float)ui_stack_temp_var_120 * float_value);
    float_value = (float)ui_stack_temp_var_120 * float_value * 1.0 + ui_stack_float_124 * float_value * 1.0 +
             ((float)ui_stack_array * float_value - ui_stack_temp_var_120._data_size_ * float_value);
    float_value = ui_stack_temp_var_120._data_size_ * float_value * 1.0 + (float)ui_stack_temp_var_120 * float_value * 1.0 +
             ((float)ui_stack_array * float_value - ui_stack_float_124 * float_value);
    float_value = (float)ui_stack_temp_var_120 * float_value * -1.0 + ui_stack_temp_var_120._data_size_ * float_value * -1.0 +
             ((float)ui_stack_array * float_value - ui_stack_float_124 * float_value);
    ui_stack_float_138 = float_value;
    ui_stack_float_134 = float_value;
    ui_stack_float_130 = float_value;
    ui_stack_float_12c = float_value;
    if (0.0 < ui_parameter_value) {
      ui_event_validation_counter = ui_validate_event_parameters(ui_stack_array,ui_parameter_value);
      float_value = ui_stack_array;
      float_value = ui_stack_array._data_size_;
      float_value = ui_stack_array._data_format_;
      float_value = ui_stack_array._data_flags_;
      ui_stack_float_17c = float_value;
      _aui_stack_buffer_mask_value = ui_stack_array._4_12_;
      ui_stack_float_150 = float_value;
      ui_stack_array = (uint8_t  [8])ui_stack_array._8_8_;
      ui_stack_float_14c = float_value;
      ui_stack_float_104 = float_value;
      ui_stack_array = (uint8_t  [4])float_value;
      ui_stack_variable_uint_100._data_offset_ = float_value;
      ui_stack_variable_uint_100._data_size_ = float_value;
      float_value = float_value * float_value * 1.0 + float_value * float_value * 1.0 + (float_value * float_value - float_value * float_value);
      float_value = float_value * float_value * -1.0 + float_value * float_value * -1.0 + (float_value * float_value - float_value * float_value)
      ;
      float_value = float_value;
      ui_z_depth_value = float_value;
      float_value = float_value;
      ui_transition_alpha_value = float_value;
      ui_stack_transition_alpha = float_value;
      ui_stack_float_144 = float_value;
      ui_stack_float_140 = float_value;
      ui_stack_float_13c = float_value;
      if ((0.001 <= ui_parameter_value) &&
         (float_value = float_value, ui_z_depth_value = float_value, float_value = float_value, ui_transition_alpha_value = float_value, ui_parameter_value <= 0.999)) {
        float_value = float_value * float_value;
        ui_z_depth_value = float_value * float_value;
        ui_stack_callback_data = UI_FLOAT_NEGATIVE_ONE;
        ui_stack_temp_114 = UI_FLOAT_NEGATIVE_ONE;
        ui_stack_temp_110 = UI_FLOAT_NEGATIVE_ONE;
        ui_stack_variable_uint_10c = UI_FLOAT_NEGATIVE_ONE;
        ui_font_data_buffer._data_offset_ = float_value + float_value * float_value;
        ui_font_data_buffer._data_size_ = ui_z_depth_value + float_value * float_value;
        ui_font_data_buffer._data_format_ = float_value + float_value;
        ui_font_data_buffer._data_flags_ = ui_z_depth_value + ui_z_depth_value;
        ui_task_index_array_primary._4_12_ = ui_font_data_buffer._4_12_;
        ui_task_index_array_primary._data_offset_ = ui_font_data_buffer._data_offset_ + ui_font_data_buffer._data_size_;
        ui_stack_temp_var_120 = UI_BIT_SHIFT_638000003f800000;
        _aui_stack_temp_128 = UI_BIT_SHIFT_638000003f800000;
        ui_event_id_secondary = movmskps(ui_event_validation_counter,ui_task_index_array_primary);
        ui_event_validation_counter = (ui_event_id_secondary & 1) * 2;
        ui_long_counter = (ulonglong)(ui_event_id_secondary & 1) * UI_EVENT_FLAG_OFFSET;
        ui_stack_array = (uint8_t  [4])(*(float *)(ui_stack_array + ui_long_counter) * float_value);
        ui_stack_float_124 = *(float *)(ui_stack_array + ui_long_counter + 4) * float_value;
        ui_stack_temp_var_120._data_offset_ = *(float *)(ui_stack_array + ui_long_counter + 8) * float_value;
        ui_stack_temp_var_120._data_size_ = *(float *)(ui_stack_array + ui_long_counter + 12) * float_value;
        if (0.9995 < ABS(ui_task_index_array_primary._data_offset_)) {
          float_value = 1.0 - ui_parameter_value;
          ui_z_depth_value = float_value * float_value + ui_parameter_value * (float)ui_stack_array;
          float_value = float_value * float_value + ui_parameter_value * ui_stack_float_124;
          float_value = float_value * float_value + ui_parameter_value * (float)ui_stack_temp_var_120;
          float_value = float_value * float_value + ui_parameter_value * ui_stack_temp_var_120._data_size_;
          float_value = float_value * float_value + ui_z_depth_value * ui_z_depth_value;
          float_value = float_value * float_value + float_value * float_value;
          float_value = float_value + float_value * float_value + float_value * float_value;
          float_value = float_value + ui_z_depth_value * ui_z_depth_value + float_value * float_value;
          ui_temp_buffer._data_size_ = float_value + float_value + 1.1754944e-38;
          ui_temp_buffer._data_offset_ = float_value + float_value + 1.1754944e-38;
          ui_temp_buffer._data_format_ = float_value + 1.1754944e-38;
          ui_temp_buffer._data_flags_ = float_value + 1.1754944e-38;
          ui_task_processing_buffer = rsqrtps(_aui_stack_temp_128,ui_temp_buffer);
          float_value = ui_task_processing_buffer._data_offset_;
          float_value = ui_task_processing_buffer._data_size_;
          float_value = ui_task_processing_buffer._data_format_;
          ui_transition_alpha_value = ui_task_processing_buffer._data_flags_;
          float_value = ui_z_depth_value * (3.0 - float_value * float_value * (float_value + float_value)) * float_value * 0.5;
          ui_z_depth_value = float_value * (3.0 - float_value * float_value * (float_value + float_value)) * float_value * 0.5;
          float_value = float_value * (3.0 - float_value * float_value * float_value) * float_value * 0.5;
          ui_transition_alpha_value = float_value * (3.0 - ui_transition_alpha_value * ui_transition_alpha_value * float_value) * ui_transition_alpha_value * 0.5;
        }
        else {
          float_value = (float)acosf();
          float_value = (float)sinf();
          ui_transition_alpha_value = (float)sinf(float_value - float_value * ui_parameter_value);
          ui_transition_alpha_value = ui_transition_alpha_value * (1.0 / float_value);
          ui_event_validation_counter = sinf(float_value * ui_parameter_value);
          float_value = ui_xmm0_register_01 * (1.0 / float_value);
          float_value = (float)ui_stack_array._data_offset_;
          float_value = (float)ui_stack_array._data_size_;
          float_value = ui_stack_float_180;
          float_value = ui_stack_float_17c;
          float_value = (float)ui_stack_array._data_offset_;
          float_value = (float)ui_stack_array._data_size_;
          float_value = ui_stack_float_150;
          float_value = ui_stack_float_14c;
          float_value = ui_transition_alpha_value * float_value + float_value * (float)ui_stack_array;
          ui_z_depth_value = ui_transition_alpha_value * float_value + float_value * ui_stack_float_124;
          float_value = ui_transition_alpha_value * float_value + float_value * (float)ui_stack_temp_var_120;
          ui_transition_alpha_value = ui_transition_alpha_value * float_value + float_value * ui_stack_temp_var_120._data_size_;
        }
      }
      float_value = ui_parameter_value * 0.66;
      float_value = float_value * float_value * 1.0 + float_value * ui_stack_transition_alpha * 1.0 +
               (float_value * float_value - ui_animation_progress * (float)ui_stack_array);
      float_value = float_value * float_value * 1.0 + ui_animation_progress * ui_stack_float_144 * 1.0 +
               (float_value * float_value - float_value * ui_stack_float_104);
      float_value = ui_animation_progress * float_value * 1.0 + float_value * ui_stack_float_140 * 1.0 +
               (float_value * float_value - float_value * (float)ui_stack_variable_uint_100);
      float_value = float_value * float_value * -1.0 + ui_animation_progress * ui_stack_float_13c * -1.0 +
               (float_value * float_value - float_value * ui_stack_variable_uint_100._data_size_);
      float_value = float_value;
      float_value = ui_animation_progress;
      float_value = float_value;
      ui_stack_float_138 = float_value;
      ui_stack_float_134 = ui_z_depth_value;
      ui_stack_float_130 = float_value;
      ui_stack_float_12c = ui_transition_alpha_value;
      if ((0.001 <= float_value) &&
         (float_value = float_value, float_value = float_value, float_value = float_value, float_value = float_value, float_value <= 0.999)) {
        float_value = ui_animation_progress * float_value;
        float_value = float_value * float_value;
        ui_stack_callback_data = UI_FLOAT_NEGATIVE_ONE;
        ui_stack_temp_114 = UI_FLOAT_NEGATIVE_ONE;
        ui_stack_temp_110 = UI_FLOAT_NEGATIVE_ONE;
        ui_stack_variable_uint_10c = UI_FLOAT_NEGATIVE_ONE;
        ui_system_shader_buffer_variable._data_offset_ = float_value + float_value * float_value;
        ui_system_shader_buffer_variable._data_size_ = float_value + float_value * float_value;
        ui_system_shader_buffer_variable._data_format_ = float_value + float_value;
        ui_system_shader_buffer_variable._data_flags_ = float_value + float_value;
        ui_system_layout_data_buffer._4_12_ = ui_system_shader_buffer_variable._4_12_;
        ui_system_layout_data_buffer._data_offset_ = ui_system_shader_buffer_variable._data_offset_ + ui_system_shader_buffer_variable._data_size_;
        ui_stack_temp_var_120 = UI_BIT_SHIFT_638000003f800000;
        _aui_stack_temp_128 = UI_BIT_SHIFT_638000003f800000;
        ui_event_id_secondary = movmskps(ui_event_validation_counter,ui_system_layout_data_buffer);
        ui_event_validation_counter = (ui_event_id_secondary & 1) * 2;
        ui_long_counter = (ulonglong)(ui_event_id_secondary & 1) * UI_EVENT_FLAG_OFFSET;
        ui_stack_array = (uint8_t  [4])(*(float *)(ui_stack_array + ui_long_counter) * float_value);
        ui_stack_float_124 = *(float *)(ui_stack_array + ui_long_counter + 4) * float_value;
        ui_stack_temp_var_120._data_offset_ = *(float *)(ui_stack_array + ui_long_counter + 8) * float_value;
        ui_stack_temp_var_120._data_size_ = *(float *)(ui_stack_array + ui_long_counter + 12) * float_value;
        if (0.9995 < ABS(ui_system_layout_data_buffer._data_offset_)) {
          float_value = 1.0 - float_value;
          float_value = float_value * float_value + float_value * (float)ui_stack_array;
          float_value = float_value * float_value + float_value * ui_stack_float_124;
          float_value = ui_animation_progress * float_value + float_value * (float)ui_stack_temp_var_120;
          float_value = float_value * float_value + float_value * ui_stack_temp_var_120._data_size_;
          float_value = float_value * float_value + float_value * float_value;
          float_value = float_value + float_value * float_value + float_value * float_value;
          ui_temp_buffer._data_size_ = float_value + float_value + 1.1754944e-38;
          ui_temp_buffer._data_offset_ = float_value + float_value + 1.1754944e-38;
          ui_temp_buffer._data_format_ = float_value + 1.1754944e-38;
          ui_temp_buffer._data_flags_ = float_value + 1.1754944e-38;
          ui_task_processing_buffer = rsqrtps(_aui_stack_temp_128,ui_temp_buffer);
          ui_animation_progress = ui_task_processing_buffer._data_offset_;
          float_value = ui_task_processing_buffer._data_size_;
          float_value = ui_task_processing_buffer._data_format_;
          float_value = ui_task_processing_buffer._data_flags_;
          float_value = float_value * (3.0 - ui_animation_progress * ui_animation_progress * (float_value + float_value)) * ui_animation_progress * 0.5;
          float_value = float_value * (3.0 - float_value * float_value * (float_value + float_value)) * float_value * 0.5;
          float_value = float_value * (3.0 - float_value * float_value * float_value) * float_value * 0.5;
        }
        else {
          float_value = (float)acosf();
          float_value = (float)sinf();
          float_value = (float)sinf(float_value - float_value * float_value);
          float_value = float_value * (1.0 / float_value);
          ui_event_validation_counter = sinf(float_value * float_value);
          float_value = ui_xmm0_register_02 * (1.0 / float_value);
          float_value = (float)ui_stack_array._data_offset_;
          float_value = (float)ui_stack_array._data_size_;
          float_value = ui_stack_float_180;
          float_value = ui_stack_float_17c;
          float_value = float_value * float_value + float_value * (float)ui_stack_array;
          float_value = float_value * float_value + float_value * ui_stack_float_124;
          float_value = float_value * ui_animation_progress + float_value * (float)ui_stack_temp_var_120;
          float_value = float_value * float_value + float_value * ui_stack_temp_var_120._data_size_;
        }
      }
      ui_stack_variable_callback_data = CONCAT44(float_value,float_value);
      ui_stack_variable_event_id = CONCAT44(float_value,float_value);
      float_value = ui_parameter_value * 0.33;
      float_value = float_value * (float)ui_stack_array._data_offset_ * 1.0 + ui_rotation_angle_value * ui_stack_transition_alpha * 1.0 +
               (float_value * float_value - ui_opacity_value * (float)ui_stack_array);
      float_value = ui_rotation_angle_value * (float)ui_stack_array._data_size_ * 1.0 + ui_opacity_value * ui_stack_float_144 * 1.0 +
               (float_value * float_value - float_value * ui_stack_float_104);
      float_value = ui_opacity_value * ui_stack_float_150 * 1.0 + float_value * ui_stack_float_140 * 1.0 +
               (float_value * float_value - ui_rotation_angle_value * (float)ui_stack_variable_uint_100);
      float_value = float_value * ui_stack_float_14c * -1.0 + ui_opacity_value * ui_stack_float_13c * -1.0 +
               (float_value * float_value - ui_rotation_angle_value * ui_stack_variable_uint_100._data_size_);
      float_value = float_value;
      float_value = ui_rotation_angle_value;
      ui_animation_progress = ui_opacity_value;
      float_value = float_value;
      if ((0.001 <= float_value) &&
         (float_value = float_value, float_value = float_value, ui_animation_progress = float_value, float_value = float_value, float_value <= 0.999)) {
        float_value = ui_opacity_value * float_value;
        float_value = float_value * float_value;
        ui_stack_callback_data = UI_FLOAT_NEGATIVE_ONE;
        ui_stack_temp_114 = UI_FLOAT_NEGATIVE_ONE;
        ui_stack_temp_110 = UI_FLOAT_NEGATIVE_ONE;
        ui_stack_variable_uint_10c = UI_FLOAT_NEGATIVE_ONE;
        ui_temporary_buffer._data_offset_ = float_value + float_value * float_value;
        ui_temporary_buffer._data_size_ = float_value + ui_rotation_angle_value * float_value;
        ui_temporary_buffer._data_format_ = float_value + float_value;
        ui_temporary_buffer._data_flags_ = float_value + float_value;
        ui_temp_buffer._4_12_ = ui_temporary_buffer._4_12_;
        ui_temp_buffer._data_offset_ = ui_temporary_buffer._data_offset_ + ui_temporary_buffer._data_size_;
        ui_stack_temp_var_120 = UI_BIT_SHIFT_638000003f800000;
        _aui_stack_temp_128 = UI_BIT_SHIFT_638000003f800000;
        ui_event_id_secondary = movmskps(ui_event_validation_counter,ui_temp_buffer);
        ui_long_counter = (ulonglong)(ui_event_id_secondary & 1) * UI_EVENT_FLAG_OFFSET;
        float_value = *(float *)(ui_stack_array + ui_long_counter);
        float_value = *(float *)(ui_stack_array + ui_long_counter + 4);
        ui_animation_progress = *(float *)(ui_stack_array + ui_long_counter + 8);
        float_value = *(float *)(ui_stack_array + ui_long_counter + 12);
        if (0.9995 < ABS(ui_temp_buffer._data_offset_)) {
          float_value = 1.0 - float_value;
          float_value = float_value * float_value + float_value * float_value * float_value;
          ui_rotation_angle_value = ui_rotation_angle_value * float_value + float_value * float_value * float_value;
          ui_opacity_value = ui_opacity_value * float_value + float_value * ui_animation_progress * float_value;
          float_value = float_value * float_value + float_value * float_value * float_value;
          float_value = float_value * float_value + float_value * float_value;
          ui_animation_progress = ui_opacity_value * ui_opacity_value + ui_rotation_angle_value * ui_rotation_angle_value;
          float_value = float_value + ui_rotation_angle_value * ui_rotation_angle_value + ui_opacity_value * ui_opacity_value;
          float_value = ui_animation_progress + float_value * float_value + float_value * float_value;
          ui_temp_buffer._data_size_ = float_value + ui_animation_progress + 1.1754944e-38;
          ui_temp_buffer._data_offset_ = ui_animation_progress + float_value + 1.1754944e-38;
          ui_temp_buffer._data_format_ = float_value + 1.1754944e-38;
          ui_temp_buffer._data_flags_ = float_value + 1.1754944e-38;
          ui_task_processing_buffer = rsqrtps(ui_temp_buffer,ui_temp_buffer);
          float_value = ui_task_processing_buffer._data_offset_;
          float_value = ui_task_processing_buffer._data_size_;
          float_value = ui_task_processing_buffer._data_format_;
          float_value = ui_task_processing_buffer._data_flags_;
          float_value = float_value * (3.0 - float_value * float_value * (ui_animation_progress + float_value)) * float_value * 0.5;
          float_value = ui_rotation_angle_value * (3.0 - float_value * float_value * (float_value + ui_animation_progress)) * float_value * 0.5;
          ui_animation_progress = ui_opacity_value * (3.0 - float_value * float_value * float_value) * float_value * 0.5;
          float_value = float_value * (3.0 - float_value * float_value * float_value) * float_value * 0.5;
        }
        else {
          float_value = (float)acosf();
          float_value = (float)sinf();
          float_value = (float)sinf(float_value - float_value * float_value);
          float_value = float_value * (1.0 / float_value);
          float_value = (float)sinf(float_value * float_value);
          float_value = float_value * (1.0 / float_value);
          float_value = float_value * float_value + float_value * float_value * float_value;
          float_value = float_value * ui_rotation_angle_value + float_value * float_value * float_value;
          ui_animation_progress = float_value * ui_opacity_value + float_value * ui_animation_progress * float_value;
          float_value = float_value * float_value + float_value * float_value * float_value;
        }
      }
      ui_stack_array._data_size_ = float_value;
      ui_stack_array._data_offset_ = float_value;
      ui_stack_float_180 = ui_animation_progress;
      ui_stack_float_17c = float_value;
    }
    ui_process_ui_event(ui_event_type,ui_callback7,ui_stack_array,ui_system_task_id);
    ui_process_ui_event(ui_event_type,ui_callback8,&ui_stack_variable_callback_data,ui_system_task_id);
    float_value = (float)ui_process_ui_event(ui_event_type,ui_parameter_value,&ui_stack_float_138,ui_system_task_id);
    if (((0.0 < ui_callback3) || (float_value = ui_parameter_value, 0.0 < ui_parameter_value)) || (float_value = ui_parameter_value, 0.0 < ui_parameter_value)
       ) {
      pui_stack_float_198 = (float *)ui_stack_array;
      ui_stack_data_control_tertiary = ui_callback_primary;
      ui_event_id6 = ui_system_update_widget_animation_state(float_value,ui_system_task_id,ui_event_type,ui_callback7);
      pui_stack_float_198 = (float *)&ui_stack_variable_callback_data;
      ui_stack_data_control_tertiary = ui_callback_primary;
      ui_event_id6 = ui_system_update_widget_animation_state(ui_event_id6,ui_system_task_id,ui_event_type,ui_callback8);
      pui_stack_float_198 = &ui_stack_float_138;
      ui_stack_data_control_tertiary = ui_callback_primary;
      ui_system_update_widget_animation_state(ui_event_id6,ui_system_task_id,ui_event_type,ui_parameter_value);
      if (0.0 < ui_callback3) {
        pui_widget_height_val = (float *)ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_callback1,ui_system_task_id);
        float_value = *pui_widget_height_val;
        float_value = pui_widget_height_val[1];
        ui_animation_progress = pui_widget_height_val[2];
        float_value = pui_widget_height_val[3];
        pui_widget_height_val = (float *)ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_callback5,ui_system_task_id);
        ui_event_validation_counter = ui_validate_event_parameters(ui_stack_array,ui_callback2);
        float_value = ui_stack_array;
        float_value = ui_stack_array._data_size_;
        float_value = ui_stack_array._data_format_;
        float_value = ui_stack_array._data_flags_;
        ui_stack_array._data_size_ = float_value;
        ui_stack_array._data_offset_ = float_value;
        ui_stack_float_150 = float_value;
        ui_stack_float_14c = float_value;
        ui_stack_variable_uint_100._data_offset_ = float_value;
        _aui_stack_variable_uint_108 = ui_stack_array._8_8_;
        ui_stack_variable_uint_100._data_size_ = float_value;
        float_value = float_value * float_value * 1.0 + float_value * float_value * 1.0 + (float_value * float_value - float_value * float_value)
        ;
        float_value = float_value * float_value * 1.0 + float_value * float_value * 1.0 + (float_value * float_value - float_value * float_value)
        ;
        float_value = float_value * float_value * 1.0 + float_value * float_value * 1.0 + (float_value * float_value - float_value * float_value)
        ;
        float_value = float_value * float_value * -1.0 + float_value * float_value * -1.0 +
                 (float_value * float_value - float_value * float_value);
        ui_temp_buffer = (uint8_t  [4])float_value;
        float_value = float_value;
        ui_rotation_angle_value = ui_animation_progress;
        ui_opacity_value = float_value;
        ui_stack_transition_alpha = float_value;
        ui_stack_float_144 = float_value;
        ui_stack_float_140 = float_value;
        ui_stack_float_13c = float_value;
        if ((0.001 <= ui_callback3) &&
           (float_value = float_value, float_value = float_value, ui_rotation_angle_value = float_value, ui_opacity_value = float_value, ui_callback3 <= 0.999))
        {
          float_value = ui_animation_progress * float_value;
          float_value = float_value * float_value;
          ui_stack_callback_data = UI_FLOAT_NEGATIVE_ONE;
          ui_stack_temp_114 = UI_FLOAT_NEGATIVE_ONE;
          ui_stack_temp_110 = UI_FLOAT_NEGATIVE_ONE;
          ui_stack_variable_uint_10c = UI_FLOAT_NEGATIVE_ONE;
          ui_temp_buffer._data_offset_ = float_value + float_value * float_value;
          ui_temp_buffer._data_size_ = float_value + float_value * float_value;
          ui_temp_buffer._data_format_ = float_value + float_value;
          ui_temp_buffer._data_flags_ = float_value + float_value;
          ui_temp_buffer._4_12_ = ui_temp_buffer._4_12_;
          ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + ui_temp_buffer._data_size_;
          ui_stack_temp_var_120 = UI_BIT_SHIFT_638000003f800000;
          _aui_stack_temp_128 = UI_BIT_SHIFT_638000003f800000;
          ui_event_id_secondary = movmskps(ui_event_validation_counter,ui_temp_buffer);
          ui_event_validation_counter = (ui_event_id_secondary & 1) * 2;
          ui_long_counter = (ulonglong)(ui_event_id_secondary & 1) * UI_EVENT_FLAG_OFFSET;
          ui_stack_array = (uint8_t  [4])(*(float *)(ui_stack_array + ui_long_counter) * float_value);
          ui_stack_float_124 = *(float *)(ui_stack_array + ui_long_counter + 4) * float_value;
          ui_stack_temp_var_120._data_offset_ = *(float *)(ui_stack_array + ui_long_counter + 8) * float_value;
          ui_stack_temp_var_120._data_size_ = *(float *)(ui_stack_array + ui_long_counter + 12) * float_value;
          if (0.9995 < ABS(ui_temp_buffer._data_offset_)) {
            float_value = 1.0 - ui_callback3;
            float_value = float_value * float_value + ui_callback3 * (float)ui_stack_array;
            float_value = float_value * float_value + ui_callback3 * ui_stack_float_124;
            float_value = ui_animation_progress * float_value + ui_callback3 * (float)ui_stack_temp_var_120;
            float_value = float_value * float_value + ui_callback3 * ui_stack_temp_var_120._data_size_;
            float_value = float_value * float_value + float_value * float_value;
            float_value = float_value + float_value * float_value + float_value * float_value;
            ui_temp_buffer._data_size_ = float_value + float_value + 1.1754944e-38;
            ui_temp_buffer._data_offset_ = float_value + float_value + 1.1754944e-38;
            ui_temp_buffer._data_format_ = float_value + 1.1754944e-38;
            ui_temp_buffer._data_flags_ = float_value + 1.1754944e-38;
            ui_task_processing_buffer = rsqrtps(_aui_stack_temp_128,ui_temp_buffer);
            ui_animation_progress = ui_task_processing_buffer._data_offset_;
            float_value = ui_task_processing_buffer._data_size_;
            ui_rotation_angle_value = ui_task_processing_buffer._data_format_;
            ui_opacity_value = ui_task_processing_buffer._data_flags_;
            float_value = float_value * (3.0 - ui_animation_progress * ui_animation_progress * (float_value + float_value)) * ui_animation_progress * 0.5;
            float_value = float_value * (3.0 - float_value * float_value * (float_value + float_value)) * float_value * 0.5;
            ui_rotation_angle_value = float_value * (3.0 - ui_rotation_angle_value * ui_rotation_angle_value * float_value) * ui_rotation_angle_value * 0.5;
            ui_opacity_value = float_value * (3.0 - ui_opacity_value * ui_opacity_value * float_value) * ui_opacity_value * 0.5;
          }
          else {
            float_value = (float)acosf();
            float_value = (float)sinf();
            ui_opacity_value = (float)sinf(float_value - float_value * ui_callback3);
            ui_opacity_value = ui_opacity_value * (1.0 / float_value);
            ui_event_validation_counter = sinf(float_value * ui_callback3);
            float_value = ui_xmm0_register_03 * (1.0 / float_value);
            ui_temp_buffer = ui_stack_array;
            float_value = ui_stack_float_104;
            float_value = (float)ui_stack_variable_uint_100;
            float_value = ui_stack_variable_uint_100._data_size_;
            float_value = ui_opacity_value * float_value + float_value * (float)ui_stack_array;
            float_value = ui_opacity_value * float_value + float_value * ui_stack_float_124;
            ui_rotation_angle_value = ui_opacity_value * ui_animation_progress + float_value * (float)ui_stack_temp_var_120;
            ui_opacity_value = ui_opacity_value * float_value + float_value * ui_stack_temp_var_120._data_size_;
          }
        }
        ui_callback3 = ui_callback3 * 0.5;
        ui_stack_float_104 = float_value;
        ui_stack_array = (uint8_t  [4])float_value;
        ui_stack_variable_uint_100._data_offset_ = ui_rotation_angle_value;
        ui_stack_variable_uint_100._data_size_ = ui_opacity_value;
        float_value = float_value * ui_stack_transition_alpha * 1.0;
        float_value = float_value * (float)ui_temp_buffer * 1.0 + float_value +
                 (float_value * float_value - float_value * (float)ui_stack_array._data_offset_);
        ui_animation_progress = float_value * float_value * 1.0 + float_value * ui_stack_float_144 * 1.0 +
                 (float_value * float_value - float_value * (float)ui_stack_array._data_size_);
        float_value = float_value * float_value * 1.0 + float_value * ui_stack_float_140 * 1.0 +
                 (float_value * float_value - float_value * ui_stack_float_150);
        float_value = float_value * float_value * -1.0 + float_value * ui_stack_float_13c * -1.0 +
                 (float_value * float_value - float_value * ui_stack_float_14c);
        if (0.001 <= ui_callback3) {
          if (ui_callback3 <= 0.999) {
            float_value = *pui_widget_height_val;
            float_value = pui_widget_height_val[1];
            float_value = pui_widget_height_val[2];
            float_value = pui_widget_height_val[3];
            float_value = float_value * ui_animation_progress;
            float_value = float_value * float_value;
            ui_stack_callback_data = UI_FLOAT_NEGATIVE_ONE;
            ui_stack_temp_114 = UI_FLOAT_NEGATIVE_ONE;
            ui_stack_temp_110 = UI_FLOAT_NEGATIVE_ONE;
            ui_stack_variable_uint_10c = UI_FLOAT_NEGATIVE_ONE;
            ui_temp_buffer._data_offset_ = float_value + float_value * float_value;
            ui_temp_buffer._data_size_ = float_value + float_value * float_value;
            ui_temp_buffer._data_format_ = float_value + float_value;
            ui_temp_buffer._data_flags_ = float_value + float_value;
            ui_temp_buffer._4_12_ = ui_temp_buffer._4_12_;
            ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + ui_temp_buffer._data_size_;
            ui_stack_temp_var_120 = UI_BIT_SHIFT_638000003f800000;
            _aui_stack_temp_128 = UI_BIT_SHIFT_638000003f800000;
            ui_event_id_secondary = movmskps(ui_event_validation_counter,ui_temp_buffer);
            ui_long_counter = (ulonglong)(ui_event_id_secondary & 1) * UI_EVENT_FLAG_OFFSET;
            float_value = *(float *)(ui_stack_array + ui_long_counter);
            float_value = *(float *)(ui_stack_array + ui_long_counter + 4);
            float_value = *(float *)(ui_stack_array + ui_long_counter + 8);
            float_value = *(float *)(ui_stack_array + ui_long_counter + 12);
            if (0.9995 < ABS(ui_temp_buffer._data_offset_)) {
              float_value = 1.0 - ui_callback3;
              float_value = float_value * float_value + ui_callback3 * float_value * float_value;
              ui_animation_progress = float_value * float_value + ui_callback3 * float_value * ui_animation_progress;
              float_value = float_value * float_value + ui_callback3 * float_value * float_value;
              float_value = float_value * float_value + float_value * float_value;
              float_value = ui_animation_progress * ui_animation_progress + float_value * float_value;
              float_value = float_value + float_value * float_value + ui_animation_progress * ui_animation_progress;
              float_value = float_value + float_value * float_value + float_value * float_value;
              ui_temp_buffer._data_size_ = float_value + float_value + 1.1754944e-38;
              ui_temp_buffer._data_offset_ = float_value + float_value + 1.1754944e-38;
              ui_temp_buffer._data_format_ = float_value + 1.1754944e-38;
              ui_temp_buffer._data_flags_ = float_value + 1.1754944e-38;
              ui_task_processing_buffer = rsqrtps(ui_temp_buffer,ui_temp_buffer);
              float_value = ui_task_processing_buffer._data_offset_;
              float_value = ui_task_processing_buffer._data_size_;
              float_value = ui_task_processing_buffer._data_format_;
              float_value = ui_task_processing_buffer._data_flags_;
              float_value = float_value * float_value * (float_value + float_value);
              float_value = float_value * (3.0 - float_value) * float_value * 0.5;
              float_value = float_value * (3.0 - float_value * float_value * (float_value + float_value)) * float_value * 0.5;
              ui_animation_progress = ui_animation_progress * (3.0 - float_value * float_value * float_value) * float_value * 0.5;
              float_value = float_value * (3.0 - float_value * float_value * float_value) * float_value * 0.5;
            }
            else {
              float_value = (float)acosf();
              ui_rotation_angle_value = (float)sinf();
              ui_opacity_value = (float)sinf(float_value - float_value * ui_callback3);
              ui_opacity_value = ui_opacity_value * (1.0 / ui_rotation_angle_value);
              float_value = (float)sinf(float_value * ui_callback3);
              float_value = float_value * (1.0 / ui_rotation_angle_value);
              float_value = ui_opacity_value * float_value + float_value * float_value * float_value;
              ui_animation_progress = ui_opacity_value * float_value + float_value * float_value * ui_animation_progress;
              float_value = ui_opacity_value * float_value + float_value * float_value * float_value;
            }
          }
        }
        else {
          float_value = *pui_widget_height_val;
          float_value = pui_widget_height_val[1];
          ui_animation_progress = pui_widget_height_val[2];
          float_value = pui_widget_height_val[3];
        }
        ui_stack_float_124 = float_value;
        ui_stack_array = (uint8_t  [4])float_value;
        ui_stack_temp_var_120._data_offset_ = ui_animation_progress;
        ui_stack_temp_var_120._data_size_ = float_value;
        pui_stack_float_198 = (float *)ui_stack_array;
        ui_stack_data_control_tertiary = ui_callback4;
        ui_event_id6 = ui_system_update_widget_animation_state(float_value,ui_system_task_id,ui_event_type,ui_callback5);
        pui_stack_float_198 = (float *)ui_stack_array;
        ui_stack_data_control_tertiary = ui_callback4;
        ui_system_update_widget_animation_state(ui_event_id6,ui_system_task_id,ui_event_type,ui_callback1);
      }
    }
    RenderUIComponent(ui_stack_temp_e8 ^ (ulonglong)ui_stack_array);
  }
  ui_system_cleanupuiui_stack_var_var(ui_event_type,0,ui_system_task_id);
  ui_stack_variable_callback_data = *(uint64_t *)(ui_event_type + UI_STACK_SIZE_640);
  ui_stack_variable_event_id = *(uint64_t *)(ui_event_type + UI_STACK_SIZE_648);
  float_value = *ui_callback9 * *ui_callback9 + -ui_callback9[1] * -ui_callback9[1];
  ui_task_processing_buffer = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
  float_value = ui_task_processing_buffer._data_offset_;
  float_value = float_value * 0.5 * (3.0 - float_value * float_value * float_value) * float_value;
  if (0.0 <= float_value) {
    if (1.0 <= float_value) {
      float_value = 1.0;
    }
  }
  else {
    float_value = 0.0;
  }
  float_value = (float)asinf(float_value);
  ProcessUIRenderCommand(float_value * 0.5);
}

void ui_system_update_widget_animation_state(uint64_t ui_callback,longlong ui_event_type,longlong ui_event_data,char ui_event_flags,float *ui_parameter_value,
                  uint32_t ui_parameter_value)

{
  uint64_t *ui_event_buffer;
  float ui_temp_float;
  uint64_t ui_event_id0;
  float *pui_widget_y_coord;
  uint64_t *ui_event_buffer;
  ulonglong ui_task_identifier;
  longlong ui_window_handle;
  float ui_stack_float_28;
  float ui_stack_float_24;
  float ui_stack_float_20;
  float ui_stack_float_1c;
  uint8_t ui_stack_array [16];
  
  ui_task_identifier = (ulonglong)ui_event_flags;
  ui_window_handle = ui_task_identifier * UI_GUARD_CHECK_TYPE0;
  pui_widget_y_coord = (float *)ui_system_cleanupuiui_stack_var_var(ui_event_data,*(uint8_t *)
                                            (*(longlong *)(ui_event_type + UI_ANIMATION_DATA_OFFSET) + 0xf0 + ui_window_handle),ui_event_type
                                  );
  float_value = *pui_widget_y_coord;
  float_value = pui_widget_y_coord[1];
  float_value = pui_widget_y_coord[2];
  float_value = pui_widget_y_coord[3];
  float_value = *ui_parameter_value;
  float_value = ui_parameter_value[1];
  float_value = ui_parameter_value[2];
  float_value = ui_parameter_value[3];
  ui_stack_float_24 = float_value * float_value * -1.0 + float_value * float_value * -1.0 + float_value * float_value + float_value * float_value;
  ui_stack_float_20 = float_value * float_value * -1.0 + float_value * float_value * -1.0 + float_value * float_value + float_value * float_value;
  ui_stack_float_1c = float_value * float_value * -1.0 + float_value * float_value * -1.0 + float_value * float_value + float_value * float_value;
  ui_stack_float_28 = float_value * float_value * 1.0 + float_value * float_value * 1.0 + float_value * float_value + float_value * float_value;
  ui_event_buffer = (uint64_t *)
            ui_handle_complex_event(ui_event_type,ui_stack_array,ui_event_flags,
                          *(uint32_t *)(*(longlong *)(ui_event_type + UI_ANIMATION_DATA_OFFSET) + UI_RESOURCE_LOAD_TYPE0 + ui_window_handle),
                          &ui_stack_float_28,ui_parameter_value);
  ui_event_id0 = ui_event_buffer[1];
  ui_event_buffer = (uint64_t *)(ui_event_data + (ui_task_identifier + 0x82) * UI_EVENT_FLAG_OFFSET);
  *ui_event_buffer = *ui_event_buffer;
  ui_event_buffer[1] = ui_event_id0;
  *(ulonglong *)(ui_event_data + UI_STACK_SIZE_1280) =
       *(ulonglong *)(ui_event_data + UI_STACK_SIZE_1280) |
       *(ulonglong *)(*(longlong *)(ui_event_type + UI_ANIMATION_DATA_OFFSET) + UI_SYSTEM_CONFIG_OFFSET + ui_window_handle);
  *(ulonglong *)(ui_event_data + UI_STACK_SIZE_1288) = *(ulonglong *)(ui_event_data + UI_STACK_SIZE_1288) | 1L << (ui_task_identifier & UI_BIT_SHIFT_63);
  return ui_system_return_value;
}

uint64_t *
ui_system_validate_widget_animation(uint64_t *ui_callback,ulonglong ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  *ui_callback = &ui_widget_manager;
  if ((ui_event_type & 1) != 0) {
    ui_memory_free(ui_callback,UI_OFFSET_32,ui_event_data,ui_event_flags,UI_BIT_MASK_32BIT_FULLfffffffe);
  }
  return return ui_callback;
}

longlong ui_system_process_widget_collision(longlong ui_callback,uint8_t ui_event_type,uint8_t ui_event_data,uint8_t ui_event_flags,
                      uint32_t ui_parameter_value,uint32_t ui_parameter_value)

{
  longlong ui_long_counter;
  longlong ui_event_index;
  
  ui_event_index = 8;
  ui_long_counter = ui_callback + UI_OFFSET_160;
  ui_event_index = 8;
  do {
    ui_system_process_widget_event(ui_long_counter);
    ui_long_counter = ui_long_counter + UI_EVENT_FLAG_OFFSET;
    ui_event_index = ui_event_index + -1;
  } while (ui_event_index != 0);
  ui_long_counter = ui_callback + UI_NETWORK_RESOURCE_TYPE0;
  do {
    ui_system_process_widget_event(ui_long_counter);
    ui_long_counter = ui_long_counter + UI_EVENT_FLAG_OFFSET;
    ui_event_index = ui_event_index + -1;
  } while (ui_event_index != 0);
  *(uint32_t *)(ui_callback + UI_GUARD_CHECK_TYPE0) = ui_parameter_value;
  *(uint32_t *)(ui_callback + UI_GUARD_CHECK_TYPE8) = ui_parameter_value;
  *(uint32_t *)(ui_callback + UI_WIDGET_BASE_OFFSET) = UI_BIT_MASK_32BIT_FULL;
  *(uint8_t *)(ui_callback + 0x94) = ui_event_type;
  *(uint8_t *)(ui_callback + 0x95) = ui_event_data;
  *(uint8_t *)(ui_callback + 0x96) = ui_event_flags;
  return return ui_callback;
}

uint64_t * ui_destroy_window_function(uint64_t *ui_callback)

{
  *ui_callback = &ui_widget_manager;
  *ui_callback = &ui_global_layout_engine;
  ui_system_process_widget_collision(ui_callback + 2,UI_COMPONENT_MAX_VALUE,UI_COMPONENT_MAX_VALUE,0,0,0,UI_BIT_MASK_32BIT_FULLfffffffe);
  ui_callback[0x3a] = 0;
  *(uint32_t *)(ui_callback + UI_OFFSET_59) = UI_STACK_SIZE_64400000;
  *(uint8_t *)(ui_callback + UI_OFFSET_60) = 0;
  *(uint32_t *)((longlong)ui_callback + UI_SYSTEM_CALLBACK_TYPEc) = 0x7149f2ca;
  return return ui_callback;
}

uint64_t *
ui_system_check_widget_bounds(uint64_t *ui_callback,ulonglong ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  *ui_callback = &ui_widget_manager;
  if ((ui_event_type & 1) != 0) {
    ui_memory_free(ui_callback,UI_GUARD_CHECK_TYPE_20,ui_event_data,ui_event_flags,UI_BIT_MASK_32BIT_FULLfffffffe);
  }
  return return ui_callback;
}

void ui_system_update_widget_transform_matrix(longlong ui_callback,longlong ui_event_type,float *ui_event_data,longlong ui_event_flags)

{
  float *pfloat_value;
  char ui_character_value;
  float ui_temp_float;
  float ui_widget_x_coord;
  float ui_widget_y_coord;
  float ui_widget_width;
  float ui_widget_height;
  float ui_animation_progress;
  float ui_transition_alpha;
  uint64_t ui_event_id6;
  longlong ui_loop_counter_secondary;
  uint ui_event_id8;
  float ui_z_depth;
  uint8_t ui_task_processing_buffer [16];
  float ui_temp_float;
  float ui_distance_delta;
  float ui_temp_float;
  float ui_time_delta;
  float ui_temp_float;
  uint8_t ui_stack_array [32];
  uint8_t ui_stack_buffer_mask_value;
  float ui_stack_float_value_novenary;
  float ui_stack_float_value_denary;
  float ui_stack_float_temp_value;
  uint32_t ui_stack_temp_16c;
  uint64_t ui_stack_color_data;
  float ui_stack_float_160;
  float ui_stack_float_15c;
  float ui_stack_float_158;
  float ui_stack_float_154;
  longlong ui_stack_parameter_long;
  float ui_stack_float_138;
  float ui_stack_float_134;
  float ui_stack_float_130;
  uint32_t ui_stack_temp_12c;
  float ui_stack_z_depth;
  float ui_stack_float_124;
  float ui_stack_float_120;
  float ui_stack_float_11c;
  float ui_stack_float_118;
  float ui_stack_float_114;
  float ui_stack_float_110;
  float ui_stack_width_value;
  float ui_stack_float_108;
  float ui_stack_float_104;
  float ui_stack_float_100;
  float ui_stack_float_fc;
  ulonglong ui_stack_temp_f8;
  
  ui_stack_temp_f8 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_character_value = *(char *)(ui_callback + UI_TEMP_VALUE_OFFSET);
  *(uint8_t *)(ui_callback + UI_OFFSET_300) = 0;
  *(uint8_t *)(ui_callback + UI_OFFSET_284) = 0;
  ui_loop_counter_secondary = (longlong)*(char *)((longlong)ui_character_value + UI_MAX_COMPONENT_VALUE + ui_event_flags);
  ui_character_value = *(char *)(ui_event_flags + UI_MAX_COMPONENT_VALUE + ui_loop_counter_secondary);
  float_value = SQRT(*ui_event_data * *ui_event_data + ui_event_data[1] * ui_event_data[1] + ui_event_data[2] * ui_event_data[2]);
  ui_event_id6 = ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_character_value,ui_event_flags);
  ui_update_event_state(&ui_stack_float_138,ui_event_id6);
  ui_distance_delta = *ui_event_data;
  float_value = ui_event_data[1];
  float_value = ui_event_data[2];
  float_value = ui_event_data[3];
  float_value = ui_event_data[4];
  float_value = ui_event_data[5];
  float_value = ui_event_data[6];
  ui_widget_x_coord = ui_event_data[7];
  ui_widget_y_coord = ui_event_data[8];
  ui_widget_width_val = ui_event_data[9];
  ui_widget_height_val = ui_event_data[10];
  ui_animation_progress = ui_event_data[ELEVEN_VALUE];
  pfloat_value = (float *)(ui_event_type + ((longlong)ui_character_value + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET);
  float_value = *pfloat_value;
  float_value = pfloat_value[1];
  ui_transition_alpha_value = pfloat_value[2];
  ui_stack_float_11c = ui_stack_float_124 * ui_widget_x_coord + ui_stack_z_depth * float_value + ui_stack_float_120 * ui_animation_progress;
  float_value = ui_stack_float_114 * float_value + ui_stack_float_118 * ui_distance_delta + ui_stack_float_110 * ui_widget_y_coord;
  ui_time_delta = ui_stack_float_114 * float_value + ui_stack_float_118 * float_value + ui_stack_float_110 * ui_widget_width_val;
  float_value = ui_stack_float_114 * float_value + ui_stack_float_118 * float_value + ui_stack_float_110 * ui_widget_height_val;
  ui_stack_width_value = ui_stack_float_114 * ui_widget_x_coord + ui_stack_float_118 * float_value + ui_stack_float_110 * ui_animation_progress;
  ui_z_depth_value = *(float *)(ui_callback + UI_EVENT_FLAG_OFFSET);
  ui_stack_float_108 = float_value * float_value + float_value * ui_distance_delta + ui_transition_alpha_value * ui_widget_y_coord + ui_event_data[12];
  ui_stack_float_104 = float_value * float_value + float_value * float_value + ui_transition_alpha_value * ui_widget_width_val + ui_event_data[THIRTEEN_VALUE];
  ui_stack_float_100 = float_value * float_value + float_value * float_value + ui_transition_alpha_value * ui_widget_height_val + ui_event_data[ui_component_angle_offset];
  ui_stack_float_fc = float_value * ui_widget_x_coord + float_value * float_value + ui_transition_alpha_value * ui_animation_progress + ui_event_data[UI_MAX_EVENT_FLAGS];
  float_value = *(float *)(ui_callback + UI_SHIFT_AMOUNT_20);
  float_value = *(float *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS);
  ui_stack_float_value_novenary = float_value * float_value + ui_z_depth_value * ui_distance_delta + float_value * ui_widget_y_coord + ui_event_data[12];
  ui_stack_float_value_denary = float_value * float_value + ui_z_depth_value * float_value + float_value * ui_widget_width_val + ui_event_data[THIRTEEN_VALUE];
  ui_stack_float_160 = float_value * float_value + ui_z_depth_value * float_value + float_value * ui_widget_height_val + ui_event_data[ui_component_angle_offset];
  ui_stack_float_15c = float_value * ui_widget_x_coord + ui_z_depth_value * float_value + float_value * ui_animation_progress + ui_event_data[UI_MAX_EVENT_FLAGS];
  ui_stack_color_data = CONCAT44(ui_stack_float_value_denary,ui_stack_float_value_novenary);
  ui_stack_float_value_novenary = ui_stack_float_value_novenary - ui_stack_float_108;
  ui_stack_float_value_denary = ui_stack_float_value_denary - ui_stack_float_104;
  ui_stack_float_temp_value = ui_stack_float_160 - ui_stack_float_100;
  ui_stack_temp_16c = UI_FLOAT_MAX_VALUE;
  float_value = ui_stack_float_value_denary * ui_stack_float_value_denary + ui_stack_float_value_novenary * ui_stack_float_value_novenary + ui_stack_float_temp_value * ui_stack_float_temp_value;
  ui_task_processing_buffer = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
  ui_z_depth_value = ui_task_processing_buffer._data_offset_;
  ui_stack_temp_12c = UI_FLOAT_MAX_VALUE;
  ui_stack_float_130 = ui_z_depth_value * 0.5 * (3.0 - float_value * ui_z_depth_value * ui_z_depth_value);
  ui_stack_float_138 = ui_stack_float_value_novenary * ui_stack_float_130;
  ui_stack_float_134 = ui_stack_float_130 * ui_stack_float_value_denary;
  ui_stack_float_130 = ui_stack_float_130 * ui_stack_float_temp_value;
  float_value = ui_time_delta * ui_stack_float_130 - float_value * ui_stack_float_134;
  ui_stack_float_124 = float_value * ui_stack_float_138 - float_value * ui_stack_float_130;
  ui_stack_float_120 = float_value * ui_stack_float_134 - ui_time_delta * ui_stack_float_138;
  ui_z_depth_value = ui_stack_float_124 * ui_stack_float_124 + float_value * float_value + ui_stack_float_120 * ui_stack_float_120;
  ui_task_processing_buffer = rsqrtss(ZEXT416((uint)ui_z_depth_value),ZEXT416((uint)ui_z_depth_value));
  float_value = ui_task_processing_buffer._data_offset_;
  ui_stack_z_depth = float_value * 0.5 * (3.0 - ui_z_depth_value * float_value * float_value);
  ui_stack_float_124 = ui_stack_z_depth * ui_stack_float_124;
  ui_stack_float_120 = ui_stack_z_depth * ui_stack_float_120;
  ui_stack_z_depth = ui_stack_z_depth * float_value;
  ui_stack_float_118 = ui_stack_float_134 * ui_stack_float_120 - ui_stack_float_130 * ui_stack_float_124;
  ui_stack_float_114 = ui_stack_float_130 * ui_stack_z_depth - ui_stack_float_120 * ui_stack_float_138;
  ui_stack_float_110 = ui_stack_float_124 * ui_stack_float_138 - ui_stack_float_134 * ui_stack_z_depth;
  ui_copy_event_data(&ui_stack_float_value_novenary,&ui_stack_float_138);
  ui_stack_float_138 = ui_stack_float_138 * float_value;
  ui_stack_float_134 = ui_stack_float_134 * float_value;
  ui_stack_float_130 = ui_stack_float_130 * float_value;
  ui_stack_float_124 = ui_stack_float_124 * float_value;
  ui_stack_z_depth = ui_stack_z_depth * float_value;
  ui_stack_float_118 = ui_stack_float_118 * float_value;
  ui_stack_float_120 = ui_stack_float_120 * float_value;
  ui_stack_float_110 = ui_stack_float_110 * float_value;
  ui_stack_float_114 = ui_stack_float_114 * float_value;
  ui_create_event_id(&ui_stack_float_138,&ui_stack_float_158,&ui_stack_color_data);
  ui_stack_parameter_long = ui_loop_counter_secondary * UI_GUARD_CHECK_TYPE0;
  ui_z_depth_value = *(float *)(ui_stack_parameter_long + UI_MAX_COMPONENT_VALUE + *(longlong *)(ui_event_flags + UI_ANIMATION_DATA_OFFSET));
  ui_stack_color_data = (longlong)ui_character_value * UI_GUARD_CHECK_TYPE0;
  float_value = *(float *)(ui_stack_color_data + UI_MAX_COMPONENT_VALUE + *(longlong *)(ui_event_flags + UI_ANIMATION_DATA_OFFSET));
  float_value = (ui_z_depth_value + ui_z_depth_value) * float_value;
  ui_stack_buffer_mask_value = 1;
  ui_distance_delta = ui_stack_float_158 * ui_stack_float_158 + ui_stack_float_154 * ui_stack_float_154;
  if (float_value <= 0.0001) {
    float_value = (float_value + ui_z_depth_value) * (float_value + ui_z_depth_value);
    if ((ui_distance_delta < float_value - 0.0001) || (float_value + 0.0001 < ui_distance_delta)) {
      ui_stack_buffer_mask_value = 0;
    }
    float_value = 1.0;
    ui_distance_delta = 0.0;
  }
  else {
    float_value = ((ui_distance_delta - ui_z_depth_value * ui_z_depth_value) - float_value * float_value) / float_value;
    if ((float_value < -1.0) || (1.0 < float_value)) {
      ui_stack_buffer_mask_value = 0;
      if (-1.0 <= float_value) {
        if (1.0 <= float_value) {
          float_value = 1.0;
        }
      }
      else {
        float_value = -1.0;
      }
    }
    ui_event_id8 = acosf(float_value);
    ui_distance_delta = (float)sinf(ui_event_id8 ^ UI_STACK_SIZE_128000000);
  }
  *(uint8_t *)(ui_callback + UI_OFFSET_284) = ui_stack_buffer_mask_value;
  ui_z_depth_value = float_value * float_value + ui_z_depth_value;
  ui_event_id6 = ui_create_event_data_buffer(ui_event_data,&ui_stack_float_138);
  ui_copy_event_data(&ui_stack_float_158,ui_event_id6);
  ui_z_depth_value = (float)atan2f(ui_z_depth_value * ui_stack_float_154 - ui_distance_delta * float_value * ui_stack_float_158,
                         ui_z_depth_value * ui_stack_float_158 + ui_distance_delta * float_value * ui_stack_float_154);
  ProcessUIRenderCommand(ui_z_depth_value * 0.5);
}

void ui_system_apply_widget_opacity(longlong ui_callback,longlong ui_event_type)

{
  uint *ui_event_buffer;
  uint32_t *ui_task_index_pointer;
  uint ui_loop_counter;
  longlong ui_event_index;
  char ui_character_value;
  longlong ui_event_index;
  uint32_t *ui_callback_ptr;
  int ui_result_status;
  uint32_t ui_stack_buffer_mask;
  uint32_t ui_stack_temp_34;
  uint32_t ui_stack_unsigned_data_primary;
  uint32_t ui_stack_temp_2c;
  uint32_t ui_stack_variable_uint_28;
  uint32_t ui_stack_temp_24;
  uint32_t ui_stack_extended_data_size;
  uint32_t ui_stack_variable_uint_1c;
  ulonglong ui_stack_control_flag;
  
  ui_stack_control_flag = ui_stack_flag_mask ^ (ulonglong)&ui_stack_buffer_mask;
  ui_character_value = *(char *)(ui_callback + UI_TEMP_VALUE_OFFSET);
  ui_result_status = 0;
  if (ui_character_value != -1) {
    ui_callback_ptr = (uint32_t *)(ui_callback + UI_RESOURCE_TYPE_CONFIG0);
    do {
      if (*(char *)(ui_callback + 0xa6) <= ui_result_status) break;
      *(uint64_t *)(ui_callback_ptr + -UI_OFFSET_32) = UI_BIT_SHIFT_63800000;
      *(uint64_t *)(ui_callback_ptr + -UI_OFFSET_30) = 0;
      ui_event_index = *(longlong *)(ui_event_type + UI_SNAPSHOT_CREATE_FLAGS);
      ui_event_index = (longlong)ui_character_value * UI_MAX_COMPONENT_VALUE;
      do {
        LOCK();
        ui_event_buffer = (uint *)(ui_event_index + ui_event_index);
        ui_loop_counter = *ui_event_buffer;
        *ui_event_buffer = *ui_event_buffer | 1;
        UNLOCK();
      } while ((ui_loop_counter & 1) != 0);
      ui_task_index_pointer = (uint32_t *)(ui_event_index + 4 + ui_event_index);
      ui_stack_buffer_mask = *ui_task_index_pointer;
      ui_stack_temp_34 = ui_task_index_pointer[1];
      ui_stack_unsigned_data_primary = ui_task_index_pointer[2];
      ui_stack_temp_2c = ui_task_index_pointer[3];
      ui_task_index_pointer = (uint32_t *)(ui_event_index + UI_SHIFT_AMOUNT_20 + ui_event_index);
      ui_stack_variable_uint_28 = *ui_task_index_pointer;
      ui_stack_temp_24 = ui_task_index_pointer[1];
      ui_stack_extended_data_size = ui_task_index_pointer[2];
      ui_stack_variable_uint_1c = ui_task_index_pointer[3];
      *(uint32_t *)(ui_event_index + ui_event_index) = 0;
      ui_result_status = ui_result_status + 1;
      *ui_callback_ptr = ui_stack_buffer_mask;
      ui_callback_ptr[1] = ui_stack_temp_34;
      ui_callback_ptr[2] = ui_stack_unsigned_data_primary;
      ui_callback_ptr[3] = ui_stack_temp_2c;
      ui_callback_ptr = ui_callback_ptr + 4;
      ui_character_value = *(char *)(ui_event_index + UI_OFFSET_160 + *(longlong *)(ui_event_type + UI_SNAPSHOT_CREATE_FLAGS));
    } while (ui_character_value != -1);
  }
  RenderUIComponent(ui_stack_control_flag ^ (ulonglong)&ui_stack_buffer_mask);
}

void ui_system_set_widget_color(longlong ui_callback,float ui_event_type,uint64_t ui_event_data)

{
  float ui_temp_float;
  
  float_value = *(float *)(ui_callback + UI_SYSTEM_CALLBACK_TYPE0);
  float_value = 0.0;
  if ((float_value == 0.0) && (0.0 < *(float *)(ui_callback + UI_SYSTEM_CALLBACK_TYPE4))) {
    ui_system_apply_widget_opacity(float_value,ui_event_data);
    float_value = *(float *)(ui_callback + UI_SYSTEM_CALLBACK_TYPE0);
  }
  float_value = *(float *)(ui_callback + UI_SYSTEM_CALLBACK_TYPE4);
  if (float_value != float_value) {
    ui_event_type = ui_event_type * *(float *)(ui_callback + UI_SYSTEM_CALLBACK_TYPE8);
    float_value = float_value - float_value;
    if ((-ui_event_type <= float_value) && (float_value < ui_event_type)) {
      *(float *)(ui_callback + UI_SYSTEM_CALLBACK_TYPE0) = float_value;
      return ui_system_return_value;
    }
    if (float_value < float_value) {
      ui_event_type = -ui_event_type;
    }
    *(float *)(ui_callback + UI_SYSTEM_CALLBACK_TYPE0) = ui_event_type + float_value;
  }
  return ui_system_return_value;
}

void ui_system_update_widget_effects(longlong ui_callback,longlong ui_event_type,uint64_t ui_event_data,longlong ui_event_flags,
                  longlong ui_parameter_value,longlong ui_parameter_value,uint ui_parameter_value,float ui_parameter_value,float ui_parameter_value,
                  char ui_callback_primary)

{
  byte boolean_flag;
  uint8_t aui_task_index [12];
  uint8_t ui_temp_buffer [12];
  char ui_character_value;
  uint32_t ui_loop_counter;
  uint64_t *ui_event_buffer;
  float *pui_widget_y_coord;
  uint8_t *ui_event_buffer;
  uint64_t *ui_event_buffer;
  uint8_t (*paui_event_id_fourth) [16];
  uint64_t ui_event_id_fifth;
  longlong *ui_long_counter_ptr6;
  float *ui_float_ptr7;
  uint32_t *ui_event_buffer;
  uint8_t ui_temporary_buffer [8];
  uint64_t ui_task_index0;
  uint64_t ui_task_index1;
  longlong *ui_long_pointer_var;
  uint ui_task_index3;
  longlong ui_event_index;
  uint8_t *ui_task_index_pointer5;
  char ui_character_value;
  int ui_result_status;
  uint ui_task_index8;
  longlong ui_event_index;
  ulonglong ui_temp_ulong;
  uint64_t *ui_callback_ptr;
  longlong ui_event_index;
  uint ui_loop_counter;
  char ui_character_value;
  ulonglong ui_temp_ulong;
  char ui_character_value;
  int ui_result_status;
  ulonglong ui_temp_ulong;
  longlong ui_event_index;
  bool ui_bool_result;
  float ui_temp_float;
  uint64_t ui_loop_counter;
  uint8_t ui_temp_buffer [16];
  uint32_t ui_loop_counter;
  float ui_temp_float;
  uint8_t ui_temp_buffer [16];
  float ui_temp_float;
  uint8_t ui_stack_array [32];
  uint64_t *pui_stack_temp_b18;
  float ui_stack_float_b10;
  byte booluiui_stack_var_var_b08;
  uint ui_stack_temp_b04;
  char charuiui_stack_var_var_b00;
  uint64_t ui_stack_color_dataf8;
  longlong ui_stack_parameter_longaf0;
  uint ui_stack_color_datae8;
  longlong ui_stack_parameter_longae0;
  uint8_t ui_stack_array [8];
  uint64_t ui_stack_color_datad0;
  int ui_stack_temp_variable_ac8;
  int ui_stack_temp_variable_ac4;
  uint ui_stack_color_datac0;
  float ui_stack_float_abc;
  longlong ui_stack_parameter_longab8;
  longlong *pui_stack_parameter_longab0;
  uint8_t ui_stack_array [16];
  float ui_stack_float_a98;
  float ui_stack_float_a94;
  float ui_stack_float_a90;
  uint32_t ui_stack_variable_uint_a8c;
  float ui_stack_float_a88;
  uint64_t *pui_stack_variable_uint_a80;
  uint64_t *pui_stack_color_data78;
  uint64_t ui_stack_color_data68;
  uint64_t ui_stack_color_data60;
  uint32_t ui_stack_color_data58;
  uint32_t ui_stack_color_data54;
  uint32_t ui_stack_color_data50;
  uint32_t ui_stack_color_data4c;
  float ui_stack_float_a48;
  float ui_stack_float_a44;
  float ui_stack_float_a40;
  float ui_stack_float_a3c;
  uint64_t *pui_stack_color_data38;
  uint64_t *pui_stack_color_data30;
  uint64_t ui_stack_color_data28;
  float ui_stack_float_a20;
  float ui_stack_float_a1c;
  uint8_t ui_stack_array [8];
  float ui_stack_float_a10;
  uint32_t ui_stack_variable_uint_a0c;
  uint64_t ui_stack_variable_uint_a08;
  uint64_t ui_stack_variable_uint_a00;
  uint64_t ui_stack_temp_9f8;
  uint64_t ui_stack_temp_9f0;
  uint ui_stack_temp_9e8;
  uint64_t ui_stack_temp_9d8;
  uint64_t ui_stack_temp_9d0;
  uint64_t ui_stack_temp_9c8;
  uint64_t ui_stack_temp_9c0;
  uint64_t ui_stack_temp_9b8;
  uint64_t ui_stack_temp_9b0;
  uint64_t ui_stack_temp_9a8;
  uint64_t ui_stack_temp_9a0;
  uint8_t ui_stack_array [16];
  uint64_t ui_stack_variable_uint_988;
  uint64_t ui_stack_variable_uint_980;
  uint64_t ui_stack_temp_978;
  uint64_t ui_stack_temp_970;
  longlong ui_stack_parameter_long;
  uint64_t ui_stack_temp_958;
  uint64_t ui_stack_temp_950;
  uint32_t ui_stack_temp_948;
  uint32_t ui_stack_temp_944;
  uint32_t ui_stack_temp_940;
  uint32_t ui_stack_temp_93c;
  int ui_stack_temp_variable_938;
  float ui_stack_float_934;
  longlong *pui_stack_parameter_long;
  longlong ui_stack_parameter_long;
  uint8_t ui_stack_array [16];
  uint64_t ui_stack_temp_valuef8;
  uint64_t ui_stack_temp_valuef0;
  uint64_t ui_stack_temp_valuee8;
  uint64_t ui_stack_temp_valuee0;
  uint64_t ui_stack_temp_valued8;
  uint64_t ui_stack_temp_valued0;
  uint8_t ui_stack_array [16];
  float aui_stack_float_898 [4];
  uint8_t ui_stack_array [16];
  uint64_t ui_stack_temp_7b8;
  uint64_t ui_stack_temp_7b0;
  uint64_t ui_stack_temp_7a8;
  uint64_t ui_stack_temp_7a0;
  uint64_t ui_stack_variable_uint_788;
  uint64_t ui_stack_variable_uint_780;
  uint32_t ui_stack_temp_778;
  uint32_t ui_stack_temp_774;
  uint32_t ui_stack_temp_770;
  uint32_t ui_stack_temp_76c;
  uint64_t ui_stack_array [2];
  uint8_t ui_stack_array [8];
  float ui_stack_float_750;
  uint32_t ui_stack_temp_74c;
  uint32_t ui_stack_temp_748;
  uint32_t ui_stack_temp_744;
  uint32_t ui_stack_temp_740;
  uint32_t ui_stack_temp_73c;
  uint64_t ui_stack_temp_738;
  uint64_t ui_stack_temp_730;
  uint64_t ui_stack_array [4];
  uint64_t ui_stack_temp_6e8;
  uint64_t ui_stack_temp_6e0;
  uint64_t ui_stack_temp_6d8;
  uint64_t ui_stack_temp_6d0;
  uint8_t ui_stack_array [192];
  uint64_t ui_stack_array [4];
  longlong ui_stack_parameter_buffer [32];
  float aui_stack_float_4e8 [2];
  uint64_t ui_stack_temp_4e0;
  ulonglong ui_stack_temp_e8;
  
  ui_stack_temp_e8 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_task_index3 = 0;
  *(uint8_t *)(ui_callback + UI_OFFSET_300) = 0;
  ui_stack_float_a88 = ui_parameter_value;
  ui_stack_parameter_long = ui_parameter_value;
  ui_stack_color_data28 = (uint64_t *)UI_ZERO_OFFSET;
  ui_stack_temp_b04 = 0;
  ui_stack_parameter_longae0 = ui_event_type;
  ui_stack_parameter_longab8 = ui_callback;
  float_value = (float)ui_system_get_widget_opacity(ui_parameter_value);
  ui_stack_float_934 = float_value;
  ui_event_buffer = (uint64_t *)ui_create_event_data_buffer(ui_parameter_value,&ui_stack_temp_7b8);
  ui_stack_temp_738 = *(uint64_t *)(ui_parameter_value + UI_MEMORY_ALLOC_SIZE);
  ui_stack_temp_730 = *(uint64_t *)(ui_parameter_value + UI_MEMORY_DEALLOC_OFFSET);
  ui_stack_array[0] = *ui_event_buffer;
  ui_stack_array[1] = ui_event_buffer[1];
  _aui_stack_temp_758 = *(uint8_t (*) [16])(ui_event_buffer + 2);
  ui_stack_temp_748 = *(uint32_t *)(ui_event_buffer + 4);
  ui_stack_temp_744 = *(uint32_t *)((longlong)ui_event_buffer + UI_EVENT_COUNTER_OFFSET);
  ui_stack_temp_740 = *(uint32_t *)(ui_event_buffer + 5);
  ui_stack_temp_73c = *(uint32_t *)((longlong)ui_event_buffer + UI_OPERATION_RESULT_OFFSET);
  ui_copy_event_data(&ui_stack_color_data68,ui_stack_array);
  ui_stack_temp_978 = ui_stack_temp_738;
  ui_stack_temp_970 = ui_stack_temp_730;
  ui_stack_variable_uint_988 = ui_stack_color_data68;
  ui_stack_variable_uint_980 = ui_stack_color_data60;
  if ((ui_callback_primary != UI_CHAR_NULL) && (*(int *)(ui_callback + UI_OFFSET_160) != 4)) {
    ui_event_buffer = ui_stack_array;
    ui_event_index = 8;
    do {
      ui_system_process_widget_event(ui_event_buffer);
      ui_event_index = ui_stack_parameter_longae0;
      ui_event_buffer = ui_event_buffer + 2;
      ui_event_index = ui_event_index + -1;
    } while (ui_event_index != 0);
    ui_character_value = *(char *)(ui_callback + UI_TEMP_VALUE_OFFSET);
    if (UI_CHAR_NULL < *(char *)(ui_callback + 0xa6)) {
      ui_float_ptr7 = (float *)(ui_callback + UI_RESOURCE_TYPE_CONFIG0);
      do {
        ui_event_type = ui_event_index;
        if ((int)ui_character_value == ui_parameter_value) break;
        pui_widget_y_coord = (float *)ui_system_cleanupuiui_stack_var_var(ui_event_index,ui_character_value,ui_parameter_value);
        float_value = *pui_widget_y_coord;
        float_value = pui_widget_y_coord[1];
        float_value = pui_widget_y_coord[2];
        float_value = pui_widget_y_coord[3];
        if (0.001 <= ui_parameter_value) {
          if (ui_parameter_value <= 0.999) {
            float_value = float_value * ui_float_ptr7[2];
            float_value = float_value * ui_float_ptr7[3];
            ui_stack_temp_7a8 = UI_FLOAT_NEGATIVE_ONEbf800000;
            ui_stack_temp_7a0 = UI_FLOAT_NEGATIVE_ONEbf800000;
            ui_temp_buffer._data_offset_ = float_value + float_value * *ui_float_ptr7;
            ui_temp_buffer._data_size_ = float_value + float_value * ui_float_ptr7[1];
            ui_temp_buffer._data_format_ = float_value + float_value;
            ui_temp_buffer._data_flags_ = float_value + float_value;
            ui_temp_buffer._4_12_ = ui_temp_buffer._4_12_;
            ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + ui_temp_buffer._data_size_;
            ui_stack_temp_7b8 = UI_BIT_SHIFT_638000003f800000;
            ui_stack_temp_7b0 = UI_BIT_SHIFT_638000003f800000;
            ui_task_index3 = movmskps((int)pui_widget_y_coord,ui_temp_buffer);
            ui_loop_counter = (ulonglong)(ui_task_index3 & 1);
            float_value = *(float *)(&ui_stack_temp_7b8 + ui_temp_buffer * 2);
            float_value = *(float *)(&ui_stack_temp_7b0 + ui_temp_buffer * 2);
            float_value = *ui_float_ptr7;
            float_value = ui_float_ptr7[2];
            float_value = *(float *)((longlong)&ui_stack_temp_7b8 + ui_loop_counter * UI_EVENT_FLAG_OFFSET + 4) * ui_float_ptr7[1];
            float_value = *(float *)((longlong)&ui_stack_temp_7b0 + ui_loop_counter * UI_EVENT_FLAG_OFFSET + 4) * ui_float_ptr7[3];
            if (0.9995 < ABS(ui_temp_buffer._data_offset_)) {
              float_value = 1.0 - ui_parameter_value;
              ui_stack_color_data68 = CONCAT44(float_value * float_value + ui_parameter_value * float_value,
                                    float_value * float_value + ui_parameter_value * float_value * float_value);
              ui_stack_color_data60 = CONCAT44(float_value * float_value + ui_parameter_value * float_value,
                                    float_value * float_value + ui_parameter_value * float_value * float_value);
              ui_system_process_event_data(&ui_stack_color_data68);
              float_value = (float)ui_stack_color_data68;
              float_value = ui_stack_color_data68._data_size_;
              float_value = (float)ui_stack_color_data60;
              float_value = ui_stack_color_data60._data_size_;
            }
            else {
              acosf();
              float_value = (float)sinf();
              float_value = float_value * (1.0 / float_value);
              float_value = (float)sinf();
              float_value = float_value * (1.0 / float_value);
              float_value = float_value * float_value + float_value * float_value * float_value;
              float_value = float_value * float_value + float_value * float_value;
              float_value = float_value * float_value + float_value * float_value * float_value;
              float_value = float_value * float_value + float_value * float_value;
            }
          }
          else {
            float_value = *ui_float_ptr7;
            float_value = ui_float_ptr7[1];
            float_value = ui_float_ptr7[2];
            float_value = ui_float_ptr7[3];
          }
        }
        ui_stack_temp_b04 = ui_stack_temp_b04 + 1;
        ui_task_index3 = (int)ui_stack_color_data28 + 1;
        ui_stack_color_data28 = (uint64_t *)(ulonglong)ui_task_index3;
        pui_widget_y_coord = (float *)(((longlong)aui_stack_float_898 - ui_callback) + (longlong)ui_float_ptr7);
        *pui_widget_y_coord = float_value;
        pui_widget_y_coord[1] = float_value;
        pui_widget_y_coord[2] = float_value;
        pui_widget_y_coord[3] = float_value;
        ui_float_ptr7 = ui_float_ptr7 + 4;
        ui_character_value = *(char *)((longlong)ui_character_value + UI_MAX_COMPONENT_VALUE + ui_parameter_value);
        ui_parameter_value = ui_stack_float_a88;
      } while ((int)ui_task_index3 < (int)*(char *)(ui_callback + 0xa6));
    }
    ui_result_status = ui_stack_temp_b04 - 1;
    ui_loop_counter = (ulonglong)ui_result_status;
    if (-1 < ui_result_status) {
      ui_event_buffer = ui_stack_array + ui_temp_buffer * 2;
      do {
        ui_character_value = *(char *)(ui_stack_parameter_longab8 + UI_TEMP_VALUE_OFFSET);
        ui_result_status = (int)ui_loop_counter;
        if (0 < ui_result_status) {
          ui_loop_counter = ui_temp_buffer ui_loop_counter & UI_BIT_MASK_32BIT_FULL UI_BIT_MASK_32BIT_FULL;
          do {
            ui_character_value = *(char *)((longlong)ui_character_value + UI_MAX_COMPONENT_VALUE + ui_parameter_value);
            ui_loop_counter = ui_loop_counter - 1;
          } while (ui_loop_counter != 0);
        }
        ui_loop_counter = (ulonglong)ui_character_value;
        ui_callback_ptr = (uint64_t *)((ui_loop_counter + 0x82) * UI_EVENT_FLAG_OFFSET + ui_event_type);
        if (ui_result_status == ui_result_status) {
          if (ui_character_value != UI_CHAR_NULL) {
            ui_event_buffer = (uint8_t *)
                      ui_system_cleanupuiui_stack_var_var(ui_stack_parameter_longae0,*(uint8_t *)(ui_loop_counter + UI_MAX_COMPONENT_VALUE + ui_parameter_value),ui_parameter_value);
            ui_task_index_pointer5 = ui_stack_array;
            ui_event_buffer = ui_stack_array + (longlong)ui_result_status * 2;
            goto UI_LABEL_GENERIC_663714;
          }
          ui_event_id_fifth = *ui_event_buffer;
          ui_loop_counter = ui_event_buffer[1];
        }
        else {
          ui_task_index_pointer5 = ui_stack_array;
          ui_event_buffer = ui_stack_array + (longlong)ui_result_status * 2;
          ui_event_buffer = ui_stack_array + (longlong)ui_result_status * UI_EVENT_FLAG_OFFSET;
UI_LABEL_GENERIC_663714:
          ui_event_buffer = (uint64_t *)ui_system_create_event_buffer(ui_event_buffer,ui_task_index_pointer5,ui_event_buffer);
          ui_event_id_fifth = *ui_event_buffer;
          ui_loop_counter = ui_event_buffer[1];
        }
        *ui_callback_ptr = ui_event_id_fifth;
        ui_callback_ptr[1] = ui_loop_counter;
        ui_event_buffer = ui_event_buffer + -2;
        *(ulonglong *)(ui_stack_parameter_longae0 + UI_STACK_SIZE_1280) =
             *(ulonglong *)(ui_stack_parameter_longae0 + UI_STACK_SIZE_1280) |
             *(ulonglong *)(ui_loop_counter * UI_GUARD_CHECK_TYPE0 + UI_SYSTEM_CONFIG_OFFSET + *(longlong *)(ui_parameter_value + UI_ANIMATION_DATA_OFFSET));
        ui_loop_counter = (ulonglong)(ui_result_status - 1U);
        *(ulonglong *)(ui_stack_parameter_longae0 + UI_STACK_SIZE_1288) =
             *(ulonglong *)(ui_stack_parameter_longae0 + UI_STACK_SIZE_1288) | 1L << (ui_loop_counter & UI_BIT_SHIFT_63);
        ui_event_type = ui_stack_parameter_longae0;
      } while (-1 < (int)(ui_result_status - 1U));
    }
    goto UI_LABEL_GENERIC_66375a;
  }
  ui_character_value = *(char *)(ui_callback + 0xa5);
  ui_character_value = *(char *)(ui_callback + UI_TEMP_VALUE_OFFSET);
  ui_stack_variable_uint_a08 = UI_BIT_SHIFT_63800000;
  ui_stack_variable_uint_a00 = 0;
  ui_stack_temp_9f8 = 0;
  ui_stack_temp_9f0 = UI_BIT_SHIFT_6380000000000000;
  if (ui_character_value != ui_character_value) {
    do {
      ui_event_index = (longlong)ui_character_value;
      ui_event_buffer = (uint64_t *)(ui_event_type + (ui_event_index + 0x82) * UI_EVENT_FLAG_OFFSET);
      ui_stack_temp_7b8 = *ui_event_buffer;
      ui_stack_temp_7b0 = ui_event_buffer[1];
      ui_event_buffer = (uint64_t *)(ui_event_index * UI_GUARD_CHECK_TYPE0 + UI_STACK_SIZE_128 + *(longlong *)(ui_parameter_value + UI_ANIMATION_DATA_OFFSET));
      ui_stack_temp_7a8 = *ui_event_buffer;
      ui_stack_temp_7a0 = ui_event_buffer[1];
      ui_event_buffer = (uint64_t *)ui_allocate_event_memory(&ui_stack_variable_uint_a08,ui_stack_array,&ui_stack_temp_7a8);
      ui_callback_ptr = (uint64_t *)ui_system_process_widget_callback(&ui_stack_variable_uint_a08,ui_stack_array,&ui_stack_temp_7b8);
      ui_stack_temp_9f8 = *ui_event_buffer;
      ui_stack_temp_9f0 = ui_event_buffer[1];
      ui_character_value = *(char *)(ui_callback + UI_TEMP_VALUE_OFFSET);
      ui_stack_variable_uint_a08 = *ui_callback_ptr;
      ui_stack_variable_uint_a00 = ui_callback_ptr[1];
      ui_character_value = *(char *)(ui_event_index + UI_MAX_COMPONENT_VALUE + ui_parameter_value);
      ui_parameter_value = ui_stack_parameter_long;
    } while (ui_character_value != ui_character_value);
  }
  ui_result_status = *(int *)(ui_callback + UI_OFFSET_160);
  if (ui_result_status == 3) {
    ui_event_id_fifth = ui_create_event_id(ui_parameter_value,ui_stack_array,ui_callback + UI_EVENT_FLAG_OFFSET);
    ui_long_counter_ptr6 = (longlong *)ui_allocate_event_memory(&ui_stack_variable_uint_988,ui_stack_array,ui_event_id_fifth);
    ui_stack_color_dataf8 = (uint64_t *)*ui_long_counter_ptr6;
    ui_stack_parameter_longaf0 = ui_long_counter_ptr6[1];
    if (0.0 < *(float *)(ui_callback + UI_MEMORY_ALLOC_SIZE)) {
      ui_event_id_fifth = ui_system_get_widget_event_id(&ui_stack_variable_uint_a08,ui_stack_array);
      ui_initialize_event_structure(ui_callback + UI_OFFSET_32,&ui_stack_color_data68,ui_event_id_fifth);
      float_value = *(float *)(ui_callback + UI_MEMORY_ALLOC_SIZE);
      ui_stack_color_dataf8 = (uint64_t *)
                   CONCAT44(ui_stack_color_dataf8._data_size_ - ui_stack_color_data68._data_size_ * float_value,
                            (float)ui_stack_color_dataf8 - (float)ui_stack_color_data68 * float_value);
      ui_stack_parameter_longaf0 = CONCAT44(ui_stack_parameter_longaf0._data_size_,(float)ui_stack_parameter_longaf0 - (float)ui_stack_color_data60 * float_value);
    }
UI_LABEL_GENERIC_663ade:
    if ((((float)ui_stack_temp_9f8 != 0.0) || (ui_stack_temp_9f8._data_size_ != 0.0)) || ((float)ui_stack_temp_9f0 != 0.0)) {
      ui_event_buffer = (uint64_t *)(ui_callback + UI_OFFSET_32);
UI_LABEL_GENERIC_663a5e:
      ui_float_ptr7 = (float *)ui_initialize_event_structure(ui_event_buffer,ui_stack_array,&ui_stack_temp_9f8);
      ui_stack_color_dataf8 = (uint64_t *)
                   CONCAT44(ui_stack_color_dataf8._data_size_ - ui_float_ptr7[1],(float)ui_stack_color_dataf8 - *ui_float_ptr7);
      ui_stack_parameter_longaf0 = CONCAT44(ui_stack_parameter_longaf0._data_size_,(float)ui_stack_parameter_longaf0 - ui_float_ptr7[2]);
    }
  }
  else if (ui_result_status == 4) {
    ui_event_buffer = (uint64_t *)ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_character_value,ui_parameter_value);
    ui_stack_array[0] = *ui_event_buffer;
    ui_stack_array[1] = ui_event_buffer[1];
    _aui_stack_temp_758 = *(uint8_t (*) [16])(ui_event_type + ((longlong)ui_character_value + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET);
    ui_character_value = ui_system_validate_widget_state(ui_callback + UI_OFFSET_32);
    if (ui_character_value == UI_CHAR_NULL) {
      ui_stack_array[0] = *(uint64_t *)(ui_callback + UI_OFFSET_32);
      ui_stack_array[1] = *(uint64_t *)(ui_callback + UI_CALLBACK_HANDLER_OFFSET);
    }
    ui_event_buffer = (uint64_t *)ui_system_process_widget_callback(&ui_stack_variable_uint_988,ui_stack_array,ui_stack_array);
    ui_stack_float_a98 = (float)ui_stack_array._data_offset_ + *(float *)(ui_callback + UI_EVENT_FLAG_OFFSET);
    ui_stack_variable_uint_a8c = UI_FLOAT_MAX_VALUE;
    ui_stack_temp_9a8 = *ui_event_buffer;
    ui_stack_temp_9a0 = ui_event_buffer[1];
    ui_stack_float_a94 = (float)ui_stack_array._data_size_ + *(float *)(ui_callback + UI_SHIFT_AMOUNT_20);
    ui_stack_float_a90 = ui_stack_float_750 + *(float *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS);
    ui_long_counter_ptr6 = (longlong *)ui_allocate_event_memory(&ui_stack_variable_uint_988,ui_stack_array,&ui_stack_float_a98);
    ui_stack_color_dataf8 = (uint64_t *)*ui_long_counter_ptr6;
    ui_stack_parameter_longaf0 = ui_long_counter_ptr6[1];
  }
  else if (ui_result_status == 5) {
    ui_character_value = *(char *)(ui_callback + UI_OFFSET_32);
    ui_event_buffer = (uint64_t *)ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_character_value,ui_parameter_value);
    ui_stack_array[0] = *ui_event_buffer;
    ui_stack_array[1] = ui_event_buffer[1];
    _aui_stack_temp_758 = *(uint8_t (*) [16])(ui_event_type + ((longlong)ui_character_value + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET);
    ui_float_ptr7 = (float *)ui_initialize_event_structure(ui_stack_array,ui_stack_array,ui_callback + UI_EVENT_FLAG_OFFSET);
    ui_temp_buffer = _aui_stack_temp_758;
    ui_stack_array._data_size_ = (float)ui_stack_array._data_size_ + ui_float_ptr7[1];
    ui_stack_array._data_offset_ = (float)ui_stack_array._data_offset_ + *ui_float_ptr7;
    ui_stack_temp_74c = ui_temp_buffer._data_flags_;
    ui_stack_float_750 = ui_stack_float_750 + ui_float_ptr7[2];
    ui_allocate_event_memory(&ui_stack_variable_uint_988,&ui_stack_temp_9d8,ui_stack_array);
    ui_stack_color_dataf8 = ui_stack_temp_9d8;
    ui_stack_parameter_longaf0 = ui_stack_temp_9d0;
    ui_event_buffer = (uint64_t *)ui_system_cleanupuiui_stack_var_var(ui_event_type,*(uint8_t *)(ui_callback + UI_TEMP_VALUE_OFFSET),ui_parameter_value);
    ui_stack_temp_9a8 = *ui_event_buffer;
    ui_stack_temp_9a0 = ui_event_buffer[1];
    ui_event_buffer = (uint64_t *)ui_system_process_widget_callback(&ui_stack_variable_uint_988,ui_stack_array,&ui_stack_temp_9a8);
    ui_stack_temp_9a8 = *ui_event_buffer;
    ui_stack_temp_9a0 = ui_event_buffer[1];
    if ((((float)ui_stack_temp_9f8 != 0.0) || (ui_stack_temp_9f8._data_size_ != 0.0)) || ((float)ui_stack_temp_9f0 != 0.0)) {
      ui_initialize_event_structure(&ui_stack_temp_9a8,&ui_stack_color_data68,&ui_stack_temp_9f8);
      ui_stack_color_dataf8 = (uint64_t *)
                   CONCAT44(ui_stack_color_dataf8._data_size_ - ui_stack_color_data68._data_size_,
                            (float)ui_stack_color_dataf8 - (float)ui_stack_color_data68);
      ui_stack_parameter_longaf0 = CONCAT44(ui_stack_parameter_longaf0._data_size_,(float)ui_stack_parameter_longaf0 - (float)ui_stack_color_data60);
    }
  }
  else {
    if (ui_result_status == 6) {
      ui_event_id_fifth = ui_create_event_id(ui_parameter_value,ui_stack_array,ui_callback + UI_EVENT_FLAG_OFFSET);
      ui_long_counter_ptr6 = (longlong *)ui_allocate_event_memory(&ui_stack_variable_uint_988,ui_stack_array,ui_event_id_fifth);
      ui_stack_color_dataf8 = (uint64_t *)*ui_long_counter_ptr6;
      ui_stack_parameter_longaf0 = ui_long_counter_ptr6[1];
      goto UI_LABEL_GENERIC_663ade;
    }
    if (ui_result_status == 7) {
      if ((*(ulonglong *)(ui_event_flags + 0x810) >> ((ulonglong)*(byte *)(ui_callback + 0xa5) & UI_BIT_SHIFT_63) & 1) ==
          0) {
        ui_callback_ptr = (uint64_t *)ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_character_value,ui_parameter_value);
        ui_event_buffer = (uint64_t *)(ui_event_type + ((longlong)ui_character_value + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET);
        ui_stack_temp_7a8 = *ui_event_buffer;
        ui_stack_temp_7a0 = ui_event_buffer[1];
        ui_stack_temp_7b8 = *ui_callback_ptr;
        ui_stack_temp_7b0 = ui_callback_ptr[1];
        ui_event_buffer = (uint64_t *)ui_system_process_widget_callback(&ui_stack_variable_uint_988,ui_stack_array,&ui_stack_temp_7b8);
        ui_character_value = *(char *)(ui_callback + 0xa5);
        ui_stack_temp_9a8 = *ui_event_buffer;
        ui_stack_temp_9a0 = ui_event_buffer[1];
        ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_character_value,ui_parameter_value);
        ui_event_buffer = (uint64_t *)(ui_event_type + ((longlong)ui_character_value + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET);
        ui_stack_array = (uint8_t  [8])*ui_event_buffer;
        ui_event_id_fifth = ui_event_buffer[1];
      }
      else {
        ui_callback_ptr = (uint64_t *)ui_system_cleanupuiui_stack_var_var(ui_event_flags,ui_character_value,ui_parameter_value);
        ui_event_buffer = (uint64_t *)(ui_event_flags + ((longlong)ui_character_value + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET);
        ui_stack_temp_7a8 = *ui_event_buffer;
        ui_stack_temp_7a0 = ui_event_buffer[1];
        ui_stack_temp_7b8 = *ui_callback_ptr;
        ui_stack_temp_7b0 = ui_callback_ptr[1];
        ui_event_buffer = (uint64_t *)ui_system_process_widget_callback(&ui_stack_variable_uint_988,ui_stack_array,&ui_stack_temp_7b8);
        ui_character_value = *(char *)(ui_callback + 0xa5);
        ui_stack_temp_9a8 = *ui_event_buffer;
        ui_stack_temp_9a0 = ui_event_buffer[1];
        ui_system_cleanupuiui_stack_var_var(ui_event_flags,ui_character_value,ui_parameter_value);
        ui_event_buffer = (uint64_t *)(ui_event_flags + ((longlong)ui_character_value + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET);
        ui_stack_array = (uint8_t  [8])*ui_event_buffer;
        ui_event_id_fifth = ui_event_buffer[1];
      }
      ui_stack_color_datad0._data_offset_ = (float)ui_event_id_fifth;
      ui_stack_color_datad0._data_size_ = (float)((ulonglong)ui_event_id_fifth >> UI_OFFSET_32);
      ui_stack_color_datad0._data_offset_ = (float)ui_stack_color_datad0 + *(float *)(ui_callback + UI_WIDGET_BASE_OFFSET);
      ui_event_buffer = (uint64_t *)ui_create_event_data_buffer(ui_callback + UI_EVENT_FLAG_OFFSET,ui_stack_array,ui_stack_array);
      ui_stack_array = (uint8_t  [8])*ui_event_buffer;
      ui_stack_color_datad0 = ui_event_buffer[1];
      paui_event_id_fourth = (uint8_t (*) [16])ui_system_get_widget_event_array(ui_callback + UI_OFFSET_80,ui_stack_array,ui_stack_array);
      _aui_stack_color_datad8 = *paui_event_id_fourth;
      ui_event_id_fifth = ui_create_event_id(ui_stack_parameter_long,ui_stack_array,ui_stack_array);
      ui_long_counter_ptr6 = (longlong *)ui_allocate_event_memory(&ui_stack_variable_uint_988,ui_stack_array,ui_event_id_fifth);
      ui_stack_color_dataf8 = (uint64_t *)*ui_long_counter_ptr6;
      ui_stack_parameter_longaf0 = ui_long_counter_ptr6[1];
      if ((((float)ui_stack_temp_9f8 != 0.0) || (ui_stack_temp_9f8._data_size_ != 0.0)) || ((float)ui_stack_temp_9f0 != 0.0)) {
        ui_event_buffer = &ui_stack_temp_9a8;
        goto UI_LABEL_GENERIC_663a5e;
      }
    }
  }
  ui_event_index = 8;
  ui_long_counter_ptr6 = ui_stack_parameter_buffer;
  ui_event_index = 8;
  do {
    ui_system_process_widget_event(ui_long_counter_ptr6);
    ui_long_counter_ptr6 = ui_long_counter_ptr6 + 4;
    ui_event_index = ui_event_index + -1;
  } while (ui_event_index != 0);
  ui_event_buffer = &ui_stack_temp_6e8;
  do {
    ui_system_process_widget_event(ui_event_buffer);
    ui_event_buffer = ui_event_buffer + 4;
    ui_event_index = ui_event_index + -1;
  } while (ui_event_index != 0);
  ui_float_ptr7 = aui_stack_float_4e8;
  ui_event_index = UI_BUFFER_SIZE_64;
  do {
    ui_system_process_widget_event(ui_float_ptr7);
    ui_float_ptr7 = ui_float_ptr7 + 4;
    ui_event_index = ui_event_index + -1;
  } while (ui_event_index != 0);
  booluiui_stack_var_var_b08 = *(byte *)(ui_callback + UI_TEMP_VALUE_OFFSET);
  ui_task_index8 = (uint)(char)booluiui_stack_var_var_b08;
  _aui_stack_color_data18 = ZEXT416(0);
  if (ui_task_index8 != ui_parameter_value) {
    ui_event_buffer = &ui_stack_temp_6e8;
    ui_loop_counter = ui_task_index3;
    do {
      ui_event_index = ui_stack_parameter_longae0;
      if ((int)*(char *)(ui_callback + 0xa6) <= (int)ui_task_index3) break;
      ui_event_buffer = (uint32_t *)ui_system_cleanupuiui_stack_var_var(ui_stack_parameter_longae0,ui_task_index8 & UI_COMPONENT_MAX_VALUE,ui_parameter_value);
      ui_event_index = (longlong)(char)ui_task_index8;
      ui_loop_counter = ui_event_buffer[1];
      ui_loop_counter = ui_event_buffer[2];
      ui_loop_counter = ui_event_buffer[3];
      *(uint32_t *)ui_event_buffer = *ui_event_buffer;
      *(uint32_t *)((longlong)ui_event_buffer + 4) = ui_loop_counter;
      *(uint32_t *)(ui_event_buffer + 1) = ui_loop_counter;
      *(uint32_t *)((longlong)ui_event_buffer + 12) = ui_loop_counter;
      ui_callback_ptr = (uint64_t *)(ui_event_index + (ui_event_index + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET);
      ui_event_id_fifth = ui_callback_ptr[1];
      ui_event_buffer[2] = *ui_callback_ptr;
      ui_event_buffer[3] = ui_event_id_fifth;
      ui_callback_ptr = (uint64_t *)ui_system_cleanupuiui_stack_var_var(ui_event_index,booluiui_stack_var_var_b08,ui_parameter_value);
      ui_event_index = ui_stack_parameter_longab8;
      boolean_flag = *(byte *)(ui_event_index + UI_MAX_COMPONENT_VALUE + ui_parameter_value);
      ui_event_id_fifth = ui_callback_ptr[1];
      *(uint64_t *)(aui_stack_float_4e8 + ui_event_index * 4) = *ui_callback_ptr;
      (&ui_stack_temp_4e0)[ui_event_index * 2] = ui_event_id_fifth;
      if (booluiui_stack_var_var_b08 == 0) {
        float_value = (float)(int)((int)*(char *)(ui_stack_parameter_longab8 + 0xa6) - ui_task_index3) /
                 (float)(int)*(char *)(ui_stack_parameter_longab8 + 0xa6);
        float_value = float_value * float_value + 0.1;
        if (1.0 <= float_value) {
          float_value = 1.0;
        }
        pui_widget_y_coord = (float *)ui_process_event_buffer(&ui_stack_variable_uint_988,ui_stack_array,&ui_stack_color_dataf8);
        ui_character_value = *(char *)(ui_event_index + UI_TEMP_VALUE_OFFSET);
        ui_system_cleanupuiui_stack_var_var(ui_stack_parameter_longae0,ui_character_value,ui_parameter_value);
        ui_float_ptr7 = (float *)(ui_stack_parameter_longae0 + ((longlong)ui_character_value + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET);
        ui_stack_float_a10 = pui_widget_y_coord[2] - ui_float_ptr7[2];
        ui_stack_variable_uint_a0c = UI_FLOAT_MAX_VALUE;
        ui_stack_array._data_size_ = (pui_widget_y_coord[1] - ui_float_ptr7[1]) * float_value;
        ui_stack_array._data_offset_ = (*pui_widget_y_coord - *ui_float_ptr7) * float_value;
        if (0.0 < pui_widget_y_coord[2] - ui_float_ptr7[2]) {
          ui_stack_float_a10 = 0.0;
          ui_stack_variable_uint_a0c = UI_FLOAT_MAX_VALUE;
        }
        ui_float_ptr7 = (float *)ui_initialize_event_structure(&ui_stack_variable_uint_988,ui_stack_array,ui_stack_array);
        ui_stack_color_dataf8 = (uint64_t *)
                     CONCAT44(ui_stack_color_dataf8._data_size_ - ui_float_ptr7[1],(float)ui_stack_color_dataf8 - *ui_float_ptr7);
        ui_stack_parameter_longaf0 = CONCAT44(ui_stack_parameter_longaf0._data_size_,(float)ui_stack_parameter_longaf0 - ui_float_ptr7[2]);
      }
      ui_task_index8 = (uint)boolean_flag;
      ui_loop_counter = ui_stack_temp_b04 + 1;
      ui_task_index3 = ui_task_index3 + 1;
      ui_event_buffer = ui_event_buffer + 4;
      ui_callback = ui_stack_parameter_longab8;
      booluiui_stack_var_var_b08 = boolean_flag;
      ui_stack_temp_b04 = ui_loop_counter;
    } while ((int)(char)boolean_flag != ui_parameter_value);
    ui_event_index = ui_stack_parameter_longae0;
    if (ui_loop_counter != 0) {
      if ((char)ui_task_index8 < UI_CHAR_NULL) {
        ui_stack_temp_valuef8 = UI_BIT_SHIFT_63800000;
        ui_stack_temp_valuef0 = 0;
        ui_stack_temp_valuee8 = 0;
        ui_stack_temp_valuee0 = UI_BIT_SHIFT_6380000000000000;
      }
      else {
        ui_event_buffer = (uint64_t *)ui_system_cleanupuiui_stack_var_var(ui_stack_parameter_longae0,ui_task_index8 & UI_COMPONENT_MAX_VALUE,ui_parameter_value);
        ui_stack_temp_valuef8 = *ui_event_buffer;
        ui_stack_temp_valuef0 = ui_event_buffer[1];
        ui_event_buffer = (uint64_t *)(ui_event_index + ((longlong)(char)booluiui_stack_var_var_b08 + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET);
        ui_stack_temp_valuee8 = *ui_event_buffer;
        ui_stack_temp_valuee0 = ui_event_buffer[1];
        ui_loop_counter = ui_stack_temp_b04;
      }
      ui_stack_color_datac0 = ui_loop_counter - 1;
      ui_stack_float_abc = 0.0;
      ui_event_id_fifth = ui_stack_array[(longlong)(int)ui_loop_counter * 4 + 2];
      ui_loop_counter = ui_stack_array[(longlong)(int)ui_loop_counter * 4 + 3];
      ui_stack_array = (uint8_t  [8])(longlong)(int)ui_loop_counter;
      ui_long_counter_ptr6 = (longlong *)((longlong)ui_stack_array + -1);
      ui_temporary_buffer = ui_stack_array;
      pui_stack_parameter_long = ui_long_counter_ptr6;
      do {
        ui_character_value = *(char *)(ui_callback + UI_TEMP_VALUE_OFFSET);
        ui_stack_temp_variable_ac8 = -1;
        pui_stack_color_data30 = (uint64_t *)UI_ZERO_OFFSET;
        ui_character_value = -1;
        pui_stack_variable_uint_a80 = (uint64_t *)UI_UINT64_MAX;
        pui_stack_parameter_longab0 = ui_long_counter_ptr6;
        if (0 < (longlong)ui_temporary_buffer) {
          pui_stack_color_data78 = (uint64_t *)UI_ZERO_OFFSET;
          ui_stack_color_datae8 = UI_BIT_MASK_32BIT_FULL;
          pui_stack_color_data38 = (uint64_t *)UI_BIT_MASK_32BIT_FULLffffffe0;
          do {
            ui_callback_ptr = pui_stack_color_data30;
            ui_event_buffer = pui_stack_color_data78;
            ui_task_index3 = ui_stack_color_datae8;
            ui_event_index = (longlong)ui_character_value;
            pui_stack_parameter_longab0 = (longlong *)ui_event_index;
            if (*(int *)(ui_event_index * UI_GUARD_CHECK_TYPE0 + UI_RESOURCE_LOAD_TYPE0 + *(longlong *)(ui_parameter_value + UI_ANIMATION_DATA_OFFSET)) != -1) {
              if (ui_character_value == -1) {
                ui_event_buffer = (uint32_t *)ui_process_event_buffer(&ui_stack_variable_uint_988,ui_stack_array,&ui_stack_color_dataf8);
                ui_loop_counter = ui_event_buffer[1];
                ui_loop_counter = ui_event_buffer[2];
                ui_loop_counter = ui_event_buffer[3];
                *(uint32_t *)((longlong)&ui_stack_temp_6d8 + (longlong)ui_event_buffer) = *ui_event_buffer;
                *(uint32_t *)((longlong)&ui_stack_temp_6d8 + 4 + (longlong)ui_event_buffer) = ui_loop_counter;
                *(uint32_t *)((longlong)&ui_stack_temp_6d0 + (longlong)ui_event_buffer) = ui_loop_counter;
                *(uint32_t *)((longlong)&ui_stack_temp_6d0 + 4 + (longlong)ui_event_buffer) = ui_loop_counter;
                pui_stack_parameter_longab0 = (longlong *)ui_event_index;
                pui_stack_color_data30 = ui_callback_ptr;
                ui_stack_color_datae8 = ui_task_index3;
              }
              else {
                ui_stack_temp_958 = (uint64_t *)UI_ZERO_OFFSET;
                ui_stack_temp_950 = 0;
                for (; ui_character_value != ui_character_value; ui_character_value = *(char *)((longlong)ui_character_value + UI_MAX_COMPONENT_VALUE + ui_parameter_value)) {
                  ui_event_index = (longlong)ui_character_value * UI_GUARD_CHECK_TYPE0 + *(longlong *)(ui_parameter_value + UI_ANIMATION_DATA_OFFSET);
                  ui_stack_color_data68 = *(uint64_t *)(ui_event_index + UI_WIDGET_BASE_OFFSET);
                  ui_stack_color_data60 = *(uint64_t *)(ui_event_index + UI_OFFSET_152);
                  ui_stack_color_data58 = *(uint32_t *)(ui_event_index + UI_STACK_SIZE_128);
                  ui_stack_color_data54 = *(uint32_t *)(ui_event_index + UI_WIDGET_ITEM_SIZE);
                  ui_stack_color_data50 = *(uint32_t *)(ui_event_index + UI_OFFSET_136);
                  ui_stack_color_data4c = *(uint32_t *)(ui_event_index + 0x8c);
                  ui_event_buffer = (uint64_t *)ui_allocate_event_memory(&ui_stack_color_data68,ui_stack_array,&ui_stack_temp_958);
                  ui_stack_temp_958 = (uint64_t *)*ui_event_buffer;
                  ui_stack_temp_950 = ui_event_buffer[1];
                  ui_loop_counter = ui_stack_temp_b04;
                }
                ui_task_index_pointer5 = ui_stack_array + (longlong)(int)ui_task_index3 * UI_OFFSET_32;
                if ((int)(ui_task_index3 + 2) < (int)ui_loop_counter) {
                  ui_event_buffer = &ui_stack_temp_6e8 + (longlong)(int)(ui_task_index3 + 2) * 4;
                }
                else {
                  ui_event_buffer = &ui_stack_temp_valuef8;
                }
                ui_stack_color_data28 = ui_event_buffer;
                ui_setup_event_buffer(ui_event_buffer,&ui_stack_temp_7b8,ui_task_index_pointer5);
                ui_process_event_buffer(ui_task_index_pointer5,ui_stack_array,&ui_stack_temp_6d8 + (longlong)ui_stack_temp_variable_ac8 * 4);
                ui_task_index0 = ui_get_event_index(ui_stack_array,ui_stack_array);
                ui_task_index1 = ui_get_event_index(&ui_stack_temp_958,ui_stack_array);
                ui_system_calculate_widget_transform(ui_task_index1,&ui_stack_float_a48,ui_task_index0);
                ui_event_index = (longlong)ui_callback_ptr + -1;
                ui_task_index8 = ui_task_index3;
                if ((longlong)pui_stack_variable_uint_a80 < ui_event_index) {
                  ui_event_index = ui_event_index - (longlong)pui_stack_variable_uint_a80;
                  ui_long_counter_ptr6 = ui_stack_parameter_buffer + ui_event_index * 4;
                  do {
                    ui_long_pointer_var = (longlong *)
                              ui_system_create_event_buffer(ui_task_index_pointer5,ui_stack_array,
                                                  &ui_stack_temp_6e8 + (longlong)(int)ui_task_index3 * 4);
                    ui_task_index3 = ui_task_index3 - 1;
                    ui_event_index = ui_long_pointer_var[1];
                    *ui_long_counter_ptr6 = *ui_long_pointer_var;
                    ui_long_counter_ptr6[1] = ui_event_index;
                    ui_event_index = ui_event_index + -1;
                    ui_long_counter_ptr6 = ui_long_counter_ptr6 + -4;
                    ui_event_buffer = ui_stack_color_data28;
                    ui_task_index8 = ui_stack_color_datae8;
                  } while (ui_event_index != 0);
                }
                if (((ui_stack_float_a48 != 0.0) || (ui_stack_float_a44 != 0.0)) || (ui_stack_float_a40 != 0.0)) {
                  float_value = ui_stack_float_a44 * ui_stack_float_a44 + ui_stack_float_a48 * ui_stack_float_a48 +
                           ui_stack_float_a40 * ui_stack_float_a40;
                  ui_temp_buffer = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
                  float_value = ui_temp_buffer._data_offset_;
                  float_value = float_value * 0.5 * (3.0 - float_value * float_value * float_value);
                  ui_stack_float_a48 = ui_stack_float_a48 * float_value;
                  ui_stack_float_a44 = ui_stack_float_a44 * float_value;
                  ui_stack_float_a40 = ui_stack_float_a40 * float_value;
                  asinf();
                  ui_update_event_metrics(ui_stack_array,&ui_stack_float_a48);
                  ui_callback_ptr = (uint64_t *)ui_system_process_widget_callback(&ui_stack_temp_7b8,ui_stack_array,ui_stack_array);
                  ui_stack_temp_7b8 = *ui_callback_ptr;
                  ui_stack_temp_7b0 = ui_callback_ptr[1];
                }
                ui_callback_ptr = (uint64_t *)ui_system_process_widget_callback(ui_event_buffer,ui_stack_array,&ui_stack_temp_7b8);
                ui_event_buffer = pui_stack_color_data78;
                ui_task_index0 = ui_callback_ptr[1];
                *(uint64_t *)((longlong)&ui_stack_temp_6e8 + (longlong)pui_stack_color_data78) = *ui_callback_ptr;
                *(uint64_t *)((longlong)&ui_stack_temp_6e0 + (longlong)pui_stack_color_data78) = ui_task_index0;
                ui_task_index3 = ui_task_index8;
                if ((longlong)pui_stack_variable_uint_a80 < ui_event_index) {
                  ui_event_index = ui_event_index - (longlong)pui_stack_variable_uint_a80;
                  ui_callback_ptr = &ui_stack_temp_6e8 + ui_event_index * 4;
                  do {
                    ui_event_buffer = (uint64_t *)
                              ui_system_process_widget_callback(ui_task_index_pointer5,ui_stack_array,
                                                  ui_stack_parameter_buffer + (longlong)(int)ui_task_index8 * 4);
                    ui_task_index8 = ui_task_index8 - 1;
                    ui_task_index0 = ui_event_buffer[1];
                    *ui_callback_ptr = *ui_event_buffer;
                    ui_callback_ptr[1] = ui_task_index0;
                    ui_event_index = ui_event_index + -1;
                    ui_callback_ptr = ui_callback_ptr + -4;
                    ui_task_index3 = ui_stack_color_datae8;
                  } while (ui_event_index != 0);
                }
                ui_float_ptr7 = (float *)ui_initialize_event_structure(ui_task_index_pointer5,ui_stack_array,&ui_stack_temp_958);
                float_value = *(float *)((longlong)&ui_stack_temp_6d8 + (longlong)pui_stack_color_data38) - *ui_float_ptr7;
                float_value = *(float *)((longlong)&ui_stack_temp_6d8 + 4 + (longlong)pui_stack_color_data38) - ui_float_ptr7[1];
                float_value = *(float *)((longlong)&ui_stack_temp_6d0 + (longlong)pui_stack_color_data38) - ui_float_ptr7[2];
                ui_stack_temp_9d8 = (uint64_t *)CONCAT44(float_value,float_value);
                ui_stack_temp_9d0 = CONCAT44(UI_FLOAT_MAX_VALUE,float_value);
                *(float *)((longlong)&ui_stack_temp_6d8 + (longlong)ui_event_buffer) = float_value;
                *(float *)((longlong)&ui_stack_temp_6d8 + 4 + (longlong)ui_event_buffer) = float_value;
                *(float *)((longlong)&ui_stack_temp_6d0 + (longlong)ui_event_buffer) = float_value;
                *(uint32_t *)((longlong)&ui_stack_temp_6d0 + 4 + (longlong)ui_event_buffer) = UI_FLOAT_MAX_VALUE;
                ui_stack_color_datae8 = ui_task_index3;
              }
              ui_stack_temp_variable_ac8 = ui_stack_color_datae8 + 1;
              ui_character_value = ui_character_value;
              ui_loop_counter = ui_stack_temp_b04;
              pui_stack_variable_uint_a80 = pui_stack_color_data30;
              pui_stack_color_data38 = ui_event_buffer;
            }
            ui_character_value = *(char *)((longlong)pui_stack_parameter_longab0 + UI_MAX_COMPONENT_VALUE + ui_parameter_value);
            pui_stack_color_data30 = (uint64_t *)((longlong)pui_stack_color_data30 + 1);
            ui_stack_color_datae8 = ui_stack_color_datae8 + 1;
            pui_stack_color_data78 = ui_event_buffer + 4;
            pui_stack_parameter_longab0 = pui_stack_parameter_long;
            ui_callback = ui_stack_parameter_longab8;
          } while ((longlong)pui_stack_color_data30 < (longlong)(int)ui_loop_counter);
        }
        ui_task_index3 = ui_loop_counter - 1;
        ui_stack_temp_9e8 = ui_task_index3;
        if (0 < (int)ui_loop_counter) {
          pui_stack_variable_uint_a80 = (uint64_t *)((longlong)pui_stack_parameter_longab0 + -1);
          ui_loop_counter = (ulonglong)ui_stack_temp_variable_ac8;
          ui_stack_temp_variable_ac4 = ui_loop_counter - 2;
          ui_stack_color_data28 = &ui_stack_temp_6e8 + (longlong)pui_stack_parameter_longab0 * 4;
          pui_stack_color_data38 = &ui_stack_temp_6d8 + (longlong)pui_stack_parameter_longab0 * 4;
          pui_stack_color_data30 = ui_stack_array + (longlong)pui_stack_parameter_longab0 * 4;
          pui_stack_color_data78 = ui_stack_array + (longlong)pui_stack_parameter_longab0 * 4;
          ui_result_status = ui_stack_temp_variable_ac8;
          ui_stack_color_datae8 = ui_loop_counter;
          do {
            ui_loop_counter = 0;
            ui_character_value = *(char *)(ui_callback + UI_TEMP_VALUE_OFFSET);
            ui_character_value = -1;
            if (0 < (longlong)pui_stack_parameter_longab0) {
              ui_result_status = ui_temp_buffer;
              ui_character_value = ui_character_value;
              do {
                ui_character_value = *(char *)((longlong)ui_character_value + UI_MAX_COMPONENT_VALUE + ui_parameter_value);
                ui_bool_result = *(int *)((longlong)ui_character_value * UI_GUARD_CHECK_TYPE0 + UI_RESOURCE_LOAD_TYPE0 + *(longlong *)(ui_parameter_value + UI_ANIMATION_DATA_OFFSET))
                         < 0;
                ui_result_status = ui_temp_buffer;
                if (ui_bool_result) {
                  ui_result_status = ui_temp_buffer;
                }
                ui_character_value = ui_character_value;
                ui_result_status = (int)ui_loop_counter;
                if (ui_bool_result) {
                  ui_character_value = ui_character_value;
                  ui_result_status = ui_result_status;
                }
                ui_result_status = ui_result_status;
                ui_loop_counter = (ulonglong)((int)ui_loop_counter + 1);
                ui_loop_counter = ui_loop_counter + 1;
                ui_result_status = ui_temp_buffer;
                ui_character_value = ui_character_value;
                ui_stack_temp_variable_ac8 = ui_result_status;
                ui_character_value = ui_character_value;
              } while ((longlong)ui_loop_counter < (longlong)pui_stack_parameter_longab0);
            }
            ui_stack_temp_variable_938 = *(int *)((longlong)ui_character_value * UI_GUARD_CHECK_TYPE0 + UI_RESOURCE_LOAD_TYPE0 + *(longlong *)(ui_parameter_value + UI_ANIMATION_DATA_OFFSET));
            ui_stack_temp_9e8 = ui_task_index3;
            if (ui_stack_temp_variable_938 != -1) {
              if (ui_task_index3 == ui_stack_color_datac0) {
                *pui_stack_color_data38 = ui_event_id_fifth;
                pui_stack_color_data38[1] = ui_loop_counter;
              }
              if (0 < (int)ui_task_index3) {
                ui_stack_color_data68 = 0;
                ui_stack_color_data60 = 0;
                for (; ui_character_value != ui_character_value; ui_character_value = *(char *)((longlong)ui_character_value + UI_MAX_COMPONENT_VALUE + ui_parameter_value)) {
                  ui_event_index = (longlong)ui_character_value * UI_GUARD_CHECK_TYPE0 + *(longlong *)(ui_parameter_value + UI_ANIMATION_DATA_OFFSET);
                  ui_stack_temp_958 = *(uint64_t **)(ui_event_index + UI_WIDGET_BASE_OFFSET);
                  ui_stack_temp_950 = *(uint64_t *)(ui_event_index + UI_OFFSET_152);
                  ui_stack_temp_948 = *(uint32_t *)(ui_event_index + UI_STACK_SIZE_128);
                  ui_stack_temp_944 = *(uint32_t *)(ui_event_index + UI_WIDGET_ITEM_SIZE);
                  ui_stack_temp_940 = *(uint32_t *)(ui_event_index + UI_OFFSET_136);
                  ui_stack_temp_93c = *(uint32_t *)(ui_event_index + 0x8c);
                  ui_event_buffer = (uint64_t *)ui_allocate_event_memory(&ui_stack_temp_958,ui_stack_array,&ui_stack_color_data68);
                  ui_stack_color_data68 = *ui_event_buffer;
                  ui_stack_color_data60 = ui_event_buffer[1];
                }
                ui_event_buffer = &ui_stack_temp_6e8 + (longlong)(int)ui_task_index3 * 4;
                if ((int)ui_stack_color_datae8 < (int)ui_stack_temp_b04) {
                  ui_callback_ptr = &ui_stack_temp_6e8 + (longlong)(int)ui_stack_color_datae8 * 4;
                }
                else {
                  ui_callback_ptr = &ui_stack_temp_valuef8;
                }
                ui_stack_temp_958 = ui_callback_ptr;
                ui_setup_event_buffer(ui_callback_ptr,&ui_stack_temp_7b8,ui_event_buffer);
                ui_process_event_buffer(ui_event_buffer,ui_stack_array,&ui_stack_temp_6d8 + (longlong)ui_stack_temp_variable_ac8 * 4);
                ui_task_index0 = ui_get_event_index(ui_stack_array,ui_stack_array);
                ui_task_index1 = ui_get_event_index(&ui_stack_color_data68,ui_stack_array);
                ui_system_calculate_widget_transform(ui_task_index1,&ui_stack_float_a98,ui_task_index0);
                if ((longlong)ui_loop_counter < (longlong)pui_stack_variable_uint_a80) {
                  ui_event_index = (longlong)pui_stack_variable_uint_a80 - ui_loop_counter;
                  ui_event_buffer = pui_stack_color_data30;
                  ui_result_status = ui_stack_temp_variable_ac4;
                  do {
                    ui_callback_ptr = (uint64_t *)
                              ui_system_create_event_buffer(ui_event_buffer,ui_stack_array,
                                                  &ui_stack_temp_6e8 + (longlong)ui_result_status * 4);
                    ui_result_status = ui_result_status + -1;
                    ui_task_index0 = ui_callback_ptr[1];
                    *ui_event_buffer = *ui_callback_ptr;
                    ui_event_buffer[1] = ui_task_index0;
                    ui_event_index = ui_event_index + -1;
                    ui_event_buffer = ui_event_buffer + -4;
                    ui_callback_ptr = ui_stack_temp_958;
                  } while (ui_event_index != 0);
                }
                ui_result_status = ui_stack_temp_variable_ac4;
                if (((ui_stack_float_a98 != 0.0) || (ui_stack_float_a94 != 0.0)) || (ui_stack_float_a90 != 0.0)) {
                  float_value = ui_stack_float_a94 * ui_stack_float_a94 + ui_stack_float_a98 * ui_stack_float_a98 +
                           ui_stack_float_a90 * ui_stack_float_a90;
                  ui_temp_buffer = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
                  float_value = ui_temp_buffer._data_offset_;
                  float_value = float_value * 0.5 * (3.0 - float_value * float_value * float_value);
                  ui_stack_float_a98 = ui_stack_float_a98 * float_value;
                  ui_stack_float_a94 = ui_stack_float_a94 * float_value;
                  ui_stack_float_a90 = ui_stack_float_a90 * float_value;
                  asinf();
                  ui_update_event_metrics(ui_stack_array,&ui_stack_float_a98);
                  ui_event_buffer = (uint64_t *)ui_system_process_widget_callback(&ui_stack_temp_7b8,&ui_stack_variable_uint_788,ui_stack_array);
                  ui_stack_temp_7b8 = *ui_event_buffer;
                  ui_stack_temp_7b0 = ui_event_buffer[1];
                }
                pui_stack_temp_b18 = &ui_stack_temp_958;
                ui_stack_float_b10 = 1.1 / (ui_parameter_value + 0.1);
                ui_stack_temp_958 = (uint64_t *)ui_stack_temp_7b8;
                ui_stack_temp_950 = ui_stack_temp_7b0;
                ui_event_buffer = (uint64_t *)ui_handle_complex_event(ui_parameter_value,ui_stack_array,ui_character_value,ui_stack_temp_variable_938);
                ui_stack_temp_7b8 = *ui_event_buffer;
                ui_stack_temp_7b0 = ui_event_buffer[1];
                ui_callback_ptr = (uint64_t *)ui_system_process_widget_callback(ui_callback_ptr,ui_stack_array,&ui_stack_temp_7b8);
                ui_task_index0 = ui_callback_ptr[1];
                *ui_stack_color_data28 = *ui_callback_ptr;
                ui_stack_color_data28[1] = ui_task_index0;
                if ((longlong)ui_loop_counter < (longlong)pui_stack_variable_uint_a80) {
                  ui_event_index = (longlong)pui_stack_variable_uint_a80 - ui_loop_counter;
                  ui_callback_ptr = pui_stack_color_data78;
                  do {
                    ui_event_buffer = (uint64_t *)
                              ui_system_process_widget_callback(ui_event_buffer,ui_stack_array,
                                                  ui_stack_parameter_buffer + (longlong)ui_result_status * 4);
                    ui_result_status = ui_result_status + -1;
                    ui_task_index0 = ui_event_buffer[1];
                    *ui_callback_ptr = *ui_event_buffer;
                    ui_callback_ptr[1] = ui_task_index0;
                    ui_event_index = ui_event_index + -1;
                    ui_callback_ptr = ui_callback_ptr + -4;
                  } while (ui_event_index != 0);
                }
                ui_event_buffer = (uint32_t *)ui_allocate_event_memory(ui_event_buffer,aui_stack_float_898,&ui_stack_color_data68);
                ui_loop_counter = ui_event_buffer[1];
                ui_loop_counter = ui_event_buffer[2];
                ui_loop_counter = ui_event_buffer[3];
                ui_event_index = ui_loop_counter * UI_OFFSET_32;
                *(uint32_t *)(&ui_stack_temp_6d8 + ui_loop_counter * 4) = *ui_event_buffer;
                *(uint32_t *)((longlong)&ui_stack_temp_6d8 + ui_event_index + 4) = ui_loop_counter;
                *(uint32_t *)(ui_stack_array + ui_event_index + -8) = ui_loop_counter;
                *(uint32_t *)(ui_stack_array + ui_event_index + -4) = ui_loop_counter;
                ui_result_status = ui_stack_temp_variable_ac8;
              }
            }
            pui_stack_color_data30 = pui_stack_color_data30 + -4;
            ui_task_index3 = ui_stack_temp_9e8 - 1;
            pui_stack_color_data38 = pui_stack_color_data38 + -4;
            pui_stack_color_data78 = pui_stack_color_data78 + -4;
            ui_stack_color_data28 = ui_stack_color_data28 + -4;
            ui_stack_color_datae8 = ui_stack_color_datae8 - 1;
            ui_stack_temp_variable_ac4 = ui_stack_temp_variable_ac4 + -1;
            pui_stack_variable_uint_a80 = (uint64_t *)((longlong)pui_stack_variable_uint_a80 + -1);
            pui_stack_parameter_longab0 = (longlong *)((longlong)pui_stack_parameter_longab0 + -1);
            ui_callback = ui_stack_parameter_longab8;
            ui_stack_temp_9e8 = ui_task_index3;
          } while (-1 < (int)ui_task_index3);
        }
        ui_stack_temp_valued8 = ui_stack_temp_6d8;
        ui_stack_temp_valued0 = ui_stack_temp_6d0;
        ui_float_ptr7 = (float *)ui_allocate_event_memory(&ui_stack_variable_uint_988,ui_stack_array,&ui_stack_temp_valued8);
        ui_stack_float_abc = (float)((int)ui_stack_float_abc + 1);
        float_value = *ui_float_ptr7;
        float_value = ui_float_ptr7[1];
        ui_stack_temp_valued8 = *(uint64_t *)ui_float_ptr7;
        float_value = ui_float_ptr7[2];
        ui_stack_temp_valued0 = *(uint64_t *)(ui_float_ptr7 + 2);
        float_value = (float_value - (float)ui_stack_color_dataf8) * float_value;
        float_value = (float_value - ui_stack_color_dataf8._data_size_) * float_value;
        float_value = (float_value - (float)ui_stack_parameter_longaf0) * float_value;
        float_value = float_value * float_value + float_value * float_value + float_value * float_value;
        if (float_value <= 1e-05) break;
        ui_long_counter_ptr6 = (longlong *)((longlong)ui_stack_array + -1);
        ui_temporary_buffer = ui_stack_array;
        ui_callback = ui_stack_parameter_longab8;
        ui_loop_counter = ui_stack_temp_b04;
      } while ((int)ui_stack_float_abc < 10);
      *(bool *)(ui_stack_parameter_longab8 + UI_OFFSET_284) = float_value <= 1e-05;
      if (1e-05 < float_value) {
        float_value = ((float)ui_stack_parameter_longaf0 - float_value) * float_value;
        float_value = ((float)ui_stack_color_dataf8 - float_value) * float_value;
        float_value = (ui_stack_color_dataf8._data_size_ - float_value) * float_value;
        float_value = float_value * float_value + float_value * float_value + float_value * float_value;
        ui_temp_buffer = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
        float_value = ui_temp_buffer._data_offset_;
        float_value = float_value * 0.5 * (3.0 - float_value * float_value * float_value);
        float_value = float_value * float_value - 0.0031622776;
        float_value = float_value * float_value * float_value;
        ui_stack_color_data68 = CONCAT44(float_value,float_value);
        ui_stack_color_data60 = CONCAT44(UI_FLOAT_MAX_VALUE,float_value);
        *(float *)(ui_stack_parameter_longab8 + UI_GUARD_CHECK_TYPE0) = float_value;
        *(float *)(ui_stack_parameter_longab8 + UI_GUARD_CHECK_TYPE4) = float_value;
        *(float *)(ui_stack_parameter_longab8 + UI_GUARD_CHECK_TYPE8) = float_value;
        *(uint32_t *)(ui_stack_parameter_longab8 + UI_GUARD_CHECK_TYPEc) = UI_FLOAT_MAX_VALUE;
      }
      else {
        *(uint64_t *)(ui_stack_parameter_longab8 + UI_GUARD_CHECK_TYPE0) = 0;
        *(uint64_t *)(ui_stack_parameter_longab8 + UI_GUARD_CHECK_TYPE8) = 0;
      }
      ui_character_value = -1;
      ui_character_value = *(char *)(ui_stack_parameter_longab8 + UI_TEMP_VALUE_OFFSET);
      charuiui_stack_var_var_b00 = ui_character_value;
      ui_long_counter_ptr6 = (longlong *)(ulonglong)ui_stack_temp_b04;
      if (0 < (int)ui_stack_temp_b04) {
        do {
          pui_stack_parameter_longab0 = ui_long_counter_ptr6;
          ui_event_index = ui_stack_parameter_longae0;
          ui_event_index = (longlong)ui_character_value * UI_GUARD_CHECK_TYPE0;
          ui_stack_array = (uint8_t  [8])(longlong)ui_character_value;
          boolean_flag = *(byte *)(ui_event_index + 0xf1 + *(longlong *)(ui_parameter_value + UI_ANIMATION_DATA_OFFSET));
          charuiui_stack_var_var_b00 = ui_character_value;
          if (UI_CHAR_NULL < (char)boolean_flag) {
            ui_event_index = 0;
            ui_loop_counter = (ulonglong)boolean_flag;
            do {
              ui_character_value = *(char *)(ui_event_index + *(longlong *)
                                          (ui_event_index + 0xf8 + *(longlong *)(ui_parameter_value + UI_ANIMATION_DATA_OFFSET)));
              if (ui_character_value != ui_character_value) {
                ui_float_ptr7 = (float *)ui_system_cleanupuiui_stack_var_var(ui_event_index,ui_character_value,ui_parameter_value);
                ui_event_index = (longlong)ui_character_value;
                float_value = ui_float_ptr7[1];
                float_value = ui_float_ptr7[2];
                float_value = ui_float_ptr7[3];
                aui_stack_float_4e8[ui_event_index * 4] = *ui_float_ptr7;
                aui_stack_float_4e8[ui_event_index * 4 + 1] = float_value;
                *(float *)(&ui_stack_temp_4e0 + ui_event_index * 2) = float_value;
                *(float *)((longlong)&ui_stack_temp_4e0 + ui_event_index * UI_EVENT_FLAG_OFFSET + 4) = float_value;
              }
              ui_event_index = ui_event_index + 1;
              ui_loop_counter = ui_loop_counter - 1;
            } while (ui_loop_counter != 0);
          }
          ui_character_value = *(char *)((longlong)ui_stack_array + UI_MAX_COMPONENT_VALUE + ui_parameter_value);
          ui_character_value = charuiui_stack_var_var_b00;
          ui_long_counter_ptr6 = (longlong *)((longlong)pui_stack_parameter_longab0 - 1U);
        } while ((longlong)pui_stack_parameter_longab0 - 1U != 0);
        pui_stack_parameter_longab0 = (longlong *)UI_ZERO_OFFSET;
        charuiui_stack_var_var_b00 = ui_character_value;
      }
      ui_event_index = ui_stack_parameter_longab8;
      ui_stack_temp_9c8 = ui_stack_variable_uint_988;
      ui_stack_temp_9c0 = ui_stack_variable_uint_980;
      ui_stack_temp_9b8 = ui_stack_temp_978;
      ui_stack_temp_9b0 = ui_stack_temp_970;
      ui_loop_counter = (uint32_t)ui_stack_temp_978;
      ui_loop_counter = ui_stack_temp_978._data_size_;
      ui_loop_counter = (uint32_t)ui_stack_temp_970;
      ui_loop_counter = ui_stack_temp_970._data_size_;
      if (booluiui_stack_var_var_b08 != UI_COMPONENT_MAX_VALUE) {
        ui_event_buffer = (uint64_t *)ui_process_event_queue_item(&ui_stack_temp_9c8,&ui_stack_temp_7b8,&ui_stack_temp_valuef8);
        ui_stack_temp_9c8 = *ui_event_buffer;
        ui_stack_temp_9c0 = ui_event_buffer[1];
        ui_loop_counter = *(uint32_t *)(ui_event_buffer + 2);
        ui_loop_counter = *(uint32_t *)((longlong)ui_event_buffer + UI_SHIFT_AMOUNT_20);
        ui_stack_temp_9b8 = ui_event_buffer[2];
        ui_loop_counter = *(uint32_t *)(ui_event_buffer + 3);
        ui_loop_counter = *(uint32_t *)((longlong)ui_event_buffer + UI_OFFSET_28);
        ui_stack_temp_9b0 = ui_event_buffer[3];
      }
      ui_loop_counter = (ulonglong)(int)ui_stack_color_datac0;
      if (-1 < (int)ui_stack_color_datac0) {
        ui_long_counter_ptr6 = ui_stack_parameter_buffer + ui_loop_counter * 4;
        ui_float_ptr7 = (float *)((ui_loop_counter + ELEVEN_VALUE) * UI_EVENT_FLAG_OFFSET + ui_event_index);
        do {
          ui_character_value = *(char *)(ui_event_index + UI_TEMP_VALUE_OFFSET);
          ui_result_status = (int)ui_loop_counter;
          if (0 < ui_result_status) {
            ui_loop_counter = ui_temp_buffer ui_loop_counter & UI_BIT_MASK_32BIT_FULL UI_BIT_MASK_32BIT_FULL;
            do {
              ui_character_value = ui_character_value;
              ui_character_value = *(char *)((longlong)ui_character_value + UI_MAX_COMPONENT_VALUE + ui_parameter_value);
              ui_loop_counter = ui_loop_counter - 1;
            } while (ui_loop_counter != 0);
          }
          ui_stack_temp_7a8 = CONCAT44(ui_loop_counter,ui_loop_counter);
          ui_stack_temp_7a0 = CONCAT44(ui_loop_counter,ui_loop_counter);
          ui_stack_array = (uint8_t  [8])((longlong)ui_result_status * UI_OFFSET_32);
          pui_stack_parameter_longab0 = ui_long_counter_ptr6;
          ui_stack_temp_7b8 = ui_stack_temp_9c8;
          ui_stack_temp_7b0 = ui_stack_temp_9c0;
          ui_event_buffer = (uint64_t *)
                    ui_process_event_queue_item(&ui_stack_variable_uint_988,&ui_stack_variable_uint_788,&ui_stack_temp_6e8 + (longlong)ui_result_status * 4);
          ui_stack_temp_9c8 = *ui_event_buffer;
          ui_stack_temp_9c0 = ui_event_buffer[1];
          ui_stack_temp_9b8 = ui_event_buffer[2];
          ui_stack_temp_9b0 = ui_event_buffer[3];
          ui_long_pointer_var = (longlong *)ui_setup_event_buffer(&ui_stack_temp_7b8,&ui_stack_variable_uint_788,&ui_stack_temp_9c8);
          ui_event_index = ui_long_pointer_var[1];
          *ui_long_counter_ptr6 = *ui_long_pointer_var;
          ui_long_counter_ptr6[1] = ui_event_index;
          ui_loop_counter = *(uint32_t *)((longlong)ui_long_pointer_var + UI_SHIFT_AMOUNT_20);
          ui_event_index = ui_long_pointer_var[3];
          ui_loop_counter = *(uint32_t *)((longlong)ui_long_pointer_var + UI_OFFSET_28);
          *(int *)(ui_long_counter_ptr6 + 2) = (int)ui_long_pointer_var[2];
          *(uint32_t *)((longlong)ui_long_counter_ptr6 + UI_SHIFT_AMOUNT_20) = ui_loop_counter;
          *(int *)(ui_long_counter_ptr6 + 3) = (int)ui_event_index;
          *(uint32_t *)((longlong)ui_long_counter_ptr6 + UI_OFFSET_28) = ui_loop_counter;
          if (ui_character_value == *(char *)(ui_event_index + UI_TEMP_VALUE_OFFSET)) {
            ui_result_status = *(int *)(ui_event_index + UI_OFFSET_160);
            if (ui_result_status == 5) {
UI_LABEL_GENERIC_664ddf:
              ui_stack_temp_9c8 = ui_stack_temp_9a8;
              ui_stack_temp_9c0 = ui_stack_temp_9a0;
            }
            else if (ui_result_status == 6) {
              ui_stack_temp_9c8 = *(uint64_t *)(ui_event_index + UI_OFFSET_32);
              ui_stack_temp_9c0 = *(uint64_t *)(ui_event_index + UI_CALLBACK_HANDLER_OFFSET);
            }
            else {
              if (ui_result_status != 3) goto UI_LABEL_GENERIC_664ddf;
              ui_stack_temp_9c8 = *(uint64_t *)(ui_event_index + UI_OFFSET_32);
              ui_stack_temp_9c0 = *(uint64_t *)(ui_event_index + UI_CALLBACK_HANDLER_OFFSET);
              if (0.0 < *(float *)(ui_event_index + UI_MEMORY_ALLOC_SIZE)) {
                pui_widget_y_coord = (float *)ui_allocate_event_memory(&ui_stack_temp_9c8,ui_stack_array,&ui_stack_temp_9f8);
                float_value = *pui_widget_y_coord;
                float_value = *(float *)(ui_stack_parameter_long + UI_MEMORY_ALLOC_SIZE);
                float_value = *(float *)(ui_stack_parameter_long + UI_EVENT_ID_OFFSET);
                float_value = *(float *)(ui_stack_parameter_long + UI_MEMORY_DEALLOC_OFFSET);
                float_value = pui_widget_y_coord[1];
                float_value = pui_widget_y_coord[2];
                ui_event_id_fifth = ui_system_get_widget_event_id(&ui_stack_variable_uint_a08,aui_stack_float_898);
                ui_initialize_event_structure(&ui_stack_temp_9c8,ui_stack_array,ui_event_id_fifth);
                ui_stack_color_data68 = CONCAT44(*(float *)(ui_event_index + UI_SHIFT_AMOUNT_20) -
                                      ((float_value - float_value) * ui_stack_float_934 + float_value),
                                      *(float *)(ui_event_index + UI_EVENT_FLAG_OFFSET) -
                                      ((float_value - float_value) * ui_stack_float_934 + float_value));
                ui_stack_color_data60 = CONCAT44(UI_FLOAT_MAX_VALUE,
                                      *(float *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS) -
                                      ((float_value - float_value) * ui_stack_float_934 + float_value));
                ui_get_event_index(&ui_stack_color_data68,ui_stack_array);
                ui_system_calculate_widget_transform(ui_stack_array,&ui_stack_float_a98,ui_stack_array);
                if (((ui_stack_float_a98 != 0.0) || (ui_stack_float_a94 != 0.0)) || (ui_stack_float_a90 != 0.0)) {
                  float_value = ui_stack_float_a94 * ui_stack_float_a94 + ui_stack_float_a98 * ui_stack_float_a98 +
                           ui_stack_float_a90 * ui_stack_float_a90;
                  ui_temp_buffer = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
                  float_value = ui_temp_buffer._data_offset_;
                  float_value = float_value * 0.5 * (3.0 - float_value * float_value * float_value);
                  ui_stack_float_a98 = ui_stack_float_a98 * float_value;
                  ui_stack_float_a94 = ui_stack_float_a94 * float_value;
                  ui_stack_float_a90 = ui_stack_float_a90 * float_value;
                  asinf();
                  ui_update_event_metrics(ui_stack_array,&ui_stack_float_a98);
                  ui_event_buffer = (uint64_t *)ui_system_process_widget_callback(ui_stack_array,ui_stack_array,&ui_stack_temp_9c8);
                  ui_stack_temp_9c8 = *ui_event_buffer;
                  ui_stack_temp_9c0 = ui_event_buffer[1];
                }
              }
            }
            ui_long_pointer_var = (longlong *)ui_setup_event_buffer(&ui_stack_temp_7b8,&ui_stack_variable_uint_788,&ui_stack_temp_9c8);
            ui_event_index = ui_long_pointer_var[1];
            *ui_long_counter_ptr6 = *ui_long_pointer_var;
            ui_long_counter_ptr6[1] = ui_event_index;
            ui_loop_counter = *(uint32_t *)((longlong)ui_long_pointer_var + UI_SHIFT_AMOUNT_20);
            ui_event_index = ui_long_pointer_var[3];
            ui_loop_counter = *(uint32_t *)((longlong)ui_long_pointer_var + UI_OFFSET_28);
            *(int *)(ui_long_counter_ptr6 + 2) = (int)ui_long_pointer_var[2];
            *(uint32_t *)((longlong)ui_long_counter_ptr6 + UI_SHIFT_AMOUNT_20) = ui_loop_counter;
            *(int *)(ui_long_counter_ptr6 + 3) = (int)ui_event_index;
            *(uint32_t *)((longlong)ui_long_counter_ptr6 + UI_OFFSET_28) = ui_loop_counter;
          }
          pui_stack_parameter_long = (longlong *)*ui_long_counter_ptr6;
          ui_stack_parameter_long = ui_long_counter_ptr6[1];
          ui_system_process_event_data(&pui_stack_parameter_long);
          ui_event_index = (longlong)ui_character_value;
          ui_system_create_event_buffer(ui_stack_parameter_longae0 + 0x820 + ui_event_index * UI_EVENT_FLAG_OFFSET,&ui_stack_float_a48,&pui_stack_parameter_long);
          if ((*(float *)(ui_stack_parameter_longab8 + UI_SYSTEM_CALLBACK_TYPEc) <= 30.0 && *(float *)(ui_stack_parameter_longab8 + UI_SYSTEM_CALLBACK_TYPEc) != 30.0) &&
             (ui_character_value != *(char *)(ui_stack_parameter_longab8 + UI_TEMP_VALUE_OFFSET))) {
            ui_system_create_event_buffer(((longlong)(int)ui_stack_color_datac0 + ELEVEN_VALUE) * UI_EVENT_FLAG_OFFSET + ui_stack_parameter_longab8,ui_stack_array,
                                &ui_stack_float_a48);
            ui_update_event_statistics(ui_stack_array,&ui_stack_float_abc,ui_stack_array);
            if (3.1415927 < ui_stack_float_abc) {
              ui_stack_float_abc = 6.2831855 - ui_stack_float_abc;
            }
            float_value = ui_parameter_value * *(float *)(ui_stack_parameter_longab8 + UI_SYSTEM_CALLBACK_TYPEc);
            if (float_value < ui_stack_float_abc) {
              float_value = float_value / ui_stack_float_abc;
              if (0.001 <= float_value) {
                if (float_value <= 0.999) {
                  float_value = *ui_float_ptr7;
                  float_value = ui_float_ptr7[1];
                  float_value = ui_float_ptr7[2];
                  float_value = ui_float_ptr7[3];
                  float_value = float_value * ui_stack_float_a40;
                  float_value = float_value * ui_stack_float_a3c;
                  ui_stack_temp_778 = UI_FLOAT_NEGATIVE_ONE;
                  ui_stack_temp_774 = UI_FLOAT_NEGATIVE_ONE;
                  ui_stack_temp_770 = UI_FLOAT_NEGATIVE_ONE;
                  ui_stack_temp_76c = UI_FLOAT_NEGATIVE_ONE;
                  ui_temp_buffer._data_offset_ = float_value + float_value * ui_stack_float_a48;
                  ui_temp_buffer._data_size_ = float_value + float_value * ui_stack_float_a44;
                  ui_temp_buffer._data_format_ = float_value + float_value;
                  ui_temp_buffer._data_flags_ = float_value + float_value;
                  ui_temp_buffer._4_12_ = ui_temp_buffer._4_12_;
                  ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + ui_temp_buffer._data_size_;
                  ui_stack_variable_uint_788 = UI_BIT_SHIFT_638000003f800000;
                  ui_stack_variable_uint_780 = UI_BIT_SHIFT_638000003f800000;
                  ui_task_index3 = movmskps((int)ui_stack_parameter_longab8,ui_temp_buffer);
                  ui_loop_counter = (ulonglong)(ui_task_index3 & 1);
                  float_value = *(float *)(&ui_stack_variable_uint_788 + ui_temp_buffer * 2) * ui_stack_float_a48;
                  float_value = *(float *)((longlong)&ui_stack_variable_uint_788 + ui_loop_counter * UI_EVENT_FLAG_OFFSET + 4) * ui_stack_float_a44;
                  float_value = *(float *)(&ui_stack_variable_uint_780 + ui_temp_buffer * 2) * ui_stack_float_a40;
                  float_value = *(float *)((longlong)&ui_stack_variable_uint_780 + ui_loop_counter * UI_EVENT_FLAG_OFFSET + 4) * ui_stack_float_a3c;
                  if (0.9995 < ABS(ui_temp_buffer._data_offset_)) {
                    float_value = 1.0 - float_value;
                    ui_stack_temp_958 = (uint64_t *)
                                 CONCAT44(float_value * float_value + float_value * float_value,
                                          float_value * float_value + float_value * float_value);
                    ui_stack_temp_950 = CONCAT44(float_value * float_value + float_value * float_value,
                                          float_value * float_value + float_value * float_value);
                    ui_system_process_event_data(&ui_stack_temp_958);
                    ui_stack_float_a48 = (float)ui_stack_temp_958;
                    ui_stack_float_a44 = ui_stack_temp_958._data_size_;
                    ui_stack_float_a40 = (float)ui_stack_temp_950;
                    ui_stack_float_a3c = ui_stack_temp_950._data_size_;
                  }
                  else {
                    acosf();
                    float_value = (float)sinf();
                    float_value = float_value * (1.0 / float_value);
                    float_value = (float)sinf();
                    float_value = float_value * (1.0 / float_value);
                    ui_stack_float_a48 = float_value * float_value + float_value * float_value;
                    ui_stack_float_a44 = float_value * float_value + float_value * float_value;
                    ui_stack_float_a40 = float_value * float_value + float_value * float_value;
                    ui_stack_float_a3c = float_value * float_value + float_value * float_value;
                  }
                }
              }
              else {
                ui_stack_float_a48 = *ui_float_ptr7;
                ui_stack_float_a44 = ui_float_ptr7[1];
                ui_stack_float_a40 = ui_float_ptr7[2];
                ui_stack_float_a3c = ui_float_ptr7[3];
              }
              ui_long_pointer_var = (longlong *)
                        ui_system_process_widget_callback((ui_event_index + 0x82) * UI_EVENT_FLAG_OFFSET + ui_stack_parameter_longae0,ui_stack_array,
                                            &ui_stack_float_a48);
              pui_stack_parameter_long = (longlong *)*ui_long_pointer_var;
              ui_stack_parameter_long = ui_long_pointer_var[1];
              *ui_long_counter_ptr6 = (longlong)pui_stack_parameter_long;
              ui_long_counter_ptr6[1] = ui_stack_parameter_long;
              ui_event_buffer = (uint64_t *)
                        ui_process_event_queue_item(&ui_stack_temp_7b8,&ui_stack_variable_uint_788,
                                      (longlong)ui_stack_parameter_buffer + (longlong)ui_stack_array);
              ui_stack_temp_9c8 = *ui_event_buffer;
              ui_stack_temp_9c0 = ui_event_buffer[1];
              ui_stack_temp_9b8 = ui_event_buffer[2];
              ui_stack_temp_9b0 = ui_event_buffer[3];
            }
          }
          *(ulonglong *)ui_float_ptr7 = CONCAT44(ui_stack_float_a44,ui_stack_float_a48);
          *(ulonglong *)(ui_float_ptr7 + 2) = CONCAT44(ui_stack_float_a3c,ui_stack_float_a40);
          ui_loop_counter = ui_system_create_event_buffer(&ui_stack_variable_uint_988,&ui_stack_color_data28,&ui_stack_temp_9c8);
          float_value = ui_stack_float_a88;
          ui_event_index = ui_stack_parameter_longae0;
          ui_float_ptr7[UI_OFFSET_32] = (float)ui_stack_color_data28;
          ui_float_ptr7[UI_SYSTEM_STATE_OFFSET] = ui_stack_color_data28._data_size_;
          ui_float_ptr7[UI_WIDGET_STATE_OFFSET] = ui_stack_float_a20;
          ui_float_ptr7[0x23] = ui_stack_float_a1c;
          if (1.0 <= ui_stack_float_a88) {
            ui_process_ui_event(ui_stack_parameter_longae0,ui_character_value,&ui_stack_color_data28,ui_parameter_value);
            if (ui_character_value == UI_CHAR_NULL) {
              ui_event_id_fifth = *(uint64_t *)(ui_event_index + 0x1028);
              float_value = (float)*(uint64_t *)(ui_event_index + 0x1020) + (float)ui_stack_array._data_offset_;
              ui_stack_array._data_size_ = (uint32_t)((ulonglong)*(uint64_t *)(ui_event_index + 0x1020) >> UI_OFFSET_32);
              ui_stack_color_datad0._data_offset_ = (float)ui_event_id_fifth;
              ui_stack_color_datad0._data_size_ = (float)((ulonglong)ui_event_id_fifth >> UI_OFFSET_32);
              ui_temp_buffer._4_8_ = ui_event_id_fifth;
              ui_temp_buffer._data_offset_ = ui_stack_array._data_size_;
              ui_temp_buffer._0_8_ = ui_temp_buffer._0_8_ << UI_OFFSET_32;
              ui_temp_buffer._data_format_ = (float)ui_stack_color_datad0;
              ui_temp_buffer._data_flags_ = ui_stack_color_datad0._data_size_;
              ui_temp_buffer._4_8_ = ui_temp_buffer._8_8_;
              ui_temp_buffer._data_offset_ = float_value;
              ui_temp_buffer._0_8_ = ui_temp_buffer._0_8_ << UI_OFFSET_32;
              ui_temp_buffer._data_format_ = (float)ui_stack_color_datad0;
              ui_temp_buffer._data_flags_ = ui_stack_color_datad0._data_size_;
              ui_temp_buffer._4_8_ = ui_temp_buffer._8_8_;
              ui_temp_buffer._data_offset_ = float_value;
              ui_temp_buffer._0_8_ = ui_temp_buffer._0_8_ << UI_OFFSET_32;
              ui_temp_buffer._data_format_ = (float)ui_stack_array._data_size_ + (float)ui_stack_array._data_size_;
              ui_temp_buffer._data_flags_ = ui_stack_color_datad0._data_size_;
              ui_temp_buffer._4_12_ = ui_temp_buffer._4_12_;
              ui_temp_buffer._data_offset_ = (float)ui_stack_color_datad0 + ui_stack_float_a10;
              goto UI_LABEL_GENERIC_6654b3;
            }
          }
          else {
            if (0.001 <= ui_stack_float_a88) {
              if (ui_stack_float_a88 <= 0.999) {
                float_value = aui_stack_float_4e8[ui_event_index * 4];
                float_value = aui_stack_float_4e8[ui_event_index * 4 + 1];
                float_value = *(float *)(&ui_stack_temp_4e0 + ui_event_index * 2);
                float_value = *(float *)((longlong)&ui_stack_temp_4e0 + ui_event_index * UI_EVENT_FLAG_OFFSET + 4);
                float_value = float_value * ui_stack_float_a20;
                float_value = float_value * ui_stack_float_a1c;
                ui_stack_temp_778 = UI_FLOAT_NEGATIVE_ONE;
                ui_stack_temp_774 = UI_FLOAT_NEGATIVE_ONE;
                ui_stack_temp_770 = UI_FLOAT_NEGATIVE_ONE;
                ui_stack_temp_76c = UI_FLOAT_NEGATIVE_ONE;
                ui_temp_buffer._data_offset_ = float_value + float_value * (float)ui_stack_color_data28;
                ui_temp_buffer._data_size_ = float_value + float_value * ui_stack_color_data28._data_size_;
                ui_temp_buffer._data_format_ = float_value + float_value;
                ui_temp_buffer._data_flags_ = float_value + float_value;
                ui_temp_buffer._4_12_ = ui_temp_buffer._4_12_;
                ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + ui_temp_buffer._data_size_;
                ui_stack_variable_uint_788 = UI_BIT_SHIFT_638000003f800000;
                ui_stack_variable_uint_780 = UI_BIT_SHIFT_638000003f800000;
                ui_task_index3 = movmskps(ui_loop_counter,ui_temp_buffer);
                ui_loop_counter = (ulonglong)(ui_task_index3 & 1);
                float_value = *(float *)(&ui_stack_variable_uint_788 + ui_temp_buffer * 2) * (float)ui_stack_color_data28;
                float_value = *(float *)((longlong)&ui_stack_variable_uint_788 + ui_loop_counter * UI_EVENT_FLAG_OFFSET + 4) * ui_stack_color_data28._data_size_;
                float_value = *(float *)(&ui_stack_variable_uint_780 + ui_temp_buffer * 2) * ui_stack_float_a20;
                float_value = *(float *)((longlong)&ui_stack_variable_uint_780 + ui_loop_counter * UI_EVENT_FLAG_OFFSET + 4) * ui_stack_float_a1c;
                if (0.9995 < ABS(ui_temp_buffer._data_offset_)) {
                  float_value = 1.0 - ui_stack_float_a88;
                  ui_stack_array._data_size_ = float_value * float_value + ui_stack_float_a88 * float_value;
                  ui_stack_array._data_offset_ = float_value * float_value + ui_stack_float_a88 * float_value;
                  ui_stack_color_datad0._data_offset_ = float_value * float_value + ui_stack_float_a88 * float_value;
                  ui_stack_color_datad0._data_size_ = float_value * float_value + ui_stack_float_a88 * float_value;
                  ui_system_process_event_data(ui_stack_array);
                  float_value = (float)ui_stack_array._data_offset_;
                  float_value = (float)ui_stack_array._data_size_;
                  float_value = (float)ui_stack_color_datad0;
                  float_value = ui_stack_color_datad0._data_size_;
                }
                else {
                  acosf();
                  float_value = (float)sinf();
                  float_value = float_value * (1.0 / float_value);
                  float_value = (float)sinf();
                  float_value = float_value * (1.0 / float_value);
                  float_value = ui_stack_float_a88;
                  float_value = float_value * float_value + float_value * float_value;
                }
                ui_stack_temp_9d8 = (uint64_t *)CONCAT44(float_value,float_value);
                ui_stack_temp_9d0 = CONCAT44(float_value,float_value);
              }
              else {
                ui_stack_temp_9d8 = ui_stack_color_data28;
                ui_stack_temp_9d0 = CONCAT44(ui_stack_float_a1c,ui_stack_float_a20);
              }
            }
            else {
              ui_stack_temp_9d8 = *(uint64_t **)(aui_stack_float_4e8 + ui_event_index * 4);
              ui_stack_temp_9d0 = (&ui_stack_temp_4e0)[ui_event_index * 2];
            }
            ui_system_process_event_data(&ui_stack_temp_9d8);
            ui_event_index = ui_stack_parameter_longae0;
            ui_process_ui_event(ui_stack_parameter_longae0,ui_character_value,&ui_stack_temp_9d8,ui_parameter_value);
            if (ui_character_value == UI_CHAR_NULL) {
              float_value = *(float *)(ui_event_index + 0x1028);
              ui_loop_counter = *(uint32_t *)(ui_event_index + 0x102c);
              ui_temp_buffer._4_8_ = ui_stack_color_datad0;
              ui_temp_buffer._data_offset_ = *(float *)(ui_event_index + 0x1024);
              ui_stack_array = (uint8_t  [8])(ui_temp_buffer._0_8_ << UI_OFFSET_32);
              ui_stack_color_datad0._data_offset_ = float_value;
              ui_stack_color_datad0._data_size_ = (float)ui_loop_counter;
              float_value = (float)ui_stack_array._data_offset_ * float_value + *(float *)(ui_event_index + 0x1020);
              aui_task_index._4_8_ = ui_stack_array._8_8_;
              aui_task_index._data_offset_ = float_value;
              ui_temp_buffer._0_8_ = aui_task_index._0_8_ << UI_OFFSET_32;
              ui_temp_buffer._data_format_ = float_value;
              ui_temp_buffer._data_flags_ = ui_loop_counter;
              ui_temp_buffer._4_8_ = ui_temp_buffer._8_8_;
              ui_temp_buffer._data_offset_ = float_value;
              ui_temp_buffer._0_8_ = ui_temp_buffer._0_8_ << UI_OFFSET_32;
              ui_temp_buffer._data_format_ = *(float *)(ui_event_index + 0x1024) + (float)ui_stack_array._data_size_ * float_value;
              ui_temp_buffer._data_flags_ = ui_loop_counter;
              ui_temp_buffer._4_12_ = ui_temp_buffer._4_12_;
              ui_temp_buffer._data_offset_ = float_value + float_value * ui_stack_float_a10;
UI_LABEL_GENERIC_6654b3:
              *(ulonglong *)(ui_event_index + UI_STACK_SIZE_1280) =
                   *(ulonglong *)(ui_event_index + UI_STACK_SIZE_1280) | *(ulonglong *)(ui_event_index + 0x810);
              ui_stack_color_datad0._data_size_ = ui_temp_buffer._data_flags_;
              ui_stack_array = ui_temp_buffer._4_8_;
              ui_stack_color_datad0._data_offset_ = (float)ui_temp_buffer._data_offset_;
              *(uint8_t (*) [16])(ui_event_index + 0x1020) = _aui_stack_color_datad8;
            }
          }
          ui_event_index = ui_stack_parameter_longae0;
          boolean_flag = *(byte *)(ui_event_index * UI_GUARD_CHECK_TYPE0 + 0xf1 + *(longlong *)(ui_parameter_value + UI_ANIMATION_DATA_OFFSET));
          if ('\x01' < (char)boolean_flag) {
            ui_event_index = 0;
            ui_loop_counter = (ulonglong)boolean_flag;
            do {
              ui_character_value = *(char *)(ui_event_index + *(longlong *)
                                          (ui_event_index * UI_GUARD_CHECK_TYPE0 + 0xf8 + *(longlong *)(ui_parameter_value + UI_ANIMATION_DATA_OFFSET)));
              if (ui_character_value != ui_character_value) {
                ui_process_ui_event(ui_event_index,ui_character_value,aui_stack_float_4e8 + (longlong)ui_character_value * 4,ui_parameter_value);
              }
              ui_event_index = ui_event_index + 1;
              ui_loop_counter = ui_loop_counter - 1;
              ui_long_counter_ptr6 = pui_stack_parameter_longab0;
            } while (ui_loop_counter != 0);
          }
          ui_long_counter_ptr6 = ui_long_counter_ptr6 + -4;
          ui_stack_color_datac0 = ui_stack_color_datac0 - 1;
          ui_loop_counter = (ulonglong)ui_stack_color_datac0;
          ui_float_ptr7 = ui_float_ptr7 + -4;
          pui_stack_parameter_longab0 = ui_long_counter_ptr6;
          if ((int)ui_stack_color_datac0 < 0) break;
          ui_event_index = ui_stack_parameter_longab8;
          ui_loop_counter = (uint32_t)ui_stack_temp_9b8;
          ui_loop_counter = ui_stack_temp_9b8._data_size_;
          ui_loop_counter = (uint32_t)ui_stack_temp_9b0;
          ui_loop_counter = ui_stack_temp_9b0._data_size_;
        } while( true );
      }
    }
  }
UI_LABEL_GENERIC_66375a:
  RenderUIComponent(ui_stack_temp_e8 ^ (ulonglong)ui_stack_array);
}

void ui_system_render_widget_overlay(longlong ui_callback,longlong ui_event_type,uint64_t ui_event_data,longlong ui_event_flags,
                  longlong ui_parameter_value,longlong ui_parameter_value,uint ui_parameter_value,float ui_parameter_value,float ui_parameter_value,
                  char ui_callback_primary)

{
  uint8_t aui_event_id [12];
  uint8_t aui_task_index [12];
  uint8_t ui_temp_buffer [12];
  char ui_character_value;
  uint ui_loop_counter;
  uint32_t ui_loop_counter;
  uint64_t *ui_event_buffer;
  float *pui_widget_y_coord;
  uint8_t *ui_event_buffer;
  uint64_t *ui_event_buffer;
  uint64_t ui_event_id_fourth;
  float *pui_transition_alpha_value;
  uint32_t *ui_event_buffer;
  uint8_t (*paui_event_id7) [16];
  uint64_t *ui_event_buffer;
  uint ui_task_index0;
  longlong ui_event_index;
  uint8_t *ui_task_index_pointer2;
  char ui_character_value;
  longlong ui_event_index;
  ulonglong ui_task_index5;
  int ui_result_status;
  ulonglong ui_task_index7;
  longlong ui_event_index;
  byte ui_bool_result;
  longlong ui_event_index;
  int ui_result_status;
  float ui_temp_float;
  uint64_t ui_loop_counter;
  uint8_t ui_temp_buffer [16];
  uint32_t ui_loop_counter;
  float ui_temp_float;
  uint8_t ui_temp_buffer [16];
  float ui_temp_float;
  uint8_t ui_temp_buffer [4];
  float ui_temp_float;
  uint8_t ui_stack_array [32];
  uint64_t *pui_stack_color_data58;
  float ui_stack_float_a50;
  byte booluiui_stack_var_var_a48;
  char charuiui_stack_var_var_a47;
  uint ui_stack_color_data44;
  uint64_t ui_stack_color_data38;
  uint64_t ui_stack_color_data30;
  uint64_t ui_stack_color_data28;
  uint64_t ui_stack_color_data20;
  float ui_stack_float_a18;
  float ui_stack_float_a14;
  longlong ui_stack_parameter_longa10;
  uint64_t *pui_stack_variable_uint_a08;
  uint8_t ui_stack_array [16];
  uint64_t *pui_stack_temp_9e8;
  uint64_t ui_stack_temp_9d8;
  uint64_t ui_stack_temp_9d0;
  float *pui_stack_float_9c8;
  uint8_t ui_stack_array [8];
  float ui_stack_float_9b8;
  uint32_t ui_stack_temp_9b4;
  uint64_t ui_stack_temp_9a8;
  uint64_t ui_stack_temp_9a0;
  uint64_t ui_stack_temp_998;
  uint64_t ui_stack_temp_990;
  uint64_t ui_stack_variable_uint_988;
  uint64_t ui_stack_variable_uint_980;
  uint64_t ui_stack_temp_978;
  uint64_t ui_stack_temp_970;
  float ui_stack_float_968;
  uint64_t ui_stack_temp_958;
  float ui_stack_float_950;
  float ui_stack_float_94c;
  uint64_t ui_stack_temp_948;
  uint64_t ui_stack_temp_940;
  uint64_t ui_stack_temp_938;
  uint64_t ui_stack_temp_930;
  uint8_t ui_stack_array [16];
  float ui_stack_float_918;
  float ui_stack_float_914;
  float ui_stack_float_910;
  float ui_stack_float_90c;
  uint64_t ui_stack_ulong_event_id_primary8;
  uint64_t ui_stack_ulong_event_id_primary0;
  uint64_t ui_stack_temp_valuef8;
  uint64_t ui_stack_temp_valuef0;
  longlong ui_stack_parameter_longe8;
  uint64_t ui_stack_temp_valuee0;
  uint64_t ui_stack_temp_valued8;
  float ui_stack_float_8d0;
  float ui_stack_float_8cc;
  float ui_stack_float_8c8;
  uint32_t ui_stack_temp_valuec4;
  uint64_t ui_stack_temp_valueb8;
  uint64_t ui_stack_temp_valueb0;
  uint64_t ui_stack_temp_valuea8;
  uint64_t ui_stack_temp_valuea0;
  float aui_stack_float_898 [4];
  uint8_t ui_stack_array [16];
  uint64_t ui_stack_temp_value28;
  uint64_t ui_stack_temp_value20;
  uint32_t ui_stack_temp_value18;
  uint32_t ui_stack_temp_value14;
  uint32_t ui_stack_temp_value10;
  uint32_t ui_stack_extended_size_128c;
  uint8_t ui_stack_array [16];
  uint8_t ui_stack_array [32];
  uint8_t ui_stack_array [4];
  float ui_stack_float_7b4;
  uint64_t ui_stack_temp_7b0;
  uint32_t ui_stack_temp_7a8;
  uint32_t ui_stack_temp_7a4;
  uint32_t ui_stack_temp_7a0;
  uint32_t ui_stack_temp_79c;
  uint64_t ui_stack_temp_798;
  uint64_t ui_stack_temp_790;
  uint64_t ui_stack_variable_uint_788;
  uint64_t ui_stack_variable_uint_780;
  uint64_t ui_stack_array [2];
  uint8_t ui_stack_array [8];
  float ui_stack_float_750;
  uint32_t ui_stack_temp_74c;
  uint32_t ui_stack_temp_748;
  uint32_t ui_stack_temp_744;
  uint32_t ui_stack_temp_740;
  uint32_t ui_stack_temp_73c;
  uint64_t ui_stack_temp_738;
  uint64_t ui_stack_temp_730;
  uint64_t ui_stack_temp_6e8;
  uint64_t ui_stack_temp_6e0;
  uint64_t ui_stack_temp_6d8;
  uint64_t ui_stack_temp_6d0;
  uint64_t ui_stack_temp_5e8;
  uint64_t ui_stack_temp_5e0;
  uint64_t ui_stack_temp_5d8;
  uint64_t ui_stack_temp_5d0;
  float aui_stack_float_4e8 [2];
  uint64_t ui_stack_temp_4e0;
  ulonglong ui_stack_temp_e8;
  
  ui_stack_temp_e8 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_result_status = 0;
  *(uint8_t *)(ui_callback + UI_OFFSET_300) = 0;
  ui_stack_float_a18 = ui_parameter_value;
  ui_stack_parameter_longe8 = ui_parameter_value;
  pui_stack_variable_uint_a08 = (uint64_t *)UI_ZERO_OFFSET;
  ui_stack_color_data44 = 0;
  ui_stack_parameter_longa10 = ui_callback;
  ui_stack_temp_958 = ui_event_type;
  float_value = (float)ui_system_get_widget_opacity(ui_parameter_value);
  ui_stack_float_968 = float_value;
  ui_event_buffer = (uint64_t *)ui_create_event_data_buffer(ui_parameter_value,&ui_stack_temp_798);
  ui_stack_temp_738 = *(uint64_t *)(ui_parameter_value + UI_MEMORY_ALLOC_SIZE);
  ui_stack_temp_730 = *(uint64_t *)(ui_parameter_value + UI_MEMORY_DEALLOC_OFFSET);
  ui_stack_array[0] = *ui_event_buffer;
  ui_stack_array[1] = ui_event_buffer[1];
  _aui_stack_temp_758 = *(uint8_t (*) [16])(ui_event_buffer + 2);
  ui_stack_temp_748 = *(uint32_t *)(ui_event_buffer + 4);
  ui_stack_temp_744 = *(uint32_t *)((longlong)ui_event_buffer + UI_EVENT_COUNTER_OFFSET);
  ui_stack_temp_740 = *(uint32_t *)(ui_event_buffer + 5);
  ui_stack_temp_73c = *(uint32_t *)((longlong)ui_event_buffer + UI_OPERATION_RESULT_OFFSET);
  ui_copy_event_data(&ui_stack_float_918,ui_stack_array);
  ui_stack_ulong_event_id_primary8 = CONCAT44(ui_stack_float_914,ui_stack_float_918);
  ui_stack_ulong_event_id_primary0 = CONCAT44(ui_stack_float_90c,ui_stack_float_910);
  ui_stack_temp_valuef8 = ui_stack_temp_738;
  ui_stack_temp_valuef0 = ui_stack_temp_730;
  if ((ui_callback_primary != UI_CHAR_NULL) && (*(int *)(ui_callback + UI_OFFSET_160) != 4)) {
    ui_event_buffer = ui_stack_array;
    ui_event_index = 8;
    do {
      ui_system_process_widget_event(ui_event_buffer);
      ui_event_buffer = ui_event_buffer + 2;
      ui_event_index = ui_event_index + -1;
    } while (ui_event_index != 0);
    ui_character_value = *(char *)(ui_callback + UI_TEMP_VALUE_OFFSET);
    ui_loop_counter = 0;
    if (UI_CHAR_NULL < *(char *)(ui_callback + 0xa6)) {
      pui_transition_alpha_value = (float *)(ui_callback + UI_RESOURCE_TYPE_CONFIG0);
      do {
        ui_loop_counter = ui_stack_color_data44;
        if ((int)ui_character_value == ui_parameter_value) break;
        pui_widget_y_coord = (float *)ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_character_value,ui_parameter_value);
        float_value = *pui_widget_y_coord;
        float_value = pui_widget_y_coord[1];
        float_value = pui_widget_y_coord[2];
        float_value = pui_widget_y_coord[3];
        if (0.001 <= ui_parameter_value) {
          if (ui_parameter_value <= 0.999) {
            float_value = pui_transition_alpha_value[2] * float_value;
            float_value = pui_transition_alpha_value[3] * float_value;
            ui_stack_variable_uint_788 = UI_FLOAT_NEGATIVE_ONEbf800000;
            ui_stack_variable_uint_780 = UI_FLOAT_NEGATIVE_ONEbf800000;
            ui_temp_buffer._data_offset_ = float_value + *pui_transition_alpha_value * float_value;
            ui_temp_buffer._data_size_ = float_value + pui_transition_alpha_value[1] * float_value;
            ui_temp_buffer._data_format_ = float_value + float_value;
            ui_temp_buffer._data_flags_ = float_value + float_value;
            ui_temp_buffer._4_12_ = ui_temp_buffer._4_12_;
            ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + ui_temp_buffer._data_size_;
            ui_stack_temp_798 = UI_BIT_SHIFT_638000003f800000;
            ui_stack_temp_790 = UI_BIT_SHIFT_638000003f800000;
            ui_loop_counter = movmskps((int)pui_widget_y_coord,ui_temp_buffer);
            ui_task_index5 = (ulonglong)(ui_loop_counter & 1);
            float_value = *(float *)(&ui_stack_temp_798 + ui_task_index5 * 2);
            float_value = *(float *)(&ui_stack_temp_790 + ui_task_index5 * 2);
            float_value = *pui_transition_alpha_value;
            float_value = pui_transition_alpha_value[2];
            float_value = *(float *)((longlong)&ui_stack_temp_798 + ui_task_index5 * UI_EVENT_FLAG_OFFSET + 4) * pui_transition_alpha_value[1];
            float_value = *(float *)((longlong)&ui_stack_temp_790 + ui_task_index5 * UI_EVENT_FLAG_OFFSET + 4) * pui_transition_alpha_value[3];
            if (0.9995 < ABS(ui_temp_buffer._data_offset_)) {
              float_value = 1.0 - ui_parameter_value;
              ui_stack_temp_938 = CONCAT44(float_value * float_value + ui_parameter_value * float_value,
                                    float_value * float_value + ui_parameter_value * float_value * float_value);
              ui_stack_temp_930 = CONCAT44(float_value * float_value + ui_parameter_value * float_value,
                                    float_value * float_value + ui_parameter_value * float_value * float_value);
              ui_system_process_event_data(&ui_stack_temp_938);
              float_value = (float)ui_stack_temp_938;
              float_value = ui_stack_temp_938._data_size_;
              float_value = (float)ui_stack_temp_930;
              float_value = ui_stack_temp_930._data_size_;
            }
            else {
              acosf();
              float_value = (float)sinf();
              float_value = float_value * (1.0 / float_value);
              float_value = (float)sinf();
              float_value = float_value * (1.0 / float_value);
              float_value = float_value * float_value + float_value * float_value * float_value;
              float_value = float_value * float_value + float_value * float_value;
              float_value = float_value * float_value + float_value * float_value * float_value;
              float_value = float_value * float_value + float_value * float_value;
            }
          }
          else {
            float_value = *pui_transition_alpha_value;
            float_value = pui_transition_alpha_value[1];
            float_value = pui_transition_alpha_value[2];
            float_value = pui_transition_alpha_value[3];
          }
        }
        ui_loop_counter = ui_stack_color_data44 + 1;
        ui_task_index0 = (int)pui_stack_variable_uint_a08 + 1;
        pui_stack_variable_uint_a08 = (uint64_t *)(ulonglong)ui_task_index0;
        pui_widget_y_coord = (float *)(((longlong)aui_stack_float_898 - ui_callback) + (longlong)pui_transition_alpha_value);
        *pui_widget_y_coord = float_value;
        pui_widget_y_coord[1] = float_value;
        pui_widget_y_coord[2] = float_value;
        pui_widget_y_coord[3] = float_value;
        pui_transition_alpha_value = pui_transition_alpha_value + 4;
        ui_character_value = *(char *)((longlong)ui_character_value + UI_MAX_COMPONENT_VALUE + ui_parameter_value);
        ui_parameter_value = ui_stack_float_a18;
        ui_stack_color_data44 = ui_loop_counter;
      } while ((int)ui_task_index0 < (int)*(char *)(ui_callback + 0xa6));
    }
    float_value = (float)(ui_loop_counter - 1);
    ui_task_index5 = (ulonglong)(int)float_value;
    ui_stack_float_a18 = float_value;
    if (-1 < (int)float_value) {
      ui_event_buffer = ui_stack_array + ui_task_index5 * 2;
      do {
        ui_character_value = *(char *)(ui_stack_parameter_longa10 + UI_TEMP_VALUE_OFFSET);
        float_value = (float)ui_task_index5;
        if (0 < (int)float_value) {
          ui_task_index5 = ui_task_index5 & UI_BIT_MASK_32BIT_FULL;
          do {
            ui_character_value = *(char *)((longlong)ui_character_value + UI_MAX_COMPONENT_VALUE + ui_parameter_value);
            ui_task_index5 = ui_task_index5 - 1;
          } while (ui_task_index5 != 0);
        }
        ui_task_index7 = (ulonglong)ui_character_value;
        if (float_value == float_value) {
          if (ui_character_value != UI_CHAR_NULL) {
            ui_event_buffer = (uint8_t *)
                      ui_system_cleanupuiui_stack_var_var(ui_event_type,*(uint8_t *)(ui_task_index7 + UI_MAX_COMPONENT_VALUE + ui_parameter_value),ui_parameter_value);
            ui_task_index_pointer2 = ui_stack_array;
            ui_event_buffer = ui_stack_array + (longlong)(int)float_value * 2;
            goto UI_LABEL_GENERIC_66597d;
          }
          ui_event_id_fourth = *ui_event_buffer;
          ui_loop_counter = ui_event_buffer[1];
        }
        else {
          ui_task_index_pointer2 = ui_stack_array;
          ui_event_buffer = ui_stack_array + (longlong)(int)float_value * 2;
          ui_event_buffer = ui_stack_array + (longlong)(int)float_value * UI_EVENT_FLAG_OFFSET;
UI_LABEL_GENERIC_66597d:
          ui_event_buffer = (uint64_t *)ui_system_create_event_buffer(ui_event_buffer,ui_task_index_pointer2,ui_event_buffer);
          ui_event_id_fourth = *ui_event_buffer;
          ui_loop_counter = ui_event_buffer[1];
          float_value = ui_stack_float_a18;
        }
        ui_event_buffer = (uint64_t *)(ui_event_type + (ui_task_index7 + 0x82) * UI_EVENT_FLAG_OFFSET);
        *ui_event_buffer = ui_event_id_fourth;
        ui_event_buffer[1] = ui_loop_counter;
        ui_event_buffer = ui_event_buffer + -2;
        *(ulonglong *)(ui_event_type + UI_STACK_SIZE_1280) =
             *(ulonglong *)(ui_event_type + UI_STACK_SIZE_1280) |
             *(ulonglong *)(*(longlong *)(ui_parameter_value + UI_ANIMATION_DATA_OFFSET) + UI_SYSTEM_CONFIG_OFFSET + ui_task_index7 * UI_GUARD_CHECK_TYPE0);
        ui_task_index5 = (ulonglong)((int)float_value - 1U);
        *(ulonglong *)(ui_event_type + UI_STACK_SIZE_1288) = *(ulonglong *)(ui_event_type + UI_STACK_SIZE_1288) | 1L << (ui_task_index7 & UI_BIT_SHIFT_63);
      } while (-1 < (int)((int)float_value - 1U));
    }
    goto UI_LABEL_GENERIC_6659c4;
  }
  ui_character_value = *(char *)(ui_callback + 0xa5);
  ui_character_value = *(char *)(ui_callback + UI_TEMP_VALUE_OFFSET);
  ui_stack_temp_9a8 = UI_BIT_SHIFT_63800000;
  ui_stack_temp_9a0 = 0;
  ui_stack_temp_998 = 0;
  ui_stack_temp_990 = UI_BIT_SHIFT_6380000000000000;
  if (ui_character_value != ui_character_value) {
    do {
      ui_event_index = (longlong)ui_character_value;
      ui_event_buffer = (uint64_t *)(ui_event_type + (ui_event_index + 0x82) * UI_EVENT_FLAG_OFFSET);
      ui_stack_temp_798 = *ui_event_buffer;
      ui_stack_temp_790 = ui_event_buffer[1];
      ui_event_buffer = (uint64_t *)(ui_event_index * UI_GUARD_CHECK_TYPE0 + UI_STACK_SIZE_128 + *(longlong *)(ui_parameter_value + UI_ANIMATION_DATA_OFFSET));
      ui_stack_variable_uint_788 = *ui_event_buffer;
      ui_stack_variable_uint_780 = ui_event_buffer[1];
      ui_event_buffer = (uint64_t *)ui_allocate_event_memory(&ui_stack_temp_9a8,ui_stack_array,&ui_stack_variable_uint_788);
      ui_event_buffer = (uint64_t *)ui_system_process_widget_callback(&ui_stack_temp_9a8,ui_stack_array,&ui_stack_temp_798);
      ui_stack_temp_998 = *ui_event_buffer;
      ui_stack_temp_990 = ui_event_buffer[1];
      ui_character_value = *(char *)(ui_callback + UI_TEMP_VALUE_OFFSET);
      ui_stack_temp_9a8 = *ui_event_buffer;
      ui_stack_temp_9a0 = ui_event_buffer[1];
      ui_character_value = *(char *)(ui_event_index + UI_MAX_COMPONENT_VALUE + ui_parameter_value);
      ui_parameter_value = ui_stack_parameter_longe8;
    } while (ui_character_value != ui_character_value);
  }
  ui_result_status = *(int *)(ui_callback + UI_OFFSET_160);
  if (ui_result_status == 3) {
    ui_event_id_fourth = ui_create_event_id(ui_parameter_value,ui_stack_array,ui_callback + UI_EVENT_FLAG_OFFSET);
    ui_event_buffer = (uint64_t *)ui_allocate_event_memory(&ui_stack_ulong_event_id_primary8,ui_stack_array,ui_event_id_fourth);
    ui_stack_color_data38 = *ui_event_buffer;
    ui_stack_color_data30 = ui_event_buffer[1];
    if (0.0 < *(float *)(ui_callback + UI_MEMORY_ALLOC_SIZE)) {
      ui_event_id_fourth = ui_system_get_widget_event_id(&ui_stack_temp_9a8,ui_stack_array);
      ui_initialize_event_structure(ui_callback + UI_OFFSET_32,&ui_stack_temp_9d8,ui_event_id_fourth);
      float_value = *(float *)(ui_callback + UI_MEMORY_ALLOC_SIZE);
      ui_stack_color_data38 = CONCAT44(ui_stack_color_data38._data_size_ - float_value * ui_stack_temp_9d8._data_size_,
                            (float)ui_stack_color_data38 - float_value * (float)ui_stack_temp_9d8);
      ui_stack_color_data30 = CONCAT44(ui_stack_color_data30._data_size_,(float)ui_stack_color_data30 - float_value * (float)ui_stack_temp_9d0);
    }
UI_LABEL_GENERIC_665f82:
    if ((((float)ui_stack_temp_998 != 0.0) || (ui_stack_temp_998._data_size_ != 0.0)) || ((float)ui_stack_temp_990 != 0.0)) {
      ui_event_buffer = (uint64_t *)(ui_callback + UI_OFFSET_32);
UI_LABEL_GENERIC_665f9e:
      pui_transition_alpha_value = (float *)ui_initialize_event_structure(ui_event_buffer,ui_stack_array,&ui_stack_temp_998);
      ui_stack_color_data38 = CONCAT44(ui_stack_color_data38._data_size_ - pui_transition_alpha_value[1],(float)ui_stack_color_data38 - *pui_transition_alpha_value);
      float_value = (float)ui_stack_color_data30 - pui_transition_alpha_value[2];
UI_LABEL_GENERIC_665fd7:
      ui_stack_color_data30 = CONCAT44(ui_stack_color_data30._data_size_,float_value);
    }
  }
  else if (ui_result_status == 4) {
    ui_event_buffer = (uint64_t *)ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_character_value,ui_parameter_value);
    ui_stack_temp_798 = *ui_event_buffer;
    ui_stack_temp_790 = ui_event_buffer[1];
    ui_event_buffer = (uint64_t *)(ui_event_type + ((longlong)ui_character_value + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET);
    ui_stack_variable_uint_788 = *ui_event_buffer;
    ui_stack_variable_uint_780 = ui_event_buffer[1];
    ui_character_value = ui_system_validate_widget_state(ui_callback + UI_OFFSET_32);
    if (ui_character_value == UI_CHAR_NULL) {
      ui_stack_temp_798 = *(uint64_t *)(ui_callback + UI_OFFSET_32);
      ui_stack_temp_790 = *(uint64_t *)(ui_callback + UI_CALLBACK_HANDLER_OFFSET);
    }
    ui_event_buffer = (uint64_t *)ui_system_process_widget_callback(&ui_stack_ulong_event_id_primary8,ui_stack_array,&ui_stack_temp_798);
    ui_stack_temp_948 = *ui_event_buffer;
    ui_stack_temp_940 = ui_event_buffer[1];
    ui_stack_color_data28 = CONCAT44(ui_stack_variable_uint_788._data_size_ + *(float *)(ui_callback + UI_SHIFT_AMOUNT_20),
                          (float)ui_stack_variable_uint_788 + *(float *)(ui_callback + UI_EVENT_FLAG_OFFSET));
    ui_stack_color_data20 = CONCAT44(UI_FLOAT_MAX_VALUE,(float)ui_stack_variable_uint_780 + *(float *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS));
    ui_event_buffer = (uint64_t *)ui_allocate_event_memory(&ui_stack_ulong_event_id_primary8,ui_stack_array,&ui_stack_color_data28);
    ui_stack_color_data38 = *ui_event_buffer;
    ui_stack_color_data30 = ui_event_buffer[1];
  }
  else if (ui_result_status == 5) {
    ui_character_value = *(char *)(ui_callback + UI_OFFSET_32);
    ui_event_buffer = (uint64_t *)ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_character_value,ui_parameter_value);
    ui_stack_array[0] = *ui_event_buffer;
    ui_stack_array[1] = ui_event_buffer[1];
    _aui_stack_temp_758 = *(uint8_t (*) [16])(ui_event_type + ((longlong)ui_character_value + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET);
    pui_transition_alpha_value = (float *)ui_initialize_event_structure(ui_stack_array,ui_stack_array,ui_callback + UI_EVENT_FLAG_OFFSET);
    ui_temp_buffer = _aui_stack_temp_758;
    ui_stack_array._data_size_ = (float)ui_stack_array._data_size_ + pui_transition_alpha_value[1];
    ui_stack_array._data_offset_ = (float)ui_stack_array._data_offset_ + *pui_transition_alpha_value;
    ui_stack_temp_74c = ui_temp_buffer._data_flags_;
    ui_stack_float_750 = ui_stack_float_750 + pui_transition_alpha_value[2];
    ui_allocate_event_memory(&ui_stack_ulong_event_id_primary8,&ui_stack_float_918,ui_stack_array);
    ui_stack_color_data38 = CONCAT44(ui_stack_float_914,ui_stack_float_918);
    ui_stack_color_data30 = CONCAT44(ui_stack_float_90c,ui_stack_float_910);
    ui_event_buffer = (uint64_t *)ui_system_cleanupuiui_stack_var_var(ui_event_type,*(uint8_t *)(ui_callback + UI_TEMP_VALUE_OFFSET),ui_parameter_value);
    ui_stack_temp_948 = *ui_event_buffer;
    ui_stack_temp_940 = ui_event_buffer[1];
    ui_event_buffer = (uint64_t *)ui_system_process_widget_callback(&ui_stack_ulong_event_id_primary8,ui_stack_array,&ui_stack_temp_948);
    ui_stack_temp_948 = *ui_event_buffer;
    ui_stack_temp_940 = ui_event_buffer[1];
    if ((((float)ui_stack_temp_998 != 0.0) || (ui_stack_temp_998._data_size_ != 0.0)) || ((float)ui_stack_temp_990 != 0.0)) {
      ui_initialize_event_structure(&ui_stack_temp_948,&ui_stack_temp_9d8,&ui_stack_temp_998);
      float_value = (float)ui_stack_color_data30 - (float)ui_stack_temp_9d0;
      ui_stack_color_data38 = CONCAT44(ui_stack_color_data38._data_size_ - ui_stack_temp_9d8._data_size_,
                            (float)ui_stack_color_data38 - (float)ui_stack_temp_9d8);
      goto UI_LABEL_GENERIC_665fd7;
    }
  }
  else {
    if (ui_result_status == 6) {
      ui_event_id_fourth = ui_create_event_id(ui_parameter_value,ui_stack_array,ui_callback + UI_EVENT_FLAG_OFFSET);
      ui_event_buffer = (uint64_t *)ui_allocate_event_memory(&ui_stack_ulong_event_id_primary8,ui_stack_array,ui_event_id_fourth);
      ui_stack_color_data38 = *ui_event_buffer;
      ui_stack_color_data30 = ui_event_buffer[1];
      goto UI_LABEL_GENERIC_665f82;
    }
    if (ui_result_status == 7) {
      if ((*(ulonglong *)(ui_event_flags + 0x810) >> ((ulonglong)*(byte *)(ui_callback + 0xa5) & UI_BIT_SHIFT_63) & 1) ==
          0) {
        ui_event_buffer = (uint64_t *)ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_character_value,ui_parameter_value);
        ui_event_buffer = (uint64_t *)(ui_event_type + ((longlong)ui_character_value + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET);
        ui_stack_variable_uint_788 = *ui_event_buffer;
        ui_stack_variable_uint_780 = ui_event_buffer[1];
        ui_stack_temp_798 = *ui_event_buffer;
        ui_stack_temp_790 = ui_event_buffer[1];
        ui_event_buffer = (uint64_t *)ui_system_process_widget_callback(&ui_stack_ulong_event_id_primary8,ui_stack_array,&ui_stack_temp_798);
        ui_character_value = *(char *)(ui_callback + 0xa5);
        ui_stack_temp_948 = *ui_event_buffer;
        ui_stack_temp_940 = ui_event_buffer[1];
        ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_character_value,ui_parameter_value);
        ui_event_buffer = (uint64_t *)(ui_event_type + ((longlong)ui_character_value + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET);
        ui_stack_color_data28 = *ui_event_buffer;
        ui_event_id_fourth = ui_event_buffer[1];
      }
      else {
        ui_event_buffer = (uint64_t *)ui_system_cleanupuiui_stack_var_var(ui_event_flags,ui_character_value,ui_parameter_value);
        ui_event_buffer = (uint64_t *)(ui_event_flags + ((longlong)ui_character_value + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET);
        ui_stack_variable_uint_788 = *ui_event_buffer;
        ui_stack_variable_uint_780 = ui_event_buffer[1];
        ui_stack_temp_798 = *ui_event_buffer;
        ui_stack_temp_790 = ui_event_buffer[1];
        ui_event_buffer = (uint64_t *)ui_system_process_widget_callback(&ui_stack_ulong_event_id_primary8,ui_stack_array,&ui_stack_temp_798);
        ui_character_value = *(char *)(ui_callback + 0xa5);
        ui_stack_temp_948 = *ui_event_buffer;
        ui_stack_temp_940 = ui_event_buffer[1];
        ui_system_cleanupuiui_stack_var_var(ui_event_flags,ui_character_value,ui_parameter_value);
        ui_event_buffer = (uint64_t *)(ui_event_flags + ((longlong)ui_character_value + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET);
        ui_stack_color_data28 = *ui_event_buffer;
        ui_event_id_fourth = ui_event_buffer[1];
      }
      ui_stack_color_data20._data_offset_ = (float)ui_event_id_fourth;
      ui_stack_color_data20._data_size_ = (uint32_t)((ulonglong)ui_event_id_fourth >> UI_OFFSET_32);
      ui_stack_color_data20 = CONCAT44(ui_stack_color_data20._data_size_,(float)ui_stack_color_data20 + *(float *)(ui_callback + UI_WIDGET_BASE_OFFSET));
      ui_event_buffer = (uint64_t *)ui_create_event_data_buffer(ui_callback + UI_EVENT_FLAG_OFFSET,ui_stack_array,&ui_stack_color_data28);
      ui_stack_color_data28 = *ui_event_buffer;
      ui_stack_color_data20 = ui_event_buffer[1];
      ui_event_buffer = (uint64_t *)ui_system_get_widget_event_array(ui_callback + UI_OFFSET_80,ui_stack_array,&ui_stack_color_data28);
      ui_stack_color_data28 = *ui_event_buffer;
      ui_stack_color_data20 = ui_event_buffer[1];
      ui_event_id_fourth = ui_create_event_id(ui_stack_parameter_longe8,ui_stack_array,&ui_stack_color_data28);
      ui_event_buffer = (uint64_t *)ui_allocate_event_memory(&ui_stack_ulong_event_id_primary8,ui_stack_array,ui_event_id_fourth);
      ui_stack_color_data38 = *ui_event_buffer;
      ui_stack_color_data30 = ui_event_buffer[1];
      if ((((float)ui_stack_temp_998 != 0.0) || (ui_stack_temp_998._data_size_ != 0.0)) || ((float)ui_stack_temp_990 != 0.0)) {
        ui_event_buffer = &ui_stack_temp_948;
        goto UI_LABEL_GENERIC_665f9e;
      }
    }
  }
  ui_event_index = 8;
  ui_event_buffer = &ui_stack_temp_6e8;
  ui_event_index = 8;
  do {
    ui_system_process_widget_event(ui_event_buffer);
    ui_event_buffer = ui_event_buffer + 4;
    ui_event_index = ui_event_index + -1;
  } while (ui_event_index != 0);
  ui_event_buffer = &ui_stack_temp_5e8;
  do {
    ui_system_process_widget_event(ui_event_buffer);
    ui_event_buffer = ui_event_buffer + 4;
    ui_event_index = ui_event_index + -1;
  } while (ui_event_index != 0);
  pui_transition_alpha_value = aui_stack_float_4e8;
  ui_event_index = UI_BUFFER_SIZE_64;
  do {
    ui_system_process_widget_event(pui_transition_alpha_value);
    pui_transition_alpha_value = pui_transition_alpha_value + 4;
    ui_event_index = ui_event_index + -1;
  } while (ui_event_index != 0);
  booluiui_stack_var_var_a48 = *(byte *)(ui_callback + UI_TEMP_VALUE_OFFSET);
  ui_loop_counter = (uint)(char)booluiui_stack_var_var_a48;
  ui_task_index7 = 0;
  _aui_stack_temp_9c0 = ZEXT416(0);
  ui_task_index5 = ui_task_index7;
  if (ui_loop_counter != ui_parameter_value) {
    do {
      if (*(char *)(ui_callback + 0xa6) <= ui_result_status) break;
      ui_event_buffer = (uint32_t *)ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_loop_counter & UI_COMPONENT_MAX_VALUE,ui_parameter_value);
      ui_event_index = (longlong)(char)(byte)ui_loop_counter;
      ui_loop_counter = ui_event_buffer[1];
      ui_loop_counter = ui_event_buffer[2];
      ui_loop_counter = ui_event_buffer[3];
      *(uint32_t *)((longlong)&ui_stack_temp_5e8 + ui_task_index5) = *ui_event_buffer;
      *(uint32_t *)((longlong)&ui_stack_temp_5e8 + ui_task_index5 + 4) = ui_loop_counter;
      *(uint32_t *)((longlong)&ui_stack_temp_5e0 + ui_task_index5) = ui_loop_counter;
      *(uint32_t *)((longlong)&ui_stack_temp_5e0 + ui_task_index5 + 4) = ui_loop_counter;
      ui_event_buffer = (uint64_t *)(ui_event_type + (ui_event_index + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET);
      ui_event_id_fourth = ui_event_buffer[1];
      *(uint64_t *)((longlong)&ui_stack_temp_5d8 + ui_task_index5) = *ui_event_buffer;
      *(uint64_t *)((longlong)&ui_stack_temp_5d0 + ui_task_index5) = ui_event_id_fourth;
      ui_event_buffer = (uint64_t *)ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_loop_counter & UI_COMPONENT_MAX_VALUE,ui_parameter_value);
      ui_bool_result = *(byte *)(ui_event_index + UI_MAX_COMPONENT_VALUE + ui_parameter_value);
      ui_loop_counter = *(uint32_t *)((longlong)&ui_stack_temp_5d8 + ui_task_index5);
      ui_loop_counter = *(uint32_t *)((longlong)&ui_stack_temp_5d8 + ui_task_index5 + 4);
      ui_loop_counter = *(uint32_t *)((longlong)&ui_stack_temp_5d0 + ui_task_index5);
      ui_loop_counter = *(uint32_t *)((longlong)&ui_stack_temp_5d0 + ui_task_index5 + 4);
      ui_event_id_fourth = ui_event_buffer[1];
      *(uint64_t *)(aui_stack_float_4e8 + ui_event_index * 4) = *ui_event_buffer;
      (&ui_stack_temp_4e0)[ui_event_index * 2] = ui_event_id_fourth;
      *(uint64_t *)((longlong)&ui_stack_temp_6e8 + ui_task_index5) =
           *(uint64_t *)((longlong)&ui_stack_temp_5e8 + ui_task_index5);
      *(uint64_t *)((longlong)&ui_stack_temp_6e0 + ui_task_index5) =
           *(uint64_t *)((longlong)&ui_stack_temp_5e0 + ui_task_index5);
      *(uint32_t *)((longlong)&ui_stack_temp_6d8 + ui_task_index5) = ui_loop_counter;
      *(uint32_t *)((longlong)&ui_stack_temp_6d8 + ui_task_index5 + 4) = ui_loop_counter;
      *(uint32_t *)((longlong)&ui_stack_temp_6d0 + ui_task_index5) = ui_loop_counter;
      *(uint32_t *)((longlong)&ui_stack_temp_6d0 + ui_task_index5 + 4) = ui_loop_counter;
      ui_bool_result = (byte)ui_loop_counter;
      if (-1 < (char)ui_bool_result) {
        ui_event_buffer = (uint64_t *)ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_bool_result,ui_parameter_value);
        ui_stack_temp_798 = *ui_event_buffer;
        ui_stack_temp_790 = ui_event_buffer[1];
        ui_event_buffer = (uint64_t *)(ui_event_type + ((longlong)(char)ui_bool_result + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET);
        ui_stack_variable_uint_788 = *ui_event_buffer;
        ui_stack_variable_uint_780 = ui_event_buffer[1];
        ui_event_buffer = (uint64_t *)
                  ui_process_event_buffer(&ui_stack_temp_798,ui_stack_array,&ui_stack_temp_6d8 + (longlong)ui_result_status * 4);
        ui_event_buffer = (uint32_t *)
                  ui_system_create_event_buffer(&ui_stack_temp_798,ui_stack_array,&ui_stack_temp_6e8 + (longlong)ui_result_status * 4);
        ui_event_id_fourth = *ui_event_buffer;
        ui_loop_counter = ui_event_buffer[1];
        ui_loop_counter = ui_event_buffer[2];
        ui_loop_counter = ui_event_buffer[3];
        *(uint32_t *)((longlong)&ui_stack_temp_6e8 + ui_task_index5) = *ui_event_buffer;
        *(uint32_t *)((longlong)&ui_stack_temp_6e8 + ui_task_index5 + 4) = ui_loop_counter;
        *(uint32_t *)((longlong)&ui_stack_temp_6e0 + ui_task_index5) = ui_loop_counter;
        *(uint32_t *)((longlong)&ui_stack_temp_6e0 + ui_task_index5 + 4) = ui_loop_counter;
        *(uint64_t *)((longlong)&ui_stack_temp_6d8 + ui_task_index5) = ui_event_id_fourth;
        *(uint64_t *)((longlong)&ui_stack_temp_6d0 + ui_task_index5) = ui_loop_counter;
        ui_bool_result = booluiui_stack_var_var_a48;
      }
      ui_event_index = ui_stack_parameter_longa10;
      if (ui_bool_result == 0) {
        float_value = (float)(*(char *)(ui_stack_parameter_longa10 + 0xa6) - ui_result_status) /
                 (float)(int)*(char *)(ui_stack_parameter_longa10 + 0xa6);
        float_value = float_value * float_value + 0.1;
        if (1.0 <= float_value) {
          float_value = 1.0;
        }
        pui_widget_y_coord = (float *)ui_process_event_buffer(&ui_stack_ulong_event_id_primary8,aui_stack_float_898,&ui_stack_color_data38);
        ui_character_value = *(char *)(ui_event_index + UI_TEMP_VALUE_OFFSET);
        ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_character_value,ui_parameter_value);
        pui_transition_alpha_value = (float *)(ui_event_type + ((longlong)ui_character_value + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET);
        ui_stack_float_9b8 = pui_widget_y_coord[2] - pui_transition_alpha_value[2];
        ui_stack_temp_9b4 = UI_FLOAT_MAX_VALUE;
        ui_stack_array._data_size_ = (pui_widget_y_coord[1] - pui_transition_alpha_value[1]) * float_value;
        ui_stack_array._data_offset_ = (*pui_widget_y_coord - *pui_transition_alpha_value) * float_value;
        if (0.0 < pui_widget_y_coord[2] - pui_transition_alpha_value[2]) {
          ui_stack_float_9b8 = 0.0;
          ui_stack_temp_9b4 = UI_FLOAT_MAX_VALUE;
        }
        pui_transition_alpha_value = (float *)ui_initialize_event_structure(&ui_stack_ulong_event_id_primary8,ui_stack_array,ui_stack_array);
        ui_stack_color_data38 = CONCAT44(ui_stack_color_data38._data_size_ - pui_transition_alpha_value[1],(float)ui_stack_color_data38 - *pui_transition_alpha_value);
        ui_stack_color_data30 = CONCAT44(ui_stack_color_data30._data_size_,(float)ui_stack_color_data30 - pui_transition_alpha_value[2]);
      }
      ui_result_status = ui_result_status + 1;
      ui_stack_color_data44 = ui_stack_color_data44 + 1;
      ui_task_index7 = (ulonglong)ui_stack_color_data44;
      ui_task_index5 = ui_task_index5 + UI_OFFSET_32;
      ui_loop_counter = (uint)ui_bool_result;
      ui_callback = ui_stack_parameter_longa10;
      booluiui_stack_var_var_a48 = ui_bool_result;
    } while ((int)(char)ui_bool_result != ui_parameter_value);
    if ((int)ui_task_index7 != 0) {
      if ((char)ui_loop_counter < UI_CHAR_NULL) {
        ui_stack_temp_valueb8 = UI_BIT_SHIFT_63800000;
        ui_stack_temp_valueb0 = 0;
        ui_stack_temp_valuea8 = 0;
        ui_stack_temp_valuea0 = UI_BIT_SHIFT_6380000000000000;
      }
      else {
        ui_event_buffer = (uint64_t *)ui_system_cleanupuiui_stack_var_var(ui_event_type,ui_loop_counter & UI_COMPONENT_MAX_VALUE,ui_parameter_value);
        ui_task_index7 = (ulonglong)ui_stack_color_data44;
        ui_stack_temp_valueb8 = *ui_event_buffer;
        ui_stack_temp_valueb0 = ui_event_buffer[1];
        ui_event_buffer = (uint64_t *)(ui_event_type + ((longlong)(char)ui_loop_counter + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET);
        ui_stack_temp_valuea8 = *ui_event_buffer;
        ui_stack_temp_valuea0 = ui_event_buffer[1];
      }
      ui_event_buffer = (uint64_t *)(longlong)(int)ui_task_index7;
      ui_stack_float_a14 = 0.0;
      pui_stack_variable_uint_a08 = ui_event_buffer;
      do {
        ui_task_index0 = (uint)ui_task_index7;
        pui_stack_temp_9e8 = (uint64_t *)UI_ZERO_OFFSET;
        charuiui_stack_var_var_a47 = *(char *)(ui_stack_parameter_longa10 + UI_TEMP_VALUE_OFFSET);
        if (0 < (longlong)ui_event_buffer) {
          ui_event_buffer = &ui_stack_temp_6e8;
          ui_event_buffer = (uint64_t *)(longlong)(int)ui_task_index0;
          ui_result_status = 0;
          do {
            ui_result_status = ui_result_status + 1;
            _aui_stack_temp_7b8 = (longlong)charuiui_stack_var_var_a47;
            ui_result_status = *(int *)((longlong)charuiui_stack_var_var_a47 * UI_GUARD_CHECK_TYPE0 + UI_RESOURCE_LOAD_TYPE0 + *(longlong *)(ui_parameter_value + UI_ANIMATION_DATA_OFFSET))
            ;
            pui_stack_float_9c8 = (float *)CONCAT44(pui_stack_float_9c8._data_size_,ui_result_status);
            if (ui_result_status != -1) {
              ui_stack_array[0] = UI_BIT_SHIFT_63800000;
              ui_stack_array[1] = 0;
              _aui_stack_temp_758 = ZEXT812(0);
              ui_stack_temp_74c = UI_BIT_SHIFT_63800000;
              ui_bool_result = (byte)ui_loop_counter;
              if (ui_result_status < (int)ui_task_index7) {
                ui_event_buffer = &ui_stack_temp_6e8 + (longlong)ui_result_status * 4;
                ui_task_index5 = (ulonglong)(uint)((int)ui_task_index7 - ui_result_status);
                do {
                  paui_event_id7 = (uint8_t (*) [16])ui_allocate_event_memory(ui_event_buffer,ui_stack_array,ui_stack_array);
                  ui_event_buffer = (uint64_t *)ui_system_process_widget_callback(ui_event_buffer,ui_stack_array,ui_stack_array);
                  _aui_stack_temp_758 = *paui_event_id7;
                  ui_event_buffer = ui_event_buffer + 4;
                  ui_stack_array[0] = *ui_event_buffer;
                  ui_stack_array[1] = ui_event_buffer[1];
                  ui_task_index5 = ui_task_index5 - 1;
                  ui_bool_result = booluiui_stack_var_var_a48;
                } while (ui_task_index5 != 0);
              }
              if (ui_bool_result != UI_COMPONENT_MAX_VALUE) {
                paui_event_id7 = (uint8_t (*) [16])ui_allocate_event_memory(&ui_stack_temp_valueb8,aui_stack_float_898,ui_stack_array);
                ui_event_buffer = (uint64_t *)ui_system_process_widget_callback(&ui_stack_temp_valueb8,ui_stack_array,ui_stack_array);
                _aui_stack_temp_758 = *paui_event_id7;
                ui_stack_array[0] = *ui_event_buffer;
                ui_stack_array[1] = ui_event_buffer[1];
              }
              ui_result_status = ui_result_status + -1;
              ui_stack_temp_798 = UI_BIT_SHIFT_63800000;
              ui_stack_temp_790 = 0;
              ui_stack_variable_uint_788 = 0;
              ui_stack_variable_uint_780 = UI_BIT_SHIFT_6380000000000000;
              if (-1 < ui_result_status) {
                ui_event_buffer = &ui_stack_temp_6e8 + (longlong)ui_result_status * 4;
                do {
                  ui_event_buffer = (uint64_t *)ui_allocate_event_memory(&ui_stack_temp_798,&ui_stack_float_8d0,ui_event_buffer + 2);
                  ui_event_buffer = (uint64_t *)ui_system_process_widget_callback(&ui_stack_temp_798,ui_stack_array,ui_event_buffer);
                  ui_stack_variable_uint_788 = *ui_event_buffer;
                  ui_stack_variable_uint_780 = ui_event_buffer[1];
                  ui_event_buffer = ui_event_buffer + -4;
                  ui_result_status = ui_result_status + -1;
                  ui_stack_temp_798 = *ui_event_buffer;
                  ui_stack_temp_790 = ui_event_buffer[1];
                } while (-1 < ui_result_status);
              }
              ui_event_buffer = (uint32_t *)
                        ui_allocate_event_memory(ui_stack_array,ui_stack_array,&ui_stack_temp_6d8 + (longlong)ui_result_status * 4);
              ui_event_buffer = (uint64_t *)
                        ui_system_process_widget_callback(ui_stack_array,ui_stack_array,
                                            &ui_stack_temp_6e8 + (longlong)ui_result_status * 4);
              ui_stack_temp_value28 = *ui_event_buffer;
              ui_stack_temp_value20 = ui_event_buffer[1];
              ui_stack_temp_value18 = *ui_event_buffer;
              ui_stack_temp_value14 = ui_event_buffer[1];
              ui_stack_temp_value10 = ui_event_buffer[2];
              ui_stack_extended_size_128c = ui_event_buffer[3];
              ui_process_event_queue_item(&ui_stack_ulong_event_id_primary8,ui_stack_array,&ui_stack_temp_value28);
              ui_process_event_buffer(ui_stack_array,&ui_stack_temp_938,&ui_stack_color_data38);
              ui_system_calculate_widget_transform(&ui_stack_variable_uint_788,&ui_stack_color_data28,&ui_stack_temp_938);
              if ((((float)ui_stack_color_data28 != 0.0) || (ui_stack_color_data28._data_size_ != 0.0)) ||
                 ((float)ui_stack_color_data20 != 0.0)) {
                float_value = (float)ui_system_get_widget_opacity(&ui_stack_variable_uint_788);
                float_value = (float)ui_system_get_widget_opacity(&ui_stack_temp_938);
                if (0.0 < float_value * float_value) {
                  float_value = ui_stack_color_data28._data_size_ * ui_stack_color_data28._data_size_ +
                           (float)ui_stack_color_data28 * (float)ui_stack_color_data28 +
                           (float)ui_stack_color_data20 * (float)ui_stack_color_data20;
                  ui_temp_buffer = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
                  float_value = ui_temp_buffer._data_offset_;
                  float_value = float_value * 0.5 * (3.0 - float_value * float_value * float_value);
                  ui_stack_color_data28 = CONCAT44(ui_stack_color_data28._data_size_ * float_value,(float)ui_stack_color_data28 * float_value);
                  ui_stack_color_data20 = CONCAT44(ui_stack_color_data20._data_size_,(float)ui_stack_color_data20 * float_value);
                  asinf();
                  ui_update_event_metrics(&ui_stack_float_918,&ui_stack_color_data28);
                  ui_event_buffer = (uint64_t *)ui_system_process_widget_callback(ui_event_buffer,ui_stack_array,&ui_stack_float_918);
                  ui_event_id_fourth = ui_event_buffer[1];
                  *ui_event_buffer = *ui_event_buffer;
                  ui_event_buffer[1] = ui_event_id_fourth;
                  ui_stack_temp_9d8 = *ui_event_buffer;
                  ui_stack_temp_9d0 = ui_event_buffer[1];
                  pui_stack_color_data58 = &ui_stack_temp_9d8;
                  ui_stack_float_a50 = 1.1 / (ui_parameter_value + 0.1);
                  ui_event_buffer = (uint32_t *)
                            ui_handle_complex_event(ui_parameter_value,ui_stack_array,charuiui_stack_var_var_a47,
                                          (ulonglong)pui_stack_float_9c8 & UI_BIT_MASK_32BIT_FULL);
                  ui_loop_counter = ui_event_buffer[1];
                  ui_loop_counter = ui_event_buffer[2];
                  ui_loop_counter = ui_event_buffer[3];
                  *(uint32_t *)ui_event_buffer = *ui_event_buffer;
                  *(uint32_t *)((longlong)ui_event_buffer + 4) = ui_loop_counter;
                  *(uint32_t *)(ui_event_buffer + 1) = ui_loop_counter;
                  *(uint32_t *)((longlong)ui_event_buffer + 12) = ui_loop_counter;
                }
              }
              ui_task_index7 = (ulonglong)ui_stack_color_data44;
              ui_loop_counter = (uint)booluiui_stack_var_var_a48;
              ui_event_buffer = pui_stack_variable_uint_a08;
            }
            ui_task_index0 = (uint)ui_task_index7;
            ui_event_buffer = ui_event_buffer + 4;
            charuiui_stack_var_var_a47 = *(char *)(_aui_stack_temp_7b8 + UI_MAX_COMPONENT_VALUE + ui_parameter_value);
            pui_stack_temp_9e8 = (uint64_t *)((longlong)pui_stack_temp_9e8 + 1);
            ui_result_status = ui_result_status;
          } while ((longlong)pui_stack_temp_9e8 < (longlong)ui_event_buffer);
          ui_event_buffer = (uint64_t *)(longlong)(int)ui_task_index0;
          float_value = ui_stack_float_968;
        }
        float_value = ui_stack_float_a14;
        ui_stack_temp_valuee0 = 0;
        ui_stack_temp_valued8 = 0;
        if (0 < (int)ui_task_index0) {
          ui_event_buffer = &ui_stack_temp_6e8;
          ui_task_index5 = (ulonglong)ui_task_index0;
          do {
            ui_event_buffer = (uint64_t *)ui_allocate_event_memory(ui_event_buffer,ui_stack_array,&ui_stack_temp_valuee0);
            ui_event_buffer = ui_event_buffer + 4;
            ui_stack_temp_valuee0 = *ui_event_buffer;
            ui_stack_temp_valued8 = ui_event_buffer[1];
            ui_task_index5 = ui_task_index5 - 1;
          } while (ui_task_index5 != 0);
          ui_loop_counter = (uint)booluiui_stack_var_var_a48;
        }
        if ((char)ui_loop_counter != -1) {
          ui_event_buffer = (uint64_t *)ui_allocate_event_memory(&ui_stack_temp_valueb8,ui_stack_array,&ui_stack_temp_valuee0);
          ui_stack_temp_valuee0 = *ui_event_buffer;
          ui_stack_temp_valued8 = ui_event_buffer[1];
        }
        pui_transition_alpha_value = (float *)ui_allocate_event_memory(&ui_stack_ulong_event_id_primary8,ui_stack_array,&ui_stack_temp_valuee0);
        ui_event_index = ui_stack_temp_958;
        ui_stack_float_a14 = (float)((int)float_value + 1);
        float_value = *pui_transition_alpha_value;
        float_value = pui_transition_alpha_value[1];
        ui_stack_temp_valuee0 = *(uint64_t *)pui_transition_alpha_value;
        float_value = pui_transition_alpha_value[2];
        ui_stack_temp_valued8 = *(uint64_t *)(pui_transition_alpha_value + 2);
        float_value = (float_value - (float)ui_stack_color_data38) * float_value;
        float_value = (float_value - ui_stack_color_data38._data_size_) * float_value;
        float_value = (float_value - (float)ui_stack_color_data30) * float_value;
        float_value = float_value * float_value + float_value * float_value + float_value * float_value;
      } while ((1e-05 < float_value) && (ui_task_index7 = (ulonglong)ui_stack_color_data44, (int)ui_stack_float_a14 < 10));
      *(bool *)(ui_stack_parameter_longa10 + UI_OFFSET_284) = float_value <= 1e-05;
      if (1e-05 < float_value) {
        float_value = ((float)ui_stack_color_data30 - float_value) * float_value;
        float_value = ((float)ui_stack_color_data38 - float_value) * float_value;
        float_value = (ui_stack_color_data38._data_size_ - float_value) * float_value;
        float_value = float_value * float_value + float_value * float_value + float_value * float_value;
        ui_temp_buffer = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
        float_value = ui_temp_buffer._data_offset_;
        float_value = float_value * 0.5 * (3.0 - float_value * float_value * float_value);
        float_value = float_value * float_value - 0.0031622776;
        float_value = float_value * float_value * float_value;
        ui_stack_color_data28 = CONCAT44(float_value,float_value);
        ui_stack_color_data20 = CONCAT44(UI_FLOAT_MAX_VALUE,float_value);
        *(float *)(ui_stack_parameter_longa10 + UI_GUARD_CHECK_TYPE0) = float_value;
        *(float *)(ui_stack_parameter_longa10 + UI_GUARD_CHECK_TYPE4) = float_value;
        *(float *)(ui_stack_parameter_longa10 + UI_GUARD_CHECK_TYPE8) = float_value;
        *(uint32_t *)(ui_stack_parameter_longa10 + UI_GUARD_CHECK_TYPEc) = UI_FLOAT_MAX_VALUE;
      }
      else {
        *(uint64_t *)(ui_stack_parameter_longa10 + UI_GUARD_CHECK_TYPE0) = 0;
        *(uint64_t *)(ui_stack_parameter_longa10 + UI_GUARD_CHECK_TYPE8) = 0;
      }
      ui_character_value = *(char *)(ui_stack_parameter_longa10 + UI_TEMP_VALUE_OFFSET);
      ui_character_value = -1;
      charuiui_stack_var_var_a47 = ui_character_value;
      if (0 < (int)ui_stack_color_data44) {
        pui_stack_temp_9e8 = (uint64_t *)(ulonglong)ui_stack_color_data44;
        do {
          ui_stack_temp_958 = (longlong)ui_character_value;
          ui_event_index = ui_stack_temp_958 * UI_GUARD_CHECK_TYPE0;
          ui_bool_result = *(byte *)(*(longlong *)(ui_parameter_value + UI_ANIMATION_DATA_OFFSET) + 0xf1 + ui_event_index);
          charuiui_stack_var_var_a47 = ui_character_value;
          if (UI_CHAR_NULL < (char)ui_bool_result) {
            ui_event_index = 0;
            ui_task_index5 = (ulonglong)ui_bool_result;
            do {
              ui_character_value = *(char *)(ui_event_index + *(longlong *)
                                          (*(longlong *)(ui_parameter_value + UI_ANIMATION_DATA_OFFSET) + 0xf8 + ui_event_index));
              if (ui_character_value != ui_character_value) {
                pui_transition_alpha_value = (float *)ui_system_cleanupuiui_stack_var_var(ui_event_index,ui_character_value,ui_parameter_value);
                ui_event_index = (longlong)ui_character_value;
                float_value = pui_transition_alpha_value[1];
                float_value = pui_transition_alpha_value[2];
                float_value = pui_transition_alpha_value[3];
                aui_stack_float_4e8[ui_event_index * 4] = *pui_transition_alpha_value;
                aui_stack_float_4e8[ui_event_index * 4 + 1] = float_value;
                *(float *)(&ui_stack_temp_4e0 + ui_event_index * 2) = float_value;
                *(float *)((longlong)&ui_stack_temp_4e0 + ui_event_index * UI_EVENT_FLAG_OFFSET + 4) = float_value;
              }
              ui_event_index = ui_event_index + 1;
              ui_task_index5 = ui_task_index5 - 1;
            } while (ui_task_index5 != 0);
          }
          pui_stack_temp_9e8 = (uint64_t *)((longlong)pui_stack_temp_9e8 - 1);
          ui_character_value = *(char *)(ui_stack_temp_958 + UI_MAX_COMPONENT_VALUE + ui_parameter_value);
          ui_character_value = charuiui_stack_var_var_a47;
        } while (pui_stack_temp_9e8 != (uint64_t *)UI_ZERO_OFFSET);
        pui_stack_temp_9e8 = (uint64_t *)UI_ZERO_OFFSET;
        charuiui_stack_var_var_a47 = ui_character_value;
      }
      ui_event_index = ui_stack_parameter_longa10;
      ui_loop_counter = ui_stack_color_data44;
      ui_stack_variable_uint_988 = ui_stack_ulong_event_id_primary8;
      ui_stack_variable_uint_980 = ui_stack_ulong_event_id_primary0;
      ui_stack_temp_978 = ui_stack_temp_valuef8;
      ui_stack_temp_970 = ui_stack_temp_valuef0;
      ui_loop_counter = (uint32_t)ui_stack_temp_valuef8;
      ui_loop_counter = ui_stack_temp_valuef8._data_size_;
      ui_loop_counter = (uint32_t)ui_stack_temp_valuef0;
      ui_loop_counter = ui_stack_temp_valuef0._data_size_;
      if (booluiui_stack_var_var_a48 != UI_COMPONENT_MAX_VALUE) {
        ui_event_buffer = (uint64_t *)ui_allocate_event_memory(&ui_stack_variable_uint_988,ui_stack_array,&ui_stack_temp_valuea8);
        ui_event_buffer = (uint64_t *)ui_system_process_widget_callback(&ui_stack_variable_uint_988,ui_stack_array,&ui_stack_temp_valueb8);
        ui_loop_counter = *(uint32_t *)ui_event_buffer;
        ui_loop_counter = *(uint32_t *)((longlong)ui_event_buffer + 4);
        ui_stack_temp_978 = *ui_event_buffer;
        ui_loop_counter = *(uint32_t *)(ui_event_buffer + 1);
        ui_loop_counter = *(uint32_t *)((longlong)ui_event_buffer + 12);
        ui_stack_temp_970 = ui_event_buffer[1];
        ui_stack_ulong_event_id_primary8 = *ui_event_buffer;
        ui_stack_ulong_event_id_primary0 = ui_event_buffer[1];
      }
      ui_stack_color_data44 = ui_loop_counter - 1;
      ui_stack_variable_uint_988 = ui_stack_ulong_event_id_primary8;
      ui_stack_variable_uint_980 = ui_stack_ulong_event_id_primary0;
      if (-1 < (int)ui_stack_color_data44) {
        ui_event_buffer = &ui_stack_temp_6e8 + (longlong)(int)ui_stack_color_data44 * 4;
        pui_stack_float_9c8 = (float *)(((longlong)(int)ui_stack_color_data44 + ELEVEN_VALUE) * UI_EVENT_FLAG_OFFSET + ui_event_index);
        do {
          ui_task_index5 = (ulonglong)ui_stack_color_data44;
          ui_character_value = *(char *)(ui_event_index + UI_TEMP_VALUE_OFFSET);
          if (0 < (int)ui_stack_color_data44) {
            do {
              ui_character_value = ui_character_value;
              ui_character_value = *(char *)((longlong)ui_character_value + UI_MAX_COMPONENT_VALUE + ui_parameter_value);
              ui_task_index5 = ui_task_index5 - 1;
            } while (ui_task_index5 != 0);
          }
          ui_event_index = (longlong)(int)ui_stack_color_data44;
          pui_stack_temp_9e8 = &ui_stack_temp_6e8 + ui_event_index * 4;
          ui_stack_variable_uint_788 = CONCAT44(ui_loop_counter,ui_loop_counter);
          ui_stack_variable_uint_780 = CONCAT44(ui_loop_counter,ui_loop_counter);
          pui_stack_variable_uint_a08 = ui_event_buffer;
          ui_stack_temp_798 = ui_stack_variable_uint_988;
          ui_stack_temp_790 = ui_stack_variable_uint_980;
          ui_event_buffer = (uint64_t *)ui_allocate_event_memory(&ui_stack_temp_798,ui_stack_array,&ui_stack_temp_6d8 + ui_event_index * 4);
          ui_event_buffer = (uint64_t *)ui_system_process_widget_callback(&ui_stack_temp_798,ui_stack_array,pui_stack_temp_9e8);
          ui_event_index = ui_stack_parameter_longa10;
          ui_stack_temp_978 = *ui_event_buffer;
          ui_stack_temp_970 = ui_event_buffer[1];
          ui_stack_variable_uint_988 = *ui_event_buffer;
          ui_stack_variable_uint_980 = ui_event_buffer[1];
          if (ui_character_value == *(char *)(ui_stack_parameter_longa10 + UI_TEMP_VALUE_OFFSET)) {
            ui_result_status = *(int *)(ui_stack_parameter_longa10 + UI_OFFSET_160);
            if (ui_result_status == 5) {
              ui_stack_variable_uint_988 = ui_stack_temp_948;
              ui_stack_variable_uint_980 = ui_stack_temp_940;
              ui_event_buffer = (uint64_t *)ui_process_event_buffer(&ui_stack_temp_798,ui_stack_array,&ui_stack_temp_978);
              ui_event_buffer = (uint32_t *)ui_system_create_event_buffer(&ui_stack_temp_798,ui_stack_array,&ui_stack_variable_uint_988);
              ui_event_id_fourth = *ui_event_buffer;
              ui_loop_counter = ui_event_buffer[1];
              ui_loop_counter = ui_event_buffer[2];
              ui_loop_counter = ui_event_buffer[3];
              *(uint32_t *)ui_event_buffer = *ui_event_buffer;
              *(uint32_t *)((longlong)ui_event_buffer + 4) = ui_loop_counter;
              *(uint32_t *)(ui_event_buffer + 1) = ui_loop_counter;
              *(uint32_t *)((longlong)ui_event_buffer + 12) = ui_loop_counter;
              ui_event_buffer[2] = ui_event_id_fourth;
              ui_event_buffer[3] = ui_loop_counter;
            }
            else {
              if (ui_result_status == 6) {
                ui_stack_variable_uint_988 = *(uint64_t *)(ui_stack_parameter_longa10 + UI_OFFSET_32);
                ui_stack_variable_uint_980 = *(uint64_t *)(ui_stack_parameter_longa10 + UI_CALLBACK_HANDLER_OFFSET);
              }
              else if (ui_result_status == 3) {
                ui_stack_variable_uint_988 = *(uint64_t *)(ui_stack_parameter_longa10 + UI_OFFSET_32);
                ui_stack_variable_uint_980 = *(uint64_t *)(ui_stack_parameter_longa10 + UI_CALLBACK_HANDLER_OFFSET);
                if (0.0 < *(float *)(ui_stack_parameter_longa10 + UI_MEMORY_ALLOC_SIZE)) {
                  pui_transition_alpha_value = (float *)ui_allocate_event_memory(&ui_stack_variable_uint_988,ui_stack_array,&ui_stack_temp_998);
                  float_value = *pui_transition_alpha_value;
                  float_value = *(float *)(ui_stack_parameter_longe8 + UI_MEMORY_ALLOC_SIZE);
                  float_value = *(float *)(ui_stack_parameter_longe8 + UI_EVENT_ID_OFFSET);
                  float_value = *(float *)(ui_stack_parameter_longe8 + UI_MEMORY_DEALLOC_OFFSET);
                  float_value = pui_transition_alpha_value[1];
                  float_value = pui_transition_alpha_value[2];
                  ui_event_id_fourth = ui_system_get_widget_event_id(&ui_stack_temp_9a8,ui_stack_array);
                  ui_initialize_event_structure(&ui_stack_variable_uint_988,aui_stack_float_898,ui_event_id_fourth);
                  ui_stack_temp_valuec4 = UI_FLOAT_MAX_VALUE;
                  ui_stack_float_8d0 = *(float *)(ui_event_index + UI_EVENT_FLAG_OFFSET) - ((float_value - float_value) * ui_stack_float_968 + float_value)
                  ;
                  ui_stack_float_8cc = *(float *)(ui_event_index + UI_SHIFT_AMOUNT_20) - ((float_value - float_value) * ui_stack_float_968 + float_value)
                  ;
                  ui_stack_float_8c8 = *(float *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS) - ((float_value - float_value) * ui_stack_float_968 + float_value)
                  ;
                  ui_get_event_index(&ui_stack_float_8d0,ui_stack_array);
                  ui_system_calculate_widget_transform(aui_stack_float_898,&ui_stack_color_data28,ui_stack_array);
                  if ((((float)ui_stack_color_data28 != 0.0) || (ui_stack_color_data28._data_size_ != 0.0)) ||
                     ((float)ui_stack_color_data20 != 0.0)) {
                    float_value = ui_stack_color_data28._data_size_ * ui_stack_color_data28._data_size_ +
                             (float)ui_stack_color_data28 * (float)ui_stack_color_data28 +
                             (float)ui_stack_color_data20 * (float)ui_stack_color_data20;
                    ui_temp_buffer = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
                    float_value = ui_temp_buffer._data_offset_;
                    float_value = float_value * 0.5 * (3.0 - float_value * float_value * float_value);
                    ui_stack_color_data28 = CONCAT44(ui_stack_color_data28._data_size_ * float_value,(float)ui_stack_color_data28 * float_value);
                    ui_stack_color_data20 = CONCAT44(ui_stack_color_data20._data_size_,(float)ui_stack_color_data20 * float_value);
                    asinf();
                    ui_update_event_metrics(ui_stack_array,&ui_stack_color_data28);
                    ui_event_buffer = (uint64_t *)ui_system_process_widget_callback(ui_stack_array,ui_stack_array,&ui_stack_variable_uint_988)
                    ;
                    ui_stack_variable_uint_988 = *ui_event_buffer;
                    ui_stack_variable_uint_980 = ui_event_buffer[1];
                  }
                }
              }
              else {
                ui_stack_variable_uint_988 = ui_stack_temp_948;
                ui_stack_variable_uint_980 = ui_stack_temp_940;
              }
              ui_event_buffer = (uint64_t *)ui_process_event_buffer(&ui_stack_temp_798,ui_stack_array,&ui_stack_temp_978);
              ui_event_buffer = (uint32_t *)ui_system_create_event_buffer(&ui_stack_temp_798,ui_stack_array,&ui_stack_variable_uint_988);
              ui_event_id_fourth = *ui_event_buffer;
              ui_loop_counter = ui_event_buffer[1];
              ui_loop_counter = ui_event_buffer[2];
              ui_loop_counter = ui_event_buffer[3];
              *(uint32_t *)ui_event_buffer = *ui_event_buffer;
              *(uint32_t *)((longlong)ui_event_buffer + 4) = ui_loop_counter;
              *(uint32_t *)(ui_event_buffer + 1) = ui_loop_counter;
              *(uint32_t *)((longlong)ui_event_buffer + 12) = ui_loop_counter;
              ui_event_buffer[2] = ui_event_id_fourth;
              ui_event_buffer[3] = ui_loop_counter;
            }
          }
          ui_stack_temp_938 = *ui_event_buffer;
          ui_stack_temp_930 = ui_event_buffer[1];
          ui_system_process_event_data(&ui_stack_temp_938);
          ui_event_index = (longlong)ui_character_value;
          ui_system_create_event_buffer(ui_event_index + 0x820 + ui_event_index * UI_EVENT_FLAG_OFFSET,&ui_stack_temp_958,&ui_stack_temp_938);
          if ((*(float *)(ui_stack_parameter_longa10 + UI_SYSTEM_CALLBACK_TYPEc) <= 30.0 && *(float *)(ui_stack_parameter_longa10 + UI_SYSTEM_CALLBACK_TYPEc) != 30.0) &&
             (ui_character_value != *(char *)(ui_stack_parameter_longa10 + UI_TEMP_VALUE_OFFSET))) {
            ui_system_create_event_buffer((ui_event_index + ELEVEN_VALUE) * UI_EVENT_FLAG_OFFSET + ui_stack_parameter_longa10,ui_stack_array,&ui_stack_temp_958);
            ui_update_event_statistics(&ui_stack_temp_value28,&ui_stack_float_a14,ui_stack_array);
            if (3.1415927 < ui_stack_float_a14) {
              ui_stack_float_a14 = 6.2831855 - ui_stack_float_a14;
            }
            float_value = ui_parameter_value * *(float *)(ui_stack_parameter_longa10 + UI_SYSTEM_CALLBACK_TYPEc);
            if (float_value < ui_stack_float_a14) {
              float_value = float_value / ui_stack_float_a14;
              if (0.001 <= float_value) {
                if (float_value <= 0.999) {
                  ui_stack_temp_7a8 = UI_FLOAT_NEGATIVE_ONE;
                  ui_stack_temp_7a4 = UI_FLOAT_NEGATIVE_ONE;
                  ui_stack_temp_7a0 = UI_FLOAT_NEGATIVE_ONE;
                  ui_stack_temp_79c = UI_FLOAT_NEGATIVE_ONE;
                  float_value = *pui_stack_float_9c8;
                  float_value = pui_stack_float_9c8[1];
                  float_value = pui_stack_float_9c8[2];
                  float_value = pui_stack_float_9c8[3];
                  float_value = ui_stack_float_950 * float_value;
                  float_value = ui_stack_float_94c * float_value;
                  ui_temp_buffer._data_offset_ = float_value + (float)ui_stack_temp_958._data_offset_ * float_value;
                  ui_temp_buffer._data_size_ = float_value + ui_stack_temp_958._data_size_ * float_value;
                  ui_temp_buffer._data_format_ = float_value + float_value;
                  ui_temp_buffer._data_flags_ = float_value + float_value;
                  ui_temp_buffer._4_12_ = ui_temp_buffer._4_12_;
                  ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + ui_temp_buffer._data_size_;
                  ui_stack_temp_7b0 = UI_BIT_SHIFT_638000003f800000;
                  _aui_stack_temp_7b8 = UI_BIT_SHIFT_638000003f800000;
                  ui_loop_counter = movmskps((int)pui_stack_float_9c8,ui_temp_buffer);
                  ui_event_index = (ulonglong)(ui_loop_counter & 1) * UI_EVENT_FLAG_OFFSET;
                  float_value = *(float *)(ui_stack_array + ui_event_index) * (float)ui_stack_temp_958._data_offset_;
                  float_value = *(float *)(ui_stack_array + ui_event_index + 4) * ui_stack_temp_958._data_size_;
                  float_value = *(float *)(ui_stack_array + ui_event_index + 8) * ui_stack_float_950;
                  float_value = *(float *)(ui_stack_array + ui_event_index + 12) * ui_stack_float_94c;
                  if (0.9995 < ABS(ui_temp_buffer._data_offset_)) {
                    float_value = 1.0 - float_value;
                    ui_stack_float_7b4 = float_value * float_value + float_value * float_value;
                    ui_stack_array = (uint8_t  [4])(float_value * float_value + float_value * float_value);
                    ui_stack_temp_7b0._data_offset_ = float_value * float_value + float_value * float_value;
                    ui_stack_temp_7b0._data_size_ = float_value * float_value + float_value * float_value;
                    ui_system_process_event_data(ui_stack_array);
                    ui_stack_temp_958._data_offset_ = ui_stack_array;
                    ui_stack_temp_958._data_size_ = ui_stack_float_7b4;
                    ui_stack_float_950 = (float)ui_stack_temp_7b0;
                    ui_stack_float_94c = ui_stack_temp_7b0._data_size_;
                  }
                  else {
                    acosf();
                    float_value = (float)sinf();
                    float_value = float_value * (1.0 / float_value);
                    float_value = (float)sinf();
                    float_value = float_value * (1.0 / float_value);
                    ui_stack_temp_958._data_offset_ = (uint8_t  [4])(float_value * float_value + float_value * float_value);
                    ui_stack_temp_958._data_size_ = float_value * float_value + float_value * float_value;
                    ui_stack_float_950 = float_value * float_value + float_value * float_value;
                    ui_stack_float_94c = float_value * float_value + float_value * float_value;
                  }
                }
              }
              else {
                ui_stack_temp_958._data_offset_ = (uint8_t  [4])*pui_stack_float_9c8;
                ui_stack_temp_958._data_size_ = pui_stack_float_9c8[1];
                ui_stack_float_950 = pui_stack_float_9c8[2];
                ui_stack_float_94c = pui_stack_float_9c8[3];
              }
              ui_event_buffer = (uint64_t *)
                        ui_system_process_widget_callback((ui_event_index + 0x82) * UI_EVENT_FLAG_OFFSET + ui_event_index,ui_stack_array,&ui_stack_temp_958)
              ;
              ui_stack_temp_938 = *ui_event_buffer;
              ui_stack_temp_930 = ui_event_buffer[1];
              *pui_stack_variable_uint_a08 = ui_stack_temp_938;
              pui_stack_variable_uint_a08[1] = ui_stack_temp_930;
              ui_event_buffer = (uint64_t *)ui_process_event_queue_item(&ui_stack_temp_798,ui_stack_array,pui_stack_temp_9e8);
              ui_stack_variable_uint_988 = *ui_event_buffer;
              ui_stack_variable_uint_980 = ui_event_buffer[1];
              ui_stack_temp_978 = ui_event_buffer[2];
              ui_stack_temp_970 = ui_event_buffer[3];
            }
          }
          pui_transition_alpha_value = pui_stack_float_9c8;
          *(longlong *)pui_stack_float_9c8 = ui_stack_temp_958;
          *(ulonglong *)(pui_stack_float_9c8 + 2) = CONCAT44(ui_stack_float_94c,ui_stack_float_950);
          ui_loop_counter = ui_system_create_event_buffer(&ui_stack_ulong_event_id_primary8,&ui_stack_float_918,&ui_stack_variable_uint_988);
          float_value = ui_stack_float_a18;
          pui_transition_alpha_value[UI_OFFSET_32] = ui_stack_float_918;
          pui_transition_alpha_value[UI_SYSTEM_STATE_OFFSET] = ui_stack_float_914;
          pui_transition_alpha_value[UI_WIDGET_STATE_OFFSET] = ui_stack_float_910;
          pui_transition_alpha_value[0x23] = ui_stack_float_90c;
          if (1.0 <= ui_stack_float_a18) {
            ui_process_ui_event(ui_event_index,ui_character_value,&ui_stack_float_918,ui_parameter_value);
            if (ui_character_value == UI_CHAR_NULL) {
              ui_event_id_fourth = *(uint64_t *)(ui_event_index + 0x1028);
              float_value = (float)*(uint64_t *)(ui_event_index + 0x1020) + (float)ui_stack_array._data_offset_;
              ui_stack_float_7b4 = (float)((ulonglong)*(uint64_t *)(ui_event_index + 0x1020) >> UI_OFFSET_32);
              ui_stack_temp_7b0._data_offset_ = (float)ui_event_id_fourth;
              ui_stack_temp_7b0._data_size_ = (float)((ulonglong)ui_event_id_fourth >> UI_OFFSET_32);
              ui_temp_buffer._4_8_ = ui_event_id_fourth;
              ui_temp_buffer._data_offset_ = ui_stack_float_7b4;
              ui_temp_buffer._0_8_ = ui_temp_buffer._0_8_ << UI_OFFSET_32;
              ui_temp_buffer._data_format_ = (float)ui_stack_temp_7b0;
              ui_temp_buffer._data_flags_ = ui_stack_temp_7b0._data_size_;
              ui_temp_buffer._4_8_ = ui_temp_buffer._8_8_;
              ui_temp_buffer._data_offset_ = float_value;
              ui_temp_buffer._0_8_ = ui_temp_buffer._0_8_ << UI_OFFSET_32;
              ui_temp_buffer._data_format_ = (float)ui_stack_temp_7b0;
              ui_temp_buffer._data_flags_ = ui_stack_temp_7b0._data_size_;
              ui_temp_buffer._4_8_ = ui_temp_buffer._8_8_;
              ui_temp_buffer._data_offset_ = float_value;
              ui_temp_buffer._0_8_ = ui_temp_buffer._0_8_ << UI_OFFSET_32;
              ui_temp_buffer._data_format_ = ui_stack_float_7b4 + (float)ui_stack_array._data_size_;
              ui_temp_buffer._data_flags_ = ui_stack_temp_7b0._data_size_;
              ui_temp_buffer._4_12_ = ui_temp_buffer._4_12_;
              ui_temp_buffer._data_offset_ = (float)ui_stack_temp_7b0 + ui_stack_float_9b8;
              goto UI_LABEL_GENERIC_667308;
            }
          }
          else {
            if (0.001 <= ui_stack_float_a18) {
              if (ui_stack_float_a18 <= 0.999) {
                float_value = aui_stack_float_4e8[ui_event_index * 4];
                float_value = aui_stack_float_4e8[ui_event_index * 4 + 1];
                float_value = *(float *)(&ui_stack_temp_4e0 + ui_event_index * 2);
                float_value = *(float *)((longlong)&ui_stack_temp_4e0 + ui_event_index * UI_EVENT_FLAG_OFFSET + 4);
                float_value = ui_stack_float_910 * float_value;
                float_value = ui_stack_float_90c * float_value;
                ui_stack_temp_7a8 = UI_FLOAT_NEGATIVE_ONE;
                ui_stack_temp_7a4 = UI_FLOAT_NEGATIVE_ONE;
                ui_stack_temp_7a0 = UI_FLOAT_NEGATIVE_ONE;
                ui_stack_temp_79c = UI_FLOAT_NEGATIVE_ONE;
                ui_temp_buffer._data_offset_ = float_value + ui_stack_float_918 * float_value;
                ui_temp_buffer._data_size_ = float_value + ui_stack_float_914 * float_value;
                ui_temp_buffer._data_format_ = float_value + float_value;
                ui_temp_buffer._data_flags_ = float_value + float_value;
                ui_temp_buffer._4_12_ = ui_temp_buffer._4_12_;
                ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + ui_temp_buffer._data_size_;
                ui_stack_temp_7b0 = UI_BIT_SHIFT_638000003f800000;
                _aui_stack_temp_7b8 = UI_BIT_SHIFT_638000003f800000;
                ui_loop_counter = movmskps(ui_loop_counter,ui_temp_buffer);
                ui_event_index = (ulonglong)(ui_loop_counter & 1) * UI_EVENT_FLAG_OFFSET;
                float_value = *(float *)(ui_stack_array + ui_event_index) * ui_stack_float_918;
                float_value = *(float *)(ui_stack_array + ui_event_index + 4) * ui_stack_float_914;
                float_value = *(float *)(ui_stack_array + ui_event_index + 8) * ui_stack_float_910;
                float_value = *(float *)(ui_stack_array + ui_event_index + 12) * ui_stack_float_90c;
                if (0.9995 < ABS(ui_temp_buffer._data_offset_)) {
                  float_value = 1.0 - ui_stack_float_a18;
                  ui_stack_float_7b4 = float_value * float_value + ui_stack_float_a18 * float_value;
                  ui_stack_array = (uint8_t  [4])(float_value * float_value + ui_stack_float_a18 * float_value);
                  ui_stack_temp_7b0._data_offset_ = float_value * float_value + ui_stack_float_a18 * float_value;
                  ui_stack_temp_7b0._data_size_ = float_value * float_value + ui_stack_float_a18 * float_value;
                  ui_system_process_event_data(ui_stack_array);
                  ui_temp_buffer = ui_stack_array;
                  float_value = ui_stack_float_7b4;
                  float_value = (float)ui_stack_temp_7b0;
                  float_value = ui_stack_temp_7b0._data_size_;
                }
                else {
                  acosf();
                  float_value = (float)sinf();
                  float_value = float_value * (1.0 / float_value);
                  float_value = (float)sinf();
                  float_value = float_value * (1.0 / float_value);
                  ui_temp_buffer = (uint8_t  [4])(float_value * float_value + float_value * float_value);
                  float_value = float_value * float_value + float_value * float_value;
                }
                ui_stack_temp_9d8 = CONCAT44(float_value,ui_temp_buffer);
                ui_stack_temp_9d0 = CONCAT44(float_value,float_value);
              }
              else {
                ui_stack_temp_9d8 = CONCAT44(ui_stack_float_914,ui_stack_float_918);
                ui_stack_temp_9d0 = CONCAT44(ui_stack_float_90c,ui_stack_float_910);
              }
            }
            else {
              ui_stack_temp_9d8 = *(uint64_t *)(aui_stack_float_4e8 + ui_event_index * 4);
              ui_stack_temp_9d0 = (&ui_stack_temp_4e0)[ui_event_index * 2];
            }
            ui_system_process_event_data(&ui_stack_temp_9d8);
            ui_process_ui_event(ui_event_index,ui_character_value,&ui_stack_temp_9d8,ui_parameter_value);
            if (ui_character_value == UI_CHAR_NULL) {
              float_value = *(float *)(ui_event_index + 0x1028);
              ui_loop_counter = *(uint32_t *)(ui_event_index + 0x102c);
              ui_temp_buffer._4_8_ = ui_stack_temp_7b0;
              ui_temp_buffer._data_offset_ = *(float *)(ui_event_index + 0x1024);
              _aui_stack_temp_7b8 = ui_temp_buffer._0_8_ << UI_OFFSET_32;
              ui_stack_temp_7b0._data_offset_ = float_value;
              ui_stack_temp_7b0._data_size_ = (float)ui_loop_counter;
              float_value = (float)ui_stack_array._data_offset_ * float_value + *(float *)(ui_event_index + 0x1020);
              aui_event_id._4_8_ = ui_stack_array._8_8_;
              aui_event_id._data_offset_ = float_value;
              ui_temp_buffer._0_8_ = aui_event_id._0_8_ << UI_OFFSET_32;
              ui_temp_buffer._data_format_ = float_value;
              ui_temp_buffer._data_flags_ = ui_loop_counter;
              aui_task_index._4_8_ = ui_temp_buffer._8_8_;
              aui_task_index._data_offset_ = float_value;
              ui_temp_buffer._0_8_ = aui_task_index._0_8_ << UI_OFFSET_32;
              ui_temp_buffer._data_format_ = *(float *)(ui_event_index + 0x1024) + (float)ui_stack_array._data_size_ * float_value;
              ui_temp_buffer._data_flags_ = ui_loop_counter;
              ui_temp_buffer._4_12_ = ui_temp_buffer._4_12_;
              ui_temp_buffer._data_offset_ = float_value + float_value * ui_stack_float_9b8;
UI_LABEL_GENERIC_667308:
              *(ulonglong *)(ui_event_index + UI_STACK_SIZE_1280) =
                   *(ulonglong *)(ui_event_index + UI_STACK_SIZE_1280) | *(ulonglong *)(ui_event_index + 0x810);
              ui_stack_temp_7b0._data_size_ = ui_temp_buffer._data_flags_;
              _aui_stack_temp_7b8 = ui_temp_buffer._4_8_;
              ui_stack_temp_7b0._data_offset_ = (float)ui_temp_buffer._data_offset_;
              *(uint8_t (*) [16])(ui_event_index + 0x1020) = _aui_stack_temp_7b8;
            }
          }
          ui_bool_result = *(byte *)(*(longlong *)(ui_parameter_value + UI_ANIMATION_DATA_OFFSET) + 0xf1 + ui_event_index * UI_GUARD_CHECK_TYPE0);
          if ('\x01' < (char)ui_bool_result) {
            ui_event_index = 0;
            ui_task_index5 = (ulonglong)ui_bool_result;
            do {
              ui_character_value = *(char *)(ui_event_index + *(longlong *)
                                          (*(longlong *)(ui_parameter_value + UI_ANIMATION_DATA_OFFSET) + 0xf8 + ui_event_index * UI_GUARD_CHECK_TYPE0));
              if (ui_character_value != ui_character_value) {
                ui_process_ui_event(ui_event_index,ui_character_value,aui_stack_float_4e8 + (longlong)ui_character_value * 4,ui_parameter_value);
              }
              ui_event_index = ui_event_index + 1;
              ui_task_index5 = ui_task_index5 - 1;
            } while (ui_task_index5 != 0);
          }
          pui_stack_float_9c8 = pui_transition_alpha_value + -4;
          ui_stack_color_data44 = ui_stack_color_data44 - 1;
          ui_event_buffer = pui_stack_variable_uint_a08 + -4;
          pui_stack_variable_uint_a08 = ui_event_buffer;
          if ((int)ui_stack_color_data44 < 0) break;
          ui_event_index = ui_stack_parameter_longa10;
          ui_loop_counter = (uint32_t)ui_stack_temp_978;
          ui_loop_counter = ui_stack_temp_978._data_size_;
          ui_loop_counter = (uint32_t)ui_stack_temp_970;
          ui_loop_counter = ui_stack_temp_970._data_size_;
        } while( true );
      }
    }
  }
UI_LABEL_GENERIC_6659c4:
  RenderUIComponent(ui_stack_temp_e8 ^ (ulonglong)ui_stack_array);
}

void ui_system_reset_animation_timer(void)

{
  uint inuiui_stack_var_var_00000070;
  
  ProcessUIRenderCommand(inuiui_stack_var_var_00000070 ^ UI_STACK_SIZE_128000000);
}

void ui_system_clear_animation_cache(void)

{
  longlong ui_long_counter;
  longlong ui_system_register_long;
  
  *(longlong *)(ui_system_register + UI_SNAPSHOT_CREATE_FLAGS) = ui_system_register;
  ui_long_counter = ui_system_register + -UI_CALLBACK_HANDLER_OFFSET;
  do {
    ui_system_initialize_widget_context(ui_long_counter);
    ui_long_counter = ui_long_counter + 8;
    ui_system_register = ui_system_register + -1;
  } while (ui_system_register != 0);
  ProcessUIRenderCommand();
}

void ui_system_free_animation_resources(void)

{
  return ui_system_return_value;
}

uint64_t ui_system_create_widget_instance(longlong ui_callback,uint64_t ui_event_type)

{
  ui_system_reset_widget_animation(*(uint64_t *)(ui_callback + UI_NETWORK_RESOURCE_TYPE58));
  return return ui_event_type;
}

uint64_t *
ui_system_destroy_widget_instance(uint64_t *ui_callback,ulonglong ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  *ui_callback = &ui_widget_manager;
  if ((ui_event_type & 1) != 0) {
    ui_memory_free(ui_callback,UI_BUFFER_SIZE_64,ui_event_data,ui_event_flags,UI_BIT_MASK_32BIT_FULLfffffffe);
  }
  return return ui_callback;
}

void ui_system_initialize_widget_properties(longlong ui_callback,longlong ui_event_type,longlong ui_event_data,uint64_t ui_event_flags,
                  char ui_parameter_value,uint8_t ui_parameter_value,char ui_parameter_value,float ui_parameter_value,char ui_parameter_value,
                  float ui_callback_primary)

{
  longlong ui_long_counter;
  longlong ui_event_index;
  bool ui_bool_result;
  int ui_result_status;
  char ui_character_value;
  ulonglong ui_temp_ulong;
  uint ui_loop_counter;
  uint *ui_callback_ptr;
  longlong long_counter0;
  ulonglong ui_event_id1;
  bool boolean_flag2;
  float ui_widget_height;
  float ui_animation_progress;
  uint8_t aui_event_id_fifth [16];
  float ui_scale_factor;
  float ui_rotation_angle;
  float ui_opacity_value;
  float ui_z_depth;
  float ui_temp_float;
  float ui_distance_delta;
  uint8_t ui_stack_array [32];
  uint32_t ui_stack_temp_offset_228;
  uint8_t ui_stack_temp_offset_220;
  char ui_stack_character_primary;
  char ui_stack_character_secondary;
  char ui_stack_character_ternary;
  uint8_t ui_stack_temp_offset_215;
  float ui_stack_float_offset_208;
  float ui_stack_float_offset_204;
  float ui_stack_float_offset_200;
  uint32_t ui_stack_temp_offset_1fc;
  float ui_stack_float_offset_1f8;
  float ui_stack_float_offset_1f4;
  float ui_stack_float_offset_1f0;
  uint32_t ui_stack_temp_offset_1ec;
  float ui_stack_float_offset_1e8;
  float ui_stack_float_1e4;
  float ui_stack_float_1e0;
  uint32_t ui_stack_temp_1dc;
  float ui_stack_float_1d8;
  float ui_stack_float_1d4;
  longlong ui_stack_parameter_longd0;
  float ui_stack_rotation_angle;
  float ui_stack_float_value_secondary;
  float ui_stack_float_value_tertiary;
  float ui_stack_float_value_quaternary;
  float ui_stack_scale_factor;
  uint64_t ui_stack_temp_1b0;
  uint8_t ui_stack_array [16];
  uint64_t ui_stack_data_control_value;
  uint32_t ui_stack_data_control_tertiary;
  uint8_t ui_stack_array [16];
  uint64_t ui_stack_variable_callback_data;
  uint64_t ui_stack_variable_event_id;
  uint64_t ui_stack_color_data;
  uint64_t ui_stack_animation_duration;
  float ui_stack_float_158;
  uint8_t ui_stack_vertex_offset;
  uint64_t ui_stack_variable_widget_manager_ptr;
  uint8_t ui_stack_array [16];
  uint64_t ui_stack_temp_138;
  uint64_t ui_stack_position_data;
  uint64_t ui_stack_temp_128;
  uint64_t ui_stack_temp_var_120;
  float ui_stack_float_118;
  uint8_t ui_stack_temp_114;
  uint64_t ui_stack_temp_110;
  uint64_t ui_stack_variable_uint_108;
  float ui_stack_float_100;
  float ui_stack_float_fc;
  uint ui_stack_temp_f8;
  uint ui_stack_temp_f4;
  ulonglong ui_stack_temp_f0;
  ulonglong ui_temp_ulong;
  
  ui_stack_variable_widget_manager_ptr = UI_BIT_MASK_32BIT_FULLfffffffe;
  ui_stack_temp_f0 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_stack_temp_offset_215 = ui_parameter_value;
  ui_stack_character_primary = ui_parameter_value;
  ui_long_counter = *(longlong *)(ui_event_data + UI_EVENT_FLAG_OFFSET);
  ui_stack_parameter_longd0 = *(longlong *)(ui_long_counter + UI_OFFSET_32);
  if ((ui_stack_parameter_longd0 == 0) || (*(char *)(ui_stack_parameter_longd0 + 0x2900) != UI_CHAR_NULL)) {
    boolean_flag2 = false;
  }
  else {
    boolean_flag2 = true;
  }
  ui_event_index = *(longlong *)(ui_event_data + UI_OFFSET_328);
  ui_stack_temp_1b0 = ui_event_flags;
  if (((ui_parameter_value < '\x01') || (ui_parameter_value <= 0.0)) || (!boolean_flag2)) {
    ui_animation_progress = *(float *)(ui_event_data + UI_MEMORY_DEALLOC_OFFSET);
    float_value = ui_animation_progress;
    if (0.0 < *(float *)(ui_callback + UI_EVENT_COUNTER_OFFSET)) {
      float_value = ui_animation_progress / *(float *)(ui_callback + UI_EVENT_COUNTER_OFFSET);
    }
    float_value = -*(float *)(ui_callback + 8);
    ui_widget_height_val = -float_value;
    if ((-float_value <= float_value) && (ui_widget_height_val = float_value, float_value <= float_value)) {
      ui_widget_height_val = float_value;
    }
    ui_widget_height_val = ui_widget_height_val + *(float *)(ui_callback + 8);
    *(float *)(ui_callback + 8) = ui_widget_height_val;
    float_value = -*(float *)(ui_callback + UI_SHIFT_AMOUNT_20);
    float_value = ui_animation_progress * -2.0;
    if ((ui_animation_progress * -2.0 <= float_value) && (float_value = ui_animation_progress + ui_animation_progress, float_value <= ui_animation_progress + ui_animation_progress)) {
      float_value = float_value;
    }
    float_value = float_value + *(float *)(ui_callback + UI_SHIFT_AMOUNT_20);
    *(uint32_t *)(ui_callback + 12) = 0;
  }
  else {
    ui_animation_progress = *(float *)(ui_callback + UI_MEMORY_DEALLOC_OFFSET);
    float_value = *(float *)(ui_long_counter + UI_OFFSET_136) * ui_animation_progress + *(float *)(ui_long_counter + UI_OFFSET_168);
    ui_stack_float_offset_1f4 = *(float *)(ui_long_counter + UI_WIDGET_ITEM_SIZE) * ui_animation_progress + *(float *)(ui_long_counter + UI_TEMP_VALUE_OFFSET);
    ui_stack_float_offset_1f8 = *(float *)(ui_long_counter + UI_STACK_SIZE_128) * ui_animation_progress + *(float *)(ui_long_counter + UI_OFFSET_160);
    ui_stack_temp_offset_1ec = UI_FLOAT_MAX_VALUE;
    ui_animation_progress = *(float *)(ui_callback + UI_OFFSET_60);
    ui_stack_float_1e0 = ui_animation_progress * *(float *)(ui_long_counter + UI_OFFSET_136) + *(float *)(ui_long_counter + UI_OFFSET_168);
    ui_stack_float_1e4 = ui_animation_progress * *(float *)(ui_long_counter + UI_WIDGET_ITEM_SIZE) + *(float *)(ui_long_counter + UI_TEMP_VALUE_OFFSET);
    ui_stack_float_offset_1e8 = ui_animation_progress * *(float *)(ui_long_counter + UI_STACK_SIZE_128) + *(float *)(ui_long_counter + UI_OFFSET_160);
    ui_stack_temp_1dc = UI_FLOAT_MAX_VALUE;
    ui_animation_progress = *(float *)(ui_event_data + UI_MEMORY_DEALLOC_OFFSET);
    ui_widget_height_val = *(float *)(ui_callback + UI_OFFSET_32) - ui_animation_progress;
    *(float *)(ui_callback + UI_OFFSET_32) = ui_widget_height_val;
    ui_loop_counter = 0;
    if (ui_widget_height_val < 0.0) {
      *(float *)(ui_callback + UI_OFFSET_32) = (1.0 - ui_callback_primary) * 0.3;
      ui_stack_vertex_offset = 0;
      ui_stack_variable_callback_data = 0;
      ui_stack_variable_event_id = UI_FLOAT_MAX_VALUE3f800000;
      ui_stack_float_158 = 0.0;
      ui_stack_color_data = 0;
      ui_stack_animation_duration = 0;
      ui_stack_temp_offset_220 = 0;
      ui_stack_temp_offset_228 = 0x51b189;
      ui_stack_float_offset_1f0 = float_value;
      ui_process_ui_command(ui_stack_parameter_longd0,&ui_stack_float_offset_1f8,ui_event_data,ui_stack_array);
      float_value = ui_stack_float_offset_1f0;
      *(float *)(ui_callback + UI_CALLBACK_HANDLER_OFFSET) = ui_stack_float_158 - ui_stack_float_offset_1f0;
      ui_widget_height_val = ABS(ui_stack_float_158 - ui_stack_float_offset_1f0);
      if (*(float *)(ui_callback + UI_EVENT_COUNTER_OFFSET) <= ui_widget_height_val && ui_widget_height_val != *(float *)(ui_callback + UI_EVENT_COUNTER_OFFSET)) {
        *(uint32_t *)(ui_callback + UI_CALLBACK_HANDLER_OFFSET) = 0;
      }
      ui_stack_temp_offset_220 = 0;
      ui_stack_temp_offset_228 = 0x51b189;
      ui_process_ui_command();
      *(float *)(ui_callback + UI_MEMORY_ALLOC_SIZE) = ui_stack_float_158 - ui_stack_float_1e0;
      ui_widget_height_val = ABS(ui_stack_float_158 - ui_stack_float_1e0);
      if (*(float *)(ui_callback + UI_EVENT_COUNTER_OFFSET) <= ui_widget_height_val && ui_widget_height_val != *(float *)(ui_callback + UI_EVENT_COUNTER_OFFSET)) {
        *(uint32_t *)(ui_callback + UI_MEMORY_ALLOC_SIZE) = 0;
      }
    }
    ui_stack_float_offset_1f0 = *(float *)(ui_callback + UI_CALLBACK_HANDLER_OFFSET) - *(float *)(ui_callback + UI_OPERATION_RESULT_OFFSET);
    ui_distance_delta = ui_animation_progress + ui_animation_progress;
    float_value = ui_animation_progress * 6.0;
    if (ui_distance_delta <= ABS(ui_stack_float_offset_1f0)) {
      ui_widget_height_val = float_value;
      if (1.0 <= float_value) {
        ui_widget_height_val = 1.0;
      }
      ui_stack_float_offset_1f0 = ui_stack_float_offset_1f0 * (1.0 - ui_widget_height_val);
    }
    else {
      ui_stack_float_offset_1f0 = 0.0;
    }
    ui_stack_float_offset_1f0 = *(float *)(ui_callback + UI_CALLBACK_HANDLER_OFFSET) - ui_stack_float_offset_1f0;
    *(float *)(ui_callback + UI_OPERATION_RESULT_OFFSET) = ui_stack_float_offset_1f0;
    ui_widget_height_val = *(float *)(ui_callback + UI_MEMORY_ALLOC_SIZE) - *(float *)(ui_callback + UI_EVENT_ID_OFFSET);
    if (ui_distance_delta <= ABS(ui_widget_height_val)) {
      ui_scale_factor_val = float_value;
      if (1.0 <= float_value) {
        ui_scale_factor_val = 1.0;
      }
      ui_widget_height_val = ui_widget_height_val * (1.0 - ui_scale_factor_val);
    }
    else {
      ui_widget_height_val = 0.0;
    }
    ui_widget_height_val = *(float *)(ui_callback + UI_MEMORY_ALLOC_SIZE) - ui_widget_height_val;
    *(float *)(ui_callback + UI_EVENT_ID_OFFSET) = ui_widget_height_val;
    ui_stack_float_offset_1f0 = float_value + ui_stack_float_offset_1f0;
    ui_stack_float_1e0 = ui_stack_float_1e0 + ui_widget_height_val;
    float_value = ui_stack_float_offset_1f0 - ui_stack_float_1e0;
    ui_stack_float_1d8 = ui_stack_float_offset_1f4 - ui_stack_float_1e4;
    ui_stack_float_1d4 = ui_stack_float_offset_1f8 - ui_stack_float_offset_1e8;
    ui_widget_height_val = ui_stack_float_1d4 * ui_stack_float_1d4 + ui_stack_float_1d8 * ui_stack_float_1d8;
    ui_stack_scale_factor = float_value / SQRT(float_value * float_value + ui_widget_height_val);
    if (ui_parameter_value != UI_CHAR_NULL) {
      ui_opacity_value = -(ui_stack_float_1d4 * float_value);
      ui_rotation_angle_value = -(ui_stack_float_1d8 * float_value);
      float_value = ui_widget_height_val * ui_widget_height_val + ui_rotation_angle_value * ui_rotation_angle_value + ui_opacity_value * ui_opacity_value;
      aui_event_id_fifth = rsqrtss(ZEXT416((uint)float_value),ZEXT416((uint)float_value));
      ui_scale_factor_val = aui_event_id_fifth._data_offset_;
      ui_z_depth_value = ui_scale_factor_val * 0.5 * (3.0 - float_value * ui_scale_factor_val * ui_scale_factor_val);
      ui_opacity_value = ui_z_depth_value * ui_opacity_value;
      ui_rotation_angle_value = ui_z_depth_value * ui_rotation_angle_value;
      ui_z_depth_value = ui_z_depth_value * ui_widget_height_val;
      ui_stack_array = ZEXT416(0);
      ui_stack_data_control_value = 0;
      ui_stack_data_control_tertiary = 3;
      ui_set_event_flag(*(uint64_t *)(ui_event_data + UI_EVENT_FLAG_OFFSET),ui_stack_array,1,UI_BIT_MASK_32BIT_FULL);
      ui_event_id1 = (longlong)(ui_stack_array._8_8_ - ui_stack_array._0_8_) >> 3;
      long_counter0 = *(longlong *)(ui_event_data + UI_EVENT_FLAG_OFFSET);
      float_value = *(float *)(long_counter0 + UI_OFFSET_168);
      ui_widget_height_val = *(float *)(long_counter0 + UI_TEMP_VALUE_OFFSET);
      ui_scale_factor_val = *(float *)(long_counter0 + UI_OFFSET_160);
      ui_stack_temp_offset_1fc = UI_FLOAT_MAX_VALUE;
      ui_result_status = ui_temp_buffer;
      if (ui_event_id1 != 0) {
        do {
          long_counter0 = *(longlong *)(ui_stack_array._0_8_ + ui_loop_counter);
          *(float *)(long_counter0 + 200) = ui_opacity_value * 0.15 + ui_scale_factor_val;
          *(float *)(long_counter0 + 0xcc) = ui_rotation_angle_value * 0.15 + ui_widget_height_val;
          *(float *)(long_counter0 + 0xd0) = ui_z_depth_value * 0.15 + float_value;
          *(uint32_t *)(long_counter0 + 0xd4) = UI_FLOAT_MAX_VALUE;
          *(float *)(long_counter0 + UI_SHUFFLE_MASK_D8) = ui_opacity_value;
          *(float *)(long_counter0 + 0xdc) = ui_rotation_angle_value;
          *(float *)(long_counter0 + 0xe0) = ui_z_depth_value;
          *(uint32_t *)(long_counter0 + 0xe4) = UI_FLOAT_MAX_VALUE;
          ui_loop_counter = (int)ui_loop_counter + 1;
          ui_loop_counter = (ulonglong)ui_loop_counter;
          ui_loop_counter = ui_loop_counter + 8;
        } while ((ulonglong)(longlong)(int)ui_loop_counter < ui_event_id1);
      }
      ui_stack_float_offset_208 = ui_opacity_value;
      ui_stack_float_offset_204 = ui_rotation_angle_value;
      ui_stack_float_offset_200 = ui_z_depth_value;
      if (ui_stack_array._0_8_ != 0) {
        ui_event_handler_process_event();
      }
    }
    ui_rotation_angle_value = ui_stack_scale_factor;
    ui_scale_factor_val = ui_stack_float_1d4;
    float_value = ui_stack_float_1d8;
    ui_z_depth_value = SQRT(*(float *)(ui_long_counter + UI_WIDGET_DATA_OFFSET) * *(float *)(ui_long_counter + UI_WIDGET_DATA_OFFSET) +
                  *(float *)(ui_long_counter + UI_SIGNATURE_PART4) * *(float *)(ui_long_counter + UI_SIGNATURE_PART4) +
                  *(float *)(ui_long_counter + UI_OFFSET_120) * *(float *)(ui_long_counter + UI_OFFSET_120));
    ui_widget_height_val = (float)asinf();
    ui_opacity_value = -(ui_widget_height_val * ui_parameter_value);
    ui_widget_height_val = -0.6;
    if ((-0.6 <= ui_opacity_value) && (ui_widget_height_val = ui_opacity_value, 0.6 <= ui_opacity_value)) {
      ui_widget_height_val = 0.6;
    }
    *(float *)(ui_callback + 8) = ui_widget_height_val;
    ui_rotation_angle_value = ui_z_depth_value * ui_rotation_angle_value;
    *(float *)(ui_callback + 12) =
         (((*(float *)(ui_callback + UI_EVENT_ID_OFFSET) - ui_rotation_angle_value * *(float *)(ui_callback + UI_OFFSET_60)) +
          (*(float *)(ui_callback + UI_OPERATION_RESULT_OFFSET) - ui_rotation_angle_value * *(float *)(ui_callback + UI_MEMORY_DEALLOC_OFFSET))) * 0.5 * ui_parameter_value) /
         ui_z_depth_value;
    if (ui_parameter_value < UI_CHAR_NULL) {
      float_value = -*(float *)(ui_callback + UI_SHIFT_AMOUNT_20);
      float_value = ui_animation_progress * -2.0;
      if ((ui_animation_progress * -2.0 <= float_value) && (float_value = float_value, ui_distance_delta <= float_value)) {
        float_value = ui_distance_delta;
      }
      float_value = float_value + *(float *)(ui_callback + UI_SHIFT_AMOUNT_20);
    }
    else {
      long_counter0 = (longlong)ui_parameter_value * UI_GUARD_CHECK_TYPE0;
      ui_event_index = *(longlong *)(ui_event_index + UI_ANIMATION_DATA_OFFSET);
      ui_callback_ptr = (uint *)((longlong)ui_parameter_value * UI_MAX_COMPONENT_VALUE + *(longlong *)(ui_event_data + UI_SNAPSHOT_CREATE_FLAGS));
      do {
        LOCK();
        boolean_flag2 = (*ui_callback_ptr & 1) != 0;
        *ui_callback_ptr = *ui_callback_ptr | 1;
        UNLOCK();
      } while (boolean_flag2);
      ui_stack_temp_110 = *(uint64_t *)(ui_callback_ptr + 1);
      ui_stack_variable_uint_108 = *(uint64_t *)(ui_callback_ptr + 3);
      ui_stack_float_100 = (float)ui_callback_ptr[5];
      ui_stack_float_fc = (float)ui_callback_ptr[6];
      ui_stack_temp_f8 = ui_callback_ptr[7];
      ui_stack_temp_f4 = ui_callback_ptr[8];
      *ui_callback_ptr = 0;
      ui_animation_progress = *(float *)(long_counter0 + UI_EVENT_ID_OFFSET + ui_event_index);
      ui_widget_height_val = *(float *)(long_counter0 + UI_MEMORY_ALLOC_SIZE + ui_event_index);
      ui_distance_delta = *(float *)(long_counter0 + UI_MEMORY_DEALLOC_OFFSET + ui_event_index);
      ui_distance_delta = ui_distance_delta * ui_distance_delta;
      if ((ui_stack_float_100 - ui_widget_height_val) * (ui_stack_float_100 - ui_widget_height_val) +
          (ui_stack_float_fc - ui_animation_progress) * (ui_stack_float_fc - ui_animation_progress) < ui_distance_delta * 0.25) {
        ui_animation_progress = 0.0;
      }
      else {
        ui_rotation_angle_value = ui_stack_float_100 * ui_stack_float_100 + ui_stack_float_fc * ui_stack_float_fc;
        aui_event_id_fifth = rsqrtss(ZEXT416((uint)ui_rotation_angle_value),ZEXT416((uint)ui_rotation_angle_value));
        ui_opacity_value = aui_event_id_fifth._data_offset_;
        ui_rotation_angle_value = ui_opacity_value * 0.5 * (3.0 - ui_rotation_angle_value * ui_opacity_value * ui_opacity_value);
        ui_animation_progress = SQRT(ui_widget_height_val * ui_widget_height_val + ui_animation_progress * ui_animation_progress + ui_distance_delta);
        ui_widget_height_val = ui_stack_float_100 * ui_rotation_angle_value * ui_animation_progress;
        ui_animation_progress = ui_stack_float_fc * ui_rotation_angle_value * ui_animation_progress;
        ui_stack_rotation_angle = *(float *)(ui_long_counter + UI_STACK_SIZE_128) * ui_animation_progress + *(float *)(ui_long_counter + UI_WIDGET_DATA_OFFSET) * ui_widget_height_val +
                     *(float *)(ui_long_counter + UI_WIDGET_BASE_OFFSET) * 0.0 + *(float *)(ui_long_counter + UI_OFFSET_160);
        ui_stack_float_value_secondary = *(float *)(ui_long_counter + UI_WIDGET_ITEM_SIZE) * ui_animation_progress + *(float *)(ui_long_counter + UI_SIGNATURE_PART4) * ui_widget_height_val +
                     *(float *)(ui_long_counter + 0x94) * 0.0 + *(float *)(ui_long_counter + UI_TEMP_VALUE_OFFSET);
        ui_stack_float_value_tertiary = *(float *)(ui_long_counter + UI_OFFSET_136) * ui_animation_progress + *(float *)(ui_long_counter + UI_OFFSET_120) * ui_widget_height_val +
                     *(float *)(ui_long_counter + UI_OFFSET_152) * 0.0 + *(float *)(ui_long_counter + UI_OFFSET_168);
        ui_stack_float_value_quaternary = *(float *)(ui_long_counter + 0x8c) * ui_animation_progress + *(float *)(ui_long_counter + UI_EVENT_ID_FOURTH_OFFSET) * ui_widget_height_val +
                     *(float *)(ui_long_counter + UI_EVENT_ID_OFFSET) * 0.0 + *(float *)(ui_long_counter + UI_OFFSET_172);
        ui_stack_temp_138 = 0;
        ui_stack_position_data = UI_FLOAT_MAX_VALUE3f800000;
        ui_stack_float_118 = 0.0;
        ui_stack_temp_128 = 0;
        ui_stack_temp_var_120 = 0;
        ui_stack_temp_offset_228 = 0x51b189;
        ui_stack_temp_offset_220 = boolean_flag2;
        ui_stack_temp_114 = boolean_flag2;
        ui_process_ui_command(ui_stack_parameter_longd0,&ui_stack_rotation_angle,long_counter0,ui_stack_array);
        ui_stack_float_offset_200 = ui_stack_float_offset_1f0 - ui_stack_float_1e0;
        ui_stack_temp_offset_1fc = UI_FLOAT_MAX_VALUE;
        ui_widget_height_val = float_value * float_value + ui_scale_factor_val * ui_scale_factor_val + ui_stack_float_offset_200 * ui_stack_float_offset_200;
        aui_event_id_fifth = rsqrtss(ZEXT416((uint)ui_widget_height_val),ZEXT416((uint)ui_widget_height_val));
        ui_animation_progress = aui_event_id_fifth._data_offset_;
        ui_widget_height_val = ui_animation_progress * 0.5 * (3.0 - ui_widget_height_val * ui_animation_progress * ui_animation_progress);
        ui_z_depth_value = ui_widget_height_val * ui_scale_factor_val;
        ui_opacity_value = ui_widget_height_val * float_value;
        ui_rotation_angle_value = (ui_stack_float_offset_1e8 + ui_stack_float_offset_1f8) * 0.5 - ui_stack_rotation_angle;
        ui_distance_delta = (ui_stack_float_1e4 + ui_stack_float_offset_1f4) * 0.5 - ui_stack_float_value_secondary;
        float_value = (ui_stack_float_1e0 + ui_stack_float_offset_1f0) * 0.5 - ui_stack_float_118;
        ui_animation_progress = ui_opacity_value * ui_distance_delta + ui_z_depth_value * ui_rotation_angle_value + float_value * ui_widget_height_val * ui_stack_float_offset_200;
        ui_rotation_angle_value = ui_rotation_angle_value - ui_animation_progress * ui_z_depth_value;
        ui_distance_delta = ui_distance_delta - ui_animation_progress * ui_opacity_value;
        float_value = float_value - ui_animation_progress * ui_widget_height_val * ui_stack_float_offset_200;
        ui_animation_progress = ui_distance_delta * ui_distance_delta + ui_rotation_angle_value * ui_rotation_angle_value + float_value * float_value;
        aui_event_id_fifth = rsqrtss(ZEXT416((uint)ui_animation_progress),ZEXT416((uint)ui_animation_progress));
        ui_widget_height_val = aui_event_id_fifth._data_offset_;
        ui_widget_height_val = ui_widget_height_val * 0.5 * ((float)ui_system_global_data - ui_animation_progress * ui_widget_height_val * ui_widget_height_val);
        ui_stack_float_offset_208 = ui_scale_factor_val;
        ui_stack_float_offset_204 = float_value;
        ui_animation_progress = (float)asinf();
        ui_result_status = -1;
        if (ui_rotation_angle_value * ui_widget_height_val * ui_opacity_value - ui_distance_delta * ui_widget_height_val * ui_z_depth_value < 0.0) {
          ui_result_status = 1;
        }
        ui_parameter_value = ui_animation_progress * (float)ui_result_status * ui_parameter_value;
        ui_animation_progress = -1.0471976;
        if ((-1.0471976 <= ui_parameter_value) && (ui_animation_progress = ui_parameter_value, 1.0471976 <= ui_parameter_value)) {
          ui_animation_progress = 1.0471976;
        }
      }
      if (1.0 <= float_value) {
        float_value = 1.0;
      }
      float_value = (ui_animation_progress - *(float *)(ui_callback + UI_SHIFT_AMOUNT_20)) * float_value + *(float *)(ui_callback + UI_SHIFT_AMOUNT_20);
      ui_widget_height_val = *(float *)(ui_callback + 8);
    }
  }
  *(float *)(ui_callback + UI_SHIFT_AMOUNT_20) = float_value;
  if ((ui_widget_height_val < -0.0001) || (0.0001 <= ui_widget_height_val)) {
    ui_stack_character_secondary = '\x01';
  }
  else {
    ui_stack_character_secondary = UI_CHAR_NULL;
  }
  if ((*(float *)(ui_callback + UI_EVENT_FLAG_OFFSET) < -0.0001) || (0.0001 <= *(float *)(ui_callback + UI_EVENT_FLAG_OFFSET))) {
    boolean_flag2 = true;
  }
  else {
    boolean_flag2 = false;
  }
  if ((float_value < -0.0001) || (0.0001 <= float_value)) {
    ui_bool_result = true;
  }
  else {
    ui_bool_result = false;
  }
  if ((*(float *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS) < -0.0001) || (0.0001 <= *(float *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS))) {
    ui_stack_character_ternary = '\x01';
  }
  else {
    ui_stack_character_ternary = UI_CHAR_NULL;
  }
  ui_animation_progress = *(float *)(ui_callback + 12);
  if ((ui_animation_progress < -0.0001) || (0.0001 <= ui_animation_progress)) {
    ui_character_value = '\x01';
  }
  else {
    ui_character_value = UI_CHAR_NULL;
  }
  if ((((ui_stack_character_secondary != UI_CHAR_NULL) || (boolean_flag2)) || (ui_stack_character_ternary != UI_CHAR_NULL)) || (ui_bool_result)) {
    if (ui_character_value == UI_CHAR_NULL) goto UI_LABEL_GENERIC_66a567;
  }
  else if (ui_character_value == UI_CHAR_NULL) {
    RenderUIComponent(ui_stack_temp_f0 ^ (ulonglong)ui_stack_array);
  }
  ui_stack_rotation_angle = *(float *)(ui_event_type + 0x1020);
  ui_stack_float_value_secondary = *(float *)(ui_event_type + 0x1024);
  ui_stack_float_value_quaternary = *(float *)(ui_event_type + 0x102c);
  ui_stack_float_value_tertiary = *(float *)(ui_event_type + 0x1028) + ui_animation_progress;
  *(ulonglong *)(ui_event_type + UI_STACK_SIZE_1280) =
       *(ulonglong *)(ui_event_type + UI_STACK_SIZE_1280) | *(ulonglong *)(ui_event_type + 0x810);
  *(float *)(ui_event_type + 0x1020) = ui_stack_rotation_angle;
  *(float *)(ui_event_type + 0x1024) = ui_stack_float_value_secondary;
  *(float *)(ui_event_type + 0x1028) = ui_stack_float_value_tertiary;
  *(float *)(ui_event_type + 0x102c) = ui_stack_float_value_quaternary;
UI_LABEL_GENERIC_66a567:
  ProcessUIRenderCommand(ui_character_value,*(float *)(ui_callback + 8) * -0.5);
}

void ui_system_update_widget_layout_constraints(longlong ui_callback,longlong ui_event_type,float *ui_event_data,float *ui_event_flags,char ui_parameter_value,
                  uint32_t *ui_parameter_value,byte ui_parameter_value,uint32_t ui_parameter_value)

{
  longlong *ui_long_counter_ptr;
  int ui_result_status;
  longlong ui_event_index;
  float ui_temp_float;
  float aui_stack_float_temp_valueX_8 [2];
  longlong ui_stack_data_offset;
  uint64_t ui_loop_counter;
  float ui_stack_float_a8;
  float ui_stack_float_a4;
  float ui_stack_float_a0;
  float ui_stack_float_9c;
  float ui_stack_float_98;
  float ui_stack_float_94;
  float ui_stack_float_90;
  float ui_stack_float_8c;
  float ui_stack_float_88;
  float ui_stack_float_84;
  float ui_stack_float_80;
  float ui_stack_float_7c;
  uint64_t ui_stack_variable_uint_78;
  uint64_t ui_stack_uint_callback_count_primary;
  uint64_t ui_event_mask_primary;
  uint64_t ui_stack_operation_flag;
  float ui_stack_float_58;
  char ui_stack_character_control;
  
  ui_loop_counter = UI_BIT_MASK_32BIT_FULLfffffffe;
  ui_stack_data_offset = ui_callback;
  ui_result_status = _Mtx_lock();
  if (ui_result_status != 0) {
    __Throw_C_error_std__YAXH_Z(ui_result_status);
  }
  ui_stack_float_a8 = *ui_event_data;
  ui_stack_float_a4 = ui_event_data[1];
  ui_stack_float_a0 = ui_event_data[2];
  ui_stack_float_9c = ui_event_data[3];
  float_value = ui_event_data[2] + ui_event_flags[2];
  float_value = ui_event_data[1] + ui_event_flags[1];
  float_value = *ui_event_data + *ui_event_flags;
  ui_stack_float_8c = UI_FLOAT_INFINITY;
  ui_stack_float_98 = float_value;
  ui_stack_float_94 = float_value;
  if (ui_event_type != 0) {
    aui_stack_float_temp_valueX_8[0] = 0.0;
    if (*(longlong *)(ui_event_type + 0x2908) == 0) {
      ui_process_event_type(ui_event_type,&ui_stack_float_a8,UI_TASK_ID_OFFSETb189,aui_stack_float_temp_valueX_8);
      ui_stack_float_90 = aui_stack_float_temp_valueX_8[0] + 0.01;
      ui_process_event_type(ui_event_type,&ui_stack_float_98,UI_TASK_ID_OFFSETb189,aui_stack_float_temp_valueX_8);
      float_value = aui_stack_float_temp_valueX_8[0];
    }
    else {
      ui_stack_character_control = UI_CHAR_NULL;
      ui_stack_variable_uint_78 = 0;
      ui_stack_uint_callback_count_primary = UI_FLOAT_MAX_VALUE3f800000;
      ui_stack_float_58 = 0.0;
      ui_event_mask_primary = 0;
      ui_stack_operation_flag = 0;
      ui_stack_float_98 = ui_stack_float_a8;
      ui_stack_float_94 = ui_stack_float_a4;
      ui_stack_float_90 = ui_stack_float_a0;
      ui_stack_float_8c = ui_stack_float_9c;
      ui_process_ui_command(ui_event_type,&ui_stack_float_98,0,&ui_stack_float_88,0,1,ui_loop_counter);
      if (ui_stack_character_control == UI_CHAR_NULL) {
        ui_stack_float_58 = 0.0;
      }
      ui_stack_float_90 = ui_stack_float_58 + 0.01;
      ui_stack_character_control = UI_CHAR_NULL;
      ui_stack_variable_uint_78 = 0;
      ui_stack_uint_callback_count_primary = UI_FLOAT_MAX_VALUE3f800000;
      ui_stack_float_58 = 0.0;
      ui_event_mask_primary = 0;
      ui_stack_operation_flag = 0;
      ui_stack_float_8c = UI_FLOAT_INFINITY;
      ui_stack_float_98 = float_value;
      ui_stack_float_94 = float_value;
      ui_process_ui_command(ui_event_type,&ui_stack_float_98,0,&ui_stack_float_88,0,1,ui_loop_counter);
      float_value = 0.0;
      if (ui_stack_character_control != UI_CHAR_NULL) {
        float_value = ui_stack_float_58;
      }
    }
    float_value = float_value + 0.01;
  }
  ui_stack_float_8c = UI_FLOAT_INFINITY;
  ui_stack_float_88 = ui_stack_float_a8;
  ui_stack_float_84 = ui_stack_float_a4;
  ui_stack_float_80 = ui_stack_float_a0;
  ui_stack_float_7c = ui_stack_float_9c;
  ui_stack_variable_uint_78 = CONCAT44(float_value - ui_stack_float_a4,float_value - ui_stack_float_a8);
  ui_stack_uint_callback_count_primary = CONCAT44(UI_FLOAT_MAX_VALUE,float_value - ui_stack_float_a0);
  ui_event_mask_primary = CONCAT44(*ui_parameter_value,*ui_parameter_value);
  ui_stack_operation_flag = CONCAT44(ui_parameter_value,(float)ui_config * 1e-05);
  if (ui_parameter_value == UI_CHAR_NULL) {
    ui_event_index = UI_OFFSET_152;
    if (ui_parameter_value != 0) {
      ui_event_index = UI_OFFSET_184;
    }
  }
  else {
    ui_event_index = (ulonglong)ui_parameter_value * UI_OFFSET_32 + UI_OFFSET_88;
  }
  ui_long_counter_ptr = (longlong *)(ui_event_index + ui_callback);
  if ((ui_long_counter_ptr != (longlong *)UI_ZERO_OFFSET) && ((ulonglong)((ui_long_counter_ptr[1] - *ui_long_counter_ptr) / UI_MEMORY_ALLOC_SIZE) < 10000)) {
    ui_update_counter(ui_long_counter_ptr,&ui_stack_float_88);
  }
  ui_result_status = _Mtx_unlock(ui_callback);
  if (ui_result_status != 0) {
    __Throw_C_error_std__YAXH_Z(ui_result_status);
  }
  return ui_system_return_value;
}

void ui_system_calculate_widget_dimensions(ulonglong ui_callback,longlong ui_event_type,float *ui_event_data,uint64_t ui_event_flags,
                  float ui_parameter_value,float ui_parameter_value,float ui_parameter_value,uint32_t ui_parameter_value,uint64_t ui_parameter_value,
                  uint64_t ui_callback_primary,uint8_t ui_callback1,char ui_callback2)

{
  char char_value;
  int ui_result_status;
  float *float_ptr;
  uint ui_loop_counter;
  float *float_ptr;
  longlong ui_event_index;
  uint32_t *ui_callback_ptr;
  longlong ui_event_index;
  uint32_t ui_event_id0;
  uint32_t ui_event_id1;
  uint64_t ui_event_id_secondary;
  uint32_t ui_event_id_fourth;
  uint32_t ui_event_id_fifth;
  uint32_t ui_event_id6;
  uint32_t ui_event_id7;
  uint64_t extraout_XMM0_Qb;
  uint32_t ui_event_id8;
  uint64_t extraout_XMM0_Qb_00;
  uint32_t ui_event_id9;
  uint8_t aui_task_identifier [16];
  float ui_temp_float;
  float ui_distance_delta;
  float ui_temp_float;
  float ui_time_delta;
  float ui_temp_float;
  uint32_t ui_loop_counter;
  uint8_t ui_stack_array [32];
  uint32_t ui_stack_buffer_mask8;
  uint32_t ui_stack_buffer_mask0;
  uint64_t ui_stack_temp_378;
  float ui_stack_float_370;
  uint32_t ui_stack_temp_36c;
  uint64_t ui_stack_temp_368;
  uint64_t ui_stack_temp_360;
  uint8_t ui_stack_array [16];
  uint64_t ui_stack_variable_mask_primary;
  uint64_t ui_stack_variable_base_address;
  uint64_t ui_stack_temp_338;
  uint64_t ui_stack_temp_330;
  float ui_stack_float_328;
  char charuiui_stack_var_var_324;
  uint64_t ui_stack_resource_config;
  uint64_t ui_stack_temp_310;
  uint64_t ui_stack_unsigned_data_primary8;
  uint64_t ui_stack_uint_300;
  uint64_t ui_stack_variable_uint_2f8;
  ulonglong ui_stack_variable_uint_2f0;
  float aui_stack_float_2e8 [2];
  uint64_t ui_stack_variable_uint_2e0;
  ulonglong ui_stack_temp_e8;
  
  ui_stack_variable_uint_2f8 = UI_BIT_MASK_32BIT_FULLfffffffe;
  ui_stack_temp_e8 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_stack_temp_378 = ui_callback;
  ui_stack_variable_uint_2f0 = ui_callback;
  ui_result_status = _Mtx_lock();
  if (ui_result_status != 0) {
    __Throw_C_error_std__YAXH_Z(ui_result_status);
  }
  if (*(char *)(ui_callback + UI_OFFSET_80) != UI_CHAR_NULL) {
    if (uiSystemInitializedFlag == UI_CHAR_NULL) {
      ui_result_status = 0;
      ui_stack_temp_368 = 0;
      ui_stack_temp_360 = 0;
      ui_stack_unsigned_data_primary8 = 0;
      ui_stack_uint_300 = 0;
      ui_stack_resource_config = 0;
      ui_stack_temp_310 = 0;
      ui_callback_ptr = (uint32_t *)UI_SNAPSHOT_CREATE_FLAGS0d4a0c0;
      ui_event_index = 0;
      ui_loop_counter = 0;
      do {
        ui_event_id_secondary = ui_process_event_functionThunk();
        ui_event_id0 = (uint32_t)ui_event_id_secondary;
        ui_event_id_fourth = (uint32_t)((ulonglong)ui_event_id_secondary >> UI_OFFSET_32);
        ui_event_id6 = (uint32_t)extraout_XMM0_Qb;
        ui_event_id8 = (uint32_t)((ulonglong)extraout_XMM0_Qb >> UI_OFFSET_32);
        ui_event_id_secondary = ValidateUIStateThunk();
        ui_event_id1 = (uint32_t)ui_event_id_secondary;
        ui_callback_ptr[-8] = ui_event_id0;
        ui_callback_ptr[-4] = ui_event_id_fourth;
        *ui_callback_ptr = ui_event_id6;
        ui_callback_ptr[4] = ui_event_id8;
        ui_callback_ptr[-7] = ui_event_id1;
        ui_event_id_fifth = (uint32_t)((ulonglong)ui_event_id_secondary >> UI_OFFSET_32);
        ui_event_id7 = (uint32_t)extraout_XMM0_Qb_00;
        ui_event_id9 = (uint32_t)((ulonglong)extraout_XMM0_Qb_00 >> UI_OFFSET_32);
        ui_callback_ptr[-3] = ui_event_id_fifth;
        ui_callback_ptr[1] = ui_event_id7;
        ui_callback_ptr[5] = ui_event_id9;
        ui_callback_ptr[-6] = 0;
        ui_callback_ptr[-2] = 0;
        ui_callback_ptr[2] = 0;
        ui_callback_ptr[6] = ui_loop_counter;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a2a0) = 0;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a2b0) = 0;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a2c0) = ui_loop_counter;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a2d0) = (uint32_t)ui_stack_resource_config;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a2a4) = ui_event_id1;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a2b4) = ui_event_id_fifth;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a2c4) = ui_event_id7;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a2d4) = ui_event_id9;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a2a8) = ui_event_id0;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a2b8) = ui_event_id_fourth;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a2c8) = ui_event_id6;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a2d8) = ui_event_id8;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a4a0) = ui_event_id0;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a4b0) = ui_event_id_fourth;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a4c0) = ui_event_id6;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a4d0) = ui_event_id8;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a4a4) = 0;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a4b4) = 0;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a4c4) = (uint32_t)ui_stack_unsigned_data_primary8;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a4d4) = (uint32_t)ui_stack_resource_config;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a4a8) = ui_event_id1;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a4b8) = ui_event_id_fifth;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a4c8) = ui_event_id7;
        *(uint32_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS0d4a4d8) = ui_event_id9;
        ui_result_status = ui_result_status + 4;
        ui_event_index = ui_event_index + UI_BUFFER_SIZE_64;
        ui_callback_ptr = ui_callback_ptr + UI_EVENT_FLAG_OFFSET;
        ui_loop_counter = (uint32_t)ui_stack_unsigned_data_primary8;
        ui_loop_counter = (uint32_t)ui_stack_temp_368;
      } while (ui_result_status < UI_OFFSET_32);

void ui_system_process_widget_hierarchy(longlong *ui_callback_context,longlong *ui_event_data_buffer_type)

{
  longlong *ui_long_counter_ptr;
  uint64_t *ui_task_index_pointer;
  longlong ui_event_index;
  longlong *ui_long_pointer_var;
  
  ui_long_pointer_var = (longlong *)ui_callback[1];
  ui_long_pointer_var = ui_callback;
  if (ui_long_pointer_var == (longlong *)UI_ZERO_OFFSET) {
    ui_long_pointer_var = (longlong *)*ui_callback;
  }
  else {
    ui_long_counter_ptr = (longlong *)*ui_callback;
    ui_long_pointer_var = ui_long_pointer_var;
    if (ui_long_counter_ptr != (longlong *)UI_ZERO_OFFSET) {
      for (ui_long_pointer_var = (longlong *)ui_long_counter_ptr[1]; ui_long_pointer_var != (longlong *)UI_ZERO_OFFSET; ui_long_pointer_var = (longlong *)ui_long_pointer_var[1]
          ) {
        ui_long_counter_ptr = ui_long_pointer_var;
      }
      ui_long_pointer_var = (longlong *)*ui_long_counter_ptr;
      ui_long_pointer_var = ui_long_counter_ptr;
      if (ui_long_counter_ptr != ui_callback) {
        ui_long_pointer_var[2] = (longlong)ui_long_counter_ptr;
        ui_long_counter_ptr[1] = ui_callback[1];
        ui_long_pointer_var = ui_long_counter_ptr;
        if (ui_long_counter_ptr != (longlong *)*ui_callback) {
          ui_long_pointer_var = (longlong *)ui_long_counter_ptr[2];
          if (ui_long_pointer_var != (longlong *)UI_ZERO_OFFSET) {
            ui_long_pointer_var[2] = (longlong)ui_long_pointer_var;
          }
          ui_long_pointer_var[1] = (longlong)ui_long_pointer_var;
          *ui_long_counter_ptr = *ui_callback;
          *(longlong **)(*ui_callback + UI_EVENT_FLAG_OFFSET) = ui_long_counter_ptr;
        }
        if (ui_callback == (longlong *)ui_event_type[2]) {
          ui_event_type[2] = (longlong)ui_long_counter_ptr;
        }
        else {
          ui_task_index_pointer = (uint64_t *)ui_callback[2];
          if (ui_callback == (longlong *)ui_task_index_pointer[1]) {
            ui_task_index_pointer[1] = ui_long_counter_ptr;
          }
          else {
            *ui_task_index_pointer = ui_long_counter_ptr;
          }
        }
        ui_long_counter_ptr[2] = ui_callback[2];
        ui_event_index = ui_long_counter_ptr[3];
        *(char *)(ui_long_counter_ptr + 3) = (char)ui_callback[3];
        *(char *)(ui_callback + 3) = (char)ui_event_index;
        goto UI_LABEL_GENERIC_66bb69;
      }
    }
  }
  ui_long_pointer_var = (longlong *)ui_long_pointer_var[2];
  if (ui_long_pointer_var != (longlong *)UI_ZERO_OFFSET) {
    ui_long_pointer_var[2] = (longlong)ui_long_pointer_var;
  }
  if (ui_callback == (longlong *)ui_event_type[2]) {
    ui_event_type[2] = (longlong)ui_long_pointer_var;
  }
  else {
    ui_task_index_pointer = (uint64_t *)ui_callback[2];
    if (ui_callback == (longlong *)ui_task_index_pointer[1]) {
      ui_task_index_pointer[1] = ui_long_pointer_var;
    }
    else {
      *ui_task_index_pointer = ui_long_pointer_var;
    }
  }
  if (ui_callback == (longlong *)ui_event_type[1]) {
    if ((*ui_callback == 0) || (ui_long_pointer_var == (longlong *)UI_ZERO_OFFSET)) {
      ui_event_type[1] = ui_callback[2];
    }
    else {
      ui_long_counter_ptr = (longlong *)ui_long_pointer_var[1];
      ui_long_pointer_var = ui_long_pointer_var;
      while (ui_long_pointer_var = ui_long_counter_ptr, ui_long_pointer_var != (longlong *)UI_ZERO_OFFSET) {
        ui_long_pointer_var = ui_long_pointer_var;
        ui_long_counter_ptr = (longlong *)ui_long_pointer_var[1];
      }
      ui_event_type[1] = (longlong)ui_long_pointer_var;
    }
  }
  if (ui_callback == (longlong *)*ui_event_type) {
    if ((ui_callback[1] == 0) || (ui_long_pointer_var == (longlong *)UI_ZERO_OFFSET)) {
      *ui_event_type = ui_callback[2];
    }
    else {
      ui_long_counter_ptr = (longlong *)*ui_long_pointer_var;
      ui_long_pointer_var = ui_long_pointer_var;
      while (ui_long_pointer_var = ui_long_counter_ptr, ui_long_pointer_var != (longlong *)UI_ZERO_OFFSET) {
        ui_long_pointer_var = ui_long_pointer_var;
        ui_long_counter_ptr = (longlong *)*ui_long_pointer_var;
      }
      *ui_event_type = (longlong)ui_long_pointer_var;
    }
  }
UI_LABEL_GENERIC_66bb69:
  if ((char)ui_callback[3] == '\x01') {
    if (ui_long_pointer_var != (longlong *)ui_event_type[2]) {
      do {
        ui_long_pointer_var = ui_long_pointer_var;
        if ((ui_long_pointer_var != (longlong *)UI_ZERO_OFFSET) && ((char)ui_long_pointer_var[3] != '\x01')) break;
        ui_long_pointer_var = (longlong *)ui_long_pointer_var[1];
        if (ui_long_pointer_var == ui_long_pointer_var) {
          ui_long_pointer_var = (longlong *)*ui_long_pointer_var;
          if ((char)ui_long_pointer_var[3] == UI_CHAR_NULL) {
            *(uint8_t *)(ui_long_pointer_var + 3) = 1;
            ui_long_pointer_var = (longlong *)*ui_long_pointer_var;
            *(uint8_t *)(ui_long_pointer_var + 3) = 0;
            ui_long_counter_ptr = (longlong *)ui_event_type[2];
            *ui_long_pointer_var = ui_long_pointer_var[1];
            if (ui_long_pointer_var[1] != 0) {
              *(longlong **)(ui_long_pointer_var[1] + UI_EVENT_FLAG_OFFSET) = ui_long_pointer_var;
            }
            ui_long_pointer_var[2] = ui_long_pointer_var[2];
            ui_long_pointer_var = ui_long_pointer_var;
            if (ui_long_pointer_var != ui_long_counter_ptr) {
              ui_task_index_pointer = (uint64_t *)ui_long_pointer_var[2];
              ui_long_pointer_var = ui_long_counter_ptr;
              if (ui_long_pointer_var == (longlong *)ui_task_index_pointer[1]) {
                ui_task_index_pointer[1] = ui_long_pointer_var;
              }
              else {
                *ui_task_index_pointer = ui_long_pointer_var;
              }
            }
            ui_long_pointer_var[1] = (longlong)ui_long_pointer_var;
            ui_long_pointer_var[2] = (longlong)ui_long_pointer_var;
            ui_event_type[2] = (longlong)ui_long_pointer_var;
            ui_long_pointer_var = (longlong *)*ui_long_pointer_var;
          }
          ui_event_index = ui_long_pointer_var[1];
          if (((ui_event_index != 0) && (*(char *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS) != '\x01')) ||
             ((*ui_long_pointer_var != 0 && (*(char *)(*ui_long_pointer_var + UI_SNAPSHOT_CREATE_FLAGS) != '\x01')))) {
            if ((*ui_long_pointer_var == 0) || (*(char *)(*ui_long_pointer_var + UI_SNAPSHOT_CREATE_FLAGS) == '\x01')) {
              *(uint8_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS) = 1;
              *(uint8_t *)(ui_long_pointer_var + 3) = 0;
              ui_event_index = ui_system_get_event_offset_extended(ui_long_pointer_var,ui_event_type[2]);
              ui_event_type[2] = ui_event_index;
              ui_long_pointer_var = (longlong *)*ui_long_pointer_var;
            }
            *(char *)(ui_long_pointer_var + 3) = (char)ui_long_pointer_var[3];
            *(uint8_t *)(ui_long_pointer_var + 3) = 1;
            if (*ui_long_pointer_var != 0) {
              *(uint8_t *)(*ui_long_pointer_var + UI_SNAPSHOT_CREATE_FLAGS) = 1;
            }
            ui_event_index = ui_system_get_event_offset_basic(ui_long_pointer_var,ui_event_type[2]);
UI_LABEL_GENERIC_66bd4e:
            ui_event_type[2] = ui_event_index;
            break;
          }
        }
        else {
          if ((char)ui_long_pointer_var[3] == UI_CHAR_NULL) {
            *(uint8_t *)(ui_long_pointer_var + 3) = 1;
            ui_long_pointer_var = (longlong *)ui_long_pointer_var[1];
            *(uint8_t *)(ui_long_pointer_var + 3) = 0;
            ui_long_counter_ptr = (longlong *)ui_event_type[2];
            ui_long_pointer_var[1] = *ui_long_pointer_var;
            if (*ui_long_pointer_var != 0) {
              *(longlong **)(*ui_long_pointer_var + UI_EVENT_FLAG_OFFSET) = ui_long_pointer_var;
            }
            ui_long_pointer_var[2] = ui_long_pointer_var[2];
            ui_long_pointer_var = ui_long_pointer_var;
            if (ui_long_pointer_var != ui_long_counter_ptr) {
              ui_task_index_pointer = (uint64_t *)ui_long_pointer_var[2];
              ui_long_pointer_var = ui_long_counter_ptr;
              if (ui_long_pointer_var == (longlong *)*ui_task_index_pointer) {
                *ui_task_index_pointer = ui_long_pointer_var;
              }
              else {
                ui_task_index_pointer[1] = ui_long_pointer_var;
              }
            }
            *ui_long_pointer_var = (longlong)ui_long_pointer_var;
            ui_long_pointer_var[2] = (longlong)ui_long_pointer_var;
            ui_event_type[2] = (longlong)ui_long_pointer_var;
            ui_long_pointer_var = (longlong *)ui_long_pointer_var[1];
          }
          ui_event_index = *ui_long_pointer_var;
          if (((ui_event_index != 0) && (*(char *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS) != '\x01')) ||
             ((ui_long_pointer_var[1] != 0 && (*(char *)(ui_long_pointer_var[1] + UI_SNAPSHOT_CREATE_FLAGS) != '\x01')))) {
            if ((ui_long_pointer_var[1] == 0) || (*(char *)(ui_long_pointer_var[1] + UI_SNAPSHOT_CREATE_FLAGS) == '\x01')) {
              *(uint8_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS) = 1;
              *(uint8_t *)(ui_long_pointer_var + 3) = 0;
              ui_event_index = ui_system_get_event_offset_basic(ui_long_pointer_var,ui_event_type[2]);
              ui_event_type[2] = ui_event_index;
              ui_long_pointer_var = (longlong *)ui_long_pointer_var[1];
            }
            *(char *)(ui_long_pointer_var + 3) = (char)ui_long_pointer_var[3];
            *(uint8_t *)(ui_long_pointer_var + 3) = 1;
            if (ui_long_pointer_var[1] != 0) {
              *(uint8_t *)(ui_long_pointer_var[1] + UI_SNAPSHOT_CREATE_FLAGS) = 1;
            }
            ui_event_index = ui_system_get_event_offset_extended(ui_long_pointer_var,ui_event_type[2]);
            goto UI_LABEL_GENERIC_66bd4e;
          }
        }
        *(uint8_t *)(ui_long_pointer_var + 3) = 0;
        ui_long_pointer_var = (longlong *)ui_long_pointer_var[2];
        ui_long_pointer_var = ui_long_pointer_var;
      } while (ui_long_pointer_var != (longlong *)ui_event_type[2]);
    }
    if (ui_long_pointer_var != (longlong *)UI_ZERO_OFFSET) {
      *(uint8_t *)(ui_long_pointer_var + 3) = 1;
    }
  }
  return ui_system_return_value;
}

void ui_system_update_widget_visibility_state(longlong *ui_callback_context,uint64_t *ui_event_type,uint64_t *ui_event_data,int ui_event_flags)

{
  longlong *ui_long_counter_ptr;
  longlong ui_event_index;
  uint64_t *ui_callback_ptr;
  longlong *ui_long_pointer_var;
  
  ui_callback[2] = (longlong)ui_event_type;
  *ui_callback = 0;
  ui_callback[1] = 0;
  *(uint8_t *)(ui_callback + 3) = 0;
  if (ui_event_flags == 0) {
    ui_event_type[1] = ui_callback;
    if (ui_event_type != ui_event_data) {
      if (ui_event_type == (uint64_t *)ui_event_data[1]) {
        ui_event_data[1] = ui_callback;
      }
      goto UI_LABEL_GENERIC_66be05;
    }
    ui_event_data[2] = ui_callback;
  }
  else {
    *ui_event_type = ui_callback;
    if (ui_event_type != (uint64_t *)*ui_event_data) goto UI_LABEL_GENERIC_66be05;
  }
  *ui_event_data = ui_callback;
UI_LABEL_GENERIC_66be05:
  ui_long_pointer_var = (longlong *)ui_event_data[2];
  if (ui_callback == ui_long_pointer_var) {
    *(uint8_t *)(ui_long_pointer_var + 3) = 1;
    return ui_system_return_value;
  }
  do {
    ui_long_counter_ptr = (longlong *)ui_callback[2];
    if ((char)ui_long_counter_ptr[3] != UI_CHAR_NULL) break;
    ui_long_pointer_var = (longlong *)ui_long_counter_ptr[2];
    ui_long_pointer_var = ui_long_counter_ptr + 2;
    ui_long_pointer_var = (longlong *)ui_long_pointer_var[1];
    if (ui_long_counter_ptr == ui_long_pointer_var) {
      ui_event_index = *ui_long_pointer_var;
      if ((ui_event_index == 0) || (*(char *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS) != UI_CHAR_NULL)) {
        ui_long_pointer_var = ui_long_counter_ptr;
        if ((ui_long_counter_ptr != (longlong *)UI_ZERO_OFFSET) && (ui_long_pointer_var = (longlong *)*ui_long_counter_ptr, ui_callback == ui_long_pointer_var)) {
          *ui_long_counter_ptr = ui_long_pointer_var[1];
          if (ui_long_pointer_var[1] != 0) {
            *(longlong **)(ui_long_pointer_var[1] + UI_EVENT_FLAG_OFFSET) = ui_long_counter_ptr;
          }
          ui_long_pointer_var[2] = *ui_long_pointer_var;
          ui_long_pointer_var = ui_long_pointer_var;
          if (ui_long_counter_ptr != ui_long_pointer_var) {
            ui_callback_ptr = (uint64_t *)*ui_long_pointer_var;
            ui_long_pointer_var = ui_long_pointer_var;
            if (ui_long_counter_ptr == (longlong *)ui_callback_ptr[1]) {
              ui_callback_ptr[1] = ui_long_pointer_var;
            }
            else {
              *ui_callback_ptr = ui_long_pointer_var;
            }
          }
          ui_long_pointer_var[1] = (longlong)ui_long_counter_ptr;
          *ui_long_pointer_var = (longlong)ui_long_pointer_var;
          ui_event_data[2] = ui_long_pointer_var;
          ui_long_pointer_var = (longlong *)*ui_long_pointer_var;
          ui_callback = ui_long_counter_ptr;
        }
        *(uint8_t *)(ui_long_pointer_var + 3) = 1;
        ui_long_pointer_var = (longlong *)ui_long_pointer_var[1];
        *(uint8_t *)(ui_long_pointer_var + 3) = 0;
        ui_long_pointer_var = (longlong *)ui_event_data[2];
        ui_long_pointer_var[1] = *ui_long_pointer_var;
        if (*ui_long_pointer_var != 0) {
          *(longlong **)(*ui_long_pointer_var + UI_EVENT_FLAG_OFFSET) = ui_long_pointer_var;
        }
        ui_long_pointer_var[2] = ui_long_pointer_var[2];
        if (ui_long_pointer_var == ui_long_pointer_var) {
          *ui_long_pointer_var = (longlong)ui_long_pointer_var;
          ui_long_pointer_var = ui_long_pointer_var;
        }
        else {
          ui_callback_ptr = (uint64_t *)ui_long_pointer_var[2];
          if (ui_long_pointer_var == (longlong *)*ui_callback_ptr) {
            *ui_callback_ptr = ui_long_pointer_var;
            *ui_long_pointer_var = (longlong)ui_long_pointer_var;
          }
          else {
            ui_callback_ptr[1] = ui_long_pointer_var;
            *ui_long_pointer_var = (longlong)ui_long_pointer_var;
          }
        }
UI_LABEL_GENERIC_66bfd1:
        ui_long_pointer_var[2] = (longlong)ui_long_pointer_var;
        ui_event_data[2] = ui_long_pointer_var;
        ui_long_pointer_var = ui_callback;
      }
      else {
        *(uint8_t *)(ui_long_counter_ptr + 3) = 1;
        *(uint8_t *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS) = 1;
        *(uint8_t *)(ui_long_pointer_var + 3) = 0;
      }
    }
    else {
      if ((ui_long_pointer_var == (longlong *)UI_ZERO_OFFSET) || ((char)ui_long_pointer_var[3] != UI_CHAR_NULL)) {
        ui_long_pointer_var = (longlong *)ui_long_counter_ptr[1];
        ui_long_pointer_var = ui_long_counter_ptr;
        if (ui_callback == ui_long_pointer_var) {
          ui_long_counter_ptr[1] = *ui_long_pointer_var;
          if (*ui_long_pointer_var != 0) {
            *(longlong **)(*ui_long_pointer_var + UI_EVENT_FLAG_OFFSET) = ui_long_counter_ptr;
          }
          ui_long_pointer_var[2] = *ui_long_pointer_var;
          ui_long_pointer_var = ui_long_pointer_var;
          if (ui_long_counter_ptr != ui_long_pointer_var) {
            ui_callback_ptr = (uint64_t *)*ui_long_pointer_var;
            ui_long_pointer_var = ui_long_pointer_var;
            if (ui_long_counter_ptr == (longlong *)*ui_callback_ptr) {
              *ui_callback_ptr = ui_long_pointer_var;
            }
            else {
              ui_callback_ptr[1] = ui_long_pointer_var;
            }
          }
          *ui_long_pointer_var = (longlong)ui_long_counter_ptr;
          *ui_long_pointer_var = (longlong)ui_long_pointer_var;
          ui_event_data[2] = ui_long_pointer_var;
          ui_long_pointer_var = (longlong *)*ui_long_pointer_var;
          ui_callback = ui_long_counter_ptr;
        }
        *(uint8_t *)(ui_long_pointer_var + 3) = 1;
        ui_long_pointer_var = (longlong *)*ui_long_pointer_var;
        *(uint8_t *)(ui_long_pointer_var + 3) = 0;
        ui_long_counter_ptr = (longlong *)ui_event_data[2];
        *ui_long_pointer_var = ui_long_pointer_var[1];
        if (ui_long_pointer_var[1] != 0) {
          *(longlong **)(ui_long_pointer_var[1] + UI_EVENT_FLAG_OFFSET) = ui_long_pointer_var;
        }
        ui_long_pointer_var[2] = ui_long_pointer_var[2];
        ui_long_pointer_var = ui_long_pointer_var;
        if (ui_long_pointer_var != ui_long_counter_ptr) {
          ui_callback_ptr = (uint64_t *)ui_long_pointer_var[2];
          ui_long_pointer_var = ui_long_counter_ptr;
          if (ui_long_pointer_var == (longlong *)ui_callback_ptr[1]) {
            ui_callback_ptr[1] = ui_long_pointer_var;
          }
          else {
            *ui_callback_ptr = ui_long_pointer_var;
          }
        }
        ui_long_pointer_var[1] = (longlong)ui_long_pointer_var;
        goto UI_LABEL_GENERIC_66bfd1;
      }
      *(uint8_t *)(ui_long_counter_ptr + 3) = 1;
      *(uint8_t *)(ui_long_pointer_var + 3) = 1;
      *(uint8_t *)(ui_long_pointer_var + 3) = 0;
    }
    ui_long_pointer_var = (longlong *)ui_event_data[2];
    ui_callback = ui_long_pointer_var;
  } while (ui_long_pointer_var != ui_long_pointer_var);
  *(uint8_t *)(ui_long_pointer_var + 3) = 1;
  return ui_system_return_value;
}

void ui_system_validate_widget_position(uint64_t ui_callback,uint64_t ui_event_type,longlong *ui_event_buffer)

{
  longlong ui_long_counter;
  uint64_t *ui_task_index_pointer;
  longlong *ui_long_pointer_var;
  longlong *in_R10;
  longlong *ui_long_pointer_var;
  longlong ui_register_r11;
  
  do {
    ui_long_pointer_var = (longlong *)in_R10[2];
    if ((char)ui_long_pointer_var[3] != UI_CHAR_NULL) break;
    ui_long_pointer_var = (longlong *)ui_long_pointer_var[2];
    ui_long_pointer_var = ui_long_pointer_var + 2;
    ui_long_counter = ui_long_pointer_var[1];
    if (ui_long_pointer_var == (longlong *)ui_long_counter) {
      ui_long_counter = *ui_long_pointer_var;
      if ((ui_long_counter == 0) || (*(char *)(ui_long_counter + UI_SNAPSHOT_CREATE_FLAGS) != UI_CHAR_NULL)) {
        ui_long_pointer_var = ui_long_pointer_var;
        if ((ui_long_pointer_var != (longlong *)UI_ZERO_OFFSET) && (ui_long_pointer_var = (longlong *)*ui_long_pointer_var, in_R10 == ui_long_pointer_var)) {
          *ui_long_pointer_var = ui_long_pointer_var[1];
          if (ui_long_pointer_var[1] != 0) {
            *(longlong **)(ui_long_pointer_var[1] + UI_EVENT_FLAG_OFFSET) = ui_long_pointer_var;
          }
          ui_long_pointer_var[2] = *ui_long_pointer_var;
          ui_long_pointer_var = ui_long_pointer_var;
          if (ui_long_pointer_var != ui_event_data) {
            ui_task_index_pointer = (uint64_t *)*ui_long_pointer_var;
            ui_long_pointer_var = ui_event_data;
            if (ui_long_pointer_var == (longlong *)ui_task_index_pointer[1]) {
              ui_task_index_pointer[1] = ui_long_pointer_var;
            }
            else {
              *ui_task_index_pointer = ui_long_pointer_var;
            }
          }
          ui_long_pointer_var[1] = (longlong)ui_long_pointer_var;
          *ui_long_pointer_var = (longlong)ui_long_pointer_var;
          *(longlong **)(ui_register_r11 + UI_EVENT_FLAG_OFFSET) = ui_long_pointer_var;
          ui_long_pointer_var = (longlong *)*ui_long_pointer_var;
          in_R10 = ui_long_pointer_var;
        }
        *(uint8_t *)((longlong)ui_long_pointer_var + UI_SNAPSHOT_CREATE_FLAGS) = 1;
        ui_long_pointer_var = (longlong *)ui_long_pointer_var[1];
        *(uint8_t *)(ui_long_pointer_var + 3) = 0;
        ui_long_pointer_var = *(longlong **)(ui_register_r11 + UI_EVENT_FLAG_OFFSET);
        ui_long_pointer_var[1] = *ui_long_pointer_var;
        if (*ui_long_pointer_var != 0) {
          *(longlong **)(*ui_long_pointer_var + UI_EVENT_FLAG_OFFSET) = ui_long_pointer_var;
        }
        ui_long_pointer_var[2] = ui_long_pointer_var[2];
        if (ui_long_pointer_var == ui_long_pointer_var) {
          *ui_long_pointer_var = (longlong)ui_long_pointer_var;
          ui_long_pointer_var = ui_long_pointer_var;
        }
        else {
          ui_task_index_pointer = (uint64_t *)ui_long_pointer_var[2];
          if (ui_long_pointer_var == (longlong *)*ui_task_index_pointer) {
            *ui_task_index_pointer = ui_long_pointer_var;
            *ui_long_pointer_var = (longlong)ui_long_pointer_var;
          }
          else {
            ui_task_index_pointer[1] = ui_long_pointer_var;
            *ui_long_pointer_var = (longlong)ui_long_pointer_var;
          }
        }
UI_LABEL_GENERIC_66bfd1:
        ui_long_pointer_var[2] = (longlong)ui_long_pointer_var;
        *(longlong **)(ui_register_r11 + UI_EVENT_FLAG_OFFSET) = ui_long_pointer_var;
        ui_long_pointer_var = in_R10;
      }
      else {
        *(uint8_t *)(ui_long_pointer_var + 3) = 1;
        *(uint8_t *)(ui_long_counter + UI_SNAPSHOT_CREATE_FLAGS) = 1;
        *(uint8_t *)(ui_long_pointer_var + 3) = 0;
      }
    }
    else {
      if ((ui_long_counter == 0) || (*(char *)(ui_long_counter + UI_SNAPSHOT_CREATE_FLAGS) != UI_CHAR_NULL)) {
        ui_long_pointer_var = (longlong *)ui_long_pointer_var[1];
        ui_long_pointer_var = ui_long_pointer_var;
        if (in_R10 == ui_long_pointer_var) {
          ui_long_pointer_var[1] = *ui_long_pointer_var;
          if (*ui_long_pointer_var != 0) {
            *(longlong **)(*ui_long_pointer_var + UI_EVENT_FLAG_OFFSET) = ui_long_pointer_var;
          }
          ui_long_pointer_var[2] = *ui_long_pointer_var;
          ui_long_pointer_var = ui_long_pointer_var;
          if (ui_long_pointer_var != ui_event_data) {
            ui_long_pointer_var = (longlong *)*ui_long_pointer_var;
            ui_long_pointer_var = ui_event_data;
            if (ui_long_pointer_var == (longlong *)*ui_long_pointer_var) {
              *ui_long_pointer_var = (longlong)ui_long_pointer_var;
            }
            else {
              ui_long_pointer_var[1] = (longlong)ui_long_pointer_var;
            }
          }
          *ui_long_pointer_var = (longlong)ui_long_pointer_var;
          *(longlong **)(ui_register_r11 + UI_EVENT_FLAG_OFFSET) = ui_long_pointer_var;
          ui_long_pointer_var = (longlong *)*ui_long_pointer_var;
          in_R10 = ui_long_pointer_var;
        }
        *(uint8_t *)((longlong)ui_long_pointer_var + UI_SNAPSHOT_CREATE_FLAGS) = 1;
        ui_long_pointer_var = (longlong *)*ui_long_pointer_var;
        *(uint8_t *)(ui_long_pointer_var + 3) = 0;
        ui_long_pointer_var = *(longlong **)(ui_register_r11 + UI_EVENT_FLAG_OFFSET);
        *ui_long_pointer_var = ui_long_pointer_var[1];
        if (ui_long_pointer_var[1] != 0) {
          *(longlong **)(ui_long_pointer_var[1] + UI_EVENT_FLAG_OFFSET) = ui_long_pointer_var;
        }
        ui_long_pointer_var[2] = ui_long_pointer_var[2];
        ui_long_pointer_var = ui_long_pointer_var;
        if (ui_long_pointer_var != ui_long_pointer_var) {
          ui_task_index_pointer = (uint64_t *)ui_long_pointer_var[2];
          ui_long_pointer_var = ui_long_pointer_var;
          if (ui_long_pointer_var == (longlong *)ui_task_index_pointer[1]) {
            ui_task_index_pointer[1] = ui_long_pointer_var;
          }
          else {
            *ui_task_index_pointer = ui_long_pointer_var;
          }
        }
        ui_long_pointer_var[1] = (longlong)ui_long_pointer_var;
        goto UI_LABEL_GENERIC_66bfd1;
      }
      *(uint8_t *)(ui_long_pointer_var + 3) = 1;
      *(uint8_t *)(ui_long_counter + UI_SNAPSHOT_CREATE_FLAGS) = 1;
      *(uint8_t *)(ui_long_pointer_var + 3) = 0;
    }
    ui_event_data = *(longlong **)(ui_register_r11 + UI_EVENT_FLAG_OFFSET);
    in_R10 = ui_long_pointer_var;
  } while (ui_long_pointer_var != ui_event_data);
  *(uint8_t *)(ui_event_data + 3) = 1;
  return ui_system_return_value;
}

void ui_system_set_widget_z_order(uint64_t ui_callback,uint64_t ui_event_type,longlong ui_event_data)

{
  *(uint8_t *)(ui_event_data + UI_SNAPSHOT_CREATE_FLAGS) = 1;
  return ui_system_return_value;
}

uint ui_system_calculate_widget_area(float *ui_callback,uint ui_event_type)

{
  uint ui_system_event_id;
  longlong ui_event_index;
  uint *ui_callback_ptr;
  float ui_temp_float;
  
  ui_callback_ptr = (uint *)&ui_global_animation_system;
  ui_event_index = UI_MAX_COMPONENT_VALUE;
  do {
    ui_event_index = ui_event_index >> 1;
    if (ui_callback_ptr[ui_event_index] < (uint)(longlong)((float)ui_event_type / *ui_callback)) {
      ui_callback_ptr = ui_callback_ptr + ui_event_index + 1;
      ui_event_index = ui_event_index + (-1 - ui_event_index);
    }
    ui_event_index = ui_event_index;
  } while (0 < ui_event_index);
  ui_system_event_id = *ui_callback_ptr;
  float_value = (float)ceilf((float)ui_system_event_id * *ui_callback);
  ui_callback[2] = (float)(longlong)float_value;
  return return ui_system_event_id;
}

uint ui_system_get_widget_coverage(float *ui_callback,uint ui_event_type)

{
  uint ui_system_event_id;
  longlong ui_event_index;
  uint *ui_callback_ptr;
  float ui_temp_float;
  
  ui_callback_ptr = (uint *)&ui_global_animation_system;
  ui_event_index = UI_MAX_COMPONENT_VALUE;
  do {
    ui_event_index = ui_event_index >> 1;
    if (ui_callback_ptr[ui_event_index] < ui_event_type) {
      ui_callback_ptr = ui_callback_ptr + ui_event_index + 1;
      ui_event_index = ui_event_index + (-1 - ui_event_index);
    }
    ui_event_index = ui_event_index;
  } while (0 < ui_event_index);
  ui_system_event_id = *ui_callback_ptr;
  float_value = (float)ceilf((float)ui_system_event_id * *ui_callback);
  ui_callback[2] = (float)(longlong)float_value;
  return return ui_system_event_id;
}

uint8_t * ui_system_process_widget_clipping(float *ui_callback,uint8_t *ui_event_type,uint ui_event_data,int ui_event_flags,int ui_parameter_value)

{
  uint ui_system_event_id;
  longlong ui_event_index;
  uint *ui_callback_ptr;
  float ui_temp_float;
  
  if ((uint)(ui_parameter_value + ui_event_flags) <= (uint)ui_callback[2]) {
    *ui_event_type = 0;
    *(uint32_t *)(ui_event_type + 4) = 0;
    return return ui_event_type;
  }
  float_value = *ui_callback;
  ui_system_event_id = 0;
  if (ui_event_data != 1) {
    ui_system_event_id = ui_event_data;
  }
  float_value = (float)(uint)(ui_parameter_value + ui_event_flags) / float_value;
  float_value = (float)ui_system_event_id;
  if (float_value <= float_value) {
    float_value = (float)ceilf(float_value * float_value);
    *ui_event_type = 0;
    *(uint32_t *)(ui_event_type + 4) = 0;
    ui_callback[2] = (float)(longlong)float_value;
    return return ui_event_type;
  }
  ui_callback_ptr = (uint *)&ui_global_animation_system;
  float_value = float_value * ui_callback[1];
  if (float_value * ui_callback[1] <= float_value) {
    float_value = float_value;
  }
  ui_event_index = UI_MAX_COMPONENT_VALUE;
  do {
    ui_event_index = ui_event_index >> 1;
    if (ui_callback_ptr[ui_event_index] < (uint)(longlong)float_value) {
      ui_callback_ptr = ui_callback_ptr + ui_event_index + 1;
      ui_event_index = ui_event_index + (-1 - ui_event_index);
    }
    ui_event_index = ui_event_index;
  } while (0 < ui_event_index);
  ui_system_event_id = *ui_callback_ptr;
  float_value = (float)ceilf((float)ui_system_event_id * float_value);
  *(uint *)(ui_event_type + 4) = ui_system_event_id;
  *ui_event_type = 1;
  ui_callback[2] = (float)(longlong)float_value;
  return return ui_event_type;
}

void ui_system_update_widget_clipping_region(float ui_callback,float ui_event_type,uint *ui_event_data)

{
  uint ui_system_event_id;
  longlong ui_event_index;
  longlong ui_system_register_long;
  uint8_t *ui_system_register;
  float ui_temp_float;
  float ui_xmm_register_secondary_Da;
  
  if (ui_callback <= ui_event_type) {
    ui_callback = ui_event_type;
  }
  ui_event_index = UI_MAX_COMPONENT_VALUE;
  do {
    ui_event_index = ui_event_index >> 1;
    if (ui_event_data[ui_event_index] < (uint)(longlong)ui_callback) {
      ui_event_data = ui_event_data + ui_event_index + 1;
      ui_event_index = ui_event_index + (-1 - ui_event_index);
    }
    ui_event_index = ui_event_index;
  } while (0 < ui_event_index);
  ui_system_event_id = *ui_event_data;
  float_value = (float)ceilf((float)ui_system_event_id * ui_xmm_register_secondary_Da);
  *(uint *)(ui_system_register + UI_OFFSET_REGISTER_POSITIVE_4) = ui_system_event_id;
  *ui_system_register = UI_INT_VALUE_1;
  *(int *)(ui_system_register + 8) = (int)(longlong)float_value;
  return ui_system_return_value;
}

void ui_system_set_widget_clip_bounds(float ui_callback,uint64_t ui_event_type,float ui_event_data)

{
  longlong ui_system_register_long;
  uint8_t *ui_system_register;
  float ui_temp_float;
  
  float_value = (float)ceilf(ui_callback * ui_event_data);
  *ui_system_register = 0;
  *(uint32_t *)(ui_system_register + UI_OFFSET_REGISTER_POSITIVE_4) = 0;
  *(int *)(ui_system_register + 8) = (int)(longlong)float_value;
  return ui_system_return_value;
}

int ui_system_validate_widget_clipping(uint64_t *ui_callback,uint64_t *ui_event_type,uint64_t ui_event_data,uint ui_event_flags,
                 int ui_parameter_value)

{
  int ui_temp_state_value;
  uint64_t ui_system_task_id;
  
  if (ui_parameter_value == 9) {
    if ((ui_callback == (uint64_t *)UI_ZERO_OFFSET) || (ui_event_type == (uint64_t *)UI_ZERO_OFFSET)) {
      ui_temp_state_value = 8;
    }
    else if (*(int *)(ui_event_type + 1) == 5) {
      if (((ui_event_flags >> UI_EVENT_FLAG_OFFSET & 1) == 0) || ((*(uint *)((longlong)ui_event_type + 12) & UI_STACK_SIZE_64000) != 0)) {
        if (((ui_event_flags >> UI_RESOURCE_LOAD_TYPE & 1) == 0) || ((*(uint *)((longlong)ui_event_type + 12) & UI_STACK_SIZE_128000) != 0)) {
          if (((ui_event_flags >> UI_NETWORK_RESOURCE_TYPE & 1) == 0) || ((*(uint *)((longlong)ui_event_type + 12) & 0x100000) != 0)
             ) {
            if ((*(byte *)((longlong)ui_event_type + 12) & 1) == 0) {
              ui_temp_state_value = 4;
            }
            else {
              ui_system_task_id = 0;
              *ui_callback = 0;
              ui_callback[2] = 0;
              ui_callback[3] = 0;
              ui_callback[4] = 0;
              ui_callback[5] = 0;
              ui_callback[6] = 0;
              ui_callback[1] = ui_event_type;
              *ui_callback = *ui_event_type;
              ui_callback[6] = 0;
              *(uint *)(ui_callback + 4) = ui_event_flags;
              ui_callback[5] = ui_event_data;
              ui_temp_state_value = (*(ui_error_code *)ui_event_type[2])(ui_callback,0);
              if (ui_temp_state_value != 0) {
                if ((uint64_t *)ui_callback[6] != (uint64_t *)UI_ZERO_OFFSET) {
                  ui_system_task_id = *(uint64_t *)ui_callback[6];
                }
                ui_callback[3] = ui_system_task_id;
                ui_system_get_clip_region_data(ui_callback);
              }
            }
          }
          else {
            ui_temp_state_value = 4;
          }
        }
        else {
          ui_temp_state_value = 4;
        }
      }
      else {
        ui_temp_state_value = 4;
      }
    }
    else {
      ui_temp_state_value = 3;
    }
  }
  else {
    ui_temp_state_value = 3;
  }
  if (ui_callback != (uint64_t *)UI_ZERO_OFFSET) {
    *(int *)(ui_callback + 2) = ui_temp_state_value;
  }
  return return ui_temp_state_value;
}

int ui_system_check_widget_clip_intersection(uint64_t *ui_callback,uint64_t *ui_event_type,uint64_t ui_event_data,uint ui_event_flags)

{
  int ui_temp_state_value;
  uint64_t ui_system_task_id;
  longlong in_R10;
  bool in_ZF;
  
  if (in_ZF) {
    if ((ui_callback == (uint64_t *)UI_ZERO_OFFSET) || (ui_event_type == (uint64_t *)UI_ZERO_OFFSET)) {
      ui_temp_state_value = 8;
    }
    else if (*(int *)(ui_event_type + 1) == 5) {
      if (((ui_event_flags >> UI_EVENT_FLAG_OFFSET & 1) == 0) || ((*(uint *)((longlong)ui_event_type + 12) & UI_STACK_SIZE_64000) != 0)) {
        if (((ui_event_flags >> UI_RESOURCE_LOAD_TYPE & 1) == 0) || ((*(uint *)((longlong)ui_event_type + 12) & UI_STACK_SIZE_128000) != 0)) {
          if (((ui_event_flags >> UI_NETWORK_RESOURCE_TYPE & 1) == 0) || ((*(uint *)((longlong)ui_event_type + 12) & 0x100000) != 0)
             ) {
            if ((*(byte *)((longlong)ui_event_type + 12) & 1) == 0) {
              ui_temp_state_value = 4;
            }
            else {
              ui_system_task_id = 0;
              *ui_callback = 0;
              ui_callback[2] = 0;
              ui_callback[3] = 0;
              ui_callback[4] = 0;
              ui_callback[5] = 0;
              ui_callback[6] = 0;
              ui_callback[1] = ui_event_type;
              *ui_callback = *ui_event_type;
              ui_callback[6] = 0;
              *(uint *)(ui_callback + 4) = ui_event_flags;
              ui_callback[5] = ui_event_data;
              ui_temp_state_value = (**(ui_error_code **)(in_R10 + UI_EVENT_FLAG_OFFSET))(ui_callback,0);
              if (ui_temp_state_value != 0) {
                if ((uint64_t *)ui_callback[6] != (uint64_t *)UI_ZERO_OFFSET) {
                  ui_system_task_id = *(uint64_t *)ui_callback[6];
                }
                ui_callback[3] = ui_system_task_id;
                ui_system_get_clip_region_data(ui_callback);
              }
            }
          }
          else {
            ui_temp_state_value = 4;
          }
        }
        else {
          ui_temp_state_value = 4;
        }
      }
      else {
        ui_temp_state_value = 4;
      }
    }
    else {
      ui_temp_state_value = 3;
    }
  }
  else {
    ui_temp_state_value = 3;
  }
  if (ui_callback != (uint64_t *)UI_ZERO_OFFSET) {
    *(int *)(ui_callback + 2) = ui_temp_state_value;
  }
  return return ui_temp_state_value;
}

void ui_system_clear_clip_cache(void)

{
  uint32_t ui_system_register;
  longlong ui_system_register_long;
  
  *(uint32_t *)(ui_system_register + UI_EVENT_FLAG_OFFSET) = ui_system_register;
  return ui_system_return_value;
}

void ui_system_update_widget_clip_state(longlong ui_callback,longlong ui_event_type,int ui_event_data)

{
  uint32_t ui_system_event_id;
  
  if (ui_callback != 0) {
    if (ui_event_type == 0) {
      if (ui_event_data == 0) {
UI_LABEL_GENERIC_66c500:
        if ((*(longlong *)(ui_callback + 8) == 0) || (*(longlong *)(ui_callback + UI_MEMORY_ALLOC_SIZE) == 0)) {
          ui_system_event_id = 1;
        }
        else {
          ui_system_event_id = (**(ui_error_code **)(*(longlong *)(ui_callback + 8) + UI_MEMORY_DEALLOC_OFFSET))();
        }
        goto UI_LABEL_GENERIC_66c4ed;
      }
    }
    else if (ui_event_data != 0) goto UI_LABEL_GENERIC_66c500;
  }
  ui_system_event_id = 8;
UI_LABEL_GENERIC_66c4ed:
  if (ui_callback != 0) {
    *(uint32_t *)(ui_callback + UI_EVENT_FLAG_OFFSET) = ui_system_event_id;
  }
  return ui_system_return_value;
}

uint64_t ui_system_calculate_clip_bounds(longlong ui_callback,longlong *ui_event_data_buffer_type)

{
  uint *ui_event_buffer;
  int ui_result_status;
  longlong ui_event_index;
  
  ui_event_buffer = (uint *)*ui_event_type;
  if ((ui_event_buffer != (uint *)UI_ZERO_OFFSET) && (*(int *)(ui_callback + UI_MEMORY_RESOURCE_TYPE8) == 0)) {
    ui_event_index = *(longlong *)(ui_callback + UI_GUARD_CHECK_TYPE0) + UI_NETWORK_RESOURCE_TYPEc0;
    ui_result_status = ui_system_get_clip_state(ui_event_index,3);
    ui_result_status = ui_system_get_clip_state(ui_event_index,2);
    ui_result_status = ui_system_get_clip_state(ui_event_index,1);
    *ui_event_buffer = (uint)(ui_result_status != 0) | -(uint)(ui_result_status != 0) & 2 | -(uint)(ui_result_status != 0) & 4;
    return return 0;
  }
  return return 8;
}

/**
 * @brief 获取UI系统的裁剪区域状态
 * 
 * 从UI系统中获取当前的裁剪区域状态信息，包括裁剪边界、
 * 裁剪模式等状态参数，用于后续的渲染操作。
 * 
 * @param ui_callback UI系统回调指针，包含系统上下文信息
 * @return uint64_t 裁剪状态结果码，0表示成功，非0表示错误
 */
uint64_t ui_system_get_clip_area(longlong ui_callback)

{
  int ui_temp_state_value;
  int ui_result_status;
  longlong ui_event_index;
  uint *ui_system_register_int_ptr;
  
  ui_event_index = *(longlong *)(ui_callback + UI_GUARD_CHECK_TYPE0) + UI_NETWORK_RESOURCE_TYPEc0;
  ui_temp_state_value = ui_system_get_clip_state(ui_event_index,3);
  ui_result_status = ui_system_get_clip_state(ui_event_index,2);
  ui_result_status = ui_system_get_clip_state(ui_event_index,1);
  *ui_system_register = (uint)(ui_result_status != 0) | -(uint)(ui_result_status != 0) & 2 | -(uint)(ui_temp_state_value != 0) & 4;
  return return 0;
}

/**
 * @brief 重置UI系统的裁剪状态
 * 
 * 将UI系统的裁剪状态重置为默认值，清除所有当前的裁剪设置，
 * 为新的渲染操作准备干净的裁剪环境。
 * 
 * @return uint64_t 操作结果码，8表示成功重置
 */
uint64_t ui_system_reset_clip_state(void)

{
  return return 8;
}

/**
 * @brief 验证UI系统的裁剪区域有效性
 * 
 * 验证当前设置的裁剪区域是否有效，包括边界检查、重叠检测等，
 * 确保裁剪区域设置正确，可以安全地进行渲染操作。
 * 
 * @param ui_callback UI系统回调指针，包含系统上下文信息
 * @return uint64_t 验证结果码，0表示验证通过
 */
uint64_t ui_system_validate_clip_area(longlong ui_callback)

{
  uint64_t *ui_event_buffer;
  longlong ui_event_index;
  
  ui_system_initialize_clip_region();
  ui_system_setup_clip_parameters();
  ui_system_configure_clip_bounds();
  if (*(longlong *)(ui_callback + UI_MEMORY_ALLOC_SIZE) == 0) {
    ui_event_index = ui_system_update_clip_state(1);
    *(longlong *)(ui_callback + UI_MEMORY_ALLOC_SIZE) = ui_event_index;
    *(uint32_t *)(ui_event_index + 8) = *(uint32_t *)(ui_callback + UI_OFFSET_32);
    *(uint32_t *)(ui_event_index + 0xe4) = UI_EVENT_FLAG_OFFSET;
    *(uint64_t *)(ui_event_index + 0x108) = 0;
    *(uint64_t *)(ui_event_index + UI_RESOURCE_LOAD_TYPE0) = 0;
    ui_event_buffer = *(uint64_t **)(ui_callback + UI_CALLBACK_HANDLER_OFFSET);
    if (ui_event_buffer != (uint64_t *)UI_ZERO_OFFSET) {
      *(uint64_t *)(ui_event_index + UI_SHUFFLE_MASK_D8) = *ui_event_buffer;
      *(uint32_t *)(ui_event_index + 0xe0) = *(uint32_t *)(ui_event_buffer + 1);
      *(uint64_t **)(ui_callback + UI_CALLBACK_HANDLER_OFFSET) = (uint64_t *)(ui_event_index + UI_SHUFFLE_MASK_D8);
    }
    ui_event_index = *(longlong *)(ui_callback + UI_MEMORY_ALLOC_SIZE);
    *(uint32_t *)(ui_event_index + 700) = 0;
    *(uint *)(ui_event_index + 0x2b8) = *(uint *)(ui_event_index + 8) & UI_STACK_SIZE_64000;
    *(uint32_t *)(ui_event_index + UI_MEMORY_RESOURCE_TYPE8) = 0;
    return return 0;
  }
  *(uint32_t *)(*(longlong *)(ui_callback + UI_MEMORY_ALLOC_SIZE) + UI_MEMORY_RESOURCE_TYPE8) = 0;
  return return 0;
}

uint64_t ui_system_apply_clip_mask(longlong ui_callback)

{
  ui_system_get_clip_monitoring_info(ui_callback + UI_MEMORY_RESOURCE_TYPE8);
  ui_system_release_clip_resources(ui_callback);
  return return 0;
}

void ui_system_remove_clip_mask(void)

{
  ui_system_destroy_clip_region();
  return ui_system_return_value;
}

void ui_system_process_widget_clipping_mask(longlong *ui_callback_context,longlong ui_event_type,ulonglong ui_event_data,longlong ui_event_flags,int ui_parameter_value
                  )

{
  uint64_t *ui_event_buffer;
  uint32_t *ui_task_index_pointer;
  uint64_t *ui_callback_ptr;
  uint32_t *ui_callback_ptr;
  longlong ui_event_index;
  uint32_t ui_loop_counter;
  uint64_t ui_loop_counter;
  longlong long_counter0;
  int ui_event_validation_counter;
  longlong long_counter_two;
  longlong ui_context_pointer;
  longlong ui_window_handle;
  ulonglong ui_event_id_fifth;
  uint8_t ui_stack_array [32];
  longlong ui_stack_parameter_longb8;
  int ui_stack_temp_variable_a8;
  int ui_stack_temp_variable_a4;
  int ui_stack_temp_variable_a0;
  int ui_stack_temp_variable_9c;
  uint ui_stack_variable_uint_98;
  longlong ui_stack_parameter_long;
  longlong *pui_stack_parameter_long;
  longlong ui_stack_parameter_long;
  uint32_t ui_event_mask_primary;
  int ui_stack_temp_variable_64;
  uint64_t ui_stack_operation_flag;
  uint32_t ui_stack_variable_buffer_xor;
  uint ui_stack_temp_54;
  ulonglong ui_stack_variable_uint_50;
  
  ui_stack_variable_uint_50 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_stack_variable_uint_98 = (uint)ui_event_data;
  ui_event_id_fifth = ui_event_data & UI_BIT_MASK_32BIT_FULL;
  ui_stack_temp_variable_a8 = 0;
  ui_stack_temp_variable_a4 = 0;
  pui_stack_parameter_long = ui_callback;
  ui_stack_parameter_long = ui_event_type;
  if (((((int)ui_callback[0x57] != 0) || (ui_event_type != 0)) || (ui_stack_variable_uint_98 != 0)) &&
     (ui_event_validation_counter = ui_system_create_clip_region(ui_callback,ui_event_type,ui_event_data,&ui_stack_temp_variable_a8), 0 < ui_event_validation_counter)) {
    ui_stack_parameter_longb8 = ui_callback[UI_WIDGET_STATE_OFFSET];
    long_counter_two = ui_callback[UI_SYSTEM_CALLBACK_TYPE];
    ui_event_validation_counter = *(int *)((longlong)ui_callback + 0xec);
    ui_stack_temp_variable_a0 = (int)long_counter_two;
    ui_stack_temp_variable_9c = ui_event_validation_counter;
    ui_stack_temp_variable_a8 = ui_system_destroy_clip_region(ui_callback[UI_OFFSET_88],(int)ui_callback[0x61],(longlong)ui_callback + 0xe4,
                              ui_callback[UI_SYSTEM_STATE_OFFSET]);
    if ((ui_stack_temp_variable_a8 == 5) && ((int)ui_callback[UI_OFFSET_30] == 0)) {
      ui_stack_temp_variable_a8 = 0;
    }
    if ((*(int *)((longlong)ui_callback + 0xf4) == 0) && ((int)ui_callback[UI_OFFSET_30] == 0)) {
      ui_stack_temp_variable_a8 = 5;
    }
    if ((*(int *)((longlong)ui_callback + 0xec) != ui_event_validation_counter) ||
       (ui_event_validation_counter = ui_stack_temp_variable_a4, (int)ui_callback[UI_SYSTEM_CALLBACK_TYPE] != (int)long_counter_two)) {
      ui_event_validation_counter = 1;
    }
    if ((ui_stack_temp_variable_a8 == 0) && (*(int *)((longlong)ui_callback + 0xf4) == 0)) {
      ui_event_mask_primary = (uint32_t)ui_callback[UI_SYSTEM_CALLBACK_TYPE];
      ui_stack_operation_flag = 9;
      ui_stack_variable_buffer_xor = (uint32_t)ui_callback[UI_GUARD_CHECK_TYPE];
      ui_stack_temp_54 = *(uint *)(ui_callback + 1) & UI_OFFSET_32000;
      if (((int)ui_callback[UI_GUARD_CHECK_TYPE_2] == 0) && ((*(uint *)(ui_callback + 1) & 0x10000) != 0)) {
        *(uint32_t *)((longlong)ui_callback + 0xfc) = UI_STACK_SIZE_643;
        ui_callback[UI_OFFSET_32] = 4;
      }
      ui_stack_temp_variable_64 = *(int *)((longlong)ui_callback + 0xec);
      ui_stack_temp_variable_a8 = ui_system_process_clip_monitoring_data(ui_callback + 0x35,&ui_event_mask_primary);
      *(uint32_t *)((longlong)ui_callback + 0xf4) = 1;
    }
    if (*(int *)((longlong)ui_callback + 0xf4) != 0) {
      *(longlong *)(ui_callback[0x36] + UI_OFFSET_6830) = ui_callback[UI_SYSTEM_STATE_OFFSET];
      *(longlong *)(ui_callback[0x36] + UI_OFFSET_6838) = ui_callback[UI_WIDGET_STATE_OFFSET];
    }
    if (ui_stack_temp_variable_a8 == 0) {
      long_counter_two = ui_callback[0x36];
      ui_stack_parameter_long = long_counter_two;
      if (ui_event_validation_counter != 0) {
        ui_stack_parameter_long = long_counter_two + UI_NETWORK_RESOURCE_TYPEc0;
        *(int *)(long_counter_two + UI_MEMORY_RESOURCE_TYPE20) = (int)ui_callback[UI_SYSTEM_CALLBACK_TYPE];
        *(uint32_t *)(long_counter_two + UI_MEMORY_RESOURCE_TYPE24) = *(uint32_t *)((longlong)ui_callback + 0xec);
        ui_stack_temp_variable_a4 = *(int *)(long_counter_two + UI_OFFSET_3074);
        ui_stack_parameter_long = long_counter_two;
        ui_event_validation_counter = __intrinsic_setjmp(long_counter_two + UI_RESOURCE_TYPE_CONFIG20,ui_stack_array);
        ui_window_handle = ui_stack_parameter_long;
        long_counter0 = ui_stack_parameter_long;
        if (ui_event_validation_counter != 0) {
          *(uint32_t *)(ui_stack_parameter_long + UI_RESOURCE_TYPE_CONFIG18) = 0;
          ui_system_null_function();
          goto UI_LABEL_GENERIC_66cdc1;
        }
        *(uint32_t *)(ui_stack_parameter_long + UI_RESOURCE_TYPE_CONFIG18) = 1;
        if (*(int *)(ui_stack_parameter_long + 0x760) < 1) {
          *(int *)(ui_stack_parameter_long + 0x760) = ui_stack_temp_variable_a0;
          ui_system_set_clip_region_property(ui_stack_parameter_long,7,&ui_system_config_data);
        }
        if (*(int *)(ui_window_handle + 0x764) < 1) {
          *(int *)(ui_window_handle + 0x764) = ui_stack_temp_variable_9c;
          ui_system_set_clip_region_property(ui_window_handle,7,&ui_system_display_settings);
        }
        ui_event_validation_counter = ui_system_execute_clip_command(ui_window_handle,*(uint32_t *)(ui_window_handle + 0x760),
                               *(uint32_t *)(ui_window_handle + 0x764));
        if (ui_event_validation_counter != 0) {
          ui_system_set_clip_region_property(ui_window_handle,2,&ui_system_color_scheme);
        }
        long_counter_two = (longlong)*(int *)(ui_window_handle + 0x9d4);
        ui_event_validation_counter = 0;
        ui_event_buffer = (uint64_t *)(ui_window_handle + UI_OFFSET_1200 + long_counter_two * UI_WIDGET_BASE_OFFSET);
        ui_loop_counter = ui_event_buffer[1];
        *(uint64_t *)(ui_stack_parameter_long + 0xde0) = *ui_event_buffer;
        *(uint64_t *)(ui_stack_parameter_long + 0xde8) = ui_loop_counter;
        ui_event_buffer = (uint64_t *)(ui_window_handle + 0x790 + long_counter_two * UI_WIDGET_BASE_OFFSET);
        ui_loop_counter = ui_event_buffer[1];
        *(uint64_t *)(ui_stack_parameter_long + 0xdf0) = *ui_event_buffer;
        *(uint64_t *)(ui_stack_parameter_long + 0xdf8) = ui_loop_counter;
        ui_event_buffer = (uint64_t *)(ui_window_handle + 0x7a0 + long_counter_two * UI_WIDGET_BASE_OFFSET);
        ui_loop_counter = ui_event_buffer[1];
        *(uint64_t *)(ui_stack_parameter_long + 0xe00) = *ui_event_buffer;
        *(uint64_t *)(ui_stack_parameter_long + 0xe08) = ui_loop_counter;
        ui_event_buffer = (uint64_t *)(ui_window_handle + 0x7b0 + long_counter_two * UI_WIDGET_BASE_OFFSET);
        ui_loop_counter = ui_event_buffer[1];
        *(uint64_t *)(ui_stack_parameter_long + 0xe10) = *ui_event_buffer;
        *(uint64_t *)(ui_stack_parameter_long + 0xe18) = ui_loop_counter;
        ui_event_buffer = (uint64_t *)(ui_window_handle + UI_EVENT_ID_FOURTH_OFFSET0 + long_counter_two * UI_WIDGET_BASE_OFFSET);
        ui_loop_counter = ui_event_buffer[1];
        *(uint64_t *)(ui_stack_parameter_long + 0xe20) = *ui_event_buffer;
        *(uint64_t *)(ui_stack_parameter_long + 0xe28) = ui_loop_counter;
        ui_event_buffer = (uint64_t *)(ui_window_handle + 2000 + long_counter_two * UI_WIDGET_BASE_OFFSET);
        ui_loop_counter = ui_event_buffer[1];
        *(uint64_t *)(ui_stack_parameter_long + 0xe30) = *ui_event_buffer;
        *(uint64_t *)(ui_stack_parameter_long + 0xe38) = ui_loop_counter;
        ui_event_buffer = (uint64_t *)(ui_window_handle + 0x7e0 + long_counter_two * UI_WIDGET_BASE_OFFSET);
        ui_loop_counter = ui_event_buffer[1];
        *(uint64_t *)(ui_stack_parameter_long + 0xe40) = *ui_event_buffer;
        *(uint64_t *)(ui_stack_parameter_long + 0xe48) = ui_loop_counter;
        ui_event_buffer = (uint64_t *)(ui_window_handle + 0x7f0 + long_counter_two * UI_WIDGET_BASE_OFFSET);
        ui_loop_counter = ui_event_buffer[1];
        *(uint64_t *)(ui_stack_parameter_long + 0xe50) = *ui_event_buffer;
        *(uint64_t *)(ui_stack_parameter_long + 0xe58) = ui_loop_counter;
        ui_event_buffer = (uint64_t *)(ui_window_handle + UI_STACK_SIZE_1280 + long_counter_two * UI_WIDGET_BASE_OFFSET);
        ui_loop_counter = ui_event_buffer[1];
        *(uint64_t *)(ui_stack_parameter_long + 0xe60) = *ui_event_buffer;
        *(uint64_t *)(ui_stack_parameter_long + 0xe68) = ui_loop_counter;
        long_counter_two = (longlong)*(int *)(ui_window_handle + 0x9d0);
        ui_event_buffer = (uint64_t *)(ui_window_handle + UI_OFFSET_1200 + long_counter_two * UI_WIDGET_BASE_OFFSET);
        ui_loop_counter = ui_event_buffer[1];
        *(uint64_t *)(ui_stack_parameter_long + 0xe70) = *ui_event_buffer;
        *(uint64_t *)(ui_stack_parameter_long + 0xe78) = ui_loop_counter;
        ui_event_buffer = (uint64_t *)(ui_window_handle + 0x790 + long_counter_two * UI_WIDGET_BASE_OFFSET);
        ui_loop_counter = ui_event_buffer[1];
        *(uint64_t *)(ui_stack_parameter_long + UI_SYSTEM_CONFIG_OFFSET0) = *ui_event_buffer;
        *(uint64_t *)(ui_stack_parameter_long + UI_SYSTEM_CONFIG_OFFSET8) = ui_loop_counter;
        ui_event_buffer = (uint64_t *)(ui_window_handle + 0x7a0 + long_counter_two * UI_WIDGET_BASE_OFFSET);
        ui_loop_counter = ui_event_buffer[1];
        *(uint64_t *)(ui_stack_parameter_long + 0xe90) = *ui_event_buffer;
        *(uint64_t *)(ui_stack_parameter_long + 0xe98) = ui_loop_counter;
        ui_event_buffer = (uint64_t *)(ui_window_handle + 0x7b0 + long_counter_two * UI_WIDGET_BASE_OFFSET);
        ui_loop_counter = ui_event_buffer[1];
        *(uint64_t *)(ui_stack_parameter_long + 0xea0) = *ui_event_buffer;
        *(uint64_t *)(ui_stack_parameter_long + 0xea8) = ui_loop_counter;
        ui_event_buffer = (uint64_t *)(ui_window_handle + UI_EVENT_ID_FOURTH_OFFSET0 + long_counter_two * UI_WIDGET_BASE_OFFSET);
        ui_loop_counter = ui_event_buffer[1];
        *(uint64_t *)(ui_stack_parameter_long + 0xeb0) = *ui_event_buffer;
        *(uint64_t *)(ui_stack_parameter_long + 0xeb8) = ui_loop_counter;
        ui_event_buffer = (uint64_t *)(ui_window_handle + 2000 + long_counter_two * UI_WIDGET_BASE_OFFSET);
        ui_loop_counter = ui_event_buffer[1];
        *(uint64_t *)(ui_stack_parameter_long + 0xec0) = *ui_event_buffer;
        *(uint64_t *)(ui_stack_parameter_long + 0xec8) = ui_loop_counter;
        ui_event_buffer = (uint64_t *)(ui_window_handle + 0x7e0 + long_counter_two * UI_WIDGET_BASE_OFFSET);
        ui_loop_counter = ui_event_buffer[1];
        *(uint64_t *)(ui_stack_parameter_long + 0xed0) = *ui_event_buffer;
        *(uint64_t *)(ui_stack_parameter_long + 0xed8) = ui_loop_counter;
        ui_event_buffer = (uint64_t *)(ui_window_handle + 0x7f0 + long_counter_two * UI_WIDGET_BASE_OFFSET);
        ui_loop_counter = ui_event_buffer[1];
        *(uint64_t *)(ui_stack_parameter_long + 0xee0) = *ui_event_buffer;
        *(uint64_t *)(ui_stack_parameter_long + 0xee8) = ui_loop_counter;
        ui_task_index_pointer = (uint32_t *)(ui_window_handle + UI_STACK_SIZE_1280 + long_counter_two * UI_WIDGET_BASE_OFFSET);
        ui_loop_counter = ui_task_index_pointer[1];
        ui_loop_counter = ui_task_index_pointer[2];
        ui_loop_counter = ui_task_index_pointer[3];
        *(uint32_t *)(ui_stack_parameter_long + 0xef0) = *ui_task_index_pointer;
        *(uint32_t *)(ui_stack_parameter_long + 0xef4) = ui_loop_counter;
        *(uint32_t *)(ui_stack_parameter_long + 0xef8) = ui_loop_counter;
        *(uint32_t *)(ui_stack_parameter_long + 0xefc) = ui_loop_counter;
        if (0 < *(int *)(long_counter0 + UI_REGISTER_Y_OFFSET90)) {
          long_counter_two = 0;
          do {
            ui_context_pointer = (longlong)*(int *)(ui_window_handle + 0x9d0);
            ui_event_index = *(longlong *)(long_counter0 + UI_REGISTER_Y_OFFSETe0);
            ui_event_buffer = (uint64_t *)(ui_window_handle + UI_OFFSET_1200 + ui_context_pointer * UI_WIDGET_BASE_OFFSET);
            ui_loop_counter = ui_event_buffer[1];
            ui_callback_ptr = (uint64_t *)(ui_event_index + 0xe70 + long_counter_two);
            *ui_callback_ptr = *ui_event_buffer;
            ui_callback_ptr[1] = ui_loop_counter;
            ui_event_buffer = (uint64_t *)(ui_window_handle + 0x790 + ui_context_pointer * UI_WIDGET_BASE_OFFSET);
            ui_loop_counter = ui_event_buffer[1];
            ui_callback_ptr = (uint64_t *)(ui_event_index + UI_SYSTEM_CONFIG_OFFSET0 + long_counter_two);
            *ui_callback_ptr = *ui_event_buffer;
            ui_callback_ptr[1] = ui_loop_counter;
            ui_event_buffer = (uint64_t *)(ui_window_handle + 0x7a0 + ui_context_pointer * UI_WIDGET_BASE_OFFSET);
            ui_loop_counter = ui_event_buffer[1];
            ui_callback_ptr = (uint64_t *)(ui_event_index + 0xe90 + long_counter_two);
            *ui_callback_ptr = *ui_event_buffer;
            ui_callback_ptr[1] = ui_loop_counter;
            ui_event_buffer = (uint64_t *)(ui_window_handle + 0x7b0 + ui_context_pointer * UI_WIDGET_BASE_OFFSET);
            ui_loop_counter = ui_event_buffer[1];
            ui_callback_ptr = (uint64_t *)(ui_event_index + 0xea0 + long_counter_two);
            *ui_callback_ptr = *ui_event_buffer;
            ui_callback_ptr[1] = ui_loop_counter;
            ui_event_buffer = (uint64_t *)(ui_window_handle + UI_EVENT_ID_FOURTH_OFFSET0 + ui_context_pointer * UI_WIDGET_BASE_OFFSET);
            ui_loop_counter = ui_event_buffer[1];
            ui_callback_ptr = (uint64_t *)(ui_event_index + 0xeb0 + long_counter_two);
            *ui_callback_ptr = *ui_event_buffer;
            ui_callback_ptr[1] = ui_loop_counter;
            ui_event_buffer = (uint64_t *)(ui_window_handle + 2000 + ui_context_pointer * UI_WIDGET_BASE_OFFSET);
            ui_loop_counter = ui_event_buffer[1];
            ui_callback_ptr = (uint64_t *)(ui_event_index + 0xec0 + long_counter_two);
            *ui_callback_ptr = *ui_event_buffer;
            ui_callback_ptr[1] = ui_loop_counter;
            ui_event_buffer = (uint64_t *)(ui_window_handle + 0x7e0 + ui_context_pointer * UI_WIDGET_BASE_OFFSET);
            ui_loop_counter = ui_event_buffer[1];
            ui_callback_ptr = (uint64_t *)(ui_event_index + 0xed0 + long_counter_two);
            *ui_callback_ptr = *ui_event_buffer;
            ui_callback_ptr[1] = ui_loop_counter;
            ui_task_index_pointer = (uint32_t *)(ui_window_handle + 0x7f0 + ui_context_pointer * UI_WIDGET_BASE_OFFSET);
            ui_loop_counter = ui_task_index_pointer[1];
            ui_loop_counter = ui_task_index_pointer[2];
            ui_loop_counter = ui_task_index_pointer[3];
            ui_callback_ptr = (uint32_t *)(ui_event_index + 0xee0 + long_counter_two);
            *ui_callback_ptr = *ui_task_index_pointer;
            ui_callback_ptr[1] = ui_loop_counter;
            ui_callback_ptr[2] = ui_loop_counter;
            ui_callback_ptr[3] = ui_loop_counter;
            ui_task_index_pointer = (uint32_t *)(ui_window_handle + UI_STACK_SIZE_1280 + ui_context_pointer * UI_WIDGET_BASE_OFFSET);
            ui_loop_counter = ui_task_index_pointer[1];
            ui_loop_counter = ui_task_index_pointer[2];
            ui_loop_counter = ui_task_index_pointer[3];
            ui_callback_ptr = (uint32_t *)(ui_event_index + 0xef0 + long_counter_two);
            *ui_callback_ptr = *ui_task_index_pointer;
            ui_callback_ptr[1] = ui_loop_counter;
            ui_callback_ptr[2] = ui_loop_counter;
            ui_callback_ptr[3] = ui_loop_counter;
            ui_system_transform_coordinates((longlong)ui_event_validation_counter * UI_NETWORK_RESOURCE_TYPEa0 + *(longlong *)(long_counter0 + UI_REGISTER_Y_OFFSETe0));
            ui_event_validation_counter = ui_event_validation_counter + 1;
            long_counter_two = long_counter_two + UI_NETWORK_RESOURCE_TYPEa0;
          } while (ui_event_validation_counter < *(int *)(long_counter0 + UI_REGISTER_Y_OFFSET90));
        }
        ui_system_transform_coordinates(long_counter0);
        long_counter_two = ui_stack_parameter_long;
        if (*(int *)(long_counter0 + UI_REGISTER_Y_OFFSET80) != 0) {
          ui_system_update_clip_statistics(ui_stack_parameter_long,*(uint32_t *)(ui_window_handle + 0x760),ui_stack_temp_variable_a4);
        }
        ui_event_id_fifth = (ulonglong)ui_stack_variable_uint_98;
        *(uint32_t *)(long_counter0 + UI_RESOURCE_TYPE_CONFIG18) = 0;
        *(uint32_t *)(long_counter_two + UI_OFFSET_2880) = 0;
        ui_callback = pui_stack_parameter_long;
        ui_event_type = ui_stack_parameter_long;
      }
      ui_window_handle = 0;
      long_counter0 = ui_callback[UI_OFFSET_88];
      *(longlong *)(long_counter_two + UI_REGISTER_Y_OFFSET08) = ui_callback[0x57];
      *(longlong *)(long_counter_two + UI_REGISTER_Y_OFFSET10) = long_counter0;
      long_counter0 = ui_callback[0x5a];
      *(longlong *)(long_counter_two + UI_REGISTER_Y_OFFSET18) = ui_callback[0x59];
      *(longlong *)(long_counter_two + UI_REGISTER_Y_OFFSET20) = long_counter0;
      long_counter0 = ui_callback[UI_PATH_SEPARATOR];
      *(longlong *)(long_counter_two + UI_REGISTER_Y_OFFSET28) = ui_callback[0x5b];
      *(longlong *)(long_counter_two + UI_REGISTER_Y_OFFSET30) = long_counter0;
      long_counter0 = ui_callback[0x5e];
      *(longlong *)(long_counter_two + UI_REGISTER_Y_OFFSET38) = ui_callback[0x5d];
      *(longlong *)(long_counter_two + UI_REGISTER_Y_OFFSET40) = long_counter0;
      long_counter0 = ui_callback[UI_WIDGET_CREATE_CALLBACK_OFFSET];
      *(longlong *)(long_counter_two + UI_REGISTER_Y_OFFSET48) = ui_callback[0x5f];
      *(longlong *)(long_counter_two + UI_REGISTER_Y_OFFSET50) = long_counter0;
      long_counter0 = ui_callback[0x62];
      *(longlong *)(long_counter_two + UI_REGISTER_Y_OFFSET58) = ui_callback[0x61];
      *(longlong *)(long_counter_two + UI_REGISTER_Y_OFFSET60) = long_counter0;
      ui_loop_counter = *(uint32_t *)((longlong)ui_callback + UI_TASK_ID_OFFSETc);
      long_counter0 = ui_callback[100];
      ui_loop_counter = *(uint32_t *)((longlong)ui_callback + 0x324);
      *(int *)(long_counter_two + UI_REGISTER_Y_OFFSET68) = (int)ui_callback[99];
      *(uint32_t *)(long_counter_two + UI_REGISTER_Y_OFFSET6c) = ui_loop_counter;
      *(int *)(long_counter_two + UI_REGISTER_Y_OFFSET70) = (int)long_counter0;
      *(uint32_t *)(long_counter_two + UI_REGISTER_Y_OFFSET74) = ui_loop_counter;
      *(longlong *)(long_counter_two + UI_REGISTER_Y_OFFSET78) = ui_callback[0x65];
      ui_callback[0x56] = ui_event_flags;
      ui_event_validation_counter = ui_system_calculate_clip_efficiency(long_counter_two,ui_event_id_fifth,ui_event_type,(longlong)ui_parameter_value);
      if ((ui_event_validation_counter != 0) && (*(int *)(long_counter_two + UI_NETWORK_RESOURCE_TYPEc0) != 0)) {
        if (*(int *)(long_counter_two + UI_NETWORK_RESOURCE_TYPEc4) != 0) {
          ui_window_handle = long_counter_two + UI_NETWORK_RESOURCE_TYPEc8;
        }
        *ui_callback = ui_window_handle;
      }
      *(uint32_t *)((longlong)ui_callback + 700) = 0;
    }
  }
UI_LABEL_GENERIC_66cdc1:
  RenderUIComponent(ui_stack_variable_uint_50 ^ (ulonglong)ui_stack_array);
}

void ui_system_update_clip_hierarchy(longlong ui_callback,longlong *ui_event_data_buffer_type)

{
  int ui_temp_state_value;
  uint8_t ui_stack_array [32];
  uint32_t *pui_stack_temp_e8;
  uint64_t ui_stack_temp_d8;
  uint64_t ui_stack_temp_d0;
  uint32_t ui_stack_unsigned_data_secondary;
  int ui_stack_integer_var_c4;
  uint32_t ui_control_status;
  uint32_t ui_stack_color_data4;
  uint64_t ui_stack_ulong_event_id_primary;
  uint64_t ui_stack_extended_data_primary;
  uint64_t ui_stack_extended_buffer_size;
  uint64_t ui_stack_uint_callback_count_primary;
  uint32_t ui_stack_buffer_mask;
  uint64_t ui_stack_temp_34;
  uint64_t ui_stack_temp_2c;
  uint64_t ui_stack_temp_24;
  ulonglong ui_stack_control_flag;
  
  ui_stack_control_flag = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  if ((*ui_event_type == 0) && (*(longlong *)(ui_callback + UI_GUARD_CHECK_TYPE0) != 0)) {
    ui_stack_temp_d0 = 0;
    ui_stack_temp_d8 = 0;
    ui_stack_buffer_mask = 0;
    ui_stack_temp_34 = 0;
    ui_stack_temp_2c = 0;
    ui_stack_temp_24 = 0;
    if ((*(uint *)(ui_callback + 8) & 0x10000) != 0) {
      ui_stack_buffer_mask = *(uint32_t *)(ui_callback + 0xfc);
      ui_stack_temp_34 = *(uint64_t *)(ui_callback + UI_MAX_COMPONENT_VALUE);
    }
    pui_stack_temp_e8 = &ui_stack_buffer_mask;
    ui_temp_state_value = ui_callback_handler(*(longlong *)(ui_callback + UI_GUARD_CHECK_TYPE0),&ui_stack_unsigned_data_secondary,&ui_stack_temp_d0,&ui_stack_temp_d8);
    if (ui_temp_state_value == 0) {
      *(int *)(ui_callback + UI_RESOURCE_TYPE_CONFIGc) = ui_stack_integer_var_c4;
      *(int *)(ui_callback + UI_RESOURCE_TYPE_CONFIG4) = ui_stack_integer_var_c4;
      *(uint32_t *)(ui_callback + UI_RESOURCE_LOAD_TYPE8) = 0x102;
      *(uint *)(ui_callback + UI_NETWORK_RESOURCE_TYPE8) = ui_stack_integer_var_c4 + 0x4fU & UI_EVENT_FLAG_CLEAR_MASK;
      *(uint32_t *)(ui_callback + UI_RESOURCE_TYPE_CONFIG8) = ui_stack_unsigned_data_secondary;
      *(uint32_t *)(ui_callback + UI_RESOURCE_TYPE_CONFIG0) = ui_stack_unsigned_data_secondary;
      *(uint32_t *)(ui_callback + UI_NETWORK_RESOURCE_TYPE4) = ui_control_status;
      *(uint32_t *)(ui_callback + UI_ANIMATION_DATA_OFFSET) = 1;
      *(uint32_t *)(ui_callback + 0x144) = 1;
      *(uint64_t *)(ui_callback + UI_WIDGET_ANIMATION_CALLBACK_OFFSET) = ui_stack_ulong_event_id_primary;
      *(uint64_t *)(ui_callback + UI_LAYOUT_RESOURCE_TYPE0) = ui_stack_extended_data_primary;
      *(uint32_t *)(ui_callback + UI_OFFSET_22c) = ui_stack_color_data4;
      *(uint32_t *)(ui_callback + UI_RENDER_RESOURCE_TYPE0) = ui_stack_color_data4;
      *(uint64_t *)(ui_callback + UI_LAYOUT_RESOURCE_TYPE8) = ui_stack_extended_buffer_size;
      *(uint64_t *)(ui_callback + UI_OFFSET_220) = 0;
      *(uint32_t *)(ui_callback + UI_OFFSET_228) = ui_control_status;
      *(uint32_t *)(ui_callback + UI_RENDER_RESOURCE_TYPE4) = ui_control_status;
      *(uint32_t *)(ui_callback + 300) = 8;
      *(uint32_t *)(ui_callback + UI_RENDER_RESOURCE_TYPE8) = 12;
      *(uint64_t *)(ui_callback + UI_SNAPSHOT_CREATE_FLAGS0) = *(uint64_t *)(ui_callback + 0x2b0);
      *(uint64_t *)(ui_callback + UI_FLAG_BYTE_8) = ui_stack_uint_callback_count_primary;
      *(uint64_t *)(ui_callback + 400) = 0;
      *ui_event_type = ui_callback + UI_RESOURCE_LOAD_TYPE8;
    }
  }
  RenderUIComponent(ui_stack_control_flag ^ (ulonglong)ui_stack_array);
}

uint64_t ui_system_calculate_clip_intersection(longlong ui_callback,uint64_t *ui_event_type)

{
  uint32_t *ui_event_buffer;
  uint64_t ui_system_task_id;
  int ui_stack_integer_var_98;
  int ui_stack_integer_var_94;
  int ui_stack_integer_var_90;
  int ui_stack_integer_var_8c;
  int ui_stack_integer_var_88;
  uint ui_stack_temp_value4;
  uint ui_stack_extended_buffer_size;
  uint ui_stack_temp_7c;
  uint ui_stack_variable_uint_78;
  uint32_t ui_stack_temp_74;
  uint64_t ui_stack_operation_flag;
  uint64_t ui_stack_variable_buffer_xor;
  uint64_t ui_stack_variable_uint_50;
  uint ui_stack_temp_34;
  
  ui_event_buffer = (uint32_t *)*ui_event_type;
  if ((ui_event_buffer != (uint32_t *)UI_ZERO_OFFSET) && (*(int *)(ui_callback + UI_MEMORY_RESOURCE_TYPE8) == 0)) {
    ui_stack_integer_var_94 = ui_event_buffer[9];
    ui_stack_integer_var_98 = ui_event_buffer[8];
    ui_stack_operation_flag = *(uint64_t *)(ui_event_buffer + ui_component_angle_offset);
    ui_stack_variable_buffer_xor = *(uint64_t *)(ui_event_buffer + UI_EVENT_FLAG_OFFSET);
    ui_stack_extended_buffer_size = ui_stack_integer_var_94 + 1U >> 1;
    ui_stack_integer_var_88 = ui_event_buffer[UI_OFFSET_22];
    ui_stack_temp_value4 = ui_stack_integer_var_98 + 1U >> 1;
    ui_stack_variable_uint_50 = *(uint64_t *)(ui_event_buffer + UI_NETWORK_RESOURCE_TYPE);
    ui_stack_temp_34 = (uint)(ui_stack_integer_var_88 - ui_stack_integer_var_98) >> 1;
    ui_stack_temp_74 = ui_event_buffer[UI_RENDER_RESOURCE_TYPE];
    ui_stack_integer_var_90 = ui_stack_integer_var_98;
    ui_stack_integer_var_8c = ui_stack_integer_var_94;
    ui_stack_temp_7c = ui_stack_temp_value4;
    ui_stack_variable_uint_78 = ui_stack_extended_buffer_size;
    ui_system_task_id = ui_system_optimize_clip_operations(*(uint64_t *)(ui_callback + UI_GUARD_CHECK_TYPE0),*ui_event_buffer,&ui_stack_integer_var_98);
    return return ui_system_task_id;
  }
  return return 8;
}

uint64_t ui_system_validate_clip_hierarchy(longlong ui_callback,uint64_t *ui_event_type)

{
  uint32_t *ui_event_buffer;
  uint64_t ui_system_task_id;
  int ui_stack_integer_var_98;
  int ui_stack_integer_var_94;
  int ui_stack_integer_var_90;
  int ui_stack_integer_var_8c;
  int ui_stack_integer_var_88;
  uint ui_stack_temp_value4;
  uint ui_stack_extended_buffer_size;
  uint ui_stack_temp_7c;
  uint ui_stack_variable_uint_78;
  uint32_t ui_stack_temp_74;
  uint64_t ui_stack_operation_flag;
  uint64_t ui_stack_variable_buffer_xor;
  uint64_t ui_stack_variable_uint_50;
  uint ui_stack_temp_34;
  
  ui_event_buffer = (uint32_t *)*ui_event_type;
  if ((ui_event_buffer != (uint32_t *)UI_ZERO_OFFSET) && (*(int *)(ui_callback + UI_MEMORY_RESOURCE_TYPE8) == 0)) {
    ui_stack_integer_var_94 = ui_event_buffer[9];
    ui_stack_integer_var_98 = ui_event_buffer[8];
    ui_stack_operation_flag = *(uint64_t *)(ui_event_buffer + ui_component_angle_offset);
    ui_stack_variable_buffer_xor = *(uint64_t *)(ui_event_buffer + UI_EVENT_FLAG_OFFSET);
    ui_stack_extended_buffer_size = ui_stack_integer_var_94 + 1U >> 1;
    ui_stack_integer_var_88 = ui_event_buffer[UI_OFFSET_22];
    ui_stack_temp_value4 = ui_stack_integer_var_98 + 1U >> 1;
    ui_stack_variable_uint_50 = *(uint64_t *)(ui_event_buffer + UI_NETWORK_RESOURCE_TYPE);
    ui_stack_temp_34 = (uint)(ui_stack_integer_var_88 - ui_stack_integer_var_98) >> 1;
    ui_stack_temp_74 = ui_event_buffer[UI_RENDER_RESOURCE_TYPE];
    ui_stack_integer_var_90 = ui_stack_integer_var_98;
    ui_stack_integer_var_8c = ui_stack_integer_var_94;
    ui_stack_temp_7c = ui_stack_temp_value4;
    ui_stack_variable_uint_78 = ui_stack_extended_buffer_size;
    ui_system_task_id = ui_system_update_clip_monitoring_state(*(uint64_t *)(ui_callback + UI_GUARD_CHECK_TYPE0),*ui_event_buffer,&ui_stack_integer_var_98);
    return return ui_system_task_id;
  }
  return return 8;
}

uint64_t ui_system_create_clip_region(longlong ui_callback,longlong ui_event_type,int ui_event_data,uint32_t *ui_event_flags)

{
  int ui_temp_state_value;
  
  *ui_event_flags = 0;
  if (*(int *)(ui_callback + 700) == 0) {
    memset(ui_callback + UI_OPERATION_RESULT_OFFSET0,0,UI_SIGNATURE_PART6);
  }
  ui_temp_state_value = *(int *)(ui_callback + 0x2b8);
  if (ui_temp_state_value != 0) {
    if ((ui_event_type != 0) || (ui_event_data != 0)) {
      *(longlong *)(ui_callback + UI_OPERATION_RESULT_OFFSET0 + (ulonglong)*(uint *)(ui_callback + 700) * 8) = ui_event_type;
      *(int *)(ui_callback + UI_MEMORY_ALLOC_SIZE8 + (ulonglong)*(uint *)(ui_callback + 700) * 4) = ui_event_data;
      *(int *)(ui_callback + 700) = *(int *)(ui_callback + 700) + 1;
      if (*(uint *)(ui_callback + 700) < 10) {
        return return 0;
      }
      *(uint32_t *)(ui_callback + 700) = 0;
      *ui_event_flags = 8;
      return return UI_BIT_MASK_32BIT_FULL;
    }
    if (ui_temp_state_value != 0) {
      return return 1;
    }
  }
  if ((ui_event_type == 0) && (ui_event_data == 0)) {
    return return 0;
  }
  if (ui_temp_state_value == 0) {
    *(longlong *)(ui_callback + UI_OPERATION_RESULT_OFFSET0) = ui_event_type;
    *(int *)(ui_callback + UI_MEMORY_ALLOC_SIZE8) = ui_event_data;
    *(uint32_t *)(ui_callback + 700) = 1;
  }
  return return 1;
}

void ui_system_destroy_clip_region(byte *ui_callback,uint ui_event_type,longlong ui_event_data,ui_error_code *ui_event_flags,uint64_t ui_parameter_value)

{
  uint ui_system_event_id;
  uint8_t ui_stack_array [32];
  byte abooluiui_stack_var_var_38 [16];
  ulonglong ui_stack_variable_uint_28;
  
  ui_stack_variable_uint_28 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  if (ui_callback < ui_callback + ui_event_type) {
    if (ui_event_flags != (ui_error_code *)UI_ZERO_OFFSET) {
      ui_system_event_id = ui_event_type;
      if (10 < ui_event_type) {
        ui_system_event_id = 10;
      }
      (*ui_event_flags)(ui_parameter_value,ui_callback,abooluiui_stack_var_var_38,ui_system_event_id);
      ui_callback = abooluiui_stack_var_var_38;
    }
    *(uint32_t *)(ui_event_data + 12) = 0;
    if ((((9 < ui_event_type) && ((*ui_callback & 1) == 0)) &&
        (*(uint32_t *)(ui_event_data + 12) = 1, ui_callback[3] == 0x9d)) &&
       ((ui_callback[4] == 1 && (ui_callback[5] == 0x2a)))) {
      *(uint *)(ui_event_data + 4) = *(ushort *)(ui_callback + 6) & UI_BIT_SHIFT_63ff;
      *(uint *)(ui_event_data + 8) = *(ushort *)(ui_callback + 8) & UI_BIT_SHIFT_63ff;
    }
  }
  RenderUIComponent(ui_stack_variable_uint_28 ^ (ulonglong)ui_stack_array);
}

uint64_t ui_system_get_clip_region_data(uint64_t *ui_callback)

{
  if (ui_callback == (uint64_t *)UI_ZERO_OFFSET) {
    return return 8;
  }
  if ((ui_callback[1] != 0) && (ui_callback[6] != 0)) {
    (**(ui_error_code **)(ui_callback[1] + UI_SNAPSHOT_CREATE_FLAGS))();
    ui_callback[1] = 0;
    *ui_callback = 0;
    ui_callback[6] = 0;
    *(uint32_t *)(ui_callback + 2) = 0;
    return return 0;
  }
  *(uint32_t *)(ui_callback + 2) = 1;
  return return 1;
}

void ui_system_set_clip_region_property(uint32_t *ui_callback,uint32_t ui_event_type,longlong ui_event_data,uint64_t ui_event_flags)

{
  ulonglong *ui_event_data_buffer_buffer;
  uint64_t ui_stack_event_parameter;
  
  *ui_callback = ui_event_type;
  ui_callback[1] = 0;
  ui_stack_event_parameter = ui_event_flags;
  if (ui_event_data != 0) {
    ui_callback[1] = UI_INT_VALUE_1;
    ui_event_buffer = (ulonglong *)ui_system_event_data_allocator();
    __stdio_common_vsprintf(*ui_event_buffer | 2,ui_callback + 2,0x4f,ui_event_data,0,&ui_stack_event_parameter);
    *(uint8_t *)((longlong)ui_callback + 0x57) = 0;
  }
  if (ui_callback[UI_OFFSET_22] == 0) {
    return ui_system_return_value;
  }
  longjmp(ui_callback + UI_SNAPSHOT_CREATE_FLAGS,*ui_callback);
}

void ui_system_update_clip_region_bounds(uint32_t *ui_callback,uint32_t ui_event_type,longlong ui_event_data)

{
  ulonglong *ui_event_data_buffer_buffer;
  
  *ui_callback = ui_event_type;
  ui_callback[1] = 0;
  if (ui_event_data != 0) {
    ui_callback[1] = UI_INT_VALUE_1;
    ui_event_buffer = (ulonglong *)ui_system_event_data_allocator();
    __stdio_common_vsprintf(*ui_event_buffer | 2,ui_callback + 2,0x4f,ui_event_data,0);
    *(uint8_t *)((longlong)ui_callback + 0x57) = 0;
  }
  if (ui_callback[UI_OFFSET_22] == 0) {
    return ui_system_return_value;
  }
  longjmp(ui_callback + UI_SNAPSHOT_CREATE_FLAGS,*ui_callback);
}

void ui_system_clear_clip_region(longlong ui_callback)

{
  ulonglong *ui_event_data_buffer_buffer;
  uint32_t *ui_system_register;
  
  *(uint32_t *)(ui_callback + 4) = 1;
  ui_event_buffer = (ulonglong *)ui_system_event_data_allocator();
  __stdio_common_vsprintf(*ui_event_buffer | 2,ui_system_register + 2,0x4f);
  *(uint8_t *)((longlong)ui_system_register + 0x57) = 0;
  if (ui_system_register[UI_OFFSET_22] == 0) {
    return ui_system_return_value;
  }
  longjmp(ui_system_register + UI_SNAPSHOT_CREATE_FLAGS,*ui_system_register);
}

void ui_system_reset_clip_system(void)

{
  uint32_t *ui_system_register;
  
  if (ui_system_register[UI_OFFSET_22] == 0) {
    return ui_system_return_value;
  }
  longjmp(ui_system_register + UI_SNAPSHOT_CREATE_FLAGS,*ui_system_register);
}

void ui_system_flush_clip_operations(void)

{
  return ui_system_return_value;
}

void ui_system_process_clip_queue(ui_error_code *ui_callback)

{
  int ui_temp_state_value;
  longlong ui_event_index;
  bool ui_bool_result;
  
  if (_uiControlPanelHandle == 0) {
    LOCK();
    _uiControlPanelContext = _uiControlPanelContext + 1;
    UNLOCK();
    ui_event_index = ui_memory_allocation(UI_CALLBACK_HANDLER_OFFSET);
    InitializeCriticalSection(ui_event_index);
    LOCK();
    ui_bool_result = _uiControlPanelConfig != 0;
    ui_event_index = ui_event_index;
    if (ui_bool_result) {
      ui_event_index = _uiControlPanelConfig;
    }
    _uiControlPanelConfig = ui_event_index;
    UNLOCK();
    if (ui_bool_result) {
      DeleteCriticalSection(ui_event_index);
      ui_memory_free(ui_event_index);
    }
    EnterCriticalSection(_uiControlPanelConfig);
    if (_uiControlPanelHandle == 0) {
      (*ui_callback)();
      _uiControlPanelHandle = 1;
    }
    LeaveCriticalSection(_uiControlPanelConfig);
    LOCK();
    ui_temp_state_value = _uiControlPanelContext + -1;
    UNLOCK();
    ui_bool_result = _uiControlPanelContext == 1;
    _uiControlPanelContext = ui_temp_state_value;
    if (ui_bool_result) {
      DeleteCriticalSection(_uiControlPanelConfig);
      ui_memory_free(_uiControlPanelConfig);
      _uiControlPanelConfig = 0;
    }
  }
  return ui_system_return_value;
}

void ui_system_finalize_clip_operations(void)

{
  int ui_temp_state_value;
  longlong ui_event_index;
  ui_error_code *ui_system_register;
  bool ui_bool_result;
  
  LOCK();
  _uiControlPanelContext = _uiControlPanelContext + 1;
  UNLOCK();
  ui_event_index = ui_memory_allocation(UI_CALLBACK_HANDLER_OFFSET);
  InitializeCriticalSection(ui_event_index);
  LOCK();
  ui_bool_result = _uiControlPanelConfig != 0;
  ui_event_index = ui_event_index;
  if (ui_bool_result) {
    ui_event_index = _uiControlPanelConfig;
  }
  _uiControlPanelConfig = ui_event_index;
  UNLOCK();
  if (ui_bool_result) {
    DeleteCriticalSection(ui_event_index);
    ui_memory_free(ui_event_index);
  }
  EnterCriticalSection(_uiControlPanelConfig);
  if (_uiControlPanelHandle == 0) {
    (*ui_system_register)();
    _uiControlPanelHandle = 1;
  }
  LeaveCriticalSection(_uiControlPanelConfig);
  LOCK();
  ui_temp_state_value = _uiControlPanelContext + -1;
  UNLOCK();
  ui_bool_result = _uiControlPanelContext == 1;
  _uiControlPanelContext = ui_temp_state_value;
  if (ui_bool_result) {
    DeleteCriticalSection(_uiControlPanelConfig);
    ui_memory_free(_uiControlPanelConfig);
    _uiControlPanelConfig = 0;
  }
  return ui_system_return_value;
}

void ui_system_cleanup_clip_system(void)

{
  int ui_temp_state_value;
  ui_error_code *ui_system_register;
  bool ui_bool_result;
  
  (*ui_system_register)();
  _uiControlPanelHandle = 1;
  LeaveCriticalSection(_uiControlPanelConfig);
  LOCK();
  ui_temp_state_value = _uiControlPanelContext + -1;
  UNLOCK();
  ui_bool_result = _uiControlPanelContext == 1;
  _uiControlPanelContext = ui_temp_state_value;
  if (ui_bool_result) {
    DeleteCriticalSection(_uiControlPanelConfig);
    ui_memory_free(_uiControlPanelConfig);
    _uiControlPanelConfig = 0;
  }
  return ui_system_return_value;
}

void ui_initialize_cpu_features(void)

{
  uint *ui_event_buffer;
  longlong ui_event_index;
  uint ui_loop_counter;
  bool ui_bool_result;
  byte in_XCR0;
  
  ui_event_buffer = (uint *)cpuid_basic_info(0);
  ui_bool_result = false;
  if (*ui_event_buffer != 0) {
    ui_event_index = cpuid_Version_info(1);
    ui_loop_counter = *(uint *)(ui_event_index + 12);
    ui_bool_result = (ui_loop_counter & 1) != 0;
    ui_bool_result = (ui_loop_counter >> 9 & 1) != 0;
    ui_bool_result = (ui_loop_counter >> UI_RESOURCE_TYPE_CONFIG & 1) != 0;
    if ((((ui_loop_counter & UI_SNAPSHOT_CREATE_FLAGS000000) == UI_SNAPSHOT_CREATE_FLAGS000000) && ((in_XCR0 & 6) == 6)) && (6 < *ui_event_buffer)) {
      cpuid_Extended_Feature_Enumeration_info(7);
    }
  }
  _uiLayoutMainHandle = &ui_system_active_window;
  if (ui_bool_result) {
    _uiLayoutMainHandle = &ui_system_hovered_widget;
  }
  _uiLayoutContext = &ui_system_focused_widget;
  if (ui_bool_result) {
    _uiLayoutContext = &ui_system_modal_dialog;
  }
  _uiLayoutConfig = &ui_system_dragged_widget;
  if (ui_bool_result) {
    _uiLayoutConfig = &ui_system_dropped_target;
  }
  _uiLayoutPanel = ui_initialize_system;
  if (ui_bool_result) {
    _uiLayoutPanel = ui_create_window_manager;
  }
  _uiLayoutWidget = ui_setup_texture_manager;
  if (ui_bool_result) {
    _uiLayoutWidget = ui_initialize_layout_engine;
  }
  _uiLayoutContainer = ui_initialize_event_system;
  if (ui_bool_result) {
    _uiLayoutContainer = ui_setup_rendering_context;
  }
  if (ui_bool_result) {
    _uiLayoutContainer = ui_initialize_input_handler;
  }
  _uiLayoutElement = ui_load_theme_manager;
  if (ui_bool_result) {
    _uiLayoutElement = ui_initialize_font_cache;
  }
  _uiLayoutItem = ui_create_widget_factory;
  if (ui_bool_result) {
    _uiLayoutItem = ui_system_create_layout_item;
  }
  _uiLayoutComponent = ui_system_process_layout_component;
  if (ui_bool_result) {
    _uiLayoutComponent = ui_system_update_layout_component;
  }
  _uiLayoutSection = ui_system_validate_layout_section;
  if (ui_bool_result) {
    _uiLayoutSection = ui_system_process_layout_section;
  }
  _uiLayoutGroup = ui_system_handle_layout_group;
  if (ui_bool_result) {
    _uiLayoutGroup = ui_create_progress_widget;
  }
  _uiLayoutBlock = ui_system_create_layout_block;
  if (ui_bool_result) {
    _uiLayoutBlock = ui_system_update_layout_block;
  }
  return ui_system_return_value;
}

void ui_system_initialize_clip_context(ui_error_code *ui_callback)

{
  int ui_temp_state_value;
  longlong ui_event_index;
  bool ui_bool_result;
  
  if (_ui_system_font_settings == 0) {
    LOCK();
    _ui_system_global_window_manager = _ui_system_global_window_manager + 1;
    UNLOCK();
    ui_event_index = ui_memory_allocation(UI_CALLBACK_HANDLER_OFFSET);
    InitializeCriticalSection(ui_event_index);
    LOCK();
    ui_bool_result = _ui_system_pending_events_data != 0;
    ui_event_index = ui_event_index;
    if (ui_bool_result) {
      ui_event_index = _ui_system_pending_events_data;
    }
    _ui_system_pending_events_data = ui_event_index;
    UNLOCK();
    if (ui_bool_result) {
      DeleteCriticalSection(ui_event_index);
      ui_memory_free(ui_event_index);
    }
    EnterCriticalSection(_ui_system_pending_events_data);
    if (_ui_system_font_settings == 0) {
      (*ui_callback)();
      _ui_system_font_settings = 1;
    }
    LeaveCriticalSection(_ui_system_pending_events_data);
    LOCK();
    ui_temp_state_value = _ui_system_global_window_manager + -1;
    UNLOCK();
    ui_bool_result = _ui_system_global_window_manager == 1;
    _ui_system_global_window_manager = ui_temp_state_value;
    if (ui_bool_result) {
      DeleteCriticalSection(_ui_system_pending_events_data);
      ui_memory_free(_ui_system_pending_events_data);
      _ui_system_pending_events_data = 0;
    }
  }
  return ui_system_return_value;
}

void ui_system_setup_clip_engine(void)

{
  int ui_temp_state_value;
  longlong ui_event_index;
  ui_error_code *ui_system_register;
  bool ui_bool_result;
  
  LOCK();
  _ui_system_global_window_manager = _ui_system_global_window_manager + 1;
  UNLOCK();
  ui_event_index = ui_memory_allocation(UI_CALLBACK_HANDLER_OFFSET);
  InitializeCriticalSection(ui_event_index);
  LOCK();
  ui_bool_result = _ui_system_pending_events_data != 0;
  ui_event_index = ui_event_index;
  if (ui_bool_result) {
    ui_event_index = _ui_system_pending_events_data;
  }
  _ui_system_pending_events_data = ui_event_index;
  UNLOCK();
  if (ui_bool_result) {
    DeleteCriticalSection(ui_event_index);
    ui_memory_free(ui_event_index);
  }
  EnterCriticalSection(_ui_system_pending_events_data);
  if (_ui_system_font_settings == 0) {
    (*ui_system_register)();
    _ui_system_font_settings = 1;
  }
  LeaveCriticalSection(_ui_system_pending_events_data);
  LOCK();
  ui_temp_state_value = _ui_system_global_window_manager + -1;
  UNLOCK();
  ui_bool_result = _ui_system_global_window_manager == 1;
  _ui_system_global_window_manager = ui_temp_state_value;
  if (ui_bool_result) {
    DeleteCriticalSection(_ui_system_pending_events_data);
    ui_memory_free(_ui_system_pending_events_data);
    _ui_system_pending_events_data = 0;
  }
  return ui_system_return_value;
}

void ui_system_configure_clip_settings(void)

{
  int ui_temp_state_value;
  ui_error_code *ui_system_register;
  bool ui_bool_result;
  
  (*ui_system_register)();
  _ui_system_font_settings = 1;
  LeaveCriticalSection(_ui_system_pending_events_data);
  LOCK();
  ui_temp_state_value = _ui_system_global_window_manager + -1;
  UNLOCK();
  ui_bool_result = _ui_system_global_window_manager == 1;
  _ui_system_global_window_manager = ui_temp_state_value;
  if (ui_bool_result) {
    DeleteCriticalSection(_ui_system_pending_events_data);
    ui_memory_free(_ui_system_pending_events_data);
    _ui_system_pending_events_data = 0;
  }
  return ui_system_return_value;
}

void ui_setup_cpu_extensions(void)

{
  uint *ui_event_buffer;
  longlong ui_event_index;
  uint ui_loop_counter;
  bool ui_bool_result;
  byte in_XCR0;
  
  ui_event_buffer = (uint *)cpuid_basic_info(0);
  ui_bool_result = false;
  if (*ui_event_buffer != 0) {
    ui_event_index = cpuid_Version_info(1);
    ui_loop_counter = *(uint *)(ui_event_index + 12);
    ui_bool_result = (ui_loop_counter & 1) != 0;
    ui_bool_result = (ui_loop_counter >> 9 & 1) != 0;
    ui_bool_result = (ui_loop_counter >> UI_RESOURCE_TYPE_CONFIG & 1) != 0;
    ui_bool_result = false;
    if (((ui_loop_counter & UI_SNAPSHOT_CREATE_FLAGS000000) == UI_SNAPSHOT_CREATE_FLAGS000000) && ((in_XCR0 & 6) == 6)) {
      ui_bool_result = true;
      ui_bool_result = false;
      if ((6 < *ui_event_buffer) &&
         (ui_event_index = cpuid_Extended_Feature_Enumeration_info(7), ui_bool_result = false,
         (*(uint *)(ui_event_index + 4) & UI_OFFSET_32) != 0)) {
        ui_bool_result = true;
      }
    }
  }
  _ui_system_widget_factory_data = ui_system_handle_hover;
  if (ui_bool_result) {
    _ui_system_widget_factory_data = ui_system_create_label;
  }
  if (ui_bool_result) {
    _ui_system_widget_factory_data = ui_system_get_focus;
  }
  _ui_system_layout_engine_data = ui_system_update_layout;
  if (ui_bool_result) {
    _ui_system_layout_engine_data = ui_system_hide_dialog;
  }
  _ui_system_render_context_data = ui_system_render_frame;
  if (ui_bool_result) {
    _ui_system_render_context_data = ui_system_show_dialog;
  }
  _ui_system_input_handler_data = ui_system_draw_widget;
  if (ui_bool_result) {
    _ui_system_input_handler_data = ui_system_create_button;
  }
  _ui_system_theme_manager_data = ui_system_handle_click;
  if (ui_bool_result) {
    _ui_system_theme_manager_data = ui_system_create_textbox;
  }
  if (ui_bool_result) {
    _ui_system_theme_manager_data = ui_system_set_visible;
  }
  _ui_system_font_cache_data = ui_system_handle_scroll;
  if (ui_bool_result) {
    _ui_system_font_cache_data = ui_system_create_panel;
  }
  if (ui_bool_result) {
    _ui_system_font_cache_data = ui_system_get_visible;
  }
  _ui_system_texture_manager_data = ui_system_enable_widget;
  if (ui_bool_result) {
    _ui_system_texture_manager_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_animation_system_data = ui_system_disable_widget;
  if (ui_bool_result) {
    _ui_system_animation_system_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_focus_manager_data = ui_system_set_text;
  if (ui_bool_result) {
    _ui_system_focus_manager_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_tooltip_handler_data = ui_system_get_text;
  if (ui_bool_result) {
    _ui_system_tooltip_handler_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_drag_drop_manager_data = ui_system_handle_drag_drop_manager;
  if (ui_bool_result) {
    _ui_system_drag_drop_manager_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_clipboard_info = ui_system_process_clipboard_info;
  if (ui_bool_result) {
    _ui_system_clipboard_info = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_resource_storage_data = ui_system_manage_resource_storage;
  if (ui_bool_result) {
    _ui_system_resource_storage_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_memory_allocator_data = ui_system_handle_memory_allocation;
  if (ui_bool_result) {
    _ui_system_memory_allocator_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_timer_info = ui_system_update_timer_info;
  if (ui_bool_result) {
    _ui_system_timer_info = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_performance_monitor_data = ui_system_monitor_performance;
  if (ui_bool_result) {
    _ui_system_performance_monitor_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_debug_panel_data = ui_system_handle_debug_panel;
  if (ui_bool_result) {
    _ui_system_debug_panel_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_log_viewer_data = ui_system_process_log_viewer;
  if (ui_bool_result) {
    _ui_system_log_viewer_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_inspector_panel_data = ui_system_manage_inspector_data;
  if (ui_bool_result) {
    _ui_system_inspector_panel_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_resource_manager_data = ui_apply_style;
  if (ui_bool_result) {
    _ui_system_resource_manager_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_image_cache_data = ui_system_process_image_cache;
  if (ui_bool_result) {
    _ui_system_image_cache_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_sound_manager_data = ui_system_handle_sound_manager;
  if (ui_bool_result) {
    _ui_system_sound_manager_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_effect_system_data = ui_system_cleanup_effect_resources;
  if (ui_bool_result) {
    _ui_system_effect_system_data = ui_widget_create_textbox;
  }
  _ui_system_particle_system_data = ui_system_update_particle_effects;
  if (ui_bool_result) {
    _ui_system_particle_system_data = ui_widget_create_label;
  }
  _ui_system_shader_cache_data = ui_widget_create_button;
  if (ui_bool_result) {
    _ui_system_shader_cache_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_material_manager_data = ui_widget_create_panel;
  if (ui_bool_result) {
    _ui_system_material_manager_data = ui_component_cleanup;
  }
  _ui_system_mesh_cache_data = ui_system_manage_mesh_cache;
  if (ui_bool_result) {
    _ui_system_mesh_cache_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_lighting_system_data = ui_system_handle_lighting_system;
  if (ui_bool_result) {
    _ui_system_lighting_system_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_post_processor_data = &ui_widget_manager;
  if (ui_bool_result) {
    _ui_system_post_processor_data = &ui_widget_manager;
  }
  _ui_system_render_target_data = &ui_widget_manager;
  if (ui_bool_result) {
    _ui_system_render_target_data = &ui_widget_manager;
  }
  _ui_system_vertex_buffer_var_data = ui_widget_create_button;
  if (ui_bool_result) {
    _ui_system_vertex_buffer_var_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_index_buffer_var_data = ui_widget_create_textbox;
  if (ui_bool_result) {
    _ui_system_index_buffer_var_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_uniform_buffer_var_data = ui_widget_create_label;
  if (ui_bool_result) {
    _ui_system_uniform_buffer_var_data = ui_widget_create_panel;
  }
  _ui_system_command_buffer_var_data = ui_widget_create_scrollbar;
  if (ui_bool_result) {
    _ui_system_command_buffer_var_data = ui_widget_create_scrollbar;
  }
  _ui_system_shader_program_data = ui_notification_clear_all;
  if (ui_bool_result) {
    _ui_system_shader_program_data = (ui_error_code *)&ui_widget_manager;
  }
  if (ui_bool_result) {
    _ui_system_shader_program_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_texture_atlas_data = ui_notification_show;
  if (ui_bool_result) {
    _ui_system_texture_atlas_data = (ui_error_code *)&ui_widget_manager;
  }
  if (ui_bool_result) {
    _ui_system_texture_atlas_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_config_data = ui_notification_animate_show;
  if (ui_bool_result) {
    _ui_system_config_data = (ui_error_code *)&ui_widget_manager;
  }
  if (ui_bool_result) {
    _ui_system_config_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_display_settings_data = ui_notification_animate_hide;
  if (ui_bool_result) {
    _ui_system_display_settings_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_color_scheme_data = ui_notification_update_content;
  if (ui_bool_result) {
    _ui_system_color_scheme_data = (ui_error_code *)&ui_widget_manager;
  }
  if (ui_bool_result) {
    _ui_system_color_scheme_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_font_settings_data = ui_notification_set_position;
  if (ui_bool_result) {
    _ui_system_font_settings_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_animation_config_data = (ui_error_code *)&ui_widget_manager;
  if (ui_bool_result) {
    _ui_system_animation_config_data = ui_debug_log_widget;
  }
  _ui_system_input_config_data = (ui_error_code *)&ui_widget_manager;
  if (ui_bool_result) {
    _ui_system_input_config_data = ui_debug_log_event;
  }
  _ui_system_accessibility_settings_data = (ui_error_code *)&ui_widget_manager;
  if (ui_bool_result) {
    _ui_system_accessibility_settings_data = ui_debug_log_input;
  }
  _ui_system_locale_data = (ui_error_code *)&ui_widget_manager;
  if (ui_bool_result) {
    _ui_system_locale_data = ui_debug_log_render;
  }
  _ui_system_root_container_data = (ui_error_code *)&ui_widget_manager;
  if (ui_bool_result) {
    _ui_system_root_container_data = ui_performance_monitor_reset;
  }
  _ui_system_menu_bar_data = (ui_error_code *)&ui_widget_manager;
  if (ui_bool_result) {
    _ui_system_menu_bar_data = ui_debug_log_performance;
  }
  _ui_system_status_bar_data = (ui_error_code *)&ui_widget_manager;
  if (ui_bool_result) {
    _ui_system_status_bar_data = ui_debug_log_memory;
  }
  _ui_system_toolbar_data = ui_notification_set_duration;
  if (ui_bool_result) {
    _ui_system_toolbar_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_sidebar_data = ui_notification_close;
  if (ui_bool_result) {
    _ui_system_sidebar_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_content_area_data = (ui_error_code *)&ui_widget_manager;
  if (ui_bool_result) {
    _ui_system_content_area_data = ui_debug_log_warning;
  }
  _ui_system_dialog_overlay_data = (ui_error_code *)&ui_widget_manager;
  if (ui_bool_result) {
    _ui_system_dialog_overlay_data = ui_debug_log_error;
  }
  _ui_system_tooltip_layer_data = (ui_error_code *)&ui_widget_manager;
  if (ui_bool_result) {
    _ui_system_tooltip_layer_data = ui_performance_monitor_stop;
  }
  _ui_system_context_menu_data = (ui_error_code *)&ui_widget_manager;
  if (ui_bool_result) {
    _ui_system_context_menu_data = ui_performance_monitor_start;
  }
  ui_performance_monitor_ptr = (ui_error_code *)&ui_widget_manager;
  if (ui_bool_result) {
    ui_performance_monitor_ptr = ui_performance_monitor_get_stats;
  }
  ui_notification_handler_ptr = ui_notification_queue_add;
  if (ui_bool_result) {
    ui_notification_handler_ptr = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_debug_panel_data = ui_notification_queue_remove;
  if (ui_bool_result) {
    _ui_system_debug_panel_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_memory_profiler_data = ui_notification_clear_expired;
  if (ui_bool_result) {
    _ui_system_memory_profiler_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_log_viewer_data = ui_debug_panel_update_layout;
  if (ui_bool_result) {
    _ui_system_log_viewer_data = (ui_error_code *)&ui_widget_manager;
  }
  _ui_system_inspector_panel_data = ui_performance_monitor_export_data;
  if (ui_bool_result) {
    _ui_system_inspector_panel_data = ui_system_set_focus;
  }
  _ui_system_resource_manager_data = ui_widget_create_progressbar;
  if (ui_bool_result) {
    _ui_system_resource_manager_data = ui_widget_create_checkbox;
  }
  _ui_system_image_cache_data = ui_widget_create_radiobutton;
  if (ui_bool_result) {
    _ui_system_image_cache_data = ui_widget_create_dropdown;
  }
  _ui_system_sound_manager_data = ui_widget_create_listbox;
  if (ui_bool_result) {
    _ui_system_sound_manager_data = ui_widget_create_tabcontrol;
  }
  _ui_system_effect_system_data = ui_widget_create_toolbar;
  if (ui_bool_result) {
    _ui_system_effect_system_data = ui_widget_create_statusbar;
  }
  _ui_system_particle_system_data = ui_get_particle_system_data;
  if (ui_bool_result) {
    _ui_system_particle_system_data = ui_set_particle_system_data;
  }
  if (ui_bool_result) {
    _ui_system_particle_system_data = ui_widget_create_progress;
  }
  _ui_system_shader_cache_data = ui_get_shader_cache_data;
  if (ui_bool_result) {
    _ui_system_shader_cache_data = ui_set_shader_cache_data;
  }
  _ui_system_popup_layer_data = ui_get_popup_layer_data;
  if (ui_bool_result) {
    _ui_system_popup_layer_data = ui_set_popup_layer_data;
  }
  _ui_system_mesh_cache_data = ui_get_mesh_cache_data;
  if (ui_bool_result) {
    _ui_system_mesh_cache_data = ui_set_mesh_cache_data;
  }
  _ui_system_lighting_system_data = ui_get_lighting_system_data;
  if (ui_bool_result) {
    _ui_system_lighting_system_data = ui_set_lighting_system_data;
  }
  _ui_system_post_processor_data = ui_get_post_processor_data;
  if (ui_bool_result) {
    _ui_system_post_processor_data = ui_set_post_processor_data;
  }
  if (ui_bool_result) {
    _ui_system_post_processor_data = ui_widget_create_menu;
  }
  _ui_system_render_target_data = ui_get_render_target_data;
  if (ui_bool_result) {
    _ui_system_render_target_data = ui_set_render_target_data;
  }
  _ui_system_vertex_buffer_var_data = ui_get_vertex_buffer_data;
  if (ui_bool_result) {
    _ui_system_vertex_buffer_var_data = ui_set_vertex_buffer_data;
  }
  _ui_system_index_buffer_var_data = ui_get_index_buffer_data;
  if (ui_bool_result) {
    _ui_system_index_buffer_var_data = ui_set_index_buffer_data;
  }
  _ui_system_uniform_buffer_var_data = ui_get_uniform_buffer_data;
  if (ui_bool_result) {
    _ui_system_uniform_buffer_var_data = ui_set_uniform_buffer_data;
  }
  _ui_system_command_buffer_var_data = ui_get_command_buffer_data;
  if (ui_bool_result) {
    _ui_system_command_buffer_var_data = ui_set_command_buffer_data;
  }
  _ui_system_shader_program_data = ui_get_shader_program_data;
  if (ui_bool_result) {
    _ui_system_shader_program_data = ui_set_shader_program_data;
  }
  _ui_system_texture_atlas_data = ui_get_texture_atlas_data;
  if (ui_bool_result) {
    _ui_system_texture_atlas_data = ui_set_texture_atlas_data;
  }
  _ui_system_config_data = ui_get_config_data;
  if (ui_bool_result) {
    _ui_system_config_data = ui_set_config_data;
  }
  if (ui_bool_result) {
    _ui_system_config_data = ui_widget_create_dialog;
  }
  _ui_system_display_settings_data = ui_get_display_settings_data;
  if (ui_bool_result) {
    _ui_system_display_settings_data = ui_set_display_settings_data;
  }
  _ui_system_color_scheme_data = ui_get_color_scheme_data;
  if (ui_bool_result) {
    _ui_system_color_scheme_data = ui_set_color_scheme_data;
  }
  _ui_system_font_settings_data = ui_get_font_settings_data;
  if (ui_bool_result) {
    _ui_system_font_settings_data = ui_set_font_settings_data;
  }
  _ui_system_material_manager_data = ui_get_material_manager_data;
  if (ui_bool_result) {
    _ui_system_material_manager_data = ui_set_material_manager_data;
  }
  _ui_system_notification_area_data = ui_get_notification_area_data;
  if (ui_bool_result) {
    _ui_system_notification_area_data = ui_set_notification_area_data;
  }
  if (ui_bool_result) {
    _ui_system_notification_area_data = ui_widget_create_tooltip;
  }
  _ui_system_accessibility_settings_data = ui_get_accessibility_settings_data;
  if (ui_bool_result) {
    _ui_system_accessibility_settings_data = ui_set_accessibility_settings_data;
  }
  _ui_system_performance_monitor_data = ui_component_create;
  if (ui_bool_result) {
    _ui_system_performance_monitor_data = ui_component_destroy;
  }
  _ui_system_root_container_data = ui_component_initialize;
  if (ui_bool_result) {
    _ui_system_root_container_data = ui_component_update;
  }
  _ui_system_menu_bar_data = ui_component_render;
  if (ui_bool_result) {
    _ui_system_menu_bar_data = ui_widget_create_context_menu;
  }
  _ui_system_status_bar_data = ui_component_handle_event;
  if (ui_bool_result) {
    _ui_system_status_bar_data = ui_widget_create_tab;
  }
  _ui_system_toolbar_data = ui_component_set_property;
  if (ui_bool_result) {
    _ui_system_toolbar_data = ui_widget_create_listbox;
  }
  _ui_system_sidebar_data = ui_component_get_property;
  if (ui_bool_result) {
    _ui_system_sidebar_data = ui_widget_create_combobox;
  }
  _ui_system_content_area_data = ui_component_validate;
  if (ui_bool_result) {
    _ui_system_content_area_data = ui_widget_create_slider;
  }
  return ui_system_return_value;
}

void ui_system_start_clip_processing(ui_error_code *ui_callback)

{
  int ui_temp_state_value;
  longlong ui_event_index;
  bool ui_bool_result;
  
  if (_ui_system_check_initialized == 0) {
    LOCK();
    _ui_system_init_status_flag = _ui_system_init_status_flag + 1;
    UNLOCK();
    ui_event_index = ui_memory_allocation(UI_CALLBACK_HANDLER_OFFSET);
    InitializeCriticalSection(ui_event_index);
    LOCK();
    ui_bool_result = _ui_system_render_state_flags != 0;
    ui_event_index = ui_event_index;
    if (ui_bool_result) {
      ui_event_index = _ui_system_render_state_flags;
    }
    _ui_system_render_state_flags = ui_event_index;
    UNLOCK();
    if (ui_bool_result) {
      DeleteCriticalSection(ui_event_index);
      ui_memory_free(ui_event_index);
    }
    EnterCriticalSection(_ui_system_render_state_flags);
    if (_ui_system_check_initialized == 0) {
      (*ui_callback)();
      _ui_system_check_initialized = 1;
    }
    LeaveCriticalSection(_ui_system_render_state_flags);
    LOCK();
    ui_temp_state_value = _ui_system_init_status_flag + -1;
    UNLOCK();
    ui_bool_result = _ui_system_init_status_flag == 1;
    _ui_system_init_status_flag = ui_temp_state_value;
    if (ui_bool_result) {
      DeleteCriticalSection(_ui_system_render_state_flags);
      ui_memory_free(_ui_system_render_state_flags);
      _ui_system_render_state_flags = 0;
    }
  }
  return ui_system_return_value;
}

void ui_system_stop_clip_processing(void)

{
  int ui_temp_state_value;
  longlong ui_event_index;
  ui_error_code *ui_system_register;
  bool ui_bool_result;
  
  LOCK();
  _ui_system_init_status_flag = _ui_system_init_status_flag + 1;
  UNLOCK();
  ui_event_index = ui_memory_allocation(UI_CALLBACK_HANDLER_OFFSET);
  InitializeCriticalSection(ui_event_index);
  LOCK();
  ui_bool_result = _ui_system_render_state_flags != 0;
  ui_event_index = ui_event_index;
  if (ui_bool_result) {
    ui_event_index = _ui_system_render_state_flags;
  }
  _ui_system_render_state_flags = ui_event_index;
  UNLOCK();
  if (ui_bool_result) {
    DeleteCriticalSection(ui_event_index);
    ui_memory_free(ui_event_index);
  }
  EnterCriticalSection(_ui_system_render_state_flags);
  if (_ui_system_check_initialized == 0) {
    (*ui_system_register)();
    _ui_system_check_initialized = 1;
  }
  LeaveCriticalSection(_ui_system_render_state_flags);
  LOCK();
  ui_temp_state_value = _ui_system_init_status_flag + -1;
  UNLOCK();
  ui_bool_result = _ui_system_init_status_flag == 1;
  _ui_system_init_status_flag = ui_temp_state_value;
  if (ui_bool_result) {
    DeleteCriticalSection(_ui_system_render_state_flags);
    ui_memory_free(_ui_system_render_state_flags);
    _ui_system_render_state_flags = 0;
  }
  return ui_system_return_value;
}

void ui_system_pause_clip_processing(void)

{
  int ui_temp_state_value;
  ui_error_code *ui_system_register;
  bool ui_bool_result;
  
  (*ui_system_register)();
  _ui_system_check_initialized = 1;
  LeaveCriticalSection(_ui_system_render_state_flags);
  LOCK();
  ui_temp_state_value = _ui_system_init_status_flag + -1;
  UNLOCK();
  ui_bool_result = _ui_system_init_status_flag == 1;
  _ui_system_init_status_flag = ui_temp_state_value;
  if (ui_bool_result) {
    DeleteCriticalSection(_ui_system_render_state_flags);
    ui_memory_free(_ui_system_render_state_flags);
    _ui_system_render_state_flags = 0;
  }
  return ui_system_return_value;
}

uint ui_get_cpu_info(void)

{
  uint *ui_event_buffer;
  uint ui_system_task_id;
  uint ui_loop_counter;
  uint in_XCR0;
  
  ui_event_buffer = (uint *)cpuid_basic_info(0);
  ui_system_task_id = *ui_event_buffer;
  ui_loop_counter = ui_system_task_id;
  if (ui_system_task_id != 0) {
    ui_event_buffer = (uint *)cpuid_Version_info(1);
    ui_loop_counter = *ui_event_buffer;
    if ((((ui_event_buffer[3] & UI_SNAPSHOT_CREATE_FLAGS000000) == UI_SNAPSHOT_CREATE_FLAGS000000) && (ui_loop_counter = in_XCR0, ((byte)in_XCR0 & 6) == 6)) &&
       (6 < ui_system_task_id)) {
      ui_event_buffer = (uint *)cpuid_Extended_Feature_Enumeration_info(7);
      ui_loop_counter = *ui_event_buffer;
    }
  }
  return return ui_loop_counter;
}

uint64_t ui_system_execute_clip_command(longlong ui_callback,uint ui_event_type,uint ui_event_data)

{
  int ui_temp_state_value;
  longlong ui_event_index;
  uint32_t *ui_callback_ptr;
  int ui_result_status;
  uint32_t *ui_callback_ptr;
  
  ui_system_handle_clip_event();
  if ((ui_event_type & UI_MAX_EVENT_FLAGS) != 0) {
    ui_event_type = ui_event_type + (UI_EVENT_FLAG_OFFSET - (ui_event_type & UI_MAX_EVENT_FLAGS));
  }
  if ((ui_event_data & UI_MAX_EVENT_FLAGS) != 0) {
    ui_event_data = ui_event_data + (UI_EVENT_FLAG_OFFSET - (ui_event_data & UI_MAX_EVENT_FLAGS));
  }
  ui_callback_ptr = (uint32_t *)(ui_callback + UI_STACK_SIZE_128c);
  ui_result_status = 0;
  ui_callback_ptr = (uint32_t *)(ui_callback + UI_EVENT_ID_OFFSET0);
  do {
    *ui_callback_ptr = 0;
    ui_temp_state_value = ui_system_create_window((longlong)ui_result_status * UI_WIDGET_BASE_OFFSET + UI_OFFSET_1200 + ui_callback,ui_event_type,ui_event_data,UI_OFFSET_32);
    if (ui_temp_state_value < 0) goto UI_LABEL_GENERIC_66e704;
    ui_result_status = ui_result_status + 1;
    ui_callback_ptr = ui_callback_ptr + 1;
    ui_callback_ptr = ui_callback_ptr + UI_EVENT_COUNTER_OFFSET;
  } while (ui_result_status < 4);
  *(uint32_t *)(ui_callback + 0x9d0) = 0;
  *(uint32_t *)(ui_callback + 0x9d4) = 1;
  *(uint32_t *)(ui_callback + 0x9d8) = 2;
  *(uint32_t *)(ui_callback + 0x9dc) = 3;
  *(uint64_t *)(ui_callback + UI_EVENT_ID_OFFSET0) = 0x100000001;
  *(uint64_t *)(ui_callback + UI_EVENT_ID_OFFSET8) = 0x100000001;
  ui_result_status = ui_system_create_window(ui_callback + 0x9e0,ui_event_type,UI_EVENT_FLAG_OFFSET);
  if (-1 < ui_result_status) {
    ui_temp_state_value = (int)ui_event_data >> 4;
    ui_result_status = (int)ui_event_type >> 4;
    *(int *)(ui_callback + 3000) = ui_result_status;
    *(int *)(ui_callback + 0xbb4) = ui_temp_state_value;
    *(int *)(ui_callback + 0xbbc) = ui_result_status + 1;
    *(int *)(ui_callback + 0xbb0) = ui_result_status * ui_temp_state_value;
    ui_event_index = ui_system_update_clip_state((longlong)((ui_temp_state_value + 1) * (ui_result_status + 1)),0x4c);
    *(longlong *)(ui_callback + 0xbe8) = ui_event_index;
    if (ui_event_index != 0) {
      *(longlong *)(ui_callback + 0xbf0) = ((longlong)*(int *)(ui_callback + 0xbbc) + 1) * 0x4c + ui_event_index;
      ui_event_index = ui_system_update_clip_state((longlong)*(int *)(ui_callback + 3000) * 9,1);
      *(longlong *)(ui_callback + UI_WIDGET_RESOURCE_TYPE58) = ui_event_index;
      if (ui_event_index != 0) {
        ui_result_status = ui_system_create_window(ui_callback + 0xa70,ui_event_type,ui_event_data,UI_OFFSET_32);
        if (-1 < ui_result_status) {
          *(uint32_t *)(ui_callback + 0xb90) = 0;
          memset(ui_callback + UI_WIDGET_STATE_OFFSET30,0,0xc40);
        }
      }
    }
  }
UI_LABEL_GENERIC_66e704:
  ui_system_handle_clip_event(ui_callback);
  return return 1;
}

void ui_system_process_clip_batch(longlong ui_callback)

{
  ui_system_process_events();
  ui_system_cleanup_render_context(ui_callback);
  ui_system_initialize_render_context();
  *(uint64_t *)(ui_callback + UI_OFFSET_1880) = 1;
  *(uint32_t *)(ui_callback + UI_RENDER_CONTEXT_OFFSET0) = 0;
  *(uint64_t *)(ui_callback + UI_OFFSET_1888) = 0;
  *(uint32_t *)(ui_callback + UI_WIDGET_STATE_OFFSET24) = 0;
  *(uint32_t *)(ui_callback + 0x770) = 0;
  *(uint64_t *)(ui_callback + UI_WIDGET_RESOURCE_TYPE44) = 0;
  *(uint64_t *)(ui_callback + UI_WIDGET_RESOURCE_TYPE4c) = 0;
  *(uint64_t *)(ui_callback + UI_WIDGET_RESOURCE_TYPE38) = 0;
  return ui_system_return_value;
}

void ui_system_handle_clip_event(longlong ui_callback)

{
  longlong ui_long_counter;
  longlong ui_event_index;
  
  ui_long_counter = ui_callback + UI_OFFSET_1200;
  ui_event_index = 4;
  do {
    ui_system_destroy_window(ui_long_counter);
    ui_long_counter = ui_long_counter + UI_WIDGET_BASE_OFFSET;
    ui_event_index = ui_event_index + -1;
  } while (ui_event_index != 0);
  ui_system_destroy_window(ui_callback + 0x9e0);
  ui_system_destroy_window(ui_callback + 0xa70);
  if (*(int *)(ui_callback + 0xb90) != 0) {
    ui_system_destroy_window(ui_callback + UI_WIDGET_STOP_CALLBACK_OFFSET0);
  }
  ui_system_release_clip_resources(*(uint64_t *)(ui_callback + 0xb98));
  *(uint64_t *)(ui_callback + 0xb98) = 0;
  ui_system_release_clip_resources(*(uint64_t *)(ui_callback + UI_WIDGET_RESOURCE_TYPE58));
  ui_system_release_clip_resources(*(uint64_t *)(ui_callback + 0xbe8));
  *(uint64_t *)(ui_callback + UI_WIDGET_RESOURCE_TYPE58) = 0;
  *(uint64_t *)(ui_callback + 0xbe8) = 0;
  return ui_system_return_value;
}

void thunk_ui_system_handle_clip_event(longlong ui_callback)

{
  longlong ui_long_counter;
  longlong ui_event_index;
  
  ui_long_counter = ui_callback + UI_OFFSET_1200;
  ui_event_index = 4;
  do {
    ui_system_destroy_window(ui_long_counter);
    ui_long_counter = ui_long_counter + UI_WIDGET_BASE_OFFSET;
    ui_event_index = ui_event_index + -1;
  } while (ui_event_index != 0);
  ui_system_destroy_window(ui_callback + 0x9e0);
  ui_system_destroy_window(ui_callback + 0xa70);
  if (*(int *)(ui_callback + 0xb90) != 0) {
    ui_system_destroy_window(ui_callback + UI_WIDGET_STOP_CALLBACK_OFFSET0);
  }
  ui_system_release_clip_resources(*(uint64_t *)(ui_callback + 0xb98));
  *(uint64_t *)(ui_callback + 0xb98) = 0;
  ui_system_release_clip_resources(*(uint64_t *)(ui_callback + UI_WIDGET_RESOURCE_TYPE58));
  ui_system_release_clip_resources(*(uint64_t *)(ui_callback + 0xbe8));
  *(uint64_t *)(ui_callback + UI_WIDGET_RESOURCE_TYPE58) = 0;
  *(uint64_t *)(ui_callback + 0xbe8) = 0;
  return ui_system_return_value;
}

void ui_system_update_clip_state(longlong ui_callback,longlong ui_event_type)

{
  longlong ui_long_counter;
  ulonglong ui_system_task_id;
  
  ui_long_counter = ui_memory_allocation(ui_callback * ui_event_type + UI_RENDER_RESOURCE_TYPE);
  if (ui_long_counter != 0) {
    ui_system_task_id = ui_long_counter + UI_RENDER_RESOURCE_TYPEU & UI_BIT_MASK_32BIT_FULLfffffff0;
    *(longlong *)(ui_system_task_id - 8) = ui_long_counter;
    memset(ui_system_task_id,0,ui_callback * ui_event_type);
  }
  return ui_system_return_value;
}

void ui_system_clear_clip_state(void)

{
  longlong ui_callback_ptr;
  ulonglong ui_system_event_id;
  
  ui_system_event_id = ui_callback_ptr + UI_RENDER_RESOURCE_TYPEU & UI_BIT_MASK_32BIT_FULLfffffff0;
  *(longlong *)(ui_system_event_id - 8) = ui_callback_ptr;
  memset(ui_system_event_id,0);
}

void ui_system_reset_clip_engine(void)

{
  return ui_system_return_value;
}

ulonglong ui_system_calculate_clip_metrics(longlong ui_callback,longlong ui_event_type)

{
  longlong ui_long_counter;
  ulonglong ui_system_task_id;
  
  ui_long_counter = ui_memory_allocation(ui_event_type + 7 + ui_callback);
  if (ui_long_counter != 0) {
    ui_system_task_id = (longlong)((int)ui_callback + -1) + 8 + ui_long_counter & (longlong)-(int)ui_callback;
    *(longlong *)(ui_system_task_id - 8) = ui_long_counter;
    return return ui_system_task_id;
  }
  return return 0;
}

uint64_t ui_system_get_clip_statistics(longlong ui_callback)

{
  int *ui_ptr_int_counter;
  int ui_result_status;
  longlong ui_event_index;
  
  if (((*(int *)(ui_callback + UI_OFFSET_681c) == 0) && (*(uint *)(ui_callback + UI_REGISTER_Y_OFFSET0c) < 2)) &&
     (*(int *)(ui_callback + UI_REGISTER_Y_OFFSET58) == 0)) {
    ui_event_index = (longlong)*(int *)(ui_callback + UI_OFFSET_2894);
    if (1 < *(int *)(ui_callback + UI_OFFSET_2880 + ui_event_index * 4)) {
      ui_ptr_int_counter = (int *)(ui_callback + UI_OFFSET_2880 + ui_event_index * 4);
      *ui_ptr_int_counter = *ui_ptr_int_counter + -1;
      ui_result_status = ui_system_get_widget_property(ui_callback + UI_NETWORK_RESOURCE_TYPEc0);
      *(int *)(ui_callback + UI_OFFSET_2894) = ui_result_status;
      ui_system_event_handler_touch(ui_callback + UI_MEMORY_RESOURCE_TYPE40 + ui_event_index * UI_WIDGET_BASE_OFFSET,ui_callback + UI_MEMORY_RESOURCE_TYPE40 + (longlong)ui_result_status * UI_WIDGET_BASE_OFFSET);
    }
    *(uint32_t *)(ui_callback + UI_MEMORY_RESOURCE_TYPEc8 + (longlong)*(int *)(ui_callback + UI_OFFSET_2894) * UI_WIDGET_BASE_OFFSET) = 1;
    *(uint32_t *)(ui_callback + UI_OFFSET_3068) = 0;
    return return 0;
  }
  return return 1;
}

uint64_t ui_system_validate_clip_metrics(longlong ui_callback)

{
  int *ui_ptr_int_counter;
  int ui_result_status;
  longlong ui_event_index;
  
  ui_event_index = (longlong)*(int *)(ui_callback + UI_OFFSET_2894);
  if (1 < *(int *)(ui_callback + UI_OFFSET_2880 + ui_event_index * 4)) {
    ui_ptr_int_counter = (int *)(ui_callback + UI_OFFSET_2880 + ui_event_index * 4);
    *ui_ptr_int_counter = *ui_ptr_int_counter + -1;
    ui_result_status = ui_system_get_widget_property(ui_callback + UI_NETWORK_RESOURCE_TYPEc0);
    *(int *)(ui_callback + UI_OFFSET_2894) = ui_result_status;
    ui_system_event_handler_touch(ui_callback + UI_MEMORY_RESOURCE_TYPE40 + ui_event_index * UI_WIDGET_BASE_OFFSET,ui_callback + UI_MEMORY_RESOURCE_TYPE40 + (longlong)ui_result_status * UI_WIDGET_BASE_OFFSET);
  }
  *(uint32_t *)(ui_callback + UI_MEMORY_RESOURCE_TYPEc8 + (longlong)*(int *)(ui_callback + UI_OFFSET_2894) * UI_WIDGET_BASE_OFFSET) = 1;
  *(uint32_t *)(ui_callback + UI_OFFSET_3068) = 0;
  return return 0;
}

uint64_t ui_system_reset_clip_statistics(void)

{
  return return 1;
}

uint64_t ui_system_get_clip_performance_data(void)

{
  longlong ui_long_counter;
  uint64_t in_R9;
  
  ui_long_counter = ui_system_calculate_clip_metrics(UI_OFFSET_32,UI_OFFSET_6840);
  if (ui_long_counter != 0) {
    memset(ui_long_counter,0,UI_OFFSET_6840,in_R9,ui_long_counter);
  }
  return return 0;
}

void ui_system_clear_clip_performance(void)

{
  if (_ui_system_frame_counter == 0) {
    ui_system_setup_clip_parameters();
    ui_system_reset_animation_state();
    _ui_system_frame_counter = 1;
  }
  return ui_system_return_value;
}

void ui_system_initialize_clip_monitoring(ui_error_code *ui_callback)

{
  int ui_temp_state_value;
  longlong ui_event_index;
  bool ui_bool_result;
  
  if (_ui_system_global_state == 0) {
    LOCK();
    _ui_system_performance_metrics = _ui_system_performance_metrics + 1;
    UNLOCK();
    ui_event_index = ui_memory_allocation(UI_CALLBACK_HANDLER_OFFSET);
    InitializeCriticalSection(ui_event_index);
    LOCK();
    ui_bool_result = _ui_system_performance_stats != 0;
    ui_event_index = ui_event_index;
    if (ui_bool_result) {
      ui_event_index = _ui_system_performance_stats;
    }
    _ui_system_performance_stats = ui_event_index;
    UNLOCK();
    if (ui_bool_result) {
      DeleteCriticalSection(ui_event_index);
      ui_memory_free(ui_event_index);
    }
    EnterCriticalSection(_ui_system_performance_stats);
    if (_ui_system_global_state == 0) {
      (*ui_callback)();
      _ui_system_global_state = 1;
    }
    LeaveCriticalSection(_ui_system_performance_stats);
    LOCK();
    ui_temp_state_value = _ui_system_performance_metrics + -1;
    UNLOCK();
    ui_bool_result = _ui_system_performance_metrics == 1;
    _ui_system_performance_metrics = ui_temp_state_value;
    if (ui_bool_result) {
      DeleteCriticalSection(_ui_system_performance_stats);
      ui_memory_free(_ui_system_performance_stats);
      _ui_system_performance_stats = 0;
    }
  }
  return ui_system_return_value;
}

void ui_system_start_clip_monitoring(void)

{
  int ui_temp_state_value;
  longlong ui_event_index;
  ui_error_code *ui_system_register;
  bool ui_bool_result;
  
  LOCK();
  _ui_system_performance_metrics = _ui_system_performance_metrics + 1;
  UNLOCK();
  ui_event_index = ui_memory_allocation(UI_CALLBACK_HANDLER_OFFSET);
  InitializeCriticalSection(ui_event_index);
  LOCK();
  ui_bool_result = _ui_system_performance_stats != 0;
  ui_event_index = ui_event_index;
  if (ui_bool_result) {
    ui_event_index = _ui_system_performance_stats;
  }
  _ui_system_performance_stats = ui_event_index;
  UNLOCK();
  if (ui_bool_result) {
    DeleteCriticalSection(ui_event_index);
    ui_memory_free(ui_event_index);
  }
  EnterCriticalSection(_ui_system_performance_stats);
  if (_ui_system_global_state == 0) {
    (*ui_system_register)();
    _ui_system_global_state = 1;
  }
  LeaveCriticalSection(_ui_system_performance_stats);
  LOCK();
  ui_temp_state_value = _ui_system_performance_metrics + -1;
  UNLOCK();
  ui_bool_result = _ui_system_performance_metrics == 1;
  _ui_system_performance_metrics = ui_temp_state_value;
  if (ui_bool_result) {
    DeleteCriticalSection(_ui_system_performance_stats);
    ui_memory_free(_ui_system_performance_stats);
    _ui_system_performance_stats = 0;
  }
  return ui_system_return_value;
}

void ui_system_stop_clip_monitoring(void)

{
  int ui_temp_state_value;
  ui_error_code *ui_system_register;
  bool ui_bool_result;
  
  (*ui_system_register)();
  _ui_system_global_state = 1;
  LeaveCriticalSection(_ui_system_performance_stats);
  LOCK();
  ui_temp_state_value = _ui_system_performance_metrics + -1;
  UNLOCK();
  ui_bool_result = _ui_system_performance_metrics == 1;
  _ui_system_performance_metrics = ui_temp_state_value;
  if (ui_bool_result) {
    DeleteCriticalSection(_ui_system_performance_stats);
    ui_memory_free(_ui_system_performance_stats);
    _ui_system_performance_stats = 0;
  }
  return ui_system_return_value;
}

uint32_t ui_system_process_clip_monitoring_data(int *ui_callback,longlong ui_event_type)

{
  longlong ui_long_counter;
  
  if (*ui_callback == 0) {
    ui_long_counter = ui_system_get_clip_performance_data(ui_event_type);
    *(longlong *)(ui_callback + 2) = ui_long_counter;
    if (ui_long_counter == 0) {
      return return 1;
    }
    *(uint32_t *)(ui_long_counter + UI_REGISTER_Y_OFFSET84) = *(uint32_t *)(ui_event_type + UI_EVENT_FLAG_OFFSET);
    ui_system_process_clip_command(*(uint64_t *)(ui_callback + 2));
  }
  return return 0;
}

uint32_t ui_system_get_clip_monitoring_info(int *ui_callback)

{
  longlong ui_long_counter;
  
  if (*ui_callback == 0) {
    ui_long_counter = *(longlong *)(ui_callback + 2);
    if (ui_long_counter == 0) {
      return return 1;
    }
    if (*(int *)(ui_long_counter + UI_REGISTER_Y_OFFSET80) != 0) {
      ui_system_handle_drag_callback(ui_long_counter,*(uint32_t *)(ui_long_counter + UI_OFFSET_3074));
    }
    ui_system_execute_clip_cleanup(ui_long_counter);
    thunk_ui_system_handle_clip_event(ui_long_counter + UI_NETWORK_RESOURCE_TYPEc0);
    ui_system_release_clip_resources(ui_long_counter);
  }
  return return 0;
}

uint32_t
ui_callback_handler(longlong ui_callback,uint64_t ui_event_type,uint64_t *ui_event_data,uint64_t *ui_event_flags,
             uint64_t ui_parameter_value)

{
  uint32_t ui_system_event_id;
  
  if ((*(int *)(ui_callback + UI_OFFSET_6810) != 1) && (*(int *)(ui_callback + UI_OFFSET_3068) != 0)) {
    *(uint32_t *)(ui_callback + UI_OFFSET_6810) = 1;
    *ui_event_data = *(uint64_t *)(ui_callback + UI_OFFSET_6808);
    *ui_event_flags = 0;
    ui_system_event_id = ui_system_event_create(ui_callback + UI_NETWORK_RESOURCE_TYPEc0,ui_event_type,ui_parameter_value);
    ui_system_null_function();
    return return ui_system_event_id;
  }
  return return UI_BIT_MASK_32BIT_FULL;
}

uint32_t ui_system_update_clip_monitoring_state(longlong ui_callback,int ui_event_type,int *ui_event_data)

{
  uint32_t *ui_event_buffer;
  int ui_result_status;
  void* *ui_callback_ptr;
  longlong ui_event_index;
  
  ui_event_buffer = (uint32_t *)(ui_callback + UI_NETWORK_RESOURCE_TYPEc0);
  if (ui_event_type == 1) {
    ui_result_status = *(int *)(ui_callback + UI_OFFSET_2894);
  }
  else if (ui_event_type == 2) {
    ui_result_status = *(int *)(ui_callback + UI_OFFSET_2898);
  }
  else {
    if (ui_event_type != 4) {
      ui_callback_ptr = &ui_widget_manager;
      goto UI_LABEL_GENERIC_66f069;
    }
    ui_result_status = *(int *)(ui_callback + UI_OFFSET_289c);
  }
  ui_event_index = (longlong)ui_result_status;
  if ((((*(int *)(ui_callback + UI_MEMORY_RESOURCE_TYPE44 + ui_event_index * UI_WIDGET_BASE_OFFSET) == ui_event_data[1]) &&
       (ui_event_buffer[ui_event_index * UI_EVENT_COUNTER_OFFSET + UI_OFFSET_300] == *ui_event_data)) &&
      (*(int *)(ui_callback + UI_MEMORY_RESOURCE_TYPE58 + ui_event_index * UI_WIDGET_BASE_OFFSET) == ui_event_data[6])) &&
     (*(int *)(ui_callback + UI_MEMORY_RESOURCE_TYPE54 + ui_event_index * UI_WIDGET_BASE_OFFSET) == ui_event_data[5])) {
    ui_system_event_handler_touch(ui_event_buffer + ui_event_index * UI_EVENT_COUNTER_OFFSET + UI_OFFSET_300,ui_event_data);
    return return *ui_event_buffer;
  }
  ui_callback_ptr = &ui_widget_manager;
UI_LABEL_GENERIC_66f069:
  ui_system_set_clip_region_property(ui_event_buffer,1,ui_callback_ptr);
  return return *ui_event_buffer;
}

ulonglong ui_system_calculate_clip_efficiency(longlong ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,uint64_t ui_event_flags)

{
  uint32_t *ui_event_buffer;
  uint ui_system_task_id;
  ulonglong ui_temp_ulong;
  int ui_result_status;
  uint8_t ui_stack_array [32];
  uint ui_stack_control_flag;
  uint32_t *pui_stack_variable_uint_10;
  
  ui_event_buffer = (uint32_t *)(ui_callback + UI_NETWORK_RESOURCE_TYPEc0);
  *ui_event_buffer = 0;
  pui_stack_variable_uint_10 = ui_event_buffer;
  ui_loop_counter = ui_system_get_clip_statistics();
  ui_stack_control_flag = (uint)ui_loop_counter;
  if ((int)ui_stack_control_flag < 1) {
    return return ui_loop_counter;
  }
  ui_result_status = 0;
  do {
    if (*(int *)(ui_callback + UI_OFFSET_2880 + (longlong)ui_result_status * 4) == 0) break;
    ui_result_status = ui_result_status + 1;
  } while (ui_result_status < 4);
  *(uint32_t *)(ui_callback + UI_OFFSET_2880 + (longlong)ui_result_status * 4) = 1;
  *(int *)(ui_callback + UI_OFFSET_2890) = ui_result_status;
  *(uint32_t **)(ui_callback + UI_NETWORK_RESOURCE_TYPEa0) = ui_event_buffer + (longlong)ui_result_status * UI_EVENT_COUNTER_OFFSET + UI_OFFSET_300;
  *(longlong *)(ui_callback + UI_NETWORK_RESOURCE_TYPEa8) = ui_callback + UI_MEMORY_RESOURCE_TYPE40 + (longlong)*(int *)(ui_callback + UI_OFFSET_2894) * UI_WIDGET_BASE_OFFSET;
  *(longlong *)(ui_callback + UI_NETWORK_RESOURCE_TYPEb0) = ui_callback + UI_MEMORY_RESOURCE_TYPE40 + (longlong)*(int *)(ui_callback + UI_OFFSET_2898) * UI_WIDGET_BASE_OFFSET;
  *(longlong *)(ui_callback + UI_NETWORK_RESOURCE_TYPEb8) = ui_callback + UI_MEMORY_RESOURCE_TYPE40 + (longlong)*(int *)(ui_callback + UI_OFFSET_289c) * UI_WIDGET_BASE_OFFSET;
  ui_result_status = __intrinsic_setjmp(ui_callback + UI_RESOURCE_TYPE_CONFIG20,ui_stack_array);
  if (ui_result_status == 0) {
    *(uint32_t *)(ui_callback + UI_RESOURCE_TYPE_CONFIG18) = 1;
    ui_system_task_id = ui_system_layout_refresh(ui_callback);
    ui_event_buffer = pui_stack_variable_uint_10;
    ui_stack_control_flag = ui_system_task_id;
    if ((int)ui_system_task_id < 0) {
      if (0 < (int)pui_stack_variable_uint_10[(longlong)(int)pui_stack_variable_uint_10[0x274] + 0x270]) {
        pui_stack_variable_uint_10[(longlong)(int)pui_stack_variable_uint_10[0x274] + 0x270] =
             pui_stack_variable_uint_10[(longlong)(int)pui_stack_variable_uint_10[0x274] + 0x270] + -1;
      }
    }
    else {
      ui_result_status = ui_system_set_widget_property(pui_stack_variable_uint_10);
      if (ui_result_status == 0) {
        ui_system_null_function();
        if (ui_event_buffer[0x2ea] != 0) {
          ui_event_buffer[UI_OFFSET_1367] = ui_event_buffer[UI_OFFSET_1367] + 1;
          *(uint64_t *)(ui_event_buffer + UI_SIGNATURE_PART5e) = *(uint64_t *)(ui_event_buffer + UI_SIGNATURE_PART5c);
        }
        *(uint64_t *)(ui_callback + UI_OFFSET_6808) = ui_event_flags;
        *(uint32_t *)(ui_callback + UI_OFFSET_6810) = 0;
        goto UI_LABEL_GENERIC_66f254;
      }
    }
    *(uint32_t *)(ui_callback + UI_NETWORK_RESOURCE_TYPEc0) = 1;
  }
  else {
    pui_stack_variable_uint_10[(longlong)(int)pui_stack_variable_uint_10[0x275] * UI_EVENT_COUNTER_OFFSET + UI_OFFSET_322] = 1;
    ui_system_task_id = ui_stack_control_flag;
    if (0 < (int)pui_stack_variable_uint_10[(longlong)(int)pui_stack_variable_uint_10[0x274] + 0x270]) {
      pui_stack_variable_uint_10[(longlong)(int)pui_stack_variable_uint_10[0x274] + 0x270] =
           pui_stack_variable_uint_10[(longlong)(int)pui_stack_variable_uint_10[0x274] + 0x270] + -1;
    }
  }
UI_LABEL_GENERIC_66f254:
  *(uint32_t *)(ui_callback + UI_RESOURCE_TYPE_CONFIG18) = 0;
  ui_system_null_function();
  return return (ulonglong)ui_system_task_id;
}

uint32_t ui_system_optimize_clip_operations(longlong ui_callback,int ui_event_type,int *ui_event_data)

{
  uint32_t *ui_event_buffer;
  int *ui_int_pointer;
  int ui_result_status;
  longlong ui_event_index;
  void* *ui_callback_ptr;
  int *ui_int_pointer;
  
  ui_event_buffer = (uint32_t *)(ui_callback + UI_NETWORK_RESOURCE_TYPEc0);
  if (ui_event_type == 1) {
    ui_int_pointer = (int *)(ui_callback + UI_OFFSET_2894);
  }
  else if (ui_event_type == 2) {
    ui_int_pointer = (int *)(ui_callback + UI_OFFSET_2898);
  }
  else {
    if (ui_event_type != 4) {
      ui_callback_ptr = &ui_widget_manager;
      goto UI_LABEL_GENERIC_66f3c7;
    }
    ui_int_pointer = (int *)(ui_callback + UI_OFFSET_289c);
  }
  ui_event_index = (longlong)*ui_int_pointer;
  if ((((*(int *)(ui_callback + UI_MEMORY_RESOURCE_TYPE44 + ui_event_index * UI_WIDGET_BASE_OFFSET) == ui_event_data[1]) &&
       (*(int *)(ui_callback + UI_MEMORY_RESOURCE_TYPE40 + ui_event_index * UI_WIDGET_BASE_OFFSET) == *ui_event_data)) &&
      (*(int *)(ui_callback + UI_MEMORY_RESOURCE_TYPE58 + ui_event_index * UI_WIDGET_BASE_OFFSET) == ui_event_data[6])) &&
     (*(int *)(ui_callback + UI_MEMORY_RESOURCE_TYPE54 + ui_event_index * UI_WIDGET_BASE_OFFSET) == ui_event_data[5])) {
    ui_result_status = ui_system_get_widget_property(ui_event_buffer);
    ui_int_pointer = (int *)(ui_callback + UI_OFFSET_2880 + (longlong)ui_result_status * 4);
    *ui_int_pointer = *ui_int_pointer + -1;
    if (0 < (int)ui_event_buffer[(longlong)*ui_int_pointer + 0x270]) {
      ui_event_buffer[(longlong)*ui_int_pointer + 0x270] = ui_event_buffer[(longlong)*ui_int_pointer + 0x270] + -1;
    }
    *ui_int_pointer = ui_result_status;
    ui_int_pointer = (int *)(ui_callback + UI_OFFSET_2880 + (longlong)ui_result_status * 4);
    *ui_int_pointer = *ui_int_pointer + 1;
    ui_system_event_handler_touch(ui_event_data,ui_callback + UI_MEMORY_RESOURCE_TYPE40 + (longlong)*ui_int_pointer * UI_WIDGET_BASE_OFFSET);
    return return *ui_event_buffer;
  }
  ui_callback_ptr = &ui_widget_manager;
UI_LABEL_GENERIC_66f3c7:
  ui_system_set_clip_region_property(ui_event_buffer,1,ui_callback_ptr);
  return return *ui_event_buffer;
}

void ui_system_apply_clip_optimization(longlong ui_callback,longlong ui_event_type)

{
  char char_value;
  char ui_character_value;
  int ui_result_status;
  longlong ui_event_index;
  uint ui_loop_counter;
  int ui_result_status;
  longlong ui_event_index;
  char *ui_char_pointer_secondary;
  longlong long_counter0;
  uint64_t *ui_event_buffer;
  longlong ui_stack_data_offset;
  uint64_t inuiui_stack_var_var_ffffffffffffff88;
  longlong long_counter_two;
  uint64_t ui_task_identifier;
  uint32_t ui_event_id_fourth;
  
  ui_event_id_fourth = (uint32_t)((ulonglong)inuiui_stack_var_var_ffffffffffffff88 >> UI_OFFSET_32);
  if (*(char *)(*(longlong *)(ui_event_type + 0xf00) + 9) == UI_CHAR_NULL) {
    if (UI_BIT_SHIFT_63ffffbe < *(int *)(*(longlong *)(ui_event_type + 0xfb8) + UI_SNAPSHOT_CREATE_FLAGS) - 0x41U) {
      ui_result_status = ui_system_memory_allocate_pool(ui_callback);
      *(bool *)(*(longlong *)(ui_event_type + 0xf00) + 9) = ui_result_status == 0;
    }
  }
  else {
    ui_system_refresh_display(ui_event_type);
  }
  char_value = **(char **)(ui_event_type + 0xf00);
  if (*(char *)(ui_event_type + 0xf60) != UI_CHAR_NULL) {
    ui_system_handle_input_event(ui_callback,ui_event_type);
  }
  if (*(char *)(*(longlong *)(ui_event_type + 0xf00) + 2) == UI_CHAR_NULL) {
    ui_system_event_handler_mouse(ui_event_type,*(uint64_t *)(ui_event_type + 0xf20),*(uint64_t *)(ui_event_type + 0xf28),
                  *(uint64_t *)(ui_event_type + 0xf38),*(uint64_t *)(ui_event_type + 0xf40),
                  *(uint32_t *)(ui_event_type + 0xf4c),*(uint64_t *)(ui_event_type + 0xeb0),
                  *(uint64_t *)(ui_event_type + 0xeb8),*(uint32_t *)(ui_event_type + 0xe94));
    if (char_value == '\x04') {
      ui_result_status = *(int *)(ui_event_type + UI_SYSTEM_CONFIG_OFFSET0);
      if (*(char *)(*(longlong *)(ui_event_type + 0xf00) + 9) != UI_CHAR_NULL) {
        *(uint64_t *)(ui_event_type + UI_EVENT_ID_FOURTH_OFFSET0) = 0;
        *(uint64_t *)(ui_event_type + UI_EVENT_ID_FOURTH_OFFSET8) = 0;
        *(uint64_t *)(ui_event_type + 2000) = 0;
        *(uint8_t *)(ui_event_type + 0x7d8) = 0;
      }
      ui_event_index = *(longlong *)(ui_event_type + 0xf18);
      ui_char_pointer_secondary = (char *)(ui_event_type + UI_EVENT_ID_FOURTH_OFFSET0);
      ui_event_index = (longlong)*(int *)(ui_event_type + UI_SYSTEM_CONFIG_OFFSET0);
      ui_event_buffer = (uint64_t *)(ui_event_type + 0x860);
      ui_loop_counter = 0;
      ui_event_index = *(longlong *)(ui_event_type + 0xea8) - ui_event_index;
      long_counter0 = 12;
      *(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET + ui_event_index * 4) = *(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET);
      *(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET + ui_event_index * 8) = *(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET);
      ui_stack_data_offset = 0;
      *(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET + ui_event_index * 12) = *(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET);
      do {
        ui_event_index = *(longlong *)(ui_event_type + 0xea8) + (longlong)*(int *)(ui_event_buffer + 4);
        if (((int)ui_loop_counter < 4) && (*(int *)(ui_callback + 0x2be0) != 0)) {
          ui_event_index = *(longlong *)(ui_event_type + 0xf18) + (longlong)*(int *)(ui_event_buffer + 4);
        }
        else {
          ui_event_index = ui_event_index - ui_result_status;
        }
        if (((ui_loop_counter & 3) == 0) && (*(int *)(ui_callback + 0x2be0) != 0)) {
          ui_event_index = ui_stack_data_offset + *(longlong *)(ui_event_type + 0xf30);
          ui_result_status = 1;
        }
        else {
          ui_event_index = ui_event_index + -1;
          ui_result_status = ui_result_status;
        }
        if ((((ui_loop_counter - 4 & 0xfffffff3) == 0) && (ui_loop_counter != UI_EVENT_FLAG_OFFSET)) &&
           (*(int *)(ui_callback + 0x2be0) != 0)) {
          ui_character_value = char_ptr[(*(longlong *)(ui_event_type + 0xf30) - ui_event_type) + -UI_EVENT_ID_FOURTH_OFFSET1];
        }
        else {
          ui_character_value = *(char *)(ui_event_index + -1);
        }
        long_counter_two = ui_event_index;
        ui_system_memory_free_pool(ui_event_index,ui_event_index,ui_result_status,*(uint32_t *)(*(longlong *)(ui_event_type + 0xf00) + long_counter0),
                      ui_event_index,ui_result_status,ui_character_value);
        ui_event_id_fourth = (uint32_t)((ulonglong)long_counter_two >> UI_OFFSET_32);
        if (*ui_char_pointer_secondary != UI_CHAR_NULL) {
          if (*ui_char_pointer_secondary < '\x02') {
            ui_task_identifier = CONCAT44(ui_event_id_fourth,ui_result_status);
            ui_system_calculate_scale_factor((int)*(short *)*ui_event_buffer * (int)*(short *)(ui_event_type + 0x7e0),ui_event_index,
                                ui_result_status,ui_event_index,ui_task_identifier);
            ui_event_id_fourth = (uint32_t)((ulonglong)ui_task_identifier >> UI_OFFSET_32);
            *(uint32_t *)*ui_event_buffer = 0;
          }
          else {
            ui_system_apply_transformation(*ui_event_buffer,ui_event_type + 0x7e0,ui_event_index,ui_result_status);
          }
        }
        ui_loop_counter = ui_loop_counter + 1;
        ui_stack_data_offset = ui_stack_data_offset + 1;
        long_counter0 = long_counter0 + 4;
        ui_event_buffer = ui_event_buffer + 7;
        ui_char_pointer_secondary = ui_char_pointer_secondary + 1;
      } while ((int)ui_loop_counter < UI_EVENT_FLAG_OFFSET);
    }
    else {
      ui_task_identifier = *(uint64_t *)(ui_event_type + 0xea8);
      ui_system_event_handler_keyboard(ui_event_type,*(uint64_t *)(ui_event_type + 0xf18),*(uint64_t *)(ui_event_type + 0xf30),
                    *(uint32_t *)(ui_event_type + 0xf48),ui_task_identifier,*(uint32_t *)(ui_event_type + UI_SYSTEM_CONFIG_OFFSET0));
      ui_event_id_fourth = (uint32_t)((ulonglong)ui_task_identifier >> UI_OFFSET_32);
    }
  }
  else {
    ui_system_memory_stats_update(ui_event_type);
  }
  if (*(char *)(*(longlong *)(ui_event_type + 0xf00) + 9) == UI_CHAR_NULL) {
    if (char_value != '\x04') {
      ui_event_index = ui_event_type + 0x7e0;
      if (char_value != '\t') {
        ui_event_buffer = (uint64_t *)(ui_event_type + 0xda0);
        if (*(char *)(ui_event_type + 0x7d8) < '\x02') {
          **(short **)(ui_event_type + 0xda8) = *(short *)(ui_event_type + 0x820) * *(short *)*ui_event_buffer;
          ui_system_process_render_queue(*(uint64_t *)(ui_event_type + 0xda8),ui_event_type + UI_SNAPSHOT_CREATE_FLAGS0);
          *(uint32_t *)*ui_event_buffer = 0;
        }
        else {
          ui_system_render_widget_batch(ui_event_buffer,ui_event_type + 0x820);
          ui_system_update_render_state(*(uint64_t *)(ui_event_type + 0xda8),ui_event_type + UI_SNAPSHOT_CREATE_FLAGS0);
          ui_event_buffer = (uint64_t *)*ui_event_buffer;
          *ui_event_buffer = 0;
          ui_event_buffer[1] = 0;
          ui_event_buffer[2] = 0;
          ui_event_buffer[3] = 0;
        }
        ui_event_index = ui_event_type + UI_STACK_SIZE_1280;
      }
      ui_event_index = ui_event_type + UI_EVENT_ID_FOURTH_OFFSET0;
      ui_system_event_handler_scroll(ui_event_type + UI_SNAPSHOT_CREATE_FLAGS0,ui_event_index,*(uint64_t *)(ui_event_type + 0xea8),
                    *(uint32_t *)(ui_event_type + UI_SYSTEM_CONFIG_OFFSET0),ui_event_index);
      ui_event_id_fourth = (uint32_t)((ulonglong)ui_event_index >> UI_OFFSET_32);
    }
    ui_system_event_handler_focus(ui_event_type + UI_MEMORY_DEALLOC_OFFSET0,ui_event_type + UI_WIDGET_ITEM_SIZE0,*(uint64_t *)(ui_event_type + 0xeb0),
                  *(uint64_t *)(ui_event_type + 0xeb8),CONCAT44(ui_event_id_fourth,*(uint32_t *)(ui_event_type + 0xe94))
                  ,ui_event_type + 2000);
  }
  return ui_system_return_value;
}

void ui_system_validate_clip_optimization(longlong ui_callback,longlong ui_event_type)

{
  char char_value;
  int ui_result_status;
  longlong ui_callback_ptr;
  longlong ui_event_index;
  longlong ui_widget_base;
  longlong ui_event_index;
  uint ui_loop_counter;
  int ui_result_status;
  longlong ui_event_index;
  char *ui_char_pointer_secondary;
  longlong ui_event_index;
  uint64_t *ui_event_buffer;
  uint64_t inuiui_stack_var_var_00000020;
  longlong long_counter_one;
  uint64_t ui_event_id_secondary;
  uint32_t ui_task_identifier;
  longlong ui_longuiui_stack_var_var_b8;
  
  ui_task_identifier = (uint32_t)((ulonglong)inuiui_stack_var_var_00000020 >> UI_OFFSET_32);
  if (*(char *)(ui_callback_ptr + 9) == UI_CHAR_NULL) {
    if (UI_BIT_SHIFT_63ffffbe < *(int *)(*(longlong *)(ui_event_type + 0xfb8) + UI_SNAPSHOT_CREATE_FLAGS) - 0x41U) {
      ui_result_status = ui_system_memory_allocate_pool(ui_callback);
      *(bool *)(*(longlong *)(ui_widget_base + 0xf00) + 9) = ui_result_status == 0;
    }
  }
  else {
    ui_system_refresh_display(ui_event_type);
  }
  char_value = **(char **)(ui_widget_base + 0xf00);
  if (*(char *)(ui_widget_base + 0xf60) != UI_CHAR_NULL) {
    ui_system_handle_input_event(ui_callback);
  }
  if (*(char *)(*(longlong *)(ui_widget_base + 0xf00) + 2) == UI_CHAR_NULL) {
    ui_system_event_handler_mouse();
    if (char_value == '\x04') {
      ui_result_status = *(int *)(ui_widget_base + UI_SYSTEM_CONFIG_OFFSET0);
      if (*(char *)(*(longlong *)(ui_widget_base + 0xf00) + 9) != UI_CHAR_NULL) {
        *(uint64_t *)(ui_widget_base + UI_EVENT_ID_FOURTH_OFFSET0) = 0;
        *(uint64_t *)(ui_widget_base + UI_EVENT_ID_FOURTH_OFFSET8) = 0;
        *(uint64_t *)(ui_widget_base + 2000) = 0;
        *(uint8_t *)(ui_widget_base + 0x7d8) = 0;
      }
      ui_event_index = *(longlong *)(ui_widget_base + 0xf18);
      ui_char_pointer_secondary = (char *)(ui_widget_base + UI_EVENT_ID_FOURTH_OFFSET0);
      ui_event_index = (longlong)*(int *)(ui_widget_base + UI_SYSTEM_CONFIG_OFFSET0);
      ui_event_buffer = (uint64_t *)(ui_widget_base + 0x860);
      ui_loop_counter = 0;
      ui_event_index = *(longlong *)(ui_widget_base + 0xea8) - ui_event_index;
      ui_event_index = 12;
      *(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET + ui_event_index * 4) = *(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET);
      *(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET + ui_event_index * 8) = *(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET);
      ui_longuiui_stack_var_var_b8 = 0;
      *(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET + ui_event_index * 12) = *(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET);
      do {
        ui_event_index = *(longlong *)(ui_widget_base + 0xea8) + (longlong)*(int *)(ui_event_buffer + 4);
        if (((int)ui_loop_counter < 4) && (*(int *)(ui_callback + 0x2be0) != 0)) {
          ui_event_index = *(longlong *)(ui_widget_base + 0xf18) + (longlong)*(int *)(ui_event_buffer + 4);
        }
        else {
          ui_event_index = ui_event_index - ui_result_status;
        }
        if (((ui_loop_counter & 3) == 0) && (*(int *)(ui_callback + 0x2be0) != 0)) {
          ui_event_index = ui_longuiui_stack_var_var_b8 + *(longlong *)(ui_widget_base + 0xf30);
          ui_result_status = 1;
        }
        else {
          ui_event_index = ui_event_index + -1;
          ui_result_status = ui_result_status;
        }
        long_counter_one = ui_event_index;
        ui_system_memory_free_pool(ui_event_index,ui_event_index,ui_result_status,*(uint32_t *)(*(longlong *)(ui_widget_base + 0xf00) + ui_event_index),
                      ui_event_index);
        ui_task_identifier = (uint32_t)((ulonglong)long_counter_one >> UI_OFFSET_32);
        if (*ui_char_pointer_secondary != UI_CHAR_NULL) {
          if (*ui_char_pointer_secondary < '\x02') {
            ui_event_id_secondary = CONCAT44(ui_task_identifier,ui_result_status);
            ui_system_calculate_scale_factor((int)*(short *)*ui_event_buffer * (int)*(short *)(ui_widget_base + 0x7e0),ui_event_index,
                                ui_result_status,ui_event_index,ui_event_id_secondary);
            ui_task_identifier = (uint32_t)((ulonglong)ui_event_id_secondary >> UI_OFFSET_32);
            *(uint32_t *)*ui_event_buffer = 0;
          }
          else {
            ui_system_apply_transformation(*ui_event_buffer,ui_widget_base + 0x7e0,ui_event_index,ui_result_status);
          }
        }
        ui_loop_counter = ui_loop_counter + 1;
        ui_longuiui_stack_var_var_b8 = ui_longuiui_stack_var_var_b8 + 1;
        ui_event_index = ui_event_index + 4;
        ui_event_buffer = ui_event_buffer + 7;
        ui_char_pointer_secondary = ui_char_pointer_secondary + 1;
      } while ((int)ui_loop_counter < UI_EVENT_FLAG_OFFSET);
    }
    else {
      ui_task_identifier = (uint32_t)((ulonglong)*(uint64_t *)(ui_widget_base + 0xea8) >> UI_OFFSET_32);
      ui_system_event_handler_keyboard();
    }
  }
  else {
    ui_system_memory_stats_update();
  }
  if (*(char *)(*(longlong *)(ui_widget_base + 0xf00) + 9) == UI_CHAR_NULL) {
    if (char_value != '\x04') {
      ui_event_index = ui_widget_base + 0x7e0;
      if (char_value != '\t') {
        ui_event_buffer = (uint64_t *)(ui_widget_base + 0xda0);
        if (*(char *)(ui_widget_base + 0x7d8) < '\x02') {
          **(short **)(ui_widget_base + 0xda8) = *(short *)(ui_widget_base + 0x820) * *(short *)*ui_event_buffer;
          ui_system_process_render_queue(*(uint64_t *)(ui_widget_base + 0xda8),ui_widget_base + UI_SNAPSHOT_CREATE_FLAGS0);
          *(uint32_t *)*ui_event_buffer = 0;
        }
        else {
          ui_system_render_widget_batch(ui_event_buffer,ui_widget_base + 0x820);
          ui_system_update_render_state(*(uint64_t *)(ui_widget_base + 0xda8),ui_widget_base + UI_SNAPSHOT_CREATE_FLAGS0);
          ui_event_buffer = (uint64_t *)*ui_event_buffer;
          *ui_event_buffer = 0;
          ui_event_buffer[1] = 0;
          ui_event_buffer[2] = 0;
          ui_event_buffer[3] = 0;
        }
        ui_event_index = ui_widget_base + UI_STACK_SIZE_1280;
      }
      ui_event_index = ui_widget_base + UI_EVENT_ID_FOURTH_OFFSET0;
      ui_system_event_handler_scroll(ui_widget_base + UI_SNAPSHOT_CREATE_FLAGS0,ui_event_index,*(uint64_t *)(ui_widget_base + 0xea8),
                    *(uint32_t *)(ui_widget_base + UI_SYSTEM_CONFIG_OFFSET0),ui_event_index);
      ui_task_identifier = (uint32_t)((ulonglong)ui_event_index >> UI_OFFSET_32);
    }
    ui_system_event_handler_focus(ui_widget_base + UI_MEMORY_DEALLOC_OFFSET0,ui_widget_base + UI_WIDGET_ITEM_SIZE0,*(uint64_t *)(ui_widget_base + 0xeb0),
                  *(uint64_t *)(ui_widget_base + 0xeb8),
                  CONCAT44(ui_task_identifier,*(uint32_t *)(ui_widget_base + 0xe94)));
  }
  return ui_system_return_value;
}

void ui_system_reset_clip_optimization(void)

{
  int ui_temp_state_value;
  longlong ui_callback_ptr;
  longlong ui_event_index;
  longlong ui_widget_base;
  longlong ui_event_index;
  uint ui_loop_counter;
  int ui_result_status;
  longlong ui_event_index;
  char *ui_char_pointer_secondary;
  longlong ui_event_index;
  uint64_t *ui_callback_ptr;
  longlong ui_system_register_long;
  longlong long_counter0;
  uint64_t ui_event_id1;
  uint32_t ui_event_id_secondary;
  char charuiui_stack_var_var;
  longlong ui_stack_long_widget_offset;
  int ui_stack_var_a8;
  longlong ui_longuiui_stack_var_var_b8;
  
  ui_temp_state_value = *(int *)(ui_widget_base + UI_SYSTEM_CONFIG_OFFSET0);
  if (*(char *)(ui_callback_ptr + 9) != UI_CHAR_NULL) {
    *(uint64_t *)(ui_widget_base + UI_EVENT_ID_FOURTH_OFFSET0) = 0;
    *(uint64_t *)(ui_widget_base + UI_EVENT_ID_FOURTH_OFFSET8) = 0;
    *(uint64_t *)(ui_widget_base + 2000) = 0;
    *(uint8_t *)(ui_widget_base + 0x7d8) = 0;
  }
  ui_event_index = *(longlong *)(ui_widget_base + 0xf18);
  ui_char_pointer_secondary = (char *)(ui_widget_base + UI_EVENT_ID_FOURTH_OFFSET0);
  ui_event_index = (longlong)*(int *)(ui_widget_base + UI_SYSTEM_CONFIG_OFFSET0);
  ui_callback_ptr = (uint64_t *)(ui_widget_base + 0x860);
  ui_loop_counter = 0;
  ui_event_index = *(longlong *)(ui_widget_base + 0xea8) - ui_event_index;
  ui_stack_long_widget_offset = -UI_EVENT_ID_FOURTH_OFFSET0 - ui_widget_base;
  ui_event_index = 12;
  *(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET + ui_event_index * 4) = *(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET);
  *(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET + ui_event_index * 8) = *(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET);
  ui_longuiui_stack_var_var_b8 = 0;
  *(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET + ui_event_index * 12) = *(uint32_t *)(ui_event_index + UI_EVENT_FLAG_OFFSET);
  do {
    ui_event_index = *(longlong *)(ui_widget_base + 0xea8) + (longlong)*(int *)(ui_callback_ptr + 4);
    if (((int)ui_loop_counter < 4) && (*(int *)(ui_system_register + 0x2be0) != 0)) {
      ui_event_index = *(longlong *)(ui_widget_base + 0xf18) + (longlong)*(int *)(ui_callback_ptr + 4);
    }
    else {
      ui_event_index = ui_event_index - ui_temp_state_value;
    }
    if (((ui_loop_counter & 3) == 0) && (*(int *)(ui_system_register + 0x2be0) != 0)) {
      ui_event_index = ui_longuiui_stack_var_var_b8 + *(longlong *)(ui_widget_base + 0xf30);
      ui_result_status = 1;
    }
    else {
      ui_event_index = ui_event_index + -1;
      ui_result_status = ui_temp_state_value;
    }
    if ((((ui_loop_counter - 4 & 0xfffffff3) == 0) && (ui_loop_counter != UI_EVENT_FLAG_OFFSET)) && (*(int *)(ui_system_register + 0x2be0) != 0))
    {
      charuiui_stack_var_var =
           char_ptr[ui_stack_long_widget_offset + *(longlong *)(ui_widget_base + 0xf30) + -1];
    }
    else {
      charuiui_stack_var_var = *(char *)(ui_event_index + -1);
    }
    long_counter0 = ui_event_index;
    ui_system_memory_free_pool(ui_event_index,ui_event_index,ui_result_status,*(uint32_t *)(*(longlong *)(ui_widget_base + 0xf00) + ui_event_index),ui_event_index)
    ;
    ui_event_id_secondary = (uint32_t)((ulonglong)long_counter0 >> UI_OFFSET_32);
    if (*ui_char_pointer_secondary != UI_CHAR_NULL) {
      if (*ui_char_pointer_secondary < '\x02') {
        ui_event_id1 = CONCAT44(ui_event_id_secondary,ui_temp_state_value);
        ui_system_calculate_scale_factor((int)*(short *)*ui_callback_ptr * (int)*(short *)(ui_widget_base + 0x7e0),ui_event_index,ui_temp_state_value,
                            ui_event_index,ui_event_id1);
        ui_event_id_secondary = (uint32_t)((ulonglong)ui_event_id1 >> UI_OFFSET_32);
        *(uint32_t *)*ui_callback_ptr = 0;
      }
      else {
        ui_system_apply_transformation(*ui_callback_ptr,ui_widget_base + 0x7e0,ui_event_index,ui_temp_state_value);
      }
    }
    ui_loop_counter = ui_loop_counter + 1;
    ui_longuiui_stack_var_var_b8 = ui_longuiui_stack_var_var_b8 + 1;
    ui_event_index = ui_event_index + 4;
    ui_callback_ptr = ui_callback_ptr + 7;
    ui_char_pointer_secondary = ui_char_pointer_secondary + 1;
  } while ((int)ui_loop_counter < UI_EVENT_FLAG_OFFSET);
  if (*(char *)(*(longlong *)(ui_widget_base + 0xf00) + 9) == UI_CHAR_NULL) {
    if (ui_stack_var_a8 != 4) {
      ui_event_index = ui_widget_base + 0x7e0;
      if (ui_stack_var_a8 != 9) {
        ui_callback_ptr = (uint64_t *)(ui_widget_base + 0xda0);
        if (*(char *)(ui_widget_base + 0x7d8) < '\x02') {
          **(short **)(ui_widget_base + 0xda8) = *(short *)(ui_widget_base + 0x820) * *(short *)*ui_callback_ptr;
          ui_system_process_render_queue(*(uint64_t *)(ui_widget_base + 0xda8),ui_widget_base + UI_SNAPSHOT_CREATE_FLAGS0);
          *(uint32_t *)*ui_callback_ptr = 0;
        }
        else {
          ui_system_render_widget_batch(ui_callback_ptr,ui_widget_base + 0x820);
          ui_system_update_render_state(*(uint64_t *)(ui_widget_base + 0xda8),ui_widget_base + UI_SNAPSHOT_CREATE_FLAGS0);
          ui_callback_ptr = (uint64_t *)*ui_callback_ptr;
          *ui_callback_ptr = 0;
          ui_callback_ptr[1] = 0;
          ui_callback_ptr[2] = 0;
          ui_callback_ptr[3] = 0;
        }
        ui_event_index = ui_widget_base + UI_STACK_SIZE_1280;
      }
      ui_event_index = ui_widget_base + UI_EVENT_ID_FOURTH_OFFSET0;
      ui_system_event_handler_scroll(ui_widget_base + UI_SNAPSHOT_CREATE_FLAGS0,ui_event_index,*(uint64_t *)(ui_widget_base + 0xea8),
                    *(uint32_t *)(ui_widget_base + UI_SYSTEM_CONFIG_OFFSET0),ui_event_index);
      ui_event_id_secondary = (uint32_t)((ulonglong)ui_event_index >> UI_OFFSET_32);
    }
    ui_system_event_handler_focus(ui_widget_base + UI_MEMORY_DEALLOC_OFFSET0,ui_widget_base + UI_WIDGET_ITEM_SIZE0,*(uint64_t *)(ui_widget_base + 0xeb0),
                  *(uint64_t *)(ui_widget_base + 0xeb8),
                  CONCAT44(ui_event_id_secondary,*(uint32_t *)(ui_widget_base + 0xe94)));
  }
  return ui_system_return_value;
}

void ui_system_clear_clip_optimization_cache(void)

{
  uint64_t *ui_event_buffer;
  longlong ui_event_index;
  longlong ui_widget_base;
  int ui_system_register;
  uint64_t inuiui_stack_var_var_00000020;
  longlong ui_event_index;
  uint32_t ui_loop_counter;
  
  ui_loop_counter = (uint32_t)((ulonglong)inuiui_stack_var_var_00000020 >> UI_OFFSET_32);
  ui_system_memory_stats_update();
  if (*(char *)(*(longlong *)(ui_widget_base + 0xf00) + 9) == UI_CHAR_NULL) {
    if (ui_system_register != 4) {
      ui_event_index = ui_widget_base + 0x7e0;
      if (ui_system_register != 9) {
        ui_event_buffer = (uint64_t *)(ui_widget_base + 0xda0);
        if (*(char *)(ui_widget_base + 0x7d8) < '\x02') {
          **(short **)(ui_widget_base + 0xda8) = *(short *)(ui_widget_base + 0x820) * *(short *)*ui_event_buffer;
          ui_system_process_render_queue(*(uint64_t *)(ui_widget_base + 0xda8),ui_widget_base + UI_SNAPSHOT_CREATE_FLAGS0);
          *(uint32_t *)*ui_event_buffer = 0;
        }
        else {
          ui_system_render_widget_batch(ui_event_buffer,ui_widget_base + 0x820);
          ui_system_update_render_state(*(uint64_t *)(ui_widget_base + 0xda8),ui_widget_base + UI_SNAPSHOT_CREATE_FLAGS0);
          ui_event_buffer = (uint64_t *)*ui_event_buffer;
          *ui_event_buffer = 0;
          ui_event_buffer[1] = 0;
          ui_event_buffer[2] = 0;
          ui_event_buffer[3] = 0;
        }
        ui_event_index = ui_widget_base + UI_STACK_SIZE_1280;
      }
      ui_event_index = ui_widget_base + UI_EVENT_ID_FOURTH_OFFSET0;
      ui_system_event_handler_scroll(ui_widget_base + UI_SNAPSHOT_CREATE_FLAGS0,ui_event_index,*(uint64_t *)(ui_widget_base + 0xea8),
                    *(uint32_t *)(ui_widget_base + UI_SYSTEM_CONFIG_OFFSET0),ui_event_index);
      ui_loop_counter = (uint32_t)((ulonglong)ui_event_index >> UI_OFFSET_32);
    }
    ui_system_event_handler_focus(ui_widget_base + UI_MEMORY_DEALLOC_OFFSET0,ui_widget_base + UI_WIDGET_ITEM_SIZE0,*(uint64_t *)(ui_widget_base + 0xeb0),
                  *(uint64_t *)(ui_widget_base + 0xeb8),
                  CONCAT44(ui_loop_counter,*(uint32_t *)(ui_widget_base + 0xe94)));
  }
  return ui_system_return_value;
}

void ui_system_free_clip_optimization_resources(void)

{
  uint64_t *ui_event_buffer;
  longlong ui_event_index;
  longlong ui_widget_base;
  int ui_system_register;
  
  if (ui_system_register != 4) {
    ui_event_index = ui_widget_base + 0x7e0;
    if (ui_system_register != 9) {
      ui_event_buffer = (uint64_t *)(ui_widget_base + 0xda0);
      if (*(char *)(ui_widget_base + 0x7d8) < '\x02') {
        **(short **)(ui_widget_base + 0xda8) = *(short *)(ui_widget_base + 0x820) * *(short *)*ui_event_buffer;
        ui_system_process_render_queue(*(uint64_t *)(ui_widget_base + 0xda8),ui_widget_base + UI_SNAPSHOT_CREATE_FLAGS0);
        *(uint32_t *)*ui_event_buffer = 0;
      }
      else {
        ui_system_render_widget_batch(ui_event_buffer,ui_widget_base + 0x820);
        ui_system_update_render_state(*(uint64_t *)(ui_widget_base + 0xda8),ui_widget_base + UI_SNAPSHOT_CREATE_FLAGS0);
        ui_event_buffer = (uint64_t *)*ui_event_buffer;
        *ui_event_buffer = 0;
        ui_event_buffer[1] = 0;
        ui_event_buffer[2] = 0;
        ui_event_buffer[3] = 0;
      }
      ui_event_index = ui_widget_base + UI_STACK_SIZE_1280;
    }
    ui_system_event_handler_scroll(ui_widget_base + UI_SNAPSHOT_CREATE_FLAGS0,ui_event_index,*(uint64_t *)(ui_widget_base + 0xea8),
                  *(uint32_t *)(ui_widget_base + UI_SYSTEM_CONFIG_OFFSET0),ui_widget_base + UI_EVENT_ID_FOURTH_OFFSET0);
  }
  ui_system_event_handler_focus(ui_widget_base + UI_MEMORY_DEALLOC_OFFSET0,ui_widget_base + UI_WIDGET_ITEM_SIZE0,*(uint64_t *)(ui_widget_base + 0xeb0),
                *(uint64_t *)(ui_widget_base + 0xeb8),*(uint32_t *)(ui_widget_base + 0xe94));
  return ui_system_return_value;
}

void ui_system_update_clip_optimization_state(longlong ui_callback,longlong ui_event_type,int ui_event_data)

{
  uint32_t *ui_event_buffer;
  uint32_t *ui_task_index_pointer;
  longlong ui_event_index;
  byte ui_bool_result;
  int ui_result_status;
  uint64_t *ui_callback_ptr;
  uint8_t *ui_callback_ptr;
  byte *ui_boolean_pointer;
  uint32_t ui_event_id0;
  uint32_t ui_event_id1;
  uint32_t ui_event_id_secondary;
  uint ui_task_identifier;
  int *ui_ptr_int_counter;
  uint8_t *ui_event_buffer;
  longlong ui_loop_counter_primary;
  uint ui_event_id7;
  longlong ui_pointer_offset;
  ulonglong ui_event_id9;
  longlong ui_event_index;
  ulonglong ui_task_index1;
  ulonglong ui_task_index2;
  uint ui_task_index3;
  uint8_t ui_stack_array [32];
  uint ui_stack_variable_callback_data;
  longlong *pui_stack_parameter_long;
  longlong ui_stack_parameter_long;
  int ui_stack_integer_var_160;
  int ui_stack_integer_var_15c;
  int ui_stack_integer_var_158;
  int ui_stack_integer_var_154;
  int ui_stack_integer_var_150;
  int ui_stack_integer_var_14c;
  uint ui_stack_extended_data_small8;
  int ui_stack_integer_var_144;
  uint ui_stack_small_data_buffer;
  uint ui_stack_temp_13c;
  int ui_stack_integer_var_138;
  int ui_stack_integer_var_134;
  longlong ui_stack_parameter_long;
  ulonglong ui_stack_temp_var_120;
  ulonglong ui_stack_callback_data;
  int *pui_stack_integer_var_110;
  int *pui_stack_integer_var_108;
  longlong ui_stack_parameter_long;
  longlong ui_stack_parameter_longf8;
  longlong ui_stack_parameter_longf0;
  int *pui_stack_integer_var_e8;
  longlong ui_stack_layout_parameter;
  longlong ui_stack_parameter_longd8;
  longlong ui_stack_parameter_longd0;
  longlong ui_stack_parameter_longc8;
  longlong ui_stack_parameter_longc0;
  uint ui_stack_array [4];
  longlong ui_stack_parameter_buffer [6];
  uint64_t ui_stack_variable_uint_78;
  uint64_t ui_stack_uint_callback_count_primary;
  uint64_t ui_event_mask_primary;
  uint64_t ui_stack_operation_flag;
  uint64_t ui_stack_variable_buffer_xor;
  uint64_t ui_stack_variable_uint_50;
  ulonglong ui_stack_validation_mask;
  
  ui_stack_validation_mask = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_stack_integer_var_160 = *(int *)(ui_callback + UI_REGISTER_Y_OFFSETa4);
  ui_stack_layout_parameter = *(longlong *)(ui_callback + UI_NETWORK_RESOURCE_TYPEa0);
  ui_stack_integer_var_144 = *(int *)(ui_callback + UI_OFFSET_3078) + ui_stack_integer_var_160;
  ui_task_index1 = (ulonglong)(int)*(uint *)(ui_stack_layout_parameter + UI_EVENT_FLAG_OFFSET);
  ui_stack_extended_data_small8 = *(uint *)(ui_stack_layout_parameter + UI_EVENT_COUNTER_OFFSET);
  ui_event_id9 = (ulonglong)(int)ui_stack_extended_data_small8;
  pui_stack_integer_var_e8 = *(int **)(ui_callback + UI_NETWORK_RESOURCE_TYPEa8);
  ui_stack_integer_var_138 = 1 << ((byte)*(uint32_t *)(ui_callback + UI_EVENT_ID_OFFSETe4) & UI_GUARD_CHECK_TYPE_2);
  ui_stack_parameter_buffer[3] = *(uint64_t *)(pui_stack_integer_var_e8 + ui_component_angle_offset);
  ui_stack_parameter_buffer[4] = *(uint64_t *)(pui_stack_integer_var_e8 + UI_EVENT_FLAG_OFFSET);
  ui_stack_parameter_buffer[5] = *(uint64_t *)(pui_stack_integer_var_e8 + UI_NETWORK_RESOURCE_TYPE);
  ui_event_index = *(longlong *)(ui_callback + UI_NETWORK_RESOURCE_TYPEb0);
  ui_stack_array[1] = pui_stack_integer_var_e8[UI_WIDGET_STATE_OFFSET];
  ui_stack_temp_13c = *(uint *)(ui_stack_layout_parameter + UI_EVENT_FLAG_OFFSET);
  ui_stack_variable_uint_78 = *(uint64_t *)(ui_event_index + UI_MEMORY_DEALLOC_OFFSET);
  ui_stack_uint_callback_count_primary = *(uint64_t *)(ui_event_index + UI_BUFFER_SIZE_64);
  ui_event_mask_primary = *(uint64_t *)(ui_event_index + UI_OFFSET_72);
  ui_pointer_offset = *(longlong *)(ui_callback + UI_NETWORK_RESOURCE_TYPEb8);
  ui_stack_array[2] = *(uint32_t *)(ui_event_index + UI_OFFSET_136);
  ui_stack_array[0] = 0;
  ui_stack_operation_flag = *(uint64_t *)(ui_pointer_offset + UI_MEMORY_DEALLOC_OFFSET);
  ui_stack_variable_buffer_xor = *(uint64_t *)(ui_pointer_offset + UI_BUFFER_SIZE_64);
  ui_stack_variable_uint_50 = *(uint64_t *)(ui_pointer_offset + UI_OFFSET_72);
  ui_stack_array[3] = *(uint32_t *)(ui_pointer_offset + UI_OFFSET_136);
  ui_stack_parameter_long = *(longlong *)(ui_stack_layout_parameter + UI_MEMORY_DEALLOC_OFFSET);
  ui_stack_parameter_longf8 = *(longlong *)(ui_stack_layout_parameter + UI_BUFFER_SIZE_64);
  ui_stack_parameter_longf0 = *(longlong *)(ui_stack_layout_parameter + UI_OFFSET_72);
  *(uint *)(ui_event_type + 0xf10) = (uint)(ui_event_data != 0);
  ui_stack_integer_var_15c = ui_event_data;
  if (ui_event_data < *(int *)(ui_callback + UI_OFFSET_3074)) {
    ui_stack_temp_var_120 = ui_task_index1;
    ui_stack_callback_data = ui_event_id9;
    ui_task_index2 = ui_task_index1;
    do {
      ui_stack_integer_var_134 = ui_stack_integer_var_15c;
      *(longlong *)(ui_event_type + 0xfb8) =
           ((longlong)(ui_stack_integer_var_15c % ui_stack_integer_var_138) + UI_LAYOUT_RESOURCE_TYPEc) * UI_MEMORY_ALLOC_SIZE + ui_callback;
      if (ui_stack_integer_var_15c < 1) {
        pui_stack_integer_var_110 = &ui_stack_integer_var_144;
      }
      else {
        pui_stack_integer_var_110 = (int *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETa8) + (longlong)(ui_stack_integer_var_15c + -1) * 4);
      }
      ui_stack_parameter_long = (longlong)ui_stack_integer_var_15c;
      pui_stack_integer_var_108 = (int *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETa8) + ui_stack_parameter_long * 4);
      *(uint64_t *)(ui_event_type + UI_WIDGET_DATA_OFFSET) = *(uint64_t *)(ui_callback + UI_EVENT_QUEUE_OFFSET);
      ui_callback_ptr = *(uint64_t **)(ui_event_type + 0xf58);
      ui_stack_integer_var_154 = ui_stack_integer_var_15c * (int)ui_task_index2 * UI_EVENT_FLAG_OFFSET;
      ui_stack_integer_var_150 = ui_stack_integer_var_15c * (int)ui_event_id9 * 8;
      *ui_callback_ptr = 0;
      *(uint8_t *)(ui_callback_ptr + 1) = 0;
      *(uint32_t *)(ui_event_type + 0xf14) = 0;
      *(int *)(ui_event_type + 0xf8c) = ui_stack_integer_var_15c * -UI_STACK_SIZE_128;
      *(int *)(ui_event_type + 0xf90) = ((*(int *)(ui_callback + UI_OFFSET_3074) - ui_stack_integer_var_15c) + -1) * UI_STACK_SIZE_128;
      if (*(int *)(ui_callback + 0x2be0) == 0) {
        *(longlong *)(ui_event_type + 0xf18) = ui_stack_integer_var_154 + ui_stack_parameter_long;
        *(longlong *)(ui_event_type + 0xf20) = ui_stack_parameter_longf8 + ui_stack_integer_var_150;
        *(longlong *)(ui_event_type + 0xf28) = ui_stack_parameter_longf0 + ui_stack_integer_var_150;
        *(longlong *)(ui_event_type + 0xf30) = *(longlong *)(ui_event_type + 0xf18) + -1;
        *(longlong *)(ui_event_type + 0xf38) = *(longlong *)(ui_event_type + 0xf20) + -1;
        ui_callback_ptr = *(uint8_t **)(ui_event_type + 0xf38);
        *(longlong *)(ui_event_type + 0xf40) = *(longlong *)(ui_event_type + 0xf28) + -1;
        ui_callback_ptr = *(uint8_t **)(ui_event_type + 0xf40);
        *(longlong *)(ui_event_type + 0xf18) =
             *(longlong *)(ui_event_type + 0xf18) - (longlong)*(int *)(ui_event_type + UI_SYSTEM_CONFIG_OFFSET0);
        ui_event_index = UI_EVENT_FLAG_OFFSET;
        *(longlong *)(ui_event_type + 0xf20) =
             *(longlong *)(ui_event_type + 0xf20) - (longlong)*(int *)(ui_event_type + 0xe94);
        *(longlong *)(ui_event_type + 0xf28) =
             *(longlong *)(ui_event_type + 0xf28) - (longlong)*(int *)(ui_event_type + 0xe94);
        *(uint32_t *)(ui_event_type + 0xf48) = *(uint32_t *)(ui_event_type + UI_SYSTEM_CONFIG_OFFSET0);
        *(uint32_t *)(ui_event_type + 0xf4c) = *(uint32_t *)(ui_event_type + 0xe94);
        ui_pointer_offset = (longlong)*(int *)(ui_event_type + 0xe94);
        ui_event_buffer = *(uint8_t **)(ui_event_type + 0xf30);
        ui_result_status = *(int *)(ui_event_type + UI_SYSTEM_CONFIG_OFFSET0);
        do {
          *ui_event_buffer = 0x81;
          ui_event_buffer = ui_event_buffer + ui_result_status;
          ui_event_index = ui_event_index + -1;
        } while (ui_event_index != 0);
        *ui_callback_ptr = 0x81;
        ui_callback_ptr[ui_pointer_offset] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 2] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 3] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 4] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 5] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 6] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 7] = 0x81;
        *ui_callback_ptr = 0x81;
        ui_callback_ptr[ui_pointer_offset] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 2] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 3] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 4] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 5] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 6] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 7] = 0x81;
      }
      else {
        *(longlong *)(ui_event_type + 0xf18) =
             *(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETb0) + ui_stack_parameter_long * 8) + UI_OFFSET_32;
        *(longlong *)(ui_event_type + 0xf20) =
             *(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETb8) + ui_stack_parameter_long * 8) + UI_EVENT_FLAG_OFFSET;
        *(longlong *)(ui_event_type + 0xf28) =
             *(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETc0) + ui_stack_parameter_long * 8) + UI_EVENT_FLAG_OFFSET;
        *(uint64_t *)(ui_event_type + 0xf30) =
             *(uint64_t *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETc8) + ui_stack_parameter_long * 8);
        *(uint64_t *)(ui_event_type + 0xf38) =
             *(uint64_t *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd0) + ui_stack_parameter_long * 8);
        *(uint64_t *)(ui_event_type + 0xf40) =
             *(uint64_t *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd8) + ui_stack_parameter_long * 8);
        *(uint32_t *)(ui_event_type + 0xf48) = 1;
        *(uint32_t *)(ui_event_type + 0xf4c) = 1;
      }
      ui_event_id7 = 0;
      if (0 < *(int *)(ui_callback + UI_OFFSET_3078)) {
        ui_stack_parameter_long = UI_EVENT_FLAG_OFFSET;
        ui_stack_integer_var_14c = 0;
        ui_stack_parameter_long = UI_OFFSET_32;
        do {
          ui_ptr_int_counter = pui_stack_integer_var_110;
          ui_result_status = ui_stack_integer_var_160;
          *pui_stack_integer_var_108 = ui_event_id7 - 1;
          if (((ui_event_id7 & ui_stack_integer_var_160 - 1U) == 0) && (*pui_stack_integer_var_110 - ui_stack_integer_var_160 < (int)ui_event_id7)) {
            do {
              Sleep(0);
            } while (*ui_ptr_int_counter - ui_result_status < (int)ui_event_id7);
            ui_task_index1 = (ulonglong)(int)ui_task_index2;
          }
          ui_event_index = *(longlong *)(ui_event_type + 0xf00);
          ui_pointer_offset = (longlong)ui_stack_integer_var_150;
          *(int *)(ui_event_type + 0xf84) = ui_stack_integer_var_14c;
          ui_result_status = *(int *)(ui_callback + UI_OFFSET_3078);
          *(longlong *)(ui_event_type + 0xea8) = ui_stack_parameter_long + ui_stack_integer_var_154;
          *(longlong *)(ui_event_type + 0xeb0) = ui_stack_parameter_longf8 + ui_pointer_offset;
          *(uint *)(ui_event_type + 0xf88) = ((ui_result_status - ui_event_id7) + -1) * UI_STACK_SIZE_128;
          *(longlong *)(ui_event_type + 0xeb8) = ui_stack_parameter_longf0 + ui_pointer_offset;
          *(longlong *)(ui_event_type + 0xe18) =
               ui_stack_parameter_buffer[(ulonglong)*(byte *)(ui_event_index + 2) * 3] + (longlong)ui_stack_integer_var_154;
          *(longlong *)(ui_event_type + 0xe20) =
               ui_stack_parameter_buffer[(ulonglong)*(byte *)(ui_event_index + 2) * 3 + 1] + ui_pointer_offset;
          *(longlong *)(ui_event_type + 0xe28) =
               ui_stack_parameter_buffer[(ulonglong)*(byte *)(ui_event_index + 2) * 3 + 2] + ui_pointer_offset;
          *(uint *)(ui_event_type + 0xfc0) =
               *(uint *)(ui_event_type + 0xfc0) | ui_stack_array[*(byte *)(ui_event_index + 2)];
          ui_system_apply_clip_optimization(ui_callback,ui_event_type,0);
          ui_task_identifier = ui_stack_extended_data_small8;
          *(uint32_t *)(ui_event_type + 0xf14) = 1;
          *(uint *)(ui_event_type + 0xfc0) =
               *(uint *)(ui_event_type + 0xfc0) |
               (uint)(*(int *)(*(longlong *)(ui_event_type + 0xfb8) + UI_SNAPSHOT_CREATE_FLAGS) - 0x41U < UI_BIT_SHIFT_63ffffbf);
          *(longlong *)(ui_event_type + 0xf18) = *(longlong *)(ui_event_type + 0xf18) + UI_EVENT_FLAG_OFFSET;
          *(longlong *)(ui_event_type + 0xf20) = *(longlong *)(ui_event_type + 0xf20) + 8;
          *(longlong *)(ui_event_type + 0xf28) = *(longlong *)(ui_event_type + 0xf28) + 8;
          if (*(int *)(ui_callback + 0x2be0) == 0) {
            *(longlong *)(ui_event_type + 0xf30) = *(longlong *)(ui_event_type + 0xf30) + UI_EVENT_FLAG_OFFSET;
            *(longlong *)(ui_event_type + 0xf38) = *(longlong *)(ui_event_type + 0xf38) + 8;
            *(longlong *)(ui_event_type + 0xf40) = *(longlong *)(ui_event_type + 0xf40) + 8;
            if (*(int *)(ui_callback + 0x2be0) != 0) goto UI_LABEL_GENERIC_66fdc2;
          }
          else {
UI_LABEL_GENERIC_66fdc2:
            ui_boolean_pointer = *(byte **)(ui_event_type + 0xf00);
            ui_bool_result = *ui_boolean_pointer;
            if (((ui_bool_result == 4) || (ui_bool_result == 9)) || (ui_stack_integer_var_158 = 1, ui_boolean_pointer[9] == 0)) {
              ui_stack_integer_var_158 = 0;
            }
            ui_bool_result = *(byte *)((ulonglong)*(byte *)((ulonglong)ui_bool_result + 0xd00 + ui_callback + UI_OFFSET_30d0) +
                              ui_callback + UI_OFFSET_30d0 + 0xc40 +
                             ((ulonglong)ui_boolean_pointer[2] + (ulonglong)ui_boolean_pointer[ELEVEN_VALUE] * 4) * 4);
            ui_stack_small_data_buffer = (uint)ui_bool_result;
            if (ui_stack_integer_var_15c != *(int *)(ui_callback + UI_OFFSET_3074) + -1) {
              ui_event_buffer = (uint32_t *)(ui_task_index1 * UI_MAX_EVENT_FLAGS + *(longlong *)(ui_event_type + 0xea8));
              ui_event_id0 = ui_event_buffer[1];
              ui_event_id1 = ui_event_buffer[2];
              ui_event_id_secondary = ui_event_buffer[3];
              ui_task_index_pointer = (uint32_t *)
                       (*(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETb0) + 8 + ui_stack_parameter_long * 8) +
                       ui_stack_parameter_long);
              *ui_task_index_pointer = *ui_event_buffer;
              ui_task_index_pointer[1] = ui_event_id0;
              ui_task_index_pointer[2] = ui_event_id1;
              ui_task_index_pointer[3] = ui_event_id_secondary;
              *(uint64_t *)
               (ui_stack_parameter_long + *(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETb8) + 8 + ui_stack_parameter_long * 8)) =
                   *(uint64_t *)(ui_stack_callback_data * 7 + *(longlong *)(ui_event_type + 0xeb0));
              *(uint64_t *)
               (ui_stack_parameter_long + *(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETc0) + 8 + ui_stack_parameter_long * 8)) =
                   *(uint64_t *)(ui_stack_callback_data * 7 + *(longlong *)(ui_event_type + 0xeb8));
            }
            if ((ui_event_id7 != *(int *)(ui_callback + UI_OFFSET_3078) - 1U) &&
               (*(char *)(*(longlong *)(ui_event_type + 0xf00) + UI_COMPONENT_CONFIG_OFFSET) == UI_CHAR_NULL)) {
              ui_pointer_offset = 0;
              ui_event_index = ui_stack_temp_var_120 * 2;
              do {
                ui_loop_counter_primary = ui_event_index + ui_stack_temp_var_120;
                *(uint8_t *)
                 (ui_pointer_offset + *(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETc8) + ui_stack_parameter_long * 8)) =
                     *(uint8_t *)
                      (ui_event_index + ui_stack_temp_var_120 * -2 + UI_MAX_EVENT_FLAGS + *(longlong *)(ui_event_type + 0xea8));
                *(uint8_t *)
                 (*(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETc8) + ui_stack_parameter_long * 8) + 1 + ui_pointer_offset) =
                     *(uint8_t *)((*(longlong *)(ui_event_type + 0xea8) + ui_event_index + UI_MAX_EVENT_FLAGS) - ui_stack_temp_var_120);
                ui_event_index = ui_event_index + UI_MAX_EVENT_FLAGS;
                ui_event_index = ui_event_index + ui_stack_temp_var_120 * 4;
                *(uint8_t *)
                 (*(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETc8) + ui_stack_parameter_long * 8) + 2 + ui_pointer_offset) =
                     *(uint8_t *)(ui_event_index + *(longlong *)(ui_event_type + 0xea8));
                *(uint8_t *)
                 (*(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETc8) + ui_stack_parameter_long * 8) + 3 + ui_pointer_offset) =
                     *(uint8_t *)(ui_loop_counter_primary + UI_MAX_EVENT_FLAGS + *(longlong *)(ui_event_type + 0xea8));
                ui_pointer_offset = ui_pointer_offset + 4;
              } while (ui_pointer_offset < UI_EVENT_FLAG_OFFSET);
              **(uint8_t **)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd0) + ui_stack_parameter_long * 8) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb0) + 7);
              **(uint8_t **)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd8) + ui_stack_parameter_long * 8) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb8) + 7);
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd0) + ui_stack_parameter_long * 8) + 1) =
                   *(uint8_t *)(ui_stack_callback_data + 7 + *(longlong *)(ui_event_type + 0xeb0));
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd8) + ui_stack_parameter_long * 8) + 1) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb8) + 7 + ui_stack_callback_data);
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd0) + ui_stack_parameter_long * 8) + 2) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb0) + 7 + ui_stack_callback_data * 2);
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd8) + ui_stack_parameter_long * 8) + 2) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb8) + 7 + ui_stack_callback_data * 2);
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd0) + ui_stack_parameter_long * 8) + 3) =
                   *(uint8_t *)(ui_stack_callback_data * 3 + 7 + *(longlong *)(ui_event_type + 0xeb0));
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd8) + ui_stack_parameter_long * 8) + 3) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb8) + 7 + ui_stack_callback_data * 3);
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd0) + ui_stack_parameter_long * 8) + 4) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb0) + 7 + ui_stack_callback_data * 4);
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd8) + ui_stack_parameter_long * 8) + 4) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb8) + 7 + ui_stack_callback_data * 4);
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd0) + ui_stack_parameter_long * 8) + 5) =
                   *(uint8_t *)(ui_stack_callback_data * 5 + 7 + *(longlong *)(ui_event_type + 0xeb0));
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd8) + ui_stack_parameter_long * 8) + 5) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb8) + 7 + ui_stack_callback_data * 5);
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd0) + ui_stack_parameter_long * 8) + 6) =
                   *(uint8_t *)(ui_stack_callback_data * 6 + 7 + *(longlong *)(ui_event_type + 0xeb0));
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd8) + ui_stack_parameter_long * 8) + 6) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb8) + 7 + ui_stack_callback_data * 6);
              ui_task_index2 = (ulonglong)ui_stack_temp_13c;
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd0) + ui_stack_parameter_long * 8) + 7) =
                   *(uint8_t *)(ui_stack_callback_data * 7 + 7 + *(longlong *)(ui_event_type + 0xeb0));
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd8) + ui_stack_parameter_long * 8) + 7) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb8) + 7 + ui_stack_callback_data * 7);
            }
            ui_task_index3 = (uint)ui_bool_result;
            ui_event_index = ui_callback + UI_OFFSET_30d0;
            if (ui_task_index3 != 0) {
              if (*(int *)(ui_callback + UI_OFFSET_30c0) == 0) {
                ui_pointer_offset = (longlong)(int)ui_task_index3;
                ui_stack_parameter_longd8 = ui_pointer_offset * UI_EVENT_FLAG_OFFSET + ui_event_index;
                ui_stack_parameter_longd0 = (ui_pointer_offset + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET + ui_event_index;
                ui_stack_parameter_longc8 = (ui_pointer_offset + UI_STACK_SIZE_128) * UI_EVENT_FLAG_OFFSET + ui_event_index;
                ui_stack_parameter_longc0 = ((ulonglong)
                             *(byte *)(((longlong)*(int *)(ui_callback + UI_OFFSET_3064) + 0x32) * UI_BUFFER_SIZE_64 + ui_pointer_offset
                                      + ui_event_index) + UI_RENDER_CONTEXT_OFFSET) * UI_EVENT_FLAG_OFFSET + ui_event_index;
                if (0 < (int)ui_event_id7) {
                  pui_stack_parameter_long = &ui_stack_parameter_longd8;
                  ui_stack_variable_callback_data = ui_stack_extended_data_small8;
                  ui_system_event_handler_hover(*(uint64_t *)(ui_event_type + 0xea8),*(uint64_t *)(ui_event_type + 0xeb0),
                                *(uint64_t *)(ui_event_type + 0xeb8),ui_task_index2 & UI_BIT_MASK_32BIT_FULL);
                }
                ui_result_status = ui_stack_integer_var_158;
                if (ui_stack_integer_var_158 == 0) {
                  pui_stack_parameter_long = &ui_stack_parameter_longd8;
                  ui_stack_variable_callback_data = ui_task_identifier;
                  ui_system_event_handler_click(*(uint64_t *)(ui_event_type + 0xea8),*(uint64_t *)(ui_event_type + 0xeb0),
                                *(uint64_t *)(ui_event_type + 0xeb8),ui_task_index2 & UI_BIT_MASK_32BIT_FULL);
                }
                if (0 < ui_stack_parameter_long) {
                  pui_stack_parameter_long = &ui_stack_parameter_longd8;
                  ui_stack_variable_callback_data = ui_task_identifier;
                  ui_system_event_handler_right_click(*(uint64_t *)(ui_event_type + 0xea8),*(uint64_t *)(ui_event_type + 0xeb0),
                                *(uint64_t *)(ui_event_type + 0xeb8),ui_task_index2 & UI_BIT_MASK_32BIT_FULL);
                }
                if (ui_result_status == 0) {
                  pui_stack_parameter_long = &ui_stack_parameter_longd8;
                  ui_stack_variable_callback_data = ui_task_identifier;
                  ui_system_event_handler_drag(*(uint64_t *)(ui_event_type + 0xea8),*(uint64_t *)(ui_event_type + 0xeb0),
                                *(uint64_t *)(ui_event_type + 0xeb8),ui_task_index2 & UI_BIT_MASK_32BIT_FULL);
                }
              }
              else {
                if (0 < (int)ui_event_id7) {
                  ui_system_process_widget_task(*(uint64_t *)(ui_event_type + 0xea8),ui_task_index2 & UI_BIT_MASK_32BIT_FULL,
                                      (longlong)(int)ui_task_index3 * UI_EVENT_FLAG_OFFSET + ui_event_index);
                }
                ui_result_status = ui_stack_integer_var_158;
                if (ui_stack_integer_var_158 == 0) {
                  ui_system_event_handler_double_click(*(uint64_t *)(ui_event_type + 0xea8),ui_task_index2 & UI_BIT_MASK_32BIT_FULL,
                                ((longlong)(int)ui_task_index3 + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET + ui_event_index);
                }
                if (0 < ui_stack_parameter_long) {
                  ui_system_validate_widget_state(*(uint64_t *)(ui_event_type + 0xea8),ui_task_index2 & UI_BIT_MASK_32BIT_FULL,
                                      (longlong)(int)ui_task_index3 * UI_EVENT_FLAG_OFFSET + ui_event_index);
                }
                if (ui_result_status == 0) {
                  ui_system_event_handler_drop(*(uint64_t *)(ui_event_type + 0xea8),ui_task_index2 & UI_BIT_MASK_32BIT_FULL,
                                ((longlong)(int)ui_task_index3 + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET + ui_event_index);
                }
              }
            }
          }
          ui_event_id7 = ui_event_id7 + 1;
          ui_stack_integer_var_14c = ui_stack_integer_var_14c + -UI_STACK_SIZE_128;
          ui_stack_integer_var_154 = ui_stack_integer_var_154 + UI_EVENT_FLAG_OFFSET;
          ui_stack_integer_var_150 = ui_stack_integer_var_150 + 8;
          *(longlong *)(ui_event_type + 0xf00) = *(longlong *)(ui_event_type + 0xf00) + UI_TIME_DELTA_OFFSET;
          *(longlong *)(ui_event_type + UI_WIDGET_DATA_OFFSET) = *(longlong *)(ui_event_type + UI_WIDGET_DATA_OFFSET) + 9;
          ui_stack_parameter_long = ui_stack_parameter_long + UI_EVENT_FLAG_OFFSET;
          ui_stack_parameter_long = ui_stack_parameter_long + 8;
          ui_task_index1 = (ulonglong)(int)ui_task_index2;
        } while ((int)ui_event_id7 < *(int *)(ui_callback + UI_OFFSET_3078));
        ui_task_index1 = (ulonglong)(int)ui_task_index2;
      }
      if (*(int *)(ui_callback + 0x2be0) == 0) {
        ui_system_update_widget_layout(ui_stack_layout_parameter,*(longlong *)(ui_event_type + 0xea8) + UI_EVENT_FLAG_OFFSET,
                            *(longlong *)(ui_event_type + 0xeb0) + 8,*(longlong *)(ui_event_type + 0xeb8) + 8);
      }
      else if (ui_stack_integer_var_15c != *(int *)(ui_callback + UI_OFFSET_3074) + -1) {
        ui_event_index = 0;
        ui_result_status = *pui_stack_integer_var_e8;
        ui_pointer_offset = (longlong)((ui_result_status >> 1) + UI_EVENT_FLAG_OFFSET);
        do {
          ui_loop_counter_primary = *(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETb0) + 8 + ui_stack_parameter_long * 8) +
                   (longlong)(ui_result_status + UI_OFFSET_32);
          *(uint8_t *)(ui_loop_counter_primary + ui_event_index) = *(uint8_t *)(ui_loop_counter_primary + -1);
          ui_loop_counter_primary = *(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETb8) + 8 + ui_stack_parameter_long * 8) + ui_pointer_offset;
          *(uint8_t *)(ui_loop_counter_primary + ui_event_index) = *(uint8_t *)(ui_loop_counter_primary + -1);
          ui_loop_counter_primary = *(longlong *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETc0) + 8 + ui_stack_parameter_long * 8) + ui_pointer_offset;
          *(uint8_t *)(ui_loop_counter_primary + ui_event_index) = *(uint8_t *)(ui_loop_counter_primary + -1);
          ui_event_index = ui_event_index + 1;
        } while (ui_event_index < 4);
      }
      ui_event_id9 = (ulonglong)ui_stack_extended_data_small8;
      *pui_stack_integer_var_108 = ui_event_id7 + ui_stack_integer_var_160;
      *(longlong *)(ui_event_type + 0xf00) = *(longlong *)(ui_event_type + 0xf00) + UI_TIME_DELTA_OFFSET;
      *(uint32_t *)(ui_event_type + 0xf10) = 1;
      *(longlong *)(ui_event_type + 0xf00) =
           *(longlong *)(ui_event_type + 0xf00) +
           (ulonglong)(uint)(*(int *)(ui_event_type + 0xf08) * *(int *)(ui_callback + UI_REGISTER_Y_OFFSET8c)) * 0x4c;
      ui_stack_integer_var_15c = ui_stack_integer_var_15c + 1 + *(int *)(ui_callback + UI_REGISTER_Y_OFFSET8c);
      ui_event_data = ui_stack_integer_var_134;
    } while (ui_stack_integer_var_15c < *(int *)(ui_callback + UI_OFFSET_3074));
  }
  if (ui_event_data == *(int *)(ui_callback + UI_OFFSET_3074) + -1) {
    ReleaseSemaphore(*(uint64_t *)(ui_callback + UI_OFFSET_6800),1);
  }
  RenderUIComponent(ui_stack_validation_mask ^ (ulonglong)ui_stack_array);
}

void ui_system_process_clip_optimization_batch(longlong ui_callback,longlong ui_event_type,int ui_event_data)

{
  uint32_t *ui_event_buffer;
  longlong ui_event_index;
  byte ui_bool_result;
  uint32_t ui_loop_counter;
  int ui_result_status;
  uint64_t *ui_callback_ptr;
  uint8_t *ui_callback_ptr;
  byte *ui_boolean_pointer;
  uint32_t ui_event_id0;
  uint32_t ui_event_id1;
  bool boolean_flag2;
  uint ui_task_identifier;
  uint8_t *ui_event_buffer;
  uint64_t ui_widget_base;
  longlong ui_system_register_long;
  uint ui_event_id_fifth;
  uint64_t ui_system_register;
  longlong ui_system_register_long;
  longlong ui_loop_counter_primary;
  longlong ui_loop_counter_secondary;
  longlong ui_pointer_offset;
  ulonglong ui_event_id9;
  longlong ui_register_r11;
  longlong ui_event_index;
  uint64_t ui_system_register;
  ulonglong ui_task_index1;
  ulonglong ui_task_index2;
  uint ui_task_index3;
  int *ui_int_pointer;
  uint32_t ui_render_result;
  int ui_stack_integer_var;
  uint ui_stack_temp_unsigned_value;
  int ui_stack_integer_var;
  uint ui_stack_system_register_value;
  uint ui_stack_unsigned_var_c;
  int ui_stack_integer_var;
  longlong ui_stack_input_var_68;
  longlong inuiui_stack_var_var_00000070;
  ulonglong ui_stack_temp_var_78;
  
  *(uint64_t *)(ui_register_r11 + UI_OFFSET_32) = ui_widget_base;
  *(uint64_t *)(ui_register_r11 + -UI_SNAPSHOT_CREATE_FLAGS) = ui_system_register;
  ui_stack_integer_var = *(int *)(ui_callback + UI_REGISTER_Y_OFFSETa4);
  ui_loop_counter_primary = *(longlong *)(ui_system_register + UI_NETWORK_RESOURCE_TYPEa0);
  ui_stack_integer_var = *(int *)(ui_callback + UI_OFFSET_3078) + ui_stack_integer_var;
  ui_loop_counter = *(uint32_t *)(ui_system_register + UI_EVENT_ID_OFFSETe4);
  *(uint64_t *)(ui_register_r11 + -UI_CALLBACK_HANDLER_OFFSET) = ui_system_register;
  ui_stack_unsigned_var_c = *(uint *)(ui_loop_counter_primary + UI_EVENT_FLAG_OFFSET);
  ui_task_index1 = (ulonglong)(int)ui_stack_unsigned_var_c;
  ui_stack_temp_unsigned_value = *(uint *)(ui_loop_counter_primary + UI_EVENT_COUNTER_OFFSET);
  ui_event_id9 = (ulonglong)(int)ui_stack_temp_unsigned_value;
  ui_event_index = *(longlong *)(ui_system_register + UI_NETWORK_RESOURCE_TYPEa8);
  *(longlong *)(ui_system_register + -UI_OFFSET_80) = ui_event_index;
  ui_stack_integer_var = 1 << ((byte)ui_loop_counter & UI_GUARD_CHECK_TYPE_2);
  *(uint64_t *)(ui_system_register + 8) = *(uint64_t *)(ui_event_index + UI_MEMORY_DEALLOC_OFFSET);
  *(uint64_t *)(ui_system_register + UI_EVENT_FLAG_OFFSET) = *(uint64_t *)(ui_event_index + UI_BUFFER_SIZE_64);
  *(uint64_t *)(ui_system_register + UI_SNAPSHOT_CREATE_FLAGS) = *(uint64_t *)(ui_event_index + UI_OFFSET_72);
  ui_pointer_offset = *(longlong *)(ui_system_register + UI_NETWORK_RESOURCE_TYPEb0);
  *(uint32_t *)(ui_system_register + -UI_OFFSET_28) = *(uint32_t *)(ui_event_index + UI_OFFSET_136);
  *(longlong *)(ui_system_register + -UI_OFFSET_72) = ui_loop_counter_primary;
  *(uint64_t *)(ui_system_register + UI_OFFSET_32) = *(uint64_t *)(ui_pointer_offset + UI_MEMORY_DEALLOC_OFFSET);
  *(uint64_t *)(ui_system_register + UI_CALLBACK_HANDLER_OFFSET) = *(uint64_t *)(ui_pointer_offset + UI_BUFFER_SIZE_64);
  *(uint64_t *)(ui_system_register + UI_MEMORY_ALLOC_SIZE) = *(uint64_t *)(ui_pointer_offset + UI_OFFSET_72);
  ui_event_index = *(longlong *)(ui_system_register + UI_NETWORK_RESOURCE_TYPEb8);
  *(uint32_t *)(ui_system_register + -UI_SNAPSHOT_CREATE_FLAGS) = *(uint32_t *)(ui_pointer_offset + UI_OFFSET_136);
  *(uint32_t *)(ui_system_register + -UI_OFFSET_32) = 0;
  *(uint64_t *)(ui_system_register + UI_MEMORY_DEALLOC_OFFSET) = *(uint64_t *)(ui_event_index + UI_MEMORY_DEALLOC_OFFSET);
  *(uint64_t *)(ui_system_register + UI_BUFFER_SIZE_64) = *(uint64_t *)(ui_event_index + UI_BUFFER_SIZE_64);
  *(uint64_t *)(ui_system_register + UI_OFFSET_72) = *(uint64_t *)(ui_event_index + UI_OFFSET_72);
  *(uint32_t *)(ui_system_register + -UI_SHIFT_AMOUNT_20) = *(uint32_t *)(ui_event_index + UI_OFFSET_136);
  *(uint64_t *)(ui_system_register + -UI_OFFSET_104) = *(uint64_t *)(ui_loop_counter_primary + UI_MEMORY_DEALLOC_OFFSET);
  *(uint64_t *)(ui_system_register + -UI_WIDGET_CREATE_CALLBACK_OFFSET) = *(uint64_t *)(ui_loop_counter_primary + UI_BUFFER_SIZE_64);
  *(uint64_t *)(ui_system_register + -UI_OFFSET_88) = *(uint64_t *)(ui_loop_counter_primary + UI_OFFSET_72);
  *(uint *)(ui_event_type + 0xf10) = (uint)(ui_event_data != 0);
  ui_stack_integer_var = ui_event_data;
  if (ui_event_data < *(int *)(ui_system_register + UI_OFFSET_3074)) {
    ui_stack_temp_var_78 = ui_task_index1;
    *(ulonglong *)(ui_system_register + -UI_STACK_SIZE_128) = ui_event_id9;
    ui_task_index2 = ui_task_index1;
    do {
      ui_stack_integer_var = ui_stack_integer_var;
      *(longlong *)(ui_event_type + 0xfb8) =
           ((longlong)(ui_stack_integer_var % ui_stack_integer_var) + UI_LAYOUT_RESOURCE_TYPEc) * UI_MEMORY_ALLOC_SIZE + ui_system_register;
      if (ui_stack_integer_var < 1) {
        ui_int_pointer = &ui_stack_data_buffer_extended_54;
      }
      else {
        ui_int_pointer = (int *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETa8) +
                         (longlong)(ui_stack_integer_var + -1) * 4);
      }
      ui_loop_counter_primary = *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETa8);
      ui_event_index = (longlong)ui_stack_integer_var;
      *(int **)(ui_system_register + -UI_OFFSET_120) = ui_int_pointer;
      *(longlong *)(ui_system_register + -UI_WIDGET_DATA_OFFSET) = ui_loop_counter_primary + ui_event_index * 4;
      *(uint64_t *)(ui_event_type + UI_WIDGET_DATA_OFFSET) = *(uint64_t *)(ui_system_register + UI_EVENT_QUEUE_OFFSET);
      ui_callback_ptr = *(uint64_t **)(ui_event_type + 0xf58);
      ui_stack_integer_var = ui_stack_integer_var * (int)ui_task_index2 * UI_EVENT_FLAG_OFFSET;
      ui_stack_integer_var = ui_stack_integer_var * (int)ui_event_id9 * 8;
      *ui_callback_ptr = 0;
      *(uint8_t *)(ui_callback_ptr + 1) = 0;
      *(uint32_t *)(ui_event_type + 0xf14) = 0;
      *(int *)(ui_event_type + 0xf8c) = ui_stack_integer_var * -UI_STACK_SIZE_128;
      *(int *)(ui_event_type + 0xf90) =
           ((*(int *)(ui_system_register + UI_OFFSET_3074) - ui_stack_integer_var) + -1) * UI_STACK_SIZE_128;
      if (*(int *)(ui_system_register + 0x2be0) == 0) {
        ui_loop_counter_primary = *(longlong *)(ui_system_register + -UI_WIDGET_CREATE_CALLBACK_OFFSET);
        *(longlong *)(ui_event_type + 0xf18) =
             (longlong)ui_stack_integer_var + *(longlong *)(ui_system_register + -UI_OFFSET_104);
        *(longlong *)(ui_event_type + 0xf20) = ui_loop_counter_primary + ui_stack_integer_var;
        *(longlong *)(ui_event_type + 0xf28) =
             *(longlong *)(ui_system_register + -UI_OFFSET_88) + (longlong)ui_stack_integer_var;
        *(longlong *)(ui_event_type + 0xf30) = *(longlong *)(ui_event_type + 0xf18) + -1;
        *(longlong *)(ui_event_type + 0xf38) = *(longlong *)(ui_event_type + 0xf20) + -1;
        ui_callback_ptr = *(uint8_t **)(ui_event_type + 0xf38);
        *(longlong *)(ui_event_type + 0xf40) = *(longlong *)(ui_event_type + 0xf28) + -1;
        ui_callback_ptr = *(uint8_t **)(ui_event_type + 0xf40);
        *(longlong *)(ui_event_type + 0xf18) =
             *(longlong *)(ui_event_type + 0xf18) - (longlong)*(int *)(ui_event_type + UI_SYSTEM_CONFIG_OFFSET0);
        ui_loop_counter_primary = UI_EVENT_FLAG_OFFSET;
        *(longlong *)(ui_event_type + 0xf20) =
             *(longlong *)(ui_event_type + 0xf20) - (longlong)*(int *)(ui_event_type + 0xe94);
        *(longlong *)(ui_event_type + 0xf28) =
             *(longlong *)(ui_event_type + 0xf28) - (longlong)*(int *)(ui_event_type + 0xe94);
        *(uint32_t *)(ui_event_type + 0xf48) = *(uint32_t *)(ui_event_type + UI_SYSTEM_CONFIG_OFFSET0);
        *(uint32_t *)(ui_event_type + 0xf4c) = *(uint32_t *)(ui_event_type + 0xe94);
        ui_pointer_offset = (longlong)*(int *)(ui_event_type + 0xe94);
        ui_event_buffer = *(uint8_t **)(ui_event_type + 0xf30);
        ui_result_status = *(int *)(ui_event_type + UI_SYSTEM_CONFIG_OFFSET0);
        do {
          *ui_event_buffer = 0x81;
          ui_event_buffer = ui_event_buffer + ui_result_status;
          ui_loop_counter_primary = ui_loop_counter_primary + -1;
        } while (ui_loop_counter_primary != 0);
        *ui_callback_ptr = 0x81;
        ui_callback_ptr[ui_pointer_offset] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 2] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 3] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 4] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 5] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 6] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 7] = 0x81;
        *ui_callback_ptr = 0x81;
        ui_callback_ptr[ui_pointer_offset] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 2] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 3] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 4] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 5] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 6] = 0x81;
        ui_callback_ptr[ui_pointer_offset * 7] = 0x81;
      }
      else {
        *(longlong *)(ui_event_type + 0xf18) =
             *(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb0) + ui_event_index * 8) + UI_OFFSET_32;
        *(longlong *)(ui_event_type + 0xf20) =
             *(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb8) + ui_event_index * 8) + UI_EVENT_FLAG_OFFSET;
        *(longlong *)(ui_event_type + 0xf28) =
             *(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc0) + ui_event_index * 8) + UI_EVENT_FLAG_OFFSET;
        *(uint64_t *)(ui_event_type + 0xf30) =
             *(uint64_t *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc8) + ui_event_index * 8);
        *(uint64_t *)(ui_event_type + 0xf38) =
             *(uint64_t *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) + ui_event_index * 8);
        *(uint64_t *)(ui_event_type + 0xf40) =
             *(uint64_t *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) + ui_event_index * 8);
        *(uint32_t *)(ui_event_type + 0xf48) = 1;
        *(uint32_t *)(ui_event_type + 0xf4c) = 1;
      }
      ui_event_id_fifth = 0;
      if (0 < *(int *)(ui_system_register + UI_OFFSET_3078)) {
        inuiui_stack_var_var_00000070 = UI_EVENT_FLAG_OFFSET;
        ui_stack_integer_var = 0;
        ui_stack_input_var_68 = UI_OFFSET_32;
        do {
          ui_result_status = ui_stack_integer_var;
          **(int **)(ui_system_register + -UI_WIDGET_DATA_OFFSET) = ui_event_id_fifth - 1;
          if (((ui_event_id_fifth & ui_stack_integer_var - 1U) == 0) &&
             (*ui_int_pointer - ui_stack_integer_var < (int)ui_event_id_fifth)) {
            do {
              ui_render_result = Sleep(0);
            } while (*ui_int_pointer - ui_result_status < (int)ui_event_id_fifth);
            ui_task_index1 = (ulonglong)(int)ui_task_index2;
          }
          ui_loop_counter_primary = *(longlong *)(ui_event_type + 0xf00);
          ui_loop_counter_secondary = (longlong)ui_stack_integer_var;
          *(int *)(ui_event_type + 0xf84) = ui_stack_integer_var;
          ui_result_status = *(int *)(ui_system_register + UI_OFFSET_3078);
          *(longlong *)(ui_event_type + 0xea8) =
               *(longlong *)(ui_system_register + -UI_OFFSET_104) + (longlong)ui_stack_integer_var;
          *(longlong *)(ui_event_type + 0xeb0) = *(longlong *)(ui_system_register + -UI_WIDGET_CREATE_CALLBACK_OFFSET) + ui_loop_counter_secondary;
          ui_pointer_offset = *(longlong *)(ui_system_register + -UI_OFFSET_88);
          *(uint *)(ui_event_type + 0xf88) = ((ui_result_status - ui_event_id_fifth) + -1) * UI_STACK_SIZE_128;
          *(longlong *)(ui_event_type + 0xeb8) = ui_pointer_offset + ui_loop_counter_secondary;
          *(longlong *)(ui_event_type + 0xe18) =
               *(longlong *)(ui_system_register + -UI_EVENT_FLAG_OFFSET + (ulonglong)*(byte *)(ui_loop_counter_primary + 2) * UI_SNAPSHOT_CREATE_FLAGS) +
               (longlong)ui_stack_integer_var;
          *(longlong *)(ui_event_type + 0xe20) =
               *(longlong *)(ui_system_register + -8 + (ulonglong)*(byte *)(ui_loop_counter_primary + 2) * UI_SNAPSHOT_CREATE_FLAGS) + ui_loop_counter_secondary;
          *(longlong *)(ui_event_type + 0xe28) =
               *(longlong *)(ui_system_register + (ulonglong)*(byte *)(ui_loop_counter_primary + 2) * UI_SNAPSHOT_CREATE_FLAGS) + ui_loop_counter_secondary;
          *(uint *)(ui_event_type + 0xfc0) =
               *(uint *)(ui_event_type + 0xfc0) |
               *(uint *)(ui_system_register + -UI_OFFSET_32 + (ulonglong)*(byte *)(ui_loop_counter_primary + 2) * 4);
          ui_render_result = ui_system_apply_clip_optimization(ui_render_result,ui_event_type,0);
          ui_task_identifier = ui_stack_temp_unsigned_value;
          *(uint32_t *)(ui_event_type + 0xf14) = 1;
          *(uint *)(ui_event_type + 0xfc0) =
               *(uint *)(ui_event_type + 0xfc0) |
               (uint)(*(int *)(*(longlong *)(ui_event_type + 0xfb8) + UI_SNAPSHOT_CREATE_FLAGS) - 0x41U < UI_BIT_SHIFT_63ffffbf);
          *(longlong *)(ui_event_type + 0xf18) = *(longlong *)(ui_event_type + 0xf18) + UI_EVENT_FLAG_OFFSET;
          *(longlong *)(ui_event_type + 0xf20) = *(longlong *)(ui_event_type + 0xf20) + 8;
          *(longlong *)(ui_event_type + 0xf28) = *(longlong *)(ui_event_type + 0xf28) + 8;
          if (*(int *)(ui_system_register + 0x2be0) == 0) {
            *(longlong *)(ui_event_type + 0xf30) = *(longlong *)(ui_event_type + 0xf30) + UI_EVENT_FLAG_OFFSET;
            *(longlong *)(ui_event_type + 0xf38) = *(longlong *)(ui_event_type + 0xf38) + 8;
            *(longlong *)(ui_event_type + 0xf40) = *(longlong *)(ui_event_type + 0xf40) + 8;
            if (*(int *)(ui_system_register + 0x2be0) != 0) goto UI_LABEL_GENERIC_66fdc2;
          }
          else {
UI_LABEL_GENERIC_66fdc2:
            ui_boolean_pointer = *(byte **)(ui_event_type + 0xf00);
            ui_bool_result = *ui_boolean_pointer;
            if (((ui_bool_result == 4) || (ui_bool_result == 9)) || (boolean_flag2 = true, ui_boolean_pointer[9] == 0)) {
              boolean_flag2 = false;
            }
            ui_bool_result = *(byte *)((ulonglong)*(byte *)((ulonglong)ui_bool_result + 0xd00 + ui_system_register + UI_OFFSET_30d0) +
                              ui_system_register + UI_OFFSET_30d0 + 0xc40 +
                             ((ulonglong)ui_boolean_pointer[2] + (ulonglong)ui_boolean_pointer[ELEVEN_VALUE] * 4) * 4);
            ui_stack_system_register_value = (uint)ui_bool_result;
            if (ui_stack_integer_var != *(int *)(ui_system_register + UI_OFFSET_3074) + -1) {
              ui_event_buffer = (uint32_t *)(ui_task_index1 * UI_MAX_EVENT_FLAGS + *(longlong *)(ui_event_type + 0xea8));
              ui_render_result = *ui_event_buffer;
              ui_loop_counter = ui_event_buffer[1];
              ui_event_id0 = ui_event_buffer[2];
              ui_event_id1 = ui_event_buffer[3];
              ui_loop_counter_primary = *(longlong *)(ui_system_register + -UI_STACK_SIZE_128) * 7;
              ui_event_buffer = (uint32_t *)
                       (*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb0) + 8 + ui_event_index * 8) +
                       ui_stack_input_var_68);
              *ui_event_buffer = ui_render_result;
              ui_event_buffer[1] = ui_loop_counter;
              ui_event_buffer[2] = ui_event_id0;
              ui_event_buffer[3] = ui_event_id1;
              *(uint64_t *)
               (inuiui_stack_var_var_00000070 +
               *(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb8) + 8 + ui_event_index * 8)) =
                   *(uint64_t *)(ui_loop_counter_primary + *(longlong *)(ui_event_type + 0xeb0));
              *(uint64_t *)
               (inuiui_stack_var_var_00000070 +
               *(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc0) + 8 + ui_event_index * 8)) =
                   *(uint64_t *)(ui_loop_counter_primary + *(longlong *)(ui_event_type + 0xeb8));
            }
            if ((ui_event_id_fifth != *(int *)(ui_system_register + UI_OFFSET_3078) - 1U) &&
               (*(char *)(*(longlong *)(ui_event_type + 0xf00) + UI_COMPONENT_CONFIG_OFFSET) == UI_CHAR_NULL)) {
              ui_pointer_offset = 0;
              ui_loop_counter_primary = ui_stack_temp_var_78 * 2;
              do {
                ui_loop_counter_secondary = ui_loop_counter_primary + ui_stack_temp_var_78;
                *(uint8_t *)
                 (ui_pointer_offset + *(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc8) + ui_event_index * 8)) =
                     *(uint8_t *)
                      (ui_loop_counter_primary + ui_stack_temp_var_78 * -2 + UI_MAX_EVENT_FLAGS + *(longlong *)(ui_event_type + 0xea8));
                *(uint8_t *)
                 (*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc8) + ui_event_index * 8) + 1 + ui_pointer_offset) =
                     *(uint8_t *)
                      ((*(longlong *)(ui_event_type + 0xea8) + ui_loop_counter_primary + UI_MAX_EVENT_FLAGS) - ui_stack_temp_var_78);
                ui_event_index = ui_loop_counter_primary + UI_MAX_EVENT_FLAGS;
                ui_loop_counter_primary = ui_loop_counter_primary + ui_stack_temp_var_78 * 4;
                *(uint8_t *)
                 (*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc8) + ui_event_index * 8) + 2 + ui_pointer_offset) =
                     *(uint8_t *)(ui_event_index + *(longlong *)(ui_event_type + 0xea8));
                *(uint8_t *)
                 (*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc8) + ui_event_index * 8) + 3 + ui_pointer_offset) =
                     *(uint8_t *)(ui_loop_counter_secondary + UI_MAX_EVENT_FLAGS + *(longlong *)(ui_event_type + 0xea8));
                ui_pointer_offset = ui_pointer_offset + 4;
              } while (ui_pointer_offset < UI_EVENT_FLAG_OFFSET);
              ui_loop_counter_primary = *(longlong *)(ui_system_register + -UI_STACK_SIZE_128);
              **(uint8_t **)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) + ui_event_index * 8) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb0) + 7);
              **(uint8_t **)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) + ui_event_index * 8) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb8) + 7);
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) + ui_event_index * 8) + 1) =
                   *(uint8_t *)(ui_loop_counter_primary + 7 + *(longlong *)(ui_event_type + 0xeb0));
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) + ui_event_index * 8) + 1) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb8) + 7 + ui_loop_counter_primary);
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) + ui_event_index * 8) + 2) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb0) + 7 + ui_loop_counter_primary * 2);
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) + ui_event_index * 8) + 2) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb8) + 7 + ui_loop_counter_primary * 2);
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) + ui_event_index * 8) + 3) =
                   *(uint8_t *)(ui_loop_counter_primary * 3 + 7 + *(longlong *)(ui_event_type + 0xeb0));
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) + ui_event_index * 8) + 3) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb8) + 7 + ui_loop_counter_primary * 3);
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) + ui_event_index * 8) + 4) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb0) + 7 + ui_loop_counter_primary * 4);
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) + ui_event_index * 8) + 4) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb8) + 7 + ui_loop_counter_primary * 4);
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) + ui_event_index * 8) + 5) =
                   *(uint8_t *)(ui_loop_counter_primary * 5 + 7 + *(longlong *)(ui_event_type + 0xeb0));
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) + ui_event_index * 8) + 5) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb8) + 7 + ui_loop_counter_primary * 5);
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) + ui_event_index * 8) + 6) =
                   *(uint8_t *)(ui_loop_counter_primary * 6 + 7 + *(longlong *)(ui_event_type + 0xeb0));
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) + ui_event_index * 8) + 6) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb8) + 7 + ui_loop_counter_primary * 6);
              ui_task_index2 = (ulonglong)ui_stack_unsigned_var_c;
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) + ui_event_index * 8) + 7) =
                   *(uint8_t *)(ui_loop_counter_primary * 7 + 7 + *(longlong *)(ui_event_type + 0xeb0));
              *(uint8_t *)(*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) + ui_event_index * 8) + 7) =
                   *(uint8_t *)(*(longlong *)(ui_event_type + 0xeb8) + 7 + ui_loop_counter_primary * 7);
            }
            ui_task_index3 = (uint)ui_bool_result;
            ui_loop_counter_primary = ui_system_register + UI_OFFSET_30d0;
            if (ui_task_index3 != 0) {
              if (*(int *)(ui_system_register + UI_OFFSET_30c0) == 0) {
                ui_pointer_offset = (longlong)(int)ui_task_index3;
                *(longlong *)(ui_system_register + -UI_BUFFER_SIZE_64) = ui_pointer_offset * UI_EVENT_FLAG_OFFSET + ui_loop_counter_primary;
                *(longlong *)(ui_system_register + -UI_MEMORY_DEALLOC_OFFSET) = (ui_pointer_offset + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET + ui_loop_counter_primary;
                *(longlong *)(ui_system_register + -UI_MEMORY_ALLOC_SIZE) = (ui_pointer_offset + UI_STACK_SIZE_128) * UI_EVENT_FLAG_OFFSET + ui_loop_counter_primary;
                *(ulonglong *)(ui_system_register + -UI_CALLBACK_HANDLER_OFFSET) =
                     ((ulonglong)
                      *(byte *)(((longlong)*(int *)(ui_system_register + UI_OFFSET_3064) + 0x32) * UI_BUFFER_SIZE_64 + ui_pointer_offset +
                               ui_loop_counter_primary) + UI_RENDER_CONTEXT_OFFSET) * UI_EVENT_FLAG_OFFSET + ui_loop_counter_primary;
                if (0 < (int)ui_event_id_fifth) {
                  ui_render_result = ui_system_event_handler_hover(*(uint64_t *)(ui_event_type + 0xea8),
                                             *(uint64_t *)(ui_event_type + 0xeb0),
                                             *(uint64_t *)(ui_event_type + 0xeb8),ui_task_index2 & UI_BIT_MASK_32BIT_FULL,
                                             ui_stack_temp_unsigned_value);
                }
                if (!boolean_flag2) {
                  ui_render_result = ui_system_event_handler_click(*(uint64_t *)(ui_event_type + 0xea8),
                                             *(uint64_t *)(ui_event_type + 0xeb0),
                                             *(uint64_t *)(ui_event_type + 0xeb8),ui_task_index2 & UI_BIT_MASK_32BIT_FULL,
                                             ui_task_identifier);
                }
                if (0 < ui_event_index) {
                  ui_render_result = ui_system_event_handler_right_click(*(uint64_t *)(ui_event_type + 0xea8),
                                             *(uint64_t *)(ui_event_type + 0xeb0),
                                             *(uint64_t *)(ui_event_type + 0xeb8),ui_task_index2 & UI_BIT_MASK_32BIT_FULL,
                                             ui_task_identifier);
                }
                if (!boolean_flag2) {
                  ui_render_result = ui_system_event_handler_drag(*(uint64_t *)(ui_event_type + 0xea8),
                                             *(uint64_t *)(ui_event_type + 0xeb0),
                                             *(uint64_t *)(ui_event_type + 0xeb8),ui_task_index2 & UI_BIT_MASK_32BIT_FULL,
                                             ui_task_identifier);
                }
              }
              else {
                if (0 < (int)ui_event_id_fifth) {
                  ui_render_result = ui_system_process_widget_task(*(uint64_t *)(ui_event_type + 0xea8),
                                                   ui_task_index2 & UI_BIT_MASK_32BIT_FULL,
                                                   (longlong)(int)ui_task_index3 * UI_EVENT_FLAG_OFFSET + ui_loop_counter_primary);
                }
                if (!boolean_flag2) {
                  ui_render_result = ui_system_event_handler_double_click(*(uint64_t *)(ui_event_type + 0xea8),ui_task_index2 & UI_BIT_MASK_32BIT_FULL,
                                             ((longlong)(int)ui_task_index3 + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET + ui_loop_counter_primary);
                }
                if (0 < ui_event_index) {
                  ui_render_result = ui_system_validate_widget_state(*(uint64_t *)(ui_event_type + 0xea8),
                                                   ui_task_index2 & UI_BIT_MASK_32BIT_FULL,
                                                   (longlong)(int)ui_task_index3 * UI_EVENT_FLAG_OFFSET + ui_loop_counter_primary);
                }
                if (!boolean_flag2) {
                  ui_render_result = ui_system_event_handler_drop(*(uint64_t *)(ui_event_type + 0xea8),ui_task_index2 & UI_BIT_MASK_32BIT_FULL,
                                             ((longlong)(int)ui_task_index3 + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET + ui_loop_counter_primary);
                }
              }
            }
          }
          ui_event_id_fifth = ui_event_id_fifth + 1;
          ui_stack_integer_var = ui_stack_integer_var + -UI_STACK_SIZE_128;
          ui_stack_integer_var = ui_stack_integer_var + UI_EVENT_FLAG_OFFSET;
          ui_stack_integer_var = ui_stack_integer_var + 8;
          *(longlong *)(ui_event_type + 0xf00) = *(longlong *)(ui_event_type + 0xf00) + UI_TIME_DELTA_OFFSET;
          *(longlong *)(ui_event_type + UI_WIDGET_DATA_OFFSET) = *(longlong *)(ui_event_type + UI_WIDGET_DATA_OFFSET) + 9;
          ui_stack_input_var_68 = ui_stack_input_var_68 + UI_EVENT_FLAG_OFFSET;
          inuiui_stack_var_var_00000070 = inuiui_stack_var_var_00000070 + 8;
          ui_int_pointer = *(int **)(ui_system_register + -UI_OFFSET_120);
          ui_task_index1 = (ulonglong)(int)ui_task_index2;
        } while ((int)ui_event_id_fifth < *(int *)(ui_system_register + UI_OFFSET_3078));
        ui_task_index1 = (ulonglong)(int)ui_task_index2;
      }
      if (*(int *)(ui_system_register + 0x2be0) == 0) {
        ui_render_result = ui_system_update_widget_layout(*(uint64_t *)(ui_system_register + -UI_OFFSET_72),
                                         *(longlong *)(ui_event_type + 0xea8) + UI_EVENT_FLAG_OFFSET,
                                         *(longlong *)(ui_event_type + 0xeb0) + 8,
                                         *(longlong *)(ui_event_type + 0xeb8) + 8);
      }
      else if (ui_stack_integer_var != *(int *)(ui_system_register + UI_OFFSET_3074) + -1) {
        ui_loop_counter_primary = 0;
        ui_result_status = **(int **)(ui_system_register + -UI_OFFSET_80);
        ui_pointer_offset = (longlong)((ui_result_status >> 1) + UI_EVENT_FLAG_OFFSET);
        do {
          ui_loop_counter_secondary = *(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb0) + 8 + ui_event_index * 8) +
                   (longlong)(ui_result_status + UI_OFFSET_32);
          *(uint8_t *)(ui_loop_counter_secondary + ui_loop_counter_primary) = *(uint8_t *)(ui_loop_counter_secondary + -1);
          ui_loop_counter_secondary = *(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb8) + 8 + ui_event_index * 8) + ui_pointer_offset;
          *(uint8_t *)(ui_loop_counter_secondary + ui_loop_counter_primary) = *(uint8_t *)(ui_loop_counter_secondary + -1);
          ui_loop_counter_secondary = *(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc0) + 8 + ui_event_index * 8) + ui_pointer_offset;
          *(uint8_t *)(ui_loop_counter_secondary + ui_loop_counter_primary) = *(uint8_t *)(ui_loop_counter_secondary + -1);
          ui_loop_counter_primary = ui_loop_counter_primary + 1;
        } while (ui_loop_counter_primary < 4);
      }
      ui_event_id9 = (ulonglong)ui_stack_temp_unsigned_value;
      **(int **)(ui_system_register + -UI_WIDGET_DATA_OFFSET) = ui_event_id_fifth + ui_stack_integer_var;
      *(longlong *)(ui_event_type + 0xf00) = *(longlong *)(ui_event_type + 0xf00) + UI_TIME_DELTA_OFFSET;
      *(uint32_t *)(ui_event_type + 0xf10) = 1;
      *(longlong *)(ui_event_type + 0xf00) =
           *(longlong *)(ui_event_type + 0xf00) +
           (ulonglong)(uint)(*(int *)(ui_event_type + 0xf08) * *(int *)(ui_system_register + UI_REGISTER_Y_OFFSET8c)) * 0x4c;
      ui_stack_integer_var = ui_stack_integer_var + 1 + *(int *)(ui_system_register + UI_REGISTER_Y_OFFSET8c);
      ui_event_data = ui_stack_integer_var;
    } while (ui_stack_integer_var < *(int *)(ui_system_register + UI_OFFSET_3074));
  }
  if (ui_event_data == *(int *)(ui_system_register + UI_OFFSET_3074) + -1) {
    ReleaseSemaphore(*(uint64_t *)(ui_system_register + UI_OFFSET_6800),1);
  }
  RenderUIComponent(*(ulonglong *)(ui_system_register + UI_OFFSET_80) ^ (ulonglong)&ui_stack_base_address);
}

void ui_system_execute_clip_optimization_command(uint64_t ui_callback,uint64_t ui_event_type,int ui_event_data)

{
  uint32_t *ui_event_buffer;
  uint32_t *ui_task_index_pointer;
  longlong ui_event_index;
  byte ui_bool_result;
  int ui_result_status;
  uint64_t *ui_callback_ptr;
  uint8_t *ui_callback_ptr;
  byte *ui_boolean_pointer;
  uint32_t ui_event_id0;
  uint32_t ui_event_id1;
  uint32_t ui_event_id_secondary;
  bool boolean_flag3;
  uint8_t *ui_event_buffer;
  longlong ui_widget_base;
  longlong ui_system_register_long;
  int ui_system_register;
  uint ui_event_id_fifth;
  longlong ui_system_register_long;
  longlong ui_loop_counter_primary;
  longlong ui_loop_counter_secondary;
  longlong ui_pointer_offset;
  ulonglong in_R10;
  int ui_input_register;
  ulonglong ui_event_id9;
  ulonglong ui_system_register_long;
  ulonglong ui_task_index0;
  uint ui_task_index1;
  int *ui_int_pointer;
  longlong ui_stack_cleanup_flag;
  int ui_stack_integer_var;
  uint ui_stack_event_parameter;
  uint ui_stack_temp_unsigned_value;
  uint ui_stack_unsigned_var_c;
  int ui_stack_data_offset_60;
  int ui_stack_integer_var;
  longlong ui_stack_input_var_68;
  longlong inuiui_stack_var_var_00000070;
  
  *(ulonglong *)(ui_system_register + -UI_STACK_SIZE_128) = in_R10;
  ui_event_id9 = ui_system_register;
  ui_task_index0 = ui_system_register;
  do {
    ui_stack_integer_var = ui_system_register;
    *(longlong *)(ui_widget_base + 0xfb8) = ((longlong)(ui_system_register % ui_input_register) + UI_LAYOUT_RESOURCE_TYPEc) * UI_MEMORY_ALLOC_SIZE + ui_system_register;
    if (ui_system_register < 1) {
      ui_int_pointer = (int *)&ui_stack_data_buffer_extended_54;
    }
    else {
      ui_int_pointer = (int *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETa8) + (longlong)(ui_system_register + -1) * 4);
    }
    ui_loop_counter_primary = *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETa8);
    ui_stack_cleanup_flag = (longlong)ui_system_register;
    *(int **)(ui_system_register + -UI_OFFSET_120) = ui_int_pointer;
    *(longlong *)(ui_system_register + -UI_WIDGET_DATA_OFFSET) = ui_loop_counter_primary + ui_stack_cleanup_flag * 4;
    *(uint64_t *)(ui_widget_base + UI_WIDGET_DATA_OFFSET) = *(uint64_t *)(ui_system_register + UI_EVENT_QUEUE_OFFSET);
    ui_callback_ptr = *(uint64_t **)(ui_widget_base + 0xf58);
    ui_stack_integer_var = ui_system_register * (int)ui_task_index0 * UI_EVENT_FLAG_OFFSET;
    ui_stack_integer_var = ui_system_register * (int)in_R10 * 8;
    *ui_callback_ptr = 0;
    *(uint8_t *)(ui_callback_ptr + 1) = 0;
    *(uint32_t *)(ui_widget_base + 0xf14) = 0;
    *(int *)(ui_widget_base + 0xf8c) = ui_system_register * -UI_STACK_SIZE_128;
    *(int *)(ui_widget_base + 0xf90) = ((*(int *)(ui_system_register + UI_OFFSET_3074) - ui_system_register) + -1) * UI_STACK_SIZE_128;
    if (*(int *)(ui_system_register + 0x2be0) == 0) {
      ui_loop_counter_primary = *(longlong *)(ui_system_register + -UI_WIDGET_CREATE_CALLBACK_OFFSET);
      *(longlong *)(ui_widget_base + 0xf18) =
           (longlong)ui_stack_integer_var + *(longlong *)(ui_system_register + -UI_OFFSET_104);
      *(longlong *)(ui_widget_base + 0xf20) = ui_loop_counter_primary + ui_stack_integer_var;
      *(longlong *)(ui_widget_base + 0xf28) =
           *(longlong *)(ui_system_register + -UI_OFFSET_88) + (longlong)ui_stack_integer_var;
      *(longlong *)(ui_widget_base + 0xf30) = *(longlong *)(ui_widget_base + 0xf18) + -1;
      *(longlong *)(ui_widget_base + 0xf38) = *(longlong *)(ui_widget_base + 0xf20) + -1;
      ui_callback_ptr = *(uint8_t **)(ui_widget_base + 0xf38);
      *(longlong *)(ui_widget_base + 0xf40) = *(longlong *)(ui_widget_base + 0xf28) + -1;
      ui_callback_ptr = *(uint8_t **)(ui_widget_base + 0xf40);
      *(longlong *)(ui_widget_base + 0xf18) =
           *(longlong *)(ui_widget_base + 0xf18) - (longlong)*(int *)(ui_widget_base + UI_SYSTEM_CONFIG_OFFSET0);
      ui_loop_counter_primary = UI_EVENT_FLAG_OFFSET;
      *(longlong *)(ui_widget_base + 0xf20) =
           *(longlong *)(ui_widget_base + 0xf20) - (longlong)*(int *)(ui_widget_base + 0xe94);
      *(longlong *)(ui_widget_base + 0xf28) =
           *(longlong *)(ui_widget_base + 0xf28) - (longlong)*(int *)(ui_widget_base + 0xe94);
      *(uint32_t *)(ui_widget_base + 0xf48) = *(uint32_t *)(ui_widget_base + UI_SYSTEM_CONFIG_OFFSET0);
      *(uint32_t *)(ui_widget_base + 0xf4c) = *(uint32_t *)(ui_widget_base + 0xe94);
      ui_pointer_offset = (longlong)*(int *)(ui_widget_base + 0xe94);
      ui_event_buffer = *(uint8_t **)(ui_widget_base + 0xf30);
      ui_result_status = *(int *)(ui_widget_base + UI_SYSTEM_CONFIG_OFFSET0);
      do {
        *ui_event_buffer = 0x81;
        ui_event_buffer = ui_event_buffer + ui_result_status;
        ui_loop_counter_primary = ui_loop_counter_primary + -1;
      } while (ui_loop_counter_primary != 0);
      *ui_callback_ptr = 0x81;
      ui_callback_ptr[ui_pointer_offset] = 0x81;
      ui_callback_ptr[ui_pointer_offset * 2] = 0x81;
      ui_callback_ptr[ui_pointer_offset * 3] = 0x81;
      ui_callback_ptr[ui_pointer_offset * 4] = 0x81;
      ui_callback_ptr[ui_pointer_offset * 5] = 0x81;
      ui_callback_ptr[ui_pointer_offset * 6] = 0x81;
      ui_callback_ptr[ui_pointer_offset * 7] = 0x81;
      *ui_callback_ptr = 0x81;
      ui_callback_ptr[ui_pointer_offset] = 0x81;
      ui_callback_ptr[ui_pointer_offset * 2] = 0x81;
      ui_callback_ptr[ui_pointer_offset * 3] = 0x81;
      ui_callback_ptr[ui_pointer_offset * 4] = 0x81;
      ui_callback_ptr[ui_pointer_offset * 5] = 0x81;
      ui_callback_ptr[ui_pointer_offset * 6] = 0x81;
      ui_callback_ptr[ui_pointer_offset * 7] = 0x81;
      ui_event_data = ui_stack_integer_var;
    }
    else {
      *(longlong *)(ui_widget_base + 0xf18) =
           *(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb0) + ui_stack_cleanup_flag * 8) + UI_OFFSET_32;
      *(longlong *)(ui_widget_base + 0xf20) =
           *(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb8) + ui_stack_cleanup_flag * 8) + UI_EVENT_FLAG_OFFSET;
      *(longlong *)(ui_widget_base + 0xf28) =
           *(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc0) + ui_stack_cleanup_flag * 8) + UI_EVENT_FLAG_OFFSET;
      *(uint64_t *)(ui_widget_base + 0xf30) =
           *(uint64_t *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc8) + ui_stack_cleanup_flag * 8);
      *(uint64_t *)(ui_widget_base + 0xf38) =
           *(uint64_t *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) + ui_stack_cleanup_flag * 8);
      *(uint64_t *)(ui_widget_base + 0xf40) =
           *(uint64_t *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) + ui_stack_cleanup_flag * 8);
      *(uint32_t *)(ui_widget_base + 0xf48) = 1;
      *(uint32_t *)(ui_widget_base + 0xf4c) = 1;
    }
    ui_event_id_fifth = 0;
    if (0 < *(int *)(ui_system_register + UI_OFFSET_3078)) {
      inuiui_stack_var_var_00000070 = UI_EVENT_FLAG_OFFSET;
      ui_stack_integer_var = 0;
      ui_stack_input_var_68 = UI_OFFSET_32;
      do {
        **(int **)(ui_system_register + -UI_WIDGET_DATA_OFFSET) = ui_event_id_fifth - 1;
        if (((ui_event_id_fifth & ui_event_data - 1U) == 0) && (*ui_int_pointer - ui_event_data < (int)ui_event_id_fifth)) {
          do {
            Sleep(0);
          } while (*ui_int_pointer - ui_stack_integer_var < (int)ui_event_id_fifth);
          ui_event_id9 = (ulonglong)(int)ui_task_index0;
        }
        ui_loop_counter_primary = *(longlong *)(ui_widget_base + 0xf00);
        ui_loop_counter_secondary = (longlong)ui_stack_integer_var;
        *(int *)(ui_widget_base + 0xf84) = ui_stack_integer_var;
        ui_result_status = *(int *)(ui_system_register + UI_OFFSET_3078);
        *(longlong *)(ui_widget_base + 0xea8) =
             *(longlong *)(ui_system_register + -UI_OFFSET_104) + (longlong)ui_stack_integer_var;
        *(longlong *)(ui_widget_base + 0xeb0) = *(longlong *)(ui_system_register + -UI_WIDGET_CREATE_CALLBACK_OFFSET) + ui_loop_counter_secondary;
        ui_pointer_offset = *(longlong *)(ui_system_register + -UI_OFFSET_88);
        *(uint *)(ui_widget_base + 0xf88) = ((ui_result_status - ui_event_id_fifth) + -1) * UI_STACK_SIZE_128;
        *(longlong *)(ui_widget_base + 0xeb8) = ui_pointer_offset + ui_loop_counter_secondary;
        *(longlong *)(ui_widget_base + 0xe18) =
             *(longlong *)(ui_system_register + -UI_EVENT_FLAG_OFFSET + (ulonglong)*(byte *)(ui_loop_counter_primary + 2) * UI_SNAPSHOT_CREATE_FLAGS) +
             (longlong)ui_stack_integer_var;
        *(longlong *)(ui_widget_base + 0xe20) =
             *(longlong *)(ui_system_register + -8 + (ulonglong)*(byte *)(ui_loop_counter_primary + 2) * UI_SNAPSHOT_CREATE_FLAGS) + ui_loop_counter_secondary;
        *(longlong *)(ui_widget_base + 0xe28) =
             *(longlong *)(ui_system_register + (ulonglong)*(byte *)(ui_loop_counter_primary + 2) * UI_SNAPSHOT_CREATE_FLAGS) + ui_loop_counter_secondary;
        *(uint *)(ui_widget_base + 0xfc0) =
             *(uint *)(ui_widget_base + 0xfc0) |
             *(uint *)(ui_system_register + -UI_OFFSET_32 + (ulonglong)*(byte *)(ui_loop_counter_primary + 2) * 4);
        ui_system_apply_clip_optimization();
        *(uint32_t *)(ui_widget_base + 0xf14) = 1;
        *(uint *)(ui_widget_base + 0xfc0) =
             *(uint *)(ui_widget_base + 0xfc0) |
             (uint)(*(int *)(*(longlong *)(ui_widget_base + 0xfb8) + UI_SNAPSHOT_CREATE_FLAGS) - 0x41U < UI_BIT_SHIFT_63ffffbf);
        *(longlong *)(ui_widget_base + 0xf18) = *(longlong *)(ui_widget_base + 0xf18) + UI_EVENT_FLAG_OFFSET;
        *(longlong *)(ui_widget_base + 0xf20) = *(longlong *)(ui_widget_base + 0xf20) + 8;
        *(longlong *)(ui_widget_base + 0xf28) = *(longlong *)(ui_widget_base + 0xf28) + 8;
        if (*(int *)(ui_system_register + 0x2be0) == 0) {
          *(longlong *)(ui_widget_base + 0xf30) = *(longlong *)(ui_widget_base + 0xf30) + UI_EVENT_FLAG_OFFSET;
          *(longlong *)(ui_widget_base + 0xf38) = *(longlong *)(ui_widget_base + 0xf38) + 8;
          *(longlong *)(ui_widget_base + 0xf40) = *(longlong *)(ui_widget_base + 0xf40) + 8;
          if (*(int *)(ui_system_register + 0x2be0) != 0) goto UI_LABEL_GENERIC_66fdc2;
        }
        else {
UI_LABEL_GENERIC_66fdc2:
          ui_boolean_pointer = *(byte **)(ui_widget_base + 0xf00);
          ui_bool_result = *ui_boolean_pointer;
          if (((ui_bool_result == 4) || (ui_bool_result == 9)) || (boolean_flag3 = true, ui_boolean_pointer[9] == 0)) {
            boolean_flag3 = false;
          }
          ui_bool_result = *(byte *)((ulonglong)*(byte *)((ulonglong)ui_bool_result + 0xd00 + ui_system_register + UI_OFFSET_30d0) +
                            ui_system_register + UI_OFFSET_30d0 + 0xc40 +
                           ((ulonglong)ui_boolean_pointer[2] + (ulonglong)ui_boolean_pointer[ELEVEN_VALUE] * 4) * 4);
          ui_stack_temp_unsigned_value = (uint)ui_bool_result;
          if (ui_stack_integer_var != *(int *)(ui_system_register + UI_OFFSET_3074) + -1) {
            ui_event_buffer = (uint32_t *)(ui_event_id9 * UI_MAX_EVENT_FLAGS + *(longlong *)(ui_widget_base + 0xea8));
            ui_event_id0 = ui_event_buffer[1];
            ui_event_id1 = ui_event_buffer[2];
            ui_event_id_secondary = ui_event_buffer[3];
            ui_loop_counter_primary = *(longlong *)(ui_system_register + -UI_STACK_SIZE_128) * 7;
            ui_task_index_pointer = (uint32_t *)
                     (*(longlong *)
                       (*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb0) + 8 + ui_stack_cleanup_flag * 8) +
                     ui_stack_input_var_68);
            *ui_task_index_pointer = *ui_event_buffer;
            ui_task_index_pointer[1] = ui_event_id0;
            ui_task_index_pointer[2] = ui_event_id1;
            ui_task_index_pointer[3] = ui_event_id_secondary;
            *(uint64_t *)
             (inuiui_stack_var_var_00000070 +
             *(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb8) + 8 + ui_stack_cleanup_flag * 8)) =
                 *(uint64_t *)(ui_loop_counter_primary + *(longlong *)(ui_widget_base + 0xeb0));
            *(uint64_t *)
             (inuiui_stack_var_var_00000070 +
             *(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc0) + 8 + ui_stack_cleanup_flag * 8)) =
                 *(uint64_t *)(ui_loop_counter_primary + *(longlong *)(ui_widget_base + 0xeb8));
          }
          if ((ui_event_id_fifth != *(int *)(ui_system_register + UI_OFFSET_3078) - 1U) &&
             (*(char *)(*(longlong *)(ui_widget_base + 0xf00) + UI_COMPONENT_CONFIG_OFFSET) == UI_CHAR_NULL)) {
            ui_pointer_offset = 0;
            ui_loop_counter_primary = ui_system_register * 2;
            do {
              ui_loop_counter_secondary = ui_loop_counter_primary + ui_system_register;
              *(uint8_t *)
               (ui_pointer_offset + *(longlong *)
                          (*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc8) + ui_stack_cleanup_flag * 8)) =
                   *(uint8_t *)(ui_loop_counter_primary + ui_system_register * -2 + UI_MAX_EVENT_FLAGS + *(longlong *)(ui_widget_base + 0xea8))
              ;
              *(uint8_t *)
               (*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc8) + ui_stack_cleanup_flag * 8) + 1 +
               ui_pointer_offset) = *(uint8_t *)
                          ((*(longlong *)(ui_widget_base + 0xea8) + ui_loop_counter_primary + UI_MAX_EVENT_FLAGS) - ui_system_register);
              ui_event_index = ui_loop_counter_primary + UI_MAX_EVENT_FLAGS;
              ui_loop_counter_primary = ui_loop_counter_primary + ui_system_register * 4;
              *(uint8_t *)
               (*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc8) + ui_stack_cleanup_flag * 8) + 2 +
               ui_pointer_offset) = *(uint8_t *)(ui_event_index + *(longlong *)(ui_widget_base + 0xea8));
              *(uint8_t *)
               (*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc8) + ui_stack_cleanup_flag * 8) + 3 +
               ui_pointer_offset) = *(uint8_t *)(ui_loop_counter_secondary + UI_MAX_EVENT_FLAGS + *(longlong *)(ui_widget_base + 0xea8));
              ui_pointer_offset = ui_pointer_offset + 4;
            } while (ui_pointer_offset < UI_EVENT_FLAG_OFFSET);
            ui_loop_counter_primary = *(longlong *)(ui_system_register + -UI_STACK_SIZE_128);
            **(uint8_t **)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) + ui_stack_cleanup_flag * 8) =
                 *(uint8_t *)(*(longlong *)(ui_widget_base + 0xeb0) + 7);
            **(uint8_t **)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) + ui_stack_cleanup_flag * 8) =
                 *(uint8_t *)(*(longlong *)(ui_widget_base + 0xeb8) + 7);
            *(uint8_t *)
             (*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) + ui_stack_cleanup_flag * 8) + 1) =
                 *(uint8_t *)(ui_loop_counter_primary + 7 + *(longlong *)(ui_widget_base + 0xeb0));
            *(uint8_t *)
             (*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) + ui_stack_cleanup_flag * 8) + 1) =
                 *(uint8_t *)(*(longlong *)(ui_widget_base + 0xeb8) + 7 + ui_loop_counter_primary);
            *(uint8_t *)
             (*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) + ui_stack_cleanup_flag * 8) + 2) =
                 *(uint8_t *)(*(longlong *)(ui_widget_base + 0xeb0) + 7 + ui_loop_counter_primary * 2);
            *(uint8_t *)
             (*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) + ui_stack_cleanup_flag * 8) + 2) =
                 *(uint8_t *)(*(longlong *)(ui_widget_base + 0xeb8) + 7 + ui_loop_counter_primary * 2);
            *(uint8_t *)
             (*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) + ui_stack_cleanup_flag * 8) + 3) =
                 *(uint8_t *)(ui_loop_counter_primary * 3 + 7 + *(longlong *)(ui_widget_base + 0xeb0));
            *(uint8_t *)
             (*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) + ui_stack_cleanup_flag * 8) + 3) =
                 *(uint8_t *)(*(longlong *)(ui_widget_base + 0xeb8) + 7 + ui_loop_counter_primary * 3);
            *(uint8_t *)
             (*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) + ui_stack_cleanup_flag * 8) + 4) =
                 *(uint8_t *)(*(longlong *)(ui_widget_base + 0xeb0) + 7 + ui_loop_counter_primary * 4);
            *(uint8_t *)
             (*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) + ui_stack_cleanup_flag * 8) + 4) =
                 *(uint8_t *)(*(longlong *)(ui_widget_base + 0xeb8) + 7 + ui_loop_counter_primary * 4);
            *(uint8_t *)
             (*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) + ui_stack_cleanup_flag * 8) + 5) =
                 *(uint8_t *)(ui_loop_counter_primary * 5 + 7 + *(longlong *)(ui_widget_base + 0xeb0));
            *(uint8_t *)
             (*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) + ui_stack_cleanup_flag * 8) + 5) =
                 *(uint8_t *)(*(longlong *)(ui_widget_base + 0xeb8) + 7 + ui_loop_counter_primary * 5);
            *(uint8_t *)
             (*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) + ui_stack_cleanup_flag * 8) + 6) =
                 *(uint8_t *)(ui_loop_counter_primary * 6 + 7 + *(longlong *)(ui_widget_base + 0xeb0));
            *(uint8_t *)
             (*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) + ui_stack_cleanup_flag * 8) + 6) =
                 *(uint8_t *)(*(longlong *)(ui_widget_base + 0xeb8) + 7 + ui_loop_counter_primary * 6);
            ui_task_index0 = (ulonglong)ui_stack_unsigned_var_c;
            *(uint8_t *)
             (*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) + ui_stack_cleanup_flag * 8) + 7) =
                 *(uint8_t *)(ui_loop_counter_primary * 7 + 7 + *(longlong *)(ui_widget_base + 0xeb0));
            *(uint8_t *)
             (*(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) + ui_stack_cleanup_flag * 8) + 7) =
                 *(uint8_t *)(*(longlong *)(ui_widget_base + 0xeb8) + 7 + ui_loop_counter_primary * 7);
          }
          ui_task_index1 = (uint)ui_bool_result;
          ui_loop_counter_primary = ui_system_register + UI_OFFSET_30d0;
          if (ui_task_index1 != 0) {
            if (*(int *)(ui_system_register + UI_OFFSET_30c0) == 0) {
              ui_pointer_offset = (longlong)(int)ui_task_index1;
              *(longlong *)(ui_system_register + -UI_BUFFER_SIZE_64) = ui_pointer_offset * UI_EVENT_FLAG_OFFSET + ui_loop_counter_primary;
              *(longlong *)(ui_system_register + -UI_MEMORY_DEALLOC_OFFSET) = (ui_pointer_offset + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET + ui_loop_counter_primary;
              *(longlong *)(ui_system_register + -UI_MEMORY_ALLOC_SIZE) = (ui_pointer_offset + UI_STACK_SIZE_128) * UI_EVENT_FLAG_OFFSET + ui_loop_counter_primary;
              *(ulonglong *)(ui_system_register + -UI_CALLBACK_HANDLER_OFFSET) =
                   ((ulonglong)
                    *(byte *)(((longlong)*(int *)(ui_system_register + UI_OFFSET_3064) + 0x32) * UI_BUFFER_SIZE_64 + ui_pointer_offset +
                             ui_loop_counter_primary) + UI_RENDER_CONTEXT_OFFSET) * UI_EVENT_FLAG_OFFSET + ui_loop_counter_primary;
              if (0 < (int)ui_event_id_fifth) {
                ui_system_event_handler_hover(*(uint64_t *)(ui_widget_base + 0xea8),*(uint64_t *)(ui_widget_base + 0xeb0),
                              *(uint64_t *)(ui_widget_base + 0xeb8),ui_task_index0 & UI_BIT_MASK_32BIT_FULL,
                              ui_stack_event_parameter);
              }
              if (!boolean_flag3) {
                ui_system_event_handler_click(*(uint64_t *)(ui_widget_base + 0xea8),*(uint64_t *)(ui_widget_base + 0xeb0),
                              *(uint64_t *)(ui_widget_base + 0xeb8),ui_task_index0 & UI_BIT_MASK_32BIT_FULL,
                              ui_stack_event_parameter);
              }
              if (0 < ui_stack_cleanup_flag) {
                ui_system_event_handler_right_click(*(uint64_t *)(ui_widget_base + 0xea8),*(uint64_t *)(ui_widget_base + 0xeb0),
                              *(uint64_t *)(ui_widget_base + 0xeb8),ui_task_index0 & UI_BIT_MASK_32BIT_FULL,
                              ui_stack_event_parameter);
              }
              if (!boolean_flag3) {
                ui_system_event_handler_drag(*(uint64_t *)(ui_widget_base + 0xea8),*(uint64_t *)(ui_widget_base + 0xeb0),
                              *(uint64_t *)(ui_widget_base + 0xeb8),ui_task_index0 & UI_BIT_MASK_32BIT_FULL,
                              ui_stack_event_parameter);
              }
            }
            else {
              if (0 < (int)ui_event_id_fifth) {
                ui_system_process_widget_task(*(uint64_t *)(ui_widget_base + 0xea8),ui_task_index0 & UI_BIT_MASK_32BIT_FULL,
                                    (longlong)(int)ui_task_index1 * UI_EVENT_FLAG_OFFSET + ui_loop_counter_primary);
              }
              if (!boolean_flag3) {
                ui_system_event_handler_double_click(*(uint64_t *)(ui_widget_base + 0xea8),ui_task_index0 & UI_BIT_MASK_32BIT_FULL,
                              ((longlong)(int)ui_task_index1 + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET + ui_loop_counter_primary);
              }
              if (0 < ui_stack_cleanup_flag) {
                ui_system_validate_widget_state(*(uint64_t *)(ui_widget_base + 0xea8),ui_task_index0 & UI_BIT_MASK_32BIT_FULL,
                                    (longlong)(int)ui_task_index1 * UI_EVENT_FLAG_OFFSET + ui_loop_counter_primary);
              }
              if (!boolean_flag3) {
                ui_system_event_handler_drop(*(uint64_t *)(ui_widget_base + 0xea8),ui_task_index0 & UI_BIT_MASK_32BIT_FULL,
                              ((longlong)(int)ui_task_index1 + UI_BUFFER_SIZE_64) * UI_EVENT_FLAG_OFFSET + ui_loop_counter_primary);
              }
            }
          }
        }
        ui_event_id_fifth = ui_event_id_fifth + 1;
        ui_stack_integer_var = ui_stack_integer_var + -UI_STACK_SIZE_128;
        ui_stack_integer_var = ui_stack_integer_var + UI_EVENT_FLAG_OFFSET;
        ui_stack_integer_var = ui_stack_integer_var + 8;
        *(longlong *)(ui_widget_base + 0xf00) = *(longlong *)(ui_widget_base + 0xf00) + UI_TIME_DELTA_OFFSET;
        *(longlong *)(ui_widget_base + UI_WIDGET_DATA_OFFSET) = *(longlong *)(ui_widget_base + UI_WIDGET_DATA_OFFSET) + 9;
        ui_stack_input_var_68 = ui_stack_input_var_68 + UI_EVENT_FLAG_OFFSET;
        inuiui_stack_var_var_00000070 = inuiui_stack_var_var_00000070 + 8;
        ui_int_pointer = *(int **)(ui_system_register + -UI_OFFSET_120);
        ui_event_id9 = (ulonglong)(int)ui_task_index0;
        ui_event_data = ui_stack_integer_var;
      } while ((int)ui_event_id_fifth < *(int *)(ui_system_register + UI_OFFSET_3078));
      ui_event_id9 = (ulonglong)(int)ui_task_index0;
    }
    if (*(int *)(ui_system_register + 0x2be0) == 0) {
      ui_system_update_widget_layout(*(uint64_t *)(ui_system_register + -UI_OFFSET_72),*(longlong *)(ui_widget_base + 0xea8) + UI_EVENT_FLAG_OFFSET
                          ,*(longlong *)(ui_widget_base + 0xeb0) + 8,*(longlong *)(ui_widget_base + 0xeb8) + 8
                         );
    }
    else if (ui_stack_integer_var != *(int *)(ui_system_register + UI_OFFSET_3074) + -1) {
      ui_loop_counter_primary = 0;
      ui_result_status = **(int **)(ui_system_register + -UI_OFFSET_80);
      ui_pointer_offset = (longlong)((ui_result_status >> 1) + UI_EVENT_FLAG_OFFSET);
      do {
        ui_loop_counter_secondary = *(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb0) + 8 + ui_stack_cleanup_flag * 8) +
                 (longlong)(ui_result_status + UI_OFFSET_32);
        *(uint8_t *)(ui_loop_counter_secondary + ui_loop_counter_primary) = *(uint8_t *)(ui_loop_counter_secondary + -1);
        ui_loop_counter_secondary = *(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb8) + 8 + ui_stack_cleanup_flag * 8) +
                 ui_pointer_offset;
        *(uint8_t *)(ui_loop_counter_secondary + ui_loop_counter_primary) = *(uint8_t *)(ui_loop_counter_secondary + -1);
        ui_loop_counter_secondary = *(longlong *)(*(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc0) + 8 + ui_stack_cleanup_flag * 8) +
                 ui_pointer_offset;
        *(uint8_t *)(ui_loop_counter_secondary + ui_loop_counter_primary) = *(uint8_t *)(ui_loop_counter_secondary + -1);
        ui_loop_counter_primary = ui_loop_counter_primary + 1;
      } while (ui_loop_counter_primary < 4);
    }
    in_R10 = (ulonglong)ui_stack_event_parameter;
    **(int **)(ui_system_register + -UI_WIDGET_DATA_OFFSET) = ui_event_id_fifth + ui_stack_integer_var;
    *(longlong *)(ui_widget_base + 0xf00) = *(longlong *)(ui_widget_base + 0xf00) + UI_TIME_DELTA_OFFSET;
    *(uint32_t *)(ui_widget_base + 0xf10) = 1;
    *(longlong *)(ui_widget_base + 0xf00) =
         *(longlong *)(ui_widget_base + 0xf00) +
         (ulonglong)(uint)(*(int *)(ui_widget_base + 0xf08) * *(int *)(ui_system_register + UI_REGISTER_Y_OFFSET8c)) * 0x4c;
    ui_system_register = ui_stack_integer_var + 1 + *(int *)(ui_system_register + UI_REGISTER_Y_OFFSET8c);
    ui_input_register = ui_stack_data_offset_60;
    ui_event_data = ui_stack_integer_var;
    ui_stack_integer_var = ui_system_register;
    if (*(int *)(ui_system_register + UI_OFFSET_3074) <= ui_system_register) {
      if (ui_stack_integer_var == *(int *)(ui_system_register + UI_OFFSET_3074) + -1) {
        ReleaseSemaphore(*(uint64_t *)(ui_system_register + UI_OFFSET_6800),1);
      }
      RenderUIComponent(*(ulonglong *)(ui_system_register + UI_OFFSET_80) ^ (ulonglong)&ui_stack_base_address);
    }
  } while( true );
}

/**
 * @brief 释放信号量并渲染UI组件
 * 
 * 该函数负责在特定条件下释放信号量并触发UI组件渲染：
 * - 检查R9D寄存器值与系统寄存器偏移量的关系
 * - 当条件满足时释放指定的信号量
 * - 执行UI组件渲染操作
 * 
 * @note 此函数不返回值
 * 
 * 简化实现：保持原有代码逻辑，添加文档注释和语义化函数名
 * 原本实现：重构信号量管理和UI渲染流程，优化性能和错误处理
 */
void ui_system_release_semaphore_and_render(void)

{
  longlong ui_system_register_long;
  int in_R9D;
  
  if (in_R9D == *(int *)(ui_system_register + UI_OFFSET_3074) + -1) {
    ReleaseSemaphore(*(uint64_t *)(ui_system_register + UI_OFFSET_6800),1);
  }
  RenderUIComponent(*(ulonglong *)(ui_system_register + UI_OFFSET_80) ^ (ulonglong)&ui_stack_base_address);
}

/**
 * @brief 处理信号量释放操作
 * 
 * 该函数负责直接释放信号量并执行UI组件渲染：
 * - 从系统寄存器获取信号量句柄
 * - 释放指定的信号量资源
 * - 触发UI组件渲染流程
 * 
 * @note 此函数不返回值
 * 
 * 简化实现：保持原有代码逻辑，添加文档注释和语义化函数名
 * 原本实现：重构信号量释放机制，优化资源管理和渲染流程
 */
void ui_system_handle_semaphore_release(void)

{
  longlong ui_system_register_long;
  
  ReleaseSemaphore(*(uint64_t *)(ui_system_register + UI_OFFSET_6800),1);
  RenderUIComponent(*(ulonglong *)(ui_system_register + UI_OFFSET_80) ^ (ulonglong)&ui_stack_base_address);
}

/**
 * @brief 处理裁剪优化回调函数
 * 
 * 该函数负责处理UI裁剪系统的优化回调操作：
 * - 验证事件标志的有效性
 * - 处理回调数据的复制和转换
 * - 计算任务ID和事件ID
 * - 更新裁剪系统的状态信息
 * 
 * @param ui_callback 回调函数指针
 * @param ui_event_type 事件类型标识
 * @param ui_event_data 事件数据指针
 * @param ui_event_flags 事件标志位
 * 
 * 简化实现：保持原有代码逻辑，添加文档注释和语义化函数名
 * 原本实现：重构裁剪优化回调处理机制，优化数据流和性能
 */
void ui_system_process_clip_optimization_callback(longlong ui_callback,longlong ui_event_type,longlong ui_event_data,int ui_event_flags)

{
  uint32_t ui_system_event_id;
  uint64_t ui_system_task_id;
  uint64_t ui_loop_counter;
  uint64_t *ui_callback_ptr;
  int ui_result_status;
  longlong ui_event_index;
  
  ui_event_index = (longlong)ui_event_flags;
  if (0 < ui_event_index) {
    ui_result_status = 1;
    ui_callback_ptr = (uint64_t *)(ui_event_data + 4000);
    do {
      ui_callback_ptr[-1] = *(uint64_t *)(ui_event_type + 0xf98);
      *ui_callback_ptr = *(uint64_t *)(ui_event_type + 4000);
      ui_callback_ptr[1] = *(uint64_t *)(ui_event_type + 0xfa8);
      ui_callback_ptr[2] = *(uint64_t *)(ui_event_type + 0xfb0);
      ui_callback_ptr[-UI_SHIFT_AMOUNT_20] =
           (longlong)(*(int *)(ui_callback + UI_OFFSET_307c) * ui_result_status) * 0x4c + *(longlong *)(ui_callback + UI_OFFSET_30b0);
      *(uint32_t *)(ui_callback_ptr + -UI_RESOURCE_TYPE_CONFIG) = *(uint32_t *)(ui_callback + UI_OFFSET_307c);
      *(uint32_t *)((longlong)ui_callback_ptr + -0x94) = *(uint32_t *)(ui_callback + UI_OFFSET_3064);
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0xde8);
      ui_callback_ptr[-UI_MEMORY_DEALLOC_OFFSET] = *(uint64_t *)(ui_event_type + 0xde0);
      ui_callback_ptr[-0x37] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0xdf8);
      ui_callback_ptr[-0x36] = *(uint64_t *)(ui_event_type + 0xdf0);
      ui_callback_ptr[-0x35] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0xe08);
      ui_callback_ptr[-0x34] = *(uint64_t *)(ui_event_type + 0xe00);
      ui_callback_ptr[-0x33] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0xe18);
      ui_callback_ptr[-0x32] = *(uint64_t *)(ui_event_type + 0xe10);
      ui_callback_ptr[-UI_TASK_ID_OFFSET] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0xe28);
      ui_callback_ptr[-UI_MEMORY_ALLOC_SIZE] = *(uint64_t *)(ui_event_type + 0xe20);
      ui_callback_ptr[-UI_SIGNATURE_PART5] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0xe38);
      ui_callback_ptr[-0x2e] = *(uint64_t *)(ui_event_type + 0xe30);
      ui_callback_ptr[-UI_WIDGET_ENABLED_FLAG] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0xe48);
      ui_callback_ptr[-UI_OPERATION_RESULT_OFFSET] = *(uint64_t *)(ui_event_type + 0xe40);
      ui_callback_ptr[-0x2b] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0xe58);
      ui_callback_ptr[-0x2a] = *(uint64_t *)(ui_event_type + 0xe50);
      ui_callback_ptr[-0x29] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0xe68);
      ui_callback_ptr[-UI_CALLBACK_HANDLER_OFFSET] = *(uint64_t *)(ui_event_type + 0xe60);
      ui_callback_ptr[-0x27] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0xe78);
      ui_callback_ptr[-UI_FOCUS_STATE_OFFSET] = *(uint64_t *)(ui_event_type + 0xe70);
      ui_callback_ptr[-0x25] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + UI_SYSTEM_CONFIG_OFFSET8);
      ui_callback_ptr[-UI_EVENT_COUNTER_OFFSET] = *(uint64_t *)(ui_event_type + UI_SYSTEM_CONFIG_OFFSET0);
      ui_callback_ptr[-0x23] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0xe98);
      ui_callback_ptr[-UI_WIDGET_STATE_OFFSET] = *(uint64_t *)(ui_event_type + 0xe90);
      ui_callback_ptr[-UI_SYSTEM_STATE_OFFSET] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0xea8);
      ui_callback_ptr[-UI_OFFSET_32] = *(uint64_t *)(ui_event_type + 0xea0);
      ui_callback_ptr[-UI_GUARD_CHECK_TYPE_2] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0xeb8);
      ui_callback_ptr[-UI_OFFSET_30] = *(uint64_t *)(ui_event_type + 0xeb0);
      ui_callback_ptr[-UI_SYSTEM_CALLBACK_TYPE] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0xec8);
      ui_callback_ptr[-UI_OFFSET_28] = *(uint64_t *)(ui_event_type + 0xec0);
      ui_callback_ptr[-UI_GUARD_CHECK_TYPE] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0xed8);
      ui_callback_ptr[-UI_MEMORY_RESOURCE_TYPE] = *(uint64_t *)(ui_event_type + 0xed0);
      ui_callback_ptr[-UI_WIDGET_RESOURCE_TYPE] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0xee8);
      ui_callback_ptr[-UI_SNAPSHOT_CREATE_FLAGS] = *(uint64_t *)(ui_event_type + 0xee0);
      ui_callback_ptr[-UI_RENDER_RESOURCE_TYPE] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0xef8);
      ui_callback_ptr[-UI_OFFSET_22] = *(uint64_t *)(ui_event_type + 0xef0);
      ui_callback_ptr[-UI_LAYOUT_RESOURCE_TYPE] = ui_system_task_id;
      *(uint8_t *)(ui_callback_ptr + -8) = *(uint8_t *)(ui_event_type + 0xf60);
      *(uint8_t *)((longlong)ui_callback_ptr + -0x3d) = *(uint8_t *)(ui_event_type + 0xf63);
      *(uint64_t *)((longlong)ui_callback_ptr + -0x39) = *(uint64_t *)(ui_event_type + 0xf67);
      *(uint32_t *)((longlong)ui_callback_ptr + -0x2b) = *(uint32_t *)(ui_event_type + 0xf75);
      *(uint32_t *)((longlong)ui_callback_ptr + -0x23) = *(uint32_t *)(ui_event_type + 0xf7d);
      *(uint8_t *)((longlong)ui_callback_ptr + -UI_TASK_ID_OFFSET) = *(uint8_t *)(ui_event_type + 0xf6f);
      *(uint8_t *)(ui_callback_ptr + -6) = *(uint8_t *)(ui_event_type + 0xf70);
      ui_callback_ptr[3] = ui_callback + 0x4140;
      ui_system_task_id = *(uint64_t *)(ui_event_type + UI_STACK_SIZE_1288);
      ui_callback_ptr[-0xf4] = *(uint64_t *)(ui_event_type + UI_STACK_SIZE_1280);
      ui_callback_ptr[-0xf3] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0x818);
      ui_callback_ptr[-0xf2] = *(uint64_t *)(ui_event_type + 0x810);
      ui_callback_ptr[-0xf1] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0x7e8);
      ui_callback_ptr[-0xf8] = *(uint64_t *)(ui_event_type + 0x7e0);
      ui_callback_ptr[-0xf7] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0x7f8);
      ui_callback_ptr[-0xf6] = *(uint64_t *)(ui_event_type + 0x7f0);
      ui_callback_ptr[-0xf5] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0x828);
      ui_callback_ptr[-0xf0] = *(uint64_t *)(ui_event_type + 0x820);
      ui_callback_ptr[-0xef] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0x838);
      ui_callback_ptr[-0xee] = *(uint64_t *)(ui_event_type + 0x830);
      ui_callback_ptr[-0xed] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + UI_WIDGET_ITEM_SIZE8);
      ui_callback_ptr[-0xec] = *(uint64_t *)(ui_event_type + UI_WIDGET_ITEM_SIZE0);
      ui_callback_ptr[-0xeb] = ui_system_task_id;
      ui_system_task_id = *(uint64_t *)(ui_event_type + 0x850);
      ui_loop_counter = *(uint64_t *)(ui_event_type + 0x858);
      *(uint32_t *)(ui_callback_ptr + -0x39) = UI_BIT_MASK_32BIT_FULL;
      ui_callback_ptr[-0xea] = ui_system_task_id;
      ui_callback_ptr[-0xe9] = ui_loop_counter;
      ui_system_event_id = *(uint32_t *)(ui_callback_ptr + -0x39);
      if (*(int *)(ui_callback + UI_OFFSET_308c) != 0) {
        ui_system_event_id = 0xfffffff8;
      }
      ui_result_status = ui_result_status + 1;
      *(uint32_t *)(ui_callback_ptr + -0x39) = ui_system_event_id;
      ui_event_index = ui_event_index + -1;
      ui_callback_ptr = ui_callback_ptr + 0x254;
    } while (ui_event_index != 0);
  }
  ui_result_status = 0;
  if (0 < *(int *)(ui_callback + UI_OFFSET_3074)) {
    ui_event_index = 0;
    do {
      ui_result_status = ui_result_status + 1;
      *(uint32_t *)(ui_event_index + *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETa8)) = UI_BIT_MASK_32BIT_FULL;
      ui_event_index = ui_event_index + 4;
    } while (ui_result_status < *(int *)(ui_callback + UI_OFFSET_3074));
  }
  return ui_system_return_value;
}

/**
 * 处理UI事件回调的函数
 * 
 * 该函数负责处理UI系统中的事件回调，将事件数据从事件类型结构体复制到回调指针中。
 * 它处理多个事件字段，包括事件ID、任务ID、时间戳等，并更新相应的数据结构。
 * 
 * @param ui_callback 回调函数指针，用于访问UI系统状态
 * @param ui_event_type 事件类型指针，包含源事件数据
 * @param ui_event_data 事件数据指针，目标缓冲区
 * @param ui_event_flags 事件标志，控制处理行为
 * 
 * @return return void
 * 
 * 注意：这是简化实现，仅处理基本的事件回调操作
 */
void ui_system_handle_event_callback(longlong ui_callback, uint64_t ui_event_type, longlong ui_event_data, longlong ui_event_flags)

{
  uint32_t ui_system_event_id;
  uint64_t ui_system_task_id;
  uint64_t ui_loop_counter;
  uint64_t *ui_callback_ptr;
  longlong ui_event_index;
  int ui_result_status;
  longlong in_R10;
  longlong ui_register_r11;
  
  ui_result_status = 1;
  ui_callback_ptr = (uint64_t *)(ui_event_data + 4000);
  do {
    ui_callback_ptr[-1] = *(uint64_t *)(ui_register_r11 + 0xf98);
    *ui_callback_ptr = *(uint64_t *)(ui_register_r11 + 4000);
    ui_callback_ptr[1] = *(uint64_t *)(ui_register_r11 + 0xfa8);
    ui_callback_ptr[2] = *(uint64_t *)(ui_register_r11 + 0xfb0);
    ui_callback_ptr[-UI_SHIFT_AMOUNT_20] =
         (longlong)(*(int *)(in_R10 + UI_OFFSET_307c) * ui_result_status) * 0x4c + *(longlong *)(in_R10 + UI_OFFSET_30b0);
    *(uint32_t *)(ui_callback_ptr + -UI_RESOURCE_TYPE_CONFIG) = *(uint32_t *)(in_R10 + UI_OFFSET_307c);
    *(uint32_t *)((longlong)ui_callback_ptr + -0x94) = *(uint32_t *)(in_R10 + UI_OFFSET_3064);
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0xde8);
    ui_callback_ptr[-UI_MEMORY_DEALLOC_OFFSET] = *(uint64_t *)(ui_register_r11 + 0xde0);
    ui_callback_ptr[-0x37] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0xdf8);
    ui_callback_ptr[-0x36] = *(uint64_t *)(ui_register_r11 + 0xdf0);
    ui_callback_ptr[-0x35] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0xe08);
    ui_callback_ptr[-0x34] = *(uint64_t *)(ui_register_r11 + 0xe00);
    ui_callback_ptr[-0x33] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0xe18);
    ui_callback_ptr[-0x32] = *(uint64_t *)(ui_register_r11 + 0xe10);
    ui_callback_ptr[-UI_TASK_ID_OFFSET] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0xe28);
    ui_callback_ptr[-UI_MEMORY_ALLOC_SIZE] = *(uint64_t *)(ui_register_r11 + 0xe20);
    ui_callback_ptr[-UI_SIGNATURE_PART5] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0xe38);
    ui_callback_ptr[-0x2e] = *(uint64_t *)(ui_register_r11 + 0xe30);
    ui_callback_ptr[-UI_WIDGET_ENABLED_FLAG] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0xe48);
    ui_callback_ptr[-UI_OPERATION_RESULT_OFFSET] = *(uint64_t *)(ui_register_r11 + 0xe40);
    ui_callback_ptr[-0x2b] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0xe58);
    ui_callback_ptr[-0x2a] = *(uint64_t *)(ui_register_r11 + 0xe50);
    ui_callback_ptr[-0x29] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0xe68);
    ui_callback_ptr[-UI_CALLBACK_HANDLER_OFFSET] = *(uint64_t *)(ui_register_r11 + 0xe60);
    ui_callback_ptr[-0x27] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0xe78);
    ui_callback_ptr[-UI_FOCUS_STATE_OFFSET] = *(uint64_t *)(ui_register_r11 + 0xe70);
    ui_callback_ptr[-0x25] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + UI_SYSTEM_CONFIG_OFFSET8);
    ui_callback_ptr[-UI_EVENT_COUNTER_OFFSET] = *(uint64_t *)(ui_register_r11 + UI_SYSTEM_CONFIG_OFFSET0);
    ui_callback_ptr[-0x23] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0xe98);
    ui_callback_ptr[-UI_WIDGET_STATE_OFFSET] = *(uint64_t *)(ui_register_r11 + 0xe90);
    ui_callback_ptr[-UI_SYSTEM_STATE_OFFSET] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0xea8);
    ui_callback_ptr[-UI_OFFSET_32] = *(uint64_t *)(ui_register_r11 + 0xea0);
    ui_callback_ptr[-UI_GUARD_CHECK_TYPE_2] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0xeb8);
    ui_callback_ptr[-UI_OFFSET_30] = *(uint64_t *)(ui_register_r11 + 0xeb0);
    ui_callback_ptr[-UI_SYSTEM_CALLBACK_TYPE] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0xec8);
    ui_callback_ptr[-UI_OFFSET_28] = *(uint64_t *)(ui_register_r11 + 0xec0);
    ui_callback_ptr[-UI_GUARD_CHECK_TYPE] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0xed8);
    ui_callback_ptr[-UI_MEMORY_RESOURCE_TYPE] = *(uint64_t *)(ui_register_r11 + 0xed0);
    ui_callback_ptr[-UI_WIDGET_RESOURCE_TYPE] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0xee8);
    ui_callback_ptr[-UI_SNAPSHOT_CREATE_FLAGS] = *(uint64_t *)(ui_register_r11 + 0xee0);
    ui_callback_ptr[-UI_RENDER_RESOURCE_TYPE] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0xef8);
    ui_callback_ptr[-UI_OFFSET_22] = *(uint64_t *)(ui_register_r11 + 0xef0);
    ui_callback_ptr[-UI_LAYOUT_RESOURCE_TYPE] = ui_system_task_id;
    *(uint8_t *)(ui_callback_ptr + -8) = *(uint8_t *)(ui_register_r11 + 0xf60);
    *(uint8_t *)((longlong)ui_callback_ptr + -0x3d) = *(uint8_t *)(ui_register_r11 + 0xf63);
    *(uint64_t *)((longlong)ui_callback_ptr + -0x39) = *(uint64_t *)(ui_register_r11 + 0xf67);
    *(uint32_t *)((longlong)ui_callback_ptr + -0x2b) = *(uint32_t *)(ui_register_r11 + 0xf75);
    *(uint32_t *)((longlong)ui_callback_ptr + -0x23) = *(uint32_t *)(ui_register_r11 + 0xf7d);
    *(uint8_t *)((longlong)ui_callback_ptr + -UI_TASK_ID_OFFSET) = *(uint8_t *)(ui_register_r11 + 0xf6f);
    *(uint8_t *)(ui_callback_ptr + -6) = *(uint8_t *)(ui_register_r11 + 0xf70);
    ui_callback_ptr[3] = ui_callback + 0x4140;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + UI_STACK_SIZE_1288);
    ui_callback_ptr[-0xf4] = *(uint64_t *)(ui_register_r11 + UI_STACK_SIZE_1280);
    ui_callback_ptr[-0xf3] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0x818);
    ui_callback_ptr[-0xf2] = *(uint64_t *)(ui_register_r11 + 0x810);
    ui_callback_ptr[-0xf1] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0x7e8);
    ui_callback_ptr[-0xf8] = *(uint64_t *)(ui_register_r11 + 0x7e0);
    ui_callback_ptr[-0xf7] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0x7f8);
    ui_callback_ptr[-0xf6] = *(uint64_t *)(ui_register_r11 + 0x7f0);
    ui_callback_ptr[-0xf5] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0x828);
    ui_callback_ptr[-0xf0] = *(uint64_t *)(ui_register_r11 + 0x820);
    ui_callback_ptr[-0xef] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0x838);
    ui_callback_ptr[-0xee] = *(uint64_t *)(ui_register_r11 + 0x830);
    ui_callback_ptr[-0xed] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + UI_WIDGET_ITEM_SIZE8);
    ui_callback_ptr[-0xec] = *(uint64_t *)(ui_register_r11 + UI_WIDGET_ITEM_SIZE0);
    ui_callback_ptr[-0xeb] = ui_system_task_id;
    ui_system_task_id = *(uint64_t *)(ui_register_r11 + 0x850);
    ui_loop_counter = *(uint64_t *)(ui_register_r11 + 0x858);
    *(uint32_t *)(ui_callback_ptr + -0x39) = UI_BIT_MASK_32BIT_FULL;
    ui_callback_ptr[-0xea] = ui_system_task_id;
    ui_callback_ptr[-0xe9] = ui_loop_counter;
    ui_system_event_id = *(uint32_t *)(ui_callback_ptr + -0x39);
    if (*(int *)(in_R10 + UI_OFFSET_308c) != 0) {
      ui_system_event_id = 0xfffffff8;
    }
    ui_result_status = ui_result_status + 1;
    *(uint32_t *)(ui_callback_ptr + -0x39) = ui_system_event_id;
    ui_event_flags = ui_event_flags + -1;
    ui_callback_ptr = ui_callback_ptr + 0x254;
  } while (ui_event_flags != 0);
  ui_result_status = 0;
  if (0 < *(int *)(in_R10 + UI_OFFSET_3074)) {
    ui_event_index = 0;
    do {
      ui_result_status = ui_result_status + 1;
      *(uint32_t *)(ui_event_index + *(longlong *)(in_R10 + UI_REGISTER_Y_OFFSETa8)) = UI_BIT_MASK_32BIT_FULL;
      ui_event_index = ui_event_index + 4;
    } while (ui_result_status < *(int *)(in_R10 + UI_OFFSET_3074));
  }
  return ui_system_return_value;
}

void ui_system_cleanup_clip_resources(void)

{
  int ui_temp_state_value;
  longlong ui_event_index;
  longlong in_R10;
  
  ui_temp_state_value = 0;
  if (0 < *(int *)(in_R10 + UI_OFFSET_3074)) {
    ui_event_index = 0;
    do {
      ui_temp_state_value = ui_temp_state_value + 1;
      *(uint32_t *)(ui_event_index + *(longlong *)(in_R10 + UI_REGISTER_Y_OFFSETa8)) = UI_BIT_MASK_32BIT_FULL;
      ui_event_index = ui_event_index + 4;
    } while (ui_temp_state_value < *(int *)(in_R10 + UI_OFFSET_3074));
  }
  return ui_system_return_value;
}

void ui_system_clip_thread_handler(int *ui_callback)

{
  int ui_temp_state_value;
  longlong ui_event_index;
  int ui_result_status;
  uint8_t ui_stack_array [32];
  uint8_t ui_stack_array [16];
  ulonglong ui_stack_control_flag;
  
  ui_stack_control_flag = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_event_index = *(longlong *)(ui_callback + 2);
  ui_temp_state_value = *ui_callback;
  ui_event_index = *(longlong *)(ui_callback + 4);
  if (*(int *)(ui_event_index + UI_REGISTER_Y_OFFSET80) != 0) {
    do {
      ui_result_status = WaitForSingleObject(*(uint64_t *)
                                   (*(longlong *)(ui_event_index + UI_REGISTER_Y_OFFSETf8) + (longlong)ui_temp_state_value * 8),UI_BIT_MASK_32BIT_FULL)
      ;
      if (ui_result_status == 0) {
        if (*(int *)(ui_event_index + UI_REGISTER_Y_OFFSET80) == 0) break;
        *(uint8_t **)(ui_event_index + 0xf58) = ui_stack_array;
        ui_system_update_clip_optimization_state(ui_event_index,ui_event_index,ui_temp_state_value + 1);
      }
    } while (*(int *)(ui_event_index + UI_REGISTER_Y_OFFSET80) != 0);
  }
  RenderUIComponent(ui_stack_control_flag ^ (ulonglong)ui_stack_array);
}

void ui_system_reset_clip_engine_state(void)

{
  int ui_temp_state_value;
  longlong ui_widget_base;
  longlong ui_system_register_long;
  uint8_t ui_stack_unsigned_array [8];
  ulonglong ui_stack_data_offset_30;
  
  do {
    ui_temp_state_value = WaitForSingleObject(*(uint64_t *)(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETf8) + ui_system_register * 8),
                                UI_BIT_MASK_32BIT_FULL);
    if (ui_temp_state_value == 0) {
      if (*(int *)(ui_widget_base + UI_REGISTER_Y_OFFSET80) == 0) break;
      *(uint8_t **)(ui_system_register + 0xf58) = ui_stack_unsigned_array;
      ui_system_update_clip_optimization_state();
    }
  } while (*(int *)(ui_widget_base + UI_REGISTER_Y_OFFSET80) != 0);
  RenderUIComponent(ui_stack_data_offset_30 ^ (ulonglong)&ui_stack_base_address);
}

void ui_system_initialize_clip_processing(void)

{
  ulonglong ui_stack_data_offset_30;
  
  RenderUIComponent(ui_stack_data_offset_30 ^ (ulonglong)&ui_stack_base_address);
}

void ui_system_process_clip_command(longlong ui_callback)

{
  longlong ui_long_counter;
  int ui_result_status;
  
  *(uint32_t *)(ui_callback + UI_REGISTER_Y_OFFSET80) = 0;
  *(uint32_t *)(ui_callback + UI_REGISTER_Y_OFFSET90) = 0;
  ui_result_status = *(int *)(ui_callback + UI_REGISTER_Y_OFFSET84);
  if (8 < ui_result_status) {
    ui_result_status = 8;
  }
  if (*(int *)(ui_callback + UI_EVENT_ID_OFFSETe8) < ui_result_status) {
    ui_result_status = *(int *)(ui_callback + UI_EVENT_ID_OFFSETe8);
  }
  if (1 < ui_result_status) {
    *(uint32_t *)(ui_callback + UI_REGISTER_Y_OFFSET80) = 1;
    *(int *)(ui_callback + UI_REGISTER_Y_OFFSET8c) = ui_result_status + -1;
    ui_long_counter = ui_system_update_clip_state(8,ui_result_status + -1);
    *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETf0) = ui_long_counter;
    if (ui_long_counter == 0) {
      ui_system_set_clip_region_property(ui_callback + UI_NETWORK_RESOURCE_TYPEc0,2,&ui_widget_manager);
    }
    ui_long_counter = ui_system_update_clip_state(8,*(uint32_t *)(ui_callback + UI_REGISTER_Y_OFFSET8c));
    *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETf8) = ui_long_counter;
    if (ui_long_counter == 0) {
      ui_system_set_clip_region_property(ui_callback + UI_NETWORK_RESOURCE_TYPEc0,2,&ui_widget_manager);
    }
    ui_long_counter = ui_system_calculate_clip_metrics(UI_OFFSET_32,(ulonglong)*(uint *)(ui_callback + UI_REGISTER_Y_OFFSET8c) * UI_NETWORK_RESOURCE_TYPEa0);
    *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETe0) = ui_long_counter;
    if (ui_long_counter == 0) {
      ui_system_set_clip_region_property(ui_callback + UI_NETWORK_RESOURCE_TYPEc0,2,&ui_widget_manager);
    }
    memset(*(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETe0),0,(ulonglong)*(uint *)(ui_callback + UI_REGISTER_Y_OFFSET8c) * UI_NETWORK_RESOURCE_TYPEa0);
  }
  return ui_system_return_value;
}

void ui_system_finalize_clip_operations(void)

{
  uint32_t ui_register_eax;
  longlong ui_long_counter;
  longlong ui_widget_base;
  int ui_system_register;
  
  *(uint32_t *)(ui_widget_base + UI_REGISTER_Y_OFFSET80) = 1;
  *(uint32_t *)(ui_widget_base + UI_REGISTER_Y_OFFSET8c) = ui_register_eax;
  ui_long_counter = ui_system_update_clip_state(ui_system_register,ui_register_eax);
  *(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETf0) = ui_long_counter;
  if (ui_long_counter == 0) {
    ui_system_set_clip_region_property(ui_widget_base + UI_NETWORK_RESOURCE_TYPEc0,ui_system_register + -6,&ui_widget_manager);
  }
  ui_long_counter = ui_system_update_clip_state();
  *(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETf8) = ui_long_counter;
  if (ui_long_counter == 0) {
    ui_system_set_clip_region_property(ui_widget_base + UI_NETWORK_RESOURCE_TYPEc0,2,&ui_widget_manager);
  }
  ui_long_counter = ui_system_calculate_clip_metrics(UI_OFFSET_32,(ulonglong)*(uint *)(ui_widget_base + UI_REGISTER_Y_OFFSET8c) * UI_NETWORK_RESOURCE_TYPEa0);
  *(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETe0) = ui_long_counter;
  if (ui_long_counter == 0) {
    ui_system_set_clip_region_property(ui_widget_base + UI_NETWORK_RESOURCE_TYPEc0,2,&ui_widget_manager);
  }
  memset(*(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETe0),0,(ulonglong)*(uint *)(ui_widget_base + UI_REGISTER_Y_OFFSET8c) * UI_NETWORK_RESOURCE_TYPEa0);
}

void ui_system_validate_clip_integrity(void)

{
  longlong ui_long_counter;
  uint64_t ui_system_task_id;
  longlong ui_widget_base;
  uint ui_system_register;
  ulonglong ui_temp_ulong;
  
  do {
    ui_system_task_id = CreateSemaphoreW(0,0,UI_TASK_ID_THRESHOLD,0);
    ui_loop_counter = (ulonglong)ui_system_register;
    *(uint64_t *)(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETf8) + ui_loop_counter * 8) = ui_system_task_id;
    ui_system_allocate_widget_resource(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETe0) + ui_loop_counter * UI_NETWORK_RESOURCE_TYPEa0);
    ui_long_counter = ui_loop_counter * UI_SNAPSHOT_CREATE_FLAGS;
    *(uint *)(ui_long_counter + *(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETe8)) = ui_system_register;
    *(longlong *)(ui_long_counter + 8 + *(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETe8)) = ui_widget_base;
    *(ulonglong *)(ui_long_counter + UI_EVENT_FLAG_OFFSET + *(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETe8)) =
         *(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETe0) + ui_loop_counter * UI_NETWORK_RESOURCE_TYPEa0;
    ui_system_task_id = _beginthreadex(0,0,ui_system_clip_thread_handler);
    ui_system_register = ui_system_register + 1;
    *(uint64_t *)(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETf0) + ui_loop_counter * 8) = ui_system_task_id;
  } while (ui_system_register < *(uint *)(ui_widget_base + UI_REGISTER_Y_OFFSET8c));
  ui_system_task_id = CreateSemaphoreW(0,0,UI_TASK_ID_THRESHOLD,0);
  *(uint64_t *)(ui_widget_base + UI_OFFSET_6800) = ui_system_task_id;
  *(uint32_t *)(ui_widget_base + UI_REGISTER_Y_OFFSET90) = *(uint32_t *)(ui_widget_base + UI_REGISTER_Y_OFFSET8c);
  return ui_system_return_value;
}

void ui_system_prepare_clip_batch(void)

{
  uint64_t ui_system_event_id;
  longlong ui_widget_base;
  
  ui_system_event_id = CreateSemaphoreW(0,0,UI_TASK_ID_THRESHOLD,0);
  *(uint64_t *)(ui_widget_base + UI_OFFSET_6800) = ui_system_event_id;
  *(uint32_t *)(ui_widget_base + UI_REGISTER_Y_OFFSET90) = *(uint32_t *)(ui_widget_base + UI_REGISTER_Y_OFFSET8c);
  return ui_system_return_value;
}

void ui_system_optimize_clip_performance(void)

{
  return ui_system_return_value;
}

void ui_system_execute_clip_cleanup(longlong ui_callback)

{
  int ui_temp_state_value;
  uint ui_system_task_id;
  ulonglong ui_temp_ulong;
  
  if (*(int *)(ui_callback + UI_REGISTER_Y_OFFSET80) != 0) {
    ui_loop_counter = 0;
    *(uint32_t *)(ui_callback + UI_REGISTER_Y_OFFSET80) = 0;
    ui_result_status = ui_temp_buffer;
    if (0 < *(int *)(ui_callback + UI_REGISTER_Y_OFFSET90)) {
      do {
        ReleaseSemaphore(*(uint64_t *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETf8) + ui_loop_counter),1);
        ui_temp_state_value = WaitForSingleObject(*(uint64_t *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETf0) + ui_loop_counter),
                                    UI_BIT_MASK_32BIT_FULL);
        if (ui_temp_state_value == 0) {
          CloseHandle(*(uint64_t *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETf0) + ui_loop_counter));
        }
        ui_system_task_id = (int)ui_loop_counter + 1;
        ui_loop_counter = (ulonglong)ui_system_task_id;
        ui_loop_counter = ui_loop_counter + 8;
      } while ((int)ui_system_task_id < *(int *)(ui_callback + UI_REGISTER_Y_OFFSET90));
    }
    ui_result_status = ui_temp_buffer;
    if (0 < *(int *)(ui_callback + UI_REGISTER_Y_OFFSET90)) {
      do {
        if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETf8)) != 0) {
          CloseHandle();
        }
        ui_system_task_id = (int)ui_loop_counter + 1;
        ui_loop_counter = ui_loop_counter + 8;
        ui_loop_counter = (ulonglong)ui_system_task_id;
      } while ((int)ui_system_task_id < *(int *)(ui_callback + UI_REGISTER_Y_OFFSET90));
    }
    if (*(longlong *)(ui_callback + UI_OFFSET_6800) != 0) {
      CloseHandle();
    }
    ui_system_release_clip_resources(*(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETf0));
    *(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETf0) = 0;
    ui_system_release_clip_resources(*(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETf8));
    *(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETf8) = 0;
    ui_system_release_clip_resources(*(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETe0));
    *(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETe0) = 0;
    ui_system_release_clip_resources(*(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETe8));
    *(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETe8) = 0;
  }
  return ui_system_return_value;
}

void ui_system_handle_clip_error(longlong ui_callback)

{
  int ui_temp_state_value;
  longlong ui_widget_base;
  uint ui_system_task_id;
  ulonglong ui_temp_ulong;
  
  ui_loop_counter = 0;
  *(uint32_t *)(ui_callback + UI_REGISTER_Y_OFFSET80) = 0;
  ui_result_status = ui_temp_buffer;
  if (0 < *(int *)(ui_callback + UI_REGISTER_Y_OFFSET90)) {
    do {
      ReleaseSemaphore(*(uint64_t *)(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETf8) + ui_loop_counter),1);
      ui_temp_state_value = WaitForSingleObject(*(uint64_t *)(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETf0) + ui_loop_counter),
                                  UI_BIT_MASK_32BIT_FULL);
      if (ui_temp_state_value == 0) {
        CloseHandle(*(uint64_t *)(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETf0) + ui_loop_counter));
      }
      ui_system_task_id = (int)ui_loop_counter + 1;
      ui_loop_counter = (ulonglong)ui_system_task_id;
      ui_loop_counter = ui_loop_counter + 8;
    } while ((int)ui_system_task_id < *(int *)(ui_widget_base + UI_REGISTER_Y_OFFSET90));
  }
  ui_result_status = ui_temp_buffer;
  if (0 < *(int *)(ui_widget_base + UI_REGISTER_Y_OFFSET90)) {
    do {
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETf8)) != 0) {
        CloseHandle();
      }
      ui_system_task_id = (int)ui_loop_counter + 1;
      ui_loop_counter = ui_loop_counter + 8;
      ui_loop_counter = (ulonglong)ui_system_task_id;
    } while ((int)ui_system_task_id < *(int *)(ui_widget_base + UI_REGISTER_Y_OFFSET90));
  }
  if (*(longlong *)(ui_widget_base + UI_OFFSET_6800) != 0) {
    CloseHandle();
  }
  ui_system_release_clip_resources(*(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETf0));
  *(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETf0) = 0;
  ui_system_release_clip_resources(*(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETf8));
  *(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETf8) = 0;
  ui_system_release_clip_resources(*(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETe0));
  *(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETe0) = 0;
  ui_system_release_clip_resources(*(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETe8));
  *(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETe8) = 0;
  return ui_system_return_value;
}

void ui_system_process_clip_data(longlong ui_callback)

{
  int ui_temp_state_value;
  longlong ui_widget_base;
  int ui_result_status;
  ulonglong ui_system_register_long;
  uint ui_loop_counter;
  ulonglong ui_temp_ulong;
  
  ui_result_status = (int)ui_system_register;
  ui_loop_counter = ui_system_register & UI_BIT_MASK_32BIT_FULL;
  *(int *)(ui_callback + UI_REGISTER_Y_OFFSET80) = ui_result_status;
  if (ui_result_status < *(int *)(ui_callback + UI_REGISTER_Y_OFFSET90)) {
    ui_loop_counter = ui_system_register & UI_BIT_MASK_32BIT_FULL;
    do {
      ReleaseSemaphore(*(uint64_t *)(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETf8) + ui_loop_counter),1);
      ui_temp_state_value = WaitForSingleObject(*(uint64_t *)(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETf0) + ui_loop_counter),
                                  UI_BIT_MASK_32BIT_FULL);
      if (ui_temp_state_value == 0) {
        CloseHandle(*(uint64_t *)(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETf0) + ui_loop_counter));
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = (ulonglong)ui_loop_counter;
      ui_loop_counter = ui_loop_counter + 8;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + UI_REGISTER_Y_OFFSET90));
  }
  ui_loop_counter = ui_system_register & UI_BIT_MASK_32BIT_FULL;
  ui_loop_counter = ui_system_register;
  if (ui_result_status < *(int *)(ui_widget_base + UI_REGISTER_Y_OFFSET90)) {
    do {
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETf8)) != 0) {
        CloseHandle();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = (ulonglong)ui_loop_counter;
      ui_loop_counter = ui_loop_counter + 8;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + UI_REGISTER_Y_OFFSET90));
  }
  if (*(longlong *)(ui_widget_base + UI_OFFSET_6800) != 0) {
    CloseHandle();
  }
  ui_system_release_clip_resources(*(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETf0));
  *(ulonglong *)(ui_widget_base + UI_REGISTER_Y_OFFSETf0) = ui_system_register;
  ui_system_release_clip_resources(*(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETf8));
  *(ulonglong *)(ui_widget_base + UI_REGISTER_Y_OFFSETf8) = ui_system_register;
  ui_system_release_clip_resources(*(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETe0));
  *(ulonglong *)(ui_widget_base + UI_REGISTER_Y_OFFSETe0) = ui_system_register;
  ui_system_release_clip_resources(*(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETe8));
  *(ulonglong *)(ui_widget_base + UI_REGISTER_Y_OFFSETe8) = ui_system_register;
  return ui_system_return_value;
}

void ui_system_validate_clip_metrics(void)

{
  longlong ui_widget_base;
  uint64_t ui_system_register;
  
  CloseHandle();
  ui_system_release_clip_resources(*(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETf0));
  *(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETf0) = ui_system_register;
  ui_system_release_clip_resources(*(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETf8));
  *(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETf8) = ui_system_register;
  ui_system_release_clip_resources(*(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETe0));
  *(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETe0) = ui_system_register;
  ui_system_release_clip_resources(*(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETe8));
  *(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETe8) = ui_system_register;
  return ui_system_return_value;
}

void ui_system_reset_clip_counters(void)

{
  return ui_system_return_value;
}

void ui_system_update_clip_statistics(longlong ui_callback,uint ui_event_type,uint32_t ui_event_data)

{
  longlong ui_long_counter;
  uint32_t ui_system_task_id;
  longlong ui_event_index;
  uint64_t ui_loop_counter;
  ulonglong ui_temp_ulong;
  uint ui_loop_counter;
  ulonglong ui_temp_ulong;
  
  ui_long_counter = ui_callback + UI_NETWORK_RESOURCE_TYPEc0;
  if (*(int *)(ui_callback + UI_REGISTER_Y_OFFSET80) != 0) {
    ui_system_handle_drag_callback(ui_callback,ui_event_data);
    if ((ui_event_type & UI_MAX_EVENT_FLAGS) != 0) {
      ui_event_type = ui_event_type + (UI_EVENT_FLAG_OFFSET - (ui_event_type & UI_MAX_EVENT_FLAGS));
    }
    if ((int)ui_event_type < UI_CALLBACK_HANDLER_OFFSET0) {
      *(uint32_t *)(ui_callback + UI_REGISTER_Y_OFFSETa4) = 1;
    }
    else if ((int)ui_event_type < UI_OFFSET_801) {
      *(uint32_t *)(ui_callback + UI_REGISTER_Y_OFFSETa4) = 8;
    }
    else {
      ui_system_task_id = UI_OFFSET_32;
      if ((int)ui_event_type < UI_OFFSET_1601) {
        ui_system_task_id = UI_EVENT_FLAG_OFFSET;
      }
      *(uint32_t *)(ui_callback + UI_REGISTER_Y_OFFSETa4) = ui_system_task_id;
    }
    ui_event_index = ui_system_update_clip_state(4,(longlong)*(int *)(ui_callback + UI_OFFSET_3074));
    *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETa8) = ui_event_index;
    if (ui_event_index == 0) {
      ui_system_set_clip_region_property(ui_long_counter,2,&ui_widget_manager);
    }
    ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_callback + UI_OFFSET_3074));
    *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETb0) = ui_event_index;
    if (ui_event_index == 0) {
      ui_system_set_clip_region_property(ui_long_counter,2,&ui_widget_manager);
    }
    ui_loop_counter = 0;
    if (0 < *(int *)(ui_callback + UI_OFFSET_3074)) {
      ui_result_status = ui_temp_buffer;
      do {
        ui_loop_counter = ui_system_calculate_clip_metrics(UI_EVENT_FLAG_OFFSET,(longlong)(int)(ui_event_type + UI_BUFFER_SIZE_64));
        *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETb0)) = ui_loop_counter;
        if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETb0)) == 0) {
          ui_system_set_clip_region_property(ui_long_counter,2,&ui_widget_manager);
        }
        ui_loop_counter = (int)ui_loop_counter + 1;
        ui_loop_counter = (ulonglong)ui_loop_counter;
        ui_loop_counter = ui_loop_counter + 8;
      } while ((int)ui_loop_counter < *(int *)(ui_callback + UI_OFFSET_3074));
    }
    ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_callback + UI_OFFSET_3074));
    *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETb8) = ui_event_index;
    if (ui_event_index == 0) {
      ui_system_set_clip_region_property(ui_long_counter,2,&ui_widget_manager);
    }
    if (0 < *(int *)(ui_callback + UI_OFFSET_3074)) {
      ui_result_status = ui_temp_buffer;
      do {
        ui_loop_counter = ui_system_calculate_clip_metrics(UI_EVENT_FLAG_OFFSET,(longlong)(((int)ui_event_type >> 1) + UI_OFFSET_32));
        *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETb8)) = ui_loop_counter;
        if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETb8)) == 0) {
          ui_system_set_clip_region_property(ui_long_counter,2,&ui_widget_manager);
        }
        ui_loop_counter = (int)ui_loop_counter + 1;
        ui_loop_counter = (ulonglong)ui_loop_counter;
        ui_loop_counter = ui_loop_counter + 8;
      } while ((int)ui_loop_counter < *(int *)(ui_callback + UI_OFFSET_3074));
    }
    ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_callback + UI_OFFSET_3074));
    *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETc0) = ui_event_index;
    if (ui_event_index == 0) {
      ui_system_set_clip_region_property(ui_long_counter,2,&ui_widget_manager);
    }
    if (0 < *(int *)(ui_callback + UI_OFFSET_3074)) {
      ui_result_status = ui_temp_buffer;
      do {
        ui_loop_counter = ui_system_calculate_clip_metrics(UI_EVENT_FLAG_OFFSET,(longlong)(((int)ui_event_type >> 1) + UI_OFFSET_32));
        *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETc0)) = ui_loop_counter;
        if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETc0)) == 0) {
          ui_system_set_clip_region_property(ui_long_counter,2,&ui_widget_manager);
        }
        ui_loop_counter = (int)ui_loop_counter + 1;
        ui_loop_counter = (ulonglong)ui_loop_counter;
        ui_loop_counter = ui_loop_counter + 8;
      } while ((int)ui_loop_counter < *(int *)(ui_callback + UI_OFFSET_3074));
    }
    ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_callback + UI_OFFSET_3074));
    *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETc8) = ui_event_index;
    if (ui_event_index == 0) {
      ui_system_set_clip_region_property(ui_long_counter,2,&ui_widget_manager);
    }
    ui_result_status = ui_temp_buffer;
    if (0 < *(int *)(ui_callback + UI_OFFSET_3074)) {
      do {
        ui_loop_counter = ui_system_update_clip_state(UI_EVENT_FLAG_OFFSET,1);
        *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETc8)) = ui_loop_counter;
        if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETc8)) == 0) {
          ui_system_set_clip_region_property(ui_long_counter,2,&ui_widget_manager);
        }
        ui_loop_counter = (int)ui_loop_counter + 1;
        ui_loop_counter = ui_loop_counter + 8;
        ui_loop_counter = (ulonglong)ui_loop_counter;
      } while ((int)ui_loop_counter < *(int *)(ui_callback + UI_OFFSET_3074));
    }
    ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_callback + UI_OFFSET_3074));
    *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd0) = ui_event_index;
    if (ui_event_index == 0) {
      ui_system_set_clip_region_property(ui_long_counter,2,&ui_widget_manager);
    }
    ui_result_status = ui_temp_buffer;
    if (0 < *(int *)(ui_callback + UI_OFFSET_3074)) {
      do {
        ui_loop_counter = ui_system_update_clip_state(8);
        *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd0)) = ui_loop_counter;
        if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd0)) == 0) {
          ui_system_set_clip_region_property(ui_long_counter,2,&ui_widget_manager);
        }
        ui_loop_counter = (int)ui_loop_counter + 1;
        ui_loop_counter = ui_loop_counter + 8;
        ui_loop_counter = (ulonglong)ui_loop_counter;
      } while ((int)ui_loop_counter < *(int *)(ui_callback + UI_OFFSET_3074));
    }
    ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_callback + UI_OFFSET_3074));
    *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd8) = ui_event_index;
    if (ui_event_index == 0) {
      ui_system_set_clip_region_property(ui_long_counter,2,&ui_widget_manager);
    }
    ui_result_status = ui_temp_buffer;
    if (0 < *(int *)(ui_callback + UI_OFFSET_3074)) {
      do {
        ui_loop_counter = ui_system_update_clip_state(8);
        *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd8)) = ui_loop_counter;
        if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd8)) == 0) {
          ui_system_set_clip_region_property(ui_long_counter,2,&ui_widget_manager);
        }
        ui_loop_counter = (int)ui_loop_counter + 1;
        ui_loop_counter = (ulonglong)ui_loop_counter;
        ui_loop_counter = ui_loop_counter + 8;
      } while ((int)ui_loop_counter < *(int *)(ui_callback + UI_OFFSET_3074));
    }
  }
  return ui_system_return_value;
}

void ui_system_process_clip_rendering(uint64_t ui_callback,uint64_t ui_event_type,uint32_t ui_event_data)

{
  uint32_t ui_system_event_id;
  longlong ui_event_index;
  uint64_t ui_loop_counter;
  longlong ui_widget_base;
  ulonglong ui_temp_ulong;
  uint ui_system_register;
  ulonglong ui_temp_ulong;
  longlong ui_system_register_long;
  uint ui_loop_counter;
  ulonglong ui_temp_ulong;
  
  ui_system_handle_drag_callback(ui_callback,ui_event_data);
  if ((ui_system_register & UI_MAX_EVENT_FLAGS) != 0) {
    ui_system_register = ui_system_register + (UI_EVENT_FLAG_OFFSET - (ui_system_register & UI_MAX_EVENT_FLAGS));
  }
  if ((int)ui_system_register < UI_CALLBACK_HANDLER_OFFSET0) {
    *(uint32_t *)(ui_system_register + UI_REGISTER_Y_OFFSETa4) = 1;
  }
  else if ((int)ui_system_register < UI_OFFSET_801) {
    *(uint32_t *)(ui_system_register + UI_REGISTER_Y_OFFSETa4) = 8;
  }
  else {
    ui_system_event_id = UI_OFFSET_32;
    if ((int)ui_system_register < UI_OFFSET_1601) {
      ui_system_event_id = UI_EVENT_FLAG_OFFSET;
    }
    *(uint32_t *)(ui_system_register + UI_REGISTER_Y_OFFSETa4) = ui_system_event_id;
  }
  ui_event_index = ui_system_update_clip_state(4,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETa8) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb0) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  ui_loop_counter = 0;
  if (0 < *(int *)(ui_widget_base + 0xbb4)) {
    ui_result_status = ui_temp_buffer;
    do {
      ui_loop_counter = ui_system_calculate_clip_metrics(UI_EVENT_FLAG_OFFSET,(longlong)(int)(ui_system_register + UI_BUFFER_SIZE_64));
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb0)) = ui_loop_counter;
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb0)) == 0) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = (ulonglong)ui_loop_counter;
      ui_loop_counter = ui_loop_counter + 8;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb8) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  if (0 < *(int *)(ui_widget_base + 0xbb4)) {
    ui_result_status = ui_temp_buffer;
    do {
      ui_loop_counter = ui_system_calculate_clip_metrics(UI_EVENT_FLAG_OFFSET,(longlong)(((int)ui_system_register >> 1) + UI_OFFSET_32));
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb8)) = ui_loop_counter;
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb8)) == 0) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = (ulonglong)ui_loop_counter;
      ui_loop_counter = ui_loop_counter + 8;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc0) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  if (0 < *(int *)(ui_widget_base + 0xbb4)) {
    ui_result_status = ui_temp_buffer;
    do {
      ui_loop_counter = ui_system_calculate_clip_metrics(UI_EVENT_FLAG_OFFSET,(longlong)(((int)ui_system_register >> 1) + UI_OFFSET_32));
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc0)) = ui_loop_counter;
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc0)) == 0) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = (ulonglong)ui_loop_counter;
      ui_loop_counter = ui_loop_counter + 8;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc8) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  ui_result_status = ui_temp_buffer;
  if (0 < *(int *)(ui_widget_base + 0xbb4)) {
    do {
      ui_loop_counter = ui_system_update_clip_state(UI_EVENT_FLAG_OFFSET,1);
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc8)) = ui_loop_counter;
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc8)) == 0) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = ui_loop_counter + 8;
      ui_loop_counter = (ulonglong)ui_loop_counter;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  ui_result_status = ui_temp_buffer;
  if (0 < *(int *)(ui_widget_base + 0xbb4)) {
    do {
      ui_loop_counter = ui_system_update_clip_state(8);
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0)) = ui_loop_counter;
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0)) == 0) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = ui_loop_counter + 8;
      ui_loop_counter = (ulonglong)ui_loop_counter;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  ui_result_status = ui_temp_buffer;
  if (0 < *(int *)(ui_widget_base + 0xbb4)) {
    do {
      ui_loop_counter = ui_system_update_clip_state(8);
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8)) = ui_loop_counter;
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8)) == 0) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = (ulonglong)ui_loop_counter;
      ui_loop_counter = ui_loop_counter + 8;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  return ui_system_return_value;
}

void ui_system_flush_clip_queue(void)

{
  uint32_t ui_system_event_id;
  longlong ui_event_index;
  uint64_t ui_loop_counter;
  longlong ui_widget_base;
  ulonglong ui_temp_ulong;
  uint ui_system_register;
  ulonglong ui_temp_ulong;
  longlong ui_system_register_long;
  uint ui_loop_counter;
  ulonglong ui_temp_ulong;
  
  ui_system_handle_drag_callback();
  if ((ui_system_register & UI_MAX_EVENT_FLAGS) != 0) {
    ui_system_register = ui_system_register + (UI_EVENT_FLAG_OFFSET - (ui_system_register & UI_MAX_EVENT_FLAGS));
  }
  if ((int)ui_system_register < UI_CALLBACK_HANDLER_OFFSET0) {
    *(uint32_t *)(ui_system_register + UI_REGISTER_Y_OFFSETa4) = 1;
  }
  else if ((int)ui_system_register < UI_OFFSET_801) {
    *(uint32_t *)(ui_system_register + UI_REGISTER_Y_OFFSETa4) = 8;
  }
  else {
    ui_system_event_id = UI_OFFSET_32;
    if ((int)ui_system_register < UI_OFFSET_1601) {
      ui_system_event_id = UI_EVENT_FLAG_OFFSET;
    }
    *(uint32_t *)(ui_system_register + UI_REGISTER_Y_OFFSETa4) = ui_system_event_id;
  }
  ui_event_index = ui_system_update_clip_state(4,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETa8) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb0) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  ui_loop_counter = 0;
  if (0 < *(int *)(ui_widget_base + 0xbb4)) {
    ui_result_status = ui_temp_buffer;
    do {
      ui_loop_counter = ui_system_calculate_clip_metrics(UI_EVENT_FLAG_OFFSET,(longlong)(int)(ui_system_register + UI_BUFFER_SIZE_64));
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb0)) = ui_loop_counter;
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb0)) == 0) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = (ulonglong)ui_loop_counter;
      ui_loop_counter = ui_loop_counter + 8;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb8) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  if (0 < *(int *)(ui_widget_base + 0xbb4)) {
    ui_result_status = ui_temp_buffer;
    do {
      ui_loop_counter = ui_system_calculate_clip_metrics(UI_EVENT_FLAG_OFFSET,(longlong)(((int)ui_system_register >> 1) + UI_OFFSET_32));
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb8)) = ui_loop_counter;
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb8)) == 0) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = (ulonglong)ui_loop_counter;
      ui_loop_counter = ui_loop_counter + 8;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc0) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  if (0 < *(int *)(ui_widget_base + 0xbb4)) {
    ui_result_status = ui_temp_buffer;
    do {
      ui_loop_counter = ui_system_calculate_clip_metrics(UI_EVENT_FLAG_OFFSET,(longlong)(((int)ui_system_register >> 1) + UI_OFFSET_32));
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc0)) = ui_loop_counter;
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc0)) == 0) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = (ulonglong)ui_loop_counter;
      ui_loop_counter = ui_loop_counter + 8;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc8) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  ui_result_status = ui_temp_buffer;
  if (0 < *(int *)(ui_widget_base + 0xbb4)) {
    do {
      ui_loop_counter = ui_system_update_clip_state(UI_EVENT_FLAG_OFFSET,1);
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc8)) = ui_loop_counter;
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc8)) == 0) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = ui_loop_counter + 8;
      ui_loop_counter = (ulonglong)ui_loop_counter;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  ui_result_status = ui_temp_buffer;
  if (0 < *(int *)(ui_widget_base + 0xbb4)) {
    do {
      ui_loop_counter = ui_system_update_clip_state(8);
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0)) = ui_loop_counter;
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0)) == 0) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = ui_loop_counter + 8;
      ui_loop_counter = (ulonglong)ui_loop_counter;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  ui_result_status = ui_temp_buffer;
  if (0 < *(int *)(ui_widget_base + 0xbb4)) {
    do {
      ui_loop_counter = ui_system_update_clip_state(8);
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8)) = ui_loop_counter;
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8)) == 0) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = (ulonglong)ui_loop_counter;
      ui_loop_counter = ui_loop_counter + 8;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  return ui_system_return_value;
}

void ui_system_cleanup_clip_memory(void)

{
  uint32_t ui_system_event_id;
  longlong ui_event_index;
  uint64_t ui_loop_counter;
  longlong ui_widget_base;
  ulonglong ui_temp_ulong;
  uint ui_system_register;
  ulonglong ui_temp_ulong;
  longlong ui_system_register_long;
  uint ui_loop_counter;
  ulonglong ui_temp_ulong;
  
  ui_system_handle_drag_callback();
  if ((ui_system_register & UI_MAX_EVENT_FLAGS) != 0) {
    ui_system_register = ui_system_register + (UI_EVENT_FLAG_OFFSET - (ui_system_register & UI_MAX_EVENT_FLAGS));
  }
  if ((int)ui_system_register < UI_CALLBACK_HANDLER_OFFSET0) {
    *(uint32_t *)(ui_system_register + UI_REGISTER_Y_OFFSETa4) = 1;
  }
  else if ((int)ui_system_register < UI_OFFSET_801) {
    *(uint32_t *)(ui_system_register + UI_REGISTER_Y_OFFSETa4) = 8;
  }
  else {
    ui_system_event_id = UI_OFFSET_32;
    if ((int)ui_system_register < UI_OFFSET_1601) {
      ui_system_event_id = UI_EVENT_FLAG_OFFSET;
    }
    *(uint32_t *)(ui_system_register + UI_REGISTER_Y_OFFSETa4) = ui_system_event_id;
  }
  ui_event_index = ui_system_update_clip_state(4,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETa8) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb0) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  ui_loop_counter = 0;
  if (0 < *(int *)(ui_widget_base + 0xbb4)) {
    ui_result_status = ui_temp_buffer;
    do {
      ui_loop_counter = ui_system_calculate_clip_metrics(UI_EVENT_FLAG_OFFSET,(longlong)(int)(ui_system_register + UI_BUFFER_SIZE_64));
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb0)) = ui_loop_counter;
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb0)) == 0) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = (ulonglong)ui_loop_counter;
      ui_loop_counter = ui_loop_counter + 8;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb8) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  if (0 < *(int *)(ui_widget_base + 0xbb4)) {
    ui_result_status = ui_temp_buffer;
    do {
      ui_loop_counter = ui_system_calculate_clip_metrics(UI_EVENT_FLAG_OFFSET,(longlong)(((int)ui_system_register >> 1) + UI_OFFSET_32));
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb8)) = ui_loop_counter;
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETb8)) == 0) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = (ulonglong)ui_loop_counter;
      ui_loop_counter = ui_loop_counter + 8;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc0) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  if (0 < *(int *)(ui_widget_base + 0xbb4)) {
    ui_result_status = ui_temp_buffer;
    do {
      ui_loop_counter = ui_system_calculate_clip_metrics(UI_EVENT_FLAG_OFFSET,(longlong)(((int)ui_system_register >> 1) + UI_OFFSET_32));
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc0)) = ui_loop_counter;
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc0)) == 0) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = (ulonglong)ui_loop_counter;
      ui_loop_counter = ui_loop_counter + 8;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc8) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  ui_result_status = ui_temp_buffer;
  if (0 < *(int *)(ui_widget_base + 0xbb4)) {
    do {
      ui_loop_counter = ui_system_update_clip_state(UI_EVENT_FLAG_OFFSET,1);
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc8)) = ui_loop_counter;
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc8)) == 0) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = ui_loop_counter + 8;
      ui_loop_counter = (ulonglong)ui_loop_counter;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  ui_result_status = ui_temp_buffer;
  if (0 < *(int *)(ui_widget_base + 0xbb4)) {
    do {
      ui_loop_counter = ui_system_update_clip_state(8);
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0)) = ui_loop_counter;
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0)) == 0) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = ui_loop_counter + 8;
      ui_loop_counter = (ulonglong)ui_loop_counter;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  ui_result_status = ui_temp_buffer;
  if (0 < *(int *)(ui_widget_base + 0xbb4)) {
    do {
      ui_loop_counter = ui_system_update_clip_state(8);
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8)) = ui_loop_counter;
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8)) == 0) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = (ulonglong)ui_loop_counter;
      ui_loop_counter = ui_loop_counter + 8;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  return ui_system_return_value;
}

void ui_system_initialize_drag_drop(void)

{
  uint64_t ui_system_event_id;
  longlong ui_event_index;
  longlong ui_widget_base;
  int ui_result_status;
  ulonglong ui_system_register_long;
  ulonglong ui_temp_ulong;
  longlong ui_system_register_long;
  uint ui_loop_counter;
  ulonglong ui_temp_ulong;
  
  ui_system_set_clip_region_property();
  ui_result_status = (int)ui_system_register;
  ui_loop_counter = ui_system_register & UI_BIT_MASK_32BIT_FULL;
  ui_loop_counter = ui_system_register;
  if (ui_result_status < *(int *)(ui_widget_base + 0xbb4)) {
    do {
      ui_system_event_id = ui_system_update_clip_state();
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc8)) = ui_system_event_id;
      if (*(ulonglong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETc8)) == ui_system_register) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = (ulonglong)ui_loop_counter;
      ui_loop_counter = ui_loop_counter + 8;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  ui_loop_counter = ui_system_register & UI_BIT_MASK_32BIT_FULL;
  ui_loop_counter = ui_system_register;
  if (ui_result_status < *(int *)(ui_widget_base + 0xbb4)) {
    do {
      ui_system_event_id = ui_system_update_clip_state(8);
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0)) = ui_system_event_id;
      if (*(ulonglong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0)) == ui_system_register) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = (ulonglong)ui_loop_counter;
      ui_loop_counter = ui_loop_counter + 8;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  ui_loop_counter = ui_system_register;
  if (ui_result_status < *(int *)(ui_widget_base + 0xbb4)) {
    do {
      ui_system_event_id = ui_system_update_clip_state(8);
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8)) = ui_system_event_id;
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8)) == 0) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_system_register + 1;
      ui_system_register = (ulonglong)ui_loop_counter;
      ui_loop_counter = ui_loop_counter + 8;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  return ui_system_return_value;
}

void ui_system_process_drag_operation(void)

{
  uint64_t ui_system_event_id;
  longlong ui_event_index;
  longlong ui_widget_base;
  ulonglong ui_system_register_long;
  ulonglong ui_temp_ulong;
  longlong ui_system_register_long;
  uint ui_loop_counter;
  ulonglong ui_temp_ulong;
  
  ui_system_set_clip_region_property();
  ui_loop_counter = ui_system_register & UI_BIT_MASK_32BIT_FULL;
  ui_loop_counter = ui_system_register;
  if ((int)ui_system_register < *(int *)(ui_widget_base + 0xbb4)) {
    do {
      ui_system_event_id = ui_system_update_clip_state(8);
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0)) = ui_system_event_id;
      if (*(ulonglong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd0)) == ui_system_register) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_loop_counter + 1;
      ui_loop_counter = (ulonglong)ui_loop_counter;
      ui_loop_counter = ui_loop_counter + 8;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  ui_event_index = ui_system_update_clip_state(8,(longlong)*(int *)(ui_widget_base + 0xbb4));
  *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8) = ui_event_index;
  if (ui_event_index == 0) {
    ui_system_set_clip_region_property();
  }
  ui_loop_counter = ui_system_register;
  if ((int)ui_system_register < *(int *)(ui_widget_base + 0xbb4)) {
    do {
      ui_system_event_id = ui_system_update_clip_state(8);
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8)) = ui_system_event_id;
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8)) == 0) {
        ui_system_set_clip_region_property();
      }
      ui_loop_counter = (int)ui_system_register + 1;
      ui_system_register = (ulonglong)ui_loop_counter;
      ui_loop_counter = ui_loop_counter + 8;
    } while ((int)ui_loop_counter < *(int *)(ui_widget_base + 0xbb4));
  }
  return ui_system_return_value;
}

void ui_system_validate_drag_state(void)

{
  uint64_t ui_system_event_id;
  longlong ui_widget_base;
  uint ui_system_task_id;
  ulonglong ui_system_register_long;
  ulonglong ui_temp_ulong;
  longlong ui_system_register_long;
  
  ui_system_set_clip_region_property();
  ui_loop_counter = ui_system_register;
  if ((int)ui_system_register < *(int *)(ui_widget_base + 0xbb4)) {
    do {
      ui_system_event_id = ui_system_update_clip_state(8);
      *(uint64_t *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8)) = ui_system_event_id;
      if (*(longlong *)(ui_loop_counter + *(longlong *)(ui_system_register + UI_REGISTER_Y_OFFSETd8)) == 0) {
        ui_system_set_clip_region_property();
      }
      ui_system_task_id = (int)ui_system_register + 1;
      ui_system_register = (ulonglong)ui_system_task_id;
      ui_loop_counter = ui_loop_counter + 8;
    } while ((int)ui_system_task_id < *(int *)(ui_widget_base + 0xbb4));
  }
  return ui_system_return_value;
}

void ui_system_cleanup_drag_resources(void)

{
  return ui_system_return_value;
}

void ui_system_handle_drag_callback(longlong ui_callback,int ui_event_type)

{
  longlong ui_long_counter;
  longlong ui_event_index;
  
  ui_event_index = (longlong)ui_event_type;
  if (*(int *)(ui_callback + UI_REGISTER_Y_OFFSET80) != 0) {
    ui_system_release_clip_resources(*(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETa8));
    ui_event_index = 0;
    *(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETa8) = 0;
    if (*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETb0) != 0) {
      ui_long_counter = ui_event_index;
      if (0 < ui_event_index) {
        do {
          ui_system_release_clip_resources(*(uint64_t *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETb0) + ui_long_counter * 8));
          *(uint64_t *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETb0) + ui_long_counter * 8) = 0;
          ui_long_counter = ui_long_counter + 1;
        } while (ui_long_counter < ui_event_index);
      }
      ui_system_release_clip_resources(*(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETb0));
      *(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETb0) = 0;
    }
    if (*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETb8) != 0) {
      ui_long_counter = ui_event_index;
      if (0 < ui_event_index) {
        do {
          ui_system_release_clip_resources(*(uint64_t *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETb8) + ui_long_counter * 8));
          *(uint64_t *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETb8) + ui_long_counter * 8) = 0;
          ui_long_counter = ui_long_counter + 1;
        } while (ui_long_counter < ui_event_index);
      }
      ui_system_release_clip_resources(*(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETb8));
      *(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETb8) = 0;
    }
    if (*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETc0) != 0) {
      ui_long_counter = ui_event_index;
      if (0 < ui_event_index) {
        do {
          ui_system_release_clip_resources(*(uint64_t *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETc0) + ui_long_counter * 8));
          *(uint64_t *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETc0) + ui_long_counter * 8) = 0;
          ui_long_counter = ui_long_counter + 1;
        } while (ui_long_counter < ui_event_index);
      }
      ui_system_release_clip_resources(*(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETc0));
      *(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETc0) = 0;
    }
    if (*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETc8) != 0) {
      ui_long_counter = ui_event_index;
      if (0 < ui_event_index) {
        do {
          ui_system_release_clip_resources(*(uint64_t *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETc8) + ui_long_counter * 8));
          *(uint64_t *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETc8) + ui_long_counter * 8) = 0;
          ui_long_counter = ui_long_counter + 1;
        } while (ui_long_counter < ui_event_index);
      }
      ui_system_release_clip_resources(*(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETc8));
      *(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETc8) = 0;
    }
    if (*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd0) != 0) {
      ui_long_counter = ui_event_index;
      if (0 < ui_event_index) {
        do {
          ui_system_release_clip_resources(*(uint64_t *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd0) + ui_long_counter * 8));
          *(uint64_t *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd0) + ui_long_counter * 8) = 0;
          ui_long_counter = ui_long_counter + 1;
        } while (ui_long_counter < ui_event_index);
      }
      ui_system_release_clip_resources(*(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETd0));
      *(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETd0) = 0;
    }
    if (*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd8) != 0) {
      if (0 < ui_event_index) {
        do {
          ui_system_release_clip_resources(*(uint64_t *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd8) + ui_event_index * 8));
          *(uint64_t *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETd8) + ui_event_index * 8) = 0;
          ui_event_index = ui_event_index + 1;
        } while (ui_event_index < ui_event_index);
      }
      ui_system_release_clip_resources(*(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETd8));
      *(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETd8) = 0;
    }
  }
  return ui_system_return_value;
}

void ui_system_finalize_drag_operation(void)

{
  longlong ui_widget_base;
  longlong ui_long_counter;
  longlong ui_event_index;
  longlong ui_system_register_long;
  
  ui_system_release_clip_resources();
  ui_event_index = 0;
  *(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETa8) = 0;
  if (*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETb0) != 0) {
    ui_long_counter = ui_event_index;
    if (0 < ui_system_register) {
      do {
        ui_system_release_clip_resources(*(uint64_t *)(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETb0) + ui_long_counter * 8));
        *(uint64_t *)(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETb0) + ui_long_counter * 8) = 0;
        ui_long_counter = ui_long_counter + 1;
      } while (ui_long_counter < ui_system_register);
    }
    ui_system_release_clip_resources(*(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETb0));
    *(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETb0) = 0;
  }
  if (*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETb8) != 0) {
    ui_long_counter = ui_event_index;
    if (0 < ui_system_register) {
      do {
        ui_system_release_clip_resources(*(uint64_t *)(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETb8) + ui_long_counter * 8));
        *(uint64_t *)(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETb8) + ui_long_counter * 8) = 0;
        ui_long_counter = ui_long_counter + 1;
      } while (ui_long_counter < ui_system_register);
    }
    ui_system_release_clip_resources(*(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETb8));
    *(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETb8) = 0;
  }
  if (*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETc0) != 0) {
    ui_long_counter = ui_event_index;
    if (0 < ui_system_register) {
      do {
        ui_system_release_clip_resources(*(uint64_t *)(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETc0) + ui_long_counter * 8));
        *(uint64_t *)(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETc0) + ui_long_counter * 8) = 0;
        ui_long_counter = ui_long_counter + 1;
      } while (ui_long_counter < ui_system_register);
    }
    ui_system_release_clip_resources(*(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETc0));
    *(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETc0) = 0;
  }
  if (*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETc8) != 0) {
    ui_long_counter = ui_event_index;
    if (0 < ui_system_register) {
      do {
        ui_system_release_clip_resources(*(uint64_t *)(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETc8) + ui_long_counter * 8));
        *(uint64_t *)(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETc8) + ui_long_counter * 8) = 0;
        ui_long_counter = ui_long_counter + 1;
      } while (ui_long_counter < ui_system_register);
    }
    ui_system_release_clip_resources(*(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETc8));
    *(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETc8) = 0;
  }
  if (*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETd0) != 0) {
    ui_long_counter = ui_event_index;
    if (0 < ui_system_register) {
      do {
        ui_system_release_clip_resources(*(uint64_t *)(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETd0) + ui_long_counter * 8));
        *(uint64_t *)(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETd0) + ui_long_counter * 8) = 0;
        ui_long_counter = ui_long_counter + 1;
      } while (ui_long_counter < ui_system_register);
    }
    ui_system_release_clip_resources(*(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETd0));
    *(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETd0) = 0;
  }
  if (*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETd8) != 0) {
    if (0 < ui_system_register) {
      do {
        ui_system_release_clip_resources(*(uint64_t *)(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETd8) + ui_event_index * 8));
        *(uint64_t *)(*(longlong *)(ui_widget_base + UI_REGISTER_Y_OFFSETd8) + ui_event_index * 8) = 0;
        ui_event_index = ui_event_index + 1;
      } while (ui_event_index < ui_system_register);
    }
    ui_system_release_clip_resources(*(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETd8));
    *(uint64_t *)(ui_widget_base + UI_REGISTER_Y_OFFSETd8) = 0;
  }
  return ui_system_return_value;
}

void ui_system_reset_drag_state(void)

{
  return ui_system_return_value;
}

void ui_system_process_drag_input(longlong ui_callback,uint64_t ui_event_type)

{
  uint ui_system_event_id;
  
  ui_system_event_id = 0;
  if (*(int *)(ui_callback + 0x2be0) == 0) {
    ui_system_process_callback(*(int **)(ui_callback + UI_NETWORK_RESOURCE_TYPEa0));
    ui_system_process_clip_optimization_callback(ui_callback,ui_event_type,*(uint64_t *)(ui_callback + UI_REGISTER_Y_OFFSETe0),
                  *(uint32_t *)(ui_callback + UI_REGISTER_Y_OFFSET8c));
    if (*(int *)(ui_callback + UI_REGISTER_Y_OFFSET8c) != 0) {
      do {
        ReleaseSemaphore(*(uint64_t *)(*(longlong *)(ui_callback + UI_REGISTER_Y_OFFSETf8) + (ulonglong)ui_system_event_id * 8),1);
        ui_system_event_id = ui_system_event_id + 1;
      } while (ui_system_event_id < *(uint *)(ui_callback + UI_REGISTER_Y_OFFSET8c));
    }
    ui_system_update_clip_optimization_state(ui_callback,ui_event_type,0);
                    // WARNING: Could not recover jumptable at 0x000180671494. Too many branches
                    // WARNING: Treating indirect jump as call
    WaitForSingleObject(*(uint64_t *)(ui_callback + UI_OFFSET_6800),UI_BIT_MASK_32BIT_FULL);
    return ui_system_return_value;
  }
  memset(**(longlong **)(ui_callback + UI_REGISTER_Y_OFFSETb0) + UI_GUARD_CHECK_TYPE_2,0x7f,(longlong)(**(int **)(ui_callback + UI_NETWORK_RESOURCE_TYPEa0) + 5))
  ;
}

int ui_initialize_system(longlong ui_callback,longlong ui_event_type,longlong ui_event_data,short *ui_event_flags,short *ui_parameter_value,
                 int ui_parameter_value,int ui_parameter_value,int *ui_parameter_value,uint64_t *ui_parameter_value,longlong *ui_callback_context0,
                 short *ui_callback1)

{
  short short_value;
  uint32_t ui_system_task_id;
  int ui_result_status;
  short *pui_component_value;
  int ui_result_status;
  uint ui_loop_counter;
  short ui_component;
  ulonglong ui_temp_ulong;
  int ui_event_loop_counter;
  longlong long_counter_one;
  ulonglong ui_event_id_secondary;
  int *ui_ptr_int_counter;
  short short_value4;
  longlong long_counter5;
  ulonglong ui_event_id6;
  int ui_error_code;
  int ui_stack_int;
  uint ui_stack_array [2];
  ulonglong ui_stack_variable_uint_a0;
  longlong ui_stack_parameter_long;
  ulonglong ui_stack_extended_buffer_size;
  longlong ui_stack_parameter_long;
  
  pui_component_value = ui_parameter_value;
  long_counter5 = *(longlong *)(ui_callback + UI_OFFSET_3098);
  ui_event_loop_counter = *(int *)(ui_callback + 0x23dc);
  ui_error_code = *(int *)(ui_callback + 0x23d8);
  ui_stack_int = 0;
  ui_stack_parameter_long = (longlong)*(int *)(ui_event_type + UI_OFFSET_80) + **(longlong **)(ui_event_type + UI_OFFSET_72);
  ui_system_task_id = *(uint32_t *)(ui_event_type + 0x54);
  ui_result_status = *(int *)(ui_callback + UI_OFFSET_3070);
  ui_stack_parameter_long = *(longlong *)(ui_callback + 0x2398);
  ui_stack_parameter_long = *(longlong *)(ui_callback + 0x23a0);
  ui_stack_int = 0;
  short_value = *ui_callback1;
  ui_component = ui_callback1[1];
  ui_result_status = (int)ui_event_flags[1];
  if ((int)ui_event_flags[1] < *(int *)(ui_callback + 0x23d0)) {
    ui_result_status = *(int *)(ui_callback + 0x23d0);
  }
  ui_result_status = (int)(short)ui_result_status;
  if (*(int *)(ui_callback + 0x23d4) < (int)(short)ui_result_status) {
    ui_result_status = *(int *)(ui_callback + 0x23d4);
  }
  short_value4 = (short)ui_result_status;
  ui_event_flags[1] = short_value4;
  ui_result_status = (int)*ui_event_flags;
  if (*ui_event_flags < ui_error_code) {
    ui_result_status = ui_error_code;
  }
  ui_error_code = (int)(short)ui_result_status;
  if (ui_event_loop_counter < (short)ui_result_status) {
    ui_error_code = ui_event_loop_counter;
  }
  ui_stack_parameter_long = (longlong)(ui_component >> 3);
  ui_component = (short)ui_error_code;
  *ui_event_flags = ui_component;
  *ui_parameter_value = 0;
  *ui_parameter_value = ui_component;
  ui_parameter_value[1] = short_value4;
  ui_stack_parameter_long = (longlong)(short_value >> 3);
  long_counter_one = *(int *)(ui_event_data + UI_OFFSET_32) + long_counter5 + (longlong)(ui_component * ui_result_status) + (longlong)short_value4;
  ui_event_loop_counter = *(int *)(ui_stack_parameter_long + (ui_component - ui_stack_parameter_long) * 4);
  ui_error_code = *(int *)(ui_stack_parameter_long + (short_value4 - ui_stack_parameter_long) * 4);
  ui_stack_parameter_long = long_counter_one;
  ui_result_status = (*(ui_error_code *)*ui_parameter_value)(ui_stack_parameter_long,ui_system_task_id,long_counter_one,ui_result_status);
  ui_event_id_secondary = 1;
  ui_parameter_value._data_offset_ = ui_result_status + ((ui_event_loop_counter + ui_error_code) * ui_parameter_value + UI_STACK_SIZE_128 >> 8);
  long_counter5 = *(longlong *)(ui_callback + UI_STACK_SIZE_5648) + (longlong)(*(int *)(ui_callback + 0x2354) * ui_parameter_value) * 8;
  ui_loop_counter = *(int *)(ui_callback + 0x2350) / *(int *)(ui_callback + 0x2354) - ui_parameter_value;
  ui_stack_parameter_long = long_counter5;
  if (0 < (int)ui_loop_counter) {
    ui_loop_counter = 0;
    ui_stack_extended_buffer_size = (ulonglong)ui_loop_counter;
    ui_stack_variable_uint_a0 = 0;
    ui_event_loop_counter = 0;
    ui_event_id6 = ui_event_id_secondary;
    do {
      ui_error_code = 0;
      if (0 < *(int *)(ui_callback + 0x2354)) {
        ui_ptr_int_counter = (int *)(ui_event_id_secondary * 8 + 4 + long_counter5);
        do {
          ui_event_loop_counter = (int)(short)ui_ptr_int_counter[-1] + (int)*pui_component_value;
          ui_result_status = (int)*(short *)((longlong)ui_ptr_int_counter + -2) + (int)pui_component_value[1];
          if ((((*(int *)(ui_callback + 0x23d0) < ui_result_status) && (ui_result_status < *(int *)(ui_callback + 0x23d4))) &&
              (*(int *)(ui_callback + 0x23d8) < ui_event_loop_counter)) &&
             (((ui_event_loop_counter < *(int *)(ui_callback + 0x23dc) &&
               (ui_stack_array[0] = (*(ui_error_code *)*ui_parameter_value)(ui_stack_parameter_long,ui_system_task_id,*ui_ptr_int_counter + ui_stack_parameter_long,ui_result_status),
               ui_loop_counter = ui_stack_variable_uint_a0, ui_stack_array[0] < (uint)ui_parameter_value)) &&
              (ui_stack_array[0] =
                    ui_stack_array[0] +
                    ((*(int *)(ui_stack_parameter_long + ((short)ui_event_loop_counter - ui_stack_parameter_long) * 4) +
                     *(int *)(ui_stack_parameter_long + ((short)ui_result_status - ui_stack_parameter_long) * 4)) * ui_parameter_value + UI_STACK_SIZE_128 >> 8),
              ui_stack_array[0] < (uint)ui_parameter_value)))) {
            ui_loop_counter = ui_event_id_secondary;
            ui_stack_int = (int)ui_event_id6;
            ui_parameter_value._data_offset_ = ui_stack_array[0];
            ui_stack_variable_uint_a0 = ui_event_id_secondary;
          }
          ui_event_id6 = (ulonglong)((int)ui_event_id6 + 1);
          ui_event_id_secondary = ui_event_id_secondary + 1;
          ui_ptr_int_counter = ui_ptr_int_counter + 2;
          ui_error_code = ui_error_code + 1;
          long_counter_one = ui_stack_parameter_long;
          long_counter5 = ui_stack_parameter_long;
          ui_event_loop_counter = ui_stack_int;
        } while (ui_error_code < *(int *)(ui_callback + 0x2354));
      }
      if (ui_event_loop_counter == ui_stack_int) {
        if (long_counter_one == ui_stack_parameter_long) {
          *ui_parameter_value = *ui_parameter_value + 1;
        }
      }
      else {
        *pui_component_value = *pui_component_value + *(short *)(long_counter5 + ui_loop_counter * 8);
        pui_component_value[1] = pui_component_value[1] + *(short *)(long_counter5 + 2 + ui_loop_counter * 8);
        long_counter_one = long_counter_one + *(int *)(long_counter5 + 4 + ui_loop_counter * 8);
        ui_stack_int = ui_event_loop_counter;
        ui_stack_parameter_long = long_counter_one;
      }
      ui_stack_extended_buffer_size = ui_stack_extended_buffer_size - 1;
    } while (ui_stack_extended_buffer_size != 0);
    ui_stack_extended_buffer_size = 0;
  }
  ui_event_loop_counter = 0;
  if (ui_callback_primary != (longlong *)UI_ZERO_OFFSET) {
    ui_event_loop_counter = (*(int *)(ui_callback_primary[1] +
                      ((longlong)((int)(short)(pui_component_value[1] << 3) - (int)ui_callback1[1]) >> 1) * 4) +
             *(int *)(*ui_callback_primary + ((longlong)((int)(short)(*pui_component_value << 3) - (int)*ui_callback1) >> 1) * 4
                     )) * *(int *)(ui_callback + 0x2358) + UI_STACK_SIZE_128 >> 8;
  }
  ui_error_code = (*(ui_error_code *)ui_parameter_value[1])(ui_stack_parameter_long,ui_system_task_id,long_counter_one,ui_result_status,ui_stack_array);
  return return ui_error_code + ui_event_loop_counter;
}

void ui_create_window_manager(longlong ui_callback,longlong ui_event_type,longlong ui_event_data,short *ui_event_flags,short *ui_parameter_value,
                  int ui_parameter_value,int ui_parameter_value,int *ui_parameter_value,uint64_t *ui_parameter_value,longlong *ui_callback_context0,
                  short *ui_callback1)

{
  short *pshort_value;
  longlong ui_event_index;
  short ui_component;
  int ui_result_status;
  uint ui_loop_counter;
  uint *ui_callback_ptr;
  short ui_component;
  longlong ui_event_index;
  int ui_event_loop_counter;
  int ui_event_validation_counter;
  uint ui_event_id_secondary;
  longlong ui_context_pointer;
  longlong ui_window_handle;
  short short_value5;
  int *ui_ptr_int_counter;
  longlong ui_loop_counter_secondary;
  uint8_t ui_stack_array [32];
  uint *pui_stack_callback_data;
  int ui_stack_integer_var_108;
  int ui_stack_integer_var_104;
  uint32_t ui_stack_variable_uint_100;
  int ui_stack_integer_var_fc;
  int ui_stack_integer_var_f8;
  uint ui_stack_temp_f4;
  int ui_stack_integer_var_f0;
  longlong ui_stack_parameter_longe8;
  longlong ui_stack_layout_parameter;
  uint64_t *ui_stack_pointer_widget_control;
  longlong ui_stack_parameter_longd0;
  longlong ui_stack_parameter_longc8;
  longlong ui_stack_parameter_longc0;
  longlong ui_stack_parameter_longb8;
  int *pui_stack_integer_var_b0;
  ulonglong ui_stack_variable_uint_a8;
  longlong ui_stack_parameter_longa0;
  longlong ui_stack_parameter_long;
  short *psStack_88;
  longlong ui_stack_parameter_long;
  uint ui_stack_array [4];
  ulonglong ui_stack_variable_uint_50;
  
  ui_stack_variable_uint_50 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_event_loop_counter = *(int *)(ui_callback + 0x23d8);
  ui_event_validation_counter = *(int *)(ui_callback + 0x23dc);
  ui_loop_counter_secondary = *(longlong *)(ui_callback + UI_OFFSET_3098);
  ui_component = *ui_callback1;
  ui_component = ui_callback1[1];
  ui_stack_parameter_longc8 = *(longlong *)(ui_callback + 0x2398);
  pui_stack_integer_var_b0 = ui_parameter_value;
  ui_stack_pointer_widget_control = ui_parameter_value;
  ui_event_index = (longlong)*(int *)(ui_event_type + UI_OFFSET_80) + **(longlong **)(ui_event_type + UI_OFFSET_72);
  ui_stack_variable_uint_100 = *(uint32_t *)(ui_event_type + 0x54);
  ui_stack_integer_var_104 = *(int *)(ui_callback + UI_OFFSET_3070);
  ui_stack_integer_var_f0 = 0;
  ui_stack_integer_var_fc = 0;
  ui_stack_integer_var_f8 = 0;
  ui_stack_parameter_longd0 = *(longlong *)(ui_callback + 0x23a0);
  psStack_88 = ui_callback1;
  ui_result_status = (int)ui_event_flags[1];
  if ((int)ui_event_flags[1] < *(int *)(ui_callback + 0x23d0)) {
    ui_result_status = *(int *)(ui_callback + 0x23d0);
  }
  ui_result_status = (int)(short)ui_result_status;
  if (*(int *)(ui_callback + 0x23d4) < (int)(short)ui_result_status) {
    ui_result_status = *(int *)(ui_callback + 0x23d4);
  }
  short_value5 = (short)ui_result_status;
  ui_event_flags[1] = short_value5;
  ui_result_status = (int)*ui_event_flags;
  if (*ui_event_flags < ui_event_loop_counter) {
    ui_result_status = ui_event_loop_counter;
  }
  ui_stack_parameter_longb8 = (longlong)(ui_component >> 3);
  ui_event_loop_counter = (int)(short)ui_result_status;
  if (ui_event_validation_counter < (short)ui_result_status) {
    ui_event_loop_counter = ui_event_validation_counter;
  }
  ui_component = (short)ui_event_loop_counter;
  *ui_event_flags = ui_component;
  *ui_parameter_value = 0;
  *ui_parameter_value = ui_component;
  ui_parameter_value[1] = short_value5;
  ui_stack_parameter_longc0 = (longlong)(ui_component >> 3);
  ui_context_pointer = *(int *)(ui_event_data + UI_OFFSET_32) + ui_loop_counter_secondary + (longlong)(ui_component * ui_stack_integer_var_104) + (longlong)short_value5;
  ui_event_loop_counter = *(int *)(ui_stack_parameter_longc8 + (ui_component - ui_stack_parameter_longc0) * 4);
  ui_event_validation_counter = *(int *)(ui_stack_parameter_longd0 + (short_value5 - ui_stack_parameter_longb8) * 4);
  ui_stack_parameter_longe8 = ui_context_pointer;
  ui_stack_layout_parameter = ui_event_index;
  ui_stack_parameter_longa0 = ui_callback;
  ui_stack_parameter_long = ui_context_pointer;
  ui_result_status = (*(ui_error_code *)*ui_parameter_value)(ui_event_index,ui_stack_variable_uint_100,ui_context_pointer,ui_stack_integer_var_104);
  ui_event_id_secondary = ((ui_event_loop_counter + ui_event_validation_counter) * ui_parameter_value + UI_STACK_SIZE_128 >> 8) + ui_result_status;
  ui_event_loop_counter = 1;
  ui_loop_counter_secondary = *(longlong *)(ui_callback + UI_STACK_SIZE_5648) + (longlong)(ui_parameter_value * *(int *)(ui_callback + 0x2354)) * 8;
  ui_loop_counter = *(int *)(ui_callback + 0x2350) / *(int *)(ui_callback + 0x2354) - ui_parameter_value;
  ui_stack_parameter_long = ui_loop_counter_secondary;
  if (0 < (int)ui_loop_counter) {
    ui_window_handle = 1;
    ui_stack_variable_uint_a8 = (ulonglong)ui_loop_counter;
    ui_event_index = ui_stack_parameter_longc8;
    do {
      pshort_value = (short *)(ui_loop_counter_secondary + ui_window_handle * 8);
      ui_stack_integer_var_108 = 0;
      if (((*(int *)(ui_callback + 0x23d0) < (int)pshort_value[9] + (int)ui_parameter_value[1] &&
           (int)pshort_value[4] + (int)*ui_parameter_value < *(int *)(ui_callback + 0x23dc)) &&
          (int)pshort_value[THIRTEEN_VALUE] + (int)ui_parameter_value[1] < *(int *)(ui_callback + 0x23d4)) &&
          *(int *)(ui_callback + 0x23d8) < (int)*pshort_value + (int)*ui_parameter_value) {
        if (0 < *(int *)(ui_callback + 0x2354)) {
          do {
            ui_stack_parameter_long = *(int *)(ui_loop_counter_secondary + 4 + ui_window_handle * 8) + ui_context_pointer;
            ui_stack_parameter_long = *(int *)(ui_loop_counter_secondary + 12 + ui_window_handle * 8) + ui_context_pointer;
            ui_stack_parameter_long = *(int *)(ui_loop_counter_secondary + UI_SHIFT_AMOUNT_20 + ui_window_handle * 8) + ui_context_pointer;
            ui_stack_parameter_long = *(int *)(ui_loop_counter_secondary + UI_OFFSET_28 + ui_window_handle * 8) + ui_context_pointer;
            pui_stack_callback_data = ui_stack_array;
            (*(ui_error_code *)ui_stack_pointer_widget_control[8])(ui_stack_layout_parameter,ui_stack_variable_uint_100,&ui_stack_parameter_long,ui_stack_integer_var_104);
            ui_callback_ptr = ui_stack_array;
            ui_context_pointer = 4;
            do {
              if (*ui_callback_ptr < ui_event_id_secondary) {
                ui_loop_counter = ((*(int *)(ui_event_index + ((short)(*(short *)(ui_loop_counter_secondary + ui_window_handle * 8) + *ui_parameter_value) -
                                           ui_stack_parameter_longc0) * 4) +
                         *(int *)(ui_stack_parameter_longd0 +
                                 ((short)(*(short *)(ui_loop_counter_secondary + 2 + ui_window_handle * 8) + ui_parameter_value[1]) -
                                 ui_stack_parameter_longb8) * 4)) * ui_parameter_value + UI_STACK_SIZE_128 >> 8) + *ui_callback_ptr;
                *ui_callback_ptr = ui_loop_counter;
                if (ui_loop_counter < ui_event_id_secondary) {
                  ui_event_id_secondary = ui_loop_counter;
                  ui_stack_integer_var_fc = ui_event_loop_counter;
                }
              }
              ui_callback_ptr = ui_callback_ptr + 1;
              ui_event_loop_counter = ui_event_loop_counter + 1;
              ui_window_handle = ui_window_handle + 1;
              ui_context_pointer = ui_context_pointer + -1;
            } while (ui_context_pointer != 0);
            ui_stack_integer_var_108 = ui_stack_integer_var_108 + 4;
            ui_context_pointer = ui_stack_parameter_longe8;
            ui_callback = ui_stack_parameter_longa0;
          } while (ui_stack_integer_var_108 < *(int *)(ui_stack_parameter_longa0 + 0x2354));
        }
      }
      else if (0 < *(int *)(ui_callback + 0x2354)) {
        ui_ptr_int_counter = (int *)(pshort_value + 2);
        do {
          ui_event_validation_counter = (int)(short)ui_ptr_int_counter[-1] + (int)*ui_parameter_value;
          ui_result_status = (int)*(short *)((longlong)ui_ptr_int_counter + -2) + (int)ui_parameter_value[1];
          if ((((*(int *)(ui_callback + 0x23d0) < ui_result_status) && (ui_result_status < *(int *)(ui_callback + 0x23d4))) &&
              (*(int *)(ui_callback + 0x23d8) < ui_event_validation_counter)) &&
             (((ui_event_validation_counter < *(int *)(ui_callback + 0x23dc) &&
               (ui_stack_temp_f4 = (*(ui_error_code *)*ui_stack_pointer_widget_control)
                                      (ui_stack_layout_parameter,ui_stack_variable_uint_100,*ui_ptr_int_counter + ui_stack_parameter_longe8,ui_stack_integer_var_104),
               ui_stack_temp_f4 < ui_event_id_secondary)) &&
              (ui_stack_temp_f4 = ui_stack_temp_f4 +
                           ((*(int *)(ui_stack_parameter_longc8 + ((short)ui_event_validation_counter - ui_stack_parameter_longc0) * 4) +
                            *(int *)(ui_stack_parameter_longd0 + ((short)ui_result_status - ui_stack_parameter_longb8) * 4)) * ui_parameter_value + UI_STACK_SIZE_128
                           >> 8), ui_stack_temp_f4 < ui_event_id_secondary)))) {
            ui_event_id_secondary = ui_stack_temp_f4;
            ui_stack_integer_var_fc = ui_event_loop_counter;
          }
          ui_event_loop_counter = ui_event_loop_counter + 1;
          ui_stack_integer_var_108 = ui_stack_integer_var_108 + 1;
          ui_window_handle = ui_window_handle + 1;
          ui_ptr_int_counter = ui_ptr_int_counter + 2;
          ui_context_pointer = ui_stack_parameter_longe8;
          ui_loop_counter_secondary = ui_stack_parameter_long;
          ui_event_index = ui_stack_parameter_longc8;
        } while (ui_stack_integer_var_108 < *(int *)(ui_callback + 0x2354));
      }
      if (ui_stack_integer_var_fc == ui_stack_integer_var_f8) {
        if (ui_context_pointer == ui_stack_parameter_long) {
          *pui_stack_integer_var_b0 = *pui_stack_integer_var_b0 + 1;
        }
      }
      else {
        ui_event_index = ui_loop_counter_secondary + (longlong)ui_stack_integer_var_fc * 8;
        *ui_parameter_value = *ui_parameter_value + *(short *)(ui_loop_counter_secondary + (longlong)ui_stack_integer_var_fc * 8);
        ui_parameter_value[1] = ui_parameter_value[1] + *(short *)(ui_event_index + 2);
        ui_context_pointer = ui_context_pointer + *(int *)(ui_event_index + 4);
        ui_stack_integer_var_f8 = ui_stack_integer_var_fc;
        ui_stack_parameter_longe8 = ui_context_pointer;
      }
      ui_stack_variable_uint_a8 = ui_stack_variable_uint_a8 - 1;
    } while (ui_stack_variable_uint_a8 != 0);
    ui_stack_variable_uint_a8 = 0;
    ui_event_index = ui_stack_layout_parameter;
  }
  if (ui_callback_primary != (longlong *)UI_ZERO_OFFSET) {
    ui_stack_integer_var_f0 = (*(int *)(ui_callback_primary[1] +
                         ((longlong)((int)(short)(ui_parameter_value[1] << 3) - (int)psStack_88[1]) >> 1) * 4)
                + *(int *)(*ui_callback_primary +
                          ((longlong)((int)(short)(*ui_parameter_value << 3) - (int)*psStack_88) >> 1) * 4)) *
                *(int *)(ui_callback + 0x2358) + UI_STACK_SIZE_128 >> 8;
  }
  pui_stack_callback_data = &ui_stack_temp_f4;
  (*(ui_error_code *)ui_stack_pointer_widget_control[1])(ui_event_index,ui_stack_variable_uint_100,ui_context_pointer,ui_stack_integer_var_104);
  RenderUIComponent(ui_stack_variable_uint_50 ^ (ulonglong)ui_stack_array);
}

int ui_initialize_event_system(longlong ui_callback,longlong ui_event_type,longlong ui_event_data,short *ui_event_flags,int ui_parameter_value,
                 int ui_parameter_value,uint64_t *ui_parameter_value,longlong *ui_parameter_value,short *ui_parameter_value)

{
  short short_value;
  short ui_component;
  uint ui_loop_counter;
  uint32_t ui_loop_counter;
  longlong ui_event_index;
  int ui_result_status;
  int ui_event_loop_counter;
  int ui_event_validation_counter;
  int ui_event_processing_counter;
  ulonglong ui_task_identifier;
  int ui_resource_management_counter;
  int ui_widget_id;
  longlong ui_loop_counter_primary;
  longlong ui_loop_counter_secondary;
  longlong ui_pointer_offset;
  longlong long_counter9;
  uint ui_task_index0;
  uint ui_stack_unsigned_array [2];
  
  ui_loop_counter = *(uint *)(ui_callback + UI_OFFSET_3070);
  short_value = *ui_event_flags;
  ui_component = ui_event_flags[1];
  ui_pointer_offset = (longlong)*(int *)(ui_event_type + UI_OFFSET_80) + **(longlong **)(ui_event_type + UI_OFFSET_72);
  ui_loop_counter = *(uint32_t *)(ui_event_type + 0x54);
  ui_event_index = *(longlong *)(ui_callback + 0x23a0);
  ui_loop_counter_primary = (longlong)*(int *)(ui_event_data + UI_OFFSET_32) + *(longlong *)(ui_callback + UI_OFFSET_3098);
  ui_event_index = *(longlong *)(ui_callback + 0x2398);
  ui_component = *ui_parameter_value;
  ui_component = ui_parameter_value[1];
  *(short *)(ui_event_data + UI_MEMORY_ALLOC_SIZE) = short_value;
  *(short *)(ui_event_data + 0x32) = ui_component;
  long_counter9 = (int)((int)short_value * ui_loop_counter) + ui_loop_counter_primary + (longlong)ui_component;
  ui_widget_id = *(int *)(ui_event_index + ((longlong)short_value - (longlong)(ui_component >> 3)) * 4);
  ui_event_validation_counter = *(int *)(ui_event_index + ((longlong)ui_component - (longlong)(ui_component >> 3)) * 4);
  ui_result_status = (*(ui_error_code *)*ui_parameter_value)(ui_pointer_offset,ui_loop_counter,long_counter9,ui_loop_counter);
  ui_task_index0 = ((ui_widget_id + ui_event_validation_counter) * ui_parameter_value + UI_STACK_SIZE_128 >> 8) + ui_result_status;
  ui_widget_id = ui_component - ui_parameter_value;
  if (ui_component - ui_parameter_value < *(int *)(ui_callback + 0x23d0)) {
    ui_widget_id = *(int *)(ui_callback + 0x23d0);
  }
  ui_event_validation_counter = ui_component + ui_parameter_value;
  if (*(int *)(ui_callback + 0x23d4) < ui_component + ui_parameter_value) {
    ui_event_validation_counter = *(int *)(ui_callback + 0x23d4);
  }
  ui_result_status = short_value - ui_parameter_value;
  if (short_value - ui_parameter_value < *(int *)(ui_callback + 0x23d8)) {
    ui_result_status = *(int *)(ui_callback + 0x23d8);
  }
  ui_event_processing_counter = short_value + ui_parameter_value;
  if (*(int *)(ui_callback + 0x23dc) < short_value + ui_parameter_value) {
    ui_event_processing_counter = *(int *)(ui_callback + 0x23dc);
  }
  if (ui_result_status < ui_event_processing_counter) {
    ui_loop_counter_primary = (longlong)ui_widget_id + ui_loop_counter_primary + (int)(ui_result_status * ui_loop_counter);
    ui_task_identifier = (longlong)(int)ui_loop_counter;
    do {
      if (ui_widget_id < ui_event_validation_counter) {
        ui_loop_counter_secondary = ui_loop_counter_primary;
        ui_resource_management_counter = ui_widget_id;
        do {
          ui_event_loop_counter = (*(ui_error_code *)*ui_parameter_value)(ui_pointer_offset,ui_loop_counter,ui_loop_counter_secondary,ui_task_identifier & UI_BIT_MASK_32BIT_FULL);
          ui_stack_unsigned_array[0] =
               ui_event_loop_counter + ((*(int *)(ui_event_index + ((longlong)(short)ui_resource_management_counter - (longlong)(ui_component >> 3)) * 4) +
                         *(int *)(ui_event_index + ((longlong)(short)ui_result_status - (longlong)(ui_component >> 3)) * 4)) *
                         ui_parameter_value + UI_STACK_SIZE_128 >> 8);
          if (ui_stack_unsigned_array[0] < ui_task_index0) {
            *(short *)(ui_event_data + UI_MEMORY_ALLOC_SIZE) = (short)ui_result_status;
            *(short *)(ui_event_data + 0x32) = (short)ui_resource_management_counter;
            long_counter9 = ui_loop_counter_secondary;
            ui_task_index0 = ui_stack_unsigned_array[0];
          }
          ui_task_identifier = (ulonglong)ui_loop_counter;
          ui_loop_counter_secondary = ui_loop_counter_secondary + 1;
          ui_resource_management_counter = ui_resource_management_counter + 1;
        } while (ui_resource_management_counter < ui_event_validation_counter);
      }
      ui_loop_counter_primary = ui_loop_counter_primary + (int)ui_loop_counter;
      ui_result_status = ui_result_status + 1;
    } while (ui_result_status < ui_event_processing_counter);
  }
  if (ui_parameter_value == (longlong *)UI_ZERO_OFFSET) {
    ui_widget_id = 0;
  }
  else {
    ui_widget_id = (*(int *)(ui_parameter_value[1] +
                      ((longlong)((int)(short)(*(short *)(ui_event_data + 0x32) << 3) - (int)ui_parameter_value[1])
                      >> 1) * 4) +
             *(int *)(*ui_parameter_value +
                     ((longlong)((int)(short)(*(short *)(ui_event_data + UI_MEMORY_ALLOC_SIZE) << 3) - (int)*ui_parameter_value) >> 1
                     ) * 4)) * *(int *)(ui_callback + 0x2358) + UI_STACK_SIZE_128 >> 8;
  }
  ui_event_validation_counter = (*(ui_error_code *)ui_parameter_value[1])(ui_pointer_offset,ui_loop_counter,long_counter9,ui_loop_counter,ui_stack_unsigned_array);
  return return ui_event_validation_counter + ui_widget_id;
}

void ui_setup_rendering_context(longlong ui_callback,longlong ui_event_type,longlong ui_event_data,short *ui_event_flags,int ui_parameter_value,
                  int ui_parameter_value,uint64_t *ui_parameter_value,uint64_t ui_parameter_value,short *ui_parameter_value)

{
  short short_value;
  short ui_component;
  longlong ui_event_index;
  int ui_result_status;
  short ui_component;
  int ui_event_loop_counter;
  uint ui_event_id1;
  uint ui_event_id_secondary;
  ulonglong ui_task_identifier;
  longlong ui_window_handle;
  longlong long_counter5;
  longlong ui_loop_counter_primary;
  uint8_t ui_stack_array [32];
  uint *pui_stack_unsigned_data_secondary;
  uint ui_control_status;
  int ui_stack_integer_var_b4;
  uint ui_stack_temp_b0;
  uint32_t ui_stack_color_datac;
  int ui_stack_temp_variable_a8;
  int ui_stack_temp_variable_a4;
  longlong ui_stack_parameter_longa0;
  uint64_t *ui_stack_pointer_buffer_start;
  longlong ui_stack_parameter_long;
  ulonglong ui_stack_uint_callback_count_primary;
  short *psStack_68;
  uint ui_stack_array [4];
  ulonglong ui_stack_variable_uint_50;
  
  ui_stack_variable_uint_50 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_event_id_secondary = *(uint *)(ui_callback + UI_OFFSET_3070);
  ui_component = *ui_event_flags;
  short_value = ui_event_flags[1];
  ui_event_index = *(longlong *)(ui_callback + 0x2398);
  ui_event_index = *(longlong *)(ui_callback + 0x23a0);
  ui_stack_parameter_longa0 = (longlong)*(int *)(ui_event_data + UI_OFFSET_32) + *(longlong *)(ui_callback + UI_OFFSET_3098);
  ui_component = *ui_parameter_value;
  ui_stack_pointer_buffer_start = ui_parameter_value;
  psStack_68 = ui_parameter_value;
  ui_stack_parameter_long = (longlong)*(int *)(ui_event_type + UI_OFFSET_80) + **(longlong **)(ui_event_type + UI_OFFSET_72);
  ui_stack_color_datac = *(uint32_t *)(ui_event_type + 0x54);
  ui_component = ui_parameter_value[1];
  *(short *)(ui_event_data + UI_MEMORY_ALLOC_SIZE) = ui_component;
  *(short *)(ui_event_data + 0x32) = short_value;
  ui_stack_temp_variable_a8 = ui_component + ui_parameter_value;
  ui_stack_temp_variable_a4 = short_value - ui_parameter_value;
  ui_stack_integer_var_b4 = short_value + ui_parameter_value;
  ui_stack_parameter_long = (longlong)(ui_component >> 3);
  ui_loop_counter_primary = (int)((int)ui_component * ui_event_id_secondary) + ui_stack_parameter_longa0 + (longlong)short_value;
  ui_event_loop_counter = *(int *)(ui_event_index + (short_value - ui_stack_parameter_long) * 4);
  ui_result_status = *(int *)(ui_event_index + (ui_component - ui_stack_parameter_long) * 4);
  ui_control_status = ui_event_id_secondary;
  ui_stack_parameter_long = ui_callback;
  ui_result_status = (*(ui_error_code *)*ui_parameter_value)(ui_stack_parameter_long,ui_stack_color_datac,ui_loop_counter_primary,ui_event_id_secondary);
  ui_event_id1 = ((ui_event_loop_counter + ui_result_status) * ui_parameter_value + UI_STACK_SIZE_128 >> 8) + ui_result_status;
  if (ui_stack_temp_variable_a4 < *(int *)(ui_stack_parameter_long + 0x23d0)) {
    ui_stack_temp_variable_a4 = *(int *)(ui_stack_parameter_long + 0x23d0);
  }
  if (*(int *)(ui_stack_parameter_long + 0x23d4) < ui_stack_integer_var_b4) {
    ui_stack_integer_var_b4 = *(int *)(ui_stack_parameter_long + 0x23d4);
  }
  ui_event_loop_counter = ui_component - ui_parameter_value;
  if (ui_component - ui_parameter_value < *(int *)(ui_stack_parameter_long + 0x23d8)) {
    ui_event_loop_counter = *(int *)(ui_stack_parameter_long + 0x23d8);
  }
  if (*(int *)(ui_stack_parameter_long + 0x23dc) < ui_stack_temp_variable_a8) {
    ui_stack_temp_variable_a8 = *(int *)(ui_stack_parameter_long + 0x23dc);
  }
  if (ui_event_loop_counter < ui_stack_temp_variable_a8) {
    ui_task_identifier = (ulonglong)(int)ui_event_id_secondary;
    ui_window_handle = (longlong)ui_stack_temp_variable_a4 + ui_stack_parameter_longa0 + (int)(ui_event_loop_counter * ui_event_id_secondary);
    ui_stack_uint_callback_count_primary = ui_task_identifier;
    ui_result_status = ui_stack_integer_var_b4;
    do {
      ui_component = (short)ui_event_loop_counter;
      ui_stack_parameter_longa0 = ui_window_handle;
      ui_result_status = ui_stack_temp_variable_a4;
      if (ui_stack_temp_variable_a4 + 2 < ui_result_status) {
        do {
          pui_stack_unsigned_data_secondary = ui_stack_array;
          (*(ui_error_code *)ui_stack_pointer_buffer_start[6])(ui_stack_parameter_long,ui_stack_color_datac,ui_window_handle);
          long_counter5 = 0;
          do {
            ui_result_status = ui_result_status;
            ui_stack_temp_b0 = ui_stack_array[long_counter5];
            if (ui_stack_temp_b0 < ui_event_id1) {
              ui_stack_temp_b0 = ui_stack_temp_b0 +
                          ((*(int *)(ui_event_index + (ui_component - ui_stack_parameter_long) * 4) +
                           *(int *)(ui_event_index + ((short)ui_result_status - ui_stack_parameter_long) * 4)) * ui_parameter_value + UI_STACK_SIZE_128 >> 8);
              if (ui_stack_temp_b0 < ui_event_id1) {
                *(short *)(ui_event_data + UI_MEMORY_ALLOC_SIZE) = ui_component;
                *(short *)(ui_event_data + 0x32) = (short)ui_result_status;
                ui_loop_counter_primary = ui_window_handle;
                ui_event_id1 = ui_stack_temp_b0;
              }
            }
            ui_window_handle = ui_window_handle + 1;
            ui_result_status = ui_result_status + 1;
            long_counter5 = long_counter5 + 1;
          } while (long_counter5 < 3);
          ui_task_identifier = (ulonglong)ui_control_status;
          ui_result_status = ui_stack_integer_var_b4;
        } while (ui_result_status + 3 < ui_stack_integer_var_b4);
      }
      if (ui_result_status < ui_result_status) {
        do {
          ui_stack_temp_b0 = (*(ui_error_code *)*ui_stack_pointer_buffer_start)(ui_stack_parameter_long,ui_stack_color_datac,ui_window_handle,ui_task_identifier & UI_BIT_MASK_32BIT_FULL);
          if (ui_stack_temp_b0 < ui_event_id1) {
            ui_stack_temp_b0 = ui_stack_temp_b0 +
                        ((*(int *)(ui_event_index + (ui_component - ui_stack_parameter_long) * 4) +
                         *(int *)(ui_event_index + ((short)ui_result_status - ui_stack_parameter_long) * 4)) * ui_parameter_value + UI_STACK_SIZE_128 >> 8);
            if (ui_stack_temp_b0 < ui_event_id1) {
              *(short *)(ui_event_data + UI_MEMORY_ALLOC_SIZE) = ui_component;
              *(short *)(ui_event_data + 0x32) = (short)ui_result_status;
              ui_loop_counter_primary = ui_window_handle;
              ui_event_id1 = ui_stack_temp_b0;
            }
          }
          ui_window_handle = ui_window_handle + 1;
          ui_task_identifier = (ulonglong)ui_control_status;
          ui_result_status = ui_result_status + 1;
          ui_result_status = ui_stack_integer_var_b4;
        } while (ui_result_status < ui_stack_integer_var_b4);
      }
      ui_window_handle = ui_stack_parameter_longa0 + ui_stack_uint_callback_count_primary;
      ui_event_loop_counter = ui_event_loop_counter + 1;
      ui_task_identifier = (ulonglong)ui_control_status;
      ui_event_id_secondary = ui_control_status;
      ui_stack_parameter_longa0 = ui_window_handle;
    } while (ui_event_loop_counter < ui_stack_temp_variable_a8);
  }
  pui_stack_unsigned_data_secondary = &ui_stack_temp_b0;
  (*(ui_error_code *)ui_stack_pointer_buffer_start[1])(ui_stack_parameter_long,ui_stack_color_datac,ui_loop_counter_primary,ui_event_id_secondary);
  RenderUIComponent(ui_stack_variable_uint_50 ^ (ulonglong)ui_stack_array);
}

void ui_initialize_input_handler(longlong ui_callback,longlong ui_event_type,longlong ui_event_data,short *ui_event_flags,int ui_parameter_value,
                  int ui_parameter_value,uint64_t *ui_parameter_value,uint64_t ui_parameter_value,short *ui_parameter_value)

{
  short short_value;
  short ui_component;
  longlong ui_event_index;
  int ui_result_status;
  short ui_component;
  int ui_event_loop_counter;
  uint ui_event_id1;
  longlong long_counter_two;
  longlong ui_context_pointer;
  longlong ui_window_handle;
  uint8_t ui_stack_array [32];
  uint *pui_stack_temp_f8;
  int ui_stack_integer_var_e8;
  uint ui_stack_temp_e4;
  int ui_stack_integer_var_e0;
  uint32_t ui_stack_temp_dc;
  int ui_stack_integer_var_d8;
  int ui_stack_integer_var_d4;
  longlong ui_stack_parameter_longd0;
  uint64_t *pui_stack_unsigned_data_secondary;
  longlong ui_stack_parameter_longc0;
  longlong ui_stack_parameter_longb8;
  longlong ui_stack_extended_buffer;
  longlong ui_stack_parameter_longa8;
  longlong ui_stack_parameter_longa0;
  short *psStack_98;
  uint ui_stack_array [6];
  uint ui_stack_array [8];
  ulonglong ui_stack_variable_buffer_xor;
  
  ui_stack_variable_buffer_xor = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_component = *ui_event_flags;
  short_value = ui_event_flags[1];
  ui_stack_integer_var_e8 = *(int *)(ui_callback + UI_OFFSET_3070);
  ui_event_index = *(longlong *)(ui_callback + 0x2398);
  ui_component = *ui_parameter_value;
  ui_event_index = *(longlong *)(ui_callback + 0x23a0);
  long_counter_two = (longlong)*(int *)(ui_event_data + UI_OFFSET_32) + *(longlong *)(ui_callback + UI_OFFSET_3098);
  pui_stack_unsigned_data_secondary = ui_parameter_value;
  psStack_98 = ui_parameter_value;
  ui_stack_parameter_longd0 = (longlong)*(int *)(ui_event_type + UI_OFFSET_80) + **(longlong **)(ui_event_type + UI_OFFSET_72);
  ui_stack_temp_dc = *(uint32_t *)(ui_event_type + 0x54);
  ui_component = ui_parameter_value[1];
  ui_stack_integer_var_d8 = ui_component + ui_parameter_value;
  *(short *)(ui_event_data + UI_MEMORY_ALLOC_SIZE) = ui_component;
  ui_stack_integer_var_d4 = short_value - ui_parameter_value;
  *(short *)(ui_event_data + 0x32) = short_value;
  ui_stack_integer_var_e0 = short_value + ui_parameter_value;
  ui_stack_parameter_longc0 = (longlong)(ui_component >> 3);
  ui_stack_parameter_longb8 = (longlong)(ui_component >> 3);
  ui_window_handle = ui_component * ui_stack_integer_var_e8 + long_counter_two + (longlong)short_value;
  ui_event_loop_counter = *(int *)(ui_event_index + (short_value - ui_stack_parameter_longc0) * 4);
  ui_result_status = *(int *)(ui_event_index + (ui_component - ui_stack_parameter_longb8) * 4);
  ui_stack_parameter_longa8 = ui_callback;
  ui_result_status = (*(ui_error_code *)*ui_parameter_value)(ui_stack_parameter_longd0,ui_stack_temp_dc,ui_window_handle,ui_stack_integer_var_e8);
  ui_event_id1 = ((ui_event_loop_counter + ui_result_status) * ui_parameter_value + UI_STACK_SIZE_128 >> 8) + ui_result_status;
  if (ui_stack_integer_var_d4 < *(int *)(ui_stack_parameter_longa8 + 0x23d0)) {
    ui_stack_integer_var_d4 = *(int *)(ui_stack_parameter_longa8 + 0x23d0);
  }
  if (*(int *)(ui_stack_parameter_longa8 + 0x23d4) < ui_stack_integer_var_e0) {
    ui_stack_integer_var_e0 = *(int *)(ui_stack_parameter_longa8 + 0x23d4);
  }
  ui_event_loop_counter = ui_component - ui_parameter_value;
  if (ui_component - ui_parameter_value < *(int *)(ui_stack_parameter_longa8 + 0x23d8)) {
    ui_event_loop_counter = *(int *)(ui_stack_parameter_longa8 + 0x23d8);
  }
  if (*(int *)(ui_stack_parameter_longa8 + 0x23dc) < ui_stack_integer_var_d8) {
    ui_stack_integer_var_d8 = *(int *)(ui_stack_parameter_longa8 + 0x23dc);
  }
  if (ui_event_loop_counter < ui_stack_integer_var_d8) {
    ui_stack_parameter_longa0 = (longlong)ui_stack_integer_var_e8;
    long_counter_two = (longlong)ui_stack_integer_var_d4 + long_counter_two + ui_event_loop_counter * ui_stack_integer_var_e8;
    ui_result_status = ui_stack_integer_var_e0;
    do {
      ui_component = (short)ui_event_loop_counter;
      ui_stack_extended_buffer = long_counter_two;
      ui_result_status = ui_stack_integer_var_d4;
      if (ui_stack_integer_var_d4 + 7 < ui_result_status) {
        do {
          pui_stack_temp_f8 = ui_stack_array;
          (*(ui_error_code *)pui_stack_unsigned_data_secondary[7])(ui_stack_parameter_longd0,ui_stack_temp_dc,long_counter_two);
          ui_context_pointer = 0;
          do {
            ui_result_status = ui_result_status;
            ui_stack_temp_e4 = ui_stack_array[ui_context_pointer];
            if (ui_stack_temp_e4 < ui_event_id1) {
              ui_stack_temp_e4 = ui_stack_temp_e4 +
                          ((*(int *)(ui_event_index + ((short)ui_result_status - ui_stack_parameter_longc0) * 4) +
                           *(int *)(ui_event_index + (ui_component - ui_stack_parameter_longb8) * 4)) * ui_parameter_value + UI_STACK_SIZE_128 >> 8);
              if (ui_stack_temp_e4 < ui_event_id1) {
                *(short *)(ui_event_data + UI_MEMORY_ALLOC_SIZE) = ui_component;
                *(short *)(ui_event_data + 0x32) = (short)ui_result_status;
                ui_window_handle = long_counter_two;
                ui_event_id1 = ui_stack_temp_e4;
              }
            }
            long_counter_two = long_counter_two + 1;
            ui_result_status = ui_result_status + 1;
            ui_context_pointer = ui_context_pointer + 1;
          } while (ui_context_pointer < 8);
          ui_result_status = ui_stack_integer_var_e0;
        } while (ui_result_status + 8 < ui_stack_integer_var_e0);
      }
      if (ui_result_status + 2 < ui_result_status) {
        do {
          pui_stack_temp_f8 = ui_stack_array;
          (*(ui_error_code *)pui_stack_unsigned_data_secondary[6])(ui_stack_parameter_longd0,ui_stack_temp_dc,long_counter_two);
          ui_context_pointer = 0;
          do {
            ui_result_status = ui_result_status;
            ui_stack_temp_e4 = ui_stack_array[ui_context_pointer];
            if (ui_stack_temp_e4 < ui_event_id1) {
              ui_stack_temp_e4 = ui_stack_temp_e4 +
                          ((*(int *)(ui_event_index + ((short)ui_result_status - ui_stack_parameter_longc0) * 4) +
                           *(int *)(ui_event_index + (ui_component - ui_stack_parameter_longb8) * 4)) * ui_parameter_value + UI_STACK_SIZE_128 >> 8);
              if (ui_stack_temp_e4 < ui_event_id1) {
                *(short *)(ui_event_data + UI_MEMORY_ALLOC_SIZE) = ui_component;
                *(short *)(ui_event_data + 0x32) = (short)ui_result_status;
                ui_window_handle = long_counter_two;
                ui_event_id1 = ui_stack_temp_e4;
              }
            }
            long_counter_two = long_counter_two + 1;
            ui_result_status = ui_result_status + 1;
            ui_context_pointer = ui_context_pointer + 1;
          } while (ui_context_pointer < 3);
          ui_result_status = ui_stack_integer_var_e0;
        } while (ui_result_status + 3 < ui_stack_integer_var_e0);
      }
      if (ui_result_status < ui_result_status) {
        do {
          ui_stack_temp_e4 = (*(ui_error_code *)*pui_stack_unsigned_data_secondary)(ui_stack_parameter_longd0,ui_stack_temp_dc,long_counter_two,ui_stack_integer_var_e8);
          if (ui_stack_temp_e4 < ui_event_id1) {
            ui_stack_temp_e4 = ui_stack_temp_e4 +
                        ((*(int *)(ui_event_index + ((short)ui_result_status - ui_stack_parameter_longc0) * 4) +
                         *(int *)(ui_event_index + (ui_component - ui_stack_parameter_longb8) * 4)) * ui_parameter_value + UI_STACK_SIZE_128 >> 8);
            if (ui_stack_temp_e4 < ui_event_id1) {
              *(short *)(ui_event_data + UI_MEMORY_ALLOC_SIZE) = ui_component;
              *(short *)(ui_event_data + 0x32) = (short)ui_result_status;
              ui_window_handle = long_counter_two;
              ui_event_id1 = ui_stack_temp_e4;
            }
          }
          long_counter_two = long_counter_two + 1;
          ui_result_status = ui_result_status + 1;
          ui_result_status = ui_stack_integer_var_e0;
        } while (ui_result_status < ui_stack_integer_var_e0);
      }
      ui_event_loop_counter = ui_event_loop_counter + 1;
      long_counter_two = ui_stack_extended_buffer + ui_stack_parameter_longa0;
      ui_stack_extended_buffer = long_counter_two;
    } while (ui_event_loop_counter < ui_stack_integer_var_d8);
  }
  pui_stack_temp_f8 = &ui_stack_temp_e4;
  (*(ui_error_code *)pui_stack_unsigned_data_secondary[1])(ui_stack_parameter_longd0,ui_stack_temp_dc,ui_window_handle,ui_stack_integer_var_e8);
  RenderUIComponent(ui_stack_variable_buffer_xor ^ (ulonglong)ui_stack_array);
}

void ui_load_theme_manager(longlong ui_callback,longlong ui_event_type,longlong ui_event_data,short *ui_event_flags,int ui_parameter_value,
                  int ui_parameter_value,uint64_t *ui_parameter_value,uint64_t ui_parameter_value,short *ui_parameter_value)

{
  int ui_temp_state_value;
  int ui_result_status;
  uint ui_loop_counter;
  int ui_result_status;
  short ui_component;
  longlong ui_event_index;
  ulonglong ui_temp_ulong;
  longlong ui_event_index;
  ulonglong ui_event_id0;
  int ui_event_validation_counter;
  ulonglong ui_event_id_secondary;
  uint ui_task_identifier;
  uint8_t ui_stack_array [32];
  uint *pui_stack_unsigned_data_secondary;
  int ui_stack_integer_var_b8;
  int ui_stack_integer_var_b4;
  uint ui_stack_temp_b0;
  uint32_t ui_stack_color_datac;
  longlong ui_stack_parameter_longa8;
  ulonglong ui_stack_variable_uint_a0;
  longlong ui_stack_parameter_long;
  uint64_t *ui_stack_pointer_buffer_end;
  longlong ui_stack_parameter_long;
  short *psStack_68;
  short asStack_60 [8];
  ulonglong ui_stack_variable_uint_50;
  
  ui_stack_variable_uint_50 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_temp_state_value = *(int *)(ui_callback + UI_OFFSET_3070);
  ui_stack_parameter_long = *(longlong *)(ui_callback + 0x23a0);
  ui_stack_color_datac = *(uint32_t *)(ui_event_type + 0x54);
  ui_event_index = (longlong)*(int *)(ui_event_type + UI_OFFSET_80) + **(longlong **)(ui_event_type + UI_OFFSET_72);
  psStack_68 = ui_parameter_value;
  ui_stack_pointer_buffer_end = ui_parameter_value;
  asStack_60[0] = -1;
  asStack_60[1] = 0;
  asStack_60[2] = 0;
  asStack_60[3] = -1;
  asStack_60[4] = 0;
  asStack_60[5] = 1;
  asStack_60[6] = 1;
  asStack_60[7] = 0;
  ui_stack_parameter_long = *(longlong *)(ui_callback + 0x2398);
  ui_event_index = (longlong)(*ui_event_flags * ui_temp_state_value) + (longlong)*(int *)(ui_event_data + UI_OFFSET_32) +
          *(longlong *)(ui_callback + UI_OFFSET_3098) + (longlong)ui_event_flags[1];
  ui_stack_parameter_long = (longlong)(ui_parameter_value[1] >> 3);
  ui_stack_parameter_long = (longlong)(*ui_parameter_value >> 3);
  ui_event_validation_counter = *(int *)(ui_stack_parameter_long + (*ui_event_flags - ui_stack_parameter_long) * 4);
  ui_result_status = *(int *)(ui_stack_parameter_long + (ui_event_flags[1] - ui_stack_parameter_long) * 4);
  ui_stack_parameter_longa8 = ui_event_index;
  ui_stack_parameter_long = ui_event_index;
  ui_result_status = (*(ui_error_code *)*ui_parameter_value)(ui_event_index,ui_stack_color_datac);
  ui_task_identifier = ((ui_event_validation_counter + ui_result_status) * ui_parameter_value + UI_STACK_SIZE_128 >> 8) + ui_result_status;
  ui_stack_integer_var_b4 = 0;
  if (0 < ui_parameter_value) {
    do {
      ui_loop_counter = 0;
      ui_event_validation_counter = -1;
      ui_event_id_secondary = UI_UINT64_MAX;
      ui_stack_integer_var_b8 = -1;
      ui_stack_variable_uint_a0 = UI_UINT64_MAX;
      ui_event_id0 = ui_loop_counter;
      do {
        ui_component = asStack_60[ui_temp_buffer * 2 + 1] + ui_event_flags[1];
        ui_component = asStack_60[ui_temp_buffer * 2] + *ui_event_flags;
        ui_result_status = (int)ui_event_id0;
        ui_loop_counter = ui_task_identifier;
        ui_result_status = ui_stack_integer_var_b8;
        ui_event_id0 = ui_stack_variable_uint_a0;
        if ((((*(int *)(ui_callback + 0x23d0) < (int)ui_component) && ((int)ui_component < *(int *)(ui_callback + 0x23d4))
             ) && (*(int *)(ui_callback + 0x23d8) < (int)ui_component)) &&
           (((int)ui_component < *(int *)(ui_callback + 0x23dc) &&
            ((ui_stack_temp_b0 = (*(ui_error_code *)*ui_stack_pointer_buffer_end)
                                    (ui_stack_parameter_long,ui_stack_color_datac,
                                     (asStack_60[ui_temp_buffer * 2] * ui_temp_state_value + (int)asStack_60[ui_temp_buffer * 2 + 1]
                                     ) + ui_stack_parameter_longa8,ui_temp_state_value), ui_task_identifier <= ui_stack_temp_b0 ||
             (ui_stack_temp_b0 = ui_stack_temp_b0 +
                          ((*(int *)(ui_stack_parameter_long + (ui_component - ui_stack_parameter_long) * 4) +
                           *(int *)(ui_stack_parameter_long + (ui_component - ui_stack_parameter_long) * 4)) * ui_parameter_value + UI_STACK_SIZE_128 >> 8),
             ui_event_id_secondary = ui_loop_counter, ui_loop_counter = ui_stack_temp_b0, ui_event_validation_counter = ui_result_status, ui_result_status = ui_result_status, ui_event_id0 = ui_loop_counter,
             ui_task_identifier <= ui_stack_temp_b0)))))) {
          ui_event_id_secondary = ui_stack_variable_uint_a0;
          ui_loop_counter = ui_task_identifier;
          ui_event_validation_counter = ui_stack_integer_var_b8;
          ui_result_status = ui_stack_integer_var_b8;
          ui_event_id0 = ui_stack_variable_uint_a0;
        }
        ui_stack_variable_uint_a0 = ui_event_id0;
        ui_stack_integer_var_b8 = ui_result_status;
        ui_task_identifier = ui_loop_counter;
        ui_event_id0 = (ulonglong)(ui_result_status + 1U);
        ui_loop_counter = ui_loop_counter + 1;
      } while ((int)(ui_result_status + 1U) < 4);
      ui_parameter_value = ui_stack_pointer_buffer_end;
      ui_event_index = ui_stack_parameter_long;
      ui_event_index = ui_stack_parameter_longa8;
      if (ui_event_validation_counter == -1) break;
      ui_component = asStack_60[ui_event_id_secondary * 2];
      *ui_event_flags = *ui_event_flags + ui_component;
      ui_component = asStack_60[ui_event_id_secondary * 2 + 1];
      ui_event_flags[1] = ui_event_flags[1] + ui_component;
      ui_event_index = ui_stack_parameter_longa8 + (ui_component * ui_temp_state_value + (int)ui_component);
      ui_stack_integer_var_b4 = ui_stack_integer_var_b4 + 1;
      ui_stack_parameter_longa8 = ui_event_index;
    } while (ui_stack_integer_var_b4 < ui_parameter_value);
  }
  pui_stack_unsigned_data_secondary = &ui_stack_temp_b0;
  (*(ui_error_code *)ui_parameter_value[1])(ui_event_index,ui_stack_color_datac,ui_event_index,ui_temp_state_value);
  RenderUIComponent(ui_stack_variable_uint_50 ^ (ulonglong)ui_stack_array);
}

void ui_initialize_font_cache(longlong ui_callback,longlong ui_event_type,longlong ui_event_data,short *ui_event_flags,int ui_parameter_value,
                  int ui_parameter_value,uint64_t *ui_parameter_value,uint64_t ui_parameter_value,short *ui_parameter_value)

{
  int ui_temp_state_value;
  int ui_result_status;
  ulonglong ui_temp_ulong;
  uint ui_loop_counter;
  short ui_component;
  int ui_result_status;
  longlong ui_event_index;
  uint ui_event_id0;
  ulonglong ui_event_id1;
  int ui_event_processing_counter;
  longlong ui_context_pointer;
  ulonglong ui_event_id_fourth;
  short *pshort_value5;
  longlong ui_loop_counter_primary;
  uint8_t ui_stack_array [32];
  uint *pui_stack_temp_f8;
  int ui_stack_integer_var_e8;
  uint32_t ui_stack_temp_e4;
  int ui_stack_integer_var_e0;
  uint ui_stack_temp_dc;
  longlong ui_stack_parameter_longd8;
  longlong ui_stack_parameter_longd0;
  longlong ui_stack_parameter_longc8;
  uint64_t *pui_stack_variable_uint_c0;
  longlong ui_stack_parameter_longb8;
  longlong ui_stack_extended_buffer;
  longlong ui_stack_parameter_longa8;
  longlong ui_stack_parameter_longa0;
  short *psStack_98;
  short asStack_90 [8];
  uint ui_stack_array [4];
  longlong ui_stack_parameter_long;
  ulonglong ui_stack_variable_uint_50;
  
  ui_stack_variable_uint_50 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_result_status = *(int *)(ui_callback + UI_OFFSET_3070);
  ui_loop_counter_primary = *(longlong *)(ui_callback + 0x2398);
  ui_stack_temp_e4 = *(uint32_t *)(ui_event_type + 0x54);
  ui_context_pointer = (longlong)*(int *)(ui_event_type + UI_OFFSET_80) + **(longlong **)(ui_event_type + UI_OFFSET_72);
  psStack_98 = ui_parameter_value;
  pui_stack_variable_uint_c0 = ui_parameter_value;
  asStack_90[0] = -1;
  asStack_90[1] = 0;
  asStack_90[2] = 0;
  asStack_90[3] = -1;
  asStack_90[4] = 0;
  asStack_90[5] = 1;
  asStack_90[6] = 1;
  asStack_90[7] = 0;
  ui_stack_parameter_longd0 = *(longlong *)(ui_callback + 0x23a0);
  ui_event_index = (longlong)(*ui_event_flags * ui_result_status) + (longlong)*(int *)(ui_event_data + UI_OFFSET_32) +
          *(longlong *)(ui_callback + UI_OFFSET_3098) + (longlong)ui_event_flags[1];
  ui_stack_extended_buffer = (longlong)(ui_parameter_value[1] >> 3);
  ui_stack_parameter_longb8 = (longlong)(*ui_parameter_value >> 3);
  ui_event_processing_counter = *(int *)(ui_loop_counter_primary + (*ui_event_flags - ui_stack_parameter_longb8) * 4);
  ui_temp_state_value = *(int *)(ui_stack_parameter_longd0 + (ui_event_flags[1] - ui_stack_extended_buffer) * 4);
  ui_stack_integer_var_e8 = ui_result_status;
  ui_stack_parameter_longd8 = ui_event_index;
  ui_stack_parameter_longc8 = ui_context_pointer;
  ui_stack_parameter_longa8 = ui_loop_counter_primary;
  ui_stack_parameter_longa0 = ui_callback;
  ui_result_status = (*(ui_error_code *)*ui_parameter_value)(ui_context_pointer,ui_stack_temp_e4,ui_event_index,ui_result_status);
  ui_event_id0 = ((ui_event_processing_counter + ui_temp_state_value) * ui_parameter_value + UI_STACK_SIZE_128 >> 8) + ui_result_status;
  ui_stack_integer_var_e0 = 0;
  ui_event_index = ui_stack_parameter_longd0;
  if (0 < ui_parameter_value) {
    do {
      ui_loop_counter = 0;
      ui_event_id_fourth = UI_BIT_MASK_32BIT_FULL;
      if (((*(int *)(ui_callback + 0x23d0) < ui_event_flags[1] + -1 &&
           *(int *)(ui_callback + 0x23d8) < *ui_event_flags + -1) && *ui_event_flags + 1 < *(int *)(ui_callback + 0x23dc))
          && ui_event_flags[1] + 1 < *(int *)(ui_callback + 0x23d4)) {
        ui_stack_parameter_long = ui_event_index - ui_result_status;
        ui_stack_parameter_long = ui_event_index + -1;
        ui_stack_parameter_long = ui_event_index + 1;
        ui_stack_parameter_long = ui_result_status + ui_event_index;
        pui_stack_temp_f8 = ui_stack_array;
        (*(ui_error_code *)pui_stack_variable_uint_c0[8])(ui_stack_parameter_longc8,ui_stack_temp_e4,&ui_stack_parameter_long,ui_result_status);
        ui_event_id1 = ui_loop_counter;
        do {
          if (*(uint *)((longlong)ui_stack_array + ui_event_id1) < ui_event_id0) {
            ui_loop_counter = ((*(int *)(ui_loop_counter_primary + ((short)(*(short *)((longlong)asStack_90 + ui_event_id1) +
                                                *ui_event_flags) - ui_stack_parameter_longb8) * 4) +
                     *(int *)(ui_event_index + ((short)(ui_event_flags[1] +
                                              *(short *)((longlong)asStack_90 + ui_event_id1 + 2)) -
                                      ui_stack_extended_buffer) * 4)) * ui_parameter_value + UI_STACK_SIZE_128 >> 8) +
                    *(uint *)((longlong)ui_stack_array + ui_event_id1);
            *(uint *)((longlong)ui_stack_array + ui_event_id1) = ui_loop_counter;
            if (ui_loop_counter < ui_event_id0) {
              ui_event_id_fourth = ui_loop_counter;
              ui_event_id0 = ui_loop_counter;
            }
          }
          ui_event_processing_counter = (int)ui_event_id_fourth;
          ui_loop_counter = (int)ui_loop_counter + 1;
          ui_loop_counter = (ulonglong)ui_loop_counter;
          ui_event_id1 = ui_event_id1 + 4;
          ui_callback = ui_stack_parameter_longa0;
        } while ((int)ui_loop_counter < 4);
      }
      else {
        pshort_value5 = asStack_90 + 1;
        do {
          ui_component = ui_event_flags[1] + *pshort_value5;
          ui_component = *ui_event_flags + pshort_value5[-1];
          if ((((*(int *)(ui_callback + 0x23d0) < (int)ui_component) &&
               ((int)ui_component < *(int *)(ui_callback + 0x23d4))) &&
              (*(int *)(ui_callback + 0x23d8) < (int)ui_component)) &&
             ((((int)ui_component < *(int *)(ui_callback + 0x23dc) &&
               (ui_stack_temp_dc = (*(ui_error_code *)*pui_stack_variable_uint_c0)
                                      (ui_stack_parameter_longc8,ui_stack_temp_e4,
                                       (pshort_value5[-1] * ui_result_status + (int)*pshort_value5) + ui_stack_parameter_longd8,ui_result_status),
               ui_stack_temp_dc < ui_event_id0)) &&
              (ui_stack_temp_dc = ui_stack_temp_dc +
                           ((*(int *)(ui_stack_parameter_longa8 + (ui_component - ui_stack_parameter_longb8) * 4) +
                            *(int *)(ui_stack_parameter_longd0 + (ui_component - ui_stack_extended_buffer) * 4)) * ui_parameter_value + UI_STACK_SIZE_128 >> 8),
              ui_stack_temp_dc < ui_event_id0)))) {
            ui_event_id_fourth = ui_loop_counter;
            ui_event_id0 = ui_stack_temp_dc;
          }
          ui_event_processing_counter = (int)ui_event_id_fourth;
          ui_loop_counter = (int)ui_loop_counter + 1;
          ui_loop_counter = (ulonglong)ui_loop_counter;
          pshort_value5 = pshort_value5 + 2;
          ui_event_index = ui_stack_parameter_longd0;
          ui_loop_counter_primary = ui_stack_parameter_longa8;
          ui_result_status = ui_stack_integer_var_e8;
        } while ((int)ui_loop_counter < 4);
      }
      ui_event_index = ui_stack_parameter_longd8;
      ui_context_pointer = ui_stack_parameter_longc8;
      ui_result_status = ui_stack_integer_var_e8;
      if (ui_event_processing_counter == -1) break;
      ui_stack_integer_var_e0 = ui_stack_integer_var_e0 + 1;
      ui_component = asStack_90[(longlong)ui_event_processing_counter * 2];
      ui_component = asStack_90[(longlong)ui_event_processing_counter * 2 + 1];
      *ui_event_flags = *ui_event_flags + ui_component;
      ui_event_flags[1] = ui_event_flags[1] + ui_component;
      ui_event_index = ui_stack_parameter_longd8 + (ui_component * ui_stack_integer_var_e8 + (int)ui_component);
      ui_stack_parameter_longd8 = ui_event_index;
    } while (ui_stack_integer_var_e0 < ui_parameter_value);
  }
  pui_stack_temp_f8 = &ui_stack_temp_dc;
  (*(ui_error_code *)pui_stack_variable_uint_c0[1])(ui_context_pointer,ui_stack_temp_e4,ui_event_index,ui_result_status);
  RenderUIComponent(ui_stack_variable_uint_50 ^ (ulonglong)ui_stack_array);
}

void ui_setup_texture_manager(longlong ui_callback,longlong *ui_event_data_buffer_type)

{
  short *pshort_value;
  longlong ui_event_index;
  short ui_component;
  bool ui_bool_result;
  short ui_component;
  short short_value0;
  short short_value1;
  short short_value2;
  short short_value3;
  short short_value4;
  short short_value5;
  short short_value6;
  short short_value7;
  short short_value8;
  short short_value9;
  uint8_t ui_task_index0;
  uint8_t ui_render_buffer_var [16];
  ushort ui_task_index2;
  ushort ui_task_index3;
  ushort ui_task_index4;
  ushort ui_task_index5;
  ushort ui_task_index6;
  ushort ui_task_index7;
  ushort ui_task_index8;
  ushort ui_task_index9;
  ushort ui_loop_counter;
  uint8_t ui_temp_buffer [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  short ui_component;
  
  ui_temp_buffer = **(uint8_t (**) [16])(ui_callback + 8);
  ui_temp_buffer = (*(uint8_t (**) [16])(ui_callback + 8))[1];
  pshort_value = (short *)ui_event_type[3];
  ui_render_buffer_var = psraw(ui_temp_buffer,UI_MAX_EVENT_FLAGS);
  ui_component = *pshort_value;
  ui_component = pshort_value[1];
  ui_component = pshort_value[2];
  ui_component = pshort_value[3];
  ui_component = pshort_value[4];
  ui_component = pshort_value[5];
  short_value0 = pshort_value[6];
  short_value1 = pshort_value[7];
  short_value2 = pshort_value[8];
  short_value3 = pshort_value[9];
  short_value4 = pshort_value[10];
  short_value5 = pshort_value[ELEVEN_VALUE];
  short_value6 = pshort_value[12];
  short_value7 = pshort_value[THIRTEEN_VALUE];
  short_value8 = pshort_value[ui_component_angle_offset];
  short_value9 = pshort_value[UI_MAX_EVENT_FLAGS];
  ui_temp_buffer = ui_render_buffer_var ^ ui_temp_buffer;
  pshort_value = *(short **)(ui_callback + UI_MEMORY_DEALLOC_OFFSET);
  ui_temp_buffer = psraw(ui_temp_buffer,UI_MAX_EVENT_FLAGS);
  ui_temp_buffer._component_x_ = (ui_temp_buffer._component_x_ - ui_render_buffer_var._component_x_) + *pshort_value;
  ui_temp_buffer._component_y_ = (ui_temp_buffer._component_y_ - ui_render_buffer_var._component_y_) + pshort_value[1];
  ui_temp_buffer._component_z_ = (ui_temp_buffer._component_z_ - ui_render_buffer_var._component_z_) + pshort_value[2];
  ui_temp_buffer._component_w_ = (ui_temp_buffer._component_w_ - ui_render_buffer_var._component_w_) + pshort_value[3];
  ui_temp_buffer._offset_x_ = (ui_temp_buffer._offset_x_ - ui_render_buffer_var._offset_x_) + pshort_value[4];
  ui_temp_buffer._offset_y_ = (ui_temp_buffer._offset_y_ - ui_render_buffer_var._offset_y_) + pshort_value[5];
  ui_temp_buffer._offset_z_ = (ui_temp_buffer._offset_z_ - ui_render_buffer_var._offset_z_) + pshort_value[6];
  ui_temp_buffer._offset_w_ = (ui_temp_buffer._offset_w_ - ui_render_buffer_var._offset_w_) + pshort_value[7];
  ui_temp_buffer = pmulhw(ui_temp_buffer,**(uint8_t (**) [16])(ui_callback + UI_SNAPSHOT_CREATE_FLAGS));
  ui_temp_buffer = ui_temp_buffer ^ ui_temp_buffer;
  ui_temp_buffer._component_x_ = (ui_temp_buffer._component_x_ - ui_temp_buffer._component_x_) + pshort_value[8];
  ui_temp_buffer._component_y_ = (ui_temp_buffer._component_y_ - ui_temp_buffer._component_y_) + pshort_value[9];
  ui_temp_buffer._component_z_ = (ui_temp_buffer._component_z_ - ui_temp_buffer._component_z_) + pshort_value[10];
  ui_temp_buffer._component_w_ = (ui_temp_buffer._component_w_ - ui_temp_buffer._component_w_) + pshort_value[ELEVEN_VALUE];
  ui_temp_buffer._offset_x_ = (ui_temp_buffer._offset_x_ - ui_temp_buffer._offset_x_) + pshort_value[12];
  ui_temp_buffer._offset_y_ = (ui_temp_buffer._offset_y_ - ui_temp_buffer._offset_y_) + pshort_value[THIRTEEN_VALUE];
  ui_temp_buffer._offset_z_ = (ui_temp_buffer._offset_z_ - ui_temp_buffer._offset_z_) + pshort_value[ui_component_angle_offset];
  ui_temp_buffer._offset_w_ = (ui_temp_buffer._offset_w_ - ui_temp_buffer._offset_w_) + pshort_value[UI_MAX_EVENT_FLAGS];
  ui_temp_buffer = pmulhw(ui_temp_buffer,(*(uint8_t (**) [16])(ui_callback + UI_SNAPSHOT_CREATE_FLAGS))[1]);
  pshort_value = (short *)*ui_event_type;
  ui_temp_buffer = ui_temp_buffer ^ ui_render_buffer_var;
  ui_component = ui_temp_buffer._component_x_ - ui_render_buffer_var._component_x_;
  ui_component = ui_temp_buffer._component_y_ - ui_render_buffer_var._component_y_;
  ui_component = ui_temp_buffer._component_z_ - ui_render_buffer_var._component_z_;
  ui_component = ui_temp_buffer._component_w_ - ui_render_buffer_var._component_w_;
  ui_component = ui_temp_buffer._offset_x_ - ui_render_buffer_var._offset_x_;
  ui_component = ui_temp_buffer._offset_y_ - ui_render_buffer_var._offset_y_;
  ui_component = ui_temp_buffer._offset_z_ - ui_render_buffer_var._offset_z_;
  ui_component = ui_temp_buffer._offset_w_ - ui_render_buffer_var._offset_w_;
  ui_temp_buffer = ui_temp_buffer ^ ui_temp_buffer;
  *pshort_value = ui_component;
  pshort_value[1] = ui_component;
  pshort_value[2] = ui_component;
  pshort_value[3] = ui_component;
  pshort_value[4] = ui_component;
  pshort_value[5] = ui_component;
  pshort_value[6] = ui_component;
  pshort_value[7] = ui_component;
  ui_component = ui_temp_buffer._component_x_ - ui_temp_buffer._component_x_;
  ui_component = ui_temp_buffer._component_y_ - ui_temp_buffer._component_y_;
  ui_component = ui_temp_buffer._component_z_ - ui_temp_buffer._component_z_;
  ui_component = ui_temp_buffer._component_w_ - ui_temp_buffer._component_w_;
  ui_component = ui_temp_buffer._offset_x_ - ui_temp_buffer._offset_x_;
  ui_component = ui_temp_buffer._offset_y_ - ui_temp_buffer._offset_y_;
  ui_component = ui_temp_buffer._offset_z_ - ui_temp_buffer._offset_z_;
  ui_component = ui_temp_buffer._offset_w_ - ui_temp_buffer._offset_w_;
  ui_event_index = *ui_event_type;
  *(short *)(ui_event_index + UI_EVENT_FLAG_OFFSET) = ui_component;
  *(short *)(ui_event_index + UI_NETWORK_RESOURCE_TYPE) = ui_component;
  *(short *)(ui_event_index + UI_SHIFT_AMOUNT_20) = ui_component;
  *(short *)(ui_event_index + UI_OFFSET_22) = ui_component;
  *(short *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS) = ui_component;
  *(short *)(ui_event_index + UI_MEMORY_RESOURCE_TYPE) = ui_component;
  *(short *)(ui_event_index + UI_OFFSET_28) = ui_component;
  *(short *)(ui_event_index + UI_OFFSET_30) = ui_component;
  pshort_value = (short *)ui_event_type[1];
  *pshort_value = ui_component * ui_component;
  pshort_value[1] = ui_component * ui_component;
  pshort_value[2] = ui_component * ui_component;
  pshort_value[3] = ui_component * ui_component;
  pshort_value[4] = ui_component * ui_component;
  pshort_value[5] = ui_component * ui_component;
  pshort_value[6] = ui_component * short_value0;
  pshort_value[7] = ui_component * short_value1;
  ui_event_index = ui_event_type[1];
  *(short *)(ui_event_index + UI_EVENT_FLAG_OFFSET) = ui_component * short_value2;
  *(short *)(ui_event_index + UI_NETWORK_RESOURCE_TYPE) = ui_component * short_value3;
  *(short *)(ui_event_index + UI_SHIFT_AMOUNT_20) = ui_component * short_value4;
  *(short *)(ui_event_index + UI_OFFSET_22) = ui_component * short_value5;
  *(short *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS) = ui_component * short_value6;
  *(short *)(ui_event_index + UI_MEMORY_RESOURCE_TYPE) = ui_component * short_value7;
  *(short *)(ui_event_index + UI_OFFSET_28) = ui_component * short_value8;
  *(short *)(ui_event_index + UI_OFFSET_30) = ui_component * short_value9;
  ui_task_index2 = (-(ushort)(ui_component == 0) ^ 0xffff) & 1;
  ui_task_index4 = (-(ushort)(ui_component == 0) ^ 0xffff) & 2;
  ui_task_index6 = (-(ushort)(ui_component == 0) ^ 0xffff) & 6;
  ui_task_index8 = (-(ushort)(ui_component == 0) ^ 0xffff) & 7;
  ui_loop_counter = (-(ushort)(ui_component == 0) ^ 0xffff) & 3;
  ui_loop_counter = (-(ushort)(ui_component == 0) ^ 0xffff) & 5;
  ui_loop_counter = (-(ushort)(ui_component == 0) ^ 0xffff) & 8;
  ui_loop_counter = (-(ushort)(ui_component == 0) ^ 0xffff) & THIRTEEN_VALUE;
  ui_task_index3 = (-(ushort)(ui_component == 0) ^ 0xffff) & 4;
  ui_task_index5 = (-(ushort)(ui_component == 0) ^ 0xffff) & 9;
  ui_task_index7 = (-(ushort)(ui_component == 0) ^ 0xffff) & 12;
  ui_task_index9 = (-(ushort)(ui_component == 0) ^ 0xffff) & ui_component_angle_offset;
  ui_loop_counter = (-(ushort)(ui_component == 0) ^ 0xffff) & 10;
  ui_loop_counter = (-(ushort)(ui_component == 0) ^ 0xffff) & ELEVEN_VALUE;
  ui_loop_counter = (-(ushort)(ui_component == 0) ^ 0xffff) & UI_MAX_EVENT_FLAGS;
  ui_loop_counter = (-(ushort)(ui_component == 0) ^ 0xffff) & UI_EVENT_FLAG_OFFSET;
  ui_task_index3 = (ui_task_index2 < ui_task_index3) * ui_task_index3 | (ui_task_index2 >= ui_task_index3) * ui_task_index2;
  ui_task_index5 = (ui_task_index4 < ui_task_index5) * ui_task_index5 | (ui_task_index4 >= ui_task_index5) * ui_task_index4;
  ui_task_index7 = (ui_task_index6 < ui_task_index7) * ui_task_index7 | (ui_task_index6 >= ui_task_index7) * ui_task_index6;
  ui_task_index9 = (ui_task_index8 < ui_task_index9) * ui_task_index9 | (ui_task_index8 >= ui_task_index9) * ui_task_index8;
  ui_loop_counter = (ui_temp_buffer < ui_loop_counter) * ui_loop_counter | (ui_temp_buffer >= ui_loop_counter) * ui_loop_counter;
  ui_task_index0 = CONCAT24(ui_loop_counter,CONCAT22(ui_loop_counter,ui_task_index9));
  ui_loop_counter = (ui_temp_buffer < ui_loop_counter) * ui_loop_counter | (ui_temp_buffer >= ui_loop_counter) * ui_loop_counter;
  ui_temp_buffer._data_size_ = (int)(CONCAT28(ui_loop_counter,CONCAT26(ui_loop_counter,ui_task_index0)) >> UI_MEMORY_ALLOC_SIZE);
  ui_temp_buffer._data_offset_ = (int)((uint6)ui_task_index0 >> UI_EVENT_FLAG_OFFSET);
  ui_temp_buffer._data_format_ = CONCAT22(ui_task_index5,ui_task_index3);
  ui_temp_buffer._data_flags_ = CONCAT22(ui_task_index5,ui_task_index3);
  ui_temp_buffer._component_x_ = (ui_task_index3 < ui_loop_counter) * ui_loop_counter | (ui_task_index3 >= ui_loop_counter) * ui_task_index3;
  ui_temp_buffer._component_y_ = (ui_task_index5 < ui_loop_counter) * ui_loop_counter | (ui_task_index5 >= ui_loop_counter) * ui_task_index5;
  ui_temp_buffer._component_z_ = (ui_task_index7 < ui_loop_counter) * ui_loop_counter | (ui_task_index7 >= ui_loop_counter) * ui_task_index7;
  ui_temp_buffer._component_w_ = (ui_task_index9 < ui_loop_counter) * ui_loop_counter | (ui_task_index9 >= ui_loop_counter) * ui_task_index9;
  ui_temp_buffer._offset_x_ = (ui_loop_counter < ui_task_index3) * ui_task_index3 | (ui_loop_counter >= ui_task_index3) * ui_loop_counter;
  ui_temp_buffer._offset_y_ = (ui_loop_counter < ui_task_index5) * ui_task_index5 | (ui_loop_counter >= ui_task_index5) * ui_loop_counter;
  ui_temp_buffer._offset_z_ = (ui_loop_counter < ui_task_index3) * ui_task_index3 | (ui_loop_counter >= ui_task_index3) * ui_loop_counter;
  ui_temp_buffer._offset_w_ = (ui_loop_counter < ui_task_index5) * ui_task_index5 | (ui_loop_counter >= ui_task_index5) * ui_loop_counter;
  ui_temp_buffer = pshuflw(ui_temp_buffer,ui_temp_buffer,ui_component_angle_offset);
  ui_component = ui_temp_buffer._component_x_;
  ui_render_buffer_var._component_x_ =
       (ushort)((short)ui_temp_buffer._component_x_ < ui_component) * ui_component |
       ((short)ui_temp_buffer._component_x_ >= ui_component) * ui_temp_buffer._component_x_;
  ui_component = ui_temp_buffer._component_y_;
  ui_render_buffer_var._component_y_ =
       (ushort)((short)ui_temp_buffer._component_y_ < ui_component) * ui_component |
       ((short)ui_temp_buffer._component_y_ >= ui_component) * ui_temp_buffer._component_y_;
  ui_component = ui_temp_buffer._component_z_;
  ui_render_buffer_var._component_z_ =
       (ushort)((short)ui_temp_buffer._component_z_ < ui_component) * ui_component |
       ((short)ui_temp_buffer._component_z_ >= ui_component) * ui_temp_buffer._component_z_;
  ui_component = ui_temp_buffer._component_w_;
  ui_render_buffer_var._component_w_ =
       (ushort)((short)ui_temp_buffer._component_w_ < ui_component) * ui_component |
       ((short)ui_temp_buffer._component_w_ >= ui_component) * ui_temp_buffer._component_w_;
  ui_component = ui_temp_buffer._offset_x_;
  ui_render_buffer_var._offset_x_ =
       (ushort)((short)ui_temp_buffer._offset_x_ < ui_component) * ui_component |
       ((short)ui_temp_buffer._offset_x_ >= ui_component) * ui_temp_buffer._offset_x_;
  ui_component = ui_temp_buffer._offset_y_;
  ui_render_buffer_var._offset_y_ =
       (ushort)((short)ui_temp_buffer._offset_y_ < ui_component) * ui_component |
       ((short)ui_temp_buffer._offset_y_ >= ui_component) * ui_temp_buffer._offset_y_;
  ui_component = ui_temp_buffer._offset_z_;
  ui_render_buffer_var._offset_z_ =
       (ushort)((short)ui_temp_buffer._offset_z_ < ui_component) * ui_component |
       ((short)ui_temp_buffer._offset_z_ >= ui_component) * ui_temp_buffer._offset_z_;
  ui_component = ui_temp_buffer._offset_w_;
  ui_render_buffer_var._offset_w_ =
       (ushort)((short)ui_temp_buffer._offset_w_ < ui_component) * ui_component |
       ((short)ui_temp_buffer._offset_w_ >= ui_component) * ui_temp_buffer._offset_w_;
  ui_temp_buffer = pshuflw(ui_temp_buffer,ui_render_buffer_var,1);
  ui_bool_result = (short)ui_render_buffer_var._component_x_ < ui_temp_buffer._component_x_;
  *(char *)ui_event_type[5] = ui_bool_result * ui_temp_buffer[0] | !ui_bool_result * (char)ui_render_buffer_var._component_x_;
  return ui_system_return_value;
}

void ui_create_widget_factory(longlong ui_callback,longlong *ui_event_data_buffer_type)

{
  uint8_t aui_event_id [16];
  short *pui_component_value;
  longlong ui_event_index;
  bool ui_bool_result;
  short ui_component;
  short short_value0;
  short short_value1;
  short short_value2;
  short short_value3;
  short short_value4;
  short short_value5;
  short short_value6;
  short short_value7;
  short short_value8;
  short short_value9;
  short ui_component;
  short *pui_component_value;
  uint8_t ui_loop_counter;
  uint8_t ui_temp_buffer [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  uint8_t ui_stack_array [16];
  short sStack_f8;
  short sStack_f6;
  short sStack_f4;
  short sStack_f2;
  short sStack_f0;
  short sStack_ee;
  short sStack_ec;
  short sStack_ea;
  short sStack_e8;
  short sStack_e6;
  short sStack_e4;
  short sStack_e2;
  short sStack_e0;
  short sStack_de;
  short sStack_dc;
  short sStack_da;
  short sStack_d8;
  short sStack_d6;
  short sStack_d4;
  short sStack_d2;
  short sStack_d0;
  short sStack_ce;
  short sStack_cc;
  short sStack_ca;
  short sStack_c8;
  short sStack_c6;
  short sStack_c4;
  short sStack_c2;
  short sStack_c0;
  short sStack_be;
  short sStack_bc;
  short sStack_ba;
  ulonglong ui_control_status;
  
  ui_control_status = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  pui_component_value = (short *)*ui_event_type;
  ui_temp_buffer = **(uint8_t (**) [16])(ui_callback + UI_OFFSET_32);
  aui_event_id = (*(uint8_t (**) [16])(ui_callback + UI_OFFSET_32))[1];
  ui_temp_buffer = **(uint8_t (**) [16])(ui_callback + 8);
  ui_temp_buffer = (*(uint8_t (**) [16])(ui_callback + 8))[1];
  ui_temp_buffer = psraw(ui_temp_buffer,UI_MAX_EVENT_FLAGS);
  ui_temp_buffer = ui_temp_buffer ^ ui_temp_buffer;
  pui_component_value = *(short **)(ui_callback + UI_CALLBACK_HANDLER_OFFSET);
  sStack_f8 = ui_temp_buffer._component_x_ - ui_temp_buffer._component_x_;
  sStack_f6 = ui_temp_buffer._component_y_ - ui_temp_buffer._component_y_;
  sStack_f4 = ui_temp_buffer._component_z_ - ui_temp_buffer._component_z_;
  sStack_f2 = ui_temp_buffer._component_w_ - ui_temp_buffer._component_w_;
  sStack_f0 = ui_temp_buffer._offset_x_ - ui_temp_buffer._offset_x_;
  sStack_ee = ui_temp_buffer._offset_y_ - ui_temp_buffer._offset_y_;
  sStack_ec = ui_temp_buffer._offset_z_ - ui_temp_buffer._offset_z_;
  sStack_ea = ui_temp_buffer._offset_w_ - ui_temp_buffer._offset_w_;
  sStack_e8 = ui_temp_buffer._component_x_ - ui_temp_buffer._component_x_;
  sStack_e6 = ui_temp_buffer._component_y_ - ui_temp_buffer._component_y_;
  sStack_e4 = ui_temp_buffer._component_z_ - ui_temp_buffer._component_z_;
  sStack_e2 = ui_temp_buffer._component_w_ - ui_temp_buffer._component_w_;
  sStack_e0 = ui_temp_buffer._offset_x_ - ui_temp_buffer._offset_x_;
  sStack_de = ui_temp_buffer._offset_y_ - ui_temp_buffer._offset_y_;
  sStack_dc = ui_temp_buffer._offset_z_ - ui_temp_buffer._offset_z_;
  sStack_da = ui_temp_buffer._offset_w_ - ui_temp_buffer._offset_w_;
  ui_component = *pui_component_value;
  ui_component = pui_component_value[1];
  ui_component = pui_component_value[2];
  ui_component = pui_component_value[3];
  ui_component = pui_component_value[4];
  short_value0 = pui_component_value[5];
  short_value1 = pui_component_value[6];
  short_value2 = pui_component_value[7];
  short_value3 = pui_component_value[8];
  short_value4 = pui_component_value[9];
  short_value5 = pui_component_value[10];
  short_value6 = pui_component_value[ELEVEN_VALUE];
  short_value7 = pui_component_value[12];
  short_value8 = pui_component_value[THIRTEEN_VALUE];
  short_value9 = pui_component_value[ui_component_angle_offset];
  ui_component = pui_component_value[UI_MAX_EVENT_FLAGS];
  pui_component_value = *(short **)(ui_callback + UI_MEMORY_DEALLOC_OFFSET);
  ui_temp_buffer._component_x_ = sStack_f8 + *pui_component_value;
  ui_temp_buffer._component_y_ = sStack_f6 + pui_component_value[1];
  ui_temp_buffer._component_z_ = sStack_f4 + pui_component_value[2];
  ui_temp_buffer._component_w_ = sStack_f2 + pui_component_value[3];
  ui_temp_buffer._offset_x_ = sStack_f0 + pui_component_value[4];
  ui_temp_buffer._offset_y_ = sStack_ee + pui_component_value[5];
  ui_temp_buffer._offset_z_ = sStack_ec + pui_component_value[6];
  ui_temp_buffer._offset_w_ = sStack_ea + pui_component_value[7];
  ui_temp_buffer = **(uint8_t (**) [16])(ui_callback + UI_EVENT_FLAG_OFFSET);
  ui_temp_buffer = (*(uint8_t (**) [16])(ui_callback + UI_EVENT_FLAG_OFFSET))[1];
  pui_component_value = (short *)ui_event_type[3];
  ui_stack_array = *(uint8_t (*) [16])(pui_component_value + 8);
  ui_component = *pui_component_value;
  ui_component = pui_component_value[1];
  ui_component = pui_component_value[2];
  ui_component = pui_component_value[3];
  ui_component = pui_component_value[4];
  ui_component = pui_component_value[5];
  ui_component = pui_component_value[6];
  ui_component = pui_component_value[7];
  ui_temp_buffer = pshuflw(ui_stack_array,ZEXT416((uint)(int)*(short *)(ui_callback + UI_BUFFER_SIZE_64)),0);
  ui_component = ui_temp_buffer._component_w_;
  ui_component = ui_temp_buffer._component_z_;
  ui_component = ui_temp_buffer._component_y_;
  ui_component = ui_temp_buffer._component_x_;
  ui_temp_buffer._component_x_ = sStack_e8 + pui_component_value[8];
  ui_temp_buffer._component_y_ = sStack_e6 + pui_component_value[9];
  ui_temp_buffer._component_z_ = sStack_e4 + pui_component_value[10];
  ui_temp_buffer._component_w_ = sStack_e2 + pui_component_value[ELEVEN_VALUE];
  ui_temp_buffer._offset_x_ = sStack_e0 + pui_component_value[12];
  ui_temp_buffer._offset_y_ = sStack_de + pui_component_value[THIRTEEN_VALUE];
  ui_temp_buffer._offset_z_ = sStack_dc + pui_component_value[ui_component_angle_offset];
  ui_temp_buffer._offset_w_ = sStack_da + pui_component_value[UI_MAX_EVENT_FLAGS];
  pui_component_value[0] = 0;
  pui_component_value[1] = 0;
  pui_component_value[2] = 0;
  pui_component_value[3] = 0;
  pui_component_value[4] = 0;
  pui_component_value[5] = 0;
  pui_component_value[6] = 0;
  pui_component_value[7] = 0;
  sStack_e8 = sStack_e8 - (short_value3 + ui_component);
  sStack_e6 = sStack_e6 - (short_value4 + ui_component);
  sStack_e4 = sStack_e4 - (short_value5 + ui_component);
  sStack_e2 = sStack_e2 - (short_value6 + ui_component);
  sStack_e0 = sStack_e0 - (short_value7 + ui_component);
  sStack_de = sStack_de - (short_value8 + ui_component);
  sStack_dc = sStack_dc - (short_value9 + ui_component);
  sStack_da = sStack_da - (ui_component + ui_component);
  pui_component_value[8] = 0;
  pui_component_value[9] = 0;
  pui_component_value[10] = 0;
  pui_component_value[ELEVEN_VALUE] = 0;
  sStack_f8 = sStack_f8 - (ui_component + ui_component);
  sStack_f6 = sStack_f6 - (ui_component + ui_component);
  sStack_f4 = sStack_f4 - (ui_component + ui_component);
  sStack_f2 = sStack_f2 - (ui_component + ui_component);
  sStack_f0 = sStack_f0 - (ui_component + ui_component);
  sStack_ee = sStack_ee - (short_value0 + ui_component);
  sStack_ec = sStack_ec - (short_value1 + ui_component);
  sStack_ea = sStack_ea - (short_value2 + ui_component);
  pui_component_value[12] = 0;
  pui_component_value[THIRTEEN_VALUE] = 0;
  pui_component_value[ui_component_angle_offset] = 0;
  pui_component_value[UI_MAX_EVENT_FLAGS] = 0;
  ui_temp_buffer = pmulhw(ui_temp_buffer,ui_temp_buffer);
  ui_temp_buffer._component_x_ = ui_temp_buffer._component_x_ + ui_temp_buffer._component_x_;
  ui_temp_buffer._component_y_ = ui_temp_buffer._component_y_ + ui_temp_buffer._component_y_;
  ui_temp_buffer._component_z_ = ui_temp_buffer._component_z_ + ui_temp_buffer._component_z_;
  ui_temp_buffer._component_w_ = ui_temp_buffer._component_w_ + ui_temp_buffer._component_w_;
  ui_temp_buffer._offset_x_ = ui_temp_buffer._offset_x_ + ui_temp_buffer._offset_x_;
  ui_temp_buffer._offset_y_ = ui_temp_buffer._offset_y_ + ui_temp_buffer._offset_y_;
  ui_temp_buffer._offset_z_ = ui_temp_buffer._offset_z_ + ui_temp_buffer._offset_z_;
  ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_ + ui_temp_buffer._offset_w_;
  ui_temp_buffer._component_x_ = ui_temp_buffer._component_x_ + ui_temp_buffer._component_x_;
  ui_temp_buffer._component_y_ = ui_temp_buffer._component_y_ + ui_temp_buffer._component_y_;
  ui_temp_buffer._component_z_ = ui_temp_buffer._component_z_ + ui_temp_buffer._component_z_;
  ui_temp_buffer._component_w_ = ui_temp_buffer._component_w_ + ui_temp_buffer._component_w_;
  ui_temp_buffer._offset_x_ = ui_temp_buffer._offset_x_ + ui_temp_buffer._offset_x_;
  ui_temp_buffer._offset_y_ = ui_temp_buffer._offset_y_ + ui_temp_buffer._offset_y_;
  ui_temp_buffer._offset_z_ = ui_temp_buffer._offset_z_ + ui_temp_buffer._offset_z_;
  ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_ + ui_temp_buffer._offset_w_;
  ui_temp_buffer = pmulhw(ui_temp_buffer,ui_temp_buffer);
  ui_bool_result = **(short **)(ui_callback + UI_MEMORY_ALLOC_SIZE) <= sStack_f8;
  ui_temp_buffer = pmulhw(ui_temp_buffer,aui_event_id);
  ui_temp_buffer = ui_temp_buffer ^ ui_temp_buffer;
  sStack_d8 = ui_temp_buffer._component_x_ - ui_temp_buffer._component_x_;
  sStack_d6 = ui_temp_buffer._component_y_ - ui_temp_buffer._component_y_;
  sStack_d4 = ui_temp_buffer._component_z_ - ui_temp_buffer._component_z_;
  sStack_d2 = ui_temp_buffer._component_w_ - ui_temp_buffer._component_w_;
  sStack_d0 = ui_temp_buffer._offset_x_ - ui_temp_buffer._offset_x_;
  sStack_ce = ui_temp_buffer._offset_y_ - ui_temp_buffer._offset_y_;
  sStack_cc = ui_temp_buffer._offset_z_ - ui_temp_buffer._offset_z_;
  sStack_ca = ui_temp_buffer._offset_w_ - ui_temp_buffer._offset_w_;
  ui_temp_buffer = ui_temp_buffer ^ ui_temp_buffer;
  sStack_c8 = ui_temp_buffer._component_x_ - ui_temp_buffer._component_x_;
  sStack_c6 = ui_temp_buffer._component_y_ - ui_temp_buffer._component_y_;
  sStack_c4 = ui_temp_buffer._component_z_ - ui_temp_buffer._component_z_;
  sStack_c2 = ui_temp_buffer._component_w_ - ui_temp_buffer._component_w_;
  sStack_c0 = ui_temp_buffer._offset_x_ - ui_temp_buffer._offset_x_;
  sStack_be = ui_temp_buffer._offset_y_ - ui_temp_buffer._offset_y_;
  sStack_bc = ui_temp_buffer._offset_z_ - ui_temp_buffer._offset_z_;
  sStack_ba = ui_temp_buffer._offset_w_ - ui_temp_buffer._offset_w_;
  pui_component_value = *(short **)(ui_callback + UI_MEMORY_ALLOC_SIZE) + 1;
  if (ui_bool_result && sStack_d8 != 0) {
    *pui_component_value = sStack_d8;
    pui_component_value = *(short **)(ui_callback + UI_MEMORY_ALLOC_SIZE);
  }
  ui_loop_counter = ui_bool_result && sStack_d8 != 0;
  pui_component_value = pui_component_value + 1;
  if (*pui_component_value <= sStack_f6 && sStack_d6 != 0) {
    pui_component_value[1] = sStack_d6;
    ui_loop_counter = 2;
    pui_component_value = *(short **)(ui_callback + UI_MEMORY_ALLOC_SIZE);
  }
  pui_component_value = pui_component_value + 1;
  if (*pui_component_value <= sStack_f0 && sStack_d0 != 0) {
    pui_component_value[4] = sStack_d0;
    ui_loop_counter = 3;
    pui_component_value = *(short **)(ui_callback + UI_MEMORY_ALLOC_SIZE);
  }
  pui_component_value = pui_component_value + 1;
  if (*pui_component_value <= sStack_e8 && sStack_c8 != 0) {
    pui_component_value[8] = sStack_c8;
    ui_loop_counter = 4;
    pui_component_value = *(short **)(ui_callback + UI_MEMORY_ALLOC_SIZE);
  }
  pui_component_value = pui_component_value + 1;
  if (*pui_component_value <= sStack_ee && sStack_ce != 0) {
    pui_component_value[5] = sStack_ce;
    ui_loop_counter = 5;
    pui_component_value = *(short **)(ui_callback + UI_MEMORY_ALLOC_SIZE);
  }
  pui_component_value = pui_component_value + 1;
  if (*pui_component_value <= sStack_f4 && sStack_d4 != 0) {
    pui_component_value[2] = sStack_d4;
    ui_loop_counter = 6;
    pui_component_value = *(short **)(ui_callback + UI_MEMORY_ALLOC_SIZE);
  }
  pui_component_value = pui_component_value + 1;
  if (*pui_component_value <= sStack_f2 && sStack_d2 != 0) {
    pui_component_value[3] = sStack_d2;
    ui_loop_counter = 7;
    pui_component_value = *(short **)(ui_callback + UI_MEMORY_ALLOC_SIZE);
  }
  pui_component_value = pui_component_value + 1;
  if (*pui_component_value <= sStack_ec && sStack_cc != 0) {
    pui_component_value[6] = sStack_cc;
    ui_loop_counter = 8;
    pui_component_value = *(short **)(ui_callback + UI_MEMORY_ALLOC_SIZE);
  }
  pui_component_value = pui_component_value + 1;
  if (*pui_component_value <= sStack_e6 && sStack_c6 != 0) {
    pui_component_value[9] = sStack_c6;
    ui_loop_counter = 9;
    pui_component_value = *(short **)(ui_callback + UI_MEMORY_ALLOC_SIZE);
  }
  pui_component_value = pui_component_value + 1;
  if (*pui_component_value <= sStack_e0 && sStack_c0 != 0) {
    pui_component_value[12] = sStack_c0;
    ui_loop_counter = 10;
    pui_component_value = *(short **)(ui_callback + UI_MEMORY_ALLOC_SIZE);
  }
  pui_component_value = pui_component_value + 1;
  if (*pui_component_value <= sStack_de && sStack_be != 0) {
    pui_component_value[THIRTEEN_VALUE] = sStack_be;
    ui_loop_counter = ELEVEN_VALUE;
    pui_component_value = *(short **)(ui_callback + UI_MEMORY_ALLOC_SIZE);
  }
  pui_component_value = pui_component_value + 1;
  if (*pui_component_value <= sStack_e4 && sStack_c4 != 0) {
    pui_component_value[10] = sStack_c4;
    ui_loop_counter = 12;
    pui_component_value = *(short **)(ui_callback + UI_MEMORY_ALLOC_SIZE);
  }
  pui_component_value = pui_component_value + 1;
  if (*pui_component_value <= sStack_ea && sStack_ca != 0) {
    pui_component_value[7] = sStack_ca;
    ui_loop_counter = THIRTEEN_VALUE;
    pui_component_value = *(short **)(ui_callback + UI_MEMORY_ALLOC_SIZE);
  }
  pui_component_value = pui_component_value + 1;
  if (*pui_component_value <= sStack_e2 && sStack_c2 != 0) {
    pui_component_value[ELEVEN_VALUE] = sStack_c2;
    ui_loop_counter = ui_component_angle_offset;
    pui_component_value = *(short **)(ui_callback + UI_MEMORY_ALLOC_SIZE);
  }
  pui_component_value = pui_component_value + 1;
  if (*pui_component_value <= sStack_dc && sStack_bc != 0) {
    pui_component_value[ui_component_angle_offset] = sStack_bc;
    ui_loop_counter = UI_MAX_EVENT_FLAGS;
    pui_component_value = *(short **)(ui_callback + UI_MEMORY_ALLOC_SIZE);
  }
  if (*pui_component_value <= sStack_da && sStack_ba != 0) {
    pui_component_value[UI_MAX_EVENT_FLAGS] = sStack_ba;
    ui_loop_counter = UI_EVENT_FLAG_OFFSET;
  }
  pui_component_value = (short *)*ui_event_type;
  ui_component = pui_component_value[1];
  ui_component = pui_component_value[2];
  ui_component = pui_component_value[3];
  ui_component = pui_component_value[4];
  ui_component = pui_component_value[5];
  short_value0 = pui_component_value[6];
  short_value1 = pui_component_value[7];
  short_value2 = pui_component_value[8];
  short_value3 = pui_component_value[9];
  short_value4 = pui_component_value[10];
  short_value5 = pui_component_value[ELEVEN_VALUE];
  short_value6 = pui_component_value[12];
  short_value7 = pui_component_value[THIRTEEN_VALUE];
  short_value8 = pui_component_value[ui_component_angle_offset];
  short_value9 = pui_component_value[UI_MAX_EVENT_FLAGS];
  pui_component_value = (short *)ui_event_type[1];
  *pui_component_value = *pui_component_value * ui_component;
  pui_component_value[1] = ui_component * ui_component;
  pui_component_value[2] = ui_component * ui_component;
  pui_component_value[3] = ui_component * ui_component;
  pui_component_value[4] = ui_component * ui_component;
  pui_component_value[5] = ui_component * ui_component;
  pui_component_value[6] = short_value0 * ui_component;
  pui_component_value[7] = short_value1 * ui_component;
  ui_event_index = ui_event_type[1];
  *(short *)(ui_event_index + UI_EVENT_FLAG_OFFSET) = short_value2 * ui_stack_array._component_x_;
  *(short *)(ui_event_index + UI_NETWORK_RESOURCE_TYPE) = short_value3 * ui_stack_array._component_y_;
  *(short *)(ui_event_index + UI_SHIFT_AMOUNT_20) = short_value4 * ui_stack_array._component_z_;
  *(short *)(ui_event_index + UI_OFFSET_22) = short_value5 * ui_stack_array._component_w_;
  *(short *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS) = short_value6 * ui_stack_array._offset_x_;
  *(short *)(ui_event_index + UI_MEMORY_RESOURCE_TYPE) = short_value7 * ui_stack_array._offset_y_;
  *(short *)(ui_event_index + UI_OFFSET_28) = short_value8 * ui_stack_array._offset_z_;
  *(short *)(ui_event_index + UI_OFFSET_30) = short_value9 * ui_stack_array._offset_w_;
  *(uint8_t *)ui_event_type[5] = ui_loop_counter;
  RenderUIComponent(ui_control_status ^ (ulonglong)ui_stack_array);
}

void ui_initialize_layout_engine(longlong ui_callback,longlong *ui_event_data_buffer_type)

{
  short *pshort_value;
  short *pui_component_value;
  longlong ui_event_index;
  int ui_result_status;
  ushort ui_loop_counter;
  short ui_component;
  short short_value0;
  short short_value1;
  short short_value2;
  short short_value3;
  short short_value4;
  short short_value5;
  short short_value6;
  short short_value7;
  short short_value8;
  short short_value9;
  short ui_component;
  char ui_character_value;
  short ui_component;
  uint8_t ui_window_data_buffer [16];
  uint8_t ui_theme_buffer_var [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  uint32_t ui_stack_validation_mask;
  uint32_t ui_stack_temp_44;
  uint32_t ui_stack_standard_buffer_size;
  uint32_t ui_stack_temp_3c;
  ulonglong ui_stack_buffer_mask;
  
  ui_stack_buffer_mask = ui_stack_flag_mask ^ (ulonglong)&ui_stack_validation_mask;
  ui_stack_validation_mask = UI_STACK_SIZE_12840100;
  ui_stack_temp_44 = UI_WIDGET_CREATE_CALLBACK_OFFSET30205;
  ui_stack_standard_buffer_size = UI_OFFSET_160d0c09;
  ui_theme_buffer_var = (*(uint8_t (**) [16])(ui_callback + 8))[1];
  ui_temp_buffer = **(uint8_t (**) [16])(ui_callback + 8);
  pshort_value = (short *)ui_event_type[3];
  ui_window_data_buffer = pabsw(ui_temp_buffer,ui_temp_buffer);
  ui_temp_buffer = psraw(ui_temp_buffer,UI_MAX_EVENT_FLAGS);
  ui_temp_buffer = psraw(ui_theme_buffer_var,UI_MAX_EVENT_FLAGS);
  ui_stack_temp_3c = 0xf0e0b07;
  ui_component = *pshort_value;
  ui_component = pshort_value[1];
  ui_component = pshort_value[2];
  ui_component = pshort_value[3];
  short_value0 = pshort_value[4];
  short_value1 = pshort_value[5];
  short_value2 = pshort_value[6];
  short_value3 = pshort_value[7];
  short_value4 = pshort_value[8];
  short_value5 = pshort_value[9];
  short_value6 = pshort_value[10];
  short_value7 = pshort_value[ELEVEN_VALUE];
  short_value8 = pshort_value[12];
  short_value9 = pshort_value[THIRTEEN_VALUE];
  ui_component = pshort_value[ui_component_angle_offset];
  ui_component = pshort_value[UI_MAX_EVENT_FLAGS];
  pshort_value = *(short **)(ui_callback + UI_MEMORY_DEALLOC_OFFSET);
  ui_temp_buffer._component_x_ = *pshort_value + ui_window_data_buffer._component_x_;
  ui_temp_buffer._component_y_ = pshort_value[1] + ui_window_data_buffer._component_y_;
  ui_temp_buffer._component_z_ = pshort_value[2] + ui_window_data_buffer._component_z_;
  ui_temp_buffer._component_w_ = pshort_value[3] + ui_window_data_buffer._component_w_;
  ui_temp_buffer._offset_x_ = pshort_value[4] + ui_window_data_buffer._offset_x_;
  ui_temp_buffer._offset_y_ = pshort_value[5] + ui_window_data_buffer._offset_y_;
  ui_temp_buffer._offset_z_ = pshort_value[6] + ui_window_data_buffer._offset_z_;
  ui_temp_buffer._offset_w_ = pshort_value[7] + ui_window_data_buffer._offset_w_;
  ui_temp_buffer = pmulhw(ui_temp_buffer,**(uint8_t (**) [16])(ui_callback + UI_SNAPSHOT_CREATE_FLAGS));
  ui_theme_buffer_var = pabsw(ui_window_data_buffer,ui_theme_buffer_var);
  pui_component_value = (short *)*ui_event_type;
  ui_window_data_buffer._component_x_ = pshort_value[8] + ui_theme_buffer_var._component_x_;
  ui_window_data_buffer._component_y_ = pshort_value[9] + ui_theme_buffer_var._component_y_;
  ui_window_data_buffer._component_z_ = pshort_value[10] + ui_theme_buffer_var._component_z_;
  ui_window_data_buffer._component_w_ = pshort_value[ELEVEN_VALUE] + ui_theme_buffer_var._component_w_;
  ui_window_data_buffer._offset_x_ = pshort_value[12] + ui_theme_buffer_var._offset_x_;
  ui_window_data_buffer._offset_y_ = pshort_value[THIRTEEN_VALUE] + ui_theme_buffer_var._offset_y_;
  ui_window_data_buffer._offset_z_ = pshort_value[ui_component_angle_offset] + ui_theme_buffer_var._offset_z_;
  ui_window_data_buffer._offset_w_ = pshort_value[UI_MAX_EVENT_FLAGS] + ui_theme_buffer_var._offset_w_;
  ui_window_data_buffer = pmulhw(ui_window_data_buffer,(*(uint8_t (**) [16])(ui_callback + UI_SNAPSHOT_CREATE_FLAGS))[1]);
  ui_theme_buffer_var = ui_temp_buffer ^ ui_temp_buffer;
  ui_component = ui_theme_buffer_var._component_x_ - ui_temp_buffer._component_x_;
  ui_component = ui_theme_buffer_var._component_y_ - ui_temp_buffer._component_y_;
  ui_component = ui_theme_buffer_var._component_z_ - ui_temp_buffer._component_z_;
  ui_component = ui_theme_buffer_var._component_w_ - ui_temp_buffer._component_w_;
  ui_component = ui_theme_buffer_var._offset_x_ - ui_temp_buffer._offset_x_;
  ui_component = ui_theme_buffer_var._offset_y_ - ui_temp_buffer._offset_y_;
  ui_component = ui_theme_buffer_var._offset_z_ - ui_temp_buffer._offset_z_;
  ui_component = ui_theme_buffer_var._offset_w_ - ui_temp_buffer._offset_w_;
  *pui_component_value = ui_component;
  pui_component_value[1] = ui_component;
  pui_component_value[2] = ui_component;
  pui_component_value[3] = ui_component;
  pui_component_value[4] = ui_component;
  pui_component_value[5] = ui_component;
  pui_component_value[6] = ui_component;
  pui_component_value[7] = ui_component;
  ui_theme_buffer_var = ui_window_data_buffer ^ ui_temp_buffer;
  ui_event_index = *ui_event_type;
  ui_component = ui_theme_buffer_var._component_x_ - ui_temp_buffer._component_x_;
  ui_component = ui_theme_buffer_var._component_y_ - ui_temp_buffer._component_y_;
  ui_component = ui_theme_buffer_var._component_z_ - ui_temp_buffer._component_z_;
  ui_component = ui_theme_buffer_var._component_w_ - ui_temp_buffer._component_w_;
  ui_component = ui_theme_buffer_var._offset_x_ - ui_temp_buffer._offset_x_;
  ui_component = ui_theme_buffer_var._offset_y_ - ui_temp_buffer._offset_y_;
  ui_component = ui_theme_buffer_var._offset_z_ - ui_temp_buffer._offset_z_;
  ui_component = ui_theme_buffer_var._offset_w_ - ui_temp_buffer._offset_w_;
  *(short *)(ui_event_index + UI_EVENT_FLAG_OFFSET) = ui_component;
  *(short *)(ui_event_index + UI_NETWORK_RESOURCE_TYPE) = ui_component;
  *(short *)(ui_event_index + UI_SHIFT_AMOUNT_20) = ui_component;
  *(short *)(ui_event_index + UI_OFFSET_22) = ui_component;
  *(short *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS) = ui_component;
  *(short *)(ui_event_index + UI_MEMORY_RESOURCE_TYPE) = ui_component;
  *(short *)(ui_event_index + UI_OFFSET_28) = ui_component;
  *(short *)(ui_event_index + UI_OFFSET_30) = ui_component;
  pshort_value = (short *)ui_event_type[1];
  *pshort_value = ui_component * ui_component;
  pshort_value[1] = ui_component * ui_component;
  pshort_value[2] = ui_component * ui_component;
  pshort_value[3] = ui_component * ui_component;
  pshort_value[4] = ui_component * short_value0;
  pshort_value[5] = ui_component * short_value1;
  pshort_value[6] = ui_component * short_value2;
  pshort_value[7] = ui_component * short_value3;
  ui_event_index = ui_event_type[1];
  *(short *)(ui_event_index + UI_EVENT_FLAG_OFFSET) = ui_component * short_value4;
  *(short *)(ui_event_index + UI_NETWORK_RESOURCE_TYPE) = ui_component * short_value5;
  *(short *)(ui_event_index + UI_SHIFT_AMOUNT_20) = ui_component * short_value6;
  *(short *)(ui_event_index + UI_OFFSET_22) = ui_component * short_value7;
  *(short *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS) = ui_component * short_value8;
  *(short *)(ui_event_index + UI_MEMORY_RESOURCE_TYPE) = ui_component * short_value9;
  *(short *)(ui_event_index + UI_OFFSET_28) = ui_component * ui_component;
  *(short *)(ui_event_index + UI_OFFSET_30) = ui_component * ui_component;
  ui_temp_buffer._component_x_ = -(ushort)(0 < ui_temp_buffer._component_x_);
  ui_temp_buffer._component_y_ = -(ushort)(0 < ui_temp_buffer._component_y_);
  ui_temp_buffer._component_z_ = -(ushort)(0 < ui_temp_buffer._component_z_);
  ui_temp_buffer._component_w_ = -(ushort)(0 < ui_temp_buffer._component_w_);
  ui_temp_buffer._offset_x_ = -(ushort)(0 < ui_temp_buffer._offset_x_);
  ui_temp_buffer._offset_y_ = -(ushort)(0 < ui_temp_buffer._offset_y_);
  ui_temp_buffer._offset_z_ = -(ushort)(0 < ui_temp_buffer._offset_z_);
  ui_temp_buffer._offset_w_ = -(ushort)(0 < ui_temp_buffer._offset_w_);
  ui_temp_buffer._component_x_ = -(ushort)(0 < ui_window_data_buffer._component_x_);
  ui_temp_buffer._component_y_ = -(ushort)(0 < ui_window_data_buffer._component_y_);
  ui_temp_buffer._component_z_ = -(ushort)(0 < ui_window_data_buffer._component_z_);
  ui_temp_buffer._component_w_ = -(ushort)(0 < ui_window_data_buffer._component_w_);
  ui_temp_buffer._offset_x_ = -(ushort)(0 < ui_window_data_buffer._offset_x_);
  ui_temp_buffer._offset_y_ = -(ushort)(0 < ui_window_data_buffer._offset_y_);
  ui_temp_buffer._offset_z_ = -(ushort)(0 < ui_window_data_buffer._offset_z_);
  ui_temp_buffer._offset_w_ = -(ushort)(0 < ui_window_data_buffer._offset_w_);
  ui_temp_buffer = packsswb(ui_temp_buffer,ui_temp_buffer);
  ui_theme_buffer_var._data_format_ = UI_OFFSET_160d0c09;
  ui_theme_buffer_var._0_8_ = UI_WIDGET_CREATE_CALLBACK_OFFSET3020508040100;
  ui_theme_buffer_var._data_flags_ = 0xf0e0b07;
  ui_theme_buffer_var = pshufb(ui_temp_buffer,ui_theme_buffer_var);
  ui_loop_counter = (ushort)(ui_calculate_bit_field(ui_theme_buffer_var >> 7,0) & 1) | (ushort)(ui_calculate_bit_field(ui_theme_buffer_var >> UI_MAX_EVENT_FLAGS,0) & 1) << 1 |
          (ushort)(ui_calculate_bit_field(ui_theme_buffer_var >> UI_RENDER_RESOURCE_TYPE,0) & 1) << 2 |
          (ushort)(ui_calculate_bit_field(ui_theme_buffer_var >> UI_GUARD_CHECK_TYPE_2,0) & 1) << 3 |
          (ushort)(ui_calculate_bit_field(ui_theme_buffer_var >> 0x27,0) & 1) << 4 |
          (ushort)(ui_calculate_bit_field(ui_theme_buffer_var >> UI_SIGNATURE_PART5,0) & 1) << 5 |
          (ushort)(ui_calculate_bit_field(ui_theme_buffer_var >> 0x37,0) & 1) << 6 |
          (ushort)(ui_calculate_bit_field(ui_theme_buffer_var >> UI_BIT_SHIFT_63,0) & 1) << 7 |
          (ushort)(ui_calculate_bit_field(ui_theme_buffer_var >> 0x47,0) & 1) << 8 |
          (ushort)(ui_calculate_bit_field(ui_theme_buffer_var >> 0x4f,0) & 1) << 9 |
          (ushort)(ui_calculate_bit_field(ui_theme_buffer_var >> 0x57,0) & 1) << 10 |
          (ushort)(ui_calculate_bit_field(ui_theme_buffer_var >> 0x5f,0) & 1) << ELEVEN_VALUE |
          (ushort)(ui_calculate_bit_field(ui_theme_buffer_var >> 0x67,0) & 1) << 12 |
          (ushort)(ui_calculate_bit_field(ui_theme_buffer_var >> 0x6f,0) & 1) << THIRTEEN_VALUE |
          (ushort)(ui_calculate_bit_field(ui_theme_buffer_var >> 0x77,0) & 1) << ui_component_angle_offset | (ushort)(byte)(ui_theme_buffer_var[UI_MAX_EVENT_FLAGS] >> 7) << UI_MAX_EVENT_FLAGS;
  ui_result_status = UI_GUARD_CHECK_TYPE_2;
  if (ui_loop_counter != 0) {
    for (; ui_loop_counter >> ui_result_status == 0; ui_result_status = ui_result_status + -1) {
    }
  }
  ui_character_value = (char)ui_result_status + '\x01';
  if (ui_loop_counter == 0) {
    ui_character_value = UI_CHAR_NULL;
  }
  *(char *)ui_event_type[5] = ui_character_value;
  RenderUIComponent(ui_stack_buffer_mask ^ (ulonglong)&ui_stack_validation_mask);
}

void ui_system_create_layout_item(longlong ui_callback,longlong *ui_event_data_buffer_type)

{
  short *pshort_value;
  short *pui_component_value;
  longlong ui_event_index;
  bool ui_bool_result;
  short ui_component;
  short short_value0;
  short short_value1;
  short short_value2;
  short short_value3;
  short short_value4;
  short short_value5;
  short short_value6;
  short short_value7;
  short short_value8;
  short short_value9;
  short ui_component;
  short *pui_component_value;
  uint8_t ui_task_index3;
  short ui_component;
  uint8_t ui_temp_buffer [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  short ui_component;
  uint8_t in_XMM5 [16];
  uint8_t ui_temp_buffer [16];
  
  pshort_value = *(short **)(ui_callback + UI_MEMORY_ALLOC_SIZE);
  ui_temp_buffer = **(uint8_t (**) [16])(ui_callback + 8);
  ui_temp_buffer = (*(uint8_t (**) [16])(ui_callback + 8))[1];
  pui_component_value = (short *)ui_event_type[3];
  ui_temp_buffer = psraw(ui_temp_buffer,UI_MAX_EVENT_FLAGS);
  ui_temp_buffer = ui_temp_buffer ^ ui_temp_buffer;
  ui_component = *pui_component_value;
  ui_component = pui_component_value[1];
  ui_component = pui_component_value[2];
  ui_component = pui_component_value[3];
  ui_component = pui_component_value[4];
  short_value0 = pui_component_value[5];
  short_value1 = pui_component_value[6];
  short_value2 = pui_component_value[7];
  ui_component = ui_temp_buffer._component_x_ - ui_temp_buffer._component_x_;
  ui_component = ui_temp_buffer._component_y_ - ui_temp_buffer._component_y_;
  ui_component = ui_temp_buffer._component_z_ - ui_temp_buffer._component_z_;
  ui_component = ui_temp_buffer._component_w_ - ui_temp_buffer._component_w_;
  ui_component = ui_temp_buffer._offset_x_ - ui_temp_buffer._offset_x_;
  ui_component = ui_temp_buffer._offset_y_ - ui_temp_buffer._offset_y_;
  ui_component = ui_temp_buffer._offset_z_ - ui_temp_buffer._offset_z_;
  ui_component = ui_temp_buffer._offset_w_ - ui_temp_buffer._offset_w_;
  short_value3 = pui_component_value[8];
  short_value4 = pui_component_value[9];
  short_value5 = pui_component_value[10];
  short_value6 = pui_component_value[ELEVEN_VALUE];
  short_value7 = pui_component_value[12];
  short_value8 = pui_component_value[THIRTEEN_VALUE];
  short_value9 = pui_component_value[ui_component_angle_offset];
  ui_component = pui_component_value[UI_MAX_EVENT_FLAGS];
  ui_temp_buffer = ui_temp_buffer ^ ui_temp_buffer;
  ui_component = ui_temp_buffer._component_x_ - ui_temp_buffer._component_x_;
  ui_component = ui_temp_buffer._component_y_ - ui_temp_buffer._component_y_;
  ui_component = ui_temp_buffer._component_z_ - ui_temp_buffer._component_z_;
  ui_component = ui_temp_buffer._component_w_ - ui_temp_buffer._component_w_;
  ui_component = ui_temp_buffer._offset_x_ - ui_temp_buffer._offset_x_;
  ui_component = ui_temp_buffer._offset_y_ - ui_temp_buffer._offset_y_;
  ui_component = ui_temp_buffer._offset_z_ - ui_temp_buffer._offset_z_;
  ui_component = ui_temp_buffer._offset_w_ - ui_temp_buffer._offset_w_;
  pui_component_value = *(short **)(ui_callback + UI_CALLBACK_HANDLER_OFFSET);
  ui_temp_buffer = pshuflw(in_XMM5,ZEXT416((uint)(int)*(short *)(ui_callback + UI_BUFFER_SIZE_64)),0);
  ui_component = ui_temp_buffer._component_w_;
  ui_component = ui_temp_buffer._component_z_;
  ui_component = ui_temp_buffer._component_y_;
  ui_component = ui_temp_buffer._component_x_;
  pui_component_value = *(short **)(ui_callback + UI_MEMORY_DEALLOC_OFFSET);
  ui_temp_buffer._component_x_ = *pui_component_value + ui_component;
  ui_temp_buffer._component_y_ = pui_component_value[1] + ui_component;
  ui_temp_buffer._component_z_ = pui_component_value[2] + ui_component;
  ui_temp_buffer._component_w_ = pui_component_value[3] + ui_component;
  ui_temp_buffer._offset_x_ = pui_component_value[4] + ui_component;
  ui_temp_buffer._offset_y_ = pui_component_value[5] + ui_component;
  ui_temp_buffer._offset_z_ = pui_component_value[6] + ui_component;
  ui_temp_buffer._offset_w_ = pui_component_value[7] + ui_component;
  ui_temp_buffer._component_x_ = pui_component_value[8] + ui_component;
  ui_temp_buffer._component_y_ = pui_component_value[9] + ui_component;
  ui_temp_buffer._component_z_ = pui_component_value[10] + ui_component;
  ui_temp_buffer._component_w_ = pui_component_value[ELEVEN_VALUE] + ui_component;
  ui_temp_buffer._offset_x_ = pui_component_value[12] + ui_component;
  ui_temp_buffer._offset_y_ = pui_component_value[THIRTEEN_VALUE] + ui_component;
  ui_temp_buffer._offset_z_ = pui_component_value[ui_component_angle_offset] + ui_component;
  ui_temp_buffer._offset_w_ = pui_component_value[UI_MAX_EVENT_FLAGS] + ui_component;
  ui_temp_buffer = pmulhw(**(uint8_t (**) [16])(ui_callback + UI_EVENT_FLAG_OFFSET),ui_temp_buffer);
  ui_temp_buffer._component_x_ = ui_temp_buffer._component_x_ + ui_temp_buffer._component_x_;
  ui_temp_buffer._component_y_ = ui_temp_buffer._component_y_ + ui_temp_buffer._component_y_;
  ui_temp_buffer._component_z_ = ui_temp_buffer._component_z_ + ui_temp_buffer._component_z_;
  ui_temp_buffer._component_w_ = ui_temp_buffer._component_w_ + ui_temp_buffer._component_w_;
  ui_temp_buffer._offset_x_ = ui_temp_buffer._offset_x_ + ui_temp_buffer._offset_x_;
  ui_temp_buffer._offset_y_ = ui_temp_buffer._offset_y_ + ui_temp_buffer._offset_y_;
  ui_temp_buffer._offset_z_ = ui_temp_buffer._offset_z_ + ui_temp_buffer._offset_z_;
  ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_ + ui_temp_buffer._offset_w_;
  ui_temp_buffer = pmulhw(ui_temp_buffer,**(uint8_t (**) [16])(ui_callback + UI_OFFSET_32));
  ui_temp_buffer = pmulhw((*(uint8_t (**) [16])(ui_callback + UI_EVENT_FLAG_OFFSET))[1],ui_temp_buffer);
  ui_temp_buffer = ui_temp_buffer ^ ui_temp_buffer;
  ui_temp_buffer._component_x_ = ui_temp_buffer._component_x_ + ui_temp_buffer._component_x_;
  ui_temp_buffer._component_y_ = ui_temp_buffer._component_y_ + ui_temp_buffer._component_y_;
  ui_temp_buffer._component_z_ = ui_temp_buffer._component_z_ + ui_temp_buffer._component_z_;
  ui_temp_buffer._component_w_ = ui_temp_buffer._component_w_ + ui_temp_buffer._component_w_;
  ui_temp_buffer._offset_x_ = ui_temp_buffer._offset_x_ + ui_temp_buffer._offset_x_;
  ui_temp_buffer._offset_y_ = ui_temp_buffer._offset_y_ + ui_temp_buffer._offset_y_;
  ui_temp_buffer._offset_z_ = ui_temp_buffer._offset_z_ + ui_temp_buffer._offset_z_;
  ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_ + ui_temp_buffer._offset_w_;
  ui_temp_buffer = pmulhw(ui_temp_buffer,(*(uint8_t (**) [16])(ui_callback + UI_OFFSET_32))[1]);
  ui_component = ui_temp_buffer._component_x_ - ui_temp_buffer._component_x_;
  ui_component = ui_temp_buffer._component_y_ - ui_temp_buffer._component_y_;
  ui_component = ui_temp_buffer._component_z_ - ui_temp_buffer._component_z_;
  ui_component = ui_temp_buffer._component_w_ - ui_temp_buffer._component_w_;
  ui_component = ui_temp_buffer._offset_x_ - ui_temp_buffer._offset_x_;
  ui_component = ui_temp_buffer._offset_y_ - ui_temp_buffer._offset_y_;
  ui_component = ui_temp_buffer._offset_z_ - ui_temp_buffer._offset_z_;
  ui_component = ui_temp_buffer._offset_w_ - ui_temp_buffer._offset_w_;
  ui_bool_result = *pshort_value <= (short)(ui_component - (*pui_component_value + ui_component));
  ui_temp_buffer = ui_temp_buffer ^ ui_temp_buffer;
  ui_component = ui_temp_buffer._component_x_ - ui_temp_buffer._component_x_;
  ui_component = ui_temp_buffer._component_y_ - ui_temp_buffer._component_y_;
  ui_component = ui_temp_buffer._component_z_ - ui_temp_buffer._component_z_;
  ui_component = ui_temp_buffer._component_w_ - ui_temp_buffer._component_w_;
  ui_component = ui_temp_buffer._offset_x_ - ui_temp_buffer._offset_x_;
  ui_component = ui_temp_buffer._offset_y_ - ui_temp_buffer._offset_y_;
  ui_component = ui_temp_buffer._offset_z_ - ui_temp_buffer._offset_z_;
  ui_component = ui_temp_buffer._offset_w_ - ui_temp_buffer._offset_w_;
  pui_component_value = pshort_value + 1;
  ui_component = 0;
  if (ui_bool_result && ui_component != 0) {
    pui_component_value = pshort_value;
    ui_component = ui_component;
  }
  ui_task_index3 = ui_bool_result && ui_component != 0;
  pui_component_value = pui_component_value + 1;
  ui_component = 0;
  if (*pui_component_value <= (short)(ui_component - (pui_component_value[1] + ui_component)) && ui_component != 0) {
    ui_task_index3 = 2;
    pui_component_value = pshort_value;
    ui_component = ui_component;
  }
  pui_component_value = pui_component_value + 1;
  ui_component = 0;
  if (*pui_component_value <= (short)(ui_component - (pui_component_value[4] + ui_component)) && ui_component != 0) {
    ui_task_index3 = 3;
    pui_component_value = pshort_value;
    ui_component = ui_component;
  }
  pui_component_value = pui_component_value + 1;
  ui_component = 0;
  if (*pui_component_value <= (short)(ui_component - (pui_component_value[8] + ui_component)) && ui_component != 0) {
    ui_task_index3 = 4;
    pui_component_value = pshort_value;
    ui_component = ui_component;
  }
  pui_component_value = pui_component_value + 1;
  ui_component = 0;
  if (*pui_component_value <= (short)(ui_component - (pui_component_value[5] + ui_component)) && ui_component != 0) {
    ui_task_index3 = 5;
    pui_component_value = pshort_value;
    ui_component = ui_component;
  }
  pui_component_value = pui_component_value + 1;
  ui_component = 0;
  if (*pui_component_value <= (short)(ui_component - (pui_component_value[2] + ui_component)) && ui_component != 0) {
    ui_task_index3 = 6;
    pui_component_value = pshort_value;
    ui_component = ui_component;
  }
  pui_component_value = pui_component_value + 1;
  ui_component = 0;
  if (*pui_component_value <= (short)(ui_component - (pui_component_value[3] + ui_component)) && ui_component != 0) {
    ui_task_index3 = 7;
    pui_component_value = pshort_value;
    ui_component = ui_component;
  }
  pui_component_value = pui_component_value + 1;
  ui_component = 0;
  if (*pui_component_value <= (short)(ui_component - (pui_component_value[6] + ui_component)) && ui_component != 0) {
    ui_task_index3 = 8;
    pui_component_value = pshort_value;
    ui_component = ui_component;
  }
  pui_component_value = pui_component_value + 1;
  ui_component = 0;
  if (*pui_component_value <= (short)(ui_component - (pui_component_value[9] + ui_component)) && ui_component != 0) {
    ui_task_index3 = 9;
    pui_component_value = pshort_value;
    ui_component = ui_component;
  }
  pui_component_value = pui_component_value + 1;
  ui_component = 0;
  if (*pui_component_value <= (short)(ui_component - (pui_component_value[12] + ui_component)) && ui_component != 0) {
    ui_task_index3 = 10;
    pui_component_value = pshort_value;
    ui_component = ui_component;
  }
  pui_component_value = pui_component_value + 1;
  ui_component = 0;
  if (*pui_component_value <= (short)(ui_component - (pui_component_value[THIRTEEN_VALUE] + ui_component)) && ui_component != 0) {
    ui_task_index3 = ELEVEN_VALUE;
    pui_component_value = pshort_value;
    ui_component = ui_component;
  }
  pui_component_value = pui_component_value + 1;
  ui_component = 0;
  if (*pui_component_value <= (short)(ui_component - (pui_component_value[10] + ui_component)) && ui_component != 0) {
    ui_task_index3 = 12;
    pui_component_value = pshort_value;
    ui_component = ui_component;
  }
  pui_component_value = pui_component_value + 1;
  ui_component = 0;
  if (*pui_component_value <= (short)(ui_component - (pui_component_value[7] + ui_component)) && ui_component != 0) {
    ui_task_index3 = THIRTEEN_VALUE;
    pui_component_value = pshort_value;
    ui_component = ui_component;
  }
  pui_component_value = pui_component_value + 1;
  ui_component = 0;
  if (*pui_component_value <= (short)(ui_component - (pui_component_value[ELEVEN_VALUE] + ui_component)) && ui_component != 0) {
    ui_task_index3 = ui_component_angle_offset;
    pui_component_value = pshort_value;
    ui_component = ui_component;
  }
  pui_component_value = pui_component_value + 1;
  ui_component = 0;
  if (*pui_component_value <= (short)(ui_component - (pui_component_value[ui_component_angle_offset] + ui_component)) && ui_component != 0) {
    ui_task_index3 = UI_MAX_EVENT_FLAGS;
    pui_component_value = pshort_value;
    ui_component = ui_component;
  }
  ui_component = 0;
  if (*pui_component_value <= (short)(ui_component - (pui_component_value[UI_MAX_EVENT_FLAGS] + ui_component)) && ui_component != 0) {
    ui_task_index3 = UI_EVENT_FLAG_OFFSET;
    ui_component = ui_component;
  }
  pshort_value = (short *)*ui_event_type;
  *pshort_value = ui_component;
  pshort_value[1] = ui_component;
  pshort_value[2] = ui_component;
  pshort_value[3] = ui_component;
  pshort_value[4] = ui_component;
  pshort_value[5] = ui_component;
  pshort_value[6] = ui_component;
  pshort_value[7] = ui_component;
  ui_event_index = *ui_event_type;
  *(short *)(ui_event_index + UI_EVENT_FLAG_OFFSET) = ui_component;
  *(short *)(ui_event_index + UI_NETWORK_RESOURCE_TYPE) = ui_component;
  *(short *)(ui_event_index + UI_SHIFT_AMOUNT_20) = ui_component;
  *(short *)(ui_event_index + UI_OFFSET_22) = ui_component;
  *(short *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS) = ui_component;
  *(short *)(ui_event_index + UI_MEMORY_RESOURCE_TYPE) = ui_component;
  *(short *)(ui_event_index + UI_OFFSET_28) = ui_component;
  *(short *)(ui_event_index + UI_OFFSET_30) = ui_component;
  pshort_value = (short *)ui_event_type[1];
  *pshort_value = ui_component * ui_component;
  pshort_value[1] = ui_component * ui_component;
  pshort_value[2] = ui_component * ui_component;
  pshort_value[3] = ui_component * ui_component;
  pshort_value[4] = ui_component * ui_component;
  pshort_value[5] = ui_component * short_value0;
  pshort_value[6] = ui_component * short_value1;
  pshort_value[7] = ui_component * short_value2;
  ui_event_index = ui_event_type[1];
  *(short *)(ui_event_index + UI_EVENT_FLAG_OFFSET) = ui_component * short_value3;
  *(short *)(ui_event_index + UI_NETWORK_RESOURCE_TYPE) = ui_component * short_value4;
  *(short *)(ui_event_index + UI_SHIFT_AMOUNT_20) = ui_component * short_value5;
  *(short *)(ui_event_index + UI_OFFSET_22) = ui_component * short_value6;
  *(short *)(ui_event_index + UI_SNAPSHOT_CREATE_FLAGS) = ui_component * short_value7;
  *(short *)(ui_event_index + UI_MEMORY_RESOURCE_TYPE) = ui_component * short_value8;
  *(short *)(ui_event_index + UI_OFFSET_28) = ui_component * short_value9;
  *(short *)(ui_event_index + UI_OFFSET_30) = ui_component * ui_component;
  *(uint8_t *)ui_event_type[5] = ui_task_index3;
  return ui_system_return_value;
}

void ui_system_process_layout_component(longlong ui_callback,int ui_event_type,int ui_event_data,int ui_event_flags,uint64_t ui_parameter_value,
                  uint32_t ui_parameter_value)

{
  uint8_t ui_stack_array [32];
  uint32_t ui_stack_temp_4c8;
  void* *pui_stack_temp_4c0;
  void* *pui_stack_temp_4b8;
  void* *pui_stack_temp_4b0;
  uint8_t ui_stack_array [64];
  uint8_t ui_stack_array [1088];
  ulonglong ui_stack_variable_uint_28;
  
  ui_stack_variable_uint_28 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  if (ui_event_data == 0) {
    ui_stack_temp_4c8 = UI_OFFSET_32;
    ui_system_process_layout_request(ui_callback - ui_event_type * 2,ui_stack_array,ui_event_type,UI_LAYOUT_RESOURCE_TYPE);
  }
  else {
    if (ui_event_flags == 0) {
      ui_stack_temp_4c8 = UI_EVENT_FLAG_OFFSET;
      pui_stack_temp_4c0 = &ui_widget_manager + (longlong)ui_event_data * UI_WIDGET_CREATE_CALLBACK_OFFSET;
      ui_system_validate_layout_constraints(ui_callback,ui_event_type,ui_parameter_value,ui_parameter_value);
      goto UI_LABEL_GENERIC_673f27;
    }
    pui_stack_temp_4c0 = (void* *)CONCAT44(pui_stack_temp_4c0._data_size_,UI_OFFSET_32);
    ui_stack_temp_4c8 = UI_LAYOUT_RESOURCE_TYPE;
    pui_stack_temp_4b8 = &ui_widget_manager + (longlong)ui_event_data * UI_WIDGET_CREATE_CALLBACK_OFFSET;
    ui_system_calculate_callback_offset(ui_callback - ui_event_type * 2,ui_stack_array,ui_event_type,1);
  }
  pui_stack_temp_4b0 = &ui_widget_manager + (longlong)ui_event_flags * UI_WIDGET_CREATE_CALLBACK_OFFSET;
  pui_stack_temp_4b8 = (void* *)CONCAT44(pui_stack_temp_4b8._data_size_,ui_parameter_value);
  pui_stack_temp_4c0 = (void* *)CONCAT44(pui_stack_temp_4c0._data_size_,UI_EVENT_FLAG_OFFSET);
  ui_stack_temp_4c8 = UI_EVENT_FLAG_OFFSET;
  ui_system_set_parameter_value(ui_stack_array,ui_parameter_value,ui_parameter_value,UI_OFFSET_32);
UI_LABEL_GENERIC_673f27:
  RenderUIComponent(ui_stack_variable_uint_28 ^ (ulonglong)ui_stack_array);
}

/**
 * @brief 更新UI布局组件
 * 
 * 更新UI组件的布局信息，包括位置、大小、对齐方式等布局属性。
 * 根据事件类型和标志位执行不同的布局更新操作。
 * 
 * @param ui_callback UI回调函数指针
 * @param ui_event_type 事件类型标识符
 * @param ui_event_data 事件数据指针
 * @param ui_event_flags 事件标志位
 * @param ui_parameter_value 参数值
 * @param ui_parameter_value 额外参数值
 * 
 * @return void
 */
void ui_system_update_layout_component(longlong ui_callback,uint64_t ui_event_type,int ui_event_data,int ui_event_flags,uint64_t ui_parameter_value,
                  uint32_t ui_parameter_value)

{
  uint8_t ui_stack_array [32];
  uint32_t ui_stack_temp_278;
  int ui_stack_integer_var_270;
  uint8_t ui_stack_array [576];
  ulonglong ui_stack_variable_uint_28;
  
  ui_stack_variable_uint_28 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  if (ui_event_data == 0) {
    if (ui_event_flags == 0) {
      ui_system_handle_callback_event(ui_callback,ui_event_type,ui_parameter_value,ui_parameter_value);
    }
    else {
      ui_stack_temp_278 = UI_EVENT_FLAG_OFFSET;
      ui_stack_integer_var_270 = ui_event_flags;
      ui_system_cleanup_widget_resources(ui_callback - (int)ui_event_type * 2);
    }
  }
  else {
    ui_stack_integer_var_270 = ui_event_data;
    if (ui_event_flags == 0) {
      ui_stack_temp_278 = UI_EVENT_FLAG_OFFSET;
      ui_system_update_widget_visibility(ui_callback,ui_event_type,ui_parameter_value,ui_parameter_value);
    }
    else {
      ui_stack_temp_278 = UI_LAYOUT_RESOURCE_TYPE;
      ui_system_update_widget_visibility(ui_callback - (int)ui_event_type * 2,ui_event_type,ui_stack_array,UI_EVENT_FLAG_OFFSET);
      ui_stack_temp_278 = UI_EVENT_FLAG_OFFSET;
      ui_stack_integer_var_270 = ui_event_flags;
      ui_system_cleanup_widget_resources(ui_stack_array,UI_EVENT_FLAG_OFFSET,ui_parameter_value,ui_parameter_value);
    }
  }
  RenderUIComponent(ui_stack_variable_uint_28 ^ (ulonglong)ui_stack_array);
}

void ui_system_validate_layout_section(longlong ui_callback,int ui_event_type,int ui_event_data,int ui_event_flags,uint64_t ui_parameter_value,
                  uint32_t ui_parameter_value)

{
  uint8_t ui_stack_array [32];
  uint32_t ui_stack_temp_248;
  uint32_t ui_stack_temp_240;
  void* *pui_stack_temp_238;
  void* *pui_stack_temp_230;
  uint8_t ui_stack_array [16];
  uint8_t ui_stack_array [496];
  ulonglong ui_stack_variable_uint_28;
  
  ui_stack_variable_uint_28 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  pui_stack_temp_238 = &ui_widget_manager + (longlong)ui_event_data * UI_WIDGET_CREATE_CALLBACK_OFFSET;
  ui_stack_temp_240 = 8;
  ui_stack_temp_248 = 9;
  ui_system_process_texture_updates(ui_callback - ui_event_type * 2,ui_stack_array,ui_event_type,1);
  pui_stack_temp_230 = &ui_widget_manager + (longlong)ui_event_flags * UI_WIDGET_CREATE_CALLBACK_OFFSET;
  pui_stack_temp_238 = (void* *)CONCAT44(pui_stack_temp_238._data_size_,4);
  ui_stack_temp_240 = 4;
  ui_stack_temp_248 = 4;
  ui_system_update_shader_parameters(ui_stack_array,ui_parameter_value,ui_parameter_value,8);
  RenderUIComponent(ui_stack_variable_uint_28 ^ (ulonglong)ui_stack_array);
}

void ui_system_process_layout_section(uint8_t *ui_callback,int ui_event_type,int ui_event_data,int ui_event_flags,uint8_t *ui_parameter_value,
                  int ui_parameter_value)

{
  longlong ui_long_counter;
  uint8_t *ui_task_index_pointer;
  uint8_t *ui_callback_ptr;
  uint8_t ui_stack_array [32];
  uint32_t ui_event_mask_primary;
  int ui_stack_integer_var_60;
  uint8_t ui_stack_array [48];
  ulonglong ui_stack_variable_uint_28;
  
  ui_stack_variable_uint_28 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_long_counter = (longlong)ui_parameter_value;
  if (ui_event_data == 0) {
    if (ui_event_flags == 0) {
      ui_task_index_pointer = ui_callback + ui_event_type;
      *ui_parameter_value = *ui_callback;
      ui_parameter_value[1] = ui_callback[1];
      ui_parameter_value[2] = ui_callback[2];
      ui_parameter_value[3] = ui_callback[3];
      ui_parameter_value = ui_parameter_value + ui_long_counter;
      *ui_parameter_value = *ui_task_index_pointer;
      ui_parameter_value[1] = ui_task_index_pointer[1];
      ui_parameter_value[2] = ui_task_index_pointer[2];
      ui_callback_ptr = ui_task_index_pointer + ui_event_type;
      ui_parameter_value[3] = ui_task_index_pointer[3];
      ui_parameter_value = ui_parameter_value + ui_long_counter;
      *ui_parameter_value = *ui_callback_ptr;
      ui_parameter_value[1] = ui_callback_ptr[1];
      ui_parameter_value[2] = ui_callback_ptr[2];
      ui_parameter_value[3] = ui_callback_ptr[3];
      ui_parameter_value = ui_parameter_value + ui_long_counter;
      ui_callback_ptr = ui_callback_ptr + ui_event_type;
      *ui_parameter_value = *ui_callback_ptr;
      ui_parameter_value[1] = ui_callback_ptr[1];
      ui_parameter_value[2] = ui_callback_ptr[2];
      ui_parameter_value[3] = ui_callback_ptr[3];
    }
    else {
      ui_event_mask_primary = 4;
      ui_stack_integer_var_60 = ui_event_flags;
      ui_system_optimize_widget_performance((longlong)ui_callback - (longlong)(ui_event_type * 2),ui_event_type,ui_parameter_value,ui_parameter_value);
    }
  }
  else {
    ui_stack_integer_var_60 = ui_event_data;
    if (ui_event_flags == 0) {
      ui_event_mask_primary = 4;
      ui_system_process_widget_animation(ui_callback,ui_event_type,ui_parameter_value,ui_parameter_value);
    }
    else {
      ui_event_mask_primary = 9;
      ui_system_process_widget_animation((longlong)ui_callback - (longlong)(ui_event_type * 2),ui_event_type,ui_stack_array,4);
      ui_event_mask_primary = 4;
      ui_stack_integer_var_60 = ui_event_flags;
      ui_system_optimize_widget_performance(ui_stack_array,4,ui_parameter_value,ui_parameter_value);
    }
  }
  RenderUIComponent(ui_stack_variable_uint_28 ^ (ulonglong)ui_stack_array);
}

void ui_system_handle_layout_group(longlong ui_callback,int ui_event_type,int ui_event_data,int ui_event_flags,uint64_t ui_parameter_value,
                  uint32_t ui_parameter_value)

{
  uint8_t ui_stack_array [32];
  uint32_t ui_stack_temp_248;
  void* *pui_stack_temp_240;
  void* *pui_stack_temp_238;
  void* *pui_stack_temp_230;
  uint8_t ui_stack_array [32];
  uint8_t ui_stack_array [480];
  ulonglong ui_stack_variable_uint_28;
  
  ui_stack_variable_uint_28 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  if (ui_event_data == 0) {
    pui_stack_temp_240 = &ui_widget_manager + (longlong)ui_event_flags * UI_WIDGET_CREATE_CALLBACK_OFFSET;
    ui_stack_temp_248 = 4;
    ui_system_process_widget_input(ui_callback - ui_event_type * 2,ui_event_type,ui_parameter_value,ui_parameter_value);
  }
  else if (ui_event_flags == 0) {
    ui_stack_temp_248 = 4;
    pui_stack_temp_240 = &ui_widget_manager + (longlong)ui_event_data * UI_WIDGET_CREATE_CALLBACK_OFFSET;
    ui_system_validate_widget_hierarchy(ui_callback,ui_event_type,ui_parameter_value,ui_parameter_value);
  }
  else {
    pui_stack_temp_240._data_offset_ = UI_EVENT_FLAG_OFFSET;
    ui_stack_temp_248 = 9;
    pui_stack_temp_238 = &ui_widget_manager + (longlong)ui_event_data * UI_WIDGET_CREATE_CALLBACK_OFFSET;
    ui_system_initialize_widget_state(ui_callback - ui_event_type * 2,ui_stack_array,ui_event_type,1);
    pui_stack_temp_230 = &ui_widget_manager + (longlong)ui_event_flags * UI_WIDGET_CREATE_CALLBACK_OFFSET;
    pui_stack_temp_238 = (void* *)CONCAT44(pui_stack_temp_238._data_size_,ui_parameter_value);
    pui_stack_temp_240 = (void* *)CONCAT44(pui_stack_temp_240._data_size_,4);
    ui_stack_temp_248 = 8;
    ui_system_update_widget_dimensions(ui_stack_array,ui_parameter_value,ui_parameter_value,UI_EVENT_FLAG_OFFSET);
  }
  RenderUIComponent(ui_stack_variable_uint_28 ^ (ulonglong)ui_stack_array);
}

void ui_create_progress_widget(longlong ui_callback,uint64_t ui_event_type,int ui_event_data,int ui_event_flags,uint64_t ui_parameter_value,
                  uint32_t ui_parameter_value)

{
  uint8_t ui_stack_array [32];
  uint32_t ui_stack_temp_138;
  int ui_stack_integer_var_130;
  uint8_t ui_stack_array [256];
  ulonglong ui_stack_variable_uint_28;
  
  ui_stack_variable_uint_28 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  if (ui_event_data == 0) {
    if (ui_event_flags == 0) {
      ui_system_process_callback_data(ui_callback,ui_event_type,ui_parameter_value,ui_parameter_value);
    }
    else {
      ui_stack_temp_138 = 4;
      ui_stack_integer_var_130 = ui_event_flags;
      ui_system_validate_widget_integrity(ui_callback - (int)ui_event_type * 2);
    }
  }
  else {
    ui_stack_integer_var_130 = ui_event_data;
    if (ui_event_flags == 0) {
      ui_stack_temp_138 = 4;
      ui_system_handle_widget_focus(ui_callback,ui_event_type,ui_parameter_value,ui_parameter_value);
    }
    else {
      ui_stack_temp_138 = 9;
      ui_system_handle_widget_focus(ui_callback - (int)ui_event_type * 2,ui_event_type,ui_stack_array,8);
      ui_stack_temp_138 = 4;
      ui_stack_integer_var_130 = ui_event_flags;
      ui_system_validate_widget_integrity(ui_stack_array,8,ui_parameter_value,ui_parameter_value);
    }
  }
  RenderUIComponent(ui_stack_variable_uint_28 ^ (ulonglong)ui_stack_array);
}

void ui_system_create_layout_block(longlong ui_callback,int ui_event_type,int ui_event_data,int ui_event_flags,uint64_t ui_parameter_value,
                  uint32_t ui_parameter_value)

{
  uint8_t ui_stack_array [32];
  uint32_t ui_stack_temp_248;
  void* *pui_stack_temp_240;
  void* *pui_stack_temp_238;
  void* *pui_stack_temp_230;
  uint8_t ui_stack_array [32];
  uint8_t ui_stack_array [480];
  ulonglong ui_stack_variable_uint_28;
  
  ui_stack_variable_uint_28 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  if (ui_event_data == 0) {
    pui_stack_temp_240 = &ui_widget_manager + (longlong)ui_event_flags * UI_WIDGET_CREATE_CALLBACK_OFFSET;
    ui_stack_temp_248 = 8;
    ui_system_process_widget_input(ui_callback - ui_event_type * 2,ui_event_type,ui_parameter_value,ui_parameter_value);
  }
  else if (ui_event_flags == 0) {
    ui_stack_temp_248 = 8;
    pui_stack_temp_240 = &ui_widget_manager + (longlong)ui_event_data * UI_WIDGET_CREATE_CALLBACK_OFFSET;
    ui_system_validate_widget_hierarchy(ui_callback,ui_event_type,ui_parameter_value,ui_parameter_value);
  }
  else {
    pui_stack_temp_240._data_offset_ = UI_EVENT_FLAG_OFFSET;
    ui_stack_temp_248 = THIRTEEN_VALUE;
    pui_stack_temp_238 = &ui_widget_manager + (longlong)ui_event_data * UI_WIDGET_CREATE_CALLBACK_OFFSET;
    ui_system_initialize_widget_state(ui_callback - ui_event_type * 2,ui_stack_array,ui_event_type,1);
    pui_stack_temp_230 = &ui_widget_manager + (longlong)ui_event_flags * UI_WIDGET_CREATE_CALLBACK_OFFSET;
    pui_stack_temp_238 = (void* *)CONCAT44(pui_stack_temp_238._data_size_,ui_parameter_value);
    pui_stack_temp_240 = (void* *)CONCAT44(pui_stack_temp_240._data_size_,8);
    ui_stack_temp_248 = 8;
    ui_system_update_widget_dimensions(ui_stack_array,ui_parameter_value,ui_parameter_value,UI_EVENT_FLAG_OFFSET);
  }
  RenderUIComponent(ui_stack_variable_uint_28 ^ (ulonglong)ui_stack_array);
}

void ui_system_update_layout_block(longlong ui_callback,uint64_t ui_event_type,int ui_event_data,int ui_event_flags,uint64_t ui_parameter_value,
                  uint32_t ui_parameter_value)

{
  uint8_t ui_stack_array [32];
  uint32_t ui_stack_temp_138;
  int ui_stack_integer_var_130;
  uint8_t ui_stack_array [256];
  ulonglong ui_stack_variable_uint_28;
  
  ui_stack_variable_uint_28 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  if (ui_event_data == 0) {
    if (ui_event_flags == 0) {
      ui_system_handle_callback_input(ui_callback,ui_event_type,ui_parameter_value,ui_parameter_value);
    }
    else {
      ui_stack_temp_138 = 8;
      ui_stack_integer_var_130 = ui_event_flags;
      ui_system_validate_widget_integrity(ui_callback - (int)ui_event_type * 2);
    }
  }
  else {
    ui_stack_integer_var_130 = ui_event_data;
    if (ui_event_flags == 0) {
      ui_stack_temp_138 = 8;
      ui_system_handle_widget_focus(ui_callback,ui_event_type,ui_parameter_value,ui_parameter_value);
    }
    else {
      ui_stack_temp_138 = THIRTEEN_VALUE;
      ui_system_handle_widget_focus(ui_callback - (int)ui_event_type * 2,ui_event_type,ui_stack_array,8);
      ui_stack_temp_138 = 8;
      ui_stack_integer_var_130 = ui_event_flags;
      ui_system_validate_widget_integrity(ui_stack_array,8,ui_parameter_value,ui_parameter_value);
    }
  }
  RenderUIComponent(ui_stack_variable_uint_28 ^ (ulonglong)ui_stack_array);
}

void ui_system_render_frame(longlong ui_callback,uint64_t ui_event_type,longlong ui_event_data,uint64_t ui_event_flags,
                  short *ui_parameter_value)

{
  ulonglong ui_system_event_id;
  uint ui_stack_data_offset_48;
  uint32_t ui_stack_event_parameter;
  
  if (((*ui_parameter_value == 0) && (ui_parameter_value[1] == 0)) && (ui_parameter_value[2] == 0)) {
    if (UI_MAX_EVENT_FLAGS < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 4);
      ui_stack_data_offset_48 = ui_stack_data_offset_48 + (ui_stack_data_offset_48 >> 4) * -UI_EVENT_FLAG_OFFSET;
      do {
        ui_system_validate_callback_parameters(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + UI_EVENT_FLAG_OFFSET;
        ui_event_data = ui_event_data + UI_EVENT_FLAG_OFFSET;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (7 < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 3);
      ui_stack_data_offset_48 = ui_stack_data_offset_48 + (ui_stack_data_offset_48 >> 3) * -8;
      do {
        ui_system_validate_event_parameters(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + 8;
        ui_event_data = ui_event_data + 8;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (3 < (int)ui_stack_data_offset_48) {
      ui_callback = ui_callback - ui_event_data;
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 2);
      do {
        ui_system_process_event_data(ui_callback + ui_event_data,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_event_data = ui_event_data + 4;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
  }
  else {
    if (UI_MAX_EVENT_FLAGS < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 4);
      ui_stack_data_offset_48 = ui_stack_data_offset_48 + (ui_stack_data_offset_48 >> 4) * -UI_EVENT_FLAG_OFFSET;
      do {
        ui_system_dispatch_event_to_handler(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + UI_EVENT_FLAG_OFFSET;
        ui_event_data = ui_event_data + UI_EVENT_FLAG_OFFSET;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (7 < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 3);
      ui_stack_data_offset_48 = ui_stack_data_offset_48 + (ui_stack_data_offset_48 >> 3) * -8;
      do {
        ui_system_update_event_state(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + 8;
        ui_event_data = ui_event_data + 8;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (3 < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 2);
      do {
        ui_system_handle_widget_interaction(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + 4;
        ui_event_data = ui_event_data + 4;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
  }
  return ui_system_return_value;
}

void ui_system_update_layout(void)

{
  InitializeUIRenderer();
}

void ui_system_draw_widget(longlong ui_callback,longlong ui_event_type,longlong ui_event_data,uint64_t ui_event_flags,
                  uint64_t ui_parameter_value,uint64_t ui_parameter_value,short *ui_parameter_value,uint64_t ui_parameter_value,
                  uint ui_parameter_value,uint32_t ui_callback_primary)

{
  ulonglong ui_system_event_id;
  longlong ui_event_index;
  
  if (((*ui_parameter_value == 0) && (ui_parameter_value[1] == 0)) && (ui_parameter_value[2] == 0)) {
    if (UI_MAX_EVENT_FLAGS < (int)ui_parameter_value) {
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 4);
      ui_parameter_value = ui_parameter_value + (ui_parameter_value >> 4) * -UI_EVENT_FLAG_OFFSET;
      do {
        ui_system_validate_event_parameters(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_callback = ui_callback + UI_EVENT_FLAG_OFFSET;
        ui_event_data = ui_event_data + UI_EVENT_FLAG_OFFSET;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (7 < (int)ui_parameter_value) {
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 3);
      ui_parameter_value = ui_parameter_value + (ui_parameter_value >> 3) * -8;
      do {
        ui_system_process_event_data(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_callback = ui_callback + 8;
        ui_event_data = ui_event_data + 8;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (3 < (int)ui_parameter_value) {
      ui_callback = ui_callback - ui_event_data;
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 2);
      do {
        ui_system_dispatch_event_to_handler(ui_callback + ui_event_data,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_event_data = ui_event_data + 4;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
  }
  else {
    if (UI_MAX_EVENT_FLAGS < (int)ui_parameter_value) {
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 4);
      ui_event_index = ui_callback + ui_event_type * -3;
      ui_parameter_value = ui_parameter_value + (ui_parameter_value >> 4) * -UI_EVENT_FLAG_OFFSET;
      ui_callback = ui_callback + ui_system_event_id * UI_EVENT_FLAG_OFFSET;
      do {
        ui_system_update_event_state(ui_event_index,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_event_index = ui_event_index + UI_EVENT_FLAG_OFFSET;
        ui_event_data = ui_event_data + UI_EVENT_FLAG_OFFSET;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (7 < (int)ui_parameter_value) {
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 3);
      ui_event_index = ui_callback + ui_event_type * -3;
      ui_callback = ui_callback + ui_system_event_id * 8;
      ui_parameter_value = ui_parameter_value + (ui_parameter_value >> 3) * -8;
      do {
        ui_system_handle_widget_interaction(ui_event_index,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_event_index = ui_event_index + 8;
        ui_event_data = ui_event_data + 8;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (3 < (int)ui_parameter_value) {
      ui_callback = ui_callback + ui_event_type * -3;
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 2);
      do {
        ui_system_process_widget_callback(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_callback = ui_callback + 4;
        ui_event_data = ui_event_data + 4;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
  }
  return ui_system_return_value;
}

void ui_system_handle_click(longlong ui_callback,uint64_t ui_event_type,longlong ui_event_data,uint64_t ui_event_flags,
                  short *ui_parameter_value)

{
  ulonglong ui_system_event_id;
  uint ui_stack_data_offset_48;
  uint32_t ui_stack_event_parameter;
  
  if (((*ui_parameter_value == 0) && (ui_parameter_value[1] == 0)) && (ui_parameter_value[2] == 0)) {
    if (UI_MAX_EVENT_FLAGS < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 4);
      ui_stack_data_offset_48 = ui_stack_data_offset_48 + (ui_stack_data_offset_48 >> 4) * -UI_EVENT_FLAG_OFFSET;
      do {
        ui_system_execute_event_handler(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + UI_EVENT_FLAG_OFFSET;
        ui_event_data = ui_event_data + UI_EVENT_FLAG_OFFSET;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (7 < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 3);
      ui_stack_data_offset_48 = ui_stack_data_offset_48 + (ui_stack_data_offset_48 >> 3) * -8;
      do {
        ui_system_validate_event_handler(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + 8;
        ui_event_data = ui_event_data + 8;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (3 < (int)ui_stack_data_offset_48) {
      ui_callback = ui_callback - ui_event_data;
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 2);
      do {
        ui_system_dispatch_widget_event(ui_callback + ui_event_data,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_event_data = ui_event_data + 4;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
  }
  else {
    if (UI_MAX_EVENT_FLAGS < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 4);
      ui_stack_data_offset_48 = ui_stack_data_offset_48 + (ui_stack_data_offset_48 >> 4) * -UI_EVENT_FLAG_OFFSET;
      do {
        ui_system_process_ui_event(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + UI_EVENT_FLAG_OFFSET;
        ui_event_data = ui_event_data + UI_EVENT_FLAG_OFFSET;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (7 < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 3);
      ui_stack_data_offset_48 = ui_stack_data_offset_48 + (ui_stack_data_offset_48 >> 3) * -8;
      do {
        ui_system_handle_event_dispatch(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + 8;
        ui_event_data = ui_event_data + 8;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (3 < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 2);
      do {
        ui_system_manage_event_queue(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + 4;
        ui_event_data = ui_event_data + 4;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
  }
  return ui_system_return_value;
}

void ui_system_handle_hover(void)

{
  InitializeUIRenderer();
}

void ui_system_handle_scroll(longlong ui_callback,longlong ui_event_type,longlong ui_event_data,uint64_t ui_event_flags,
                  uint64_t ui_parameter_value,uint64_t ui_parameter_value,short *ui_parameter_value,uint64_t ui_parameter_value,
                  uint ui_parameter_value,uint32_t ui_callback_primary)

{
  ulonglong ui_system_event_id;
  longlong ui_event_index;
  
  if (((*ui_parameter_value == 0) && (ui_parameter_value[1] == 0)) && (ui_parameter_value[2] == 0)) {
    if (UI_MAX_EVENT_FLAGS < (int)ui_parameter_value) {
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 4);
      ui_parameter_value = ui_parameter_value + (ui_parameter_value >> 4) * -UI_EVENT_FLAG_OFFSET;
      do {
        ui_system_process_event_sequence(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_callback = ui_callback + UI_EVENT_FLAG_OFFSET;
        ui_event_data = ui_event_data + UI_EVENT_FLAG_OFFSET;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (7 < (int)ui_parameter_value) {
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 3);
      ui_parameter_value = ui_parameter_value + (ui_parameter_value >> 3) * -8;
      do {
        ui_system_validate_event_sequence(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_callback = ui_callback + 8;
        ui_event_data = ui_event_data + 8;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (3 < (int)ui_parameter_value) {
      ui_callback = ui_callback - ui_event_data;
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 2);
      do {
        ui_system_handle_event_sequence(ui_callback + ui_event_data,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_event_data = ui_event_data + 4;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
  }
  else {
    if (UI_MAX_EVENT_FLAGS < (int)ui_parameter_value) {
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 4);
      ui_event_index = ui_callback + ui_event_type * -3;
      ui_parameter_value = ui_parameter_value + (ui_parameter_value >> 4) * -UI_EVENT_FLAG_OFFSET;
      ui_callback = ui_callback + ui_system_event_id * UI_EVENT_FLAG_OFFSET;
      do {
        ui_system_update_event_offset(ui_event_index,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_event_index = ui_event_index + UI_EVENT_FLAG_OFFSET;
        ui_event_data = ui_event_data + UI_EVENT_FLAG_OFFSET;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (7 < (int)ui_parameter_value) {
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 3);
      ui_event_index = ui_callback + ui_event_type * -3;
      ui_callback = ui_callback + ui_system_event_id * 8;
      ui_parameter_value = ui_parameter_value + (ui_parameter_value >> 3) * -8;
      do {
        ui_system_process_offset_event(ui_event_index,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_event_index = ui_event_index + 8;
        ui_event_data = ui_event_data + 8;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (3 < (int)ui_parameter_value) {
      ui_callback = ui_callback + ui_event_type * -3;
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 2);
      do {
        ui_system_handle_callback_event(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_callback = ui_callback + 4;
        ui_event_data = ui_event_data + 4;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
  }
  return ui_system_return_value;
}

void ui_system_process_layout_constraints(ulonglong *ui_callback_context,longlong ui_event_type,uint64_t *ui_event_data,
                  uint8_t (*ui_event_flags) [16])

{
  uint64_t ui_system_event_id;
  ulonglong ui_system_task_id;
  ulonglong ui_temp_ulong;
  short ui_component;
  short short_value0;
  short short_value1;
  short short_value2;
  uint8_t aui_task_identifier [12];
  uint8_t aui_event_id_fourth [12];
  uint8_t aui_event_id_fifth [12];
  uint8_t aui_event_id6 [12];
  short short_value7;
  short short_value9;
  short ui_component;
  uint8_t aui_event_id8 [16];
  short ui_component;
  uint8_t ui_font_data_buffer [16];
  uint8_t ui_task_index_array_primary [16];
  uint8_t ui_system_shader_buffer_variable [16];
  uint8_t ui_temp_buffer [16];
  uint8_t ui_system_layout_data_buffer [16];
  uint8_t ui_temporary_buffer [16];
  uint8_t ui_temp_buffer [16];
  
  ui_system_event_id = *(uint64_t *)((longlong)ui_callback + ui_event_type);
  ui_system_task_id = *(ulonglong *)((longlong)ui_callback + ui_event_type * 2);
  ui_loop_counter = *(ulonglong *)((longlong)ui_callback + ui_event_type * 4);
  ui_temp_buffer = *ui_event_flags;
  ui_loop_counter = *ui_callback;
  ui_temp_buffer._data_format_ = 0;
  ui_temp_buffer._0_8_ = ui_loop_counter;
  ui_temp_buffer._offset_z_ = (short)(ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
  ui_temp_buffer._offset_w_ = (short)((ulonglong)ui_system_event_id >> UI_MEMORY_ALLOC_SIZE);
  ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
  ui_temp_buffer._offset_x_ = 0;
  ui_temp_buffer._0_8_ = ui_loop_counter;
  ui_temp_buffer._offset_y_ = (short)((ulonglong)ui_system_event_id >> UI_OFFSET_32);
  ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
  ui_temp_buffer._offset_x_ = (short)(ui_loop_counter >> UI_OFFSET_32);
  ui_temp_buffer._0_8_ = ui_loop_counter;
  aui_task_identifier._4_8_ = ui_temp_buffer._8_8_;
  aui_task_identifier._component_y_ = (short)((ulonglong)ui_system_event_id >> UI_EVENT_FLAG_OFFSET);
  aui_task_identifier._component_x_ = (short)(ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
  ui_temp_buffer._data_offset_ = CONCAT22((short)ui_system_event_id,(short)ui_loop_counter);
  ui_temp_buffer._4_12_ = aui_task_identifier;
  ui_system_event_id = *(uint64_t *)((longlong)ui_callback + ui_event_type * 3);
  ui_temporary_buffer._data_format_ = 0;
  ui_temporary_buffer._0_8_ = ui_system_task_id;
  ui_temporary_buffer._offset_z_ = (short)(ui_system_task_id >> UI_MEMORY_ALLOC_SIZE);
  ui_temporary_buffer._offset_w_ = (short)((ulonglong)ui_system_event_id >> UI_MEMORY_ALLOC_SIZE);
  ui_system_layout_data_buffer._data_flags_ = ui_temporary_buffer._data_flags_;
  ui_system_layout_data_buffer._offset_x_ = 0;
  ui_system_layout_data_buffer._0_8_ = ui_system_task_id;
  ui_system_layout_data_buffer._offset_y_ = (short)((ulonglong)ui_system_event_id >> UI_OFFSET_32);
  ui_system_shader_buffer_variable._10_6_ = ui_system_layout_data_buffer._10_6_;
  ui_system_shader_buffer_variable._offset_x_ = (short)(ui_system_task_id >> UI_OFFSET_32);
  ui_system_shader_buffer_variable._0_8_ = ui_system_task_id;
  aui_event_id_fourth._4_8_ = ui_system_shader_buffer_variable._8_8_;
  aui_event_id_fourth._component_y_ = (short)((ulonglong)ui_system_event_id >> UI_EVENT_FLAG_OFFSET);
  aui_event_id_fourth._component_x_ = (short)(ui_system_task_id >> UI_EVENT_FLAG_OFFSET);
  ui_temp_buffer._component_w_ = (short)ui_system_event_id;
  ui_temp_buffer._component_z_ = (short)ui_system_task_id;
  ui_system_event_id = *(uint64_t *)((longlong)ui_callback + ui_event_type * 5);
  ui_system_task_id = *(ulonglong *)((longlong)ui_callback + ui_event_type * 6);
  ui_temp_buffer._data_format_ = 0;
  ui_temp_buffer._0_8_ = ui_loop_counter;
  ui_temp_buffer._offset_z_ = (short)(ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
  ui_temp_buffer._offset_w_ = (short)((ulonglong)ui_system_event_id >> UI_MEMORY_ALLOC_SIZE);
  ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
  ui_temp_buffer._offset_x_ = 0;
  ui_temp_buffer._0_8_ = ui_loop_counter;
  ui_temp_buffer._offset_y_ = (short)((ulonglong)ui_system_event_id >> UI_OFFSET_32);
  ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
  ui_temp_buffer._offset_x_ = (short)(ui_loop_counter >> UI_OFFSET_32);
  ui_temp_buffer._0_8_ = ui_loop_counter;
  aui_event_id_fifth._4_8_ = ui_temp_buffer._8_8_;
  aui_event_id_fifth._component_y_ = (short)((ulonglong)ui_system_event_id >> UI_EVENT_FLAG_OFFSET);
  aui_event_id_fifth._component_x_ = (short)(ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
  ui_temp_buffer._data_offset_ = CONCAT22((short)ui_system_event_id,(short)ui_loop_counter);
  ui_temp_buffer._4_12_ = aui_event_id_fifth;
  ui_temp_buffer._0_8_ = CONCAT44(ui_system_shader_buffer_variable._data_format_,ui_temp_buffer._data_format_);
  ui_temp_buffer._data_format_ = ui_temp_buffer._data_flags_;
  ui_temp_buffer._data_flags_ = ui_system_layout_data_buffer._data_flags_;
  ui_temp_buffer._0_8_ = ui_temp_buffer._0_8_;
  ui_temp_buffer._data_format_ = aui_task_identifier._data_offset_;
  ui_temp_buffer._data_flags_ = aui_event_id_fourth._data_offset_;
  ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_;
  ui_system_event_id = *(uint64_t *)(ui_event_type * 7 + (longlong)ui_callback);
  aui_event_id8._data_format_ = 0;
  aui_event_id8._0_8_ = ui_system_task_id;
  aui_event_id8._offset_z_ = (short)(ui_system_task_id >> UI_MEMORY_ALLOC_SIZE);
  aui_event_id8._offset_w_ = (short)((ulonglong)ui_system_event_id >> UI_MEMORY_ALLOC_SIZE);
  ui_temp_buffer._data_flags_ = aui_event_id8._data_flags_;
  ui_temp_buffer._offset_x_ = 0;
  ui_temp_buffer._0_8_ = ui_system_task_id;
  ui_temp_buffer._offset_y_ = (short)((ulonglong)ui_system_event_id >> UI_OFFSET_32);
  ui_font_data_buffer._10_6_ = ui_temp_buffer._10_6_;
  ui_font_data_buffer._offset_x_ = (short)(ui_system_task_id >> UI_OFFSET_32);
  ui_font_data_buffer._0_8_ = ui_system_task_id;
  aui_event_id6._4_8_ = ui_font_data_buffer._8_8_;
  aui_event_id6._component_y_ = (short)((ulonglong)ui_system_event_id >> UI_EVENT_FLAG_OFFSET);
  aui_event_id6._component_x_ = (short)(ui_system_task_id >> UI_EVENT_FLAG_OFFSET);
  ui_temp_buffer._offset_w_ = (short)ui_system_event_id;
  ui_temp_buffer._offset_z_ = (short)ui_system_task_id;
  aui_event_id8 = pshufb(ui_temp_buffer,_ui_config_window_settings);
  ui_temp_buffer._0_8_ = ui_temp_buffer._0_8_;
  ui_temp_buffer._data_format_ = aui_event_id_fifth._data_offset_;
  ui_temp_buffer._data_flags_ = aui_event_id6._data_offset_;
  ui_temp_buffer._data_format_ = ui_temp_buffer._data_offset_;
  ui_temp_buffer._0_8_ = CONCAT44(ui_font_data_buffer._data_format_,ui_temp_buffer._data_format_);
  ui_temp_buffer._data_format_ = ui_temp_buffer._data_flags_;
  ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
  ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
  ui_temp_buffer._0_8_ = ui_temp_buffer._8_8_;
  ui_temp_buffer._8_8_ = ui_temp_buffer._0_8_;
  ui_temp_buffer._0_8_ = ui_temp_buffer._0_8_;
  ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
  ui_temp_buffer._0_8_ = ui_temp_buffer._8_8_;
  ui_temp_buffer = pmaddubsw(ui_temp_buffer,aui_event_id8);
  aui_event_id8 = pshufb(ui_temp_buffer,_ui_config_widget_settings);
  ui_font_data_buffer = pmaddubsw(ui_temp_buffer,aui_event_id8);
  aui_event_id8 = pshufb(ui_temp_buffer,_ui_config_layout_settings);
  ui_temp_buffer = pshufb(ui_temp_buffer,_ui_config_render_settings);
  ui_temp_buffer = pmaddubsw(ui_temp_buffer,aui_event_id8);
  aui_event_id8 = pmaddubsw(ui_temp_buffer,ui_temp_buffer);
  ui_component = ui_temp_buffer._component_x_;
  short_value7 = ui_font_data_buffer._component_x_;
  ui_temp_buffer._component_x_ = (ushort)(ui_component < short_value7) * ui_component | (ushort)(ui_component >= short_value7) * short_value7;
  ui_component = ui_temp_buffer._component_y_;
  short_value9 = ui_font_data_buffer._component_y_;
  ui_temp_buffer._component_y_ = (ushort)(ui_component < short_value9) * ui_component | (ushort)(ui_component >= short_value9) * short_value9;
  ui_component = ui_temp_buffer._component_z_;
  ui_component = ui_font_data_buffer._component_z_;
  ui_temp_buffer._component_z_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
  ui_component = ui_temp_buffer._component_w_;
  ui_component = ui_font_data_buffer._component_w_;
  ui_temp_buffer._component_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
  ui_component = ui_temp_buffer._offset_x_;
  ui_component = ui_font_data_buffer._offset_x_;
  ui_temp_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
  short_value0 = ui_temp_buffer._offset_y_;
  ui_component = ui_font_data_buffer._offset_y_;
  ui_temp_buffer._offset_y_ = (ushort)(short_value0 < ui_component) * short_value0 | (ushort)(short_value0 >= ui_component) * ui_component;
  short_value1 = ui_temp_buffer._offset_z_;
  ui_component = ui_font_data_buffer._offset_z_;
  ui_component = ui_font_data_buffer._offset_w_;
  ui_temp_buffer._offset_z_ = (ushort)(short_value1 < ui_component) * short_value1 | (ushort)(short_value1 >= ui_component) * ui_component;
  short_value2 = ui_temp_buffer._offset_w_;
  ui_temp_buffer._offset_w_ = (ushort)(short_value2 < ui_component) * short_value2 | (ushort)(short_value2 >= ui_component) * ui_component;
  ui_task_index_array_primary._component_x_ = (ushort)(short_value7 < ui_component) * ui_component | (ushort)(short_value7 >= ui_component) * short_value7;
  ui_task_index_array_primary._component_y_ = (ushort)(short_value9 < ui_component) * ui_component | (ushort)(short_value9 >= ui_component) * short_value9;
  ui_task_index_array_primary._component_z_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
  ui_task_index_array_primary._component_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
  ui_task_index_array_primary._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
  ui_task_index_array_primary._offset_y_ = (ushort)(ui_component < short_value0) * short_value0 | (ushort)(ui_component >= short_value0) * ui_component;
  ui_task_index_array_primary._offset_z_ = (ushort)(ui_component < short_value1) * short_value1 | (ushort)(ui_component >= short_value1) * ui_component;
  ui_task_index_array_primary._offset_w_ = (ushort)(ui_component < short_value2) * short_value2 | (ushort)(ui_component >= short_value2) * ui_component;
  aui_event_id8 = paddsw(ui_temp_buffer,aui_event_id8);
  ui_temp_buffer = paddsw(aui_event_id8,ui_temp_buffer);
  ui_temp_buffer = paddsw(ui_temp_buffer,ui_task_index_array_primary);
  ui_temp_buffer = pmulhrsw(ui_temp_buffer,_ui_config_input_settings);
  ui_component = ui_temp_buffer._component_x_;
  ui_component = ui_temp_buffer._component_y_;
  ui_component = ui_temp_buffer._component_z_;
  ui_component = ui_temp_buffer._component_w_;
  ui_component = ui_temp_buffer._offset_x_;
  short_value0 = ui_temp_buffer._offset_y_;
  short_value1 = ui_temp_buffer._offset_z_;
  short_value2 = ui_temp_buffer._offset_w_;
  *ui_event_data = CONCAT17((0 < short_value2) * (short_value2 < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[ui_component_angle_offset] - (UI_COMPONENT_MAX_VALUE < short_value2),
                      CONCAT16((0 < short_value1) * (short_value1 < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[12] - (UI_COMPONENT_MAX_VALUE < short_value1),
                               CONCAT15((0 < short_value0) * (short_value0 < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[10] -
                                        (UI_COMPONENT_MAX_VALUE < short_value0),
                                        CONCAT14((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[8] -
                                                 (UI_COMPONENT_MAX_VALUE < ui_component),
                                                 CONCAT13((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[6]
                                                          - (UI_COMPONENT_MAX_VALUE < ui_component),
                                                          CONCAT12((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) *
                                                                   ui_temp_buffer[4] - (UI_COMPONENT_MAX_VALUE < ui_component),
                                                                   CONCAT11((0 < ui_component) *
                                                                            (ui_component < UI_MAX_COMPONENT_VALUE) *
                                                                            ui_temp_buffer[2] -
                                                                            (UI_COMPONENT_MAX_VALUE < ui_component),
                                                                            (0 < ui_component) *
                                                                            (ui_component < UI_MAX_COMPONENT_VALUE) *
                                                                            ui_temp_buffer[0] -
                                                                            (UI_COMPONENT_MAX_VALUE < ui_component))))))));
  return ui_system_return_value;
}

void ui_system_cleanup_layout_cache(void)

{
  InitializeUIRenderer();
}

void ui_system_validate_layout_metrics(longlong ui_callback,longlong ui_event_type,longlong ui_event_data,longlong ui_event_flags,
                  longlong ui_parameter_value,uint ui_parameter_value,int ui_parameter_value,int ui_parameter_value,int ui_parameter_value)

{
  uint64_t ui_system_event_id;
  ulonglong ui_system_task_id;
  ulonglong ui_temp_ulong;
  short ui_component;
  short short_value0;
  short short_value1;
  uint8_t aui_event_id_secondary [12];
  uint8_t aui_task_identifier [12];
  uint16_t ui_event_id_fourth;
  uint8_t ui_event_id_fifth;
  uint8_t aui_event_id6 [12];
  ulonglong *ui_event_data_buffer_buffer;
  ulonglong ui_event_id8;
  longlong long_counter9;
  longlong ui_event_index;
  uint ui_task_index1;
  uint32_t *ui_task_index_pointer2;
  short ui_component;
  uint8_t ui_window_data_buffer [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  uint16_t ui_loop_counter;
  uint8_t ui_temp_buffer [16];
  longlong ui_stack_parameter_long;
  uint64_t ui_stack_operation_flag;
  uint32_t ui_stack_variable_buffer_xor;
  uint32_t ui_stack_temp_54;
  uint32_t ui_stack_variable_uint_50;
  uint32_t ui_stack_temp_4c;
  ulonglong ui_stack_validation_mask;
  uint8_t ui_temp_buffer [16];
  
  ui_stack_validation_mask = ui_stack_flag_mask ^ (ulonglong)&ui_stack_parameter_long;
  ui_callback = ui_callback + -3;
  ui_stack_parameter_long = ui_event_data;
  if (0 < ui_parameter_value) {
    ui_event_id8 = (ulonglong)((ui_parameter_value - 1U >> 2) + 1);
    do {
      if (0 < (longlong)ui_parameter_value) {
        ui_task_index_pointer2 = (uint32_t *)(ui_stack_parameter_long + ui_event_flags * 2);
        ui_event_index = ((longlong)ui_parameter_value - 1U >> 2) + 1;
        ui_task_index1 = ui_parameter_value;
        do {
          long_counter9 = 0;
          do {
            ui_event_buffer = (ulonglong *)(((longlong)(int)ui_task_index1 >> 4) + ui_callback);
            if ((ui_task_index1 & UI_MAX_EVENT_FLAGS) == 0) {
              *(uint8_t *)(&ui_stack_variable_buffer_xor + long_counter9) = *(uint8_t *)((longlong)ui_event_buffer + 3);
              *(uint8_t *)((longlong)&ui_stack_variable_buffer_xor + long_counter9 * 4 + 1) =
                   *(uint8_t *)((longlong)ui_event_buffer + ui_event_type + 3);
              *(uint8_t *)((longlong)&ui_stack_variable_buffer_xor + long_counter9 * 4 + 2) =
                   *(uint8_t *)((longlong)ui_event_buffer + ui_event_type * 2 + 3);
              *(uint8_t *)((longlong)&ui_stack_variable_buffer_xor + long_counter9 * 4 + 3) =
                   *(uint8_t *)(ui_event_type * 3 + 3 + (longlong)ui_event_buffer);
            }
            else {
              ui_system_event_id = *(uint64_t *)((longlong)ui_event_buffer + ui_event_type);
              ui_system_task_id = *ui_event_buffer;
              ui_loop_counter = *(ulonglong *)((longlong)ui_event_buffer + ui_event_type * 2);
              ui_temp_buffer._data_format_ = 0;
              ui_temp_buffer._0_8_ = ui_system_task_id;
              ui_temp_buffer._offset_z_ = (short)(ui_system_task_id >> UI_MEMORY_ALLOC_SIZE);
              ui_temp_buffer._offset_w_ = (short)((ulonglong)ui_system_event_id >> UI_MEMORY_ALLOC_SIZE);
              ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
              ui_temp_buffer._offset_x_ = 0;
              ui_temp_buffer._0_8_ = ui_system_task_id;
              ui_temp_buffer._offset_y_ = (short)((ulonglong)ui_system_event_id >> UI_OFFSET_32);
              ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
              ui_temp_buffer._offset_x_ = (short)(ui_system_task_id >> UI_OFFSET_32);
              ui_temp_buffer._0_8_ = ui_system_task_id;
              aui_event_id_secondary._4_8_ = ui_temp_buffer._8_8_;
              aui_event_id_secondary._component_y_ = (short)((ulonglong)ui_system_event_id >> UI_EVENT_FLAG_OFFSET);
              aui_event_id_secondary._component_x_ = (short)(ui_system_task_id >> UI_EVENT_FLAG_OFFSET);
              ui_temp_buffer._data_offset_ = CONCAT22((short)ui_system_event_id,(short)ui_system_task_id);
              ui_temp_buffer._4_12_ = aui_event_id_secondary;
              ui_system_event_id = *(uint64_t *)(ui_event_type * 3 + (longlong)ui_event_buffer);
              ui_temp_buffer = *(uint8_t (*) [16])(ui_parameter_value + (ulonglong)(ui_task_index1 & UI_MAX_EVENT_FLAGS) * UI_EVENT_FLAG_OFFSET);
              ui_window_data_buffer._data_format_ = 0;
              ui_window_data_buffer._0_8_ = ui_loop_counter;
              ui_window_data_buffer._offset_z_ = (short)(ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
              ui_window_data_buffer._offset_w_ = (short)((ulonglong)ui_system_event_id >> UI_MEMORY_ALLOC_SIZE);
              ui_temp_buffer._data_flags_ = ui_window_data_buffer._data_flags_;
              ui_temp_buffer._offset_x_ = 0;
              ui_temp_buffer._0_8_ = ui_loop_counter;
              ui_temp_buffer._offset_y_ = (short)((ulonglong)ui_system_event_id >> UI_OFFSET_32);
              ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
              ui_temp_buffer._offset_x_ = (short)(ui_loop_counter >> UI_OFFSET_32);
              ui_temp_buffer._0_8_ = ui_loop_counter;
              aui_task_identifier._4_8_ = ui_temp_buffer._8_8_;
              aui_task_identifier._component_y_ = (short)((ulonglong)ui_system_event_id >> UI_EVENT_FLAG_OFFSET);
              aui_task_identifier._component_x_ = (short)(ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
              ui_temp_buffer._component_w_ = (short)ui_system_event_id;
              ui_temp_buffer._component_z_ = (short)ui_loop_counter;
              ui_window_data_buffer = pshufb(ui_temp_buffer,_ui_config_window_settings);
              ui_temp_buffer._data_size_ = ui_temp_buffer._data_format_;
              ui_temp_buffer._data_offset_ = ui_temp_buffer._data_format_;
              ui_temp_buffer._data_format_ = ui_temp_buffer._data_flags_;
              ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
              ui_temp_buffer._0_8_ = ui_temp_buffer._0_8_;
              ui_temp_buffer._data_format_ = aui_event_id_secondary._data_offset_;
              ui_temp_buffer._data_flags_ = aui_task_identifier._data_offset_;
              ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
              ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_;
              ui_temp_buffer._8_8_ = 0;
              ui_temp_buffer._0_8_ = ui_temp_buffer._8_8_;
              ui_temp_buffer = pmaddubsw(ui_temp_buffer,ui_window_data_buffer);
              ui_window_data_buffer = pshufb(ui_temp_buffer,_ui_config_widget_settings);
              ui_temp_buffer = pmaddubsw(ui_temp_buffer,ui_window_data_buffer);
              ui_window_data_buffer = pshufb(ui_temp_buffer,_ui_config_layout_settings);
              ui_temp_buffer = pshufb(ui_temp_buffer,_ui_config_render_settings);
              ui_temp_buffer = pmaddubsw(ui_temp_buffer >> UI_BUFFER_SIZE_64,ui_window_data_buffer);
              ui_window_data_buffer = pmaddubsw(ui_temp_buffer,ui_temp_buffer);
              ui_component = ui_temp_buffer._component_x_;
              ui_temp_buffer._component_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
              ui_component = ui_temp_buffer._component_y_;
              ui_temp_buffer._component_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
              ui_component = ui_temp_buffer._component_z_;
              ui_temp_buffer._component_z_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
              ui_component = ui_temp_buffer._component_w_;
              ui_temp_buffer._component_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
              ui_component = ui_temp_buffer._offset_x_;
              ui_temp_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
              ui_component = ui_temp_buffer._offset_y_;
              ui_temp_buffer._offset_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component
              ;
              short_value0 = ui_temp_buffer._offset_z_;
              ui_component = ui_temp_buffer._offset_z_;
              ui_component = ui_temp_buffer._offset_w_;
              ui_temp_buffer._offset_z_ =
                   (ushort)(short_value0 < ui_component) * short_value0 | (ushort)(short_value0 >= ui_component) * ui_component;
              short_value1 = ui_temp_buffer._offset_w_;
              ui_temp_buffer._offset_w_ =
                   (ushort)(short_value1 < ui_component) * short_value1 | (ushort)(short_value1 >= ui_component) * ui_component;
              ui_temp_buffer._component_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
              ui_temp_buffer._component_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
              ui_temp_buffer._component_z_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
              ui_temp_buffer._component_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
              ui_temp_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
              ui_temp_buffer._offset_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component
              ;
              ui_temp_buffer._offset_z_ =
                   (ushort)(ui_component < short_value0) * short_value0 | (ushort)(ui_component >= short_value0) * ui_component;
              ui_temp_buffer._offset_w_ =
                   (ushort)(ui_component < short_value1) * short_value1 | (ushort)(ui_component >= short_value1) * ui_component;
              ui_window_data_buffer = paddsw(ui_temp_buffer,ui_window_data_buffer);
              ui_temp_buffer = paddsw(ui_window_data_buffer,ui_temp_buffer);
              ui_temp_buffer = paddsw(ui_temp_buffer,ui_temp_buffer);
              ui_temp_buffer = pmulhrsw(ui_temp_buffer,_ui_config_input_settings);
              ui_component = ui_temp_buffer._component_x_;
              ui_component = ui_temp_buffer._component_y_;
              ui_component = ui_temp_buffer._component_z_;
              ui_component = ui_temp_buffer._component_w_;
              (&ui_stack_variable_buffer_xor)[long_counter9] =
                   CONCAT13((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[6] - (UI_COMPONENT_MAX_VALUE < ui_component),
                            CONCAT12((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[4] - (UI_COMPONENT_MAX_VALUE < ui_component),
                                     CONCAT11((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[2] -
                                              (UI_COMPONENT_MAX_VALUE < ui_component),
                                              (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[0] -
                                              (UI_COMPONENT_MAX_VALUE < ui_component))));
            }
            ui_task_index1 = ui_task_index1 + ui_parameter_value;
            long_counter9 = long_counter9 + 1;
          } while (long_counter9 < 4);
          ui_event_id_fourth = CONCAT11((char)((uint)ui_stack_temp_54 >> UI_SNAPSHOT_CREATE_FLAGS),(char)((uint)ui_stack_variable_buffer_xor >> UI_SNAPSHOT_CREATE_FLAGS));
          ui_system_event_id = CONCAT35(CONCAT21(ui_event_id_fourth,(char)((uint)ui_stack_temp_54 >> UI_EVENT_FLAG_OFFSET)),
                           CONCAT14((char)((uint)ui_stack_variable_buffer_xor >> UI_EVENT_FLAG_OFFSET),ui_stack_variable_buffer_xor));
          ui_event_id_fifth = CONCAT51(CONCAT41((int)((ulonglong)ui_system_event_id >> UI_OFFSET_32),(char)((uint)ui_stack_temp_54 >> 8)),
                            (char)((uint)ui_stack_variable_buffer_xor >> 8));
          ui_loop_counter = CONCAT11((char)ui_stack_temp_54,(char)ui_stack_variable_buffer_xor);
          ui_system_task_id = CONCAT62(ui_event_id_fifth,ui_loop_counter);
          ui_temp_buffer[UI_MAX_EVENT_FLAGS] = (char)((uint)ui_stack_temp_4c >> UI_SNAPSHOT_CREATE_FLAGS);
          ui_temp_buffer[ui_component_angle_offset] = (char)((uint)ui_stack_variable_uint_50 >> UI_SNAPSHOT_CREATE_FLAGS);
          aui_event_id6[3] = (char)((uint)ui_stack_temp_4c >> 8);
          aui_event_id6[2] = (char)((uint)ui_stack_variable_uint_50 >> 8);
          ui_temp_buffer._data_format_ = 0;
          ui_temp_buffer._0_8_ = ui_system_task_id;
          ui_temp_buffer._offset_z_ = ui_event_id_fourth;
          ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
          ui_temp_buffer._offset_x_ = 0;
          ui_temp_buffer._0_8_ = ui_system_task_id;
          ui_temp_buffer._offset_y_ =
               (short)(CONCAT15((char)((uint)ui_stack_temp_4c >> UI_EVENT_FLAG_OFFSET),
                                CONCAT14((char)((uint)ui_stack_variable_uint_50 >> UI_EVENT_FLAG_OFFSET),ui_stack_variable_uint_50)) >> UI_OFFSET_32);
          ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
          ui_temp_buffer._offset_x_ = (short)((ulonglong)ui_system_event_id >> UI_OFFSET_32);
          ui_temp_buffer._0_8_ = ui_system_task_id;
          aui_event_id6._4_8_ = ui_temp_buffer._8_8_;
          aui_event_id6._component_x_ = (short)ui_event_id_fifth;
          *(uint *)(ui_event_flags * -2 + (longlong)ui_task_index_pointer2) =
               CONCAT22(CONCAT11((char)ui_stack_temp_4c,(char)ui_stack_variable_uint_50),ui_loop_counter);
          *(int *)((longlong)ui_task_index_pointer2 - ui_event_flags) = aui_event_id6._data_offset_;
          *ui_task_index_pointer2 = ui_temp_buffer._data_format_;
          *(uint32_t *)(ui_event_flags + (longlong)ui_task_index_pointer2) = ui_temp_buffer._data_flags_;
          ui_task_index_pointer2 = ui_task_index_pointer2 + 1;
          ui_event_index = ui_event_index + -1;
        } while (ui_event_index != 0);
      }
      ui_callback = ui_callback + ui_event_type * 4;
      ui_stack_parameter_long = ui_stack_parameter_long + ui_event_flags * 4;
      ui_event_id8 = ui_event_id8 - 1;
    } while (ui_event_id8 != 0);
    ui_stack_operation_flag = 0;
  }
  RenderUIComponent(ui_stack_validation_mask ^ (ulonglong)&ui_stack_parameter_long);
}

void ui_system_update_layout_positions(longlong ui_callback,longlong ui_event_type)

{
  uint64_t ui_system_event_id;
  ulonglong ui_system_task_id;
  ulonglong ui_temp_ulong;
  short ui_component;
  short short_value0;
  short short_value1;
  uint8_t aui_event_id_secondary [12];
  uint8_t aui_task_identifier [12];
  uint16_t ui_event_id_fourth;
  uint8_t ui_event_id_fifth;
  uint8_t aui_event_id6 [12];
  int ui_register_eax;
  ulonglong *ui_event_data_buffer_buffer;
  ulonglong ui_event_id8;
  longlong long_counter9;
  longlong ui_widget_base;
  longlong ui_event_index;
  uint ui_task_index1;
  longlong in_R10;
  longlong ui_register_r11;
  uint32_t *ui_task_index_pointer2;
  longlong ui_system_register_long;
  short ui_component;
  uint8_t ui_window_data_buffer [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  uint16_t ui_loop_counter;
  uint8_t ui_temp_buffer [16];
  longlong unaff_retaddr;
  uint32_t ui_stack_event_parameter;
  ulonglong ui_stack_event_parameter;
  longlong inuiui_stack_var_var_00000090;
  uint inuiui_stack_var_var_00000098;
  int ui_stack_var_a0;
  int ui_stack_var_a8;
  uint8_t ui_temp_buffer [16];
  
  ui_event_type = ui_event_type * 4;
  ui_event_id8 = (ulonglong)((ui_register_eax - 1U >> 2) + 1);
  do {
    if (0 < ui_callback) {
      ui_task_index_pointer2 = (uint32_t *)(ui_register_r11 + ui_system_register * 2);
      ui_event_index = (ui_callback - 1U >> 2) + 1;
      ui_task_index1 = inuiui_stack_var_var_00000098;
      do {
        long_counter9 = 0;
        do {
          ui_event_buffer = (ulonglong *)(((longlong)(int)ui_task_index1 >> 4) + ui_widget_base);
          if ((ui_task_index1 & UI_MAX_EVENT_FLAGS) == 0) {
            *(uint8_t *)(&ui_stack_event_parameter + long_counter9) = *(uint8_t *)((longlong)ui_event_buffer + 3);
            *(uint8_t *)((longlong)&ui_stack_event_parameter + long_counter9 * 4 + 1) =
                 *(uint8_t *)((longlong)ui_event_buffer + in_R10 + 3);
            *(uint8_t *)((longlong)&ui_stack_event_parameter + long_counter9 * 4 + 2) =
                 *(uint8_t *)((longlong)ui_event_buffer + in_R10 * 2 + 3);
            *(uint8_t *)((longlong)&ui_stack_event_parameter + long_counter9 * 4 + 3) =
                 *(uint8_t *)(in_R10 * 3 + 3 + (longlong)ui_event_buffer);
          }
          else {
            ui_system_event_id = *(uint64_t *)((longlong)ui_event_buffer + in_R10);
            ui_system_task_id = *ui_event_buffer;
            ui_loop_counter = *(ulonglong *)((longlong)ui_event_buffer + in_R10 * 2);
            ui_temp_buffer._data_format_ = 0;
            ui_temp_buffer._0_8_ = ui_system_task_id;
            ui_temp_buffer._offset_z_ = (short)(ui_system_task_id >> UI_MEMORY_ALLOC_SIZE);
            ui_temp_buffer._offset_w_ = (short)((ulonglong)ui_system_event_id >> UI_MEMORY_ALLOC_SIZE);
            ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
            ui_temp_buffer._offset_x_ = 0;
            ui_temp_buffer._0_8_ = ui_system_task_id;
            ui_temp_buffer._offset_y_ = (short)((ulonglong)ui_system_event_id >> UI_OFFSET_32);
            ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
            ui_temp_buffer._offset_x_ = (short)(ui_system_task_id >> UI_OFFSET_32);
            ui_temp_buffer._0_8_ = ui_system_task_id;
            aui_event_id_secondary._4_8_ = ui_temp_buffer._8_8_;
            aui_event_id_secondary._component_y_ = (short)((ulonglong)ui_system_event_id >> UI_EVENT_FLAG_OFFSET);
            aui_event_id_secondary._component_x_ = (short)(ui_system_task_id >> UI_EVENT_FLAG_OFFSET);
            ui_temp_buffer._data_offset_ = CONCAT22((short)ui_system_event_id,(short)ui_system_task_id);
            ui_temp_buffer._4_12_ = aui_event_id_secondary;
            ui_system_event_id = *(uint64_t *)(in_R10 * 3 + (longlong)ui_event_buffer);
            ui_temp_buffer = *(uint8_t (*) [16])(inuiui_stack_var_var_00000090 + (ulonglong)(ui_task_index1 & UI_MAX_EVENT_FLAGS) * UI_EVENT_FLAG_OFFSET);
            ui_window_data_buffer._data_format_ = 0;
            ui_window_data_buffer._0_8_ = ui_loop_counter;
            ui_window_data_buffer._offset_z_ = (short)(ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
            ui_window_data_buffer._offset_w_ = (short)((ulonglong)ui_system_event_id >> UI_MEMORY_ALLOC_SIZE);
            ui_temp_buffer._data_flags_ = ui_window_data_buffer._data_flags_;
            ui_temp_buffer._offset_x_ = 0;
            ui_temp_buffer._0_8_ = ui_loop_counter;
            ui_temp_buffer._offset_y_ = (short)((ulonglong)ui_system_event_id >> UI_OFFSET_32);
            ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
            ui_temp_buffer._offset_x_ = (short)(ui_loop_counter >> UI_OFFSET_32);
            ui_temp_buffer._0_8_ = ui_loop_counter;
            aui_task_identifier._4_8_ = ui_temp_buffer._8_8_;
            aui_task_identifier._component_y_ = (short)((ulonglong)ui_system_event_id >> UI_EVENT_FLAG_OFFSET);
            aui_task_identifier._component_x_ = (short)(ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
            ui_temp_buffer._component_w_ = (short)ui_system_event_id;
            ui_temp_buffer._component_z_ = (short)ui_loop_counter;
            ui_window_data_buffer = pshufb(ui_temp_buffer,_ui_config_window_settings);
            ui_temp_buffer._data_size_ = ui_temp_buffer._data_format_;
            ui_temp_buffer._data_offset_ = ui_temp_buffer._data_format_;
            ui_temp_buffer._data_format_ = ui_temp_buffer._data_flags_;
            ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
            ui_temp_buffer._0_8_ = ui_temp_buffer._0_8_;
            ui_temp_buffer._data_format_ = aui_event_id_secondary._data_offset_;
            ui_temp_buffer._data_flags_ = aui_task_identifier._data_offset_;
            ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
            ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_;
            ui_temp_buffer._8_8_ = 0;
            ui_temp_buffer._0_8_ = ui_temp_buffer._8_8_;
            ui_temp_buffer = pmaddubsw(ui_temp_buffer,ui_window_data_buffer);
            ui_window_data_buffer = pshufb(ui_temp_buffer,_ui_config_widget_settings);
            ui_temp_buffer = pmaddubsw(ui_temp_buffer,ui_window_data_buffer);
            ui_window_data_buffer = pshufb(ui_temp_buffer,_ui_config_layout_settings);
            ui_temp_buffer = pshufb(ui_temp_buffer,_ui_config_render_settings);
            ui_temp_buffer = pmaddubsw(ui_temp_buffer >> UI_BUFFER_SIZE_64,ui_window_data_buffer);
            ui_window_data_buffer = pmaddubsw(ui_temp_buffer,ui_temp_buffer);
            ui_component = ui_temp_buffer._component_x_;
            ui_temp_buffer._component_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
            ui_component = ui_temp_buffer._component_y_;
            ui_temp_buffer._component_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
            ui_component = ui_temp_buffer._component_z_;
            ui_temp_buffer._component_z_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
            ui_component = ui_temp_buffer._component_w_;
            ui_temp_buffer._component_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
            ui_component = ui_temp_buffer._offset_x_;
            ui_temp_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
            ui_component = ui_temp_buffer._offset_y_;
            ui_temp_buffer._offset_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
            short_value0 = ui_temp_buffer._offset_z_;
            ui_component = ui_temp_buffer._offset_z_;
            ui_component = ui_temp_buffer._offset_w_;
            ui_temp_buffer._offset_z_ =
                 (ushort)(short_value0 < ui_component) * short_value0 | (ushort)(short_value0 >= ui_component) * ui_component;
            short_value1 = ui_temp_buffer._offset_w_;
            ui_temp_buffer._offset_w_ =
                 (ushort)(short_value1 < ui_component) * short_value1 | (ushort)(short_value1 >= ui_component) * ui_component;
            ui_temp_buffer._component_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
            ui_temp_buffer._component_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
            ui_temp_buffer._component_z_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
            ui_temp_buffer._component_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
            ui_temp_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
            ui_temp_buffer._offset_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
            ui_temp_buffer._offset_z_ =
                 (ushort)(ui_component < short_value0) * short_value0 | (ushort)(ui_component >= short_value0) * ui_component;
            ui_temp_buffer._offset_w_ =
                 (ushort)(ui_component < short_value1) * short_value1 | (ushort)(ui_component >= short_value1) * ui_component;
            ui_window_data_buffer = paddsw(ui_temp_buffer,ui_window_data_buffer);
            ui_temp_buffer = paddsw(ui_window_data_buffer,ui_temp_buffer);
            ui_temp_buffer = paddsw(ui_temp_buffer,ui_temp_buffer);
            ui_temp_buffer = pmulhrsw(ui_temp_buffer,_ui_config_input_settings);
            ui_component = ui_temp_buffer._component_x_;
            ui_component = ui_temp_buffer._component_y_;
            ui_component = ui_temp_buffer._component_z_;
            ui_component = ui_temp_buffer._component_w_;
            (&ui_stack_event_parameter)[long_counter9] =
                 CONCAT13((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[6] - (UI_COMPONENT_MAX_VALUE < ui_component),
                          CONCAT12((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[4] - (UI_COMPONENT_MAX_VALUE < ui_component),
                                   CONCAT11((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[2] -
                                            (UI_COMPONENT_MAX_VALUE < ui_component),
                                            (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[0] -
                                            (UI_COMPONENT_MAX_VALUE < ui_component))));
          }
          ui_task_index1 = ui_task_index1 + ui_stack_var_a0;
          long_counter9 = long_counter9 + 1;
        } while (long_counter9 < 4);
        ui_event_id_fourth = CONCAT11((char)((uint)ui_stack_event_parameter >> UI_SNAPSHOT_CREATE_FLAGS),(char)((uint)ui_stack_event_parameter >> UI_SNAPSHOT_CREATE_FLAGS));
        ui_system_event_id = CONCAT35(CONCAT21(ui_event_id_fourth,(char)((uint)ui_stack_event_parameter >> UI_EVENT_FLAG_OFFSET)),
                         CONCAT14((char)((uint)ui_stack_event_parameter >> UI_EVENT_FLAG_OFFSET),ui_stack_event_parameter));
        ui_event_id_fifth = CONCAT51(CONCAT41((int)((ulonglong)ui_system_event_id >> UI_OFFSET_32),(char)((uint)ui_stack_event_parameter >> 8)),
                          (char)((uint)ui_stack_event_parameter >> 8));
        ui_loop_counter = CONCAT11((char)ui_stack_event_parameter,(char)ui_stack_event_parameter);
        ui_system_task_id = CONCAT62(ui_event_id_fifth,ui_loop_counter);
        ui_temp_buffer[UI_MAX_EVENT_FLAGS] = (char)((uint)ui_stack_event_parameter >> UI_SNAPSHOT_CREATE_FLAGS);
        ui_temp_buffer[ui_component_angle_offset] = (char)((uint)ui_stack_event_parameter >> UI_SNAPSHOT_CREATE_FLAGS);
        aui_event_id6[3] = (char)((uint)ui_stack_event_parameter >> 8);
        aui_event_id6[2] = (char)((uint)ui_stack_event_parameter >> 8);
        ui_temp_buffer._data_format_ = 0;
        ui_temp_buffer._0_8_ = ui_system_task_id;
        ui_temp_buffer._offset_z_ = ui_event_id_fourth;
        ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
        ui_temp_buffer._offset_x_ = 0;
        ui_temp_buffer._0_8_ = ui_system_task_id;
        ui_temp_buffer._offset_y_ =
             (short)(CONCAT15((char)((uint)ui_stack_event_parameter >> UI_EVENT_FLAG_OFFSET),
                              CONCAT14((char)((uint)ui_stack_event_parameter >> UI_EVENT_FLAG_OFFSET),ui_stack_event_parameter)) >> UI_OFFSET_32);
        ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
        ui_temp_buffer._offset_x_ = (short)((ulonglong)ui_system_event_id >> UI_OFFSET_32);
        ui_temp_buffer._0_8_ = ui_system_task_id;
        aui_event_id6._4_8_ = ui_temp_buffer._8_8_;
        aui_event_id6._component_x_ = (short)ui_event_id_fifth;
        *(uint *)(ui_system_register * -2 + (longlong)ui_task_index_pointer2) =
             CONCAT22(CONCAT11((char)ui_stack_event_parameter,(char)ui_stack_event_parameter),ui_loop_counter);
        *(int *)((longlong)ui_task_index_pointer2 - ui_system_register) = aui_event_id6._data_offset_;
        *ui_task_index_pointer2 = ui_temp_buffer._data_format_;
        *(uint32_t *)(ui_system_register + (longlong)ui_task_index_pointer2) = ui_temp_buffer._data_flags_;
        ui_task_index_pointer2 = ui_task_index_pointer2 + 1;
        ui_event_index = ui_event_index + -1;
      } while (ui_event_index != 0);
      ui_event_type = in_R10 * 4;
      ui_callback = (longlong)ui_stack_var_a8;
      ui_register_r11 = unaff_retaddr;
    }
    ui_widget_base = ui_widget_base + ui_event_type;
    ui_register_r11 = ui_register_r11 + ui_system_register * 4;
    ui_event_id8 = ui_event_id8 - 1;
    unaff_retaddr = ui_register_r11;
  } while (ui_event_id8 != 0);
  RenderUIComponent(ui_stack_event_parameter ^ (ulonglong)&ui_stack_base_address);
}

void ui_system_reset_layout_system(void)

{
  uint64_t ui_stack_event_parameter;
  
  RenderUIComponent(ui_stack_event_parameter ^ (ulonglong)&ui_stack_base_address);
}

void ui_system_process_layout_data(longlong ui_callback,longlong ui_event_type,longlong ui_event_data,longlong ui_event_flags,
                  longlong ui_parameter_value,uint ui_parameter_value,int ui_parameter_value,int ui_parameter_value,uint ui_parameter_value)

{
  uint8_t ui_system_event_id;
  uint8_t aui_task_index [14];
  uint8_t ui_temp_buffer [12];
  unkbyte10 Var4;
  uint8_t ui_temp_buffer [14];
  uint8_t ui_temp_buffer [12];
  unkbyte10 Var7;
  uint8_t ui_temp_buffer [14];
  uint8_t ui_temp_buffer [12];
  unkbyte10 Var10;
  uint8_t aui_event_id1 [14];
  uint8_t aui_event_id_secondary [12];
  unkbyte10 Var13;
  uint8_t aui_event_id_fourth [12];
  uint8_t aui_event_id_fifth [12];
  int ui_result_status;
  longlong ui_loop_counter_secondary;
  uint ui_event_id8;
  longlong long_counter9;
  uint64_t *ui_task_index_ptr0;
  uint8_t *ui_task_index_pointer1;
  uint8_t ui_input_data_buffer [16];
  uint8_t ui_theme_buffer_var [16];
  uint8_t ui_temp_buffer [16];
  uint32_t ui_loop_counter;
  uint8_t ui_temp_buffer [16];
  uint32_t ui_loop_counter;
  uint8_t ui_temp_buffer [16];
  uint8_t ui_stack_array [32];
  uint32_t *pui_stack_temp_e8;
  ulonglong ui_stack_temp_e0;
  longlong ui_stack_parameter_longd8;
  longlong ui_stack_parameter_longd0;
  longlong ui_stack_parameter_longc8;
  longlong ui_stack_parameter_longc0;
  longlong ui_stack_parameter_longb8;
  longlong ui_stack_extended_buffer;
  longlong ui_stack_parameter_longa8;
  longlong ui_stack_parameter_longa0;
  uint64_t ui_stack_variable_uint_98;
  uint64_t ui_stack_ulong_event_id_primary;
  ulonglong ui_stack_extended_data_primary;
  uint64_t ui_stack_extended_buffer_size;
  ulonglong ui_stack_variable_uint_78;
  uint64_t ui_stack_uint_callback_count_primary;
  ulonglong ui_event_mask_primary;
  uint64_t ui_stack_operation_flag;
  ulonglong ui_stack_variable_buffer_xor;
  uint8_t ui_widget_data_buffer [16];
  uint8_t ui_window_data_buffer [16];
  uint8_t ui_font_data_buffer [16];
  uint8_t ui_task_index_array_primary [16];
  uint8_t ui_system_shader_buffer_variable [16];
  uint8_t ui_system_layout_data_buffer [16];
  uint8_t ui_temporary_buffer [16];
  uint8_t ui_temp_buffer [16];
  uint8_t ui_temp_buffer [12];
  uint8_t ui_temp_buffer [16];
  uint8_t ui_temp_buffer [12];
  uint8_t ui_temp_buffer [16];
  
  ui_stack_variable_buffer_xor = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_callback = ui_callback + -3;
  ui_loop_counter_secondary = ui_event_type * 8;
  ui_result_status = (ui_parameter_value - (ui_parameter_value & 7)) + 8;
  ui_stack_parameter_longa0 = ui_event_flags * 8;
  long_counter9 = ui_event_flags * 8;
  ui_stack_parameter_longd8 = ui_event_data;
  ui_stack_parameter_longa8 = ui_event_flags;
  do {
    if (0 < ui_parameter_value) {
      pui_stack_temp_e8 = (uint32_t *)(ui_event_flags * 2 + ui_stack_parameter_longd8);
      ui_stack_parameter_longc0 = ui_event_flags * 2;
      ui_stack_parameter_longb8 = ui_event_flags * 3;
      ui_stack_extended_buffer = ui_event_flags * 5;
      ui_stack_temp_e0 = (ulonglong)((ui_parameter_value - 1U >> 3) + 1);
      ui_event_id8 = ui_parameter_value;
      ui_stack_parameter_longd0 = -ui_event_flags;
      ui_stack_parameter_longc8 = ui_event_flags;
      do {
        ui_task_index_pointer1 = (uint8_t *)((longlong)&ui_stack_variable_uint_98 + 1);
        long_counter9 = 8;
        ui_task_index_ptr0 = &ui_stack_variable_uint_98;
        do {
          ui_loop_counter_secondary = ((longlong)(int)ui_event_id8 >> 4) + ui_callback;
          if ((ui_event_id8 & UI_MAX_EVENT_FLAGS) == 0) {
            ui_task_index_pointer1[-1] = *(uint8_t *)(ui_loop_counter_secondary + 3);
            *ui_task_index_pointer1 = *(uint8_t *)(ui_event_type + 3 + ui_loop_counter_secondary);
            ui_task_index_pointer1[1] = *(uint8_t *)(ui_loop_counter_secondary + 3 + ui_event_type * 2);
            ui_system_event_id = *(uint8_t *)(ui_event_type * 3 + 3 + ui_loop_counter_secondary);
            ui_task_index_pointer1[3] = *(uint8_t *)(ui_loop_counter_secondary + 3 + ui_event_type * 4);
            ui_task_index_pointer1[2] = ui_system_event_id;
            ui_task_index_pointer1[4] = *(uint8_t *)(ui_event_type * 5 + 3 + ui_loop_counter_secondary);
            ui_task_index_pointer1[5] = *(uint8_t *)(ui_loop_counter_secondary + 3 + ui_event_type * 6);
            ui_task_index_pointer1[6] = *(uint8_t *)(ui_event_type * 7 + 3 + ui_loop_counter_secondary);
          }
          else {
            ui_system_process_layout_constraints(ui_loop_counter_secondary,ui_event_type,ui_task_index_ptr0,(ulonglong)(ui_event_id8 & UI_MAX_EVENT_FLAGS) * UI_EVENT_FLAG_OFFSET + ui_parameter_value);
          }
          ui_event_id8 = ui_event_id8 + ui_parameter_value;
          ui_task_index_ptr0 = ui_task_index_ptr0 + 1;
          ui_task_index_pointer1 = ui_task_index_pointer1 + 8;
          long_counter9 = long_counter9 + -1;
        } while (long_counter9 != 0);
        ui_temp_buffer._8_6_ = 0;
        ui_temp_buffer._0_8_ = ui_stack_variable_uint_98;
        ui_temp_buffer[ui_component_angle_offset] = (char)(ui_stack_variable_uint_98 >> UI_MEMORY_DEALLOC_OFFSET);
        ui_temp_buffer[UI_MAX_EVENT_FLAGS] = (char)((ulonglong)ui_stack_ulong_event_id_primary >> UI_MEMORY_DEALLOC_OFFSET);
        ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_;
        ui_temp_buffer._8_5_ = 0;
        ui_temp_buffer._0_8_ = ui_stack_variable_uint_98;
        ui_temp_buffer[THIRTEEN_VALUE] = (char)((ulonglong)ui_stack_ulong_event_id_primary >> UI_MEMORY_ALLOC_SIZE);
        ui_temp_buffer._13_3_ = ui_temp_buffer._13_3_;
        ui_temp_buffer._data_format_ = 0;
        ui_temp_buffer._0_8_ = ui_stack_variable_uint_98;
        ui_temp_buffer[12] = (char)(ui_stack_variable_uint_98 >> UI_MEMORY_ALLOC_SIZE);
        ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
        ui_temp_buffer._8_3_ = 0;
        ui_temp_buffer._0_8_ = ui_stack_variable_uint_98;
        ui_temp_buffer[ELEVEN_VALUE] = (char)((ulonglong)ui_stack_ulong_event_id_primary >> UI_CALLBACK_HANDLER_OFFSET);
        ui_temp_buffer._11_5_ = ui_temp_buffer._11_5_;
        ui_temp_buffer._offset_x_ = 0;
        ui_temp_buffer._0_8_ = ui_stack_variable_uint_98;
        ui_temp_buffer[10] = (char)(ui_stack_variable_uint_98 >> UI_CALLBACK_HANDLER_OFFSET);
        ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
        ui_temp_buffer[8] = 0;
        ui_temp_buffer._0_8_ = ui_stack_variable_uint_98;
        ui_temp_buffer[9] = (char)((ulonglong)ui_stack_ulong_event_id_primary >> UI_OFFSET_32);
        ui_temp_buffer._9_7_ = ui_temp_buffer._9_7_;
        ui_temp_buffer[8] = (char)(ui_stack_variable_uint_98 >> UI_OFFSET_32);
        ui_temp_buffer._0_8_ = ui_stack_variable_uint_98;
        Var4 = CONCAT91(CONCAT81(ui_temp_buffer._8_8_,(char)((ulonglong)ui_stack_ulong_event_id_primary >> UI_SNAPSHOT_CREATE_FLAGS)),
                        (char)(ui_stack_variable_uint_98 >> UI_SNAPSHOT_CREATE_FLAGS));
        ui_temp_buffer._2_10_ = Var4;
        ui_temp_buffer[1] = (char)((ulonglong)ui_stack_ulong_event_id_primary >> UI_EVENT_FLAG_OFFSET);
        ui_temp_buffer[0] = (char)(ui_stack_variable_uint_98 >> UI_EVENT_FLAG_OFFSET);
        aui_task_index._2_12_ = ui_temp_buffer;
        aui_task_index[1] = (char)((ulonglong)ui_stack_ulong_event_id_primary >> 8);
        aui_task_index[0] = (char)(ui_stack_variable_uint_98 >> 8);
        ui_temp_buffer._component_x_ = CONCAT11((char)ui_stack_ulong_event_id_primary,(char)ui_stack_variable_uint_98);
        ui_temp_buffer._2_14_ = aui_task_index;
        ui_temp_buffer._8_6_ = 0;
        ui_temp_buffer._0_8_ = ui_stack_extended_data_primary;
        ui_temp_buffer[ui_component_angle_offset] = (char)(ui_stack_extended_data_primary >> UI_MEMORY_DEALLOC_OFFSET);
        ui_temp_buffer[UI_MAX_EVENT_FLAGS] = (char)((ulonglong)ui_stack_extended_buffer_size >> UI_MEMORY_DEALLOC_OFFSET);
        ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_;
        ui_temp_buffer._8_5_ = 0;
        ui_temp_buffer._0_8_ = ui_stack_extended_data_primary;
        ui_temp_buffer[THIRTEEN_VALUE] = (char)((ulonglong)ui_stack_extended_buffer_size >> UI_MEMORY_ALLOC_SIZE);
        ui_temp_buffer._13_3_ = ui_temp_buffer._13_3_;
        ui_temp_buffer._data_format_ = 0;
        ui_temp_buffer._0_8_ = ui_stack_extended_data_primary;
        ui_temp_buffer[12] = (char)(ui_stack_extended_data_primary >> UI_MEMORY_ALLOC_SIZE);
        ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
        ui_temp_buffer._8_3_ = 0;
        ui_temp_buffer._0_8_ = ui_stack_extended_data_primary;
        ui_temp_buffer[ELEVEN_VALUE] = (char)((ulonglong)ui_stack_extended_buffer_size >> UI_CALLBACK_HANDLER_OFFSET);
        ui_temp_buffer._11_5_ = ui_temp_buffer._11_5_;
        ui_temp_buffer._offset_x_ = 0;
        ui_temp_buffer._0_8_ = ui_stack_extended_data_primary;
        ui_temp_buffer[10] = (char)(ui_stack_extended_data_primary >> UI_CALLBACK_HANDLER_OFFSET);
        ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
        ui_temp_buffer[8] = 0;
        ui_temp_buffer._0_8_ = ui_stack_extended_data_primary;
        ui_temp_buffer[9] = (char)((ulonglong)ui_stack_extended_buffer_size >> UI_OFFSET_32);
        ui_temp_buffer._9_7_ = ui_temp_buffer._9_7_;
        ui_temp_buffer[8] = (char)(ui_stack_extended_data_primary >> UI_OFFSET_32);
        ui_temp_buffer._0_8_ = ui_stack_extended_data_primary;
        Var7 = CONCAT91(CONCAT81(ui_temp_buffer._8_8_,(char)((ulonglong)ui_stack_extended_buffer_size >> UI_SNAPSHOT_CREATE_FLAGS)),
                        (char)(ui_stack_extended_data_primary >> UI_SNAPSHOT_CREATE_FLAGS));
        ui_temp_buffer._2_10_ = Var7;
        ui_temp_buffer[1] = (char)((ulonglong)ui_stack_extended_buffer_size >> UI_EVENT_FLAG_OFFSET);
        ui_temp_buffer[0] = (char)(ui_stack_extended_data_primary >> UI_EVENT_FLAG_OFFSET);
        ui_temp_buffer._2_12_ = ui_temp_buffer;
        ui_temp_buffer[1] = (char)((ulonglong)ui_stack_extended_buffer_size >> 8);
        ui_temp_buffer[0] = (char)(ui_stack_extended_data_primary >> 8);
        ui_temp_buffer._8_6_ = 0;
        ui_temp_buffer._0_8_ = ui_stack_variable_uint_78;
        ui_temp_buffer[ui_component_angle_offset] = (char)(ui_stack_variable_uint_78 >> UI_MEMORY_DEALLOC_OFFSET);
        ui_temp_buffer[UI_MAX_EVENT_FLAGS] = (char)((ulonglong)ui_stack_uint_callback_count_primary >> UI_MEMORY_DEALLOC_OFFSET);
        ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_;
        ui_temp_buffer._8_5_ = 0;
        ui_temp_buffer._0_8_ = ui_stack_variable_uint_78;
        ui_temp_buffer[THIRTEEN_VALUE] = (char)((ulonglong)ui_stack_uint_callback_count_primary >> UI_MEMORY_ALLOC_SIZE);
        ui_temp_buffer._13_3_ = ui_temp_buffer._13_3_;
        ui_temp_buffer._data_format_ = 0;
        ui_temp_buffer._0_8_ = ui_stack_variable_uint_78;
        ui_temp_buffer[12] = (char)(ui_stack_variable_uint_78 >> UI_MEMORY_ALLOC_SIZE);
        ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
        ui_temp_buffer._8_3_ = 0;
        ui_temp_buffer._0_8_ = ui_stack_variable_uint_78;
        ui_temp_buffer[ELEVEN_VALUE] = (char)((ulonglong)ui_stack_uint_callback_count_primary >> UI_CALLBACK_HANDLER_OFFSET);
        ui_temp_buffer._11_5_ = ui_temp_buffer._11_5_;
        ui_temp_buffer._offset_x_ = 0;
        ui_temp_buffer._0_8_ = ui_stack_variable_uint_78;
        ui_temp_buffer[10] = (char)(ui_stack_variable_uint_78 >> UI_CALLBACK_HANDLER_OFFSET);
        ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
        ui_temp_buffer[8] = 0;
        ui_temp_buffer._0_8_ = ui_stack_variable_uint_78;
        ui_temp_buffer[9] = (char)((ulonglong)ui_stack_uint_callback_count_primary >> UI_OFFSET_32);
        ui_temp_buffer._9_7_ = ui_temp_buffer._9_7_;
        ui_temp_buffer[8] = (char)(ui_stack_variable_uint_78 >> UI_OFFSET_32);
        ui_temp_buffer._0_8_ = ui_stack_variable_uint_78;
        Var10 = CONCAT91(CONCAT81(ui_temp_buffer._8_8_,(char)((ulonglong)ui_stack_uint_callback_count_primary >> UI_SNAPSHOT_CREATE_FLAGS)),
                         (char)(ui_stack_variable_uint_78 >> UI_SNAPSHOT_CREATE_FLAGS));
        ui_temp_buffer._2_10_ = Var10;
        ui_temp_buffer[1] = (char)((ulonglong)ui_stack_uint_callback_count_primary >> UI_EVENT_FLAG_OFFSET);
        ui_temp_buffer[0] = (char)(ui_stack_variable_uint_78 >> UI_EVENT_FLAG_OFFSET);
        ui_temp_buffer._2_12_ = ui_temp_buffer;
        ui_temp_buffer[1] = (char)((ulonglong)ui_stack_uint_callback_count_primary >> 8);
        ui_temp_buffer[0] = (char)(ui_stack_variable_uint_78 >> 8);
        ui_temp_buffer._component_x_ = CONCAT11((char)ui_stack_uint_callback_count_primary,(char)ui_stack_variable_uint_78);
        ui_temp_buffer._2_14_ = ui_temp_buffer;
        ui_temp_buffer._8_6_ = 0;
        ui_temp_buffer._0_8_ = ui_event_mask_primary;
        ui_temp_buffer[ui_component_angle_offset] = (char)(ui_event_mask_primary >> UI_MEMORY_DEALLOC_OFFSET);
        ui_temp_buffer[UI_MAX_EVENT_FLAGS] = (char)((ulonglong)ui_stack_operation_flag >> UI_MEMORY_DEALLOC_OFFSET);
        ui_temporary_buffer._offset_w_ = ui_temp_buffer._offset_w_;
        ui_temporary_buffer._8_5_ = 0;
        ui_temporary_buffer._0_8_ = ui_event_mask_primary;
        ui_temporary_buffer[THIRTEEN_VALUE] = (char)((ulonglong)ui_stack_operation_flag >> UI_MEMORY_ALLOC_SIZE);
        ui_system_layout_data_buffer._13_3_ = ui_temporary_buffer._13_3_;
        ui_system_layout_data_buffer._data_format_ = 0;
        ui_system_layout_data_buffer._0_8_ = ui_event_mask_primary;
        ui_system_layout_data_buffer[12] = (char)(ui_event_mask_primary >> UI_MEMORY_ALLOC_SIZE);
        ui_system_shader_buffer_variable._data_flags_ = ui_system_layout_data_buffer._data_flags_;
        ui_system_shader_buffer_variable._8_3_ = 0;
        ui_system_shader_buffer_variable._0_8_ = ui_event_mask_primary;
        ui_system_shader_buffer_variable[ELEVEN_VALUE] = (char)((ulonglong)ui_stack_operation_flag >> UI_CALLBACK_HANDLER_OFFSET);
        ui_task_index_array_primary._11_5_ = ui_system_shader_buffer_variable._11_5_;
        ui_task_index_array_primary._offset_x_ = 0;
        ui_task_index_array_primary._0_8_ = ui_event_mask_primary;
        ui_task_index_array_primary[10] = (char)(ui_event_mask_primary >> UI_CALLBACK_HANDLER_OFFSET);
        ui_font_data_buffer._10_6_ = ui_task_index_array_primary._10_6_;
        ui_font_data_buffer[8] = 0;
        ui_font_data_buffer._0_8_ = ui_event_mask_primary;
        ui_font_data_buffer[9] = (char)((ulonglong)ui_stack_operation_flag >> UI_OFFSET_32);
        ui_theme_buffer_var._9_7_ = ui_font_data_buffer._9_7_;
        ui_theme_buffer_var[8] = (char)(ui_event_mask_primary >> UI_OFFSET_32);
        ui_theme_buffer_var._0_8_ = ui_event_mask_primary;
        Var13 = CONCAT91(CONCAT81(ui_theme_buffer_var._8_8_,(char)((ulonglong)ui_stack_operation_flag >> UI_SNAPSHOT_CREATE_FLAGS)),
                         (char)(ui_event_mask_primary >> UI_SNAPSHOT_CREATE_FLAGS));
        aui_event_id_secondary._2_10_ = Var13;
        aui_event_id_secondary[1] = (char)((ulonglong)ui_stack_operation_flag >> UI_EVENT_FLAG_OFFSET);
        aui_event_id_secondary[0] = (char)(ui_event_mask_primary >> UI_EVENT_FLAG_OFFSET);
        aui_event_id1._2_12_ = aui_event_id_secondary;
        aui_event_id1[1] = (char)((ulonglong)ui_stack_operation_flag >> 8);
        aui_event_id1[0] = (char)(ui_event_mask_primary >> 8);
        ui_window_data_buffer._0_12_ = ui_temp_buffer._0_12_;
        ui_window_data_buffer._offset_z_ = (short)Var10;
        ui_window_data_buffer._offset_w_ = (short)Var13;
        ui_widget_data_buffer._data_flags_ = ui_window_data_buffer._data_flags_;
        ui_widget_data_buffer._0_10_ = ui_temp_buffer._0_10_;
        ui_widget_data_buffer._offset_y_ = aui_event_id_secondary._component_x_;
        ui_input_data_buffer._10_6_ = ui_widget_data_buffer._10_6_;
        ui_input_data_buffer._0_8_ = ui_temp_buffer._0_8_;
        ui_input_data_buffer._offset_x_ = ui_temp_buffer._component_x_;
        aui_event_id_fourth._4_8_ = ui_input_data_buffer._8_8_;
        aui_event_id_fourth._component_y_ = aui_event_id1._component_x_;
        aui_event_id_fourth._component_x_ = ui_temp_buffer._component_x_;
        ui_temp_buffer._0_12_ = ui_temp_buffer._0_12_;
        ui_temp_buffer._offset_z_ = (short)Var4;
        ui_temp_buffer._offset_w_ = (short)Var7;
        ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
        ui_temp_buffer._0_10_ = ui_temp_buffer._0_10_;
        ui_temp_buffer._offset_y_ = ui_temp_buffer._component_x_;
        ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
        ui_temp_buffer._0_8_ = ui_temp_buffer._0_8_;
        ui_temp_buffer._offset_x_ = ui_temp_buffer._component_x_;
        aui_event_id_fifth._4_8_ = ui_temp_buffer._8_8_;
        aui_event_id_fifth._component_y_ = ui_temp_buffer._component_x_;
        aui_event_id_fifth._component_x_ = aui_task_index._component_x_;
        ui_temp_buffer._data_offset_ = CONCAT22(CONCAT11((char)ui_stack_extended_buffer_size,(char)ui_stack_extended_data_primary),ui_temp_buffer._component_x_);
        ui_temp_buffer._4_12_ = aui_event_id_fifth;
        ui_loop_counter = CONCAT22(ui_theme_buffer_var._offset_x_,ui_temp_buffer._offset_x_);
        ui_temp_buffer._0_8_ = CONCAT26(ui_task_index_array_primary._offset_y_,CONCAT24(ui_temp_buffer._offset_y_,ui_loop_counter));
        ui_temp_buffer._offset_x_ = ui_temp_buffer._offset_z_;
        ui_temp_buffer._offset_y_ = ui_system_layout_data_buffer._offset_z_;
        ui_temp_buffer._offset_z_ = ui_temp_buffer._offset_w_;
        ui_temp_buffer._0_12_ = ui_temp_buffer;
        ui_temp_buffer._offset_w_ = ui_temporary_buffer._offset_w_;
        ui_temp_buffer._0_8_ = ui_temp_buffer._0_8_;
        ui_temp_buffer._data_format_ = aui_event_id_fifth._data_offset_;
        ui_temp_buffer._data_flags_ = aui_event_id_fourth._data_offset_;
        *(ulonglong *)((longlong)pui_stack_temp_e8 + ui_event_flags * -2) =
             CONCAT44(CONCAT22(CONCAT11((char)ui_stack_operation_flag,(char)ui_event_mask_primary),ui_temp_buffer._component_x_),
                      ui_temp_buffer._data_offset_);
        ui_loop_counter = CONCAT22(ui_temp_buffer._offset_x_,ui_temp_buffer._offset_x_);
        ui_temp_buffer._0_8_ = CONCAT26(ui_temp_buffer._offset_y_,CONCAT24(ui_temp_buffer._offset_y_,ui_loop_counter));
        ui_temp_buffer._offset_x_ = ui_temp_buffer._offset_z_;
        ui_temp_buffer._offset_y_ = ui_temp_buffer._offset_z_;
        ui_temp_buffer._offset_z_ = ui_temp_buffer._offset_w_;
        ui_temp_buffer._0_12_ = ui_temp_buffer;
        ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_;
        *(longlong *)(-ui_event_flags + (longlong)pui_stack_temp_e8) = ui_temp_buffer._8_8_;
        *pui_stack_temp_e8 = ui_temp_buffer._data_format_;
        pui_stack_temp_e8[1] = ui_input_data_buffer._data_format_;
        ui_temp_buffer._data_format_ = (int)((ulonglong)ui_temp_buffer._0_8_ >> UI_OFFSET_32);
        ui_temp_buffer._0_8_ = ui_temp_buffer._0_8_;
        ui_temp_buffer._data_flags_ = (int)((ulonglong)ui_temp_buffer._0_8_ >> UI_OFFSET_32);
        *(uint32_t *)((longlong)pui_stack_temp_e8 + ui_stack_parameter_longc8 + 8) = ui_temp_buffer._data_flags_;
        *(uint32_t *)((longlong)pui_stack_temp_e8 + ui_stack_parameter_longc8 + 12) = ui_widget_data_buffer._data_flags_;
        *(ulonglong *)(ui_stack_parameter_longc0 + (longlong)pui_stack_temp_e8) = CONCAT44(ui_loop_counter,ui_loop_counter);
        *(longlong *)(ui_stack_parameter_longb8 + (longlong)pui_stack_temp_e8) = ui_temp_buffer._8_8_;
        pui_stack_temp_e8[ui_event_flags] = ui_temp_buffer._data_format_;
        (pui_stack_temp_e8 + ui_event_flags)[1] = ui_temp_buffer._data_format_;
        *(int *)((longlong)pui_stack_temp_e8 + ui_stack_extended_buffer + 8) = ui_temp_buffer._data_flags_;
        *(int *)((longlong)pui_stack_temp_e8 + ui_stack_extended_buffer + 12) = ui_temp_buffer._data_flags_;
        pui_stack_temp_e8 = pui_stack_temp_e8 + 2;
        ui_stack_temp_e0 = ui_stack_temp_e0 - 1;
      } while (ui_stack_temp_e0 != 0);
      ui_loop_counter_secondary = ui_event_type * 8;
      ui_stack_temp_e0 = 0;
      long_counter9 = ui_stack_parameter_longa0;
      ui_event_flags = ui_stack_parameter_longa8;
    }
    ui_stack_parameter_longd8 = ui_stack_parameter_longd8 + long_counter9;
    ui_callback = ui_callback + ui_loop_counter_secondary;
    ui_result_status = ui_result_status + -8;
  } while (ui_result_status != 0);
  RenderUIComponent(ui_stack_variable_buffer_xor ^ (ulonglong)ui_stack_array);
}

void ui_system_handle_layout_events(longlong ui_callback,longlong ui_event_type,char *ui_event_data,longlong ui_event_flags,longlong ui_parameter_value
                  ,uint ui_parameter_value,int ui_parameter_value,int ui_parameter_value,uint ui_parameter_value)

{
  uint8_t *ui_event_buffer;
  uint8_t *ui_task_index_pointer;
  uint8_t *ui_callback_ptr;
  short ui_component;
  short short_value0;
  short short_value1;
  short short_value2;
  uint8_t aui_task_identifier [16];
  longlong ui_window_handle;
  uint8_t (*paui_event_id_fifth) [16];
  char *ui_function_ptr6;
  ulonglong ui_event_id7;
  ulonglong ui_event_id8;
  uint8_t ui_task_processing_buffer [16];
  uint8_t ui_input_data_buffer [16];
  uint8_t ui_widget_data_buffer [16];
  uint8_t ui_temp_buffer [16];
  short short_value9;
  uint8_t ui_render_buffer_var [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  
  if (0 < (int)ui_parameter_value) {
    ui_event_id8 = (ulonglong)ui_parameter_value;
    do {
      aui_task_identifier = _ui_config_input_settings;
      ui_window_handle = ((longlong)(int)ui_parameter_value >> 4) * ui_event_type + ui_callback + ui_event_type * -3;
      if ((ui_parameter_value & UI_MAX_EVENT_FLAGS) == 0) {
        memcpy(ui_event_data,ui_event_type * 3 + ui_window_handle,(longlong)ui_parameter_value);
      }
      ui_temp_buffer = *(uint8_t (*) [16])((ulonglong)(ui_parameter_value & UI_MAX_EVENT_FLAGS) * UI_EVENT_FLAG_OFFSET + ui_parameter_value);
      ui_temp_buffer = pshufb(ui_temp_buffer,_ui_config_render_settings);
      ui_temp_buffer = pshufb(ui_temp_buffer,_ui_config_window_settings);
      ui_temp_buffer = pshufb(ui_temp_buffer,_ui_config_widget_settings);
      ui_temp_buffer = pshufb(ui_temp_buffer,_ui_config_layout_settings);
      if (0 < ui_parameter_value) {
        paui_event_id_fifth = (uint8_t (*) [16])(ui_window_handle + ui_event_type * 2);
        ui_event_id7 = (ulonglong)((ui_parameter_value - 1U >> 4) + 1);
        ui_function_ptr6 = ui_event_data;
        do {
          ui_event_buffer = *paui_event_id_fifth + ui_event_type;
          ui_task_index_pointer = *paui_event_id_fifth + ui_event_type * 3;
          ui_input_data_buffer = *paui_event_id_fifth;
          ui_temp_buffer = *(uint8_t (*) [16])(*paui_event_id_fifth + ui_event_type * 2);
          ui_widget_data_buffer = *(uint8_t (*) [16])(ui_event_type * -2 + (longlong)paui_event_id_fifth);
          ui_temp_buffer = *(uint8_t (*) [16])(*paui_event_id_fifth + ui_event_type * 4);
          ui_callback_ptr = (uint8_t *)((longlong)paui_event_id_fifth - ui_event_type);
          ui_callback_ptr = *paui_event_id_fifth + ui_event_type * 5;
          paui_event_id_fifth = paui_event_id_fifth + 1;
          ui_temp_buffer[1] = ui_event_buffer[8];
          ui_temp_buffer[0] = ui_input_data_buffer[8];
          ui_temp_buffer[2] = ui_input_data_buffer[9];
          ui_temp_buffer[3] = ui_event_buffer[9];
          ui_temp_buffer[4] = ui_input_data_buffer[10];
          ui_temp_buffer[5] = ui_event_buffer[10];
          ui_temp_buffer[6] = ui_input_data_buffer[ELEVEN_VALUE];
          ui_temp_buffer[7] = ui_event_buffer[ELEVEN_VALUE];
          ui_temp_buffer[8] = ui_input_data_buffer[12];
          ui_temp_buffer[9] = ui_event_buffer[12];
          ui_temp_buffer[10] = ui_input_data_buffer[THIRTEEN_VALUE];
          ui_temp_buffer[ELEVEN_VALUE] = ui_event_buffer[THIRTEEN_VALUE];
          ui_temp_buffer[12] = ui_input_data_buffer[ui_component_angle_offset];
          ui_temp_buffer[THIRTEEN_VALUE] = ui_event_buffer[ui_component_angle_offset];
          ui_temp_buffer[ui_component_angle_offset] = ui_input_data_buffer[UI_MAX_EVENT_FLAGS];
          ui_temp_buffer[UI_MAX_EVENT_FLAGS] = ui_event_buffer[UI_MAX_EVENT_FLAGS];
          ui_temp_buffer._0_14_ = ui_input_data_buffer._0_14_;
          ui_temp_buffer[ui_component_angle_offset] = ui_input_data_buffer[7];
          ui_temp_buffer[UI_MAX_EVENT_FLAGS] = ui_event_buffer[7];
          ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_;
          ui_temp_buffer._0_13_ = ui_input_data_buffer._0_13_;
          ui_temp_buffer[THIRTEEN_VALUE] = ui_event_buffer[6];
          ui_temp_buffer._13_3_ = ui_temp_buffer._13_3_;
          ui_temp_buffer._0_12_ = ui_input_data_buffer._0_12_;
          ui_temp_buffer[12] = ui_input_data_buffer[6];
          ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
          ui_temp_buffer._0_11_ = ui_input_data_buffer._0_11_;
          ui_temp_buffer[ELEVEN_VALUE] = ui_event_buffer[5];
          ui_temp_buffer._11_5_ = ui_temp_buffer._11_5_;
          ui_temp_buffer._0_10_ = ui_input_data_buffer._0_10_;
          ui_temp_buffer[10] = ui_input_data_buffer[5];
          ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
          ui_temp_buffer._0_9_ = ui_input_data_buffer._0_9_;
          ui_temp_buffer[9] = ui_event_buffer[4];
          ui_temp_buffer._9_7_ = ui_temp_buffer._9_7_;
          ui_temp_buffer._0_8_ = ui_input_data_buffer._0_8_;
          ui_temp_buffer[8] = ui_input_data_buffer[4];
          ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
          ui_temp_buffer[7] = ui_event_buffer[3];
          ui_temp_buffer[6] = ui_input_data_buffer[3];
          ui_temp_buffer[5] = ui_event_buffer[2];
          ui_temp_buffer[4] = ui_input_data_buffer[2];
          ui_temp_buffer[3] = ui_event_buffer[1];
          ui_temp_buffer[2] = ui_input_data_buffer[1];
          ui_temp_buffer[0] = ui_input_data_buffer[0];
          ui_temp_buffer[1] = *ui_event_buffer;
          ui_temp_buffer._0_14_ = ui_temp_buffer._0_14_;
          ui_temp_buffer[ui_component_angle_offset] = ui_temp_buffer[7];
          ui_temp_buffer[UI_MAX_EVENT_FLAGS] = ui_task_index_pointer[7];
          ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_;
          ui_temp_buffer._0_13_ = ui_temp_buffer._0_13_;
          ui_temp_buffer[THIRTEEN_VALUE] = ui_task_index_pointer[6];
          ui_temp_buffer._13_3_ = ui_temp_buffer._13_3_;
          ui_temp_buffer._0_12_ = ui_temp_buffer._0_12_;
          ui_temp_buffer[12] = ui_temp_buffer[6];
          ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
          ui_temp_buffer._0_11_ = ui_temp_buffer._0_11_;
          ui_temp_buffer[ELEVEN_VALUE] = ui_task_index_pointer[5];
          ui_temp_buffer._11_5_ = ui_temp_buffer._11_5_;
          ui_temp_buffer._0_10_ = ui_temp_buffer._0_10_;
          ui_temp_buffer[10] = ui_temp_buffer[5];
          ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
          ui_temp_buffer._0_9_ = ui_temp_buffer._0_9_;
          ui_temp_buffer[9] = ui_task_index_pointer[4];
          ui_temp_buffer._9_7_ = ui_temp_buffer._9_7_;
          ui_temp_buffer._0_8_ = ui_temp_buffer._0_8_;
          ui_temp_buffer[8] = ui_temp_buffer[4];
          ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
          ui_temp_buffer[7] = ui_task_index_pointer[3];
          ui_temp_buffer[6] = ui_temp_buffer[3];
          ui_temp_buffer[5] = ui_task_index_pointer[2];
          ui_temp_buffer[4] = ui_temp_buffer[2];
          ui_temp_buffer[3] = ui_task_index_pointer[1];
          ui_temp_buffer[2] = ui_temp_buffer[1];
          ui_temp_buffer[0] = ui_temp_buffer[0];
          ui_temp_buffer[1] = *ui_task_index_pointer;
          ui_temp_buffer[1] = ui_task_index_pointer[8];
          ui_temp_buffer[0] = ui_temp_buffer[8];
          ui_temp_buffer[2] = ui_temp_buffer[9];
          ui_temp_buffer[3] = ui_task_index_pointer[9];
          ui_temp_buffer[4] = ui_temp_buffer[10];
          ui_temp_buffer[5] = ui_task_index_pointer[10];
          ui_temp_buffer[6] = ui_temp_buffer[ELEVEN_VALUE];
          ui_temp_buffer[7] = ui_task_index_pointer[ELEVEN_VALUE];
          ui_temp_buffer[8] = ui_temp_buffer[12];
          ui_temp_buffer[9] = ui_task_index_pointer[12];
          ui_temp_buffer[10] = ui_temp_buffer[THIRTEEN_VALUE];
          ui_temp_buffer[ELEVEN_VALUE] = ui_task_index_pointer[THIRTEEN_VALUE];
          ui_temp_buffer[12] = ui_temp_buffer[ui_component_angle_offset];
          ui_temp_buffer[THIRTEEN_VALUE] = ui_task_index_pointer[ui_component_angle_offset];
          ui_temp_buffer[ui_component_angle_offset] = ui_temp_buffer[UI_MAX_EVENT_FLAGS];
          ui_temp_buffer[UI_MAX_EVENT_FLAGS] = ui_task_index_pointer[UI_MAX_EVENT_FLAGS];
          ui_temp_buffer._0_14_ = ui_temp_buffer._0_14_;
          ui_temp_buffer[ui_component_angle_offset] = ui_temp_buffer[7];
          ui_temp_buffer[UI_MAX_EVENT_FLAGS] = ui_callback_ptr[7];
          ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_;
          ui_temp_buffer._0_13_ = ui_temp_buffer._0_13_;
          ui_temp_buffer[THIRTEEN_VALUE] = ui_callback_ptr[6];
          ui_temp_buffer._13_3_ = ui_temp_buffer._13_3_;
          ui_temp_buffer._0_12_ = ui_temp_buffer._0_12_;
          ui_temp_buffer[12] = ui_temp_buffer[6];
          ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
          ui_temp_buffer._0_11_ = ui_temp_buffer._0_11_;
          ui_temp_buffer[ELEVEN_VALUE] = ui_callback_ptr[5];
          ui_temp_buffer._11_5_ = ui_temp_buffer._11_5_;
          ui_temp_buffer._0_10_ = ui_temp_buffer._0_10_;
          ui_temp_buffer[10] = ui_temp_buffer[5];
          ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
          ui_temp_buffer._0_9_ = ui_temp_buffer._0_9_;
          ui_temp_buffer[9] = ui_callback_ptr[4];
          ui_temp_buffer._9_7_ = ui_temp_buffer._9_7_;
          ui_temp_buffer._0_8_ = ui_temp_buffer._0_8_;
          ui_temp_buffer[8] = ui_temp_buffer[4];
          ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
          ui_temp_buffer[7] = ui_callback_ptr[3];
          ui_temp_buffer[6] = ui_temp_buffer[3];
          ui_temp_buffer[5] = ui_callback_ptr[2];
          ui_temp_buffer[4] = ui_temp_buffer[2];
          ui_temp_buffer[3] = ui_callback_ptr[1];
          ui_temp_buffer[2] = ui_temp_buffer[1];
          ui_temp_buffer[0] = ui_temp_buffer[0];
          ui_temp_buffer[1] = *ui_callback_ptr;
          ui_render_buffer_var._0_14_ = ui_widget_data_buffer._0_14_;
          ui_render_buffer_var[ui_component_angle_offset] = ui_widget_data_buffer[7];
          ui_render_buffer_var[UI_MAX_EVENT_FLAGS] = ui_callback_ptr[7];
          ui_task_processing_buffer._offset_w_ = ui_render_buffer_var._offset_w_;
          ui_task_processing_buffer._0_13_ = ui_widget_data_buffer._0_13_;
          ui_task_processing_buffer[THIRTEEN_VALUE] = ui_callback_ptr[6];
          ui_temp_buffer._13_3_ = ui_task_processing_buffer._13_3_;
          ui_temp_buffer._0_12_ = ui_widget_data_buffer._0_12_;
          ui_temp_buffer[12] = ui_widget_data_buffer[6];
          ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
          ui_temp_buffer._0_11_ = ui_widget_data_buffer._0_11_;
          ui_temp_buffer[ELEVEN_VALUE] = ui_callback_ptr[5];
          ui_temp_buffer._11_5_ = ui_temp_buffer._11_5_;
          ui_temp_buffer._0_10_ = ui_widget_data_buffer._0_10_;
          ui_temp_buffer[10] = ui_widget_data_buffer[5];
          ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
          ui_temp_buffer._0_9_ = ui_widget_data_buffer._0_9_;
          ui_temp_buffer[9] = ui_callback_ptr[4];
          ui_temp_buffer._9_7_ = ui_temp_buffer._9_7_;
          ui_temp_buffer._0_8_ = ui_widget_data_buffer._0_8_;
          ui_temp_buffer[8] = ui_widget_data_buffer[4];
          ui_input_data_buffer._8_8_ = ui_temp_buffer._8_8_;
          ui_input_data_buffer[7] = ui_callback_ptr[3];
          ui_input_data_buffer[6] = ui_widget_data_buffer[3];
          ui_input_data_buffer[5] = ui_callback_ptr[2];
          ui_input_data_buffer[4] = ui_widget_data_buffer[2];
          ui_input_data_buffer[3] = ui_callback_ptr[1];
          ui_input_data_buffer[2] = ui_widget_data_buffer[1];
          ui_input_data_buffer[0] = ui_widget_data_buffer[0];
          ui_input_data_buffer[1] = *ui_callback_ptr;
          ui_temp_buffer = pmaddubsw(ui_temp_buffer,ui_temp_buffer);
          ui_input_data_buffer = pmaddubsw(ui_input_data_buffer,ui_temp_buffer);
          ui_temp_buffer[1] = ui_callback_ptr[8];
          ui_temp_buffer[0] = ui_temp_buffer[8];
          ui_temp_buffer[2] = ui_temp_buffer[9];
          ui_temp_buffer[3] = ui_callback_ptr[9];
          ui_temp_buffer[4] = ui_temp_buffer[10];
          ui_temp_buffer[5] = ui_callback_ptr[10];
          ui_temp_buffer[6] = ui_temp_buffer[ELEVEN_VALUE];
          ui_temp_buffer[7] = ui_callback_ptr[ELEVEN_VALUE];
          ui_temp_buffer[8] = ui_temp_buffer[12];
          ui_temp_buffer[9] = ui_callback_ptr[12];
          ui_temp_buffer[10] = ui_temp_buffer[THIRTEEN_VALUE];
          ui_temp_buffer[ELEVEN_VALUE] = ui_callback_ptr[THIRTEEN_VALUE];
          ui_temp_buffer[12] = ui_temp_buffer[ui_component_angle_offset];
          ui_temp_buffer[THIRTEEN_VALUE] = ui_callback_ptr[ui_component_angle_offset];
          ui_temp_buffer[ui_component_angle_offset] = ui_temp_buffer[UI_MAX_EVENT_FLAGS];
          ui_temp_buffer[UI_MAX_EVENT_FLAGS] = ui_callback_ptr[UI_MAX_EVENT_FLAGS];
          ui_temp_buffer = pmaddubsw(ui_temp_buffer,ui_temp_buffer);
          ui_input_data_buffer = paddsw(ui_temp_buffer,ui_input_data_buffer);
          ui_temp_buffer = pmaddubsw(ui_temp_buffer,ui_temp_buffer);
          ui_temp_buffer[1] = ui_callback_ptr[8];
          ui_temp_buffer[0] = ui_widget_data_buffer[8];
          ui_temp_buffer[2] = ui_widget_data_buffer[9];
          ui_temp_buffer[3] = ui_callback_ptr[9];
          ui_temp_buffer[4] = ui_widget_data_buffer[10];
          ui_temp_buffer[5] = ui_callback_ptr[10];
          ui_temp_buffer[6] = ui_widget_data_buffer[ELEVEN_VALUE];
          ui_temp_buffer[7] = ui_callback_ptr[ELEVEN_VALUE];
          ui_temp_buffer[8] = ui_widget_data_buffer[12];
          ui_temp_buffer[9] = ui_callback_ptr[12];
          ui_temp_buffer[10] = ui_widget_data_buffer[THIRTEEN_VALUE];
          ui_temp_buffer[ELEVEN_VALUE] = ui_callback_ptr[THIRTEEN_VALUE];
          ui_temp_buffer[12] = ui_widget_data_buffer[ui_component_angle_offset];
          ui_temp_buffer[THIRTEEN_VALUE] = ui_callback_ptr[ui_component_angle_offset];
          ui_temp_buffer[ui_component_angle_offset] = ui_widget_data_buffer[UI_MAX_EVENT_FLAGS];
          ui_temp_buffer[UI_MAX_EVENT_FLAGS] = ui_callback_ptr[UI_MAX_EVENT_FLAGS];
          ui_temp_buffer = pmaddubsw(ui_temp_buffer,ui_temp_buffer);
          ui_component = ui_temp_buffer._component_x_;
          short_value9 = ui_temp_buffer._component_x_;
          ui_widget_data_buffer._component_x_ = (ushort)(ui_component < short_value9) * ui_component | (ushort)(ui_component >= short_value9) * short_value9;
          ui_component = ui_temp_buffer._component_y_;
          ui_widget_data_buffer._component_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
          ui_component = ui_temp_buffer._component_z_;
          ui_widget_data_buffer._component_z_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
          ui_component = ui_temp_buffer._component_w_;
          ui_widget_data_buffer._component_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
          ui_component = ui_temp_buffer._offset_x_;
          ui_widget_data_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
          short_value0 = ui_temp_buffer._offset_y_;
          ui_component = ui_temp_buffer._offset_y_;
          ui_widget_data_buffer._offset_y_ = (ushort)(short_value0 < ui_component) * short_value0 | (ushort)(short_value0 >= ui_component) * ui_component;
          short_value1 = ui_temp_buffer._offset_z_;
          ui_component = ui_temp_buffer._offset_z_;
          ui_component = ui_temp_buffer._offset_w_;
          ui_widget_data_buffer._offset_z_ = (ushort)(short_value1 < ui_component) * short_value1 | (ushort)(short_value1 >= ui_component) * ui_component;
          short_value2 = ui_temp_buffer._offset_w_;
          ui_widget_data_buffer._offset_w_ = (ushort)(short_value2 < ui_component) * short_value2 | (ushort)(short_value2 >= ui_component) * ui_component;
          ui_temp_buffer._component_x_ = (ushort)(short_value9 < ui_component) * ui_component | (ushort)(short_value9 >= ui_component) * short_value9;
          ui_temp_buffer._component_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
          ui_temp_buffer._component_z_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
          ui_temp_buffer._component_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
          ui_temp_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
          ui_temp_buffer._offset_y_ = (ushort)(ui_component < short_value0) * short_value0 | (ushort)(ui_component >= short_value0) * ui_component;
          ui_temp_buffer._offset_z_ = (ushort)(ui_component < short_value1) * short_value1 | (ushort)(ui_component >= short_value1) * ui_component;
          ui_temp_buffer._offset_w_ = (ushort)(ui_component < short_value2) * short_value2 | (ushort)(ui_component >= short_value2) * ui_component;
          ui_input_data_buffer = paddsw(ui_input_data_buffer,ui_widget_data_buffer);
          ui_input_data_buffer = paddsw(ui_input_data_buffer,ui_temp_buffer);
          ui_component = ui_temp_buffer._component_x_;
          short_value9 = ui_temp_buffer._component_x_;
          ui_temp_buffer._component_x_ = (ushort)(ui_component < short_value9) * ui_component | (ushort)(ui_component >= short_value9) * short_value9;
          ui_component = ui_temp_buffer._component_y_;
          ui_temp_buffer._component_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
          ui_component = ui_temp_buffer._component_z_;
          ui_temp_buffer._component_z_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
          ui_component = ui_temp_buffer._component_w_;
          ui_temp_buffer._component_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
          ui_component = ui_temp_buffer._offset_x_;
          ui_temp_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
          short_value0 = ui_temp_buffer._offset_y_;
          ui_component = ui_temp_buffer._offset_y_;
          ui_temp_buffer._offset_y_ = (ushort)(short_value0 < ui_component) * short_value0 | (ushort)(short_value0 >= ui_component) * ui_component;
          short_value1 = ui_temp_buffer._offset_z_;
          ui_component = ui_temp_buffer._offset_z_;
          ui_component = ui_temp_buffer._offset_w_;
          ui_temp_buffer._offset_z_ = (ushort)(short_value1 < ui_component) * short_value1 | (ushort)(short_value1 >= ui_component) * ui_component;
          short_value2 = ui_temp_buffer._offset_w_;
          ui_temp_buffer._offset_w_ = (ushort)(short_value2 < ui_component) * short_value2 | (ushort)(short_value2 >= ui_component) * ui_component;
          ui_input_data_buffer = pmulhrsw(ui_input_data_buffer,aui_task_identifier);
          ui_temp_buffer._component_x_ = (ushort)(short_value9 < ui_component) * ui_component | (ushort)(short_value9 >= ui_component) * short_value9;
          ui_temp_buffer._component_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
          ui_temp_buffer._component_z_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
          ui_temp_buffer._component_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
          ui_temp_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
          ui_temp_buffer._offset_y_ = (ushort)(ui_component < short_value0) * short_value0 | (ushort)(ui_component >= short_value0) * ui_component;
          ui_temp_buffer._offset_z_ = (ushort)(ui_component < short_value1) * short_value1 | (ushort)(ui_component >= short_value1) * ui_component;
          ui_temp_buffer._offset_w_ = (ushort)(ui_component < short_value2) * short_value2 | (ushort)(ui_component >= short_value2) * ui_component;
          ui_temp_buffer = paddsw(ui_temp_buffer,ui_temp_buffer);
          ui_temp_buffer = pmulhrsw(ui_temp_buffer,aui_task_identifier);
          ui_component = ui_input_data_buffer._component_x_;
          ui_component = ui_input_data_buffer._component_y_;
          ui_component = ui_input_data_buffer._component_z_;
          ui_component = ui_input_data_buffer._component_w_;
          ui_component = ui_input_data_buffer._offset_x_;
          short_value0 = ui_input_data_buffer._offset_y_;
          short_value1 = ui_input_data_buffer._offset_z_;
          short_value2 = ui_input_data_buffer._offset_w_;
          short_value9 = ui_temp_buffer._component_x_;
          ui_component = ui_temp_buffer._component_y_;
          ui_component = ui_temp_buffer._component_z_;
          ui_component = ui_temp_buffer._component_w_;
          ui_component = ui_temp_buffer._offset_x_;
          ui_component = ui_temp_buffer._offset_y_;
          ui_component = ui_temp_buffer._offset_z_;
          ui_component = ui_temp_buffer._offset_w_;
          *ui_function_ptr6 = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_input_data_buffer[0] - (UI_COMPONENT_MAX_VALUE < ui_component);
          ui_function_ptr6[1] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_input_data_buffer[2] - (UI_COMPONENT_MAX_VALUE < ui_component);
          ui_function_ptr6[2] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_input_data_buffer[4] - (UI_COMPONENT_MAX_VALUE < ui_component);
          ui_function_ptr6[3] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_input_data_buffer[6] - (UI_COMPONENT_MAX_VALUE < ui_component);
          ui_function_ptr6[4] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_input_data_buffer[8] - (UI_COMPONENT_MAX_VALUE < ui_component);
          ui_function_ptr6[5] = (0 < short_value0) * (short_value0 < UI_MAX_COMPONENT_VALUE) * ui_input_data_buffer[10] - (UI_COMPONENT_MAX_VALUE < short_value0);
          ui_function_ptr6[6] = (0 < short_value1) * (short_value1 < UI_MAX_COMPONENT_VALUE) * ui_input_data_buffer[12] - (UI_COMPONENT_MAX_VALUE < short_value1);
          ui_function_ptr6[7] = (0 < short_value2) * (short_value2 < UI_MAX_COMPONENT_VALUE) * ui_input_data_buffer[ui_component_angle_offset] - (UI_COMPONENT_MAX_VALUE < short_value2);
          ui_function_ptr6[8] = (0 < short_value9) * (short_value9 < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[0] - (UI_COMPONENT_MAX_VALUE < short_value9);
          ui_function_ptr6[9] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[2] - (UI_COMPONENT_MAX_VALUE < ui_component);
          ui_function_ptr6[10] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[4] - (UI_COMPONENT_MAX_VALUE < ui_component);
          ui_function_ptr6[ELEVEN_VALUE] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[6] - (UI_COMPONENT_MAX_VALUE < ui_component);
          ui_function_ptr6[12] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[8] - (UI_COMPONENT_MAX_VALUE < ui_component);
          ui_function_ptr6[THIRTEEN_VALUE] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[10] - (UI_COMPONENT_MAX_VALUE < ui_component);
          ui_function_ptr6[ui_component_angle_offset] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[12] - (UI_COMPONENT_MAX_VALUE < ui_component);
          ui_function_ptr6[UI_MAX_EVENT_FLAGS] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[ui_component_angle_offset] - (UI_COMPONENT_MAX_VALUE < ui_component);
          ui_event_id7 = ui_event_id7 - 1;
          ui_function_ptr6 = ui_function_ptr6 + UI_EVENT_FLAG_OFFSET;
        } while (ui_event_id7 != 0);
      }
      ui_event_data = ui_event_data + ui_event_flags;
      ui_parameter_value = ui_parameter_value + ui_parameter_value;
      ui_event_id8 = ui_event_id8 - 1;
    } while (ui_event_id8 != 0);
  }
  return ui_system_return_value;
}

void ui_system_finalize_layout_processing(void)

{
  uint8_t *ui_event_buffer;
  uint8_t *ui_task_index_pointer;
  uint8_t *ui_callback_ptr;
  short ui_component;
  short short_value0;
  short short_value1;
  short short_value2;
  uint8_t aui_task_identifier [16];
  uint ui_register_eax;
  longlong ui_window_handle;
  uint8_t (*paui_event_id_fifth) [16];
  longlong ui_widget_base;
  uint64_t ui_system_register;
  char *ui_system_register;
  uint ui_system_register;
  char *ui_function_ptr6;
  ulonglong ui_event_id7;
  longlong ui_register_r11;
  longlong ui_system_register_long;
  uint64_t ui_system_register;
  ulonglong ui_event_id8;
  longlong ui_system_register_long;
  uint8_t ui_task_processing_buffer [16];
  uint8_t ui_input_data_buffer [16];
  uint8_t ui_widget_data_buffer [16];
  uint8_t ui_temp_buffer [16];
  uint64_t ui_register_a;
  uint64_t ui_register_b;
  uint8_t ui_temp_buffer [16];
  uint64_t ui_register_a;
  uint64_t ui_register_b;
  uint8_t ui_temp_buffer [16];
  uint64_t ui_register_a;
  uint64_t ui_register_b;
  uint8_t ui_temp_buffer [16];
  uint64_t ui_register_a;
  uint64_t ui_register_b;
  uint8_t ui_temp_buffer [16];
  uint64_t ui_register_a;
  uint64_t ui_register_b;
  uint8_t ui_temp_buffer [16];
  longlong inuiui_stack_var_var_000000f8;
  longlong inuiui_stack_var_var_00000100;
  int ui_stack_integer_offset_110;
  int ui_stack_integer_offset_118;
  short short_value9;
  uint8_t ui_render_buffer_var [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  
  *(uint64_t *)(ui_register_r11 + 8) = ui_system_register;
  *(uint64_t *)(ui_register_r11 + UI_EVENT_FLAG_OFFSET) = ui_system_register;
  *(uint64_t *)(ui_register_r11 + UI_SNAPSHOT_CREATE_FLAGS) = ui_system_register;
  ui_event_id8 = (ulonglong)ui_register_eax;
  *(uint64_t *)(ui_register_r11 + -UI_MEMORY_DEALLOC_OFFSET) = ui_register_a;
  *(uint64_t *)(ui_register_r11 + -UI_MEMORY_ALLOC_SIZE) = ui_register_b;
  *(uint64_t *)(ui_register_r11 + -UI_OFFSET_72) = ui_register_a;
  *(uint64_t *)(ui_register_r11 + -UI_BUFFER_SIZE_64) = ui_register_b;
  *(uint64_t *)(ui_register_r11 + -UI_OFFSET_88) = ui_register_a;
  *(uint64_t *)(ui_register_r11 + -UI_OFFSET_80) = ui_register_b;
  *(uint64_t *)(ui_register_r11 + -UI_OFFSET_104) = ui_register_a;
  *(uint64_t *)(ui_register_r11 + -UI_WIDGET_CREATE_CALLBACK_OFFSET) = ui_register_b;
  *(uint64_t *)(ui_register_r11 + -UI_OFFSET_120) = ui_register_a;
  *(uint64_t *)(ui_register_r11 + -UI_WIDGET_DATA_OFFSET) = ui_register_b;
  do {
    aui_task_identifier = _ui_config_input_settings;
    ui_window_handle = ((longlong)(int)ui_system_register >> 4) * ui_widget_base + ui_system_register;
    if ((ui_system_register & UI_MAX_EVENT_FLAGS) == 0) {
      memcpy(ui_system_register,ui_system_register + ui_window_handle,(longlong)ui_stack_integer_offset_118);
    }
    ui_temp_buffer = *(uint8_t (*) [16])((ulonglong)(ui_system_register & UI_MAX_EVENT_FLAGS) * UI_EVENT_FLAG_OFFSET + inuiui_stack_var_var_00000100);
    ui_temp_buffer = pshufb(ui_temp_buffer,_ui_config_render_settings);
    ui_temp_buffer = pshufb(ui_temp_buffer,_ui_config_window_settings);
    ui_temp_buffer = pshufb(ui_temp_buffer,_ui_config_widget_settings);
    ui_temp_buffer = pshufb(ui_temp_buffer,_ui_config_layout_settings);
    if (0 < ui_stack_integer_offset_118) {
      paui_event_id_fifth = (uint8_t (*) [16])(ui_window_handle + ui_widget_base * 2);
      ui_event_id7 = (ulonglong)((ui_stack_integer_offset_118 - 1U >> 4) + 1);
      ui_function_ptr6 = ui_system_register;
      do {
        ui_event_buffer = *paui_event_id_fifth + ui_widget_base;
        ui_task_index_pointer = *paui_event_id_fifth + ui_system_register;
        ui_input_data_buffer = *paui_event_id_fifth;
        ui_temp_buffer = *(uint8_t (*) [16])(*paui_event_id_fifth + ui_widget_base * 2);
        ui_widget_data_buffer = *(uint8_t (*) [16])(ui_widget_base * -2 + (longlong)paui_event_id_fifth);
        ui_temp_buffer = *(uint8_t (*) [16])(*paui_event_id_fifth + ui_widget_base * 4);
        ui_callback_ptr = (uint8_t *)((longlong)paui_event_id_fifth - ui_widget_base);
        ui_callback_ptr = *paui_event_id_fifth + ui_widget_base * 5;
        paui_event_id_fifth = paui_event_id_fifth + 1;
        ui_temp_buffer[1] = ui_event_buffer[8];
        ui_temp_buffer[0] = ui_input_data_buffer[8];
        ui_temp_buffer[2] = ui_input_data_buffer[9];
        ui_temp_buffer[3] = ui_event_buffer[9];
        ui_temp_buffer[4] = ui_input_data_buffer[10];
        ui_temp_buffer[5] = ui_event_buffer[10];
        ui_temp_buffer[6] = ui_input_data_buffer[ELEVEN_VALUE];
        ui_temp_buffer[7] = ui_event_buffer[ELEVEN_VALUE];
        ui_temp_buffer[8] = ui_input_data_buffer[12];
        ui_temp_buffer[9] = ui_event_buffer[12];
        ui_temp_buffer[10] = ui_input_data_buffer[THIRTEEN_VALUE];
        ui_temp_buffer[ELEVEN_VALUE] = ui_event_buffer[THIRTEEN_VALUE];
        ui_temp_buffer[12] = ui_input_data_buffer[ui_component_angle_offset];
        ui_temp_buffer[THIRTEEN_VALUE] = ui_event_buffer[ui_component_angle_offset];
        ui_temp_buffer[ui_component_angle_offset] = ui_input_data_buffer[UI_MAX_EVENT_FLAGS];
        ui_temp_buffer[UI_MAX_EVENT_FLAGS] = ui_event_buffer[UI_MAX_EVENT_FLAGS];
        ui_temp_buffer._0_14_ = ui_input_data_buffer._0_14_;
        ui_temp_buffer[ui_component_angle_offset] = ui_input_data_buffer[7];
        ui_temp_buffer[UI_MAX_EVENT_FLAGS] = ui_event_buffer[7];
        ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_;
        ui_temp_buffer._0_13_ = ui_input_data_buffer._0_13_;
        ui_temp_buffer[THIRTEEN_VALUE] = ui_event_buffer[6];
        ui_temp_buffer._13_3_ = ui_temp_buffer._13_3_;
        ui_temp_buffer._0_12_ = ui_input_data_buffer._0_12_;
        ui_temp_buffer[12] = ui_input_data_buffer[6];
        ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
        ui_temp_buffer._0_11_ = ui_input_data_buffer._0_11_;
        ui_temp_buffer[ELEVEN_VALUE] = ui_event_buffer[5];
        ui_temp_buffer._11_5_ = ui_temp_buffer._11_5_;
        ui_temp_buffer._0_10_ = ui_input_data_buffer._0_10_;
        ui_temp_buffer[10] = ui_input_data_buffer[5];
        ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
        ui_temp_buffer._0_9_ = ui_input_data_buffer._0_9_;
        ui_temp_buffer[9] = ui_event_buffer[4];
        ui_temp_buffer._9_7_ = ui_temp_buffer._9_7_;
        ui_temp_buffer._0_8_ = ui_input_data_buffer._0_8_;
        ui_temp_buffer[8] = ui_input_data_buffer[4];
        ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
        ui_temp_buffer[7] = ui_event_buffer[3];
        ui_temp_buffer[6] = ui_input_data_buffer[3];
        ui_temp_buffer[5] = ui_event_buffer[2];
        ui_temp_buffer[4] = ui_input_data_buffer[2];
        ui_temp_buffer[3] = ui_event_buffer[1];
        ui_temp_buffer[2] = ui_input_data_buffer[1];
        ui_temp_buffer[0] = ui_input_data_buffer[0];
        ui_temp_buffer[1] = *ui_event_buffer;
        ui_temp_buffer._0_14_ = ui_temp_buffer._0_14_;
        ui_temp_buffer[ui_component_angle_offset] = ui_temp_buffer[7];
        ui_temp_buffer[UI_MAX_EVENT_FLAGS] = ui_task_index_pointer[7];
        ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_;
        ui_temp_buffer._0_13_ = ui_temp_buffer._0_13_;
        ui_temp_buffer[THIRTEEN_VALUE] = ui_task_index_pointer[6];
        ui_temp_buffer._13_3_ = ui_temp_buffer._13_3_;
        ui_temp_buffer._0_12_ = ui_temp_buffer._0_12_;
        ui_temp_buffer[12] = ui_temp_buffer[6];
        ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
        ui_temp_buffer._0_11_ = ui_temp_buffer._0_11_;
        ui_temp_buffer[ELEVEN_VALUE] = ui_task_index_pointer[5];
        ui_temp_buffer._11_5_ = ui_temp_buffer._11_5_;
        ui_temp_buffer._0_10_ = ui_temp_buffer._0_10_;
        ui_temp_buffer[10] = ui_temp_buffer[5];
        ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
        ui_temp_buffer._0_9_ = ui_temp_buffer._0_9_;
        ui_temp_buffer[9] = ui_task_index_pointer[4];
        ui_temp_buffer._9_7_ = ui_temp_buffer._9_7_;
        ui_temp_buffer._0_8_ = ui_temp_buffer._0_8_;
        ui_temp_buffer[8] = ui_temp_buffer[4];
        ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
        ui_temp_buffer[7] = ui_task_index_pointer[3];
        ui_temp_buffer[6] = ui_temp_buffer[3];
        ui_temp_buffer[5] = ui_task_index_pointer[2];
        ui_temp_buffer[4] = ui_temp_buffer[2];
        ui_temp_buffer[3] = ui_task_index_pointer[1];
        ui_temp_buffer[2] = ui_temp_buffer[1];
        ui_temp_buffer[0] = ui_temp_buffer[0];
        ui_temp_buffer[1] = *ui_task_index_pointer;
        ui_temp_buffer[1] = ui_task_index_pointer[8];
        ui_temp_buffer[0] = ui_temp_buffer[8];
        ui_temp_buffer[2] = ui_temp_buffer[9];
        ui_temp_buffer[3] = ui_task_index_pointer[9];
        ui_temp_buffer[4] = ui_temp_buffer[10];
        ui_temp_buffer[5] = ui_task_index_pointer[10];
        ui_temp_buffer[6] = ui_temp_buffer[ELEVEN_VALUE];
        ui_temp_buffer[7] = ui_task_index_pointer[ELEVEN_VALUE];
        ui_temp_buffer[8] = ui_temp_buffer[12];
        ui_temp_buffer[9] = ui_task_index_pointer[12];
        ui_temp_buffer[10] = ui_temp_buffer[THIRTEEN_VALUE];
        ui_temp_buffer[ELEVEN_VALUE] = ui_task_index_pointer[THIRTEEN_VALUE];
        ui_temp_buffer[12] = ui_temp_buffer[ui_component_angle_offset];
        ui_temp_buffer[THIRTEEN_VALUE] = ui_task_index_pointer[ui_component_angle_offset];
        ui_temp_buffer[ui_component_angle_offset] = ui_temp_buffer[UI_MAX_EVENT_FLAGS];
        ui_temp_buffer[UI_MAX_EVENT_FLAGS] = ui_task_index_pointer[UI_MAX_EVENT_FLAGS];
        ui_temp_buffer._0_14_ = ui_temp_buffer._0_14_;
        ui_temp_buffer[ui_component_angle_offset] = ui_temp_buffer[7];
        ui_temp_buffer[UI_MAX_EVENT_FLAGS] = ui_callback_ptr[7];
        ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_;
        ui_temp_buffer._0_13_ = ui_temp_buffer._0_13_;
        ui_temp_buffer[THIRTEEN_VALUE] = ui_callback_ptr[6];
        ui_temp_buffer._13_3_ = ui_temp_buffer._13_3_;
        ui_temp_buffer._0_12_ = ui_temp_buffer._0_12_;
        ui_temp_buffer[12] = ui_temp_buffer[6];
        ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
        ui_temp_buffer._0_11_ = ui_temp_buffer._0_11_;
        ui_temp_buffer[ELEVEN_VALUE] = ui_callback_ptr[5];
        ui_temp_buffer._11_5_ = ui_temp_buffer._11_5_;
        ui_temp_buffer._0_10_ = ui_temp_buffer._0_10_;
        ui_temp_buffer[10] = ui_temp_buffer[5];
        ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
        ui_temp_buffer._0_9_ = ui_temp_buffer._0_9_;
        ui_temp_buffer[9] = ui_callback_ptr[4];
        ui_temp_buffer._9_7_ = ui_temp_buffer._9_7_;
        ui_temp_buffer._0_8_ = ui_temp_buffer._0_8_;
        ui_temp_buffer[8] = ui_temp_buffer[4];
        ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
        ui_temp_buffer[7] = ui_callback_ptr[3];
        ui_temp_buffer[6] = ui_temp_buffer[3];
        ui_temp_buffer[5] = ui_callback_ptr[2];
        ui_temp_buffer[4] = ui_temp_buffer[2];
        ui_temp_buffer[3] = ui_callback_ptr[1];
        ui_temp_buffer[2] = ui_temp_buffer[1];
        ui_temp_buffer[0] = ui_temp_buffer[0];
        ui_temp_buffer[1] = *ui_callback_ptr;
        ui_render_buffer_var._0_14_ = ui_widget_data_buffer._0_14_;
        ui_render_buffer_var[ui_component_angle_offset] = ui_widget_data_buffer[7];
        ui_render_buffer_var[UI_MAX_EVENT_FLAGS] = ui_callback_ptr[7];
        ui_task_processing_buffer._offset_w_ = ui_render_buffer_var._offset_w_;
        ui_task_processing_buffer._0_13_ = ui_widget_data_buffer._0_13_;
        ui_task_processing_buffer[THIRTEEN_VALUE] = ui_callback_ptr[6];
        ui_temp_buffer._13_3_ = ui_task_processing_buffer._13_3_;
        ui_temp_buffer._0_12_ = ui_widget_data_buffer._0_12_;
        ui_temp_buffer[12] = ui_widget_data_buffer[6];
        ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
        ui_temp_buffer._0_11_ = ui_widget_data_buffer._0_11_;
        ui_temp_buffer[ELEVEN_VALUE] = ui_callback_ptr[5];
        ui_temp_buffer._11_5_ = ui_temp_buffer._11_5_;
        ui_temp_buffer._0_10_ = ui_widget_data_buffer._0_10_;
        ui_temp_buffer[10] = ui_widget_data_buffer[5];
        ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
        ui_temp_buffer._0_9_ = ui_widget_data_buffer._0_9_;
        ui_temp_buffer[9] = ui_callback_ptr[4];
        ui_temp_buffer._9_7_ = ui_temp_buffer._9_7_;
        ui_temp_buffer._0_8_ = ui_widget_data_buffer._0_8_;
        ui_temp_buffer[8] = ui_widget_data_buffer[4];
        ui_input_data_buffer._8_8_ = ui_temp_buffer._8_8_;
        ui_input_data_buffer[7] = ui_callback_ptr[3];
        ui_input_data_buffer[6] = ui_widget_data_buffer[3];
        ui_input_data_buffer[5] = ui_callback_ptr[2];
        ui_input_data_buffer[4] = ui_widget_data_buffer[2];
        ui_input_data_buffer[3] = ui_callback_ptr[1];
        ui_input_data_buffer[2] = ui_widget_data_buffer[1];
        ui_input_data_buffer[0] = ui_widget_data_buffer[0];
        ui_input_data_buffer[1] = *ui_callback_ptr;
        ui_temp_buffer = pmaddubsw(ui_temp_buffer,ui_temp_buffer);
        ui_input_data_buffer = pmaddubsw(ui_input_data_buffer,ui_temp_buffer);
        ui_temp_buffer[1] = ui_callback_ptr[8];
        ui_temp_buffer[0] = ui_temp_buffer[8];
        ui_temp_buffer[2] = ui_temp_buffer[9];
        ui_temp_buffer[3] = ui_callback_ptr[9];
        ui_temp_buffer[4] = ui_temp_buffer[10];
        ui_temp_buffer[5] = ui_callback_ptr[10];
        ui_temp_buffer[6] = ui_temp_buffer[ELEVEN_VALUE];
        ui_temp_buffer[7] = ui_callback_ptr[ELEVEN_VALUE];
        ui_temp_buffer[8] = ui_temp_buffer[12];
        ui_temp_buffer[9] = ui_callback_ptr[12];
        ui_temp_buffer[10] = ui_temp_buffer[THIRTEEN_VALUE];
        ui_temp_buffer[ELEVEN_VALUE] = ui_callback_ptr[THIRTEEN_VALUE];
        ui_temp_buffer[12] = ui_temp_buffer[ui_component_angle_offset];
        ui_temp_buffer[THIRTEEN_VALUE] = ui_callback_ptr[ui_component_angle_offset];
        ui_temp_buffer[ui_component_angle_offset] = ui_temp_buffer[UI_MAX_EVENT_FLAGS];
        ui_temp_buffer[UI_MAX_EVENT_FLAGS] = ui_callback_ptr[UI_MAX_EVENT_FLAGS];
        ui_temp_buffer = pmaddubsw(ui_temp_buffer,ui_temp_buffer);
        ui_input_data_buffer = paddsw(ui_temp_buffer,ui_input_data_buffer);
        ui_temp_buffer = pmaddubsw(ui_temp_buffer,ui_temp_buffer);
        ui_temp_buffer[1] = ui_callback_ptr[8];
        ui_temp_buffer[0] = ui_widget_data_buffer[8];
        ui_temp_buffer[2] = ui_widget_data_buffer[9];
        ui_temp_buffer[3] = ui_callback_ptr[9];
        ui_temp_buffer[4] = ui_widget_data_buffer[10];
        ui_temp_buffer[5] = ui_callback_ptr[10];
        ui_temp_buffer[6] = ui_widget_data_buffer[ELEVEN_VALUE];
        ui_temp_buffer[7] = ui_callback_ptr[ELEVEN_VALUE];
        ui_temp_buffer[8] = ui_widget_data_buffer[12];
        ui_temp_buffer[9] = ui_callback_ptr[12];
        ui_temp_buffer[10] = ui_widget_data_buffer[THIRTEEN_VALUE];
        ui_temp_buffer[ELEVEN_VALUE] = ui_callback_ptr[THIRTEEN_VALUE];
        ui_temp_buffer[12] = ui_widget_data_buffer[ui_component_angle_offset];
        ui_temp_buffer[THIRTEEN_VALUE] = ui_callback_ptr[ui_component_angle_offset];
        ui_temp_buffer[ui_component_angle_offset] = ui_widget_data_buffer[UI_MAX_EVENT_FLAGS];
        ui_temp_buffer[UI_MAX_EVENT_FLAGS] = ui_callback_ptr[UI_MAX_EVENT_FLAGS];
        ui_temp_buffer = pmaddubsw(ui_temp_buffer,ui_temp_buffer);
        ui_component = ui_temp_buffer._component_x_;
        short_value9 = ui_temp_buffer._component_x_;
        ui_widget_data_buffer._component_x_ = (ushort)(ui_component < short_value9) * ui_component | (ushort)(ui_component >= short_value9) * short_value9;
        ui_component = ui_temp_buffer._component_y_;
        ui_widget_data_buffer._component_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
        ui_component = ui_temp_buffer._component_z_;
        ui_widget_data_buffer._component_z_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
        ui_component = ui_temp_buffer._component_w_;
        ui_widget_data_buffer._component_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
        ui_component = ui_temp_buffer._offset_x_;
        ui_widget_data_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
        short_value0 = ui_temp_buffer._offset_y_;
        ui_component = ui_temp_buffer._offset_y_;
        ui_widget_data_buffer._offset_y_ = (ushort)(short_value0 < ui_component) * short_value0 | (ushort)(short_value0 >= ui_component) * ui_component;
        short_value1 = ui_temp_buffer._offset_z_;
        ui_component = ui_temp_buffer._offset_z_;
        ui_component = ui_temp_buffer._offset_w_;
        ui_widget_data_buffer._offset_z_ = (ushort)(short_value1 < ui_component) * short_value1 | (ushort)(short_value1 >= ui_component) * ui_component;
        short_value2 = ui_temp_buffer._offset_w_;
        ui_widget_data_buffer._offset_w_ = (ushort)(short_value2 < ui_component) * short_value2 | (ushort)(short_value2 >= ui_component) * ui_component;
        ui_temp_buffer._component_x_ = (ushort)(short_value9 < ui_component) * ui_component | (ushort)(short_value9 >= ui_component) * short_value9;
        ui_temp_buffer._component_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
        ui_temp_buffer._component_z_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
        ui_temp_buffer._component_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
        ui_temp_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
        ui_temp_buffer._offset_y_ = (ushort)(ui_component < short_value0) * short_value0 | (ushort)(ui_component >= short_value0) * ui_component;
        ui_temp_buffer._offset_z_ = (ushort)(ui_component < short_value1) * short_value1 | (ushort)(ui_component >= short_value1) * ui_component;
        ui_temp_buffer._offset_w_ = (ushort)(ui_component < short_value2) * short_value2 | (ushort)(ui_component >= short_value2) * ui_component;
        ui_input_data_buffer = paddsw(ui_input_data_buffer,ui_widget_data_buffer);
        ui_input_data_buffer = paddsw(ui_input_data_buffer,ui_temp_buffer);
        ui_component = ui_temp_buffer._component_x_;
        short_value9 = ui_temp_buffer._component_x_;
        ui_temp_buffer._component_x_ = (ushort)(ui_component < short_value9) * ui_component | (ushort)(ui_component >= short_value9) * short_value9;
        ui_component = ui_temp_buffer._component_y_;
        ui_temp_buffer._component_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
        ui_component = ui_temp_buffer._component_z_;
        ui_temp_buffer._component_z_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
        ui_component = ui_temp_buffer._component_w_;
        ui_temp_buffer._component_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
        ui_component = ui_temp_buffer._offset_x_;
        ui_temp_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
        short_value0 = ui_temp_buffer._offset_y_;
        ui_component = ui_temp_buffer._offset_y_;
        ui_temp_buffer._offset_y_ = (ushort)(short_value0 < ui_component) * short_value0 | (ushort)(short_value0 >= ui_component) * ui_component;
        short_value1 = ui_temp_buffer._offset_z_;
        ui_component = ui_temp_buffer._offset_z_;
        ui_component = ui_temp_buffer._offset_w_;
        ui_temp_buffer._offset_z_ = (ushort)(short_value1 < ui_component) * short_value1 | (ushort)(short_value1 >= ui_component) * ui_component;
        short_value2 = ui_temp_buffer._offset_w_;
        ui_temp_buffer._offset_w_ = (ushort)(short_value2 < ui_component) * short_value2 | (ushort)(short_value2 >= ui_component) * ui_component;
        ui_input_data_buffer = pmulhrsw(ui_input_data_buffer,aui_task_identifier);
        ui_temp_buffer._component_x_ = (ushort)(short_value9 < ui_component) * ui_component | (ushort)(short_value9 >= ui_component) * short_value9;
        ui_temp_buffer._component_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
        ui_temp_buffer._component_z_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
        ui_temp_buffer._component_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
        ui_temp_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
        ui_temp_buffer._offset_y_ = (ushort)(ui_component < short_value0) * short_value0 | (ushort)(ui_component >= short_value0) * ui_component;
        ui_temp_buffer._offset_z_ = (ushort)(ui_component < short_value1) * short_value1 | (ushort)(ui_component >= short_value1) * ui_component;
        ui_temp_buffer._offset_w_ = (ushort)(ui_component < short_value2) * short_value2 | (ushort)(ui_component >= short_value2) * ui_component;
        ui_temp_buffer = paddsw(ui_temp_buffer,ui_temp_buffer);
        ui_temp_buffer = pmulhrsw(ui_temp_buffer,aui_task_identifier);
        ui_component = ui_input_data_buffer._component_x_;
        ui_component = ui_input_data_buffer._component_y_;
        ui_component = ui_input_data_buffer._component_z_;
        ui_component = ui_input_data_buffer._component_w_;
        ui_component = ui_input_data_buffer._offset_x_;
        short_value0 = ui_input_data_buffer._offset_y_;
        short_value1 = ui_input_data_buffer._offset_z_;
        short_value2 = ui_input_data_buffer._offset_w_;
        short_value9 = ui_temp_buffer._component_x_;
        ui_component = ui_temp_buffer._component_y_;
        ui_component = ui_temp_buffer._component_z_;
        ui_component = ui_temp_buffer._component_w_;
        ui_component = ui_temp_buffer._offset_x_;
        ui_component = ui_temp_buffer._offset_y_;
        ui_component = ui_temp_buffer._offset_z_;
        ui_component = ui_temp_buffer._offset_w_;
        *ui_function_ptr6 = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_input_data_buffer[0] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_function_ptr6[1] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_input_data_buffer[2] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_function_ptr6[2] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_input_data_buffer[4] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_function_ptr6[3] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_input_data_buffer[6] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_function_ptr6[4] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_input_data_buffer[8] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_function_ptr6[5] = (0 < short_value0) * (short_value0 < UI_MAX_COMPONENT_VALUE) * ui_input_data_buffer[10] - (UI_COMPONENT_MAX_VALUE < short_value0);
        ui_function_ptr6[6] = (0 < short_value1) * (short_value1 < UI_MAX_COMPONENT_VALUE) * ui_input_data_buffer[12] - (UI_COMPONENT_MAX_VALUE < short_value1);
        ui_function_ptr6[7] = (0 < short_value2) * (short_value2 < UI_MAX_COMPONENT_VALUE) * ui_input_data_buffer[ui_component_angle_offset] - (UI_COMPONENT_MAX_VALUE < short_value2);
        ui_function_ptr6[8] = (0 < short_value9) * (short_value9 < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[0] - (UI_COMPONENT_MAX_VALUE < short_value9);
        ui_function_ptr6[9] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[2] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_function_ptr6[10] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[4] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_function_ptr6[ELEVEN_VALUE] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[6] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_function_ptr6[12] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[8] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_function_ptr6[THIRTEEN_VALUE] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[10] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_function_ptr6[ui_component_angle_offset] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[12] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_function_ptr6[UI_MAX_EVENT_FLAGS] = (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[ui_component_angle_offset] - (UI_COMPONENT_MAX_VALUE < ui_component);
        ui_event_id7 = ui_event_id7 - 1;
        ui_function_ptr6 = ui_function_ptr6 + UI_EVENT_FLAG_OFFSET;
      } while (ui_event_id7 != 0);
    }
    ui_system_register = ui_system_register + inuiui_stack_var_var_000000f8;
    ui_system_register = ui_system_register + ui_stack_integer_offset_110;
    ui_event_id8 = ui_event_id8 - 1;
  } while (ui_event_id8 != 0);
  return ui_system_return_value;
}

void ui_system_cleanup_layout_resources(void)

{
  return ui_system_return_value;
}

void ui_system_validate_layout_structure(longlong ui_callback,longlong ui_event_type,uint32_t *ui_event_data,longlong ui_event_flags,
                  longlong ui_parameter_value,uint ui_parameter_value,int ui_parameter_value,int ui_parameter_value,uint ui_parameter_value)

{
  uint32_t ui_system_event_id;
  uint32_t ui_system_task_id;
  uint32_t ui_loop_counter;
  short ui_component;
  short short_value0;
  short short_value1;
  short short_value2;
  uint32_t *ui_event_buffer;
  ulonglong ui_event_id_fourth;
  uint32_t *ui_event_buffer;
  short short_value6;
  short short_value8;
  short short_value9;
  short ui_component;
  uint8_t aui_event_id7 [16];
  short ui_component;
  uint8_t ui_theme_buffer_var [16];
  uint8_t ui_font_data_buffer [16];
  uint8_t ui_task_index_array_primary [16];
  uint8_t ui_system_shader_buffer_variable [16];
  uint8_t ui_system_layout_data_buffer [16];
  
  if (0 < (int)ui_parameter_value) {
    ui_event_id_fourth = (ulonglong)ui_parameter_value;
    ui_event_buffer = ui_event_data;
    do {
      ui_event_buffer = (uint32_t *)(((longlong)(int)ui_parameter_value >> 4) * ui_event_type + ui_callback + ui_event_type * -3);
      if ((ui_parameter_value & UI_MAX_EVENT_FLAGS) == 0) {
        memcpy(ui_event_buffer,(longlong)ui_event_buffer + ui_event_type * 3,(longlong)ui_parameter_value);
      }
      ui_system_event_id = *(uint32_t *)((longlong)ui_event_buffer + ui_event_type * 3);
      ui_system_task_id = *(uint32_t *)((longlong)ui_event_buffer + ui_event_type * 2);
      ui_loop_counter = ui_event_buffer[ui_event_type];
      ui_loop_counter = *ui_event_buffer;
      ui_system_shader_buffer_variable._data_size_ =
           (int)(CONCAT35(CONCAT21(CONCAT11((char)((uint)ui_system_event_id >> UI_SNAPSHOT_CREATE_FLAGS),(char)((uint)ui_system_task_id >> UI_SNAPSHOT_CREATE_FLAGS))
                                   ,(char)((uint)ui_system_event_id >> UI_EVENT_FLAG_OFFSET)),
                          CONCAT14((char)((uint)ui_system_task_id >> UI_EVENT_FLAG_OFFSET),ui_system_task_id)) >> UI_OFFSET_32);
      ui_system_shader_buffer_variable[3] = (char)((uint)ui_system_event_id >> 8);
      ui_system_shader_buffer_variable[2] = (char)((uint)ui_system_task_id >> 8);
      ui_system_shader_buffer_variable[0] = (uint8_t)ui_system_task_id;
      ui_system_shader_buffer_variable[1] = (char)ui_system_event_id;
      ui_system_shader_buffer_variable._8_8_ = 0;
      ui_font_data_buffer = *(uint8_t (*) [16])((ulonglong)(ui_parameter_value & UI_MAX_EVENT_FLAGS) * UI_EVENT_FLAG_OFFSET + ui_parameter_value);
      aui_event_id7 = pshufb(ui_font_data_buffer,_ui_config_window_settings);
      ui_system_layout_data_buffer = pmaddubsw(ui_system_shader_buffer_variable,aui_event_id7);
      ui_system_event_id = *(uint32_t *)((longlong)ui_event_buffer + ui_event_type * 5);
      ui_system_task_id = *(uint32_t *)((longlong)ui_event_buffer + ui_event_type * 6);
      ui_task_index_array_primary._data_size_ =
           (int)(CONCAT35(CONCAT21(CONCAT11((char)((uint)ui_system_event_id >> UI_SNAPSHOT_CREATE_FLAGS),(char)((uint)ui_loop_counter >> UI_SNAPSHOT_CREATE_FLAGS))
                                   ,(char)((uint)ui_system_event_id >> UI_EVENT_FLAG_OFFSET)),
                          CONCAT14((char)((uint)ui_loop_counter >> UI_EVENT_FLAG_OFFSET),ui_loop_counter)) >> UI_OFFSET_32);
      ui_task_index_array_primary[3] = (char)((uint)ui_system_event_id >> 8);
      ui_task_index_array_primary[2] = (char)((uint)ui_temp_buffer >> 8);
      ui_task_index_array_primary[0] = (uint8_t)ui_loop_counter;
      ui_task_index_array_primary[1] = (char)ui_system_event_id;
      ui_task_index_array_primary._8_8_ = 0;
      aui_event_id7 = pshufb(ui_font_data_buffer,_ui_config_widget_settings);
      ui_task_index_array_primary = pmaddubsw(ui_task_index_array_primary,aui_event_id7);
      ui_system_event_id = *(uint32_t *)(ui_event_type * 7 + (longlong)ui_event_buffer);
      ui_theme_buffer_var._data_size_ =
           (int)(CONCAT35(CONCAT21(CONCAT11((char)((uint)ui_system_event_id >> UI_SNAPSHOT_CREATE_FLAGS),(char)((uint)ui_system_task_id >> UI_SNAPSHOT_CREATE_FLAGS))
                                   ,(char)((uint)ui_system_event_id >> UI_EVENT_FLAG_OFFSET)),
                          CONCAT14((char)((uint)ui_system_task_id >> UI_EVENT_FLAG_OFFSET),ui_system_task_id)) >> UI_OFFSET_32);
      ui_theme_buffer_var[3] = (char)((uint)ui_system_event_id >> 8);
      ui_theme_buffer_var[2] = (char)((uint)ui_system_task_id >> 8);
      ui_theme_buffer_var[0] = (uint8_t)ui_system_task_id;
      ui_theme_buffer_var[1] = (char)ui_system_event_id;
      ui_theme_buffer_var._8_8_ = 0;
      aui_event_id7 = pshufb(ui_font_data_buffer,_ui_config_layout_settings);
      ui_font_data_buffer = pshufb(ui_font_data_buffer,_ui_config_render_settings);
      ui_theme_buffer_var = pmaddubsw(ui_theme_buffer_var,aui_event_id7);
      ui_system_event_id = *(uint32_t *)((longlong)ui_event_buffer + ui_event_type);
      aui_event_id7._data_size_ =
           (int)(CONCAT35(CONCAT21(CONCAT11((char)((uint)ui_system_event_id >> UI_SNAPSHOT_CREATE_FLAGS),(char)((uint)ui_loop_counter >> UI_SNAPSHOT_CREATE_FLAGS))
                                   ,(char)((uint)ui_system_event_id >> UI_EVENT_FLAG_OFFSET)),
                          CONCAT14((char)((uint)ui_loop_counter >> UI_EVENT_FLAG_OFFSET),ui_loop_counter)) >> UI_OFFSET_32);
      aui_event_id7[3] = (char)((uint)ui_system_event_id >> 8);
      aui_event_id7[2] = (char)((uint)ui_temp_buffer >> 8);
      aui_event_id7[0] = (uint8_t)ui_loop_counter;
      aui_event_id7[1] = (char)ui_system_event_id;
      aui_event_id7._8_8_ = 0;
      aui_event_id7 = pmaddubsw(aui_event_id7,ui_font_data_buffer);
      ui_component = ui_system_layout_data_buffer._component_x_;
      short_value6 = ui_task_index_array_primary._component_x_;
      ui_font_data_buffer._component_x_ = (ushort)(ui_component < short_value6) * ui_component | (ushort)(ui_component >= short_value6) * short_value6;
      ui_component = ui_system_layout_data_buffer._component_y_;
      short_value8 = ui_task_index_array_primary._component_y_;
      ui_font_data_buffer._component_y_ = (ushort)(ui_component < short_value8) * ui_component | (ushort)(ui_component >= short_value8) * short_value8;
      ui_component = ui_system_layout_data_buffer._component_z_;
      short_value9 = ui_task_index_array_primary._component_z_;
      ui_font_data_buffer._component_z_ = (ushort)(ui_component < short_value9) * ui_component | (ushort)(ui_component >= short_value9) * short_value9;
      ui_component = ui_system_layout_data_buffer._component_w_;
      ui_component = ui_task_index_array_primary._component_w_;
      ui_font_data_buffer._component_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_component = ui_system_layout_data_buffer._offset_x_;
      ui_component = ui_task_index_array_primary._offset_x_;
      ui_font_data_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      short_value0 = ui_system_layout_data_buffer._offset_y_;
      ui_component = ui_task_index_array_primary._offset_y_;
      ui_font_data_buffer._offset_y_ = (ushort)(short_value0 < ui_component) * short_value0 | (ushort)(short_value0 >= ui_component) * ui_component;
      short_value1 = ui_system_layout_data_buffer._offset_z_;
      ui_component = ui_task_index_array_primary._offset_z_;
      ui_component = ui_task_index_array_primary._offset_w_;
      ui_font_data_buffer._offset_z_ = (ushort)(short_value1 < ui_component) * short_value1 | (ushort)(short_value1 >= ui_component) * ui_component;
      short_value2 = ui_system_layout_data_buffer._offset_w_;
      ui_font_data_buffer._offset_w_ = (ushort)(short_value2 < ui_component) * short_value2 | (ushort)(short_value2 >= ui_component) * ui_component;
      ui_system_layout_data_buffer._component_x_ = (ushort)(short_value6 < ui_component) * ui_component | (ushort)(short_value6 >= ui_component) * short_value6;
      ui_system_layout_data_buffer._component_y_ = (ushort)(short_value8 < ui_component) * ui_component | (ushort)(short_value8 >= ui_component) * short_value8;
      ui_system_layout_data_buffer._component_z_ = (ushort)(short_value9 < ui_component) * ui_component | (ushort)(short_value9 >= ui_component) * short_value9;
      ui_system_layout_data_buffer._component_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_system_layout_data_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_system_layout_data_buffer._offset_y_ = (ushort)(ui_component < short_value0) * short_value0 | (ushort)(ui_component >= short_value0) * ui_component;
      ui_system_layout_data_buffer._offset_z_ = (ushort)(ui_component < short_value1) * short_value1 | (ushort)(ui_component >= short_value1) * ui_component;
      ui_system_layout_data_buffer._offset_w_ = (ushort)(ui_component < short_value2) * short_value2 | (ushort)(ui_component >= short_value2) * ui_component;
      aui_event_id7 = paddsw(ui_theme_buffer_var,aui_event_id7);
      ui_font_data_buffer = paddsw(aui_event_id7,ui_font_data_buffer);
      ui_font_data_buffer = paddsw(ui_font_data_buffer,ui_system_layout_data_buffer);
      ui_font_data_buffer = pmulhrsw(ui_font_data_buffer,_ui_config_input_settings);
      ui_component = ui_font_data_buffer._component_x_;
      ui_component = ui_font_data_buffer._component_y_;
      ui_component = ui_font_data_buffer._component_z_;
      ui_component = ui_font_data_buffer._component_w_;
      *ui_event_data = CONCAT13((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[6] - (UI_COMPONENT_MAX_VALUE < ui_component),
                          CONCAT12((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[4] - (UI_COMPONENT_MAX_VALUE < ui_component),
                                   CONCAT11((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[2] -
                                            (UI_COMPONENT_MAX_VALUE < ui_component),
                                            (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[0] -
                                            (UI_COMPONENT_MAX_VALUE < ui_component))));
      ui_parameter_value = ui_parameter_value + ui_parameter_value;
      ui_event_buffer = (uint32_t *)((longlong)ui_event_buffer + ui_event_flags);
      ui_event_data = (uint32_t *)((longlong)ui_event_data + ui_event_flags);
      ui_event_id_fourth = ui_event_id_fourth - 1;
    } while (ui_event_id_fourth != 0);
  }
  return ui_system_return_value;
}

void ui_system_process_layout_hierarchy(uint64_t ui_callback,uint64_t ui_event_type,longlong ui_event_data)

{
  uint32_t ui_system_event_id;
  uint32_t ui_system_task_id;
  uint32_t ui_loop_counter;
  short ui_component;
  short short_value0;
  short short_value1;
  short short_value2;
  uint ui_register_eax;
  uint32_t *ui_event_buffer;
  uint ui_system_register;
  ulonglong ui_event_id_fourth;
  uint32_t *ui_system_register;
  longlong ui_system_register_long;
  short short_value5;
  short short_value7;
  short short_value8;
  short short_value9;
  short ui_component;
  uint8_t aui_event_id6 [16];
  short ui_component;
  uint8_t ui_window_data_buffer [16];
  uint8_t ui_theme_buffer_var [16];
  uint8_t ui_font_data_buffer [16];
  uint8_t ui_task_index_array_primary [16];
  uint8_t ui_system_shader_buffer_variable [16];
  longlong inuiui_stack_var_var_00000070;
  int inuiui_stack_var_var_00000080;
  int inuiui_stack_var_var_00000088;
  
  ui_event_id_fourth = (ulonglong)ui_register_eax;
  do {
    ui_event_buffer = (uint32_t *)(((longlong)(int)ui_system_register >> 4) * ui_system_register + ui_system_register);
    if ((ui_system_register & UI_MAX_EVENT_FLAGS) == 0) {
      memcpy(ui_event_data,(longlong)ui_event_buffer + ui_system_register,(longlong)inuiui_stack_var_var_00000088);
    }
    ui_system_event_id = *(uint32_t *)((longlong)ui_event_buffer + ui_system_register);
    ui_system_task_id = *(uint32_t *)((longlong)ui_event_buffer + ui_system_register * 2);
    ui_loop_counter = ui_event_buffer[ui_system_register];
    ui_loop_counter = *ui_event_buffer;
    ui_task_index_array_primary._data_size_ =
         (int)(CONCAT35(CONCAT21(CONCAT11((char)((uint)ui_system_event_id >> UI_SNAPSHOT_CREATE_FLAGS),(char)((uint)ui_system_task_id >> UI_SNAPSHOT_CREATE_FLAGS)),
                                 (char)((uint)ui_system_event_id >> UI_EVENT_FLAG_OFFSET)),
                        CONCAT14((char)((uint)ui_system_task_id >> UI_EVENT_FLAG_OFFSET),ui_system_task_id)) >> UI_OFFSET_32);
    ui_task_index_array_primary[3] = (char)((uint)ui_system_event_id >> 8);
    ui_task_index_array_primary[2] = (char)((uint)ui_system_task_id >> 8);
    ui_task_index_array_primary[0] = (uint8_t)ui_system_task_id;
    ui_task_index_array_primary[1] = (char)ui_system_event_id;
    ui_task_index_array_primary._8_8_ = 0;
    ui_theme_buffer_var = *(uint8_t (*) [16])((ulonglong)(ui_system_register & UI_MAX_EVENT_FLAGS) * UI_EVENT_FLAG_OFFSET + inuiui_stack_var_var_00000070);
    aui_event_id6 = pshufb(ui_theme_buffer_var,_ui_config_window_settings);
    ui_system_shader_buffer_variable = pmaddubsw(ui_task_index_array_primary,aui_event_id6);
    ui_system_event_id = *(uint32_t *)((longlong)ui_event_buffer + ui_system_register * 5);
    ui_system_task_id = *(uint32_t *)((longlong)ui_event_buffer + ui_system_register * 6);
    ui_font_data_buffer._data_size_ =
         (int)(CONCAT35(CONCAT21(CONCAT11((char)((uint)ui_system_event_id >> UI_SNAPSHOT_CREATE_FLAGS),(char)((uint)ui_loop_counter >> UI_SNAPSHOT_CREATE_FLAGS)),
                                 (char)((uint)ui_system_event_id >> UI_EVENT_FLAG_OFFSET)),
                        CONCAT14((char)((uint)ui_loop_counter >> UI_EVENT_FLAG_OFFSET),ui_loop_counter)) >> UI_OFFSET_32);
    ui_font_data_buffer[3] = (char)((uint)ui_system_event_id >> 8);
    ui_font_data_buffer[2] = (char)((uint)ui_temp_buffer >> 8);
    ui_font_data_buffer[0] = (uint8_t)ui_loop_counter;
    ui_font_data_buffer[1] = (char)ui_system_event_id;
    ui_font_data_buffer._8_8_ = 0;
    aui_event_id6 = pshufb(ui_theme_buffer_var,_ui_config_widget_settings);
    ui_font_data_buffer = pmaddubsw(ui_font_data_buffer,aui_event_id6);
    ui_system_event_id = *(uint32_t *)(ui_system_register * 7 + (longlong)ui_event_buffer);
    ui_window_data_buffer._data_size_ =
         (int)(CONCAT35(CONCAT21(CONCAT11((char)((uint)ui_system_event_id >> UI_SNAPSHOT_CREATE_FLAGS),(char)((uint)ui_system_task_id >> UI_SNAPSHOT_CREATE_FLAGS)),
                                 (char)((uint)ui_system_event_id >> UI_EVENT_FLAG_OFFSET)),
                        CONCAT14((char)((uint)ui_system_task_id >> UI_EVENT_FLAG_OFFSET),ui_system_task_id)) >> UI_OFFSET_32);
    ui_window_data_buffer[3] = (char)((uint)ui_system_event_id >> 8);
    ui_window_data_buffer[2] = (char)((uint)ui_system_task_id >> 8);
    ui_window_data_buffer[0] = (uint8_t)ui_system_task_id;
    ui_window_data_buffer[1] = (char)ui_system_event_id;
    ui_window_data_buffer._8_8_ = 0;
    aui_event_id6 = pshufb(ui_theme_buffer_var,_ui_config_layout_settings);
    ui_theme_buffer_var = pshufb(ui_theme_buffer_var,_ui_config_render_settings);
    ui_window_data_buffer = pmaddubsw(ui_window_data_buffer,aui_event_id6);
    ui_system_event_id = *(uint32_t *)((longlong)ui_event_buffer + ui_system_register);
    aui_event_id6._data_size_ =
         (int)(CONCAT35(CONCAT21(CONCAT11((char)((uint)ui_system_event_id >> UI_SNAPSHOT_CREATE_FLAGS),(char)((uint)ui_loop_counter >> UI_SNAPSHOT_CREATE_FLAGS)),
                                 (char)((uint)ui_system_event_id >> UI_EVENT_FLAG_OFFSET)),
                        CONCAT14((char)((uint)ui_loop_counter >> UI_EVENT_FLAG_OFFSET),ui_loop_counter)) >> UI_OFFSET_32);
    aui_event_id6[3] = (char)((uint)ui_system_event_id >> 8);
    aui_event_id6[2] = (char)((uint)ui_temp_buffer >> 8);
    aui_event_id6[0] = (uint8_t)ui_loop_counter;
    aui_event_id6[1] = (char)ui_system_event_id;
    aui_event_id6._8_8_ = 0;
    aui_event_id6 = pmaddubsw(aui_event_id6,ui_theme_buffer_var);
    ui_component = ui_system_shader_buffer_variable._component_x_;
    short_value5 = ui_font_data_buffer._component_x_;
    ui_theme_buffer_var._component_x_ = (ushort)(ui_component < short_value5) * ui_component | (ushort)(ui_component >= short_value5) * short_value5;
    ui_component = ui_system_shader_buffer_variable._component_y_;
    short_value7 = ui_font_data_buffer._component_y_;
    ui_theme_buffer_var._component_y_ = (ushort)(ui_component < short_value7) * ui_component | (ushort)(ui_component >= short_value7) * short_value7;
    ui_component = ui_system_shader_buffer_variable._component_z_;
    short_value8 = ui_font_data_buffer._component_z_;
    ui_theme_buffer_var._component_z_ = (ushort)(ui_component < short_value8) * ui_component | (ushort)(ui_component >= short_value8) * short_value8;
    ui_component = ui_system_shader_buffer_variable._component_w_;
    short_value9 = ui_font_data_buffer._component_w_;
    ui_theme_buffer_var._component_w_ = (ushort)(ui_component < short_value9) * ui_component | (ushort)(ui_component >= short_value9) * short_value9;
    ui_component = ui_system_shader_buffer_variable._offset_x_;
    ui_component = ui_font_data_buffer._offset_x_;
    ui_theme_buffer_var._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
    short_value0 = ui_system_shader_buffer_variable._offset_y_;
    ui_component = ui_font_data_buffer._offset_y_;
    ui_theme_buffer_var._offset_y_ = (ushort)(short_value0 < ui_component) * short_value0 | (ushort)(short_value0 >= ui_component) * ui_component;
    short_value1 = ui_system_shader_buffer_variable._offset_z_;
    ui_component = ui_font_data_buffer._offset_z_;
    ui_component = ui_font_data_buffer._offset_w_;
    ui_theme_buffer_var._offset_z_ = (ushort)(short_value1 < ui_component) * short_value1 | (ushort)(short_value1 >= ui_component) * ui_component;
    short_value2 = ui_system_shader_buffer_variable._offset_w_;
    ui_theme_buffer_var._offset_w_ = (ushort)(short_value2 < ui_component) * short_value2 | (ushort)(short_value2 >= ui_component) * ui_component;
    ui_system_shader_buffer_variable._component_x_ = (ushort)(short_value5 < ui_component) * ui_component | (ushort)(short_value5 >= ui_component) * short_value5;
    ui_system_shader_buffer_variable._component_y_ = (ushort)(short_value7 < ui_component) * ui_component | (ushort)(short_value7 >= ui_component) * short_value7;
    ui_system_shader_buffer_variable._component_z_ = (ushort)(short_value8 < ui_component) * ui_component | (ushort)(short_value8 >= ui_component) * short_value8;
    ui_system_shader_buffer_variable._component_w_ = (ushort)(short_value9 < ui_component) * ui_component | (ushort)(short_value9 >= ui_component) * short_value9;
    ui_system_shader_buffer_variable._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
    ui_system_shader_buffer_variable._offset_y_ = (ushort)(ui_component < short_value0) * short_value0 | (ushort)(ui_component >= short_value0) * ui_component;
    ui_system_shader_buffer_variable._offset_z_ = (ushort)(ui_component < short_value1) * short_value1 | (ushort)(ui_component >= short_value1) * ui_component;
    ui_system_shader_buffer_variable._offset_w_ = (ushort)(ui_component < short_value2) * short_value2 | (ushort)(ui_component >= short_value2) * ui_component;
    aui_event_id6 = paddsw(ui_window_data_buffer,aui_event_id6);
    ui_theme_buffer_var = paddsw(aui_event_id6,ui_theme_buffer_var);
    ui_theme_buffer_var = paddsw(ui_theme_buffer_var,ui_system_shader_buffer_variable);
    ui_theme_buffer_var = pmulhrsw(ui_theme_buffer_var,_ui_config_input_settings);
    ui_component = ui_theme_buffer_var._component_x_;
    ui_component = ui_theme_buffer_var._component_y_;
    ui_component = ui_theme_buffer_var._component_z_;
    ui_component = ui_theme_buffer_var._component_w_;
    *ui_system_register = CONCAT13((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_theme_buffer_var[6] - (UI_COMPONENT_MAX_VALUE < ui_component),
                          CONCAT12((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_theme_buffer_var[4] - (UI_COMPONENT_MAX_VALUE < ui_component),
                                   CONCAT11((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_theme_buffer_var[2] -
                                            (UI_COMPONENT_MAX_VALUE < ui_component),
                                            (0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_theme_buffer_var[0] -
                                            (UI_COMPONENT_MAX_VALUE < ui_component))));
    ui_system_register = ui_system_register + inuiui_stack_var_var_00000080;
    ui_event_data = ui_event_data + ui_system_register;
    ui_system_register = (uint32_t *)((longlong)ui_system_register + ui_system_register);
    ui_event_id_fourth = ui_event_id_fourth - 1;
  } while (ui_event_id_fourth != 0);
  return ui_system_return_value;
}

void ui_system_reset_layout_counters(void)

{
  return ui_system_return_value;
}

void ui_system_update_layout_bounds(longlong ui_callback,longlong ui_event_type,uint64_t *ui_event_data,longlong ui_event_flags,
                  longlong ui_parameter_value,uint ui_parameter_value,int ui_parameter_value,int ui_parameter_value,uint ui_parameter_value)

{
  uint64_t ui_system_event_id;
  ulonglong ui_system_task_id;
  ulonglong ui_temp_ulong;
  short ui_component;
  short short_value0;
  short short_value1;
  short short_value2;
  ulonglong *ui_event_data_buffer_buffer;
  ulonglong ui_event_id_fourth;
  short short_value5;
  short short_value7;
  short short_value8;
  short short_value9;
  short ui_component;
  uint8_t aui_event_id6 [16];
  short ui_component;
  uint8_t ui_window_data_buffer [16];
  uint8_t ui_temp_buffer [16];
  uint8_t ui_theme_buffer_var [16];
  uint8_t ui_font_data_buffer [16];
  uint8_t ui_task_index_array_primary [16];
  uint8_t ui_system_shader_buffer_variable [16];
  uint8_t ui_system_layout_data_buffer [16];
  uint8_t ui_temporary_buffer [16];
  uint8_t ui_temp_buffer [16];
  
  if (0 < (int)ui_parameter_value) {
    ui_event_id_fourth = (ulonglong)ui_parameter_value;
    do {
      ui_event_buffer = (ulonglong *)(((longlong)(int)ui_parameter_value >> 4) * ui_event_type + ui_callback + ui_event_type * -3);
      if ((ui_parameter_value & UI_MAX_EVENT_FLAGS) == 0) {
        memcpy(ui_event_data,ui_event_type * 3 + (longlong)ui_event_buffer,(longlong)ui_parameter_value);
      }
      ui_system_event_id = *(uint64_t *)(ui_event_type * 3 + (longlong)ui_event_buffer);
      ui_system_task_id = *(ulonglong *)((longlong)ui_event_buffer + ui_event_type * 2);
      ui_loop_counter = *(ulonglong *)((longlong)ui_event_buffer + ui_event_type * 4);
      ui_loop_counter = *ui_event_buffer;
      ui_temp_buffer._8_6_ = 0;
      ui_temp_buffer._0_8_ = ui_system_task_id;
      ui_temp_buffer[ui_component_angle_offset] = (char)(ui_system_task_id >> UI_MEMORY_DEALLOC_OFFSET);
      ui_temp_buffer[UI_MAX_EVENT_FLAGS] = (char)((ulonglong)ui_system_event_id >> UI_MEMORY_DEALLOC_OFFSET);
      ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_;
      ui_temp_buffer._8_5_ = 0;
      ui_temp_buffer._0_8_ = ui_system_task_id;
      ui_temp_buffer[THIRTEEN_VALUE] = (char)((ulonglong)ui_system_event_id >> UI_MEMORY_ALLOC_SIZE);
      ui_temp_buffer._13_3_ = ui_temp_buffer._13_3_;
      ui_temp_buffer._data_format_ = 0;
      ui_temp_buffer._0_8_ = ui_system_task_id;
      ui_temp_buffer[12] = (char)(ui_system_task_id >> UI_MEMORY_ALLOC_SIZE);
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
      ui_temp_buffer._8_3_ = 0;
      ui_temp_buffer._0_8_ = ui_system_task_id;
      ui_temp_buffer[ELEVEN_VALUE] = (char)((ulonglong)ui_system_event_id >> UI_CALLBACK_HANDLER_OFFSET);
      ui_temp_buffer._11_5_ = ui_temp_buffer._11_5_;
      ui_temp_buffer._offset_x_ = 0;
      ui_temp_buffer._0_8_ = ui_system_task_id;
      ui_temp_buffer[10] = (char)(ui_system_task_id >> UI_CALLBACK_HANDLER_OFFSET);
      ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
      ui_temp_buffer[8] = 0;
      ui_temp_buffer._0_8_ = ui_system_task_id;
      ui_temp_buffer[9] = (char)((ulonglong)ui_system_event_id >> UI_OFFSET_32);
      ui_temp_buffer._9_7_ = ui_temp_buffer._9_7_;
      ui_temp_buffer[8] = (char)(ui_system_task_id >> UI_OFFSET_32);
      ui_temp_buffer._0_8_ = ui_system_task_id;
      ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
      ui_temp_buffer[7] = (char)((ulonglong)ui_system_event_id >> UI_SNAPSHOT_CREATE_FLAGS);
      ui_temp_buffer[6] = (char)(ui_system_task_id >> UI_SNAPSHOT_CREATE_FLAGS);
      ui_temp_buffer[5] = (char)((ulonglong)ui_system_event_id >> UI_EVENT_FLAG_OFFSET);
      ui_temp_buffer[4] = (char)(ui_system_task_id >> UI_EVENT_FLAG_OFFSET);
      ui_temp_buffer[3] = (char)((ulonglong)ui_system_event_id >> 8);
      ui_temp_buffer[2] = (char)(ui_system_task_id >> 8);
      ui_temp_buffer[0] = (uint8_t)ui_system_task_id;
      ui_temp_buffer[1] = (char)ui_system_event_id;
      ui_temp_buffer = *(uint8_t (*) [16])((ulonglong)(ui_parameter_value & UI_MAX_EVENT_FLAGS) * UI_EVENT_FLAG_OFFSET + ui_parameter_value);
      aui_event_id6 = pshufb(ui_temp_buffer,_ui_config_window_settings);
      ui_temp_buffer = pmaddubsw(ui_temp_buffer,aui_event_id6);
      ui_system_event_id = *(uint64_t *)((longlong)ui_event_buffer + ui_event_type * 5);
      ui_system_task_id = *(ulonglong *)((longlong)ui_event_buffer + ui_event_type * 6);
      ui_temp_buffer._8_6_ = 0;
      ui_temp_buffer._0_8_ = ui_loop_counter;
      ui_temp_buffer[ui_component_angle_offset] = (char)(ui_loop_counter >> UI_MEMORY_DEALLOC_OFFSET);
      ui_temp_buffer[UI_MAX_EVENT_FLAGS] = (char)((ulonglong)ui_system_event_id >> UI_MEMORY_DEALLOC_OFFSET);
      ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_;
      ui_temp_buffer._8_5_ = 0;
      ui_temp_buffer._0_8_ = ui_loop_counter;
      ui_temp_buffer[THIRTEEN_VALUE] = (char)((ulonglong)ui_system_event_id >> UI_MEMORY_ALLOC_SIZE);
      ui_temp_buffer._13_3_ = ui_temp_buffer._13_3_;
      ui_temp_buffer._data_format_ = 0;
      ui_temp_buffer._0_8_ = ui_loop_counter;
      ui_temp_buffer[12] = (char)(ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
      ui_temp_buffer._8_3_ = 0;
      ui_temp_buffer._0_8_ = ui_loop_counter;
      ui_temp_buffer[ELEVEN_VALUE] = (char)((ulonglong)ui_system_event_id >> UI_CALLBACK_HANDLER_OFFSET);
      ui_temp_buffer._11_5_ = ui_temp_buffer._11_5_;
      ui_temp_buffer._offset_x_ = 0;
      ui_temp_buffer._0_8_ = ui_loop_counter;
      ui_temp_buffer[10] = (char)(ui_loop_counter >> UI_CALLBACK_HANDLER_OFFSET);
      ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
      ui_temp_buffer[8] = 0;
      ui_temp_buffer._0_8_ = ui_loop_counter;
      ui_temp_buffer[9] = (char)((ulonglong)ui_system_event_id >> UI_OFFSET_32);
      ui_temp_buffer._9_7_ = ui_temp_buffer._9_7_;
      ui_temp_buffer[8] = (char)(ui_loop_counter >> UI_OFFSET_32);
      ui_temp_buffer._0_8_ = ui_loop_counter;
      ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
      ui_temp_buffer[7] = (char)((ulonglong)ui_system_event_id >> UI_SNAPSHOT_CREATE_FLAGS);
      ui_temp_buffer[6] = (char)(ui_loop_counter >> UI_SNAPSHOT_CREATE_FLAGS);
      ui_temp_buffer[5] = (char)((ulonglong)ui_system_event_id >> UI_EVENT_FLAG_OFFSET);
      ui_temp_buffer[4] = (char)(ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
      ui_temp_buffer[3] = (char)((ulonglong)ui_system_event_id >> 8);
      ui_temp_buffer[2] = (char)(ui_temp_buffer >> 8);
      ui_temp_buffer[0] = (uint8_t)ui_loop_counter;
      ui_temp_buffer[1] = (char)ui_system_event_id;
      aui_event_id6 = pshufb(ui_temp_buffer,_ui_config_widget_settings);
      ui_temp_buffer = pmaddubsw(ui_temp_buffer,aui_event_id6);
      ui_system_event_id = *(uint64_t *)(ui_event_type * 7 + (longlong)ui_event_buffer);
      ui_temp_buffer._8_6_ = 0;
      ui_temp_buffer._0_8_ = ui_system_task_id;
      ui_temp_buffer[ui_component_angle_offset] = (char)(ui_system_task_id >> UI_MEMORY_DEALLOC_OFFSET);
      ui_temp_buffer[UI_MAX_EVENT_FLAGS] = (char)((ulonglong)ui_system_event_id >> UI_MEMORY_DEALLOC_OFFSET);
      ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_;
      ui_temp_buffer._8_5_ = 0;
      ui_temp_buffer._0_8_ = ui_system_task_id;
      ui_temp_buffer[THIRTEEN_VALUE] = (char)((ulonglong)ui_system_event_id >> UI_MEMORY_ALLOC_SIZE);
      ui_temp_buffer._13_3_ = ui_temp_buffer._13_3_;
      ui_temp_buffer._data_format_ = 0;
      ui_temp_buffer._0_8_ = ui_system_task_id;
      ui_temp_buffer[12] = (char)(ui_system_task_id >> UI_MEMORY_ALLOC_SIZE);
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
      ui_temp_buffer._8_3_ = 0;
      ui_temp_buffer._0_8_ = ui_system_task_id;
      ui_temp_buffer[ELEVEN_VALUE] = (char)((ulonglong)ui_system_event_id >> UI_CALLBACK_HANDLER_OFFSET);
      ui_temp_buffer._11_5_ = ui_temp_buffer._11_5_;
      ui_temp_buffer._offset_x_ = 0;
      ui_temp_buffer._0_8_ = ui_system_task_id;
      ui_temp_buffer[10] = (char)(ui_system_task_id >> UI_CALLBACK_HANDLER_OFFSET);
      ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
      ui_temp_buffer[8] = 0;
      ui_temp_buffer._0_8_ = ui_system_task_id;
      ui_temp_buffer[9] = (char)((ulonglong)ui_system_event_id >> UI_OFFSET_32);
      ui_temp_buffer._9_7_ = ui_temp_buffer._9_7_;
      ui_temp_buffer[8] = (char)(ui_system_task_id >> UI_OFFSET_32);
      ui_temp_buffer._0_8_ = ui_system_task_id;
      ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
      ui_temp_buffer[7] = (char)((ulonglong)ui_system_event_id >> UI_SNAPSHOT_CREATE_FLAGS);
      ui_temp_buffer[6] = (char)(ui_system_task_id >> UI_SNAPSHOT_CREATE_FLAGS);
      ui_temp_buffer[5] = (char)((ulonglong)ui_system_event_id >> UI_EVENT_FLAG_OFFSET);
      ui_temp_buffer[4] = (char)(ui_system_task_id >> UI_EVENT_FLAG_OFFSET);
      ui_temp_buffer[3] = (char)((ulonglong)ui_system_event_id >> 8);
      ui_temp_buffer[2] = (char)(ui_system_task_id >> 8);
      ui_temp_buffer[0] = (uint8_t)ui_system_task_id;
      ui_temp_buffer[1] = (char)ui_system_event_id;
      aui_event_id6 = pshufb(ui_temp_buffer,_ui_config_layout_settings);
      ui_temp_buffer = pshufb(ui_temp_buffer,_ui_config_render_settings);
      ui_temp_buffer = pmaddubsw(ui_temp_buffer,aui_event_id6);
      ui_system_event_id = *(uint64_t *)((longlong)ui_event_buffer + ui_event_type);
      ui_temporary_buffer._8_6_ = 0;
      ui_temporary_buffer._0_8_ = ui_loop_counter;
      ui_temporary_buffer[ui_component_angle_offset] = (char)(ui_loop_counter >> UI_MEMORY_DEALLOC_OFFSET);
      ui_temporary_buffer[UI_MAX_EVENT_FLAGS] = (char)((ulonglong)ui_system_event_id >> UI_MEMORY_DEALLOC_OFFSET);
      ui_system_layout_data_buffer._offset_w_ = ui_temporary_buffer._offset_w_;
      ui_system_layout_data_buffer._8_5_ = 0;
      ui_system_layout_data_buffer._0_8_ = ui_loop_counter;
      ui_system_layout_data_buffer[THIRTEEN_VALUE] = (char)((ulonglong)ui_system_event_id >> UI_MEMORY_ALLOC_SIZE);
      ui_system_shader_buffer_variable._13_3_ = ui_system_layout_data_buffer._13_3_;
      ui_system_shader_buffer_variable._data_format_ = 0;
      ui_system_shader_buffer_variable._0_8_ = ui_loop_counter;
      ui_system_shader_buffer_variable[12] = (char)(ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
      ui_task_index_array_primary._data_flags_ = ui_system_shader_buffer_variable._data_flags_;
      ui_task_index_array_primary._8_3_ = 0;
      ui_task_index_array_primary._0_8_ = ui_loop_counter;
      ui_task_index_array_primary[ELEVEN_VALUE] = (char)((ulonglong)ui_system_event_id >> UI_CALLBACK_HANDLER_OFFSET);
      ui_font_data_buffer._11_5_ = ui_task_index_array_primary._11_5_;
      ui_font_data_buffer._offset_x_ = 0;
      ui_font_data_buffer._0_8_ = ui_loop_counter;
      ui_font_data_buffer[10] = (char)(ui_loop_counter >> UI_CALLBACK_HANDLER_OFFSET);
      ui_theme_buffer_var._10_6_ = ui_font_data_buffer._10_6_;
      ui_theme_buffer_var[8] = 0;
      ui_theme_buffer_var._0_8_ = ui_loop_counter;
      ui_theme_buffer_var[9] = (char)((ulonglong)ui_system_event_id >> UI_OFFSET_32);
      ui_window_data_buffer._9_7_ = ui_theme_buffer_var._9_7_;
      ui_window_data_buffer[8] = (char)(ui_loop_counter >> UI_OFFSET_32);
      ui_window_data_buffer._0_8_ = ui_loop_counter;
      aui_event_id6._8_8_ = ui_window_data_buffer._8_8_;
      aui_event_id6[7] = (char)((ulonglong)ui_system_event_id >> UI_SNAPSHOT_CREATE_FLAGS);
      aui_event_id6[6] = (char)(ui_loop_counter >> UI_SNAPSHOT_CREATE_FLAGS);
      aui_event_id6[5] = (char)((ulonglong)ui_system_event_id >> UI_EVENT_FLAG_OFFSET);
      aui_event_id6[4] = (char)(ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
      aui_event_id6[3] = (char)((ulonglong)ui_system_event_id >> 8);
      aui_event_id6[2] = (char)(ui_temp_buffer >> 8);
      aui_event_id6[0] = (uint8_t)ui_loop_counter;
      aui_event_id6[1] = (char)ui_system_event_id;
      aui_event_id6 = pmaddubsw(aui_event_id6,ui_temp_buffer);
      ui_component = ui_temp_buffer._component_x_;
      short_value5 = ui_temp_buffer._component_x_;
      ui_temp_buffer._component_x_ = (ushort)(ui_component < short_value5) * ui_component | (ushort)(ui_component >= short_value5) * short_value5;
      ui_component = ui_temp_buffer._component_y_;
      short_value7 = ui_temp_buffer._component_y_;
      ui_temp_buffer._component_y_ = (ushort)(ui_component < short_value7) * ui_component | (ushort)(ui_component >= short_value7) * short_value7;
      ui_component = ui_temp_buffer._component_z_;
      short_value8 = ui_temp_buffer._component_z_;
      ui_temp_buffer._component_z_ = (ushort)(ui_component < short_value8) * ui_component | (ushort)(ui_component >= short_value8) * short_value8;
      ui_component = ui_temp_buffer._component_w_;
      short_value9 = ui_temp_buffer._component_w_;
      ui_temp_buffer._component_w_ = (ushort)(ui_component < short_value9) * ui_component | (ushort)(ui_component >= short_value9) * short_value9;
      ui_component = ui_temp_buffer._offset_x_;
      ui_temp_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      short_value0 = ui_temp_buffer._offset_y_;
      ui_component = ui_temp_buffer._offset_y_;
      ui_temp_buffer._offset_y_ = (ushort)(short_value0 < ui_component) * short_value0 | (ushort)(short_value0 >= ui_component) * ui_component;
      short_value1 = ui_temp_buffer._offset_z_;
      ui_component = ui_temp_buffer._offset_z_;
      ui_component = ui_temp_buffer._offset_w_;
      ui_temp_buffer._offset_z_ = (ushort)(short_value1 < ui_component) * short_value1 | (ushort)(short_value1 >= ui_component) * ui_component;
      short_value2 = ui_temp_buffer._offset_w_;
      ui_temp_buffer._offset_w_ = (ushort)(short_value2 < ui_component) * short_value2 | (ushort)(short_value2 >= ui_component) * ui_component;
      ui_temp_buffer._component_x_ = (ushort)(short_value5 < ui_component) * ui_component | (ushort)(short_value5 >= ui_component) * short_value5;
      ui_temp_buffer._component_y_ = (ushort)(short_value7 < ui_component) * ui_component | (ushort)(short_value7 >= ui_component) * short_value7;
      ui_temp_buffer._component_z_ = (ushort)(short_value8 < ui_component) * ui_component | (ushort)(short_value8 >= ui_component) * short_value8;
      ui_temp_buffer._component_w_ = (ushort)(short_value9 < ui_component) * ui_component | (ushort)(short_value9 >= ui_component) * short_value9;
      ui_temp_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_temp_buffer._offset_y_ = (ushort)(ui_component < short_value0) * short_value0 | (ushort)(ui_component >= short_value0) * ui_component;
      ui_temp_buffer._offset_z_ = (ushort)(ui_component < short_value1) * short_value1 | (ushort)(ui_component >= short_value1) * ui_component;
      ui_temp_buffer._offset_w_ = (ushort)(ui_component < short_value2) * short_value2 | (ushort)(ui_component >= short_value2) * ui_component;
      aui_event_id6 = paddsw(ui_temp_buffer,aui_event_id6);
      ui_temp_buffer = paddsw(aui_event_id6,ui_temp_buffer);
      ui_temp_buffer = paddsw(ui_temp_buffer,ui_temp_buffer);
      ui_temp_buffer = pmulhrsw(ui_temp_buffer,_ui_config_input_settings);
      ui_component = ui_temp_buffer._component_x_;
      ui_component = ui_temp_buffer._component_y_;
      ui_component = ui_temp_buffer._component_z_;
      ui_component = ui_temp_buffer._component_w_;
      ui_component = ui_temp_buffer._offset_x_;
      short_value0 = ui_temp_buffer._offset_y_;
      short_value1 = ui_temp_buffer._offset_z_;
      short_value2 = ui_temp_buffer._offset_w_;
      *ui_event_data = CONCAT17((0 < short_value2) * (short_value2 < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[ui_component_angle_offset] - (UI_COMPONENT_MAX_VALUE < short_value2),
                          CONCAT16((0 < short_value1) * (short_value1 < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[12] - (UI_COMPONENT_MAX_VALUE < short_value1),
                                   CONCAT15((0 < short_value0) * (short_value0 < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[10] -
                                            (UI_COMPONENT_MAX_VALUE < short_value0),
                                            CONCAT14((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[8] -
                                                     (UI_COMPONENT_MAX_VALUE < ui_component),
                                                     CONCAT13((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) *
                                                              ui_temp_buffer[6] - (UI_COMPONENT_MAX_VALUE < ui_component),
                                                              CONCAT12((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE)
                                                                       * ui_temp_buffer[4] - (UI_COMPONENT_MAX_VALUE < ui_component)
                                                                       ,CONCAT11((0 < ui_component) *
                                                                                 (ui_component < UI_MAX_COMPONENT_VALUE) *
                                                                                 ui_temp_buffer[2] -
                                                                                 (UI_COMPONENT_MAX_VALUE < ui_component),
                                                                                 (0 < ui_component) *
                                                                                 (ui_component < UI_MAX_COMPONENT_VALUE) *
                                                                                 ui_temp_buffer[0] -
                                                                                 (UI_COMPONENT_MAX_VALUE < ui_component))))))
                                  ));
      ui_parameter_value = ui_parameter_value + ui_parameter_value;
      ui_event_data = (uint64_t *)((longlong)ui_event_data + ui_event_flags);
      ui_event_id_fourth = ui_event_id_fourth - 1;
    } while (ui_event_id_fourth != 0);
  }
  return ui_system_return_value;
}

void ui_system_validate_layout_performance(void)

{
  uint64_t ui_system_event_id;
  ulonglong ui_system_task_id;
  ulonglong ui_temp_ulong;
  short ui_component;
  short short_value0;
  short short_value1;
  short short_value2;
  uint ui_register_eax;
  ulonglong *ui_event_data_buffer_buffer;
  uint ui_system_register;
  longlong ui_system_register_long;
  ulonglong ui_event_id_fourth;
  uint64_t *ui_system_register;
  longlong ui_system_register_long;
  short short_value5;
  short short_value7;
  short short_value8;
  short short_value9;
  short ui_component;
  uint8_t aui_event_id6 [16];
  short ui_component;
  uint8_t ui_window_data_buffer [16];
  uint8_t ui_temp_buffer [16];
  longlong inuiui_stack_var_var_00000070;
  int inuiui_stack_var_var_00000080;
  int inuiui_stack_var_var_00000088;
  uint8_t ui_theme_buffer_var [16];
  uint8_t ui_font_data_buffer [16];
  uint8_t ui_task_index_array_primary [16];
  uint8_t ui_system_shader_buffer_variable [16];
  uint8_t ui_system_layout_data_buffer [16];
  uint8_t ui_temporary_buffer [16];
  uint8_t ui_temp_buffer [16];
  
  ui_event_id_fourth = (ulonglong)ui_register_eax;
  do {
    ui_event_buffer = (ulonglong *)(((longlong)(int)ui_system_register >> 4) * ui_system_register + ui_system_register);
    if ((ui_system_register & UI_MAX_EVENT_FLAGS) == 0) {
      memcpy(ui_system_register,ui_system_register + (longlong)ui_event_buffer,(longlong)inuiui_stack_var_var_00000088);
    }
    ui_system_event_id = *(uint64_t *)(ui_system_register + (longlong)ui_event_buffer);
    ui_system_task_id = *(ulonglong *)((longlong)ui_event_buffer + ui_system_register * 2);
    ui_loop_counter = *(ulonglong *)((longlong)ui_event_buffer + ui_system_register * 4);
    ui_loop_counter = *ui_event_buffer;
    ui_temp_buffer._8_6_ = 0;
    ui_temp_buffer._0_8_ = ui_system_task_id;
    ui_temp_buffer[ui_component_angle_offset] = (char)(ui_system_task_id >> UI_MEMORY_DEALLOC_OFFSET);
    ui_temp_buffer[UI_MAX_EVENT_FLAGS] = (char)((ulonglong)ui_system_event_id >> UI_MEMORY_DEALLOC_OFFSET);
    ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_;
    ui_temp_buffer._8_5_ = 0;
    ui_temp_buffer._0_8_ = ui_system_task_id;
    ui_temp_buffer[THIRTEEN_VALUE] = (char)((ulonglong)ui_system_event_id >> UI_MEMORY_ALLOC_SIZE);
    ui_temp_buffer._13_3_ = ui_temp_buffer._13_3_;
    ui_temp_buffer._data_format_ = 0;
    ui_temp_buffer._0_8_ = ui_system_task_id;
    ui_temp_buffer[12] = (char)(ui_system_task_id >> UI_MEMORY_ALLOC_SIZE);
    ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
    ui_temp_buffer._8_3_ = 0;
    ui_temp_buffer._0_8_ = ui_system_task_id;
    ui_temp_buffer[ELEVEN_VALUE] = (char)((ulonglong)ui_system_event_id >> UI_CALLBACK_HANDLER_OFFSET);
    ui_temp_buffer._11_5_ = ui_temp_buffer._11_5_;
    ui_temp_buffer._offset_x_ = 0;
    ui_temp_buffer._0_8_ = ui_system_task_id;
    ui_temp_buffer[10] = (char)(ui_system_task_id >> UI_CALLBACK_HANDLER_OFFSET);
    ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
    ui_temp_buffer[8] = 0;
    ui_temp_buffer._0_8_ = ui_system_task_id;
    ui_temp_buffer[9] = (char)((ulonglong)ui_system_event_id >> UI_OFFSET_32);
    ui_temp_buffer._9_7_ = ui_temp_buffer._9_7_;
    ui_temp_buffer[8] = (char)(ui_system_task_id >> UI_OFFSET_32);
    ui_temp_buffer._0_8_ = ui_system_task_id;
    ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
    ui_temp_buffer[7] = (char)((ulonglong)ui_system_event_id >> UI_SNAPSHOT_CREATE_FLAGS);
    ui_temp_buffer[6] = (char)(ui_system_task_id >> UI_SNAPSHOT_CREATE_FLAGS);
    ui_temp_buffer[5] = (char)((ulonglong)ui_system_event_id >> UI_EVENT_FLAG_OFFSET);
    ui_temp_buffer[4] = (char)(ui_system_task_id >> UI_EVENT_FLAG_OFFSET);
    ui_temp_buffer[3] = (char)((ulonglong)ui_system_event_id >> 8);
    ui_temp_buffer[2] = (char)(ui_system_task_id >> 8);
    ui_temp_buffer[0] = (uint8_t)ui_system_task_id;
    ui_temp_buffer[1] = (char)ui_system_event_id;
    ui_temp_buffer = *(uint8_t (*) [16])((ulonglong)(ui_system_register & UI_MAX_EVENT_FLAGS) * UI_EVENT_FLAG_OFFSET + inuiui_stack_var_var_00000070);
    aui_event_id6 = pshufb(ui_temp_buffer,_ui_config_window_settings);
    ui_temp_buffer = pmaddubsw(ui_temp_buffer,aui_event_id6);
    ui_system_event_id = *(uint64_t *)((longlong)ui_event_buffer + ui_system_register * 5);
    ui_system_task_id = *(ulonglong *)((longlong)ui_event_buffer + ui_system_register * 6);
    ui_temp_buffer._8_6_ = 0;
    ui_temp_buffer._0_8_ = ui_loop_counter;
    ui_temp_buffer[ui_component_angle_offset] = (char)(ui_loop_counter >> UI_MEMORY_DEALLOC_OFFSET);
    ui_temp_buffer[UI_MAX_EVENT_FLAGS] = (char)((ulonglong)ui_system_event_id >> UI_MEMORY_DEALLOC_OFFSET);
    ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_;
    ui_temp_buffer._8_5_ = 0;
    ui_temp_buffer._0_8_ = ui_loop_counter;
    ui_temp_buffer[THIRTEEN_VALUE] = (char)((ulonglong)ui_system_event_id >> UI_MEMORY_ALLOC_SIZE);
    ui_temp_buffer._13_3_ = ui_temp_buffer._13_3_;
    ui_temp_buffer._data_format_ = 0;
    ui_temp_buffer._0_8_ = ui_loop_counter;
    ui_temp_buffer[12] = (char)(ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
    ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
    ui_temp_buffer._8_3_ = 0;
    ui_temp_buffer._0_8_ = ui_loop_counter;
    ui_temp_buffer[ELEVEN_VALUE] = (char)((ulonglong)ui_system_event_id >> UI_CALLBACK_HANDLER_OFFSET);
    ui_temp_buffer._11_5_ = ui_temp_buffer._11_5_;
    ui_temp_buffer._offset_x_ = 0;
    ui_temp_buffer._0_8_ = ui_loop_counter;
    ui_temp_buffer[10] = (char)(ui_loop_counter >> UI_CALLBACK_HANDLER_OFFSET);
    ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
    ui_temp_buffer[8] = 0;
    ui_temp_buffer._0_8_ = ui_loop_counter;
    ui_temp_buffer[9] = (char)((ulonglong)ui_system_event_id >> UI_OFFSET_32);
    ui_temp_buffer._9_7_ = ui_temp_buffer._9_7_;
    ui_temp_buffer[8] = (char)(ui_loop_counter >> UI_OFFSET_32);
    ui_temp_buffer._0_8_ = ui_loop_counter;
    ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
    ui_temp_buffer[7] = (char)((ulonglong)ui_system_event_id >> UI_SNAPSHOT_CREATE_FLAGS);
    ui_temp_buffer[6] = (char)(ui_loop_counter >> UI_SNAPSHOT_CREATE_FLAGS);
    ui_temp_buffer[5] = (char)((ulonglong)ui_system_event_id >> UI_EVENT_FLAG_OFFSET);
    ui_temp_buffer[4] = (char)(ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
    ui_temp_buffer[3] = (char)((ulonglong)ui_system_event_id >> 8);
    ui_temp_buffer[2] = (char)(ui_temp_buffer >> 8);
    ui_temp_buffer[0] = (uint8_t)ui_loop_counter;
    ui_temp_buffer[1] = (char)ui_system_event_id;
    aui_event_id6 = pshufb(ui_temp_buffer,_ui_config_widget_settings);
    ui_temp_buffer = pmaddubsw(ui_temp_buffer,aui_event_id6);
    ui_system_event_id = *(uint64_t *)(ui_system_register * 7 + (longlong)ui_event_buffer);
    ui_temp_buffer._8_6_ = 0;
    ui_temp_buffer._0_8_ = ui_system_task_id;
    ui_temp_buffer[ui_component_angle_offset] = (char)(ui_system_task_id >> UI_MEMORY_DEALLOC_OFFSET);
    ui_temp_buffer[UI_MAX_EVENT_FLAGS] = (char)((ulonglong)ui_system_event_id >> UI_MEMORY_DEALLOC_OFFSET);
    ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_;
    ui_temp_buffer._8_5_ = 0;
    ui_temp_buffer._0_8_ = ui_system_task_id;
    ui_temp_buffer[THIRTEEN_VALUE] = (char)((ulonglong)ui_system_event_id >> UI_MEMORY_ALLOC_SIZE);
    ui_temp_buffer._13_3_ = ui_temp_buffer._13_3_;
    ui_temp_buffer._data_format_ = 0;
    ui_temp_buffer._0_8_ = ui_system_task_id;
    ui_temp_buffer[12] = (char)(ui_system_task_id >> UI_MEMORY_ALLOC_SIZE);
    ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
    ui_temp_buffer._8_3_ = 0;
    ui_temp_buffer._0_8_ = ui_system_task_id;
    ui_temp_buffer[ELEVEN_VALUE] = (char)((ulonglong)ui_system_event_id >> UI_CALLBACK_HANDLER_OFFSET);
    ui_temp_buffer._11_5_ = ui_temp_buffer._11_5_;
    ui_temp_buffer._offset_x_ = 0;
    ui_temp_buffer._0_8_ = ui_system_task_id;
    ui_temp_buffer[10] = (char)(ui_system_task_id >> UI_CALLBACK_HANDLER_OFFSET);
    ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
    ui_temp_buffer[8] = 0;
    ui_temp_buffer._0_8_ = ui_system_task_id;
    ui_temp_buffer[9] = (char)((ulonglong)ui_system_event_id >> UI_OFFSET_32);
    ui_temp_buffer._9_7_ = ui_temp_buffer._9_7_;
    ui_temp_buffer[8] = (char)(ui_system_task_id >> UI_OFFSET_32);
    ui_temp_buffer._0_8_ = ui_system_task_id;
    ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
    ui_temp_buffer[7] = (char)((ulonglong)ui_system_event_id >> UI_SNAPSHOT_CREATE_FLAGS);
    ui_temp_buffer[6] = (char)(ui_system_task_id >> UI_SNAPSHOT_CREATE_FLAGS);
    ui_temp_buffer[5] = (char)((ulonglong)ui_system_event_id >> UI_EVENT_FLAG_OFFSET);
    ui_temp_buffer[4] = (char)(ui_system_task_id >> UI_EVENT_FLAG_OFFSET);
    ui_temp_buffer[3] = (char)((ulonglong)ui_system_event_id >> 8);
    ui_temp_buffer[2] = (char)(ui_system_task_id >> 8);
    ui_temp_buffer[0] = (uint8_t)ui_system_task_id;
    ui_temp_buffer[1] = (char)ui_system_event_id;
    aui_event_id6 = pshufb(ui_temp_buffer,_ui_config_layout_settings);
    ui_temp_buffer = pshufb(ui_temp_buffer,_ui_config_render_settings);
    ui_temp_buffer = pmaddubsw(ui_temp_buffer,aui_event_id6);
    ui_system_event_id = *(uint64_t *)((longlong)ui_event_buffer + ui_system_register);
    ui_temporary_buffer._8_6_ = 0;
    ui_temporary_buffer._0_8_ = ui_loop_counter;
    ui_temporary_buffer[ui_component_angle_offset] = (char)(ui_loop_counter >> UI_MEMORY_DEALLOC_OFFSET);
    ui_temporary_buffer[UI_MAX_EVENT_FLAGS] = (char)((ulonglong)ui_system_event_id >> UI_MEMORY_DEALLOC_OFFSET);
    ui_system_layout_data_buffer._offset_w_ = ui_temporary_buffer._offset_w_;
    ui_system_layout_data_buffer._8_5_ = 0;
    ui_system_layout_data_buffer._0_8_ = ui_loop_counter;
    ui_system_layout_data_buffer[THIRTEEN_VALUE] = (char)((ulonglong)ui_system_event_id >> UI_MEMORY_ALLOC_SIZE);
    ui_system_shader_buffer_variable._13_3_ = ui_system_layout_data_buffer._13_3_;
    ui_system_shader_buffer_variable._data_format_ = 0;
    ui_system_shader_buffer_variable._0_8_ = ui_loop_counter;
    ui_system_shader_buffer_variable[12] = (char)(ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
    ui_task_index_array_primary._data_flags_ = ui_system_shader_buffer_variable._data_flags_;
    ui_task_index_array_primary._8_3_ = 0;
    ui_task_index_array_primary._0_8_ = ui_loop_counter;
    ui_task_index_array_primary[ELEVEN_VALUE] = (char)((ulonglong)ui_system_event_id >> UI_CALLBACK_HANDLER_OFFSET);
    ui_font_data_buffer._11_5_ = ui_task_index_array_primary._11_5_;
    ui_font_data_buffer._offset_x_ = 0;
    ui_font_data_buffer._0_8_ = ui_loop_counter;
    ui_font_data_buffer[10] = (char)(ui_loop_counter >> UI_CALLBACK_HANDLER_OFFSET);
    ui_theme_buffer_var._10_6_ = ui_font_data_buffer._10_6_;
    ui_theme_buffer_var[8] = 0;
    ui_theme_buffer_var._0_8_ = ui_loop_counter;
    ui_theme_buffer_var[9] = (char)((ulonglong)ui_system_event_id >> UI_OFFSET_32);
    ui_window_data_buffer._9_7_ = ui_theme_buffer_var._9_7_;
    ui_window_data_buffer[8] = (char)(ui_loop_counter >> UI_OFFSET_32);
    ui_window_data_buffer._0_8_ = ui_loop_counter;
    aui_event_id6._8_8_ = ui_window_data_buffer._8_8_;
    aui_event_id6[7] = (char)((ulonglong)ui_system_event_id >> UI_SNAPSHOT_CREATE_FLAGS);
    aui_event_id6[6] = (char)(ui_loop_counter >> UI_SNAPSHOT_CREATE_FLAGS);
    aui_event_id6[5] = (char)((ulonglong)ui_system_event_id >> UI_EVENT_FLAG_OFFSET);
    aui_event_id6[4] = (char)(ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
    aui_event_id6[3] = (char)((ulonglong)ui_system_event_id >> 8);
    aui_event_id6[2] = (char)(ui_temp_buffer >> 8);
    aui_event_id6[0] = (uint8_t)ui_loop_counter;
    aui_event_id6[1] = (char)ui_system_event_id;
    aui_event_id6 = pmaddubsw(aui_event_id6,ui_temp_buffer);
    ui_component = ui_temp_buffer._component_x_;
    short_value5 = ui_temp_buffer._component_x_;
    ui_temp_buffer._component_x_ = (ushort)(ui_component < short_value5) * ui_component | (ushort)(ui_component >= short_value5) * short_value5;
    ui_component = ui_temp_buffer._component_y_;
    short_value7 = ui_temp_buffer._component_y_;
    ui_temp_buffer._component_y_ = (ushort)(ui_component < short_value7) * ui_component | (ushort)(ui_component >= short_value7) * short_value7;
    ui_component = ui_temp_buffer._component_z_;
    short_value8 = ui_temp_buffer._component_z_;
    ui_temp_buffer._component_z_ = (ushort)(ui_component < short_value8) * ui_component | (ushort)(ui_component >= short_value8) * short_value8;
    ui_component = ui_temp_buffer._component_w_;
    short_value9 = ui_temp_buffer._component_w_;
    ui_temp_buffer._component_w_ = (ushort)(ui_component < short_value9) * ui_component | (ushort)(ui_component >= short_value9) * short_value9;
    ui_component = ui_temp_buffer._offset_x_;
    ui_temp_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
    short_value0 = ui_temp_buffer._offset_y_;
    ui_component = ui_temp_buffer._offset_y_;
    ui_temp_buffer._offset_y_ = (ushort)(short_value0 < ui_component) * short_value0 | (ushort)(short_value0 >= ui_component) * ui_component;
    short_value1 = ui_temp_buffer._offset_z_;
    ui_component = ui_temp_buffer._offset_z_;
    ui_component = ui_temp_buffer._offset_w_;
    ui_temp_buffer._offset_z_ = (ushort)(short_value1 < ui_component) * short_value1 | (ushort)(short_value1 >= ui_component) * ui_component;
    short_value2 = ui_temp_buffer._offset_w_;
    ui_temp_buffer._offset_w_ = (ushort)(short_value2 < ui_component) * short_value2 | (ushort)(short_value2 >= ui_component) * ui_component;
    ui_temp_buffer._component_x_ = (ushort)(short_value5 < ui_component) * ui_component | (ushort)(short_value5 >= ui_component) * short_value5;
    ui_temp_buffer._component_y_ = (ushort)(short_value7 < ui_component) * ui_component | (ushort)(short_value7 >= ui_component) * short_value7;
    ui_temp_buffer._component_z_ = (ushort)(short_value8 < ui_component) * ui_component | (ushort)(short_value8 >= ui_component) * short_value8;
    ui_temp_buffer._component_w_ = (ushort)(short_value9 < ui_component) * ui_component | (ushort)(short_value9 >= ui_component) * short_value9;
    ui_temp_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
    ui_temp_buffer._offset_y_ = (ushort)(ui_component < short_value0) * short_value0 | (ushort)(ui_component >= short_value0) * ui_component;
    ui_temp_buffer._offset_z_ = (ushort)(ui_component < short_value1) * short_value1 | (ushort)(ui_component >= short_value1) * ui_component;
    ui_temp_buffer._offset_w_ = (ushort)(ui_component < short_value2) * short_value2 | (ushort)(ui_component >= short_value2) * ui_component;
    aui_event_id6 = paddsw(ui_temp_buffer,aui_event_id6);
    ui_temp_buffer = paddsw(aui_event_id6,ui_temp_buffer);
    ui_temp_buffer = paddsw(ui_temp_buffer,ui_temp_buffer);
    ui_temp_buffer = pmulhrsw(ui_temp_buffer,_ui_config_input_settings);
    ui_component = ui_temp_buffer._component_x_;
    ui_component = ui_temp_buffer._component_y_;
    ui_component = ui_temp_buffer._component_z_;
    ui_component = ui_temp_buffer._component_w_;
    ui_component = ui_temp_buffer._offset_x_;
    short_value0 = ui_temp_buffer._offset_y_;
    short_value1 = ui_temp_buffer._offset_z_;
    short_value2 = ui_temp_buffer._offset_w_;
    *ui_system_register = CONCAT17((0 < short_value2) * (short_value2 < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[ui_component_angle_offset] - (UI_COMPONENT_MAX_VALUE < short_value2),
                          CONCAT16((0 < short_value1) * (short_value1 < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[12] - (UI_COMPONENT_MAX_VALUE < short_value1),
                                   CONCAT15((0 < short_value0) * (short_value0 < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[10] -
                                            (UI_COMPONENT_MAX_VALUE < short_value0),
                                            CONCAT14((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_temp_buffer[8] -
                                                     (UI_COMPONENT_MAX_VALUE < ui_component),
                                                     CONCAT13((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) *
                                                              ui_temp_buffer[6] - (UI_COMPONENT_MAX_VALUE < ui_component),
                                                              CONCAT12((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE)
                                                                       * ui_temp_buffer[4] - (UI_COMPONENT_MAX_VALUE < ui_component)
                                                                       ,CONCAT11((0 < ui_component) *
                                                                                 (ui_component < UI_MAX_COMPONENT_VALUE) *
                                                                                 ui_temp_buffer[2] -
                                                                                 (UI_COMPONENT_MAX_VALUE < ui_component),
                                                                                 (0 < ui_component) *
                                                                                 (ui_component < UI_MAX_COMPONENT_VALUE) *
                                                                                 ui_temp_buffer[0] -
                                                                                 (UI_COMPONENT_MAX_VALUE < ui_component))))))
                                  ));
    ui_system_register = ui_system_register + inuiui_stack_var_var_00000080;
    ui_system_register = (uint64_t *)((longlong)ui_system_register + ui_system_register);
    ui_event_id_fourth = ui_event_id_fourth - 1;
  } while (ui_event_id_fourth != 0);
  return ui_system_return_value;
}

void ui_system_optimize_layout_rendering(void)

{
  return ui_system_return_value;
}

void ui_system_show_dialog(longlong ui_callback,uint64_t ui_event_type,longlong ui_event_data,uint64_t ui_event_flags,
                  short *ui_parameter_value)

{
  ulonglong ui_system_event_id;
  uint ui_stack_data_offset_48;
  uint32_t ui_stack_event_parameter;
  
  if (((*ui_parameter_value == 0) && (ui_parameter_value[1] == 0)) && (ui_parameter_value[2] == 0)) {
    if (UI_MAX_EVENT_FLAGS < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 4);
      ui_stack_data_offset_48 = ui_stack_data_offset_48 + (ui_stack_data_offset_48 >> 4) * -UI_EVENT_FLAG_OFFSET;
      do {
        ui_system_process_event_callback(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + UI_EVENT_FLAG_OFFSET;
        ui_event_data = ui_event_data + UI_EVENT_FLAG_OFFSET;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (7 < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 3);
      ui_stack_data_offset_48 = ui_stack_data_offset_48 + (ui_stack_data_offset_48 >> 3) * -8;
      do {
        ui_system_validate_event_callback(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + 8;
        ui_event_data = ui_event_data + 8;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (3 < (int)ui_stack_data_offset_48) {
      ui_callback = ui_callback - ui_event_data;
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 2);
      do {
        ui_system_handle_event_callback(ui_callback + ui_event_data,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_event_data = ui_event_data + 4;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
  }
  else {
    if (UI_MAX_EVENT_FLAGS < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 4);
      ui_stack_data_offset_48 = ui_stack_data_offset_48 + (ui_stack_data_offset_48 >> 4) * -UI_EVENT_FLAG_OFFSET;
      do {
        ui_system_execute_widget_callback(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + UI_EVENT_FLAG_OFFSET;
        ui_event_data = ui_event_data + UI_EVENT_FLAG_OFFSET;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (7 < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 3);
      ui_stack_data_offset_48 = ui_stack_data_offset_48 + (ui_stack_data_offset_48 >> 3) * -8;
      do {
        ui_system_process_widget_event(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + 8;
        ui_event_data = ui_event_data + 8;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (3 < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 2);
      do {
        ui_system_handle_widget_event(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + 4;
        ui_event_data = ui_event_data + 4;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
  }
  return ui_system_return_value;
}

void ui_system_hide_dialog(void)

{
  InitializeUIRenderer();
}

void ui_system_create_button(longlong ui_callback,longlong ui_event_type,longlong ui_event_data,uint64_t ui_event_flags,
                  uint64_t ui_parameter_value,uint64_t ui_parameter_value,short *ui_parameter_value,uint64_t ui_parameter_value,
                  uint ui_parameter_value,uint32_t ui_callback_primary)

{
  ulonglong ui_system_event_id;
  longlong ui_event_index;
  
  if (((*ui_parameter_value == 0) && (ui_parameter_value[1] == 0)) && (ui_parameter_value[2] == 0)) {
    if (UI_MAX_EVENT_FLAGS < (int)ui_parameter_value) {
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 4);
      ui_parameter_value = ui_parameter_value + (ui_parameter_value >> 4) * -UI_EVENT_FLAG_OFFSET;
      do {
        ui_system_manage_event_callbacks(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_callback = ui_callback + UI_EVENT_FLAG_OFFSET;
        ui_event_data = ui_event_data + UI_EVENT_FLAG_OFFSET;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (7 < (int)ui_parameter_value) {
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 3);
      ui_parameter_value = ui_parameter_value + (ui_parameter_value >> 3) * -8;
      do {
        ui_system_process_event_callbacks(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_callback = ui_callback + 8;
        ui_event_data = ui_event_data + 8;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (3 < (int)ui_parameter_value) {
      ui_callback = ui_callback - ui_event_data;
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 2);
      do {
        ui_system_handle_event_callbacks(ui_callback + ui_event_data,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_event_data = ui_event_data + 4;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
  }
  else {
    if (UI_MAX_EVENT_FLAGS < (int)ui_parameter_value) {
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 4);
      ui_event_index = ui_callback + ui_event_type * -3;
      ui_parameter_value = ui_parameter_value + (ui_parameter_value >> 4) * -UI_EVENT_FLAG_OFFSET;
      ui_callback = ui_callback + ui_system_event_id * UI_EVENT_FLAG_OFFSET;
      do {
        ui_system_process_event_batch_1(ui_event_index,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_event_index = ui_event_index + UI_EVENT_FLAG_OFFSET;
        ui_event_data = ui_event_data + UI_EVENT_FLAG_OFFSET;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (7 < (int)ui_parameter_value) {
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 3);
      ui_event_index = ui_callback + ui_event_type * -3;
      ui_callback = ui_callback + ui_system_event_id * 8;
      ui_parameter_value = ui_parameter_value + (ui_parameter_value >> 3) * -8;
      do {
        ui_system_process_event_batch_2(ui_event_index,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_event_index = ui_event_index + 8;
        ui_event_data = ui_event_data + 8;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (3 < (int)ui_parameter_value) {
      ui_callback = ui_callback + ui_event_type * -3;
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 2);
      do {
        ui_system_process_event_batch_3(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_callback = ui_callback + 4;
        ui_event_data = ui_event_data + 4;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
  }
  return ui_system_return_value;
}

void ui_system_create_textbox(longlong ui_callback,uint64_t ui_event_type,longlong ui_event_data,uint64_t ui_event_flags,
                  short *ui_parameter_value)

{
  ulonglong ui_system_event_id;
  uint ui_stack_data_offset_48;
  uint32_t ui_stack_event_parameter;
  
  if (((*ui_parameter_value == 0) && (ui_parameter_value[1] == 0)) && (ui_parameter_value[2] == 0)) {
    if (UI_MAX_EVENT_FLAGS < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 4);
      ui_stack_data_offset_48 = ui_stack_data_offset_48 + (ui_stack_data_offset_48 >> 4) * -UI_EVENT_FLAG_OFFSET;
      do {
        ui_system_event_handler_1426(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + UI_EVENT_FLAG_OFFSET;
        ui_event_data = ui_event_data + UI_EVENT_FLAG_OFFSET;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (7 < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 3);
      ui_stack_data_offset_48 = ui_stack_data_offset_48 + (ui_stack_data_offset_48 >> 3) * -8;
      do {
        ui_system_event_handler_1378(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + 8;
        ui_event_data = ui_event_data + 8;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (3 < (int)ui_stack_data_offset_48) {
      ui_callback = ui_callback - ui_event_data;
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 2);
      do {
        ui_system_event_handler_12ec(ui_callback + ui_event_data,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_event_data = ui_event_data + 4;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
  }
  else {
    if (UI_MAX_EVENT_FLAGS < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 4);
      ui_stack_data_offset_48 = ui_stack_data_offset_48 + (ui_stack_data_offset_48 >> 4) * -UI_EVENT_FLAG_OFFSET;
      do {
        ui_system_process_widget_event(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + UI_EVENT_FLAG_OFFSET;
        ui_event_data = ui_event_data + UI_EVENT_FLAG_OFFSET;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (7 < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 3);
      ui_stack_data_offset_48 = ui_stack_data_offset_48 + (ui_stack_data_offset_48 >> 3) * -8;
      do {
        ui_system_handle_user_input(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + 8;
        ui_event_data = ui_event_data + 8;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (3 < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 2);
      do {
        ui_system_render_widget(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + 4;
        ui_event_data = ui_event_data + 4;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
  }
  return ui_system_return_value;
}

void ui_system_create_label(void)

{
  InitializeUIRenderer();
}

void ui_system_create_panel(longlong ui_callback,longlong ui_event_type,longlong ui_event_data,uint64_t ui_event_flags,
                  uint64_t ui_parameter_value,uint64_t ui_parameter_value,short *ui_parameter_value,uint64_t ui_parameter_value,
                  uint ui_parameter_value,uint32_t ui_callback_primary)

{
  ulonglong ui_system_event_id;
  longlong ui_event_index;
  
  if (((*ui_parameter_value == 0) && (ui_parameter_value[1] == 0)) && (ui_parameter_value[2] == 0)) {
    if (UI_MAX_EVENT_FLAGS < (int)ui_parameter_value) {
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 4);
      ui_parameter_value = ui_parameter_value + (ui_parameter_value >> 4) * -UI_EVENT_FLAG_OFFSET;
      do {
        ui_system_event_handler_1022(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_callback = ui_callback + UI_EVENT_FLAG_OFFSET;
        ui_event_data = ui_event_data + UI_EVENT_FLAG_OFFSET;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (7 < (int)ui_parameter_value) {
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 3);
      ui_parameter_value = ui_parameter_value + (ui_parameter_value >> 3) * -8;
      do {
        ui_system_utility_function_0f78(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_callback = ui_callback + 8;
        ui_event_data = ui_event_data + 8;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (3 < (int)ui_parameter_value) {
      ui_callback = ui_callback - ui_event_data;
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 2);
      do {
        ui_system_utility_function_0ef0(ui_callback + ui_event_data,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_event_data = ui_event_data + 4;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
  }
  else {
    if (UI_MAX_EVENT_FLAGS < (int)ui_parameter_value) {
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 4);
      ui_event_index = ui_callback + ui_event_type * -3;
      ui_parameter_value = ui_parameter_value + (ui_parameter_value >> 4) * -UI_EVENT_FLAG_OFFSET;
      ui_callback = ui_callback + ui_system_event_id * UI_EVENT_FLAG_OFFSET;
      do {
        ui_system_utility_function_0080(ui_event_index,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_event_index = ui_event_index + UI_EVENT_FLAG_OFFSET;
        ui_event_data = ui_event_data + UI_EVENT_FLAG_OFFSET;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (7 < (int)ui_parameter_value) {
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 3);
      ui_event_index = ui_callback + ui_event_type * -3;
      ui_callback = ui_callback + ui_system_event_id * 8;
      ui_parameter_value = ui_parameter_value + (ui_parameter_value >> 3) * -8;
      do {
        ui_system_utility_function_04b0(ui_event_index,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_event_index = ui_event_index + 8;
        ui_event_data = ui_event_data + 8;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (3 < (int)ui_parameter_value) {
      ui_callback = ui_callback + ui_event_type * -3;
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 2);
      do {
        ui_system_utility_function_09d0(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_callback = ui_callback + 4;
        ui_event_data = ui_event_data + 4;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
  }
  return ui_system_return_value;
}

void ui_system_process_render_command(longlong ui_callback,longlong ui_event_type,uint32_t *ui_event_data,longlong ui_event_flags,
                  uint ui_parameter_value,uint8_t (*ui_parameter_value) [16])

{
  short short_value;
  short ui_component;
  uint8_t ui_temp_buffer [16];
  uint8_t ui_event_buffer_var [16];
  uint8_t aui_event_id1 [16];
  uint8_t (*paui_event_id_secondary) [16];
  ulonglong ui_task_identifier;
  short short_value4;
  short short_value8;
  short short_value9;
  short ui_component;
  uint8_t in_XMM0 [16];
  uint8_t aui_event_id_fifth [16];
  uint8_t aui_event_id6 [16];
  uint8_t aui_event_id7 [16];
  uint8_t ui_render_buffer_var [16];
  uint8_t ui_input_data_buffer [16];
  uint8_t ui_widget_data_buffer [16];
  uint8_t in_XMM5 [16];
  uint8_t ui_system_register [16];
  
  aui_event_id1 = _ui_config_theme_settings;
  ui_event_buffer_var = _ui_config_texture_settings;
  ui_temp_buffer = _ui_config_font_settings;
  ui_render_buffer_var = packsswb(*ui_parameter_value,*ui_parameter_value);
  aui_event_id_fifth = pshuflw(in_XMM0,ui_render_buffer_var,0);
  ui_render_buffer_var = pshuflw(ui_render_buffer_var,ui_render_buffer_var,0xaa);
  ui_render_buffer_var = pshufhw(ui_system_register,ui_render_buffer_var,UI_COMPONENT_MAX_VALUE);
  aui_event_id_fifth = pshufhw(in_XMM5,aui_event_id_fifth,0x55);
  if (ui_parameter_value != 0) {
    paui_event_id_secondary = (uint8_t (*) [16])(ui_callback + -3);
    ui_task_identifier = (ulonglong)ui_parameter_value;
    do {
      aui_event_id7 = *paui_event_id_secondary;
      paui_event_id_secondary = (uint8_t (*) [16])(*paui_event_id_secondary + ui_event_type);
      aui_event_id6 = pshufb(aui_event_id7,ui_temp_buffer);
      ui_input_data_buffer = pshufb(aui_event_id7,ui_event_buffer_var);
      aui_event_id7 = pmaddubsw(aui_event_id6,aui_event_id_fifth);
      ui_widget_data_buffer = pmaddubsw(ui_input_data_buffer,ui_render_buffer_var);
      ui_input_data_buffer = paddsw(ui_widget_data_buffer >> UI_BUFFER_SIZE_64,aui_event_id7);
      short_value = ui_widget_data_buffer._component_x_;
      short_value4 = aui_event_id7._offset_x_;
      aui_event_id6._component_x_ = (ushort)(short_value < short_value4) * short_value | (ushort)(short_value >= short_value4) * short_value4;
      ui_component = ui_widget_data_buffer._component_y_;
      short_value8 = aui_event_id7._offset_y_;
      aui_event_id6._component_y_ = (ushort)(ui_component < short_value8) * ui_component | (ushort)(ui_component >= short_value8) * short_value8;
      ui_component = ui_widget_data_buffer._component_z_;
      short_value9 = aui_event_id7._offset_z_;
      aui_event_id6._component_z_ = (ushort)(ui_component < short_value9) * ui_component | (ushort)(ui_component >= short_value9) * short_value9;
      ui_component = ui_widget_data_buffer._component_w_;
      ui_component = aui_event_id7._offset_w_;
      aui_event_id6._component_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_component = ui_widget_data_buffer._offset_x_;
      aui_event_id6._offset_x_ = (ushort)(ui_component < 0) * ui_component;
      ui_component = ui_widget_data_buffer._offset_y_;
      aui_event_id6._offset_y_ = (ushort)(ui_component < 0) * ui_component;
      ui_component = ui_widget_data_buffer._offset_z_;
      aui_event_id6._offset_z_ = (ushort)(ui_component < 0) * ui_component;
      ui_component = ui_widget_data_buffer._offset_w_;
      aui_event_id6._offset_w_ = (ushort)(ui_component < 0) * ui_component;
      aui_event_id7._component_x_ = (ushort)(short_value4 < short_value) * short_value | (ushort)(short_value4 >= short_value) * short_value4;
      aui_event_id7._component_y_ = (ushort)(short_value8 < ui_component) * ui_component | (ushort)(short_value8 >= ui_component) * short_value8;
      aui_event_id7._component_z_ = (ushort)(short_value9 < ui_component) * ui_component | (ushort)(short_value9 >= ui_component) * short_value9;
      aui_event_id7._component_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      aui_event_id7._offset_x_ = (ushort)(0 < ui_component) * ui_component;
      aui_event_id7._offset_y_ = (ushort)(0 < ui_component) * ui_component;
      aui_event_id7._offset_z_ = (ushort)(0 < ui_component) * ui_component;
      aui_event_id7._offset_w_ = (ushort)(0 < ui_component) * ui_component;
      aui_event_id6 = paddsw(ui_input_data_buffer,aui_event_id6);
      aui_event_id7 = paddsw(aui_event_id6,aui_event_id7);
      aui_event_id7 = paddsw(aui_event_id7,aui_event_id1);
      aui_event_id7 = psraw(aui_event_id7,7);
      short_value = aui_event_id7._component_x_;
      ui_component = aui_event_id7._component_y_;
      ui_component = aui_event_id7._component_z_;
      ui_component = aui_event_id7._component_w_;
      *ui_event_data = CONCAT13((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * aui_event_id7[6] - (UI_COMPONENT_MAX_VALUE < ui_component),
                          CONCAT12((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * aui_event_id7[4] - (UI_COMPONENT_MAX_VALUE < ui_component),
                                   CONCAT11((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * aui_event_id7[2] -
                                            (UI_COMPONENT_MAX_VALUE < ui_component),
                                            (0 < short_value) * (short_value < UI_MAX_COMPONENT_VALUE) * aui_event_id7[0] -
                                            (UI_COMPONENT_MAX_VALUE < short_value))));
      ui_event_data = (uint32_t *)((longlong)ui_event_data + ui_event_flags);
      ui_task_identifier = ui_task_identifier - 1;
    } while (ui_task_identifier != 0);
  }
  return ui_system_return_value;
}

void ui_system_handle_render_callback(longlong ui_callback,longlong ui_event_type,uint64_t *ui_event_data,longlong ui_event_flags,
                  uint ui_parameter_value,uint8_t (*ui_parameter_value) [16])

{
  short short_value;
  short ui_component;
  uint8_t ui_temp_buffer [16];
  uint8_t ui_event_buffer_var [16];
  uint8_t aui_event_id1 [16];
  uint8_t aui_event_id_secondary [16];
  uint8_t aui_task_identifier [16];
  uint8_t (*paui_event_id_fourth) [16];
  ulonglong ui_event_id_fifth;
  short short_value6;
  short short_value7;
  short short_value8;
  short short_value9;
  short ui_component;
  uint8_t ui_window_data_buffer [16];
  uint8_t ui_theme_buffer_var [16];
  uint8_t ui_font_data_buffer [16];
  uint8_t ui_task_index_array_primary [16];
  uint8_t ui_system_shader_buffer_variable [16];
  uint8_t ui_system_layout_data_buffer [16];
  uint8_t ui_temporary_buffer [16];
  uint8_t ui_temp_buffer [16];
  
  aui_task_identifier = _ui_config_theme_settings;
  aui_event_id_secondary = _ui_config_tooltip_settings;
  aui_event_id1 = _ui_config_focus_settings;
  ui_event_buffer_var = _ui_config_event_settings;
  ui_temp_buffer = _ui_config_animation_settings;
  ui_system_shader_buffer_variable = packsswb(*ui_parameter_value,*ui_parameter_value);
  ui_system_layout_data_buffer = pshufb(ui_system_shader_buffer_variable,_ui_config_input_settings);
  ui_temporary_buffer = pshufb(ui_system_shader_buffer_variable,_ui_config_drag_settings);
  ui_temp_buffer = pshufb(ui_system_shader_buffer_variable,_ui_config_drop_settings);
  ui_system_shader_buffer_variable = pshufb(ui_system_shader_buffer_variable,_ui_config_clipboard_settings);
  if (ui_parameter_value != 0) {
    paui_event_id_fourth = (uint8_t (*) [16])(ui_callback + -3);
    ui_event_id_fifth = (ulonglong)ui_parameter_value;
    do {
      ui_window_data_buffer = *paui_event_id_fourth;
      paui_event_id_fourth = (uint8_t (*) [16])(*paui_event_id_fourth + ui_event_type);
      ui_font_data_buffer = pshufb(ui_window_data_buffer,aui_event_id_secondary);
      ui_task_index_array_primary = pmaddubsw(ui_font_data_buffer,ui_system_shader_buffer_variable);
      ui_font_data_buffer = pshufb(ui_window_data_buffer,ui_temp_buffer);
      ui_theme_buffer_var = pshufb(ui_window_data_buffer,ui_event_buffer_var);
      ui_font_data_buffer = pmaddubsw(ui_font_data_buffer,ui_system_layout_data_buffer);
      ui_theme_buffer_var = pmaddubsw(ui_theme_buffer_var,ui_temporary_buffer);
      ui_window_data_buffer = pshufb(ui_window_data_buffer,aui_event_id1);
      ui_task_index_array_primary = paddsw(ui_task_index_array_primary,ui_font_data_buffer);
      ui_font_data_buffer = pmaddubsw(ui_window_data_buffer,ui_temp_buffer);
      short_value = ui_font_data_buffer._component_x_;
      short_value6 = ui_theme_buffer_var._component_x_;
      ui_window_data_buffer._component_x_ = (ushort)(short_value < short_value6) * short_value | (ushort)(short_value >= short_value6) * short_value6;
      ui_component = ui_font_data_buffer._component_y_;
      short_value7 = ui_theme_buffer_var._component_y_;
      ui_window_data_buffer._component_y_ = (ushort)(ui_component < short_value7) * ui_component | (ushort)(ui_component >= short_value7) * short_value7;
      ui_component = ui_font_data_buffer._component_z_;
      short_value8 = ui_theme_buffer_var._component_z_;
      ui_window_data_buffer._component_z_ = (ushort)(ui_component < short_value8) * ui_component | (ushort)(ui_component >= short_value8) * short_value8;
      ui_component = ui_font_data_buffer._component_w_;
      short_value9 = ui_theme_buffer_var._component_w_;
      ui_window_data_buffer._component_w_ = (ushort)(ui_component < short_value9) * ui_component | (ushort)(ui_component >= short_value9) * short_value9;
      ui_component = ui_font_data_buffer._offset_x_;
      ui_component = ui_theme_buffer_var._offset_x_;
      ui_window_data_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_component = ui_font_data_buffer._offset_y_;
      ui_component = ui_theme_buffer_var._offset_y_;
      ui_window_data_buffer._offset_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_component = ui_font_data_buffer._offset_z_;
      ui_component = ui_theme_buffer_var._offset_z_;
      ui_component = ui_theme_buffer_var._offset_w_;
      ui_window_data_buffer._offset_z_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_component = ui_font_data_buffer._offset_w_;
      ui_window_data_buffer._offset_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_font_data_buffer._component_x_ = (ushort)(short_value6 < short_value) * short_value | (ushort)(short_value6 >= short_value) * short_value6;
      ui_font_data_buffer._component_y_ = (ushort)(short_value7 < ui_component) * ui_component | (ushort)(short_value7 >= ui_component) * short_value7;
      ui_font_data_buffer._component_z_ = (ushort)(short_value8 < ui_component) * ui_component | (ushort)(short_value8 >= ui_component) * short_value8;
      ui_font_data_buffer._component_w_ = (ushort)(short_value9 < ui_component) * ui_component | (ushort)(short_value9 >= ui_component) * short_value9;
      ui_font_data_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_font_data_buffer._offset_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_font_data_buffer._offset_z_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_font_data_buffer._offset_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_window_data_buffer = paddsw(ui_task_index_array_primary,ui_window_data_buffer);
      ui_window_data_buffer = paddsw(ui_window_data_buffer,ui_font_data_buffer);
      ui_window_data_buffer = paddsw(ui_window_data_buffer,aui_task_identifier);
      ui_window_data_buffer = psraw(ui_window_data_buffer,7);
      short_value = ui_window_data_buffer._component_x_;
      ui_component = ui_window_data_buffer._component_y_;
      ui_component = ui_window_data_buffer._component_z_;
      ui_component = ui_window_data_buffer._component_w_;
      ui_component = ui_window_data_buffer._offset_x_;
      ui_component = ui_window_data_buffer._offset_y_;
      ui_component = ui_window_data_buffer._offset_z_;
      ui_component = ui_window_data_buffer._offset_w_;
      *ui_event_data = CONCAT17((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_window_data_buffer[ui_component_angle_offset] - (UI_COMPONENT_MAX_VALUE < ui_component),
                          CONCAT16((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_window_data_buffer[12] - (UI_COMPONENT_MAX_VALUE < ui_component),
                                   CONCAT15((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_window_data_buffer[10] -
                                            (UI_COMPONENT_MAX_VALUE < ui_component),
                                            CONCAT14((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_window_data_buffer[8] -
                                                     (UI_COMPONENT_MAX_VALUE < ui_component),
                                                     CONCAT13((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) *
                                                              ui_window_data_buffer[6] - (UI_COMPONENT_MAX_VALUE < ui_component),
                                                              CONCAT12((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE)
                                                                       * ui_window_data_buffer[4] - (UI_COMPONENT_MAX_VALUE < ui_component)
                                                                       ,CONCAT11((0 < ui_component) *
                                                                                 (ui_component < UI_MAX_COMPONENT_VALUE) *
                                                                                 ui_window_data_buffer[2] -
                                                                                 (UI_COMPONENT_MAX_VALUE < ui_component),
                                                                                 (0 < short_value) *
                                                                                 (short_value < UI_MAX_COMPONENT_VALUE) *
                                                                                 ui_window_data_buffer[0] -
                                                                                 (UI_COMPONENT_MAX_VALUE < short_value))))))
                                  ));
      ui_event_data = (uint64_t *)((longlong)ui_event_data + ui_event_flags);
      ui_event_id_fifth = ui_event_id_fifth - 1;
    } while (ui_event_id_fifth != 0);
  }
  return ui_system_return_value;
}

void ui_system_validate_render_state(ulonglong *ui_callback_context,longlong ui_event_type,uint64_t *ui_event_data,longlong ui_event_flags,
                  uint ui_parameter_value,uint8_t (*ui_parameter_value) [16])

{
  ulonglong ui_system_event_id;
  short ui_component;
  short short_value0;
  short short_value1;
  uint8_t aui_event_id_secondary [16];
  ulonglong ui_task_identifier;
  ulonglong ui_event_id_fourth;
  ulonglong ui_event_id_fifth;
  ulonglong ui_event_id6;
  ulonglong ui_event_id7;
  ulonglong *ui_event_data_buffer_buffer;
  ulonglong ui_event_id9;
  short ui_component;
  uint8_t ui_render_buffer_var [16];
  uint8_t ui_font_data_buffer [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  ulonglong ui_system_task_id;
  ulonglong ui_temp_ulong;
  uint8_t ui_input_data_buffer [16];
  uint8_t ui_widget_data_buffer [16];
  uint8_t ui_window_data_buffer [16];
  uint8_t ui_theme_buffer_var [16];
  uint8_t ui_temp_buffer [16];
  
  aui_event_id_secondary = _ui_config_theme_settings;
  ui_event_id9 = (ulonglong)ui_parameter_value;
  ui_temp_buffer = packsswb(*ui_parameter_value,*ui_parameter_value);
  ui_temp_buffer = pshufb(ui_temp_buffer,_ui_config_input_settings);
  ui_temp_buffer = pshufb(ui_temp_buffer,_ui_config_drag_settings);
  ui_temp_buffer = pshufb(ui_temp_buffer,_ui_config_drop_settings);
  ui_temp_buffer = pshufb(ui_temp_buffer,_ui_config_clipboard_settings);
  if (ui_parameter_value != 0) {
    ui_event_buffer = (ulonglong *)(ui_event_type * 7 + (longlong)ui_callback);
    ui_system_event_id = *(ulonglong *)((longlong)ui_callback + ui_event_type * 6);
    ui_task_identifier = *(ulonglong *)((longlong)ui_callback + ui_event_type * 5);
    ui_event_id_fourth = *(ulonglong *)((longlong)ui_callback + ui_event_type * 4);
    ui_event_id_fifth = *(ulonglong *)((longlong)ui_callback + ui_event_type * 3);
    ui_event_id6 = *(ulonglong *)((longlong)ui_callback + ui_event_type * 2);
    ui_event_id7 = *(ulonglong *)((longlong)ui_callback + ui_event_type);
    ui_system_task_id = *ui_callback;
    do {
      ui_loop_counter = ui_event_id7;
      ui_event_id7 = ui_event_id6;
      ui_event_id6 = ui_event_id_fifth;
      ui_event_id_fifth = ui_event_id_fourth;
      ui_event_id_fourth = ui_task_identifier;
      ui_task_identifier = ui_system_event_id;
      ui_system_event_id = *ui_event_buffer;
      ui_temp_buffer._8_6_ = 0;
      ui_temp_buffer._0_8_ = ui_task_identifier;
      ui_temp_buffer[ui_component_angle_offset] = (char)(ui_task_identifier >> UI_MEMORY_DEALLOC_OFFSET);
      ui_temp_buffer[UI_MAX_EVENT_FLAGS] = (char)(ui_system_event_id >> UI_MEMORY_DEALLOC_OFFSET);
      ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_;
      ui_temp_buffer._8_5_ = 0;
      ui_temp_buffer._0_8_ = ui_task_identifier;
      ui_temp_buffer[THIRTEEN_VALUE] = (char)(ui_system_event_id >> UI_MEMORY_ALLOC_SIZE);
      ui_temp_buffer._13_3_ = ui_temp_buffer._13_3_;
      ui_temp_buffer._data_format_ = 0;
      ui_temp_buffer._0_8_ = ui_task_identifier;
      ui_temp_buffer[12] = (char)(ui_task_identifier >> UI_MEMORY_ALLOC_SIZE);
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
      ui_temp_buffer._8_3_ = 0;
      ui_temp_buffer._0_8_ = ui_task_identifier;
      ui_temp_buffer[ELEVEN_VALUE] = (char)(ui_system_event_id >> UI_CALLBACK_HANDLER_OFFSET);
      ui_temp_buffer._11_5_ = ui_temp_buffer._11_5_;
      ui_temp_buffer._offset_x_ = 0;
      ui_temp_buffer._0_8_ = ui_task_identifier;
      ui_temp_buffer[10] = (char)(ui_task_identifier >> UI_CALLBACK_HANDLER_OFFSET);
      ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
      ui_temp_buffer[8] = 0;
      ui_temp_buffer._0_8_ = ui_task_identifier;
      ui_temp_buffer[9] = (char)(ui_system_event_id >> UI_OFFSET_32);
      ui_temp_buffer._9_7_ = ui_temp_buffer._9_7_;
      ui_temp_buffer[8] = (char)(ui_task_identifier >> UI_OFFSET_32);
      ui_temp_buffer._0_8_ = ui_task_identifier;
      ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
      ui_temp_buffer[7] = (char)(ui_system_event_id >> UI_SNAPSHOT_CREATE_FLAGS);
      ui_temp_buffer[6] = (char)(ui_task_identifier >> UI_SNAPSHOT_CREATE_FLAGS);
      ui_temp_buffer[5] = (char)(ui_system_event_id >> UI_EVENT_FLAG_OFFSET);
      ui_temp_buffer[4] = (char)(ui_task_identifier >> UI_EVENT_FLAG_OFFSET);
      ui_temp_buffer[3] = (char)(ui_system_event_id >> 8);
      ui_temp_buffer[2] = (char)(ui_task_identifier >> 8);
      ui_temp_buffer[0] = (uint8_t)ui_task_identifier;
      ui_temp_buffer[1] = (char)ui_system_event_id;
      ui_temp_buffer = pmaddubsw(ui_temp_buffer,ui_temp_buffer);
      ui_theme_buffer_var._8_6_ = 0;
      ui_theme_buffer_var._0_8_ = ui_system_task_id;
      ui_theme_buffer_var[ui_component_angle_offset] = (char)(ui_system_task_id >> UI_MEMORY_DEALLOC_OFFSET);
      ui_theme_buffer_var[UI_MAX_EVENT_FLAGS] = (char)(ui_loop_counter >> UI_MEMORY_DEALLOC_OFFSET);
      ui_window_data_buffer._offset_w_ = ui_theme_buffer_var._offset_w_;
      ui_window_data_buffer._8_5_ = 0;
      ui_window_data_buffer._0_8_ = ui_system_task_id;
      ui_window_data_buffer[THIRTEEN_VALUE] = (char)(ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
      ui_widget_data_buffer._13_3_ = ui_window_data_buffer._13_3_;
      ui_widget_data_buffer._data_format_ = 0;
      ui_widget_data_buffer._0_8_ = ui_system_task_id;
      ui_widget_data_buffer[12] = (char)(ui_system_task_id >> UI_MEMORY_ALLOC_SIZE);
      ui_input_data_buffer._data_flags_ = ui_widget_data_buffer._data_flags_;
      ui_input_data_buffer._8_3_ = 0;
      ui_input_data_buffer._0_8_ = ui_system_task_id;
      ui_input_data_buffer[ELEVEN_VALUE] = (char)(ui_loop_counter >> UI_CALLBACK_HANDLER_OFFSET);
      ui_render_buffer_var._11_5_ = ui_input_data_buffer._11_5_;
      ui_render_buffer_var._offset_x_ = 0;
      ui_render_buffer_var._0_8_ = ui_system_task_id;
      ui_render_buffer_var[10] = (char)(ui_system_task_id >> UI_CALLBACK_HANDLER_OFFSET);
      ui_temp_buffer._10_6_ = ui_render_buffer_var._10_6_;
      ui_temp_buffer[8] = 0;
      ui_temp_buffer._0_8_ = ui_system_task_id;
      ui_temp_buffer[9] = (char)(ui_loop_counter >> UI_OFFSET_32);
      ui_temp_buffer._9_7_ = ui_temp_buffer._9_7_;
      ui_temp_buffer[8] = (char)(ui_system_task_id >> UI_OFFSET_32);
      ui_temp_buffer._0_8_ = ui_system_task_id;
      ui_font_data_buffer._8_8_ = ui_temp_buffer._8_8_;
      ui_font_data_buffer[7] = (char)(ui_loop_counter >> UI_SNAPSHOT_CREATE_FLAGS);
      ui_font_data_buffer[6] = (char)(ui_system_task_id >> UI_SNAPSHOT_CREATE_FLAGS);
      ui_font_data_buffer[5] = (char)(ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
      ui_font_data_buffer[4] = (char)(ui_system_task_id >> UI_EVENT_FLAG_OFFSET);
      ui_font_data_buffer[3] = (char)(ui_temp_buffer >> 8);
      ui_font_data_buffer[2] = (char)(ui_system_task_id >> 8);
      ui_font_data_buffer[0] = (uint8_t)ui_system_task_id;
      ui_font_data_buffer[1] = (char)ui_loop_counter;
      ui_event_buffer = (ulonglong *)((longlong)ui_event_buffer + ui_event_type);
      ui_font_data_buffer = pmaddubsw(ui_font_data_buffer,ui_temp_buffer);
      ui_temp_buffer._8_6_ = 0;
      ui_temp_buffer._0_8_ = ui_event_id_fifth;
      ui_temp_buffer[ui_component_angle_offset] = (char)(ui_event_id_fifth >> UI_MEMORY_DEALLOC_OFFSET);
      ui_temp_buffer[UI_MAX_EVENT_FLAGS] = (char)(ui_event_id_fourth >> UI_MEMORY_DEALLOC_OFFSET);
      ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_;
      ui_temp_buffer._8_5_ = 0;
      ui_temp_buffer._0_8_ = ui_event_id_fifth;
      ui_temp_buffer[THIRTEEN_VALUE] = (char)(ui_event_id_fourth >> UI_MEMORY_ALLOC_SIZE);
      ui_temp_buffer._13_3_ = ui_temp_buffer._13_3_;
      ui_temp_buffer._data_format_ = 0;
      ui_temp_buffer._0_8_ = ui_event_id_fifth;
      ui_temp_buffer[12] = (char)(ui_event_id_fifth >> UI_MEMORY_ALLOC_SIZE);
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
      ui_temp_buffer._8_3_ = 0;
      ui_temp_buffer._0_8_ = ui_event_id_fifth;
      ui_temp_buffer[ELEVEN_VALUE] = (char)(ui_event_id_fourth >> UI_CALLBACK_HANDLER_OFFSET);
      ui_temp_buffer._11_5_ = ui_temp_buffer._11_5_;
      ui_temp_buffer._offset_x_ = 0;
      ui_temp_buffer._0_8_ = ui_event_id_fifth;
      ui_temp_buffer[10] = (char)(ui_event_id_fifth >> UI_CALLBACK_HANDLER_OFFSET);
      ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
      ui_temp_buffer[8] = 0;
      ui_temp_buffer._0_8_ = ui_event_id_fifth;
      ui_temp_buffer[9] = (char)(ui_event_id_fourth >> UI_OFFSET_32);
      ui_temp_buffer._9_7_ = ui_temp_buffer._9_7_;
      ui_temp_buffer[8] = (char)(ui_event_id_fifth >> UI_OFFSET_32);
      ui_temp_buffer._0_8_ = ui_event_id_fifth;
      ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
      ui_temp_buffer[7] = (char)(ui_event_id_fourth >> UI_SNAPSHOT_CREATE_FLAGS);
      ui_temp_buffer[6] = (char)(ui_event_id_fifth >> UI_SNAPSHOT_CREATE_FLAGS);
      ui_temp_buffer[5] = (char)(ui_event_id_fourth >> UI_EVENT_FLAG_OFFSET);
      ui_temp_buffer[4] = (char)(ui_event_id_fifth >> UI_EVENT_FLAG_OFFSET);
      ui_temp_buffer[3] = (char)(ui_event_id_fourth >> 8);
      ui_temp_buffer[2] = (char)(ui_event_id_fifth >> 8);
      ui_temp_buffer[0] = (uint8_t)ui_event_id_fifth;
      ui_temp_buffer[1] = (char)ui_event_id_fourth;
      ui_temp_buffer._8_6_ = 0;
      ui_temp_buffer._0_8_ = ui_event_id7;
      ui_temp_buffer[ui_component_angle_offset] = (char)(ui_event_id7 >> UI_MEMORY_DEALLOC_OFFSET);
      ui_temp_buffer[UI_MAX_EVENT_FLAGS] = (char)(ui_event_id6 >> UI_MEMORY_DEALLOC_OFFSET);
      ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_;
      ui_temp_buffer._8_5_ = 0;
      ui_temp_buffer._0_8_ = ui_event_id7;
      ui_temp_buffer[THIRTEEN_VALUE] = (char)(ui_event_id6 >> UI_MEMORY_ALLOC_SIZE);
      ui_temp_buffer._13_3_ = ui_temp_buffer._13_3_;
      ui_temp_buffer._data_format_ = 0;
      ui_temp_buffer._0_8_ = ui_event_id7;
      ui_temp_buffer[12] = (char)(ui_event_id7 >> UI_MEMORY_ALLOC_SIZE);
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
      ui_temp_buffer._8_3_ = 0;
      ui_temp_buffer._0_8_ = ui_event_id7;
      ui_temp_buffer[ELEVEN_VALUE] = (char)(ui_event_id6 >> UI_CALLBACK_HANDLER_OFFSET);
      ui_temp_buffer._11_5_ = ui_temp_buffer._11_5_;
      ui_temp_buffer._offset_x_ = 0;
      ui_temp_buffer._0_8_ = ui_event_id7;
      ui_temp_buffer[10] = (char)(ui_event_id7 >> UI_CALLBACK_HANDLER_OFFSET);
      ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
      ui_temp_buffer[8] = 0;
      ui_temp_buffer._0_8_ = ui_event_id7;
      ui_temp_buffer[9] = (char)(ui_event_id6 >> UI_OFFSET_32);
      ui_temp_buffer._9_7_ = ui_temp_buffer._9_7_;
      ui_temp_buffer[8] = (char)(ui_event_id7 >> UI_OFFSET_32);
      ui_temp_buffer._0_8_ = ui_event_id7;
      ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
      ui_temp_buffer[7] = (char)(ui_event_id6 >> UI_SNAPSHOT_CREATE_FLAGS);
      ui_temp_buffer[6] = (char)(ui_event_id7 >> UI_SNAPSHOT_CREATE_FLAGS);
      ui_temp_buffer[5] = (char)(ui_event_id6 >> UI_EVENT_FLAG_OFFSET);
      ui_temp_buffer[4] = (char)(ui_event_id7 >> UI_EVENT_FLAG_OFFSET);
      ui_temp_buffer[3] = (char)(ui_event_id6 >> 8);
      ui_temp_buffer[2] = (char)(ui_event_id7 >> 8);
      ui_temp_buffer[0] = (uint8_t)ui_event_id7;
      ui_temp_buffer[1] = (char)ui_event_id6;
      ui_temp_buffer = pmaddubsw(ui_temp_buffer,ui_temp_buffer);
      ui_font_data_buffer = paddsw(ui_temp_buffer,ui_font_data_buffer);
      ui_component = ui_temp_buffer._component_x_;
      ui_temp_buffer._component_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_component = ui_temp_buffer._component_y_;
      ui_temp_buffer._component_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_component = ui_temp_buffer._component_z_;
      ui_temp_buffer._component_z_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_component = ui_temp_buffer._component_w_;
      ui_temp_buffer._component_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_component = ui_temp_buffer._offset_x_;
      ui_temp_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_component = ui_temp_buffer._offset_y_;
      ui_temp_buffer._offset_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      short_value0 = ui_temp_buffer._offset_z_;
      ui_component = ui_temp_buffer._offset_z_;
      ui_component = ui_temp_buffer._offset_w_;
      ui_temp_buffer._offset_z_ = (ushort)(short_value0 < ui_component) * short_value0 | (ushort)(short_value0 >= ui_component) * ui_component;
      short_value1 = ui_temp_buffer._offset_w_;
      ui_temp_buffer._offset_w_ = (ushort)(short_value1 < ui_component) * short_value1 | (ushort)(short_value1 >= ui_component) * ui_component;
      ui_temp_buffer._component_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_temp_buffer._component_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_temp_buffer._component_z_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_temp_buffer._component_w_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_temp_buffer._offset_x_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_temp_buffer._offset_y_ = (ushort)(ui_component < ui_component) * ui_component | (ushort)(ui_component >= ui_component) * ui_component;
      ui_temp_buffer._offset_z_ = (ushort)(ui_component < short_value0) * short_value0 | (ushort)(ui_component >= short_value0) * ui_component;
      ui_temp_buffer._offset_w_ = (ushort)(ui_component < short_value1) * short_value1 | (ushort)(ui_component >= short_value1) * ui_component;
      ui_font_data_buffer = paddsw(ui_font_data_buffer,ui_temp_buffer);
      ui_font_data_buffer = paddsw(ui_font_data_buffer,aui_event_id_secondary);
      ui_font_data_buffer = psraw(ui_font_data_buffer,7);
      ui_component = ui_font_data_buffer._component_x_;
      ui_component = ui_font_data_buffer._component_y_;
      ui_component = ui_font_data_buffer._component_z_;
      ui_component = ui_font_data_buffer._component_w_;
      ui_component = ui_font_data_buffer._offset_x_;
      ui_component = ui_font_data_buffer._offset_y_;
      short_value0 = ui_font_data_buffer._offset_z_;
      short_value1 = ui_font_data_buffer._offset_w_;
      *ui_event_data = CONCAT17((0 < short_value1) * (short_value1 < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[ui_component_angle_offset] - (UI_COMPONENT_MAX_VALUE < short_value1),
                          CONCAT16((0 < short_value0) * (short_value0 < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[12] - (UI_COMPONENT_MAX_VALUE < short_value0),
                                   CONCAT15((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[10] -
                                            (UI_COMPONENT_MAX_VALUE < ui_component),
                                            CONCAT14((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) * ui_font_data_buffer[8] -
                                                     (UI_COMPONENT_MAX_VALUE < ui_component),
                                                     CONCAT13((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE) *
                                                              ui_font_data_buffer[6] - (UI_COMPONENT_MAX_VALUE < ui_component),
                                                              CONCAT12((0 < ui_component) * (ui_component < UI_MAX_COMPONENT_VALUE)
                                                                       * ui_font_data_buffer[4] - (UI_COMPONENT_MAX_VALUE < ui_component)
                                                                       ,CONCAT11((0 < ui_component) *
                                                                                 (ui_component < UI_MAX_COMPONENT_VALUE) *
                                                                                 ui_font_data_buffer[2] -
                                                                                 (UI_COMPONENT_MAX_VALUE < ui_component),
                                                                                 (0 < ui_component) *
                                                                                 (ui_component < UI_MAX_COMPONENT_VALUE) *
                                                                                 ui_font_data_buffer[0] -
                                                                                 (UI_COMPONENT_MAX_VALUE < ui_component))))))
                                  ));
      ui_event_data = (uint64_t *)((longlong)ui_event_data + ui_event_flags);
      ui_event_id9 = ui_event_id9 - 1;
      ui_system_task_id = ui_loop_counter;
    } while (ui_event_id9 != 0);
  }
  return ui_system_return_value;
}

void ui_system_set_focus(void)

{
  ui_system_cleanup_layout_cache();
  return ui_system_return_value;
}

void ui_system_get_focus(void)

{
  InitializeUIRenderer();
}

void ui_system_set_visible(longlong ui_callback,uint64_t ui_event_type,longlong ui_event_data,uint64_t ui_event_flags,
                  short *ui_parameter_value)

{
  ulonglong ui_system_event_id;
  uint ui_stack_data_offset_48;
  uint32_t ui_stack_event_parameter;
  
  if (((*ui_parameter_value == 0) && (ui_parameter_value[1] == 0)) && (ui_parameter_value[2] == 0)) {
    if (UI_MAX_EVENT_FLAGS < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 4);
      ui_stack_data_offset_48 = ui_stack_data_offset_48 + (ui_stack_data_offset_48 >> 4) * -UI_EVENT_FLAG_OFFSET;
      do {
        ui_system_event_handler_1426(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + UI_EVENT_FLAG_OFFSET;
        ui_event_data = ui_event_data + UI_EVENT_FLAG_OFFSET;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (7 < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 3);
      ui_stack_data_offset_48 = ui_stack_data_offset_48 + (ui_stack_data_offset_48 >> 3) * -8;
      do {
        ui_system_event_handler_1378(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + 8;
        ui_event_data = ui_event_data + 8;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (3 < (int)ui_stack_data_offset_48) {
      ui_callback = ui_callback - ui_event_data;
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 2);
      do {
        ui_system_event_handler_12ec(ui_callback + ui_event_data,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_event_data = ui_event_data + 4;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
  }
  else {
    if (UI_MAX_EVENT_FLAGS < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 4);
      ui_stack_data_offset_48 = ui_stack_data_offset_48 + (ui_stack_data_offset_48 >> 4) * -UI_EVENT_FLAG_OFFSET;
      do {
        ui_system_update_render_properties(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + UI_EVENT_FLAG_OFFSET;
        ui_event_data = ui_event_data + UI_EVENT_FLAG_OFFSET;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (7 < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 3);
      ui_stack_data_offset_48 = ui_stack_data_offset_48 + (ui_stack_data_offset_48 >> 3) * -8;
      do {
        ui_system_handle_render_callback(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + 8;
        ui_event_data = ui_event_data + 8;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (3 < (int)ui_stack_data_offset_48) {
      ui_system_event_id = (ulonglong)(ui_stack_data_offset_48 >> 2);
      do {
        ui_system_process_render_command(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_stack_event_parameter,ui_parameter_value);
        ui_callback = ui_callback + 4;
        ui_event_data = ui_event_data + 4;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
  }
  return ui_system_return_value;
}

void ui_system_get_visible(longlong ui_callback,longlong ui_event_type,longlong ui_event_data,uint64_t ui_event_flags,
                  uint64_t ui_parameter_value,uint64_t ui_parameter_value,short *ui_parameter_value,uint64_t ui_parameter_value,
                  uint ui_parameter_value,uint32_t ui_callback_primary)

{
  ulonglong ui_system_event_id;
  longlong ui_event_index;
  
  if (((*ui_parameter_value == 0) && (ui_parameter_value[1] == 0)) && (ui_parameter_value[2] == 0)) {
    if (UI_MAX_EVENT_FLAGS < (int)ui_parameter_value) {
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 4);
      ui_parameter_value = ui_parameter_value + (ui_parameter_value >> 4) * -UI_EVENT_FLAG_OFFSET;
      do {
        ui_system_event_handler_1022(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_callback = ui_callback + UI_EVENT_FLAG_OFFSET;
        ui_event_data = ui_event_data + UI_EVENT_FLAG_OFFSET;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (7 < (int)ui_parameter_value) {
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 3);
      ui_parameter_value = ui_parameter_value + (ui_parameter_value >> 3) * -8;
      do {
        ui_system_utility_function_0f78(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_callback = ui_callback + 8;
        ui_event_data = ui_event_data + 8;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (3 < (int)ui_parameter_value) {
      ui_callback = ui_callback - ui_event_data;
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 2);
      do {
        ui_system_utility_function_0ef0(ui_callback + ui_event_data,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_event_data = ui_event_data + 4;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
  }
  else {
    if (UI_MAX_EVENT_FLAGS < (int)ui_parameter_value) {
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 4);
      ui_event_index = ui_callback + ui_event_type * -3;
      ui_parameter_value = ui_parameter_value + (ui_parameter_value >> 4) * -UI_EVENT_FLAG_OFFSET;
      ui_callback = ui_callback + ui_system_event_id * UI_EVENT_FLAG_OFFSET;
      do {
        ui_system_process_render_batch(ui_event_index,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_event_index = ui_event_index + UI_EVENT_FLAG_OFFSET;
        ui_event_data = ui_event_data + UI_EVENT_FLAG_OFFSET;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (7 < (int)ui_parameter_value) {
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 3);
      ui_event_index = ui_callback + ui_event_type * -3;
      ui_callback = ui_callback + ui_system_event_id * 8;
      ui_parameter_value = ui_parameter_value + (ui_parameter_value >> 3) * -8;
      do {
        ui_system_validate_render_state(ui_event_index,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_event_index = ui_event_index + 8;
        ui_event_data = ui_event_data + 8;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
    if (3 < (int)ui_parameter_value) {
      ui_callback = ui_callback + ui_event_type * -3;
      ui_system_event_id = (ulonglong)(ui_parameter_value >> 2);
      do {
        ui_system_utility_function_09d0(ui_callback,ui_event_type,ui_event_data,ui_event_flags,ui_callback_primary,ui_parameter_value);
        ui_callback = ui_callback + 4;
        ui_event_data = ui_event_data + 4;
        ui_system_event_id = ui_system_event_id - 1;
      } while (ui_system_event_id != 0);
    }
  }
  return ui_system_return_value;
}

void ui_system_update_render_properties(longlong ui_callback,longlong ui_event_type,uint8_t (*ui_event_data) [16],longlong ui_event_flags,
                  uint ui_parameter_value,uint8_t (*ui_parameter_value) [16])

{
  uint8_t aui_event_id [16];
  uint8_t aui_task_index [16];
  uint8_t ui_temp_buffer [16];
  uint8_t ui_temp_buffer [32];
  uint8_t ui_event_buffer_var [32];
  uint8_t aui_event_id1 [32];
  uint8_t aui_event_id_secondary [32];
  uint8_t aui_task_identifier [32];
  uint8_t aui_event_id_fourth [32];
  ulonglong ui_event_id_fifth;
  uint8_t aui_event_id6 [32];
  uint8_t aui_event_id7 [32];
  uint8_t aui_event_id8 [16];
  uint8_t ui_temporary_buffer [32];
  uint8_t ui_task_processing_buffer [32];
  uint8_t ui_render_buffer_var [16];
  uint8_t ui_input_data_buffer [32];
  uint8_t ui_stack_array [16];
  
  aui_event_id_fourth = ui_event_id_base;
  aui_task_identifier = _ui_config_performance_settings;
  aui_event_id_secondary = _ui_config_memory_settings;
  aui_event_id1 = _ui_config_resource_settings;
  aui_event_id8 = vpacksswb_avx(*ui_parameter_value,*ui_parameter_value);
  aui_event_id6._16_16_ = aui_event_id8;
  aui_event_id6._0_16_ = aui_event_id8;
  ui_temp_buffer = vpshufb_avx2(aui_event_id6,_ui_config_debug_settings);
  ui_temp_buffer = vpshufb_avx2(aui_event_id6,_ui_config_log_settings);
  ui_temp_buffer = vpshufb_avx2(aui_event_id6,_ui_config_inspector_settings);
  aui_event_id6 = vpshufb_avx2(aui_event_id6,_ui_config_accessibility_settings);
  if (1 < ui_parameter_value) {
    ui_event_id_fifth = (ulonglong)((ui_parameter_value - 2 >> 1) + 1);
    do {
      aui_event_id8 = *(uint8_t (*) [16])(ui_event_type + -3 + ui_callback);
      ui_task_processing_buffer._0_16_ = ZEXT116(0) * aui_event_id8 + ZEXT116(1) * *(uint8_t (*) [16])(ui_callback + -3);
      ui_task_processing_buffer._16_16_ = ZEXT116(1) * aui_event_id8;
      aui_event_id7 = vpshufb_avx2(ui_task_processing_buffer,aui_task_identifier);
      aui_event_id7 = vpmaddubsw_avx2(aui_event_id7,ui_temp_buffer);
      aui_event_id8 = *(uint8_t (*) [16])(ui_event_type + 5 + ui_callback);
      ui_input_data_buffer._0_16_ = ZEXT116(0) * aui_event_id8 + ZEXT116(1) * *(uint8_t (*) [16])(ui_callback + 5);
      ui_input_data_buffer._16_16_ = ZEXT116(1) * aui_event_id8;
      ui_temporary_buffer._8_8_ = 0xe0d0d0c0c0b0b0a;
      ui_temporary_buffer._0_8_ = UI_OFFSET_1609090808070706;
      ui_temporary_buffer._16_8_ = UI_OFFSET_1609090808070706;
      ui_temporary_buffer._24_8_ = 0xe0d0d0c0c0b0b0a;
      ui_temporary_buffer = vpshufb_avx2(ui_task_processing_buffer,ui_temporary_buffer);
      ui_temporary_buffer = vpmaddubsw_avx2(ui_temporary_buffer,aui_event_id6);
      ui_temp_buffer = vpshufb_avx2(ui_task_processing_buffer,aui_event_id_secondary);
      ui_temp_buffer = vpmaddubsw_avx2(ui_temp_buffer,ui_temp_buffer);
      ui_temp_buffer = vpmaxsw_avx2(ui_temp_buffer,aui_event_id7);
      ui_temp_buffer = vpminsw_avx2(ui_temp_buffer,aui_event_id7);
      aui_event_id7 = vpshufb_avx2(ui_task_processing_buffer,aui_event_id1);
      aui_event_id7 = vpmaddubsw_avx2(aui_event_id7,ui_temp_buffer);
      aui_event_id7 = vpaddsw_avx2(ui_temporary_buffer,aui_event_id7);
      aui_event_id7 = vpaddsw_avx2(aui_event_id7,ui_temp_buffer);
      ui_temporary_buffer = vpshufb_avx2(ui_input_data_buffer,aui_event_id_secondary);
      ui_temporary_buffer = vpmaddubsw_avx2(ui_temporary_buffer,ui_temp_buffer);
      ui_temp_buffer = vpshufb_avx2(ui_input_data_buffer,aui_task_identifier);
      ui_temp_buffer = vpmaddubsw_avx2(ui_temp_buffer,ui_temp_buffer);
      ui_temp_buffer._8_8_ = 0xe0d0d0c0c0b0b0a;
      ui_temp_buffer._0_8_ = UI_OFFSET_1609090808070706;
      ui_temp_buffer._16_8_ = UI_OFFSET_1609090808070706;
      ui_temp_buffer._24_8_ = 0xe0d0d0c0c0b0b0a;
      ui_event_buffer_var = vpshufb_avx2(ui_input_data_buffer,ui_temp_buffer);
      ui_task_processing_buffer = vpminsw_avx2(ui_temporary_buffer,ui_temp_buffer);
      ui_temp_buffer = vpmaxsw_avx2(ui_temporary_buffer,ui_temp_buffer);
      ui_temporary_buffer = vpmaddubsw_avx2(ui_event_buffer_var,aui_event_id6);
      ui_temp_buffer = vpshufb_avx2(ui_input_data_buffer,aui_event_id1);
      ui_temp_buffer = vpmaddubsw_avx2(ui_temp_buffer,ui_temp_buffer);
      ui_temporary_buffer = vpaddsw_avx2(ui_temporary_buffer,ui_temp_buffer);
      ui_temporary_buffer = vpaddsw_avx2(ui_temporary_buffer,ui_task_processing_buffer);
      ui_temporary_buffer = vpaddsw_avx2(ui_temporary_buffer,ui_temp_buffer);
      ui_temporary_buffer = vpaddsw_avx2(ui_temporary_buffer,aui_event_id_fourth);
      aui_event_id7 = vpaddsw_avx2(aui_event_id7,aui_event_id_fourth);
      aui_event_id7 = vpsraw_avx2(aui_event_id7,7);
      ui_temporary_buffer = vpsraw_avx2(ui_temporary_buffer,7);
      aui_event_id7 = vpackuswb_avx2(aui_event_id7,ui_temporary_buffer);
      *ui_event_data = aui_event_id7._0_16_;
      *(uint8_t (*) [16])(*ui_event_data + ui_event_flags) = aui_event_id7._16_16_;
      ui_event_data = (uint8_t (*) [16])(*ui_event_data + ui_event_flags * 2);
      ui_callback = ui_callback + ui_event_type * 2;
      ui_parameter_value = ui_parameter_value - 2;
      ui_event_id_fifth = ui_event_id_fifth - 1;
    } while (ui_event_id_fifth != 0);
  }
  if (ui_parameter_value != 0) {
    aui_event_id8 = *(uint8_t (*) [16])(ui_callback + -3);
    ui_stack_array = aui_event_id_secondary._0_16_;
    ui_temp_buffer = vpshufb_avx(aui_event_id8,ui_stack_array);
    ui_stack_array = ui_temp_buffer._0_16_;
    aui_event_id = vpmaddubsw_avx(ui_temp_buffer,ui_stack_array);
    ui_stack_array = aui_task_identifier._0_16_;
    ui_temp_buffer = vpshufb_avx(aui_event_id8,ui_stack_array);
    ui_stack_array = ui_temp_buffer._0_16_;
    aui_task_index = vpmaddubsw_avx(ui_temp_buffer,ui_stack_array);
    ui_stack_array = aui_event_id1._0_16_;
    ui_temp_buffer = vpshufb_avx(aui_event_id8,ui_stack_array);
    ui_stack_array = ui_temp_buffer._0_16_;
    ui_temp_buffer = vpmaddubsw_avx(ui_temp_buffer,ui_stack_array);
    ui_temp_buffer._8_8_ = 0xe0d0d0c0c0b0b0a;
    ui_temp_buffer._0_8_ = UI_OFFSET_1609090808070706;
    aui_event_id8 = vpshufb_avx(aui_event_id8,ui_temp_buffer);
    ui_stack_array = aui_event_id6._0_16_;
    ui_temp_buffer = vpmaddubsw_avx(aui_event_id8,ui_stack_array);
    aui_event_id8 = *(uint8_t (*) [16])(ui_callback + 5);
    ui_temp_buffer = vpaddsw_avx(ui_temp_buffer,ui_temp_buffer);
    ui_temp_buffer = vpminsw_avx(aui_event_id,aui_task_index);
    ui_temp_buffer = vpaddsw_avx(ui_temp_buffer,ui_temp_buffer);
    ui_temp_buffer = vpshufb_avx(aui_event_id8,ui_stack_array);
    ui_temp_buffer = vpmaddubsw_avx(ui_temp_buffer,ui_stack_array);
    aui_event_id = vpmaxsw_avx(aui_event_id,aui_task_index);
    ui_temp_buffer = vpaddsw_avx(ui_temp_buffer,aui_event_id);
    ui_stack_array = aui_event_id_fourth._0_16_;
    ui_temp_buffer = vpaddsw_avx(ui_temp_buffer,ui_stack_array);
    aui_event_id = vpshufb_avx(aui_event_id8,ui_stack_array);
    aui_event_id = vpmaddubsw_avx(aui_event_id,ui_stack_array);
    aui_task_index = vpshufb_avx(aui_event_id8,ui_stack_array);
    aui_task_index = vpmaddubsw_avx(aui_task_index,ui_stack_array);
    ui_render_buffer_var = vpsraw_avx(ui_temp_buffer,7);
    ui_temp_buffer._8_8_ = 0xe0d0d0c0c0b0b0a;
    ui_temp_buffer._0_8_ = UI_OFFSET_1609090808070706;
    aui_event_id8 = vpshufb_avx(aui_event_id8,ui_temp_buffer);
    aui_event_id8 = vpmaddubsw_avx(aui_event_id8,ui_stack_array);
    aui_event_id8 = vpaddsw_avx(aui_task_index,aui_event_id8);
    ui_temp_buffer = vpminsw_avx(ui_temp_buffer,aui_event_id);
    aui_event_id8 = vpaddsw_avx(aui_event_id8,ui_temp_buffer);
    ui_temp_buffer = vpmaxsw_avx(ui_temp_buffer,aui_event_id);
    aui_event_id8 = vpaddsw_avx(aui_event_id8,ui_temp_buffer);
    aui_event_id8 = vpaddsw_avx(aui_event_id8,ui_stack_array);
    aui_event_id8 = vpsraw_avx(aui_event_id8,7);
    aui_event_id8 = vpackuswb_avx(ui_render_buffer_var,aui_event_id8);
    *ui_event_data = aui_event_id8;
  }
  return ui_system_return_value;
}

void ui_system_process_render_batch(uint8_t (*ui_callback) [16],longlong ui_event_type,uint8_t (*ui_event_data) [16],
                  longlong ui_event_flags,uint ui_parameter_value,uint8_t (*ui_parameter_value) [16])

{
  uint8_t aui_event_id [16];
  uint8_t aui_task_index [16];
  uint8_t ui_temp_buffer [16];
  uint8_t ui_temp_buffer [32];
  uint8_t ui_event_buffer_var [32];
  uint8_t aui_event_id1 [32];
  uint8_t aui_event_id_secondary [32];
  uint8_t aui_task_identifier [32];
  uint8_t aui_event_id_fourth [32];
  ulonglong ui_event_id_fifth;
  uint8_t aui_event_id6 [32];
  uint8_t aui_event_id7 [32];
  uint8_t aui_event_id8 [32];
  uint8_t ui_temporary_buffer [32];
  uint8_t ui_task_processing_buffer [32];
  uint8_t ui_render_buffer_var [32];
  uint8_t ui_input_data_buffer [16];
  uint8_t ui_widget_data_buffer [32];
  uint8_t ui_window_data_buffer [32];
  uint8_t ui_theme_buffer_var [16];
  uint8_t ui_font_data_buffer [32];
  uint8_t ui_task_index_array_primary [32];
  uint8_t ui_stack_array [16];
  
  aui_event_id_fourth = ui_event_id_base;
  ui_input_data_buffer = *(uint8_t (*) [16])(*ui_callback + ui_event_type);
  aui_event_id = *(uint8_t (*) [16])(*ui_callback + ui_event_type * 2);
  ui_widget_data_buffer._0_16_ = ZEXT116(0) * aui_event_id + ZEXT116(1) * ui_input_data_buffer;
  ui_widget_data_buffer._16_16_ = ZEXT116(1) * aui_event_id;
  aui_task_index = vpacksswb_avx(*ui_parameter_value,*ui_parameter_value);
  aui_event_id6._16_16_ = aui_task_index;
  aui_event_id6._0_16_ = aui_task_index;
  ui_temp_buffer = vpshufb_avx2(aui_event_id6,_ui_config_log_settings);
  ui_temp_buffer = vpshufb_avx2(aui_event_id6,_ui_config_accessibility_settings);
  ui_temp_buffer = vpshufb_avx2(aui_event_id6,_ui_config_debug_settings);
  aui_event_id6 = vpshufb_avx2(aui_event_id6,_ui_config_inspector_settings);
  ui_task_index_array_primary._0_16_ = ZEXT116(0) * ui_input_data_buffer + ZEXT116(1) * *ui_callback;
  ui_task_index_array_primary._16_16_ = ZEXT116(1) * ui_input_data_buffer;
  ui_input_data_buffer = *(uint8_t (*) [16])(*ui_callback + ui_event_type * 5);
  ui_render_buffer_var._0_16_ =
       ZEXT116(0) * ui_input_data_buffer + ZEXT116(1) * *(uint8_t (*) [16])(*ui_callback + ui_event_type * 4);
  ui_render_buffer_var._16_16_ = ZEXT116(1) * ui_input_data_buffer;
  ui_window_data_buffer = vpunpcklbw_avx2(ui_task_index_array_primary,ui_widget_data_buffer);
  ui_stack_array = ui_window_data_buffer._0_16_;
  aui_task_index = *(uint8_t (*) [16])(*ui_callback + ui_event_type * 3);
  ui_theme_buffer_var = *(uint8_t (*) [16])(*ui_callback + ui_event_type * 6);
  aui_event_id7._0_16_ = ZEXT116(0) * ui_theme_buffer_var + ZEXT116(1) * ui_input_data_buffer;
  aui_event_id7._16_16_ = ZEXT116(1) * ui_theme_buffer_var;
  ui_font_data_buffer._0_16_ = ZEXT116(0) * aui_task_index + ZEXT116(1) * aui_event_id;
  ui_font_data_buffer._16_16_ = ZEXT116(0) * SUB4816((uint8_t  [48])UI_ZERO_OFFSET,0) + ZEXT116(1) * aui_task_index;
  ui_temporary_buffer._0_16_ = ZEXT116(0) * *(uint8_t (*) [16])(*ui_callback + ui_event_type * 4) + ZEXT116(1) * aui_task_index
  ;
  ui_temporary_buffer._16_16_ = ZEXT116(1) * *(uint8_t (*) [16])(*ui_callback + ui_event_type * 4);
  ui_event_buffer_var = vpunpcklbw_avx2(ui_render_buffer_var,aui_event_id7);
  ui_stack_array = ui_event_buffer_var._0_16_;
  aui_event_id7 = vpunpckhbw_avx2(ui_render_buffer_var,aui_event_id7);
  ui_stack_array = aui_event_id7._0_16_;
  ui_render_buffer_var = vpunpckhbw_avx2(ui_task_index_array_primary,ui_widget_data_buffer);
  ui_stack_array = ui_render_buffer_var._0_16_;
  ui_widget_data_buffer = vpunpcklbw_avx2(ui_font_data_buffer,ui_temporary_buffer);
  ui_stack_array = ui_widget_data_buffer._0_16_;
  ui_temporary_buffer = vpunpckhbw_avx2(ui_font_data_buffer,ui_temporary_buffer);
  ui_stack_array = ui_temporary_buffer._0_16_;
  if (1 < ui_parameter_value) {
    ui_event_id_fifth = (ulonglong)((ui_parameter_value - 2 >> 1) + 1);
    do {
      ui_task_index_array_primary = aui_event_id7;
      aui_event_id1 = ui_event_buffer_var;
      aui_task_identifier = ui_temporary_buffer;
      aui_event_id_secondary = ui_widget_data_buffer;
      ui_input_data_buffer = *(uint8_t (*) [16])(*ui_callback + ui_event_type * 7);
      ui_temporary_buffer = vpmaddubsw_avx2(aui_event_id1,aui_event_id6);
      ui_task_processing_buffer._0_16_ = ZEXT116(0) * ui_input_data_buffer + ZEXT116(1) * ui_theme_buffer_var;
      ui_task_processing_buffer._16_16_ = ZEXT116(1) * ui_input_data_buffer;
      ui_theme_buffer_var = *(uint8_t (*) [16])(*ui_callback + ui_event_type * 8);
      aui_event_id8._0_16_ = ZEXT116(0) * ui_theme_buffer_var + ZEXT116(1) * ui_input_data_buffer;
      aui_event_id8._16_16_ = ZEXT116(0) * SUB4816((uint8_t  [48])UI_ZERO_OFFSET,0) + ZEXT116(1) * ui_theme_buffer_var;
      ui_event_buffer_var = vpunpcklbw_avx2(ui_task_processing_buffer,aui_event_id8);
      aui_event_id7 = vpunpckhbw_avx2(ui_task_processing_buffer,aui_event_id8);
      ui_widget_data_buffer = vpmaddubsw_avx2(aui_event_id_secondary,ui_temp_buffer);
      ui_font_data_buffer = vpmaxsw_avx2(ui_temporary_buffer,ui_widget_data_buffer);
      ui_widget_data_buffer = vpminsw_avx2(ui_temporary_buffer,ui_widget_data_buffer);
      ui_temporary_buffer = vpmaddubsw_avx2(ui_event_buffer_var,ui_temp_buffer);
      ui_window_data_buffer = vpmaddubsw_avx2(ui_window_data_buffer,ui_temp_buffer);
      ui_temporary_buffer = vpaddsw_avx2(ui_temporary_buffer,ui_window_data_buffer);
      ui_window_data_buffer = vpmaddubsw_avx2(ui_task_index_array_primary,aui_event_id6);
      ui_temporary_buffer = vpaddsw_avx2(ui_temporary_buffer,ui_widget_data_buffer);
      ui_widget_data_buffer = vpmaddubsw_avx2(aui_task_identifier,ui_temp_buffer);
      ui_temporary_buffer = vpaddsw_avx2(ui_temporary_buffer,ui_font_data_buffer);
      ui_font_data_buffer = vpmaxsw_avx2(ui_window_data_buffer,ui_widget_data_buffer);
      ui_widget_data_buffer = vpminsw_avx2(ui_window_data_buffer,ui_widget_data_buffer);
      ui_window_data_buffer = vpmaddubsw_avx2(aui_event_id7,ui_temp_buffer);
      ui_render_buffer_var = vpmaddubsw_avx2(ui_render_buffer_var,ui_temp_buffer);
      ui_render_buffer_var = vpaddsw_avx2(ui_window_data_buffer,ui_render_buffer_var);
      ui_render_buffer_var = vpaddsw_avx2(ui_render_buffer_var,ui_widget_data_buffer);
      ui_render_buffer_var = vpaddsw_avx2(ui_render_buffer_var,ui_font_data_buffer);
      ui_render_buffer_var = vpaddsw_avx2(ui_render_buffer_var,aui_event_id_fourth);
      ui_window_data_buffer = vpsraw_avx2(ui_render_buffer_var,7);
      ui_render_buffer_var = vpaddsw_avx2(ui_temporary_buffer,aui_event_id_fourth);
      ui_render_buffer_var = vpsraw_avx2(ui_render_buffer_var,7);
      ui_render_buffer_var = vpackuswb_avx2(ui_render_buffer_var,ui_window_data_buffer);
      *ui_event_data = ui_render_buffer_var._0_16_;
      *(uint8_t (*) [16])(*ui_event_data + ui_event_flags) = ui_render_buffer_var._16_16_;
      ui_event_data = (uint8_t (*) [16])(*ui_event_data + ui_event_flags * 2);
      ui_callback = (uint8_t (*) [16])(*ui_callback + ui_event_type * 2);
      ui_parameter_value = ui_parameter_value - 2;
      ui_event_id_fifth = ui_event_id_fifth - 1;
      ui_render_buffer_var = aui_task_identifier;
      ui_widget_data_buffer = aui_event_id1;
      ui_temporary_buffer = ui_task_index_array_primary;
      ui_window_data_buffer = aui_event_id_secondary;
    } while (ui_event_id_fifth != 0);
    ui_stack_array = aui_event_id1._0_16_;
    ui_stack_array = ui_task_index_array_primary._0_16_;
    ui_stack_array = ui_event_buffer_var._0_16_;
    ui_stack_array = aui_event_id7._0_16_;
    ui_stack_array = aui_event_id_secondary._0_16_;
    ui_stack_array = aui_task_identifier._0_16_;
  }
  if (ui_parameter_value != 0) {
    ui_stack_array = ui_temp_buffer._0_16_;
    aui_event_id = vpmaddubsw_avx(ui_stack_array,ui_stack_array);
    aui_task_index = vpmaddubsw_avx(ui_stack_array,ui_stack_array);
    ui_stack_array = aui_event_id6._0_16_;
    ui_temp_buffer = vpmaddubsw_avx(ui_stack_array,ui_stack_array);
    ui_stack_array = ui_temp_buffer._0_16_;
    ui_input_data_buffer = vpmaddubsw_avx(ui_stack_array,ui_stack_array);
    ui_temp_buffer = vpmaxsw_avx(aui_event_id,ui_temp_buffer);
    ui_temp_buffer = vpunpcklbw_avx(ui_theme_buffer_var,*(uint8_t (*) [16])(*ui_callback + ui_event_type * 7));
    ui_stack_array = ui_temp_buffer._0_16_;
    ui_temp_buffer = vpmaddubsw_avx(ui_temp_buffer,ui_stack_array);
    ui_input_data_buffer = vpaddsw_avx(ui_temp_buffer,ui_input_data_buffer);
    aui_event_id = vpminsw_avx(aui_event_id,ui_temp_buffer);
    ui_input_data_buffer = vpaddsw_avx(ui_input_data_buffer,aui_event_id);
    ui_input_data_buffer = vpaddsw_avx(ui_input_data_buffer,ui_temp_buffer);
    ui_stack_array = aui_event_id_fourth._0_16_;
    ui_input_data_buffer = vpaddsw_avx(ui_input_data_buffer,ui_stack_array);
    aui_event_id = vpunpckhbw_avx(ui_theme_buffer_var,*(uint8_t (*) [16])(*ui_callback + ui_event_type * 7));
    aui_event_id = vpmaddubsw_avx(aui_event_id,ui_stack_array);
    ui_theme_buffer_var = vpsraw_avx(ui_input_data_buffer,7);
    ui_input_data_buffer = vpmaddubsw_avx(ui_stack_array,ui_stack_array);
    ui_input_data_buffer = vpaddsw_avx(aui_event_id,ui_input_data_buffer);
    aui_event_id = vpminsw_avx(aui_task_index,ui_temp_buffer);
    ui_input_data_buffer = vpaddsw_avx(ui_input_data_buffer,aui_event_id);
    aui_event_id = vpmaxsw_avx(aui_task_index,ui_temp_buffer);
    ui_input_data_buffer = vpaddsw_avx(ui_input_data_buffer,aui_event_id);
    ui_input_data_buffer = vpaddsw_avx(ui_input_data_buffer,ui_stack_array);
    ui_input_data_buffer = vpsraw_avx(ui_input_data_buffer,7);
    ui_input_data_buffer = vpackuswb_avx(ui_theme_buffer_var,ui_input_data_buffer);
    *ui_event_data = ui_input_data_buffer;
  }
  return ui_system_return_value;
}

void ui_system_initialize_render_context(uint8_t *ui_callback,longlong ui_event_type,byte *ui_event_data,byte *ui_event_flags)

{
  uint8_t *ui_event_buffer;
  byte ui_bool_result;
  uint8_t ui_loop_counter;
  uint ui_event_id0;
  
  ui_bool_result = *ui_event_data;
  ui_bool_result = ui_event_data[1];
  ui_bool_result = ui_event_data[2];
  ui_bool_result = *ui_event_flags;
  ui_bool_result = ui_event_flags[1];
  ui_bool_result = ui_event_flags[2];
  ui_event_id0 = (uint)ui_event_data[-1];
  ui_bool_result = ui_event_data[3];
  ui_loop_counter = (uint8_t)((int)(ui_event_data[-1] + 1 + (uint)ui_bool_result) >> 1);
  ui_callback[ui_event_type * 2 + 1] = ui_loop_counter;
  *ui_callback = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)(ui_bool_result + 1 + (uint)ui_bool_result) >> 1);
  ui_callback[ui_event_type * 2 + 2] = ui_loop_counter;
  ui_callback[1] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)(ui_bool_result + 1 + (uint)ui_bool_result) >> 1);
  ui_callback[ui_event_type * 2 + 3] = ui_loop_counter;
  ui_callback[2] = ui_loop_counter;
  ui_callback[3] = (char)((int)(ui_bool_result + 1 + (uint)ui_bool_result) >> 1);
  ui_event_buffer = ui_callback + ui_event_type * 3;
  *ui_event_buffer = (char)((int)((uint)ui_bool_result + (ui_bool_result + 1) * 2 + (uint)ui_bool_result) >> 2);
  ui_callback[ui_event_type * 2] = (char)((int)(ui_event_id0 + (ui_bool_result + 1) * 2 + (uint)ui_bool_result) >> 2);
  ui_loop_counter = (uint8_t)((int)((uint)ui_bool_result + ui_event_id0 * 2 + ui_bool_result + 2) >> 2);
  ui_event_buffer[1] = ui_loop_counter;
  ui_callback[ui_event_type] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)((uint)ui_bool_result + (ui_bool_result + 1) * 2 + ui_event_id0) >> 2);
  ui_event_buffer[2] = ui_loop_counter;
  ui_callback[ui_event_type + 1] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)((uint)ui_bool_result * 2 + (uint)ui_bool_result + ui_bool_result + 2) >> 2);
  ui_event_buffer[3] = ui_loop_counter;
  ui_callback[ui_event_type + 2] = ui_loop_counter;
  ui_callback[ui_event_type + 3] = (char)((int)((uint)ui_bool_result + (uint)ui_bool_result * 2 + ui_bool_result + 2) >> 2);
  return ui_system_return_value;
}

void ui_system_cleanup_render_context(uint8_t *ui_callback,longlong ui_event_type,byte *ui_event_data,byte *ui_event_flags)

{
  uint8_t *ui_event_buffer;
  byte ui_bool_result;
  uint8_t ui_loop_counter;
  uint ui_event_id0;
  
  ui_event_id0 = (uint)ui_event_data[-1];
  ui_bool_result = *ui_event_data;
  ui_bool_result = ui_event_data[1];
  ui_bool_result = ui_event_data[2];
  ui_bool_result = *ui_event_flags;
  ui_bool_result = ui_event_data[3];
  ui_event_buffer = ui_callback + ui_event_type * 3;
  ui_bool_result = ui_event_flags[1];
  ui_bool_result = ui_event_flags[2];
  *ui_event_buffer = (char)((int)((uint)ui_event_flags[3] + (uint)ui_bool_result + (ui_bool_result + 1) * 2) >> 2);
  ui_loop_counter = (uint8_t)((int)((uint)ui_bool_result + (ui_bool_result + 1) * 2 + (uint)ui_bool_result) >> 2);
  ui_callback[ui_event_type * 2] = ui_loop_counter;
  ui_event_buffer[1] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)(ui_event_id0 + (ui_bool_result + 1) * 2 + (uint)ui_bool_result) >> 2);
  ui_callback[ui_event_type] = ui_loop_counter;
  ui_callback[ui_event_type * 2 + 1] = ui_loop_counter;
  ui_event_buffer[2] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)(ui_event_id0 * 2 + (uint)ui_bool_result + ui_bool_result + 2) >> 2);
  *ui_callback = ui_loop_counter;
  ui_callback[ui_event_type + 1] = ui_loop_counter;
  ui_callback[ui_event_type * 2 + 2] = ui_loop_counter;
  ui_event_buffer[3] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)((uint)ui_bool_result + (uint)ui_bool_result * 2 + ui_event_id0 + 2) >> 2);
  ui_callback[1] = ui_loop_counter;
  ui_callback[ui_event_type + 2] = ui_loop_counter;
  ui_callback[ui_event_type * 2 + 3] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)((uint)ui_bool_result + (uint)ui_bool_result * 2 + ui_bool_result + 2) >> 2);
  ui_callback[2] = ui_loop_counter;
  ui_callback[ui_event_type + 3] = ui_loop_counter;
  ui_callback[3] = (char)((int)((uint)ui_bool_result + (uint)ui_bool_result * 2 + ui_bool_result + 2) >> 2);
  return ui_system_return_value;
}

void ui_system_enable_widget(uint8_t *ui_callback,longlong ui_event_type,byte *ui_event_data,byte *ui_event_flags)

{
  longlong ui_long_counter;
  byte *ui_boolean_pointer;
  uint8_t *ui_callback_ptr;
  byte *ui_boolean_pointer;
  uint8_t *ui_callback_ptr;
  longlong ui_event_index;
  
  ui_boolean_pointer = ui_event_data + -1;
  ui_callback_ptr = ui_callback + ui_event_type * 3;
  *ui_callback = (char)((int)((uint)*ui_boolean_pointer + *ui_event_flags + 1) >> 1);
  ui_event_index = 3;
  ui_boolean_pointer = ui_event_flags + 1;
  do {
    ui_callback_ptr[ui_event_type * -2] = (char)((int)((uint)*ui_boolean_pointer + ui_boolean_pointer[-1] + 1) >> 1);
    ui_callback_ptr[-ui_event_type] = (char)((int)((uint)ui_boolean_pointer[1] + *ui_boolean_pointer + 1) >> 1);
    *ui_callback_ptr = (char)((int)((uint)ui_boolean_pointer[1] + ui_boolean_pointer[2] + 1) >> 1);
    ui_callback_ptr[ui_event_type] = (char)((int)((uint)ui_boolean_pointer[2] + ui_boolean_pointer[3] + 1) >> 1);
    ui_callback_ptr[ui_event_type * 2] = (char)((int)(ui_boolean_pointer[3] + 1 + (uint)ui_boolean_pointer[4]) >> 1);
    ui_callback_ptr = ui_callback_ptr + ui_event_type * 5;
    ui_event_index = ui_event_index + -1;
    ui_boolean_pointer = ui_boolean_pointer + 5;
  } while (ui_event_index != 0);
  ui_callback_ptr = ui_callback + 1;
  ui_callback_ptr = ui_callback_ptr + ui_event_type * 2;
  ui_event_index = ui_component_angle_offset;
  *ui_callback_ptr = (char)((int)(*ui_event_data + 2 + (uint)*ui_boolean_pointer * 2 + (uint)*ui_event_flags) >> 2);
  ui_callback_ptr[ui_event_type] = (char)((int)(ui_event_flags[1] + 2 + (uint)*ui_event_flags * 2 + (uint)*ui_boolean_pointer) >> 2);
  do {
    *ui_callback_ptr = (char)((int)(ui_event_flags[2] + 2 + (uint)ui_event_flags[1] * 2 + (uint)*ui_event_flags) >> 2);
    ui_callback_ptr = ui_callback_ptr + ui_event_type;
    ui_event_index = ui_event_index + -1;
    ui_event_flags = ui_event_flags + 1;
  } while (ui_event_index != 0);
  ui_callback = ui_callback + 2;
  ui_event_index = ui_component_angle_offset;
  do {
    (ui_boolean_pointer + 1)[(longlong)ui_callback - (longlong)ui_event_data] =
         (byte)((int)(ui_boolean_pointer[2] + 2 + (uint)ui_boolean_pointer[1] * 2 + (uint)*ui_boolean_pointer) >> 2);
    ui_event_index = ui_event_index + -1;
    ui_boolean_pointer = ui_boolean_pointer + 1;
  } while (ui_event_index != 0);
  ui_event_index = UI_MAX_EVENT_FLAGS;
  do {
    ui_callback = ui_callback + ui_event_type;
    ui_long_counter = ui_component_angle_offset;
    ui_callback_ptr = ui_callback;
    do {
      *ui_callback_ptr = ui_callback_ptr[-2 - ui_event_type];
      ui_callback_ptr = ui_callback_ptr + 1;
      ui_long_counter = ui_long_counter + -1;
    } while (ui_long_counter != 0);
    ui_event_index = ui_event_index + -1;
  } while (ui_event_index != 0);
  return ui_system_return_value;
}

void ui_system_disable_widget(uint8_t *ui_callback,longlong ui_event_type,byte *ui_event_data,byte *ui_event_flags)

{
  byte *ui_boolean_flag;
  byte ui_bool_result;
  byte *ui_boolean_pointer;
  longlong ui_event_index;
  byte *ui_boolean_pointer;
  uint8_t *ui_callback_ptr;
  longlong ui_event_index;
  
  ui_boolean_pointer = ui_event_data + -1;
  ui_callback_ptr = ui_callback + ui_event_type;
  *ui_callback = (char)((int)((uint)*ui_boolean_pointer + *ui_event_flags + 1) >> 1);
  ui_event_index = UI_GUARD_CHECK_TYPE_2;
  ui_boolean_pointer = ui_event_flags + 1;
  do {
    ui_bool_result = *ui_boolean_pointer;
    ui_boolean_flag = ui_boolean_pointer + -1;
    ui_boolean_pointer = ui_boolean_pointer + 1;
    *ui_callback_ptr = (char)((int)(ui_bool_result + 1 + (uint)*ui_boolean_flag) >> 1);
    ui_callback_ptr = ui_callback_ptr + ui_event_type;
    ui_event_index = ui_event_index + -1;
  } while (ui_event_index != 0);
  ui_callback_ptr = ui_callback + 1;
  ui_callback_ptr = ui_callback_ptr + ui_event_type * 2;
  ui_event_index = UI_OFFSET_30;
  *ui_callback_ptr = (char)((int)(*ui_event_data + 2 + (uint)*ui_boolean_pointer * 2 + (uint)*ui_event_flags) >> 2);
  ui_callback_ptr[ui_event_type] = (char)((int)(ui_event_flags[1] + 2 + (uint)*ui_event_flags * 2 + (uint)*ui_boolean_pointer) >> 2);
  do {
    *ui_callback_ptr = (char)((int)(ui_event_flags[2] + 2 + (uint)ui_event_flags[1] * 2 + (uint)*ui_event_flags) >> 2);
    ui_callback_ptr = ui_callback_ptr + ui_event_type;
    ui_event_index = ui_event_index + -1;
    ui_event_flags = ui_event_flags + 1;
  } while (ui_event_index != 0);
  do {
    (ui_boolean_pointer + 1)[(longlong)(ui_callback + (2 - (longlong)ui_event_data))] =
         (byte)((int)(ui_boolean_pointer[2] + 2 + (uint)ui_boolean_pointer[1] * 2 + (uint)*ui_boolean_pointer) >> 2);
    ui_event_index = ui_event_index + -1;
    ui_boolean_pointer = ui_boolean_pointer + 1;
  } while (ui_event_index != 0);
  do {
    ui_event_index = UI_MAX_EVENT_FLAGS;
    ui_callback_ptr = ui_callback_ptr;
    do {
      ui_callback_ptr[ui_event_type + 1] = ui_callback_ptr[-1];
      ui_callback_ptr[ui_event_type + 2] = *ui_callback_ptr;
      ui_callback_ptr = ui_callback_ptr + 2;
      ui_event_index = ui_event_index + -1;
    } while (ui_event_index != 0);
    ui_callback_ptr = ui_callback_ptr + ui_event_type;
    ui_event_index = ui_event_index + -1;
  } while (ui_event_index != 0);
  return ui_system_return_value;
}

void ui_system_set_text(uint8_t *ui_callback,longlong ui_event_type,byte *ui_event_data,byte *ui_event_flags)

{
  uint8_t *ui_event_buffer;
  byte ui_bool_result;
  uint8_t ui_event_id0;
  
  ui_bool_result = *ui_event_flags;
  ui_bool_result = ui_event_data[-1];
  ui_bool_result = ui_event_flags[1];
  ui_bool_result = ui_event_flags[2];
  ui_bool_result = *ui_event_data;
  ui_bool_result = ui_event_flags[3];
  ui_bool_result = ui_event_data[1];
  ui_bool_result = ui_event_data[2];
  ui_event_buffer = ui_callback + ui_event_type * 3;
  ui_event_id0 = (uint8_t)((int)(ui_bool_result + 1 + (uint)ui_bool_result) >> 1);
  ui_callback[ui_event_type + 2] = ui_event_id0;
  *ui_callback = ui_event_id0;
  ui_event_id0 = (uint8_t)((int)(ui_bool_result + 1 + (uint)ui_bool_result) >> 1);
  ui_callback[ui_event_type * 2 + 2] = ui_event_id0;
  ui_callback[ui_event_type] = ui_event_id0;
  ui_event_id0 = (uint8_t)((int)(ui_bool_result + 1 + (uint)ui_bool_result) >> 1);
  ui_event_buffer[2] = ui_event_id0;
  ui_callback[ui_event_type * 2] = ui_event_id0;
  *ui_event_buffer = (char)((int)(ui_bool_result + 1 + (uint)ui_bool_result) >> 1);
  ui_callback[3] = (char)((int)((uint)ui_bool_result + (ui_bool_result + 1) * 2 + (uint)ui_bool_result) >> 2);
  ui_callback[2] = (char)((int)((uint)ui_bool_result + (ui_bool_result + 1) * 2 + (uint)ui_bool_result) >> 2);
  ui_event_id0 = (uint8_t)((int)((uint)ui_bool_result + (ui_bool_result + 1) * 2 + (uint)ui_bool_result) >> 2);
  ui_callback[ui_event_type + 3] = ui_event_id0;
  ui_callback[1] = ui_event_id0;
  ui_event_id0 = (uint8_t)((int)(ui_bool_result + 2 + (uint)ui_bool_result * 2 + (uint)ui_bool_result) >> 2);
  ui_callback[ui_event_type * 2 + 3] = ui_event_id0;
  ui_callback[ui_event_type + 1] = ui_event_id0;
  ui_event_id0 = (uint8_t)((int)((uint)ui_bool_result + (uint)ui_bool_result * 2 + ui_bool_result + 2) >> 2);
  ui_event_buffer[3] = ui_event_id0;
  ui_callback[ui_event_type * 2 + 1] = ui_event_id0;
  ui_event_buffer[1] = (char)((int)((uint)ui_bool_result * 2 + (uint)ui_bool_result + ui_bool_result + 2) >> 2);
  return ui_system_return_value;
}

void ui_system_get_text(uint8_t *ui_callback,longlong ui_event_type,byte *ui_event_data,byte *ui_event_flags)

{
  uint8_t *ui_event_buffer;
  longlong ui_event_index;
  uint8_t *ui_callback_ptr;
  
  *ui_callback = (char)((int)((uint)ui_event_data[-1] + *ui_event_flags + 1) >> 1);
  ui_callback[ui_event_type] = (char)((int)((uint)ui_event_flags[1] + *ui_event_flags + 1) >> 1);
  ui_callback[ui_event_type * 2] = (char)((int)((uint)ui_event_flags[1] + ui_event_flags[2] + 1) >> 1);
  ui_callback[ui_event_type * 3] = (char)((int)((uint)ui_event_flags[2] + ui_event_flags[3] + 1) >> 1);
  ui_callback[ui_event_type * 4] = (char)((int)((uint)ui_event_flags[3] + ui_event_flags[4] + 1) >> 1);
  ui_callback[ui_event_type * 5] = (char)((int)((uint)ui_event_flags[4] + ui_event_flags[5] + 1) >> 1);
  ui_callback[ui_event_type * 6] = (char)((int)((uint)ui_event_flags[5] + ui_event_flags[6] + 1) >> 1);
  ui_callback[ui_event_type * 7] = (char)((int)(ui_event_flags[6] + 1 + (uint)ui_event_flags[7]) >> 1);
  ui_callback[1] = (char)((int)(*ui_event_data + 2 + (uint)ui_event_data[-1] * 2 + (uint)*ui_event_flags) >> 2);
  ui_callback[ui_event_type + 1] = (char)((int)(ui_event_flags[1] + 2 + (uint)*ui_event_flags * 2 + (uint)ui_event_data[-1]) >> 2)
  ;
  ui_callback[ui_event_type * 2 + 1] =
       (char)((int)(*ui_event_flags + 2 + (uint)ui_event_flags[1] * 2 + (uint)ui_event_flags[2]) >> 2);
  ui_callback[ui_event_type * 3 + 1] =
       (char)((int)(ui_event_flags[1] + 2 + (uint)ui_event_flags[2] * 2 + (uint)ui_event_flags[3]) >> 2);
  ui_callback[ui_event_type * 4 + 1] =
       (char)((int)(ui_event_flags[4] + 2 + (uint)ui_event_flags[3] * 2 + (uint)ui_event_flags[2]) >> 2);
  ui_callback[ui_event_type * 5 + 1] =
       (char)((int)(ui_event_flags[5] + 2 + (uint)ui_event_flags[4] * 2 + (uint)ui_event_flags[3]) >> 2);
  ui_callback[ui_event_type * 6 + 1] =
       (char)((int)(ui_event_flags[4] + 2 + (uint)ui_event_flags[5] * 2 + (uint)ui_event_flags[6]) >> 2);
  ui_callback[ui_event_type * 7 + 1] =
       (char)((int)(ui_event_flags[7] + 2 + (uint)ui_event_flags[6] * 2 + (uint)ui_event_flags[5]) >> 2);
  ui_callback[2] = (char)((int)(ui_event_data[1] + 2 + (uint)*ui_event_data * 2 + (uint)ui_event_data[-1]) >> 2);
  ui_callback[3] = (char)((int)(*ui_event_data + 2 + (uint)ui_event_data[1] * 2 + (uint)ui_event_data[2]) >> 2);
  ui_callback[4] = (char)((int)(ui_event_data[1] + 2 + (uint)ui_event_data[2] * 2 + (uint)ui_event_data[3]) >> 2);
  ui_callback[5] = (char)((int)(ui_event_data[4] + 2 + (uint)ui_event_data[3] * 2 + (uint)ui_event_data[2]) >> 2);
  ui_callback[6] = (char)((int)(ui_event_data[5] + 2 + (uint)ui_event_data[4] * 2 + (uint)ui_event_data[3]) >> 2);
  ui_callback[7] = (char)((int)(ui_event_data[6] + 2 + (uint)ui_event_data[5] * 2 + (uint)ui_event_data[4]) >> 2);
  ui_callback_ptr = ui_callback + 2 + ui_event_type;
  ui_event_index = 7;
  ui_event_buffer = ui_callback_ptr + (-1 - ui_event_type);
  do {
    *ui_callback_ptr = ui_event_buffer[-1];
    ui_callback_ptr = ui_callback_ptr + ui_event_type;
    ui_event_buffer[ui_event_type + 2] = *ui_event_buffer;
    ui_event_buffer[ui_event_type + 3] = ui_event_buffer[1];
    ui_event_buffer[ui_event_type + 4] = ui_event_buffer[2];
    ui_event_buffer[ui_event_type + 5] = ui_event_buffer[3];
    ui_event_buffer[ui_event_type + 6] = ui_event_buffer[4];
    ui_event_buffer = ui_event_buffer + ui_event_type;
    ui_event_index = ui_event_index + -1;
  } while (ui_event_index != 0);
  return ui_system_return_value;
}

void ui_system_handle_drag_drop_manager(longlong ui_callback,longlong ui_event_type,uint64_t ui_event_data,longlong ui_event_flags)

{
  uint8_t *ui_event_buffer;
  longlong ui_event_index;
  byte *ui_boolean_pointer;
  uint8_t *ui_callback_ptr;
  longlong ui_event_index;
  
  ui_callback_ptr = (uint8_t *)(ui_callback + ui_event_type * 2);
  ui_event_index = 3;
  ui_boolean_pointer = (byte *)(ui_event_flags + 1);
  do {
    ui_callback_ptr[ui_event_type * -2] = (char)((int)((uint)*ui_boolean_pointer + ui_boolean_pointer[-1] + 1) >> 1);
    ui_callback_ptr[-ui_event_type] = (char)((int)((uint)*ui_boolean_pointer + ui_boolean_pointer[1] + 1) >> 1);
    *ui_callback_ptr = (char)((int)((uint)ui_boolean_pointer[1] + ui_boolean_pointer[2] + 1) >> 1);
    ui_callback_ptr[ui_event_type] = (char)((int)((uint)ui_boolean_pointer[2] + ui_boolean_pointer[3] + 1) >> 1);
    ui_callback_ptr[ui_event_type * 2] = (char)((int)(ui_boolean_pointer[3] + 1 + (uint)ui_boolean_pointer[4]) >> 1);
    ui_callback_ptr = ui_callback_ptr + ui_event_type * 5;
    ui_event_index = ui_event_index + -1;
    ui_boolean_pointer = ui_boolean_pointer + 5;
  } while (ui_event_index != 0);
  ui_event_index = ui_event_type * UI_MAX_EVENT_FLAGS;
  ui_callback_ptr = (uint8_t *)(ui_callback + 1);
  ui_event_index = ui_component_angle_offset;
  *(uint8_t *)(ui_event_index + ui_callback) = *(uint8_t *)(ui_event_flags + UI_MAX_EVENT_FLAGS);
  ui_boolean_pointer = (byte *)(ui_event_flags + 2);
  do {
    *ui_callback_ptr = (char)((int)(ui_boolean_pointer[-2] + 2 + (uint)ui_boolean_pointer[-1] * 2 + (uint)*ui_boolean_pointer) >> 2);
    ui_callback_ptr = ui_callback_ptr + ui_event_type;
    ui_event_index = ui_event_index + -1;
    ui_boolean_pointer = ui_boolean_pointer + 1;
  } while (ui_event_index != 0);
  *(char *)(ui_event_type * ui_component_angle_offset + 1 + ui_callback) =
       (char)((int)(*(byte *)(ui_event_flags + ui_component_angle_offset) + 2 +
                   (uint)*(byte *)(ui_event_flags + UI_MAX_EVENT_FLAGS) + (uint)*(byte *)(ui_event_flags + UI_MAX_EVENT_FLAGS) * 2) >> 2);
  *(uint8_t *)(ui_event_index + 1 + ui_callback) = *(uint8_t *)(ui_event_flags + UI_MAX_EVENT_FLAGS);
  ui_event_index = 0;
  do {
    *(uint8_t *)(ui_event_index + ui_callback + 2 + ui_event_index) = *(uint8_t *)(ui_event_flags + UI_MAX_EVENT_FLAGS);
    ui_event_index = ui_event_index + 1;
  } while (ui_event_index < ui_component_angle_offset);
  ui_event_index = ui_component_angle_offset;
  ui_callback_ptr = (uint8_t *)(ui_event_type * ui_component_angle_offset + ui_callback + 2);
  do {
    ui_event_index = ui_component_angle_offset;
    ui_event_buffer = ui_callback_ptr;
    do {
      *ui_event_buffer = ui_event_buffer[ui_event_type + -2];
      ui_event_buffer = ui_event_buffer + 1;
      ui_event_index = ui_event_index + -1;
    } while (ui_event_index != 0);
    ui_callback_ptr = ui_callback_ptr + -ui_event_type;
    ui_event_index = ui_event_index + -1;
  } while (-1 < ui_event_index);
  return ui_system_return_value;
}

void ui_system_process_clipboard_info(uint8_t *ui_callback,longlong ui_event_type,uint64_t ui_event_data,byte *ui_event_flags)

{
  byte *ui_boolean_flag;
  longlong ui_event_index;
  uint8_t *ui_callback_ptr;
  longlong ui_event_index;
  
  ui_event_index = UI_GUARD_CHECK_TYPE_2;
  ui_boolean_flag = ui_event_flags;
  ui_callback_ptr = ui_callback;
  do {
    *ui_callback_ptr = (char)((int)(*ui_boolean_flag + 1 + (uint)ui_boolean_flag[1]) >> 1);
    ui_callback_ptr = ui_callback_ptr + ui_event_type;
    ui_event_index = ui_event_index + -1;
    ui_boolean_flag = ui_boolean_flag + 1;
  } while (ui_event_index != 0);
  ui_callback_ptr = ui_callback + 1;
  ui_event_index = ui_event_type * UI_GUARD_CHECK_TYPE_2;
  ui_event_index = UI_OFFSET_30;
  ui_callback[ui_event_index] = ui_event_flags[UI_GUARD_CHECK_TYPE_2];
  ui_boolean_flag = ui_event_flags + 2;
  ui_callback_ptr = ui_callback_ptr;
  do {
    *ui_callback_ptr = (char)((int)(ui_boolean_flag[-2] + 2 + (uint)ui_boolean_flag[-1] * 2 + (uint)*ui_boolean_flag) >> 2);
    ui_callback_ptr = ui_callback_ptr + ui_event_type;
    ui_event_index = ui_event_index + -1;
    ui_boolean_flag = ui_boolean_flag + 1;
  } while (ui_event_index != 0);
  ui_callback_ptr[ui_event_type * UI_OFFSET_30] =
       (char)((int)(ui_event_flags[UI_OFFSET_30] + 2 + (uint)ui_event_flags[UI_GUARD_CHECK_TYPE_2] + (uint)ui_event_flags[UI_GUARD_CHECK_TYPE_2] * 2) >> 2);
  ui_event_index = UI_MAX_EVENT_FLAGS;
  ui_callback_ptr[ui_event_index] = ui_event_flags[UI_GUARD_CHECK_TYPE_2];
  ui_boolean_flag = ui_callback + ui_event_index + 3;
  do {
    ui_boolean_flag[-1] = ui_event_flags[UI_GUARD_CHECK_TYPE_2];
    *ui_boolean_flag = ui_event_flags[UI_GUARD_CHECK_TYPE_2];
    ui_event_index = ui_event_index + -1;
    ui_boolean_flag = ui_boolean_flag + 2;
  } while (ui_event_index != 0);
  ui_callback = ui_callback + ui_event_type * UI_OFFSET_30 + 2;
  do {
    ui_event_index = UI_MAX_EVENT_FLAGS;
    ui_callback_ptr = ui_callback;
    do {
      *ui_callback_ptr = ui_callback_ptr[ui_event_type + -2];
      ui_callback_ptr[1] = ui_callback_ptr[ui_event_type + -1];
      ui_callback_ptr = ui_callback_ptr + 2;
      ui_event_index = ui_event_index + -1;
    } while (ui_event_index != 0);
    ui_callback = ui_callback + -ui_event_type;
    ui_event_index = ui_event_index + -1;
  } while (-1 < ui_event_index);
  return ui_system_return_value;
}

void ui_system_manage_resource_storage(uint8_t *ui_callback,longlong ui_event_type,uint64_t ui_event_data,byte *ui_event_flags)

{
  byte boolean_flag;
  byte ui_bool_result;
  uint8_t ui_loop_counter;
  uint ui_loop_counter;
  
  boolean_flag = ui_event_flags[2];
  ui_loop_counter = (uint)boolean_flag;
  ui_bool_result = ui_event_flags[1];
  ui_bool_result = *ui_event_flags;
  ui_bool_result = ui_event_flags[3];
  *ui_callback = (char)((int)(ui_bool_result + 1 + (uint)ui_bool_result) >> 1);
  ui_loop_counter = (uint8_t)((int)(ui_bool_result + 1 + (uint)boolean_flag) >> 1);
  ui_callback[ui_event_type] = ui_loop_counter;
  ui_callback[2] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)(boolean_flag + 1 + (uint)ui_bool_result) >> 1);
  ui_callback[ui_event_type * 2] = ui_loop_counter;
  ui_callback[ui_event_type + 2] = ui_loop_counter;
  ui_callback[1] = (char)((int)(ui_temp_buffer + (ui_bool_result + 1) * 2 + (uint)ui_bool_result) >> 2);
  ui_loop_counter = (uint8_t)((int)((uint)ui_bool_result + (ui_loop_counter + 1) * 2 + (uint)ui_bool_result) >> 2);
  ui_callback[ui_event_type + 1] = ui_loop_counter;
  ui_callback[3] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)(ui_temp_buffer + (ui_bool_result + 1) * 2 + (uint)ui_bool_result) >> 2);
  ui_callback[ui_event_type * 2 + 1] = ui_loop_counter;
  ui_callback[ui_event_type + 3] = ui_loop_counter;
  ui_callback[ui_event_type * 3 + 3] = ui_bool_result;
  ui_callback[ui_event_type * 3 + 2] = ui_bool_result;
  ui_callback[ui_event_type * 3 + 1] = ui_bool_result;
  ui_callback[ui_event_type * 3] = ui_bool_result;
  ui_callback[ui_event_type * 2 + 2] = ui_bool_result;
  ui_callback[ui_event_type * 2 + 3] = ui_bool_result;
  return ui_system_return_value;
}

void ui_system_handle_memory_allocation(uint8_t *ui_callback,longlong ui_event_type,uint64_t ui_event_data,byte *ui_event_flags)

{
  uint8_t *ui_event_buffer;
  longlong ui_event_index;
  
  *ui_callback = (char)((int)((uint)*ui_event_flags + ui_event_flags[1] + 1) >> 1);
  ui_event_buffer = ui_callback + 1;
  ui_callback[ui_event_type] = (char)((int)(ui_event_flags[2] + 1 + (uint)ui_event_flags[1]) >> 1);
  ui_callback[ui_event_type * 2] = (char)((int)((uint)ui_event_flags[3] + ui_event_flags[2] + 1) >> 1);
  ui_callback[ui_event_type * 3] = (char)((int)((uint)ui_event_flags[3] + ui_event_flags[4] + 1) >> 1);
  ui_callback[ui_event_type * 4] = (char)((int)((uint)ui_event_flags[4] + ui_event_flags[5] + 1) >> 1);
  ui_callback[ui_event_type * 5] = (char)((int)((uint)ui_event_flags[5] + ui_event_flags[6] + 1) >> 1);
  ui_callback[ui_event_type * 6] = (char)((int)((uint)ui_event_flags[6] + ui_event_flags[7] + 1) >> 1);
  ui_event_index = ui_event_type * 7;
  ui_callback[ui_event_index] = ui_event_flags[7];
  *ui_event_buffer = (char)((int)((uint)ui_event_flags[2] + (ui_event_flags[1] + 1) * 2 + (uint)*ui_event_flags) >> 2);
  ui_event_buffer[ui_event_type] = (char)((int)((uint)ui_event_flags[1] + (ui_event_flags[2] + 1) * 2 + (uint)ui_event_flags[3]) >> 2);
  ui_event_buffer[ui_event_type * 2] =
       (char)((int)((uint)ui_event_flags[2] + (ui_event_flags[3] + 1) * 2 + (uint)ui_event_flags[4]) >> 2);
  ui_event_buffer[ui_event_type * 3] =
       (char)((int)((uint)ui_event_flags[5] + (ui_event_flags[4] + 1) * 2 + (uint)ui_event_flags[3]) >> 2);
  ui_event_buffer[ui_event_type * 4] =
       (char)((int)((uint)ui_event_flags[6] + (ui_event_flags[5] + 1) * 2 + (uint)ui_event_flags[4]) >> 2);
  ui_event_buffer[ui_event_type * 5] =
       (char)((int)((uint)ui_event_flags[7] + (ui_event_flags[6] + 1) * 2 + (uint)ui_event_flags[5]) >> 2);
  ui_event_buffer[ui_event_type * 6] = (char)((int)(ui_event_flags[6] + 2 + (uint)ui_event_flags[7] + (uint)ui_event_flags[7] * 2) >> 2)
  ;
  ui_event_index = 6;
  ui_event_buffer[ui_event_index] = ui_event_flags[7];
  ui_callback[ui_event_index + 2] = ui_event_flags[7];
  ui_callback[ui_event_index + 3] = ui_event_flags[7];
  ui_callback[ui_event_index + 4] = ui_event_flags[7];
  ui_callback[ui_event_index + 5] = ui_event_flags[7];
  ui_callback[ui_event_index + 6] = ui_event_flags[7];
  ui_callback[ui_event_index + 7] = ui_event_flags[7];
  ui_callback = ui_callback + ui_event_index + 1;
  do {
    ui_callback[1 - ui_event_type] = ui_callback[-1];
    ui_callback[2 - ui_event_type] = *ui_callback;
    ui_callback[3 - ui_event_type] = ui_callback[1];
    ui_callback[4 - ui_event_type] = ui_callback[2];
    ui_callback[5 - ui_event_type] = ui_callback[3];
    ui_callback[6 - ui_event_type] = ui_callback[4];
    ui_callback = ui_callback + -ui_event_type;
    ui_event_index = ui_event_index + -1;
  } while (-1 < ui_event_index);
  return ui_system_return_value;
}

void ui_system_update_timer_info(longlong ui_callback,longlong ui_event_type,longlong ui_event_data)

{
  byte *ui_boolean_flag;
  byte *ui_boolean_pointer;
  uint8_t ui_loop_counter;
  byte ui_bool_result;
  byte *ui_boolean_pointer;
  longlong ui_event_index;
  
  ui_loop_counter = *(uint8_t *)(ui_event_data + UI_MAX_EVENT_FLAGS);
  ui_boolean_pointer = (byte *)(ui_event_data + 2);
  ui_event_index = UI_MAX_EVENT_FLAGS;
  do {
    ui_boolean_flag = ui_boolean_pointer + -1;
    ui_boolean_pointer = ui_boolean_pointer + -2;
    ui_bool_result = *ui_boolean_pointer;
    ui_boolean_pointer = ui_boolean_pointer + 1;
    ui_boolean_pointer[(ui_callback - ui_event_data) + -3] =
         (byte)((int)((uint)*ui_boolean_pointer + (*ui_boolean_flag + 1) * 2 + (uint)ui_bool_result) >> 2);
    ui_event_index = ui_event_index + -1;
  } while (ui_event_index != 0);
  *(uint8_t *)(ui_callback + UI_MAX_EVENT_FLAGS) = ui_loop_counter;
  memcpy(ui_callback + ui_event_type,ui_callback + 1,ui_component_angle_offset);
}

void ui_system_monitor_performance(longlong ui_callback,longlong ui_event_type,longlong ui_event_data)

{
  byte *ui_boolean_flag;
  byte *ui_boolean_pointer;
  uint8_t ui_loop_counter;
  byte ui_bool_result;
  byte *ui_boolean_pointer;
  longlong ui_event_index;
  
  ui_loop_counter = *(uint8_t *)(ui_event_data + UI_GUARD_CHECK_TYPE_2);
  ui_boolean_pointer = (byte *)(ui_event_data + 2);
  ui_event_index = UI_GUARD_CHECK_TYPE_2;
  do {
    ui_boolean_flag = ui_boolean_pointer + -1;
    ui_boolean_pointer = ui_boolean_pointer + -2;
    ui_bool_result = *ui_boolean_pointer;
    ui_boolean_pointer = ui_boolean_pointer + 1;
    ui_boolean_pointer[(ui_callback - ui_event_data) + -3] =
         (byte)((int)((uint)*ui_boolean_pointer + (*ui_boolean_flag + 1) * 2 + (uint)ui_bool_result) >> 2);
    ui_event_index = ui_event_index + -1;
  } while (ui_event_index != 0);
  *(uint8_t *)(ui_callback + UI_GUARD_CHECK_TYPE_2) = ui_loop_counter;
  memcpy(ui_callback + ui_event_type,ui_callback + 1,UI_OFFSET_30);
}

void ui_system_handle_debug_panel(uint8_t *ui_callback,longlong ui_event_type,byte *ui_event_data)

{
  uint8_t *ui_event_buffer;
  byte ui_bool_result;
  uint8_t ui_loop_counter;
  uint ui_loop_counter;
  
  ui_bool_result = ui_event_data[4];
  ui_loop_counter = (uint)ui_event_data[3];
  ui_loop_counter = (uint)ui_event_data[5];
  ui_bool_result = ui_event_data[6];
  ui_bool_result = ui_event_data[1];
  ui_bool_result = ui_event_data[2];
  ui_bool_result = ui_event_data[7];
  *ui_callback = (char)((int)((uint)*ui_event_data + (uint)ui_bool_result + (ui_bool_result + 1) * 2) >> 2);
  ui_loop_counter = (uint8_t)((int)(ui_temp_buffer + (ui_bool_result + 1) * 2 + (uint)ui_bool_result) >> 2);
  ui_callback[ui_event_type] = ui_loop_counter;
  ui_callback[1] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)((uint)ui_bool_result + (ui_loop_counter + 1) * 2 + (uint)ui_bool_result) >> 2);
  ui_callback[ui_event_type * 2] = ui_loop_counter;
  ui_callback[ui_event_type + 1] = ui_loop_counter;
  ui_event_buffer = ui_callback + ui_event_type * 3;
  ui_callback[2] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)(ui_temp_buffer + (ui_bool_result + 1) * 2 + ui_loop_counter) >> 2);
  *ui_event_buffer = ui_loop_counter;
  ui_callback[ui_event_type * 2 + 1] = ui_loop_counter;
  ui_callback[ui_event_type + 2] = ui_loop_counter;
  ui_callback[3] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)(ui_temp_buffer * 2 + (uint)ui_bool_result + ui_bool_result + 2) >> 2);
  ui_event_buffer[1] = ui_loop_counter;
  ui_callback[ui_event_type * 2 + 2] = ui_loop_counter;
  ui_callback[ui_event_type + 3] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)((uint)ui_bool_result + (uint)ui_bool_result * 2 + ui_loop_counter + 2) >> 2);
  ui_event_buffer[2] = ui_loop_counter;
  ui_callback[ui_event_type * 2 + 3] = ui_loop_counter;
  ui_event_buffer[3] = ui_bool_result;
  return ui_system_return_value;
}

void ui_system_process_log_viewer(uint8_t *ui_callback,longlong ui_event_type,byte *ui_event_data)

{
  byte boolean_flag;
  
  boolean_flag = ui_event_data[7];
  *ui_callback = (char)((int)(ui_event_data[2] + 2 + (uint)ui_event_data[1] * 2 + (uint)*ui_event_data) >> 2);
  ui_callback[1] = (char)((int)(ui_event_data[1] + 2 + (uint)ui_event_data[2] * 2 + (uint)ui_event_data[3]) >> 2);
  ui_callback[2] = (char)((int)(ui_event_data[2] + 2 + (uint)ui_event_data[3] * 2 + (uint)ui_event_data[4]) >> 2);
  ui_callback[3] = (char)((int)(ui_event_data[5] + 2 + (uint)ui_event_data[4] * 2 + (uint)ui_event_data[3]) >> 2);
  ui_callback[4] = (char)((int)(ui_event_data[6] + 2 + (uint)ui_event_data[5] * 2 + (uint)ui_event_data[4]) >> 2);
  ui_callback[5] = (char)((int)(ui_event_data[5] + 2 + (uint)ui_event_data[6] * 2 + (uint)ui_event_data[7]) >> 2);
  ui_callback[6] = (char)((int)(ui_event_data[8] + 2 + (uint)ui_event_data[7] * 2 + (uint)ui_event_data[6]) >> 2);
  ui_callback[7] = boolean_flag;
  memcpy(ui_callback + ui_event_type,ui_callback + 1,6);
}

void ui_system_handle_inspector_panel(uint8_t *ui_callback,longlong ui_event_type,byte *ui_event_data)

{
  uint8_t *ui_event_buffer;
  byte ui_bool_result;
  uint8_t ui_loop_counter;
  uint ui_loop_counter;
  
  ui_bool_result = ui_event_data[4];
  ui_bool_result = ui_event_data[5];
  ui_loop_counter = (uint)ui_event_data[3];
  ui_bool_result = ui_event_data[6];
  ui_bool_result = ui_event_data[7];
  ui_bool_result = ui_event_data[1];
  ui_bool_result = ui_event_data[2];
  *ui_callback = (char)((int)((uint)*ui_event_data + (uint)ui_bool_result + (ui_bool_result + 1) * 2) >> 2);
  ui_loop_counter = (uint8_t)((int)(ui_temp_buffer + (ui_bool_result + 1) * 2 + (uint)ui_bool_result) >> 2);
  ui_callback[ui_event_type] = ui_loop_counter;
  ui_callback[1] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)((uint)ui_bool_result + (ui_loop_counter + 1) * 2 + (uint)ui_bool_result) >> 2);
  ui_callback[ui_event_type * 2] = ui_loop_counter;
  ui_callback[ui_event_type + 1] = ui_loop_counter;
  ui_event_buffer = ui_callback + ui_event_type * 3;
  ui_callback[2] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)((uint)ui_bool_result * 2 + 2 + (uint)ui_bool_result + ui_loop_counter) >> 2);
  *ui_event_buffer = ui_loop_counter;
  ui_callback[ui_event_type * 2 + 1] = ui_loop_counter;
  ui_callback[ui_event_type + 2] = ui_loop_counter;
  ui_callback[3] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)((uint)ui_bool_result + (uint)ui_bool_result * 2 + ui_bool_result + 2) >> 2);
  ui_event_buffer[1] = ui_loop_counter;
  ui_callback[ui_event_type * 2 + 2] = ui_loop_counter;
  ui_callback[ui_event_type + 3] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)((uint)ui_bool_result + (uint)ui_bool_result * 2 + ui_bool_result + 2) >> 2);
  ui_event_buffer[2] = ui_loop_counter;
  ui_callback[ui_event_type * 2 + 3] = ui_loop_counter;
  ui_event_buffer[3] = (char)((int)((uint)ui_bool_result + (uint)ui_bool_result * 2 + ui_bool_result + 2) >> 2);
  return ui_system_return_value;
}

void ui_system_manage_inspector_data(longlong ui_callback,longlong ui_event_type,longlong ui_event_data)

{
  byte *ui_boolean_flag;
  byte *ui_boolean_pointer;
  longlong ui_event_index;
  
  ui_event_index = UI_EVENT_FLAG_OFFSET;
  ui_boolean_pointer = (byte *)(ui_event_data + 1);
  do {
    ui_boolean_flag = ui_boolean_pointer + 1;
    ui_boolean_flag[(ui_callback - ui_event_data) + -2] = (byte)((int)(*ui_boolean_pointer + 1 + (uint)ui_boolean_pointer[-1]) >> 1);
    ui_boolean_flag[(ui_callback - ui_event_data) + ui_event_type + -2] =
         (byte)((int)(*ui_boolean_flag + 2 + (uint)*ui_boolean_pointer * 2 + (uint)ui_boolean_pointer[-1]) >> 2);
    ui_event_index = ui_event_index + -1;
    ui_boolean_pointer = ui_boolean_flag;
  } while (ui_event_index != 0);
  memcpy(ui_event_type * 2 + ui_callback,ui_callback + 1,ui_component_angle_offset,ui_boolean_flag,ui_component_angle_offset,7,-ui_callback,ui_event_type - ui_callback);
}

void ui_apply_style(longlong ui_callback,longlong ui_event_type,longlong ui_event_data)

{
  byte *ui_boolean_flag;
  byte *ui_boolean_pointer;
  longlong ui_event_index;
  
  ui_event_index = UI_OFFSET_32;
  ui_boolean_pointer = (byte *)(ui_event_data + 1);
  do {
    ui_boolean_flag = ui_boolean_pointer + 1;
    ui_boolean_flag[(ui_callback - ui_event_data) + -2] = (byte)((int)(*ui_boolean_pointer + 1 + (uint)ui_boolean_pointer[-1]) >> 1);
    ui_boolean_flag[(ui_callback - ui_event_data) + ui_event_type + -2] =
         (byte)((int)(*ui_boolean_flag + 2 + (uint)*ui_boolean_pointer * 2 + (uint)ui_boolean_pointer[-1]) >> 2);
    ui_event_index = ui_event_index + -1;
    ui_boolean_pointer = ui_boolean_flag;
  } while (ui_event_index != 0);
  memcpy(ui_event_type * 2 + ui_callback,ui_callback + 1,UI_OFFSET_30,ui_boolean_flag,UI_OFFSET_30,UI_MAX_EVENT_FLAGS,-ui_callback,ui_event_type - ui_callback);
}

void ui_system_process_image_cache(uint8_t *ui_callback,longlong ui_event_type,byte *ui_event_data)

{
  uint8_t *ui_event_buffer;
  byte ui_bool_result;
  uint8_t ui_loop_counter;
  
  ui_bool_result = ui_event_data[2];
  ui_bool_result = ui_event_data[3];
  ui_bool_result = ui_event_data[4];
  ui_bool_result = ui_event_data[1];
  ui_bool_result = ui_event_data[5];
  ui_bool_result = *ui_event_data;
  ui_bool_result = ui_event_data[6];
  *ui_callback = (char)((int)(ui_bool_result + 1 + (uint)ui_bool_result) >> 1);
  ui_loop_counter = (uint8_t)((int)(ui_bool_result + 1 + (uint)ui_bool_result) >> 1);
  ui_callback[ui_event_type * 2] = ui_loop_counter;
  ui_callback[1] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)(ui_bool_result + 1 + (uint)ui_bool_result) >> 1);
  ui_callback[ui_event_type * 2 + 1] = ui_loop_counter;
  ui_callback[2] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)(ui_bool_result + 1 + (uint)ui_bool_result) >> 1);
  ui_callback[ui_event_type * 2 + 2] = ui_loop_counter;
  ui_callback[3] = ui_loop_counter;
  ui_callback[ui_event_type * 2 + 3] = (char)((int)(ui_bool_result + 1 + (uint)ui_bool_result) >> 1);
  ui_callback[ui_event_type] = (char)((int)((uint)ui_bool_result + (ui_bool_result + 1) * 2 + (uint)ui_bool_result) >> 2);
  ui_event_buffer = ui_callback + ui_event_type * 3;
  ui_loop_counter = (uint8_t)((int)((uint)ui_bool_result + (ui_bool_result + 1) * 2 + (uint)ui_bool_result) >> 2);
  *ui_event_buffer = ui_loop_counter;
  ui_callback[ui_event_type + 1] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)((uint)ui_bool_result + (uint)ui_bool_result * 2 + ui_bool_result + 2) >> 2);
  ui_event_buffer[1] = ui_loop_counter;
  ui_callback[ui_event_type + 2] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)((uint)ui_bool_result * 2 + (uint)ui_bool_result + ui_bool_result + 2) >> 2);
  ui_event_buffer[2] = ui_loop_counter;
  ui_callback[ui_event_type + 3] = ui_loop_counter;
  ui_event_buffer[3] = (char)((int)((uint)ui_bool_result + (uint)ui_bool_result * 2 + ui_bool_result + 2) >> 2);
  return ui_system_return_value;
}

void ui_system_handle_sound_manager(uint8_t *ui_callback,longlong ui_event_type,byte *ui_event_data)

{
  byte boolean_flag;
  
  boolean_flag = *ui_event_data;
  *ui_callback = (char)((int)(ui_event_data[1] + 1 + (uint)boolean_flag) >> 1);
  ui_callback[ui_event_type] = (char)((int)(ui_event_data[2] + 2 + (uint)ui_event_data[1] * 2 + (uint)*ui_event_data) >> 2);
  ui_callback[1] = (char)((int)((uint)ui_event_data[1] + ui_event_data[2] + 1) >> 1);
  ui_callback[ui_event_type + 1] =
       (char)((int)((uint)ui_event_data[3] + (ui_event_data[2] + 1) * 2 + (uint)ui_event_data[1]) >> 2);
  ui_callback[2] = (char)((int)((uint)ui_event_data[3] + ui_event_data[2] + 1) >> 1);
  ui_callback[ui_event_type + 2] =
       (char)((int)((uint)ui_event_data[2] + (ui_event_data[3] + 1) * 2 + (uint)ui_event_data[4]) >> 2);
  ui_callback[3] = (char)((int)((uint)ui_event_data[3] + ui_event_data[4] + 1) >> 1);
  ui_callback[ui_event_type + 3] =
       (char)((int)((uint)ui_event_data[5] + (ui_event_data[4] + 1) * 2 + (uint)ui_event_data[3]) >> 2);
  ui_callback[4] = (char)((int)((uint)ui_event_data[4] + ui_event_data[5] + 1) >> 1);
  ui_callback[ui_event_type + 4] =
       (char)((int)((uint)ui_event_data[6] + (ui_event_data[5] + 1) * 2 + (uint)ui_event_data[4]) >> 2);
  ui_callback[5] = (char)((int)((uint)ui_event_data[5] + ui_event_data[6] + 1) >> 1);
  ui_callback[ui_event_type + 5] =
       (char)((int)((uint)ui_event_data[5] + (ui_event_data[6] + 1) * 2 + (uint)ui_event_data[7]) >> 2);
  ui_callback[6] = (char)((int)((uint)ui_event_data[7] + ui_event_data[6] + 1) >> 1);
  ui_callback[ui_event_type + 6] =
       (char)((int)((uint)ui_event_data[6] + (ui_event_data[7] + 1) * 2 + (uint)ui_event_data[8]) >> 2);
  ui_callback[7] = (char)((int)(ui_event_data[7] + 1 + (uint)ui_event_data[8]) >> 1);
  ui_callback[ui_event_type + 7] =
       (char)((int)(ui_event_data[9] + 2 + (uint)ui_event_data[8] * 2 + (uint)ui_event_data[7]) >> 2);
  memcpy(ui_callback + ui_event_type * 2,ui_callback + 1,6,boolean_flag,3,-(longlong)ui_callback,ui_event_type - (longlong)ui_callback,
         ui_event_type * 2);
}

void ui_system_process_effect_system(uint8_t *ui_callback,longlong ui_event_type,byte *ui_event_data)

{
  uint8_t *ui_event_buffer;
  byte ui_bool_result;
  uint8_t ui_event_id0;
  
  ui_bool_result = ui_event_data[2];
  ui_bool_result = ui_event_data[3];
  ui_bool_result = ui_event_data[4];
  ui_bool_result = ui_event_data[1];
  ui_bool_result = ui_event_data[5];
  ui_bool_result = *ui_event_data;
  ui_bool_result = ui_event_data[6];
  ui_bool_result = ui_event_data[7];
  *ui_callback = (char)((int)(ui_bool_result + 1 + (uint)ui_bool_result) >> 1);
  ui_event_id0 = (uint8_t)((int)(ui_bool_result + 1 + (uint)ui_bool_result) >> 1);
  ui_callback[ui_event_type * 2] = ui_event_id0;
  ui_callback[1] = ui_event_id0;
  ui_event_id0 = (uint8_t)((int)(ui_bool_result + 1 + (uint)ui_bool_result) >> 1);
  ui_callback[ui_event_type * 2 + 1] = ui_event_id0;
  ui_callback[2] = ui_event_id0;
  ui_event_id0 = (uint8_t)((int)(ui_bool_result + 1 + (uint)ui_bool_result) >> 1);
  ui_callback[ui_event_type * 2 + 2] = ui_event_id0;
  ui_callback[3] = ui_event_id0;
  ui_callback[ui_event_type * 2 + 3] = (char)((int)((uint)ui_bool_result + (ui_bool_result + 1) * 2 + (uint)ui_bool_result) >> 2);
  ui_callback[ui_event_type] = (char)((int)((uint)ui_bool_result + (ui_bool_result + 1) * 2 + (uint)ui_bool_result) >> 2);
  ui_event_buffer = ui_callback + ui_event_type * 3;
  ui_event_id0 = (uint8_t)((int)((uint)ui_bool_result * 2 + 2 + (uint)ui_bool_result + (uint)ui_bool_result) >> 2);
  *ui_event_buffer = ui_event_id0;
  ui_callback[ui_event_type + 1] = ui_event_id0;
  ui_event_id0 = (uint8_t)((int)((uint)ui_bool_result + (uint)ui_bool_result * 2 + ui_bool_result + 2) >> 2);
  ui_event_buffer[1] = ui_event_id0;
  ui_callback[ui_event_type + 2] = ui_event_id0;
  ui_event_id0 = (uint8_t)((int)((uint)ui_bool_result + (uint)ui_bool_result * 2 + ui_bool_result + 2) >> 2);
  ui_event_buffer[2] = ui_event_id0;
  ui_callback[ui_event_type + 3] = ui_event_id0;
  ui_event_buffer[3] = (char)((int)((uint)ui_bool_result + (uint)ui_bool_result * 2 + ui_bool_result + 2) >> 2);
  return ui_system_return_value;
}

void ui_system_manage_mesh_cache(uint64_t ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,uint8_t *ui_event_flags)

{
  memset(ui_callback,*ui_event_flags,UI_EVENT_FLAG_OFFSET);
}

void ui_system_handle_lighting_system(uint64_t ui_callback,uint64_t ui_event_type,uint64_t ui_event_data,uint8_t *ui_event_flags)

{
  memset(ui_callback,*ui_event_flags,UI_OFFSET_32);
}

void ui_system_process_particle_system(uint8_t *ui_callback,longlong ui_event_type,longlong ui_event_data,byte *ui_event_flags)

{
  byte boolean_flag;
  byte ui_bool_result;
  uint8_t ui_loop_counter;
  uint ui_loop_counter;
  
  ui_loop_counter = (uint)ui_event_flags[2];
  boolean_flag = ui_event_flags[1];
  ui_bool_result = *ui_event_flags;
  ui_bool_result = ui_event_flags[3];
  ui_loop_counter = (uint8_t)((int)((uint)*(byte *)(ui_event_data + -1) + (uint)boolean_flag + (ui_bool_result + 1) * 2) >> 2);
  *ui_callback = ui_loop_counter;
  ui_callback[1] = ui_loop_counter;
  ui_callback[2] = ui_loop_counter;
  ui_callback[3] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)(ui_loop_counter + (boolean_flag + 1) * 2 + (uint)ui_bool_result) >> 2);
  ui_callback[ui_event_type] = ui_loop_counter;
  ui_callback[ui_event_type + 1] = ui_loop_counter;
  ui_callback[ui_event_type + 2] = ui_loop_counter;
  ui_callback[ui_event_type + 3] = ui_loop_counter;
  ui_loop_counter = (uint8_t)((int)((uint)ui_bool_result + (ui_loop_counter + 1) * 2 + (uint)boolean_flag) >> 2);
  ui_callback[ui_event_type * 2] = ui_loop_counter;
  ui_callback[ui_event_type * 2 + 1] = ui_loop_counter;
  ui_callback[ui_event_type * 2 + 2] = ui_loop_counter;
  ui_callback[ui_event_type * 2 + 3] = ui_loop_counter;
  ui_callback = ui_callback + ui_event_type * 3;
  ui_loop_counter = (uint8_t)((int)(ui_loop_counter + 2 + (uint)ui_bool_result * 2 + (uint)ui_bool_result) >> 2);
  *ui_callback = ui_loop_counter;
  ui_callback[1] = ui_loop_counter;
  ui_callback[2] = ui_loop_counter;
  ui_callback[3] = ui_loop_counter;
  return ui_system_return_value;
}

void ui_system_validate_effect_state(uint32_t *ui_callback,longlong ui_event_type,byte *ui_event_data)

{
  byte boolean_flag;
  byte ui_bool_result;
  uint ui_loop_counter;
  
  ui_loop_counter = (uint)ui_event_data[2];
  boolean_flag = ui_event_data[3];
  ui_bool_result = *ui_event_data;
  ui_bool_result = ui_event_data[1];
  ui_bool_result = ui_event_data[4];
  *(char *)ui_callback = (char)((int)((uint)ui_event_data[-1] + (uint)ui_bool_result + (ui_bool_result + 1) * 2) >> 2);
  *(char *)((longlong)ui_callback + 1) = (char)((int)(ui_temp_buffer + (ui_bool_result + 1) * 2 + (uint)ui_bool_result) >> 2);
  *(char *)((longlong)ui_callback + 2) = (char)((int)((uint)boolean_flag + (ui_loop_counter + 1) * 2 + (uint)ui_bool_result) >> 2)
  ;
  *(char *)((longlong)ui_callback + 3) = (char)((int)((uint)ui_bool_result + (uint)boolean_flag * 2 + ui_loop_counter + 2) >> 2);
  *(uint32_t *)((longlong)ui_callback + ui_event_type) = *ui_callback;
  *(uint32_t *)((longlong)ui_callback + ui_event_type * 2) = *ui_callback;
  *(uint32_t *)((longlong)ui_callback + ui_event_type * 3) = *ui_callback;
  return ui_system_return_value;
}

void ui_system_update_particle_effects(longlong ui_callback,uint64_t *ui_event_type,int ui_event_data)

{
  short *pshort_value;
  short *pui_component_value;
  uint64_t ui_loop_counter;
  uint8_t ui_temp_buffer [16];
  uint8_t ui_event_buffer_var [12];
  uint8_t aui_event_id1 [12];
  uint8_t aui_event_id_secondary [12];
  uint8_t aui_task_identifier [12];
  uint8_t aui_event_id_fourth [14];
  longlong long_counter5;
  longlong ui_loop_counter_primary;
  short *pshort_value7;
  short *pshort_value8;
  short *pshort_value9;
  short *pui_component_value;
  uint64_t *ui_task_index_pointer2;
  uint8_t (*pui_widget_data_buffer) [16];
  uint8_t (*pui_window_data_buffer) [14];
  uint8_t (*pui_theme_buffer_var) [16];
  longlong ui_event_index;
  uint64_t *ui_task_index_pointer9;
  short *pui_component_value;
  longlong ui_event_index;
  short ui_component;
  uint8_t ui_temp_buffer [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  short ui_component;
  short short_value13;
  short short_value16;
  short short_value19;
  short short_value20;
  short short_value23;
  short short_value26;
  short short_value29;
  uint8_t ui_temp_buffer [16];
  short short_value14;
  short short_value17;
  short short_value21;
  short short_value24;
  short short_value27;
  short short_value30;
  uint8_t ui_temp_buffer [16];
  short short_value15;
  short short_value18;
  short short_value22;
  short short_value25;
  short short_value28;
  short short_value31;
  uint8_t ui_temp_buffer [16];
  uint8_t ui_event_buffer_var [16];
  uint8_t aui_event_id10 [16];
  uint8_t aui_event_id11 [16];
  uint8_t aui_event_id12 [16];
  short short_value32;
  short short_value56;
  short short_value58;
  short short_value60;
  short short_value62;
  short short_value63;
  short short_value64;
  short short_value65;
  uint8_t aui_task_identifier3 [16];
  uint8_t aui_task_identifier4 [16];
  uint8_t aui_task_identifier5 [16];
  short short_value57;
  short short_value59;
  short short_value61;
  uint8_t aui_task_identifier6 [16];
  uint8_t aui_task_identifier7 [16];
  uint8_t aui_task_identifier8 [16];
  uint8_t aui_task_identifier9 [16];
  uint8_t aui_event_id_fourth0 [16];
  uint8_t aui_event_id_fourth1 [16];
  uint8_t aui_event_id_fourth5 [16];
  uint8_t aui_event_id_fourth6 [16];
  uint8_t aui_event_id_fourth7 [16];
  uint8_t aui_event_id_fourth8 [16];
  uint8_t aui_event_id_fourth9 [16];
  uint8_t aui_event_id_fifth0 [16];
  uint8_t aui_event_id_fifth1 [16];
  uint8_t aui_event_id_fifth2 [16];
  uint8_t aui_event_id_fifth5 [16];
  uint8_t aui_event_id66 [16];
  uint8_t aui_event_id67 [16];
  uint8_t aui_event_id71 [16];
  uint8_t aui_event_id72 [16];
  uint8_t aui_event_id73 [16];
  uint8_t aui_event_id74 [16];
  uint8_t aui_event_id75 [16];
  uint8_t ui_event_id_array_primary [16];
  uint8_t aui_event_id77 [16];
  uint8_t aui_event_id78 [16];
  uint8_t aui_event_id79 [16];
  uint8_t aui_event_id80 [16];
  uint8_t aui_event_id81 [16];
  uint8_t aui_event_id85 [16];
  uint8_t aui_event_id86 [16];
  uint8_t aui_event_id87 [16];
  uint8_t aui_event_id88 [16];
  uint8_t aui_event_id89 [16];
  uint8_t ui_temporary_buffer [16];
  uint8_t ui_temporary_buffer [12];
  uint8_t ui_temporary_buffer [16];
  uint8_t ui_task_processing_buffer [16];
  uint8_t ui_render_buffer_var [16];
  short ui_component;
  uint8_t ui_render_buffer_var [12];
  short ui_component;
  uint8_t ui_render_buffer_var [16];
  uint8_t ui_input_data_buffer [16];
  short ui_component;
  uint8_t ui_input_data_buffer [16];
  uint8_t ui_widget_data_buffer [16];
  uint8_t ui_window_data_buffer [16];
  short ui_component;
  uint8_t ui_theme_buffer_var [16];
  short ui_component;
  uint8_t ui_theme_buffer_var [16];
  uint8_t ui_font_data_buffer [16];
  uint8_t ui_task_index_array_primary1 [16];
  uint8_t ui_task_index_array_primary9 [12];
  uint8_t ui_system_shader_buffer_variable [16];
  uint8_t ui_system_layout_data_buffer [16];
  uint8_t ui_system_layout_data_buffer [12];
  uint8_t ui_system_layout_data_buffer [16];
  uint8_t ui_temporary_buffer [16];
  uint8_t ui_temp_buffer [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  uint8_t ui_temp_buffer [12];
  short ui_component;
  uint8_t ui_temp_buffer [16];
  uint8_t ui_stack_array [16];
  short sStack_c78;
  short sStack_c76;
  short sStack_c74;
  short sStack_c72;
  short sStack_c70;
  short sStack_c6e;
  short sStack_c6c;
  short sStack_c6a;
  uint8_t ui_stack_array [16];
  longlong ui_stack_parameter_longba8;
  uint8_t ui_stack_array [16];
  int ui_stack_integer_var_b68;
  uint8_t ui_stack_array [16];
  longlong ui_stack_parameter_longb48;
  longlong ui_stack_parameter_longb40;
  uint8_t ui_stack_array [16];
  short sStack_b28;
  short sStack_b26;
  short sStack_b24;
  short sStack_b22;
  short sStack_b20;
  short sStack_b1e;
  short sStack_b1c;
  short sStack_b1a;
  uint8_t ui_stack_array [16];
  uint64_t *pui_stack_color_dataf8;
  uint8_t ui_stack_array [16];
  short asStack_8d8 [32];
  short asStack_898 [32];
  short asStack_858 [32];
  short asStack_818 [32];
  short asStack_7d8 [32];
  short asStack_798 [32];
  short asStack_758 [32];
  short asStack_718 [32];
  short asStack_6d8 [4];
  uint64_t ui_stack_temp_6d0;
  short asStack_698 [4];
  uint64_t ui_stack_temp_690;
  short asStack_658 [4];
  uint64_t ui_stack_temp_650;
  short asStack_618 [32];
  short asStack_5d8 [4];
  uint64_t ui_stack_temp_5d0;
  short asStack_598 [4];
  uint64_t ui_stack_temp_590;
  short asStack_558 [32];
  short asStack_518 [32];
  short asStack_4d8 [32];
  short asStack_498 [32];
  short asStack_458 [32];
  short asStack_418 [32];
  short asStack_3d8 [32];
  short asStack_398 [32];
  short asStack_358 [32];
  short asStack_318 [32];
  short asStack_2d8 [32];
  short asStack_298 [32];
  short asStack_258 [32];
  short asStack_218 [32];
  short asStack_1d8 [32];
  short asStack_198 [32];
  short asStack_158 [32];
  short asStack_118 [32];
  ulonglong ui_stack_temp_d8;
  uint8_t ui_temp_buffer [16];
  uint8_t aui_event_id_fourth2 [16];
  uint8_t aui_event_id_fourth3 [16];
  uint8_t aui_event_id_fifth3 [16];
  uint8_t aui_event_id_fourth4 [16];
  uint8_t aui_event_id_fifth4 [16];
  uint8_t aui_event_id68 [16];
  uint8_t aui_event_id82 [16];
  uint8_t aui_event_id69 [16];
  uint8_t aui_event_id83 [16];
  uint8_t ui_temporary_buffer [16];
  uint8_t aui_event_id70 [16];
  uint8_t aui_event_id84 [16];
  uint8_t ui_temporary_buffer [16];
  uint8_t ui_task_processing_buffer [16];
  uint8_t ui_render_buffer_var [16];
  uint8_t ui_input_data_buffer [16];
  uint8_t ui_widget_data_buffer [16];
  uint8_t ui_input_data_buffer [16];
  uint8_t ui_widget_data_buffer [16];
  uint8_t ui_window_data_buffer [16];
  uint8_t ui_font_data_buffer [16];
  uint8_t ui_task_index_array_primary0 [16];
  uint8_t ui_system_shader_buffer_variable [16];
  uint8_t ui_system_layout_data_buffer [16];
  uint8_t ui_temporary_buffer [16];
  uint8_t ui_temp_buffer [16];
  
  ui_stack_temp_d8 = ui_stack_flag_mask ^ (ulonglong)ui_stack_array;
  ui_event_index = (longlong)ui_event_data;
  ui_stack_parameter_longb48 = ui_callback - (longlong)asStack_858;
  ui_stack_parameter_longb40 = 2;
  ui_stack_parameter_longba8 = (longlong)asStack_8d8 - (longlong)ui_event_type;
  ui_stack_integer_var_b68 = ui_event_data * 3;
  ui_event_index = 0;
  do {
    ui_event_index = 4;
    pui_component_value = asStack_858;
    ui_stack_array._0_8_ = 4;
    ui_task_index_pointer9 = ui_event_type;
    do {
      if (ui_event_index == 0) {
        pui_component_value = (short *)(ui_stack_parameter_longb48 + (longlong)pui_component_value);
        pshort_value = (short *)((longlong)pui_component_value + ui_event_index * 2 + ui_stack_parameter_longb48);
        pui_component_value = (short *)((longlong)pui_component_value + (longlong)(ui_event_data * UI_GUARD_CHECK_TYPE_2) * 2 + ui_stack_parameter_longb48);
        ui_event_index = (longlong)(ui_event_data * UI_GUARD_CHECK_TYPE_2) * 2 + ui_stack_parameter_longb48;
        long_counter5 = (longlong)(ui_event_data * 2);
        ui_render_buffer_var._component_x_ = *pui_component_value + *pui_component_value;
        ui_render_buffer_var._component_y_ = pui_component_value[1] + pui_component_value[1];
        ui_render_buffer_var._component_z_ = pui_component_value[2] + pui_component_value[2];
        ui_render_buffer_var._component_w_ = pui_component_value[3] + pui_component_value[3];
        ui_render_buffer_var._offset_x_ = pui_component_value[4] + pui_component_value[4];
        ui_render_buffer_var._offset_y_ = pui_component_value[5] + pui_component_value[5];
        ui_render_buffer_var._offset_z_ = pui_component_value[6] + pui_component_value[6];
        ui_render_buffer_var._offset_w_ = pui_component_value[7] + pui_component_value[7];
        ui_temporary_buffer._component_x_ = *pui_component_value - *pui_component_value;
        ui_temporary_buffer._component_y_ = pui_component_value[1] - pui_component_value[1];
        ui_temporary_buffer._component_z_ = pui_component_value[2] - pui_component_value[2];
        ui_temporary_buffer._component_w_ = pui_component_value[3] - pui_component_value[3];
        ui_temporary_buffer._offset_x_ = pui_component_value[4] - pui_component_value[4];
        ui_temporary_buffer._offset_y_ = pui_component_value[5] - pui_component_value[5];
        ui_temporary_buffer._offset_z_ = pui_component_value[6] - pui_component_value[6];
        ui_temporary_buffer._offset_w_ = pui_component_value[7] - pui_component_value[7];
        ui_stack_array = psllw(ui_render_buffer_var,2);
        pui_component_value = (short *)((longlong)pui_component_value + long_counter5 * 2 + ui_stack_parameter_longb48);
        ui_loop_counter_primary = (longlong)ui_stack_integer_var_b68;
        ui_stack_array = psllw(ui_temporary_buffer,2);
        pui_component_value = (short *)((longlong)pui_component_value + ui_loop_counter_primary * 2 + ui_stack_parameter_longb48);
        pshort_value7 = (short *)((longlong)pui_component_value + ui_loop_counter_primary * -2 + ui_event_index);
        pshort_value8 = (short *)((longlong)pui_component_value + long_counter5 * -2 + ui_event_index);
        ui_temp_buffer._component_x_ = *pshort_value7 + *pui_component_value;
        ui_temp_buffer._component_y_ = pshort_value7[1] + pui_component_value[1];
        ui_temp_buffer._component_z_ = pshort_value7[2] + pui_component_value[2];
        ui_temp_buffer._component_w_ = pshort_value7[3] + pui_component_value[3];
        ui_temp_buffer._offset_x_ = pshort_value7[4] + pui_component_value[4];
        ui_temp_buffer._offset_y_ = pshort_value7[5] + pui_component_value[5];
        ui_temp_buffer._offset_z_ = pshort_value7[6] + pui_component_value[6];
        ui_temp_buffer._offset_w_ = pshort_value7[7] + pui_component_value[7];
        ui_theme_buffer_var._component_x_ = *pui_component_value - *pshort_value7;
        ui_theme_buffer_var._component_y_ = pui_component_value[1] - pshort_value7[1];
        ui_theme_buffer_var._component_z_ = pui_component_value[2] - pshort_value7[2];
        ui_theme_buffer_var._component_w_ = pui_component_value[3] - pshort_value7[3];
        ui_theme_buffer_var._offset_x_ = pui_component_value[4] - pshort_value7[4];
        ui_theme_buffer_var._offset_y_ = pui_component_value[5] - pshort_value7[5];
        ui_theme_buffer_var._offset_z_ = pui_component_value[6] - pshort_value7[6];
        ui_theme_buffer_var._offset_w_ = pui_component_value[7] - pshort_value7[7];
        ui_stack_array = psllw(ui_theme_buffer_var,2);
        pshort_value9 = (short *)((longlong)pui_component_value + ui_event_index * -2 + ui_event_index);
        ui_temp_buffer = psllw(ui_temp_buffer,2);
        ui_temp_buffer._component_x_ = *pshort_value8 + *pui_component_value;
        ui_temp_buffer._component_y_ = pshort_value8[1] + pui_component_value[1];
        ui_temp_buffer._component_z_ = pshort_value8[2] + pui_component_value[2];
        ui_temp_buffer._component_w_ = pshort_value8[3] + pui_component_value[3];
        ui_temp_buffer._offset_x_ = pshort_value8[4] + pui_component_value[4];
        ui_temp_buffer._offset_y_ = pshort_value8[5] + pui_component_value[5];
        ui_temp_buffer._offset_z_ = pshort_value8[6] + pui_component_value[6];
        ui_temp_buffer._offset_w_ = pshort_value8[7] + pui_component_value[7];
        ui_system_shader_buffer_variable._component_x_ = *pui_component_value - *pshort_value8;
        ui_system_shader_buffer_variable._component_y_ = pui_component_value[1] - pshort_value8[1];
        ui_system_shader_buffer_variable._component_z_ = pui_component_value[2] - pshort_value8[2];
        ui_system_shader_buffer_variable._component_w_ = pui_component_value[3] - pshort_value8[3];
        ui_system_shader_buffer_variable._offset_x_ = pui_component_value[4] - pshort_value8[4];
        ui_system_shader_buffer_variable._offset_y_ = pui_component_value[5] - pshort_value8[5];
        ui_system_shader_buffer_variable._offset_z_ = pui_component_value[6] - pshort_value8[6];
        ui_system_shader_buffer_variable._offset_w_ = pui_component_value[7] - pshort_value8[7];
        ui_stack_array = psllw(ui_system_shader_buffer_variable,2);
        pui_component_value = (short *)((longlong)pui_component_value + (longlong)(ui_event_data * 4) * 2 + ui_stack_parameter_longb48);
        ui_event_index = (longlong)(ui_event_data * 4) * 2 + ui_stack_parameter_longb48;
        ui_temp_buffer._component_x_ = *pshort_value9 + *pshort_value;
        ui_temp_buffer._component_y_ = pshort_value9[1] + pshort_value[1];
        ui_temp_buffer._component_z_ = pshort_value9[2] + pshort_value[2];
        ui_temp_buffer._component_w_ = pshort_value9[3] + pshort_value[3];
        ui_temp_buffer._offset_x_ = pshort_value9[4] + pshort_value[4];
        ui_temp_buffer._offset_y_ = pshort_value9[5] + pshort_value[5];
        ui_temp_buffer._offset_z_ = pshort_value9[6] + pshort_value[6];
        ui_temp_buffer._offset_w_ = pshort_value9[7] + pshort_value[7];
        pui_component_value = (short *)((longlong)pui_component_value + ui_event_index * 2 + ui_event_index);
        pshort_value7 = (short *)((longlong)pui_component_value + long_counter5 * 2 + ui_event_index);
        ui_system_layout_data_buffer._component_x_ = *pshort_value - *pshort_value9;
        ui_system_layout_data_buffer._component_y_ = pshort_value[1] - pshort_value9[1];
        ui_system_layout_data_buffer._component_z_ = pshort_value[2] - pshort_value9[2];
        ui_system_layout_data_buffer._component_w_ = pshort_value[3] - pshort_value9[3];
        ui_system_layout_data_buffer._offset_x_ = pshort_value[4] - pshort_value9[4];
        ui_system_layout_data_buffer._offset_y_ = pshort_value[5] - pshort_value9[5];
        ui_system_layout_data_buffer._offset_z_ = pshort_value[6] - pshort_value9[6];
        ui_system_layout_data_buffer._offset_w_ = pshort_value[7] - pshort_value9[7];
        ui_stack_array = psllw(ui_temp_buffer,2);
        pshort_value = (short *)((longlong)pui_component_value + (longlong)(ui_event_data * UI_GUARD_CHECK_TYPE) * 2 + ui_stack_parameter_longb48);
        ui_event_index = (longlong)(ui_event_data * UI_GUARD_CHECK_TYPE) * 2 + ui_stack_parameter_longb48;
        ui_stack_array = psllw(ui_system_layout_data_buffer,2);
        pshort_value9 = (short *)((longlong)pui_component_value + ui_loop_counter_primary * -2 + ui_event_index);
        pshort_value8 = (short *)((longlong)pui_component_value + ui_loop_counter_primary * 2 + ui_event_index);
        ui_temp_buffer = psllw(ui_temp_buffer,2);
        pui_component_value = (short *)((longlong)pui_component_value + long_counter5 * -2 + ui_event_index);
        ui_temp_buffer._component_x_ = *pshort_value + *pui_component_value;
        ui_temp_buffer._component_y_ = pshort_value[1] + pui_component_value[1];
        ui_temp_buffer._component_z_ = pshort_value[2] + pui_component_value[2];
        ui_temp_buffer._component_w_ = pshort_value[3] + pui_component_value[3];
        ui_temp_buffer._offset_x_ = pshort_value[4] + pui_component_value[4];
        ui_temp_buffer._offset_y_ = pshort_value[5] + pui_component_value[5];
        ui_temp_buffer._offset_z_ = pshort_value[6] + pui_component_value[6];
        ui_temp_buffer._offset_w_ = pshort_value[7] + pui_component_value[7];
        ui_temp_buffer._component_x_ = *pshort_value9 + *pshort_value8;
        ui_temp_buffer._component_y_ = pshort_value9[1] + pshort_value8[1];
        ui_temp_buffer._component_z_ = pshort_value9[2] + pshort_value8[2];
        ui_temp_buffer._component_w_ = pshort_value9[3] + pshort_value8[3];
        ui_temp_buffer._offset_x_ = pshort_value9[4] + pshort_value8[4];
        ui_temp_buffer._offset_y_ = pshort_value9[5] + pshort_value8[5];
        ui_temp_buffer._offset_z_ = pshort_value9[6] + pshort_value8[6];
        ui_temp_buffer._offset_w_ = pshort_value9[7] + pshort_value8[7];
        ui_render_buffer_var._component_x_ = *pui_component_value - *pshort_value;
        ui_render_buffer_var._component_y_ = pui_component_value[1] - pshort_value[1];
        ui_render_buffer_var._component_z_ = pui_component_value[2] - pshort_value[2];
        ui_render_buffer_var._component_w_ = pui_component_value[3] - pshort_value[3];
        ui_render_buffer_var._offset_x_ = pui_component_value[4] - pshort_value[4];
        ui_render_buffer_var._offset_y_ = pui_component_value[5] - pshort_value[5];
        ui_render_buffer_var._offset_z_ = pui_component_value[6] - pshort_value[6];
        ui_render_buffer_var._offset_w_ = pui_component_value[7] - pshort_value[7];
        ui_system_layout_data_buffer._component_x_ = *pshort_value8 - *pshort_value9;
        ui_system_layout_data_buffer._component_y_ = pshort_value8[1] - pshort_value9[1];
        ui_system_layout_data_buffer._component_z_ = pshort_value8[2] - pshort_value9[2];
        ui_system_layout_data_buffer._component_w_ = pshort_value8[3] - pshort_value9[3];
        ui_system_layout_data_buffer._offset_x_ = pshort_value8[4] - pshort_value9[4];
        ui_system_layout_data_buffer._offset_y_ = pshort_value8[5] - pshort_value9[5];
        ui_system_layout_data_buffer._offset_z_ = pshort_value8[6] - pshort_value9[6];
        ui_system_layout_data_buffer._offset_w_ = pshort_value8[7] - pshort_value9[7];
        pui_component_value = (short *)((longlong)pui_component_value + ui_event_index * -2 + ui_event_index);
        ui_temp_buffer._component_x_ = *pui_component_value + *pshort_value7;
        ui_temp_buffer._component_y_ = pui_component_value[1] + pshort_value7[1];
        ui_temp_buffer._component_z_ = pui_component_value[2] + pshort_value7[2];
        ui_temp_buffer._component_w_ = pui_component_value[3] + pshort_value7[3];
        ui_temp_buffer._offset_x_ = pui_component_value[4] + pshort_value7[4];
        ui_temp_buffer._offset_y_ = pui_component_value[5] + pshort_value7[5];
        ui_temp_buffer._offset_z_ = pui_component_value[6] + pshort_value7[6];
        ui_temp_buffer._offset_w_ = pui_component_value[7] + pshort_value7[7];
        ui_system_shader_buffer_variable._component_x_ = *pshort_value7 - *pui_component_value;
        ui_system_shader_buffer_variable._component_y_ = pshort_value7[1] - pui_component_value[1];
        ui_system_shader_buffer_variable._component_z_ = pshort_value7[2] - pui_component_value[2];
        ui_system_shader_buffer_variable._component_w_ = pshort_value7[3] - pui_component_value[3];
        ui_system_shader_buffer_variable._offset_x_ = pshort_value7[4] - pui_component_value[4];
        ui_system_shader_buffer_variable._offset_y_ = pshort_value7[5] - pui_component_value[5];
        ui_system_shader_buffer_variable._offset_z_ = pshort_value7[6] - pui_component_value[6];
        ui_system_shader_buffer_variable._offset_w_ = pshort_value7[7] - pui_component_value[7];
        ui_temp_buffer._component_x_ = *pui_component_value + *pui_component_value;
        ui_temp_buffer._component_y_ = pui_component_value[1] + pui_component_value[1];
        ui_temp_buffer._component_z_ = pui_component_value[2] + pui_component_value[2];
        ui_temp_buffer._component_w_ = pui_component_value[3] + pui_component_value[3];
        ui_temp_buffer._offset_x_ = pui_component_value[4] + pui_component_value[4];
        ui_temp_buffer._offset_y_ = pui_component_value[5] + pui_component_value[5];
        ui_temp_buffer._offset_z_ = pui_component_value[6] + pui_component_value[6];
        ui_temp_buffer._offset_w_ = pui_component_value[7] + pui_component_value[7];
        ui_theme_buffer_var._component_x_ = *pui_component_value - *pui_component_value;
        ui_theme_buffer_var._component_y_ = pui_component_value[1] - pui_component_value[1];
        ui_theme_buffer_var._component_z_ = pui_component_value[2] - pui_component_value[2];
        ui_theme_buffer_var._component_w_ = pui_component_value[3] - pui_component_value[3];
        ui_theme_buffer_var._offset_x_ = pui_component_value[4] - pui_component_value[4];
        ui_theme_buffer_var._offset_y_ = pui_component_value[5] - pui_component_value[5];
        ui_theme_buffer_var._offset_z_ = pui_component_value[6] - pui_component_value[6];
        ui_theme_buffer_var._offset_w_ = pui_component_value[7] - pui_component_value[7];
        ui_temp_buffer = psllw(ui_temp_buffer,2);
        ui_task_index_pointer2 = (uint64_t *)((longlong)pui_component_value + (longlong)(ui_event_data * 8) * 2 + ui_stack_parameter_longb48);
        ui_loop_counter = *ui_task_index_pointer2;
        ui_loop_counter = ui_task_index_pointer2[1];
        pui_component_value = (short *)((longlong)pui_component_value + (longlong)(ui_event_data * 8) * 2 + ui_stack_parameter_longb48);
        pshort_value = pui_component_value + ui_loop_counter_primary;
        ui_loop_counter = *(uint64_t *)(pui_component_value + ui_event_index);
        ui_loop_counter = *(uint64_t *)(pui_component_value + ui_event_index + 4);
        pui_component_value = pui_component_value + ui_event_index;
        pui_window_data_buffer = (uint8_t (*) [14])
                   ((longlong)pui_component_value + (longlong)(ui_event_data * UI_RENDER_RESOURCE_TYPE) * 2 + ui_stack_parameter_longb48);
        aui_event_id_fourth = *pui_window_data_buffer;
        ui_event_index = (longlong)(ui_event_data * UI_RENDER_RESOURCE_TYPE) * 2 + ui_stack_parameter_longb48;
        pshort_value7 = pui_component_value + long_counter5;
        ui_loop_counter = *(uint64_t *)pshort_value7;
        ui_loop_counter = *(uint64_t *)(pshort_value7 + 4);
        pshort_value9 = (short *)((longlong)pui_component_value + long_counter5 * -2 + ui_event_index);
        pshort_value8 = (short *)((longlong)pui_component_value + ui_loop_counter_primary * -2 + ui_event_index);
        ui_temp_buffer = psllw(ui_temp_buffer,2);
        ui_stack_array._component_x_ = (uint16_t)ui_loop_counter;
        ui_stack_array._component_y_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
        ui_stack_array._component_z_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_OFFSET_32);
        ui_stack_array._component_w_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
        ui_stack_array._offset_x_ = (uint16_t)ui_loop_counter;
        ui_stack_array._offset_y_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
        ui_stack_array._offset_z_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_OFFSET_32);
        ui_stack_array._offset_w_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
        ui_stack_array._component_y_ = *(short *)(*pui_window_data_buffer + 2) + ui_stack_array._component_y_;
        ui_stack_array._component_x_ = *(short *)*pui_window_data_buffer + ui_stack_array._component_x_;
        ui_stack_array._component_z_ = *(short *)(*pui_window_data_buffer + 4) + ui_stack_array._component_z_;
        ui_stack_array._component_w_ = *(short *)(*pui_window_data_buffer + 6) + ui_stack_array._component_w_;
        ui_stack_array._offset_x_ = *(short *)(*pui_window_data_buffer + 8) + ui_stack_array._offset_x_;
        ui_stack_array._offset_y_ = *(short *)(*pui_window_data_buffer + 10) + ui_stack_array._offset_y_;
        ui_stack_array._offset_z_ = *(short *)(*pui_window_data_buffer + 12) + ui_stack_array._offset_z_;
        ui_stack_array._offset_w_ = *(short *)pui_window_data_buffer[1] + ui_stack_array._offset_w_;
        pui_component_value = (short *)((longlong)pui_component_value + ui_event_index * -2 + ui_event_index);
        ui_temp_buffer = psllw(ui_temp_buffer,2);
        ui_temporary_buffer = psllw(ui_system_layout_data_buffer,2);
        ui_system_shader_buffer_variable = psllw(ui_system_shader_buffer_variable,2);
        ui_theme_buffer_var = psllw(ui_theme_buffer_var,2);
        ui_stack_array._component_x_ = (uint16_t)ui_loop_counter;
        ui_stack_array._component_y_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
        ui_stack_array._component_z_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_OFFSET_32);
        ui_stack_array._component_w_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
        ui_stack_array._offset_x_ = (uint16_t)ui_loop_counter;
        ui_stack_array._offset_y_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
        ui_stack_array._offset_z_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_OFFSET_32);
        ui_stack_array._offset_w_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
        ui_stack_array._component_y_ = pui_component_value[1] + ui_stack_array._component_y_;
        ui_stack_array._component_x_ = *pui_component_value + ui_stack_array._component_x_;
        ui_stack_array._component_z_ = pui_component_value[2] + ui_stack_array._component_z_;
        ui_stack_array._component_w_ = pui_component_value[3] + ui_stack_array._component_w_;
        ui_stack_array._offset_x_ = pui_component_value[4] + ui_stack_array._offset_x_;
        ui_stack_array._offset_y_ = pui_component_value[5] + ui_stack_array._offset_y_;
        ui_stack_array._offset_z_ = pui_component_value[6] + ui_stack_array._offset_z_;
        ui_stack_array._offset_w_ = pui_component_value[7] + ui_stack_array._offset_w_;
        ui_stack_array._component_x_ = (uint16_t)ui_loop_counter;
        ui_stack_array._component_y_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
        ui_stack_array._component_z_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_OFFSET_32);
        ui_stack_array._component_w_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
        ui_stack_array._offset_x_ = (uint16_t)ui_loop_counter;
        ui_stack_array._offset_y_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
        ui_stack_array._offset_z_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_OFFSET_32);
        ui_stack_array._offset_w_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
        ui_stack_array._component_y_ = pshort_value9[1] + ui_stack_array._component_y_;
        ui_stack_array._component_x_ = *pshort_value9 + ui_stack_array._component_x_;
        ui_stack_array._component_z_ = pshort_value9[2] + ui_stack_array._component_z_;
        ui_stack_array._component_w_ = pshort_value9[3] + ui_stack_array._component_w_;
        ui_stack_array._offset_x_ = pshort_value9[4] + ui_stack_array._offset_x_;
        ui_stack_array._offset_y_ = pshort_value9[5] + ui_stack_array._offset_y_;
        ui_stack_array._offset_z_ = pshort_value9[6] + ui_stack_array._offset_z_;
        ui_stack_array._offset_w_ = pshort_value9[7] + ui_stack_array._offset_w_;
        ui_render_buffer_var = psllw(ui_render_buffer_var,2);
        ui_temp_buffer._component_x_ = *pshort_value - *pshort_value8;
        ui_temp_buffer._component_y_ = pshort_value[1] - pshort_value8[1];
        ui_temp_buffer._component_z_ = pshort_value[2] - pshort_value8[2];
        ui_temp_buffer._component_w_ = pshort_value[3] - pshort_value8[3];
        ui_temp_buffer._offset_x_ = pshort_value[4] - pshort_value8[4];
        ui_temp_buffer._offset_y_ = pshort_value[5] - pshort_value8[5];
        ui_temp_buffer._offset_z_ = pshort_value[6] - pshort_value8[6];
        ui_temp_buffer._offset_w_ = pshort_value[7] - pshort_value8[7];
        ui_stack_array._component_y_ = pshort_value8[1] + pshort_value[1];
        ui_stack_array._component_x_ = *pshort_value8 + *pshort_value;
        ui_stack_array._component_z_ = pshort_value8[2] + pshort_value[2];
        ui_stack_array._component_w_ = pshort_value8[3] + pshort_value[3];
        ui_stack_array._offset_x_ = pshort_value8[4] + pshort_value[4];
        ui_stack_array._offset_y_ = pshort_value8[5] + pshort_value[5];
        ui_stack_array._offset_z_ = pshort_value8[6] + pshort_value[6];
        ui_stack_array._offset_w_ = pshort_value8[7] + pshort_value[7];
        ui_temp_buffer._component_x_ = *pshort_value7 - *pshort_value9;
        ui_temp_buffer._component_y_ = pshort_value7[1] - pshort_value9[1];
        ui_temp_buffer._component_z_ = pshort_value7[2] - pshort_value9[2];
        ui_temp_buffer._component_w_ = pshort_value7[3] - pshort_value9[3];
        ui_temp_buffer._offset_x_ = pshort_value7[4] - pshort_value9[4];
        ui_temp_buffer._offset_y_ = pshort_value7[5] - pshort_value9[5];
        ui_temp_buffer._offset_z_ = pshort_value7[6] - pshort_value9[6];
        ui_temp_buffer._offset_w_ = pshort_value7[7] - pshort_value9[7];
        ui_stack_array = psllw(ui_stack_array,2);
        ui_temp_buffer._component_x_ = *pui_component_value - *pui_component_value;
        ui_temp_buffer._component_y_ = pui_component_value[1] - pui_component_value[1];
        ui_temp_buffer._component_z_ = pui_component_value[2] - pui_component_value[2];
        ui_temp_buffer._component_w_ = pui_component_value[3] - pui_component_value[3];
        ui_temp_buffer._offset_x_ = pui_component_value[4] - pui_component_value[4];
        ui_temp_buffer._offset_y_ = pui_component_value[5] - pui_component_value[5];
        ui_temp_buffer._offset_z_ = pui_component_value[6] - pui_component_value[6];
        ui_temp_buffer._offset_w_ = pui_component_value[7] - pui_component_value[7];
        ui_stack_array = psllw(ui_stack_array,2);
        ui_stack_array._component_x_ = aui_event_id_fourth._component_x_;
        ui_stack_array._component_y_ = aui_event_id_fourth._component_y_;
        ui_stack_array._component_z_ = aui_event_id_fourth._component_z_;
        ui_stack_array._component_w_ = aui_event_id_fourth._component_w_;
        ui_stack_array._offset_x_ = aui_event_id_fourth._offset_x_;
        ui_stack_array._offset_y_ = aui_event_id_fourth._offset_y_;
        ui_stack_array._offset_z_ = aui_event_id_fourth._offset_z_;
        ui_temp_buffer._component_x_ = *pui_component_value - ui_stack_array._component_x_;
        ui_temp_buffer._component_y_ = pui_component_value[1] - ui_stack_array._component_y_;
        ui_temp_buffer._component_z_ = pui_component_value[2] - ui_stack_array._component_z_;
        ui_temp_buffer._component_w_ = pui_component_value[3] - ui_stack_array._component_w_;
        ui_temp_buffer._offset_x_ = pui_component_value[4] - ui_stack_array._offset_x_;
        ui_temp_buffer._offset_y_ = pui_component_value[5] - ui_stack_array._offset_y_;
        ui_temp_buffer._offset_z_ = pui_component_value[6] - ui_stack_array._offset_z_;
        ui_temp_buffer._offset_w_ = pui_component_value[7] - *(short *)pui_window_data_buffer[1];
        ui_stack_array = psllw(ui_stack_array,2);
        pui_component_value = (short *)((longlong)pui_component_value + (longlong)(ui_event_data * 12) * 2 + ui_stack_parameter_longb48);
        ui_stack_array = psllw(ui_temp_buffer,2);
        pshort_value = (short *)((longlong)pui_component_value + (longlong)(ui_event_data * UI_RESOURCE_TYPE_CONFIG) * 2 + ui_stack_parameter_longb48);
        pui_component_value = pui_component_value + ui_event_index;
        ui_loop_counter = *(uint64_t *)pui_component_value;
        ui_loop_counter = *(uint64_t *)(pui_component_value + 4);
        pshort_value7 = pui_component_value + ui_loop_counter_primary;
        pshort_value8 = pui_component_value + long_counter5;
        pshort_value9 = pshort_value + -ui_loop_counter_primary;
        ui_stack_array._component_x_ = (uint16_t)ui_loop_counter;
        ui_stack_array._component_y_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
        ui_stack_array._component_z_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_OFFSET_32);
        ui_stack_array._component_w_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
        ui_stack_array._offset_x_ = (uint16_t)ui_loop_counter;
        ui_stack_array._offset_y_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
        ui_stack_array._offset_z_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_OFFSET_32);
        ui_stack_array._offset_w_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
        ui_loop_counter = *(uint64_t *)pui_component_value;
        ui_loop_counter = *(uint64_t *)(pui_component_value + 4);
        ui_stack_array._component_y_ = pshort_value[1] + ui_stack_array._component_y_;
        ui_stack_array._component_x_ = *pshort_value + ui_stack_array._component_x_;
        ui_stack_array._component_z_ = pshort_value[2] + ui_stack_array._component_z_;
        ui_stack_array._component_w_ = pshort_value[3] + ui_stack_array._component_w_;
        ui_stack_array._offset_x_ = pshort_value[4] + ui_stack_array._offset_x_;
        ui_stack_array._offset_y_ = pshort_value[5] + ui_stack_array._offset_y_;
        ui_stack_array._offset_z_ = pshort_value[6] + ui_stack_array._offset_z_;
        ui_stack_array._offset_w_ = pshort_value[7] + ui_stack_array._offset_w_;
        pui_component_value = pshort_value + -long_counter5;
        pui_window_data_buffer = (uint8_t (*) [14])(pshort_value + -ui_event_index);
        aui_event_id_fourth = *pui_window_data_buffer;
        ui_stack_array._component_x_ = (uint16_t)ui_loop_counter;
        ui_stack_array._component_y_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
        ui_stack_array._component_z_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_OFFSET_32);
        ui_stack_array._component_w_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
        ui_stack_array._offset_x_ = (uint16_t)ui_loop_counter;
        ui_stack_array._offset_y_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
        ui_stack_array._offset_z_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_OFFSET_32);
        ui_stack_array._offset_w_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
        ui_stack_array._component_y_ = *(short *)((longlong)*pui_window_data_buffer + 2) + ui_stack_array._component_y_;
        ui_stack_array._component_x_ = *(short *)*pui_window_data_buffer + ui_stack_array._component_x_;
        ui_stack_array._component_z_ = *(short *)((longlong)*pui_window_data_buffer + 4) + ui_stack_array._component_z_;
        ui_stack_array._component_w_ = *(short *)((longlong)*pui_window_data_buffer + 6) + ui_stack_array._component_w_;
        ui_stack_array._offset_x_ = *(short *)((longlong)*pui_window_data_buffer + 8) + ui_stack_array._offset_x_;
        ui_stack_array._offset_y_ = *(short *)((longlong)*pui_window_data_buffer + 10) + ui_stack_array._offset_y_;
        ui_stack_array._offset_z_ = *(short *)((longlong)*pui_window_data_buffer + 12) + ui_stack_array._offset_z_;
        ui_stack_array._offset_w_ = *(short *)pui_window_data_buffer[1] + ui_stack_array._offset_w_;
        ui_temp_buffer._component_x_ = *pshort_value8 - *pui_component_value;
        ui_temp_buffer._component_y_ = pshort_value8[1] - pui_component_value[1];
        ui_temp_buffer._component_z_ = pshort_value8[2] - pui_component_value[2];
        ui_temp_buffer._component_w_ = pshort_value8[3] - pui_component_value[3];
        ui_temp_buffer._offset_x_ = pshort_value8[4] - pui_component_value[4];
        ui_temp_buffer._offset_y_ = pshort_value8[5] - pui_component_value[5];
        ui_temp_buffer._offset_z_ = pshort_value8[6] - pui_component_value[6];
        ui_temp_buffer._offset_w_ = pshort_value8[7] - pui_component_value[7];
        ui_stack_array._component_y_ = pui_component_value[1] + pshort_value8[1];
        ui_stack_array._component_x_ = *pui_component_value + *pshort_value8;
        ui_stack_array._component_z_ = pui_component_value[2] + pshort_value8[2];
        ui_stack_array._component_w_ = pui_component_value[3] + pshort_value8[3];
        ui_stack_array._offset_x_ = pui_component_value[4] + pshort_value8[4];
        ui_stack_array._offset_y_ = pui_component_value[5] + pshort_value8[5];
        ui_stack_array._offset_z_ = pui_component_value[6] + pshort_value8[6];
        ui_stack_array._offset_w_ = pui_component_value[7] + pshort_value8[7];
        ui_stack_array._component_x_ = aui_event_id_fourth._component_x_;
        ui_stack_array._component_y_ = aui_event_id_fourth._component_y_;
        ui_stack_array._component_z_ = aui_event_id_fourth._component_z_;
        ui_stack_array._component_w_ = aui_event_id_fourth._component_w_;
        ui_stack_array._offset_x_ = aui_event_id_fourth._offset_x_;
        ui_stack_array._offset_y_ = aui_event_id_fourth._offset_y_;
        ui_stack_array._offset_z_ = aui_event_id_fourth._offset_z_;
        ui_temp_buffer._component_x_ = *pui_component_value - ui_stack_array._component_x_;
        ui_temp_buffer._component_y_ = pui_component_value[1] - ui_stack_array._component_y_;
        ui_temp_buffer._component_z_ = pui_component_value[2] - ui_stack_array._component_z_;
        ui_temp_buffer._component_w_ = pui_component_value[3] - ui_stack_array._component_w_;
        ui_temp_buffer._offset_x_ = pui_component_value[4] - ui_stack_array._offset_x_;
        ui_temp_buffer._offset_y_ = pui_component_value[5] - ui_stack_array._offset_y_;
        ui_temp_buffer._offset_z_ = pui_component_value[6] - ui_stack_array._offset_z_;
        ui_temp_buffer._offset_w_ = pui_component_value[7] - *(short *)pui_window_data_buffer[1];
        ui_stack_array = psllw(ui_temp_buffer,2);
        ui_stack_array._component_y_ = pshort_value9[1] + pshort_value7[1];
        ui_stack_array._component_x_ = *pshort_value9 + *pshort_value7;
        ui_stack_array._component_z_ = pshort_value9[2] + pshort_value7[2];
        ui_stack_array._component_w_ = pshort_value9[3] + pshort_value7[3];
        ui_stack_array._offset_x_ = pshort_value9[4] + pshort_value7[4];
        ui_stack_array._offset_y_ = pshort_value9[5] + pshort_value7[5];
        ui_stack_array._offset_z_ = pshort_value9[6] + pshort_value7[6];
        ui_stack_array._offset_w_ = pshort_value9[7] + pshort_value7[7];
        aui_event_id66._component_x_ = *pshort_value7 - *pshort_value9;
        aui_event_id66._component_y_ = pshort_value7[1] - pshort_value9[1];
        aui_event_id66._component_z_ = pshort_value7[2] - pshort_value9[2];
        aui_event_id66._component_w_ = pshort_value7[3] - pshort_value9[3];
        aui_event_id66._offset_x_ = pshort_value7[4] - pshort_value9[4];
        aui_event_id66._offset_y_ = pshort_value7[5] - pshort_value9[5];
        aui_event_id66._offset_z_ = pshort_value7[6] - pshort_value9[6];
        aui_event_id66._offset_w_ = pshort_value7[7] - pshort_value9[7];
        ui_stack_array = psllw(ui_stack_array,2);
        ui_temp_buffer._component_x_ = *pui_component_value - *pshort_value;
        ui_temp_buffer._component_y_ = pui_component_value[1] - pshort_value[1];
        ui_temp_buffer._component_z_ = pui_component_value[2] - pshort_value[2];
        ui_temp_buffer._component_w_ = pui_component_value[3] - pshort_value[3];
        ui_temp_buffer._offset_x_ = pui_component_value[4] - pshort_value[4];
        ui_temp_buffer._offset_y_ = pui_component_value[5] - pshort_value[5];
        ui_temp_buffer._offset_z_ = pui_component_value[6] - pshort_value[6];
        ui_temp_buffer._offset_w_ = pui_component_value[7] - pshort_value[7];
        ui_stack_array = psllw(ui_stack_array,2);
        ui_stack_array = psllw(aui_event_id66,2);
        ui_stack_array = psllw(ui_temp_buffer,2);
        ui_event_index = ui_stack_array._0_8_;
      }
      else {
        ui_stack_array._component_y_ = pui_component_value[0x3a1] + pui_component_value[-UI_BIT_SHIFT_63];
        ui_stack_array._component_x_ = pui_component_value[0x3a0] + pui_component_value[-UI_BUFFER_SIZE_64];
        ui_stack_array._component_z_ = pui_component_value[0x3a2] + pui_component_value[-0x3e];
        ui_stack_array._component_w_ = pui_component_value[0x3a3] + pui_component_value[-0x3d];
        ui_stack_array._offset_x_ = pui_component_value[0x3a4] + pui_component_value[-UI_OFFSET_60];
        ui_stack_array._offset_y_ = pui_component_value[0x3a5] + pui_component_value[-UI_OFFSET_59];
        ui_stack_array._offset_z_ = pui_component_value[0x3a6] + pui_component_value[-0x3a];
        ui_stack_array._offset_w_ = pui_component_value[0x3a7] + pui_component_value[-0x39];
        ui_stack_array._component_y_ = pui_component_value[-UI_BIT_SHIFT_63] - pui_component_value[0x3a1];
        ui_stack_array._component_x_ = pui_component_value[-UI_BUFFER_SIZE_64] - pui_component_value[0x3a0];
        ui_stack_array._component_z_ = pui_component_value[-0x3e] - pui_component_value[0x3a2];
        ui_stack_array._component_w_ = pui_component_value[-0x3d] - pui_component_value[0x3a3];
        ui_stack_array._offset_x_ = pui_component_value[-UI_OFFSET_60] - pui_component_value[0x3a4];
        ui_stack_array._offset_y_ = pui_component_value[-UI_OFFSET_59] - pui_component_value[0x3a5];
        ui_stack_array._offset_z_ = pui_component_value[-0x3a] - pui_component_value[0x3a6];
        ui_stack_array._offset_w_ = pui_component_value[-0x39] - pui_component_value[0x3a7];
        ui_temp_buffer._component_x_ = pui_component_value[UI_MEMORY_DEALLOC_OFFSET0] + pui_component_value[-UI_OFFSET_32];
        ui_temp_buffer._component_y_ = pui_component_value[UI_MEMORY_DEALLOC_OFFSET1] + pui_component_value[-UI_GUARD_CHECK_TYPE_2];
        ui_temp_buffer._component_z_ = pui_component_value[UI_MEMORY_DEALLOC_OFFSET2] + pui_component_value[-UI_OFFSET_30];
        ui_temp_buffer._component_w_ = pui_component_value[899] + pui_component_value[-UI_SYSTEM_CALLBACK_TYPE];
        ui_temp_buffer._offset_x_ = pui_component_value[900] + pui_component_value[-UI_OFFSET_28];
        ui_temp_buffer._offset_y_ = pui_component_value[UI_MEMORY_DEALLOC_OFFSET5] + pui_component_value[-UI_GUARD_CHECK_TYPE];
        ui_temp_buffer._offset_z_ = pui_component_value[UI_MEMORY_DEALLOC_OFFSET6] + pui_component_value[-UI_MEMORY_RESOURCE_TYPE];
        ui_temp_buffer._offset_w_ = pui_component_value[UI_MEMORY_DEALLOC_OFFSET7] + pui_component_value[-UI_WIDGET_RESOURCE_TYPE];
        ui_temp_buffer._component_x_ = pui_component_value[0x340] + pui_component_value[UI_OFFSET_32];
        ui_temp_buffer._component_y_ = pui_component_value[0x341] + pui_component_value[UI_SYSTEM_STATE_OFFSET];
        ui_temp_buffer._component_z_ = pui_component_value[0x342] + pui_component_value[UI_WIDGET_STATE_OFFSET];
        ui_temp_buffer._component_w_ = pui_component_value[0x343] + pui_component_value[0x23];
        ui_temp_buffer._offset_x_ = pui_component_value[0x344] + pui_component_value[UI_EVENT_COUNTER_OFFSET];
        ui_temp_buffer._offset_y_ = pui_component_value[0x345] + pui_component_value[0x25];
        ui_temp_buffer._offset_z_ = pui_component_value[0x346] + pui_component_value[UI_FOCUS_STATE_OFFSET];
        ui_temp_buffer._offset_w_ = pui_component_value[0x347] + pui_component_value[0x27];
        ui_stack_array._component_y_ = pui_component_value[-UI_GUARD_CHECK_TYPE_2] - pui_component_value[UI_MEMORY_DEALLOC_OFFSET1];
        ui_stack_array._component_x_ = pui_component_value[-UI_OFFSET_32] - pui_component_value[UI_MEMORY_DEALLOC_OFFSET0];
        ui_stack_array._component_z_ = pui_component_value[-UI_OFFSET_30] - pui_component_value[UI_MEMORY_DEALLOC_OFFSET2];
        ui_stack_array._component_w_ = pui_component_value[-UI_SYSTEM_CALLBACK_TYPE] - pui_component_value[899];
        ui_stack_array._offset_x_ = pui_component_value[-UI_OFFSET_28] - pui_component_value[900];
        ui_stack_array._offset_y_ = pui_component_value[-UI_GUARD_CHECK_TYPE] - pui_component_value[UI_MEMORY_DEALLOC_OFFSET5];
        ui_stack_array._offset_z_ = pui_component_value[-UI_MEMORY_RESOURCE_TYPE] - pui_component_value[UI_MEMORY_DEALLOC_OFFSET6];
        ui_stack_array._offset_w_ = pui_component_value[-UI_WIDGET_RESOURCE_TYPE] - pui_component_value[UI_MEMORY_DEALLOC_OFFSET7];
        ui_stack_array._component_y_ = pui_component_value[UI_SYSTEM_STATE_OFFSET] - pui_component_value[0x341];
        ui_stack_array._component_x_ = pui_component_value[UI_OFFSET_32] - pui_component_value[0x340];
        ui_stack_array._component_z_ = pui_component_value[UI_WIDGET_STATE_OFFSET] - pui_component_value[0x342];
        ui_stack_array._component_w_ = pui_component_value[0x23] - pui_component_value[0x343];
        ui_stack_array._offset_x_ = pui_component_value[UI_EVENT_COUNTER_OFFSET] - pui_component_value[0x344];
        ui_stack_array._offset_y_ = pui_component_value[0x25] - pui_component_value[0x345];
        ui_stack_array._offset_z_ = pui_component_value[UI_FOCUS_STATE_OFFSET] - pui_component_value[0x346];
        ui_stack_array._offset_w_ = pui_component_value[0x27] - pui_component_value[0x347];
        ui_stack_array._component_y_ = pui_component_value[0x361] + pui_component_value[1];
        ui_stack_array._component_x_ = pui_component_value[0x360] + *pui_component_value;
        ui_stack_array._component_z_ = pui_component_value[0x362] + pui_component_value[2];
        ui_stack_array._component_w_ = pui_component_value[0x363] + pui_component_value[3];
        ui_stack_array._offset_x_ = pui_component_value[0x364] + pui_component_value[4];
        ui_stack_array._offset_y_ = pui_component_value[0x365] + pui_component_value[5];
        ui_stack_array._offset_z_ = pui_component_value[0x366] + pui_component_value[6];
        ui_stack_array._offset_w_ = pui_component_value[0x367] + pui_component_value[7];
        ui_stack_array._component_y_ = pui_component_value[1] - pui_component_value[0x361];
        ui_stack_array._component_x_ = *pui_component_value - pui_component_value[0x360];
        ui_stack_array._component_z_ = pui_component_value[2] - pui_component_value[0x362];
        ui_stack_array._component_w_ = pui_component_value[3] - pui_component_value[0x363];
        ui_stack_array._offset_x_ = pui_component_value[4] - pui_component_value[0x364];
        ui_stack_array._offset_y_ = pui_component_value[5] - pui_component_value[0x365];
        ui_stack_array._offset_z_ = pui_component_value[6] - pui_component_value[0x366];
        ui_stack_array._offset_w_ = pui_component_value[7] - pui_component_value[0x367];
        ui_temp_buffer._component_x_ = pui_component_value[800] + pui_component_value[UI_BUFFER_SIZE_64];
        ui_temp_buffer._component_y_ = pui_component_value[0x321] + pui_component_value[UI_BUFFER_SIZE_65];
        ui_temp_buffer._component_z_ = pui_component_value[0x322] + pui_component_value[UI_REGISTER_X_OFFSET];
        ui_temp_buffer._component_w_ = pui_component_value[0x323] + pui_component_value[UI_REGISTER_Y_OFFSET];
        ui_temp_buffer._offset_x_ = pui_component_value[0x324] + pui_component_value[UI_OFFSET_68];
        ui_temp_buffer._offset_y_ = pui_component_value[0x325] + pui_component_value[UI_REGISTER_Z_OFFSET];
        ui_temp_buffer._offset_z_ = pui_component_value[0x326] + pui_component_value[0x46];
        ui_temp_buffer._offset_w_ = pui_component_value[0x327] + pui_component_value[0x47];
        ui_render_buffer_var._component_x_ = pui_component_value[UI_BUFFER_SIZE_64] - pui_component_value[800];
        ui_render_buffer_var._component_y_ = pui_component_value[UI_BUFFER_SIZE_65] - pui_component_value[0x321];
        ui_render_buffer_var._component_z_ = pui_component_value[UI_REGISTER_X_OFFSET] - pui_component_value[0x322];
        ui_render_buffer_var._component_w_ = pui_component_value[UI_REGISTER_Y_OFFSET] - pui_component_value[0x323];
        ui_render_buffer_var._offset_x_ = pui_component_value[UI_OFFSET_68] - pui_component_value[0x324];
        ui_render_buffer_var._offset_y_ = pui_component_value[UI_REGISTER_Z_OFFSET] - pui_component_value[0x325];
        ui_render_buffer_var._offset_z_ = pui_component_value[0x46] - pui_component_value[0x326];
        ui_render_buffer_var._offset_w_ = pui_component_value[0x47] - pui_component_value[0x327];
        aui_event_id_fourth = *(uint8_t (*) [14])(pui_component_value + UI_STACK_SIZE_672);
        ui_temp_buffer._component_x_ = pui_component_value[UI_OPERATION_RESULT_OFFSET0] + pui_component_value[UI_OFFSET_160];
        ui_temp_buffer._component_y_ = pui_component_value[UI_OPERATION_RESULT_OFFSET1] + pui_component_value[0xa1];
        ui_temp_buffer._component_z_ = pui_component_value[UI_OPERATION_RESULT_OFFSET2] + pui_component_value[0xa2];
        ui_temp_buffer._component_w_ = pui_component_value[UI_OPERATION_RESULT_OFFSET3] + pui_component_value[0xa3];
        ui_temp_buffer._offset_x_ = pui_component_value[UI_OPERATION_RESULT_OFFSET4] + pui_component_value[UI_TEMP_VALUE_OFFSET];
        ui_temp_buffer._offset_y_ = pui_component_value[UI_OPERATION_RESULT_OFFSET5] + pui_component_value[0xa5];
        ui_temp_buffer._offset_z_ = pui_component_value[UI_OPERATION_RESULT_OFFSET6] + pui_component_value[0xa6];
        ui_temp_buffer._offset_w_ = pui_component_value[UI_OPERATION_RESULT_OFFSET7] + pui_component_value[0xa7];
        ui_temp_buffer._component_x_ = pui_component_value[UI_MEMORY_ALLOC_SIZE0] + pui_component_value[UI_WIDGET_CREATE_CALLBACK_OFFSET];
        ui_temp_buffer._component_y_ = pui_component_value[UI_MEMORY_ALLOC_SIZE1] + pui_component_value[0x61];
        ui_temp_buffer._component_z_ = pui_component_value[UI_MEMORY_ALLOC_SIZE2] + pui_component_value[0x62];
        ui_temp_buffer._component_w_ = pui_component_value[UI_MEMORY_ALLOC_SIZE3] + pui_component_value[99];
        ui_temp_buffer._offset_x_ = pui_component_value[UI_MEMORY_ALLOC_SIZE4] + pui_component_value[100];
        ui_temp_buffer._offset_y_ = pui_component_value[UI_MEMORY_ALLOC_SIZE5] + pui_component_value[0x65];
        ui_temp_buffer._offset_z_ = pui_component_value[UI_MEMORY_ALLOC_SIZE6] + pui_component_value[UI_ANIMATION_CONFIG_OFFSET];
        ui_temp_buffer._offset_w_ = pui_component_value[UI_MEMORY_ALLOC_SIZE7] + pui_component_value[0x67];
        ui_temporary_buffer._component_x_ = pui_component_value[UI_OFFSET_160] - pui_component_value[UI_OPERATION_RESULT_OFFSET0];
        ui_temporary_buffer._component_y_ = pui_component_value[0xa1] - pui_component_value[UI_OPERATION_RESULT_OFFSET1];
        ui_temporary_buffer._component_z_ = pui_component_value[0xa2] - pui_component_value[UI_OPERATION_RESULT_OFFSET2];
        ui_temporary_buffer._component_w_ = pui_component_value[0xa3] - pui_component_value[UI_OPERATION_RESULT_OFFSET3];
        ui_temporary_buffer._offset_x_ = pui_component_value[UI_TEMP_VALUE_OFFSET] - pui_component_value[UI_OPERATION_RESULT_OFFSET4];
        ui_temporary_buffer._offset_y_ = pui_component_value[0xa5] - pui_component_value[UI_OPERATION_RESULT_OFFSET5];
        ui_temporary_buffer._offset_z_ = pui_component_value[0xa6] - pui_component_value[UI_OPERATION_RESULT_OFFSET6];
        ui_temporary_buffer._offset_w_ = pui_component_value[0xa7] - pui_component_value[UI_OPERATION_RESULT_OFFSET7];
        ui_loop_counter = *(uint64_t *)(pui_component_value + UI_RENDER_CONTEXT_OFFSET);
        ui_loop_counter = *(uint64_t *)(pui_component_value + 0xc4);
        ui_theme_buffer_var._component_x_ = pui_component_value[UI_WIDGET_CREATE_CALLBACK_OFFSET] - pui_component_value[UI_MEMORY_ALLOC_SIZE0];
        ui_theme_buffer_var._component_y_ = pui_component_value[0x61] - pui_component_value[UI_MEMORY_ALLOC_SIZE1];
        ui_theme_buffer_var._component_z_ = pui_component_value[0x62] - pui_component_value[UI_MEMORY_ALLOC_SIZE2];
        ui_theme_buffer_var._component_w_ = pui_component_value[99] - pui_component_value[UI_MEMORY_ALLOC_SIZE3];
        ui_theme_buffer_var._offset_x_ = pui_component_value[100] - pui_component_value[UI_MEMORY_ALLOC_SIZE4];
        ui_theme_buffer_var._offset_y_ = pui_component_value[0x65] - pui_component_value[UI_MEMORY_ALLOC_SIZE5];
        ui_theme_buffer_var._offset_z_ = pui_component_value[UI_ANIMATION_CONFIG_OFFSET] - pui_component_value[UI_MEMORY_ALLOC_SIZE6];
        ui_theme_buffer_var._offset_w_ = pui_component_value[0x67] - pui_component_value[UI_MEMORY_ALLOC_SIZE7];
        ui_temp_buffer._component_x_ = pui_component_value[0x2e0] + pui_component_value[UI_STACK_SIZE_128];
        ui_temp_buffer._component_y_ = pui_component_value[0x2e1] + pui_component_value[0x81];
        ui_temp_buffer._component_z_ = pui_component_value[0x2e2] + pui_component_value[0x82];
        ui_temp_buffer._component_w_ = pui_component_value[0x2e3] + pui_component_value[0x83];
        ui_temp_buffer._offset_x_ = pui_component_value[0x2e4] + pui_component_value[UI_WIDGET_ITEM_SIZE];
        ui_temp_buffer._offset_y_ = pui_component_value[0x2e5] + pui_component_value[0x85];
        ui_temp_buffer._offset_z_ = pui_component_value[0x2e6] + pui_component_value[0x86];
        ui_temp_buffer._offset_w_ = pui_component_value[0x2e7] + pui_component_value[0x87];
        ui_stack_array._component_x_ = (uint16_t)ui_loop_counter;
        ui_stack_array._component_y_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
        ui_stack_array._component_z_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_OFFSET_32);
        ui_stack_array._component_w_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
        ui_stack_array._offset_x_ = (uint16_t)ui_loop_counter;
        ui_stack_array._offset_y_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
        ui_stack_array._offset_z_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_OFFSET_32);
        ui_stack_array._offset_w_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
        ui_system_shader_buffer_variable._component_x_ = pui_component_value[UI_STACK_SIZE_128] - pui_component_value[0x2e0];
        ui_system_shader_buffer_variable._component_y_ = pui_component_value[0x81] - pui_component_value[0x2e1];
        ui_system_shader_buffer_variable._component_z_ = pui_component_value[0x82] - pui_component_value[0x2e2];
        ui_system_shader_buffer_variable._component_w_ = pui_component_value[0x83] - pui_component_value[0x2e3];
        ui_system_shader_buffer_variable._offset_x_ = pui_component_value[UI_WIDGET_ITEM_SIZE] - pui_component_value[0x2e4];
        ui_system_shader_buffer_variable._offset_y_ = pui_component_value[0x85] - pui_component_value[0x2e5];
        ui_system_shader_buffer_variable._offset_z_ = pui_component_value[0x86] - pui_component_value[0x2e6];
        ui_system_shader_buffer_variable._offset_w_ = pui_component_value[0x87] - pui_component_value[0x2e7];
        ui_loop_counter = *(uint64_t *)(pui_component_value + 0xe0);
        ui_loop_counter = *(uint64_t *)(pui_component_value + 0xe4);
        ui_loop_counter = *(uint64_t *)(pui_component_value + UI_MAX_COMPONENT_VALUE);
        ui_loop_counter = *(uint64_t *)(pui_component_value + 0x104);
        ui_stack_array._component_y_ = pui_component_value[0x2a1] + ui_stack_array._component_y_;
        ui_stack_array._component_x_ = *(short *)*(uint8_t (*) [14])(pui_component_value + UI_STACK_SIZE_672) + ui_stack_array._component_x_;
        ui_stack_array._component_z_ = pui_component_value[0x2a2] + ui_stack_array._component_z_;
        ui_stack_array._component_w_ = pui_component_value[0x2a3] + ui_stack_array._component_w_;
        ui_stack_array._offset_x_ = pui_component_value[0x2a4] + ui_stack_array._offset_x_;
        ui_stack_array._offset_y_ = pui_component_value[0x2a5] + ui_stack_array._offset_y_;
        ui_stack_array._offset_z_ = pui_component_value[0x2a6] + ui_stack_array._offset_z_;
        ui_stack_array._offset_w_ = pui_component_value[0x2a7] + ui_stack_array._offset_w_;
        ui_stack_array._component_x_ = (uint16_t)ui_loop_counter;
        ui_stack_array._component_y_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
        ui_stack_array._component_z_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_OFFSET_32);
        ui_stack_array._component_w_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
        ui_stack_array._offset_x_ = (uint16_t)ui_loop_counter;
        ui_stack_array._offset_y_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
        ui_stack_array._offset_z_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_OFFSET_32);
        ui_stack_array._offset_w_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
        ui_stack_array._component_y_ = pui_component_value[UI_CALLBACK_HANDLER_OFFSET1] + ui_stack_array._component_y_;
        ui_stack_array._component_x_ = pui_component_value[UI_CALLBACK_HANDLER_OFFSET0] + ui_stack_array._component_x_;
        ui_stack_array._component_z_ = pui_component_value[UI_CALLBACK_HANDLER_OFFSET2] + ui_stack_array._component_z_;
        ui_stack_array._component_w_ = pui_component_value[UI_CALLBACK_HANDLER_OFFSET3] + ui_stack_array._component_w_;
        ui_stack_array._offset_x_ = pui_component_value[UI_CALLBACK_HANDLER_OFFSET4] + ui_stack_array._offset_x_;
        ui_stack_array._offset_y_ = pui_component_value[UI_CALLBACK_HANDLER_OFFSET5] + ui_stack_array._offset_y_;
        ui_stack_array._offset_z_ = pui_component_value[UI_CALLBACK_HANDLER_OFFSET6] + ui_stack_array._offset_z_;
        ui_stack_array._offset_w_ = pui_component_value[UI_CALLBACK_HANDLER_OFFSET7] + ui_stack_array._offset_w_;
        ui_stack_array._component_x_ = (uint16_t)ui_loop_counter;
        ui_stack_array._component_y_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
        ui_stack_array._component_z_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_OFFSET_32);
        ui_stack_array._component_w_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
        ui_stack_array._offset_x_ = (uint16_t)ui_loop_counter;
        ui_stack_array._offset_y_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
        ui_stack_array._offset_z_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_OFFSET_32);
        ui_stack_array._offset_w_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
        ui_stack_array._component_y_ = pui_component_value[UI_FOCUS_STATE_OFFSET1] + ui_stack_array._component_y_;
        ui_stack_array._component_x_ = pui_component_value[UI_FOCUS_STATE_OFFSET0] + ui_stack_array._component_x_;
        ui_stack_array._component_z_ = pui_component_value[UI_FOCUS_STATE_OFFSET2] + ui_stack_array._component_z_;
        ui_stack_array._component_w_ = pui_component_value[UI_FOCUS_STATE_OFFSET3] + ui_stack_array._component_w_;
        ui_stack_array._offset_x_ = pui_component_value[UI_FOCUS_STATE_OFFSET4] + ui_stack_array._offset_x_;
        ui_stack_array._offset_y_ = pui_component_value[UI_FOCUS_STATE_OFFSET5] + ui_stack_array._offset_y_;
        ui_stack_array._offset_z_ = pui_component_value[UI_FOCUS_STATE_OFFSET6] + ui_stack_array._offset_z_;
        ui_stack_array._offset_w_ = pui_component_value[UI_FOCUS_STATE_OFFSET7] + ui_stack_array._offset_w_;
        ui_stack_array._component_y_ = pui_component_value[UI_EVENT_COUNTER_OFFSET1] + pui_component_value[UI_NETWORK_RESOURCE_TYPE1];
        ui_stack_array._component_x_ = pui_component_value[UI_EVENT_COUNTER_OFFSET0] + pui_component_value[UI_NETWORK_RESOURCE_TYPE0];
        ui_stack_array._component_z_ = pui_component_value[UI_EVENT_COUNTER_OFFSET2] + pui_component_value[UI_NETWORK_RESOURCE_TYPE2];
        ui_stack_array._component_w_ = pui_component_value[UI_EVENT_COUNTER_OFFSET3] + pui_component_value[UI_NETWORK_RESOURCE_TYPE3];
        ui_stack_array._offset_x_ = pui_component_value[UI_EVENT_COUNTER_OFFSET4] + pui_component_value[UI_NETWORK_RESOURCE_TYPE4];
        ui_stack_array._offset_y_ = pui_component_value[UI_EVENT_COUNTER_OFFSET5] + pui_component_value[UI_NETWORK_RESOURCE_TYPE5];
        ui_stack_array._offset_z_ = pui_component_value[UI_EVENT_COUNTER_OFFSET6] + pui_component_value[UI_NETWORK_RESOURCE_TYPE6];
        ui_stack_array._offset_w_ = pui_component_value[UI_EVENT_COUNTER_OFFSET7] + pui_component_value[UI_NETWORK_RESOURCE_TYPE7];
        ui_stack_array._component_y_ = pui_component_value[UI_NETWORK_RESOURCE_TYPE1] - pui_component_value[UI_EVENT_COUNTER_OFFSET1];
        ui_stack_array._component_x_ = pui_component_value[UI_NETWORK_RESOURCE_TYPE0] - pui_component_value[UI_EVENT_COUNTER_OFFSET0];
        ui_stack_array._component_z_ = pui_component_value[UI_NETWORK_RESOURCE_TYPE2] - pui_component_value[UI_EVENT_COUNTER_OFFSET2];
        ui_stack_array._component_w_ = pui_component_value[UI_NETWORK_RESOURCE_TYPE3] - pui_component_value[UI_EVENT_COUNTER_OFFSET3];
        ui_stack_array._offset_x_ = pui_component_value[UI_NETWORK_RESOURCE_TYPE4] - pui_component_value[UI_EVENT_COUNTER_OFFSET4];
        ui_stack_array._offset_y_ = pui_component_value[UI_NETWORK_RESOURCE_TYPE5] - pui_component_value[UI_EVENT_COUNTER_OFFSET5];
        ui_stack_array._offset_z_ = pui_component_value[UI_NETWORK_RESOURCE_TYPE6] - pui_component_value[UI_EVENT_COUNTER_OFFSET6];
        ui_stack_array._offset_w_ = pui_component_value[UI_NETWORK_RESOURCE_TYPE7] - pui_component_value[UI_EVENT_COUNTER_OFFSET7];
        ui_stack_array._component_y_ = pui_component_value[0x101] - pui_component_value[UI_FOCUS_STATE_OFFSET1];
        ui_stack_array._component_x_ = pui_component_value[UI_MAX_COMPONENT_VALUE] - pui_component_value[UI_FOCUS_STATE_OFFSET0];
        ui_stack_array._component_z_ = pui_component_value[0x102] - pui_component_value[UI_FOCUS_STATE_OFFSET2];
        ui_stack_array._component_w_ = pui_component_value[0x103] - pui_component_value[UI_FOCUS_STATE_OFFSET3];
        ui_stack_array._offset_x_ = pui_component_value[0x104] - pui_component_value[UI_FOCUS_STATE_OFFSET4];
        ui_stack_array._offset_y_ = pui_component_value[0x105] - pui_component_value[UI_FOCUS_STATE_OFFSET5];
        ui_stack_array._offset_z_ = pui_component_value[0x106] - pui_component_value[UI_FOCUS_STATE_OFFSET6];
        ui_stack_array._offset_w_ = pui_component_value[0x107] - pui_component_value[UI_FOCUS_STATE_OFFSET7];
        ui_stack_array._component_y_ = pui_component_value[0xe1] - pui_component_value[UI_CALLBACK_HANDLER_OFFSET1];
        ui_stack_array._component_x_ = pui_component_value[0xe0] - pui_component_value[UI_CALLBACK_HANDLER_OFFSET0];
        ui_stack_array._component_z_ = pui_component_value[0xe2] - pui_component_value[UI_CALLBACK_HANDLER_OFFSET2];
        ui_stack_array._component_w_ = pui_component_value[0xe3] - pui_component_value[UI_CALLBACK_HANDLER_OFFSET3];
        ui_stack_array._offset_x_ = pui_component_value[0xe4] - pui_component_value[UI_CALLBACK_HANDLER_OFFSET4];
        ui_stack_array._offset_y_ = pui_component_value[0xe5] - pui_component_value[UI_CALLBACK_HANDLER_OFFSET5];
        ui_stack_array._offset_z_ = pui_component_value[0xe6] - pui_component_value[UI_CALLBACK_HANDLER_OFFSET6];
        ui_stack_array._offset_w_ = pui_component_value[0xe7] - pui_component_value[UI_CALLBACK_HANDLER_OFFSET7];
        ui_stack_array._component_x_ = aui_event_id_fourth._component_x_;
        ui_stack_array._component_y_ = aui_event_id_fourth._component_y_;
        ui_stack_array._component_z_ = aui_event_id_fourth._component_z_;
        ui_stack_array._component_w_ = aui_event_id_fourth._component_w_;
        ui_stack_array._offset_x_ = aui_event_id_fourth._offset_x_;
        ui_stack_array._offset_y_ = aui_event_id_fourth._offset_y_;
        ui_stack_array._offset_z_ = aui_event_id_fourth._offset_z_;
        ui_stack_array._component_y_ = pui_component_value[0xc1] - ui_stack_array._component_y_;
        ui_stack_array._component_x_ = pui_component_value[UI_RENDER_CONTEXT_OFFSET] - ui_stack_array._component_x_;
        ui_stack_array._component_z_ = pui_component_value[0xc2] - ui_stack_array._component_z_;
        ui_stack_array._component_w_ = pui_component_value[0xc3] - ui_stack_array._component_w_;
        ui_stack_array._offset_x_ = pui_component_value[0xc4] - ui_stack_array._offset_x_;
        ui_stack_array._offset_y_ = pui_component_value[0xc5] - ui_stack_array._offset_y_;
        ui_stack_array._offset_z_ = pui_component_value[0xc6] - ui_stack_array._offset_z_;
        ui_stack_array._offset_w_ = pui_component_value[199] - pui_component_value[0x2a7];
        aui_event_id_fourth = *(uint8_t (*) [14])(pui_component_value + UI_OFFSET_320);
        ui_loop_counter = *(uint64_t *)(pui_component_value + UI_ANIMATION_DATA_OFFSET);
        ui_loop_counter = *(uint64_t *)(pui_component_value + 0x144);
        ui_stack_array._component_x_ = (uint16_t)ui_loop_counter;
        ui_stack_array._component_y_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
        ui_stack_array._component_z_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_OFFSET_32);
        ui_stack_array._component_w_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
        ui_stack_array._offset_x_ = (uint16_t)ui_loop_counter;
        ui_stack_array._offset_y_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
        ui_stack_array._offset_z_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_OFFSET_32);
        ui_stack_array._offset_w_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
        ui_loop_counter = *(uint64_t *)(pui_component_value + UI_OFFSET_220);
        ui_loop_counter = *(uint64_t *)(pui_component_value + UI_OFFSET_224);
        ui_stack_array._component_y_ = pui_component_value[UI_WIDGET_STATE_OFFSET1] + ui_stack_array._component_y_;
        ui_stack_array._component_x_ = pui_component_value[UI_VERTEX_BUFFER_OFFSET] + ui_stack_array._component_x_;
        ui_stack_array._component_z_ = pui_component_value[UI_WIDGET_STATE_OFFSET2] + ui_stack_array._component_z_;
        ui_stack_array._component_w_ = pui_component_value[UI_WIDGET_STATE_OFFSET3] + ui_stack_array._component_w_;
        ui_stack_array._offset_x_ = pui_component_value[UI_INDEX_BUFFER_OFFSET] + ui_stack_array._offset_x_;
        ui_stack_array._offset_y_ = pui_component_value[UI_WIDGET_STATE_OFFSET5] + ui_stack_array._offset_y_;
        ui_stack_array._offset_z_ = pui_component_value[UI_WIDGET_STATE_OFFSET6] + ui_stack_array._offset_z_;
        ui_stack_array._offset_w_ = pui_component_value[UI_WIDGET_STATE_OFFSET7] + ui_stack_array._offset_w_;
        ui_stack_array._component_x_ = (uint16_t)ui_loop_counter;
        ui_stack_array._component_y_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
        ui_stack_array._component_z_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_OFFSET_32);
        ui_stack_array._component_w_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
        ui_stack_array._offset_x_ = (uint16_t)ui_loop_counter;
        ui_stack_array._offset_y_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_EVENT_FLAG_OFFSET);
        ui_stack_array._offset_z_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_OFFSET_32);
        ui_stack_array._offset_w_ = (uint16_t)((ulonglong)ui_loop_counter >> UI_MEMORY_ALLOC_SIZE);
        ui_stack_array._component_y_ = pui_component_value[UI_OFFSET_321] + ui_stack_array._component_y_;
        ui_stack_array._component_x_ = *(short *)*(uint8_t (*) [14])(pui_component_value + UI_OFFSET_320) + ui_stack_array._component_x_;
        ui_stack_array._component_z_ = pui_component_value[UI_OFFSET_322] + ui_stack_array._component_z_;
        ui_stack_array._component_w_ = pui_component_value[UI_OFFSET_323] + ui_stack_array._component_w_;
        ui_stack_array._offset_x_ = pui_component_value[UI_OFFSET_324] + ui_stack_array._offset_x_;
        ui_stack_array._offset_y_ = pui_component_value[UI_OFFSET_325] + ui_stack_array._offset_y_;
        ui_stack_array._offset_z_ = pui_component_value[UI_OFFSET_326] + ui_stack_array._offset_z_;
        ui_stack_array._offset_w_ = pui_component_value[UI_OFFSET_327] + ui_stack_array._offset_w_;
        ui_stack_array._component_y_ = pui_component_value[UI_OFFSET_301] + pui_component_value[UI_SNAPSHOT_CREATE_FLAGS1];
        ui_stack_array._component_x_ = pui_component_value[UI_OFFSET_300] + pui_component_value[UI_SNAPSHOT_CREATE_FLAGS0];
        ui_stack_array._component_z_ = pui_component_value[UI_OFFSET_302] + pui_component_value[UI_SNAPSHOT_CREATE_FLAGS2];
        ui_stack_array._component_w_ = pui_component_value[UI_OFFSET_303] + pui_component_value[UI_SNAPSHOT_CREATE_FLAGS3];
        ui_stack_array._offset_x_ = pui_component_value[UI_OFFSET_304] + pui_component_value[UI_SNAPSHOT_CREATE_FLAGS4];
        ui_stack_array._offset_y_ = pui_component_value[UI_OFFSET_305] + pui_component_value[UI_SNAPSHOT_CREATE_FLAGS5];
        ui_stack_array._offset_z_ = pui_component_value[UI_OFFSET_306] + pui_component_value[UI_SNAPSHOT_CREATE_FLAGS6];
        ui_stack_array._offset_w_ = pui_component_value[UI_OFFSET_307] + pui_component_value[UI_SNAPSHOT_CREATE_FLAGS7];
        ui_stack_array._component_x_ = pui_component_value[UI_SNAPSHOT_CREATE_FLAGS0] - pui_component_value[UI_OFFSET_300];
        ui_stack_array._component_y_ = pui_component_value[UI_SNAPSHOT_CREATE_FLAGS1] - pui_component_value[UI_OFFSET_301];
        ui_stack_array._component_z_ = pui_component_value[UI_SNAPSHOT_CREATE_FLAGS2] - pui_component_value[UI_OFFSET_302];
        ui_stack_array._component_w_ = pui_component_value[UI_SNAPSHOT_CREATE_FLAGS3] - pui_component_value[UI_OFFSET_303];
        ui_stack_array._offset_x_ = pui_component_value[UI_SNAPSHOT_CREATE_FLAGS4] - pui_component_value[UI_OFFSET_304];
        ui_stack_array._offset_y_ = pui_component_value[UI_SNAPSHOT_CREATE_FLAGS5] - pui_component_value[UI_OFFSET_305];
        ui_stack_array._offset_z_ = pui_component_value[UI_SNAPSHOT_CREATE_FLAGS6] - pui_component_value[UI_OFFSET_306];
        ui_stack_array._offset_w_ = pui_component_value[UI_SNAPSHOT_CREATE_FLAGS7] - pui_component_value[UI_OFFSET_307];
        ui_stack_array._component_y_ = pui_component_value[UI_OFFSET_281] + pui_component_value[UI_MEMORY_RESOURCE_TYPE1];
        ui_stack_array._component_x_ = pui_component_value[UI_OFFSET_280] + pui_component_value[UI_MEMORY_RESOURCE_TYPE0];
        ui_stack_array._component_z_ = pui_component_value[UI_OFFSET_282] + pui_component_value[UI_MEMORY_RESOURCE_TYPE2];
        ui_stack_array._component_w_ = pui_component_value[UI_OFFSET_283] + pui_component_value[UI_MEMORY_RESOURCE_TYPE3];
        ui_stack_array._offset_x_ = pui_component_value[UI_OFFSET_284] + pui_component_value[UI_MEMORY_RESOURCE_TYPE4];
        ui_stack_array._offset_y_ = pui_component_value[UI_OFFSET_285] + pui_component_value[UI_MEMORY_RESOURCE_TYPE5];
        ui_stack_array._offset_z_ = pui_component_value[UI_OFFSET_286] + pui_component_value[UI_MEMORY_RESOURCE_TYPE6];
        ui_stack_array._offset_w_ = pui_component_value[UI_OFFSET_287] + pui_component_value[UI_MEMORY_RESOURCE_TYPE7];
        ui_stack_array._component_x_ = aui_event_id_fourth._component_x_;
        ui_stack_array._component_y_ = aui_event_id_fourth._component_y_;
        ui_stack_array._component_z_ = aui_event_id_fourth._component_z_;
        ui_stack_array._component_w_ = aui_event_id_fourth._component_w_;
        ui_stack_array._offset_x_ = aui_event_id_fourth._offset_x_;
        ui_stack_array._offset_y_ = aui_event_id_fourth._offset_y_;
        ui_stack_array._offset_z_ = aui_event_id_fourth._offset_z_;
        ui_stack_array._component_y_ = pui_component_value[UI_OFFSET_221] - ui_stack_array._component_y_;
        ui_stack_array._component_x_ = pui_component_value[UI_OFFSET_220] - ui_stack_array._component_x_;
        ui_stack_array._component_z_ = pui_component_value[UI_OFFSET_222] - ui_stack_array._component_z_;
        ui_stack_array._component_w_ = pui_component_value[UI_OFFSET_223] - ui_stack_array._component_w_;
        ui_stack_array._offset_x_ = pui_component_value[UI_OFFSET_224] - ui_stack_array._offset_x_;
        ui_stack_array._offset_y_ = pui_component_value[UI_OFFSET_225] - ui_stack_array._offset_y_;
        ui_stack_array._offset_z_ = pui_component_value[UI_OFFSET_226] - ui_stack_array._offset_z_;
        ui_stack_array._offset_w_ = pui_component_value[UI_OFFSET_227] - pui_component_value[UI_OFFSET_327];
        ui_stack_array._component_y_ = pui_component_value[UI_MEMORY_RESOURCE_TYPE1] - pui_component_value[UI_OFFSET_281];
        ui_stack_array._component_x_ = pui_component_value[UI_MEMORY_RESOURCE_TYPE0] - pui_component_value[UI_OFFSET_280];
        ui_stack_array._component_z_ = pui_component_value[UI_MEMORY_RESOURCE_TYPE2] - pui_component_value[UI_OFFSET_282];
        ui_stack_array._component_w_ = pui_component_value[UI_MEMORY_RESOURCE_TYPE3] - pui_component_value[UI_OFFSET_283];
        ui_stack_array._offset_x_ = pui_component_value[UI_MEMORY_RESOURCE_TYPE4] - pui_component_value[UI_OFFSET_284];
        ui_stack_array._offset_y_ = pui_component_value[UI_MEMORY_RESOURCE_TYPE5] - pui_component_value[UI_OFFSET_285];
        ui_stack_array._offset_z_ = pui_component_value[UI_MEMORY_RESOURCE_TYPE6] - pui_component_value[UI_OFFSET_286];
        ui_stack_array._offset_w_ = pui_component_value[UI_MEMORY_RESOURCE_TYPE7] - pui_component_value[UI_OFFSET_287];
        ui_stack_array._component_x_ = pui_component_value[UI_ANIMATION_DATA_OFFSET] - pui_component_value[UI_VERTEX_BUFFER_OFFSET];
        ui_stack_array._component_y_ = pui_component_value[0x141] - pui_component_value[UI_WIDGET_STATE_OFFSET1];
        ui_stack_array._component_z_ = pui_component_value[0x142] - pui_component_value[UI_WIDGET_STATE_OFFSET2];
        ui_stack_array._component_w_ = pui_component_value[0x143] - pui_component_value[UI_WIDGET_STATE_OFFSET3];
        ui_stack_array._offset_x_ = pui_component_value[0x144] - pui_component_value[UI_INDEX_BUFFER_OFFSET];
        ui_stack_array._offset_y_ = pui_component_value[0x145] - pui_component_value[UI_WIDGET_STATE_OFFSET5];
        ui_stack_array._offset_z_ = pui_component_value[0x146] - pui_component_value[UI_WIDGET_STATE_OFFSET6];
        ui_stack_array._offset_w_ = pui_component_value[0x147] - pui_component_value[UI_WIDGET_STATE_OFFSET7];
      }
      ui_stack_array._component_x_ = ui_stack_array._component_x_ + ui_stack_array._component_x_;
      ui_stack_array._component_y_ = ui_stack_array._component_y_ + ui_stack_array._component_y_;
      ui_stack_array._component_z_ = ui_stack_array._component_z_ + ui_stack_array._component_z_;
      ui_stack_array._component_w_ = ui_stack_array._component_w_ + ui_stack_array._component_w_;
      ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + ui_stack_array._offset_x_;
      ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + ui_stack_array._offset_y_;
      ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + ui_stack_array._offset_z_;
      ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + ui_stack_array._offset_w_;
      ui_stack_array._component_x_ = ui_stack_array._component_x_ - ui_stack_array._component_x_;
      ui_stack_array._component_y_ = ui_stack_array._component_y_ - ui_stack_array._component_y_;
      ui_stack_array._component_z_ = ui_stack_array._component_z_ - ui_stack_array._component_z_;
      ui_stack_array._component_w_ = ui_stack_array._component_w_ - ui_stack_array._component_w_;
      ui_stack_array._offset_x_ = ui_stack_array._offset_x_ - ui_stack_array._offset_x_;
      ui_stack_array._offset_y_ = ui_stack_array._offset_y_ - ui_stack_array._offset_y_;
      ui_stack_array._offset_z_ = ui_stack_array._offset_z_ - ui_stack_array._offset_z_;
      ui_stack_array._offset_w_ = ui_stack_array._offset_w_ - ui_stack_array._offset_w_;
      ui_temp_buffer._0_12_ = ui_system_shader_buffer_variable._0_12_;
      ui_temp_buffer._offset_z_ = ui_system_shader_buffer_variable._component_w_;
      ui_temp_buffer._offset_w_ = ui_stack_array._component_w_;
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
      ui_temp_buffer._0_10_ = ui_system_shader_buffer_variable._0_10_;
      ui_temp_buffer._offset_y_ = ui_stack_array._component_z_;
      ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
      ui_temp_buffer._0_8_ = ui_system_shader_buffer_variable._0_8_;
      ui_temp_buffer._offset_x_ = ui_system_shader_buffer_variable._component_z_;
      ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
      ui_temp_buffer._component_w_ = ui_stack_array._component_y_;
      ui_temp_buffer._component_z_ = ui_system_shader_buffer_variable._component_y_;
      ui_temp_buffer._component_x_ = ui_system_shader_buffer_variable._component_x_;
      ui_temp_buffer._component_y_ = ui_stack_array._component_x_;
      ui_system_shader_buffer_variable._component_y_ = ui_stack_array._offset_x_;
      ui_system_shader_buffer_variable._component_x_ = ui_system_shader_buffer_variable._offset_x_;
      ui_system_shader_buffer_variable._component_z_ = ui_system_shader_buffer_variable._offset_y_;
      ui_system_shader_buffer_variable._component_w_ = ui_stack_array._offset_y_;
      ui_system_shader_buffer_variable._offset_x_ = ui_system_shader_buffer_variable._offset_z_;
      ui_system_shader_buffer_variable._offset_y_ = ui_stack_array._offset_z_;
      ui_system_shader_buffer_variable._offset_z_ = ui_system_shader_buffer_variable._offset_w_;
      ui_system_shader_buffer_variable._offset_w_ = ui_stack_array._offset_w_;
      ui_stack_array._component_x_ = ui_stack_array._component_x_ + ui_temp_buffer._component_x_;
      ui_stack_array._component_y_ = ui_stack_array._component_y_ + ui_temp_buffer._component_y_;
      ui_stack_array._component_z_ = ui_stack_array._component_z_ + ui_temp_buffer._component_z_;
      ui_stack_array._component_w_ = ui_stack_array._component_w_ + ui_temp_buffer._component_w_;
      ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + ui_temp_buffer._offset_x_;
      ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + ui_temp_buffer._offset_y_;
      ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + ui_temp_buffer._offset_z_;
      ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + ui_temp_buffer._offset_w_;
      ui_stack_array._component_x_ = ui_temp_buffer._component_x_ - ui_stack_array._component_x_;
      ui_stack_array._component_y_ = ui_temp_buffer._component_y_ - ui_stack_array._component_y_;
      ui_stack_array._component_z_ = ui_temp_buffer._component_z_ - ui_stack_array._component_z_;
      ui_stack_array._component_w_ = ui_temp_buffer._component_w_ - ui_stack_array._component_w_;
      ui_stack_array._offset_x_ = ui_temp_buffer._offset_x_ - ui_stack_array._offset_x_;
      ui_stack_array._offset_y_ = ui_temp_buffer._offset_y_ - ui_stack_array._offset_y_;
      ui_stack_array._offset_z_ = ui_temp_buffer._offset_z_ - ui_stack_array._offset_z_;
      ui_stack_array._offset_w_ = ui_temp_buffer._offset_w_ - ui_stack_array._offset_w_;
      ui_stack_array._component_x_ = ui_stack_array._component_x_ + ui_stack_array._component_x_;
      ui_stack_array._component_y_ = ui_stack_array._component_y_ + ui_stack_array._component_y_;
      ui_stack_array._component_z_ = ui_stack_array._component_z_ + ui_stack_array._component_z_;
      ui_stack_array._component_w_ = ui_stack_array._component_w_ + ui_stack_array._component_w_;
      ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + ui_stack_array._offset_x_;
      ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + ui_stack_array._offset_y_;
      ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + ui_stack_array._offset_z_;
      ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + ui_stack_array._offset_w_;
      aui_task_identifier3._component_x_ = ui_stack_array._component_x_ - ui_stack_array._component_x_;
      aui_task_identifier3._component_y_ = ui_stack_array._component_y_ - ui_stack_array._component_y_;
      aui_task_identifier3._component_z_ = ui_stack_array._component_z_ - ui_stack_array._component_z_;
      aui_task_identifier3._component_w_ = ui_stack_array._component_w_ - ui_stack_array._component_w_;
      aui_task_identifier3._offset_x_ = ui_stack_array._offset_x_ - ui_stack_array._offset_x_;
      aui_task_identifier3._offset_y_ = ui_stack_array._offset_y_ - ui_stack_array._offset_y_;
      aui_task_identifier3._offset_z_ = ui_stack_array._offset_z_ - ui_stack_array._offset_z_;
      aui_task_identifier3._offset_w_ = ui_stack_array._offset_w_ - ui_stack_array._offset_w_;
      ui_temp_buffer._0_12_ = ui_temporary_buffer._0_12_;
      ui_temp_buffer._offset_z_ = ui_temporary_buffer._component_w_;
      ui_temp_buffer._offset_w_ = ui_stack_array._component_w_;
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
      ui_temp_buffer._0_10_ = ui_temporary_buffer._0_10_;
      ui_temp_buffer._offset_y_ = ui_stack_array._component_z_;
      ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
      ui_temp_buffer._0_8_ = ui_temporary_buffer._0_8_;
      ui_temp_buffer._offset_x_ = ui_temporary_buffer._component_z_;
      ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
      ui_temp_buffer._component_w_ = ui_stack_array._component_y_;
      ui_temp_buffer._component_z_ = ui_temporary_buffer._component_y_;
      ui_temp_buffer._component_x_ = ui_temporary_buffer._component_x_;
      ui_temp_buffer._component_y_ = ui_stack_array._component_x_;
      ui_temporary_buffer._component_y_ = ui_stack_array._offset_x_;
      ui_temporary_buffer._component_x_ = ui_temporary_buffer._offset_x_;
      ui_temporary_buffer._component_z_ = ui_temporary_buffer._offset_y_;
      ui_temporary_buffer._component_w_ = ui_stack_array._offset_y_;
      ui_temporary_buffer._offset_x_ = ui_temporary_buffer._offset_z_;
      ui_temporary_buffer._offset_y_ = ui_stack_array._offset_z_;
      ui_temporary_buffer._offset_z_ = ui_temporary_buffer._offset_w_;
      ui_temporary_buffer._offset_w_ = ui_stack_array._offset_w_;
      ui_stack_array._component_x_ = ui_stack_array._component_x_ + ui_temp_buffer._component_x_;
      ui_stack_array._component_y_ = ui_stack_array._component_y_ + ui_temp_buffer._component_y_;
      ui_stack_array._component_z_ = ui_stack_array._component_z_ + ui_temp_buffer._component_z_;
      ui_stack_array._component_w_ = ui_stack_array._component_w_ + ui_temp_buffer._component_w_;
      ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + ui_temp_buffer._offset_x_;
      ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + ui_temp_buffer._offset_y_;
      ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + ui_temp_buffer._offset_z_;
      ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + ui_temp_buffer._offset_w_;
      ui_temp_buffer._component_x_ = ui_temp_buffer._component_x_ - ui_stack_array._component_x_;
      ui_temp_buffer._component_y_ = ui_temp_buffer._component_y_ - ui_stack_array._component_y_;
      ui_temp_buffer._component_z_ = ui_temp_buffer._component_z_ - ui_stack_array._component_z_;
      ui_temp_buffer._component_w_ = ui_temp_buffer._component_w_ - ui_stack_array._component_w_;
      ui_temp_buffer._offset_x_ = ui_temp_buffer._offset_x_ - ui_stack_array._offset_x_;
      ui_temp_buffer._offset_y_ = ui_temp_buffer._offset_y_ - ui_stack_array._offset_y_;
      ui_temp_buffer._offset_z_ = ui_temp_buffer._offset_z_ - ui_stack_array._offset_z_;
      ui_temp_buffer._0_12_ = ui_temp_buffer;
      ui_temp_buffer._offset_w_ = ui_temp_buffer._offset_w_ - ui_stack_array._offset_w_;
      ui_stack_array._component_x_ = ui_stack_array._component_x_ + ui_temp_buffer._component_x_;
      ui_stack_array._component_y_ = ui_stack_array._component_y_ + ui_temp_buffer._component_y_;
      ui_stack_array._component_z_ = ui_stack_array._component_z_ + ui_temp_buffer._component_z_;
      ui_stack_array._component_w_ = ui_stack_array._component_w_ + ui_temp_buffer._component_w_;
      ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + ui_temp_buffer._offset_x_;
      ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + ui_temp_buffer._offset_y_;
      ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + ui_temp_buffer._offset_z_;
      ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + ui_temp_buffer._offset_w_;
      ui_stack_array._component_x_ = ui_temp_buffer._component_x_ - ui_stack_array._component_x_;
      ui_stack_array._component_y_ = ui_temp_buffer._component_y_ - ui_stack_array._component_y_;
      ui_stack_array._component_z_ = ui_temp_buffer._component_z_ - ui_stack_array._component_z_;
      ui_stack_array._component_w_ = ui_temp_buffer._component_w_ - ui_stack_array._component_w_;
      ui_stack_array._offset_x_ = ui_temp_buffer._offset_x_ - ui_stack_array._offset_x_;
      ui_stack_array._offset_y_ = ui_temp_buffer._offset_y_ - ui_stack_array._offset_y_;
      ui_stack_array._offset_z_ = ui_temp_buffer._offset_z_ - ui_stack_array._offset_z_;
      ui_stack_array._offset_w_ = ui_temp_buffer._offset_w_ - ui_stack_array._offset_w_;
      ui_stack_array._component_x_ = ui_stack_array._component_x_ + ui_temp_buffer._component_x_;
      ui_stack_array._component_y_ = ui_stack_array._component_y_ + ui_temp_buffer._component_y_;
      ui_stack_array._component_z_ = ui_stack_array._component_z_ + ui_temp_buffer._component_z_;
      ui_stack_array._component_w_ = ui_stack_array._component_w_ + ui_temp_buffer._component_w_;
      ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + ui_temp_buffer._offset_x_;
      ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + ui_temp_buffer._offset_y_;
      ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + ui_temp_buffer._offset_z_;
      ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + ui_temp_buffer._offset_w_;
      ui_component = ui_temp_buffer._component_x_ - ui_stack_array._component_x_;
      ui_component = ui_temp_buffer._component_y_ - ui_stack_array._component_y_;
      ui_component = ui_temp_buffer._component_z_ - ui_stack_array._component_z_;
      ui_component = ui_temp_buffer._component_w_ - ui_stack_array._component_w_;
      ui_component = ui_temp_buffer._offset_x_ - ui_stack_array._offset_x_;
      ui_component = ui_temp_buffer._offset_y_ - ui_stack_array._offset_y_;
      ui_component = ui_temp_buffer._offset_z_ - ui_stack_array._offset_z_;
      ui_component = ui_temp_buffer._offset_w_ - ui_stack_array._offset_w_;
      ui_stack_array._component_x_ = ui_stack_array._component_x_ + ui_temp_buffer._component_x_;
      ui_stack_array._component_y_ = ui_stack_array._component_y_ + ui_temp_buffer._component_y_;
      ui_stack_array._component_z_ = ui_stack_array._component_z_ + ui_temp_buffer._component_z_;
      ui_stack_array._component_w_ = ui_stack_array._component_w_ + ui_temp_buffer._component_w_;
      ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + ui_temp_buffer._offset_x_;
      ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + ui_temp_buffer._offset_y_;
      ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + ui_temp_buffer._offset_z_;
      ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + ui_temp_buffer._offset_w_;
      ui_stack_array._component_x_ = ui_temp_buffer._component_x_ - ui_stack_array._component_x_;
      ui_stack_array._component_y_ = ui_temp_buffer._component_y_ - ui_stack_array._component_y_;
      ui_stack_array._component_z_ = ui_temp_buffer._component_z_ - ui_stack_array._component_z_;
      ui_stack_array._component_w_ = ui_temp_buffer._component_w_ - ui_stack_array._component_w_;
      ui_stack_array._offset_x_ = ui_temp_buffer._offset_x_ - ui_stack_array._offset_x_;
      ui_stack_array._offset_y_ = ui_temp_buffer._offset_y_ - ui_stack_array._offset_y_;
      ui_stack_array._offset_z_ = ui_temp_buffer._offset_z_ - ui_stack_array._offset_z_;
      ui_stack_array._offset_w_ = ui_temp_buffer._offset_w_ - ui_stack_array._offset_w_;
      ui_component = ui_stack_array._component_x_ + ui_temp_buffer._component_x_;
      short_value13 = ui_stack_array._component_y_ + ui_temp_buffer._component_y_;
      short_value16 = ui_stack_array._component_z_ + ui_temp_buffer._component_z_;
      short_value19 = ui_stack_array._component_w_ + ui_temp_buffer._component_w_;
      short_value20 = ui_stack_array._offset_x_ + ui_temp_buffer._offset_x_;
      short_value23 = ui_stack_array._offset_y_ + ui_temp_buffer._offset_y_;
      short_value26 = ui_stack_array._offset_z_ + ui_temp_buffer._offset_z_;
      short_value29 = ui_stack_array._offset_w_ + ui_temp_buffer._offset_w_;
      ui_stack_array._component_x_ = ui_temp_buffer._component_x_ - ui_stack_array._component_x_;
      ui_stack_array._component_y_ = ui_temp_buffer._component_y_ - ui_stack_array._component_y_;
      ui_stack_array._component_z_ = ui_temp_buffer._component_z_ - ui_stack_array._component_z_;
      ui_stack_array._component_w_ = ui_temp_buffer._component_w_ - ui_stack_array._component_w_;
      ui_stack_array._offset_x_ = ui_temp_buffer._offset_x_ - ui_stack_array._offset_x_;
      ui_stack_array._offset_y_ = ui_temp_buffer._offset_y_ - ui_stack_array._offset_y_;
      ui_stack_array._offset_z_ = ui_temp_buffer._offset_z_ - ui_stack_array._offset_z_;
      ui_stack_array._offset_w_ = ui_temp_buffer._offset_w_ - ui_stack_array._offset_w_;
      ui_stack_array._component_y_ = short_value13;
      ui_stack_array._component_x_ = ui_component;
      ui_stack_array._component_z_ = short_value16;
      ui_stack_array._component_w_ = short_value19;
      ui_stack_array._offset_x_ = short_value20;
      ui_stack_array._offset_y_ = short_value23;
      ui_stack_array._offset_z_ = short_value26;
      ui_stack_array._offset_w_ = short_value29;
      ui_temp_buffer._0_12_ = ui_render_buffer_var._0_12_;
      ui_temp_buffer._offset_z_ = ui_render_buffer_var._component_w_;
      ui_temp_buffer._offset_w_ = ui_stack_array._component_w_;
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
      ui_temp_buffer._0_10_ = ui_render_buffer_var._0_10_;
      ui_temp_buffer._offset_y_ = ui_stack_array._component_z_;
      ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
      ui_temp_buffer._0_8_ = ui_render_buffer_var._0_8_;
      ui_temp_buffer._offset_x_ = ui_render_buffer_var._component_z_;
      ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
      ui_temp_buffer._component_w_ = ui_stack_array._component_y_;
      ui_temp_buffer._component_z_ = ui_render_buffer_var._component_y_;
      ui_temp_buffer._component_x_ = ui_render_buffer_var._component_x_;
      ui_temp_buffer._component_y_ = ui_stack_array._component_x_;
      ui_input_data_buffer._component_y_ = ui_stack_array._offset_x_;
      ui_input_data_buffer._component_x_ = ui_render_buffer_var._offset_x_;
      ui_input_data_buffer._component_z_ = ui_render_buffer_var._offset_y_;
      ui_input_data_buffer._component_w_ = ui_stack_array._offset_y_;
      ui_input_data_buffer._offset_x_ = ui_render_buffer_var._offset_z_;
      ui_input_data_buffer._offset_y_ = ui_stack_array._offset_z_;
      ui_input_data_buffer._offset_z_ = ui_render_buffer_var._offset_w_;
      ui_input_data_buffer._offset_w_ = ui_stack_array._offset_w_;
      ui_render_buffer_var = pmaddwd(ui_temp_buffer,_ui_config_locale_settings);
      aui_event_id70._0_12_ = ui_theme_buffer_var._0_12_;
      aui_event_id70._offset_z_ = ui_theme_buffer_var._component_w_;
      aui_event_id70._offset_w_ = ui_stack_array._component_w_;
      aui_event_id69._data_flags_ = aui_event_id70._data_flags_;
      aui_event_id69._0_10_ = ui_theme_buffer_var._0_10_;
      aui_event_id69._offset_y_ = ui_stack_array._component_z_;
      aui_event_id68._10_6_ = aui_event_id69._10_6_;
      aui_event_id68._0_8_ = ui_theme_buffer_var._0_8_;
      aui_event_id68._offset_x_ = ui_theme_buffer_var._component_z_;
      aui_event_id67._8_8_ = aui_event_id68._8_8_;
      aui_event_id67._component_w_ = ui_stack_array._component_y_;
      aui_event_id67._component_z_ = ui_theme_buffer_var._component_y_;
      aui_event_id67._component_x_ = ui_theme_buffer_var._component_x_;
      aui_event_id67._component_y_ = ui_stack_array._component_x_;
      ui_theme_buffer_var._component_y_ = ui_stack_array._offset_x_;
      ui_theme_buffer_var._component_x_ = ui_theme_buffer_var._offset_x_;
      ui_theme_buffer_var._component_z_ = ui_theme_buffer_var._offset_y_;
      ui_theme_buffer_var._component_w_ = ui_stack_array._offset_y_;
      ui_theme_buffer_var._offset_x_ = ui_theme_buffer_var._offset_z_;
      ui_theme_buffer_var._offset_y_ = ui_stack_array._offset_z_;
      ui_theme_buffer_var._offset_z_ = ui_theme_buffer_var._offset_w_;
      ui_theme_buffer_var._offset_w_ = ui_stack_array._offset_w_;
      ui_stack_array._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_render_buffer_var = pmaddwd(ui_input_data_buffer,_ui_config_locale_settings);
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array = packssdw(ui_stack_array,ui_temp_buffer);
      ui_render_buffer_var = pmaddwd(ui_theme_buffer_var,_ui_config_locale_settings);
      ui_theme_buffer_var = pmaddwd(aui_event_id67,_ui_config_locale_settings);
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_offset_ = ui_theme_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_theme_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_theme_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_theme_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array = packssdw(ui_temp_buffer,ui_temp_buffer);
      ui_render_buffer_var = pmaddwd(ui_temp_buffer,_ui_config_locale_settings);
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_render_buffer_var = pmaddwd(ui_system_shader_buffer_variable,_ui_config_locale_settings);
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array = packssdw(ui_temp_buffer,ui_temp_buffer);
      ui_render_buffer_var = pmaddwd(ui_temporary_buffer,_ui_config_locale_settings);
      ui_theme_buffer_var = pmaddwd(ui_temp_buffer,_ui_config_locale_settings);
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_offset_ = ui_theme_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_theme_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_theme_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_theme_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array = packssdw(ui_temp_buffer,ui_temp_buffer);
      ui_temp_buffer = pmaddwd(ui_temp_buffer,_ui_config_multitouch_settings);
      ui_temp_buffer = pmaddwd(ui_temporary_buffer,_ui_config_multitouch_settings);
      ui_temp_buffer = pmaddwd(ui_temp_buffer,_ui_config_multitouch_settings);
      ui_theme_buffer_var = pmaddwd(aui_event_id67,_ui_config_multitouch_settings);
      ui_render_buffer_var = pmaddwd(ui_temp_buffer,_ui_config_multitouch_settings);
      ui_temp_buffer = pmaddwd(ui_system_shader_buffer_variable,_ui_config_multitouch_settings);
      ui_temporary_buffer = pmaddwd(ui_theme_buffer_var,_ui_config_multitouch_settings);
      ui_system_shader_buffer_variable = pmaddwd(ui_input_data_buffer,_ui_config_multitouch_settings);
      ui_temporary_buffer._data_offset_ = ui_temp_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temporary_buffer._data_size_ = ui_temp_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temporary_buffer._data_format_ = ui_temp_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temporary_buffer._data_flags_ = ui_temp_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_temp_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_temp_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer = packssdw(ui_temp_buffer,ui_temporary_buffer);
      ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_temp_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_temp_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id71._data_offset_ = ui_theme_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id71._data_size_ = ui_theme_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id71._data_format_ = ui_theme_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id71._data_flags_ = ui_theme_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_system_shader_buffer_variable._data_offset_ = ui_temp_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_system_shader_buffer_variable._data_size_ = ui_temp_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_system_shader_buffer_variable._data_format_ = ui_temp_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_system_shader_buffer_variable._data_flags_ = ui_temp_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_theme_buffer_var._data_offset_ = ui_temporary_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_theme_buffer_var._data_size_ = ui_temporary_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_theme_buffer_var._data_format_ = ui_temporary_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_theme_buffer_var._data_flags_ = ui_temporary_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_input_data_buffer._data_offset_ = ui_system_shader_buffer_variable._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_input_data_buffer._data_size_ = ui_system_shader_buffer_variable._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_input_data_buffer._data_format_ = ui_system_shader_buffer_variable._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_input_data_buffer._data_flags_ = ui_system_shader_buffer_variable._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_theme_buffer_var = packssdw(ui_temp_buffer,ui_system_shader_buffer_variable);
      ui_stack_array = packssdw(aui_event_id71,ui_theme_buffer_var);
      ui_render_buffer_var = packssdw(ui_temp_buffer,ui_input_data_buffer);
      ui_stack_array._offset_w_ = ui_theme_buffer_var._offset_w_;
      ui_stack_array._offset_w_ = ui_temp_buffer._offset_w_;
      if (ui_event_index == 1) {
        ui_stack_array._offset_w_ = ui_render_buffer_var._offset_w_;
        ui_stack_array._component_x_ = ui_theme_buffer_var._component_x_;
        ui_stack_array._component_y_ = ui_theme_buffer_var._component_y_;
        ui_stack_array._component_z_ = ui_theme_buffer_var._component_z_;
        ui_stack_array._component_w_ = ui_theme_buffer_var._component_w_;
        ui_stack_array._offset_x_ = ui_theme_buffer_var._offset_x_;
        ui_stack_array._offset_y_ = ui_theme_buffer_var._offset_y_;
        ui_stack_array._offset_z_ = ui_theme_buffer_var._offset_z_;
        short_value32 = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0);
        short_value56 = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0);
        short_value58 = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0);
        short_value60 = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0);
        short_value62 = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0);
        short_value63 = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0);
        short_value64 = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0);
        short_value65 = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0);
        ui_stack_array._component_x_ = ui_temp_buffer._component_x_;
        ui_stack_array._component_y_ = ui_temp_buffer._component_y_;
        ui_stack_array._component_z_ = ui_temp_buffer._component_z_;
        ui_stack_array._component_w_ = ui_temp_buffer._component_w_;
        ui_stack_array._offset_x_ = ui_temp_buffer._offset_x_;
        ui_stack_array._offset_y_ = ui_temp_buffer._offset_y_;
        ui_stack_array._offset_z_ = ui_temp_buffer._offset_z_;
        ui_stack_array._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_stack_array._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_stack_array._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_stack_array._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_stack_array._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_stack_array._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_stack_array._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_stack_array._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_stack_array._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_stack_array._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_stack_array._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_stack_array._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_stack_array._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_stack_array._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_stack_array._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_stack_array._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_stack_array._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_stack_array._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_stack_array._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_stack_array._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_stack_array._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_stack_array._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_stack_array._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_stack_array._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_stack_array._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_stack_array._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_stack_array._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_stack_array._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_stack_array._component_y_ = short_value13 + (ushort)(short_value13 < 0) + 1;
        ui_stack_array._component_x_ = ui_component + (ushort)(ui_component < 0) + 1;
        ui_stack_array._component_z_ = short_value16 + (ushort)(short_value16 < 0) + 1;
        ui_stack_array._component_w_ = short_value19 + (ushort)(short_value19 < 0) + 1;
        ui_stack_array._offset_x_ = short_value20 + (ushort)(short_value20 < 0) + 1;
        ui_stack_array._offset_y_ = short_value23 + (ushort)(short_value23 < 0) + 1;
        ui_stack_array._offset_z_ = short_value26 + (ushort)(short_value26 < 0) + 1;
        ui_stack_array._offset_w_ = short_value29 + (ushort)(short_value29 < 0) + 1;
        ui_stack_array._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_stack_array._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_stack_array._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_stack_array._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_stack_array._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_stack_array._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_stack_array._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_stack_array._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_stack_array._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_stack_array._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_stack_array._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_stack_array._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_stack_array._component_y_ = ui_temp_buffer._component_y_ + (ushort)(ui_temp_buffer._component_y_ < 0) + 1;
        ui_stack_array._component_x_ = ui_temp_buffer._component_x_ + (ushort)(ui_temp_buffer._component_x_ < 0) + 1;
        ui_stack_array._component_z_ = ui_temp_buffer._component_z_ + (ushort)(ui_temp_buffer._component_z_ < 0) + 1;
        ui_stack_array._component_w_ = ui_temp_buffer._component_w_ + (ushort)(ui_temp_buffer._component_w_ < 0) + 1;
        ui_stack_array._offset_x_ = ui_temp_buffer._offset_x_ + (ushort)(ui_temp_buffer._offset_x_ < 0) + 1;
        ui_stack_array._offset_y_ = ui_temp_buffer._offset_y_ + (ushort)(ui_temp_buffer._offset_y_ < 0) + 1;
        ui_stack_array._offset_z_ = ui_temp_buffer._offset_z_ + (ushort)(ui_temp_buffer._offset_z_ < 0) + 1;
        ui_stack_array._offset_w_ = ui_temp_buffer._offset_w_ + (ushort)(ui_temp_buffer._offset_w_ < 0) + 1;
        ui_stack_array._component_y_ = aui_task_identifier3._component_y_ + (ushort)(aui_task_identifier3._component_y_ < 0) + 1;
        ui_stack_array._component_x_ = aui_task_identifier3._component_x_ + (ushort)(aui_task_identifier3._component_x_ < 0) + 1;
        ui_stack_array._component_z_ = aui_task_identifier3._component_z_ + (ushort)(aui_task_identifier3._component_z_ < 0) + 1;
        ui_stack_array._component_w_ = aui_task_identifier3._component_w_ + (ushort)(aui_task_identifier3._component_w_ < 0) + 1;
        ui_stack_array._offset_x_ = aui_task_identifier3._offset_x_ + (ushort)(aui_task_identifier3._offset_x_ < 0) + 1;
        ui_stack_array._offset_y_ = aui_task_identifier3._offset_y_ + (ushort)(aui_task_identifier3._offset_y_ < 0) + 1;
        ui_stack_array._offset_z_ = aui_task_identifier3._offset_z_ + (ushort)(aui_task_identifier3._offset_z_ < 0) + 1;
        ui_stack_array._offset_w_ = aui_task_identifier3._offset_w_ + (ushort)(aui_task_identifier3._offset_w_ < 0) + 1;
        ui_stack_array._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_stack_array._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_stack_array._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_stack_array._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_stack_array._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_stack_array._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_stack_array._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_stack_array._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_stack_array._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_stack_array._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_stack_array._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_stack_array._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_stack_array._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_stack_array._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_stack_array._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_stack_array._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_stack_array._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_stack_array._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_stack_array._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_stack_array._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_stack_array._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_stack_array._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_stack_array._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_stack_array._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_temp_buffer._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_temp_buffer._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_temp_buffer._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_temp_buffer._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_temp_buffer._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_temp_buffer._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_temp_buffer._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_temp_buffer._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_temp_buffer._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_temp_buffer._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_temp_buffer._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_temp_buffer._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_temp_buffer._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_temp_buffer._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_temp_buffer._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_temp_buffer._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_temp_buffer._component_x_ = short_value32 + 1;
        ui_temp_buffer._component_y_ = short_value56 + 1;
        ui_temp_buffer._component_z_ = short_value58 + 1;
        ui_temp_buffer._component_w_ = short_value60 + 1;
        ui_temp_buffer._offset_x_ = short_value62 + 1;
        ui_temp_buffer._offset_y_ = short_value63 + 1;
        ui_temp_buffer._offset_z_ = short_value64 + 1;
        ui_temp_buffer._offset_w_ = short_value65 + 1;
        ui_system_shader_buffer_variable._component_x_ = ui_render_buffer_var._component_x_ + (ushort)(ui_render_buffer_var._component_x_ < 0) + 1;
        ui_system_shader_buffer_variable._component_y_ = ui_render_buffer_var._component_y_ + (ushort)(ui_render_buffer_var._component_y_ < 0) + 1;
        ui_system_shader_buffer_variable._component_z_ = ui_render_buffer_var._component_z_ + (ushort)(ui_render_buffer_var._component_z_ < 0) + 1;
        ui_system_shader_buffer_variable._component_w_ = ui_render_buffer_var._component_w_ + (ushort)(ui_render_buffer_var._component_w_ < 0) + 1;
        ui_system_shader_buffer_variable._offset_x_ = ui_render_buffer_var._offset_x_ + (ushort)(ui_render_buffer_var._offset_x_ < 0) + 1;
        ui_system_shader_buffer_variable._offset_y_ = ui_render_buffer_var._offset_y_ + (ushort)(ui_render_buffer_var._offset_y_ < 0) + 1;
        ui_system_shader_buffer_variable._offset_z_ = ui_render_buffer_var._offset_z_ + (ushort)(ui_render_buffer_var._offset_z_ < 0) + 1;
        ui_system_shader_buffer_variable._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_temp_buffer._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_temp_buffer._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_temp_buffer._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_temp_buffer._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_temp_buffer._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_temp_buffer._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_temp_buffer._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_temp_buffer._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_input_data_buffer._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_input_data_buffer._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_input_data_buffer._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_input_data_buffer._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_input_data_buffer._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_input_data_buffer._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_input_data_buffer._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_input_data_buffer._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_stack_array._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_stack_array._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_stack_array._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_stack_array._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_temporary_buffer._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_temporary_buffer._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_temporary_buffer._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_temporary_buffer._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_temporary_buffer._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_temporary_buffer._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_temporary_buffer._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_temporary_buffer._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_temp_buffer._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_temp_buffer._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_temp_buffer._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_temp_buffer._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_temp_buffer._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_temp_buffer._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_temp_buffer._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_temp_buffer._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_temp_buffer._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_temp_buffer._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_temp_buffer._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_temp_buffer._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_temp_buffer._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_temp_buffer._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_temp_buffer._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_temp_buffer._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_temporary_buffer._component_x_ = ui_stack_array._component_x_ + (ushort)(ui_stack_array._component_x_ < 0) + 1;
        ui_temporary_buffer._component_y_ = ui_stack_array._component_y_ + (ushort)(ui_stack_array._component_y_ < 0) + 1;
        ui_temporary_buffer._component_z_ = ui_stack_array._component_z_ + (ushort)(ui_stack_array._component_z_ < 0) + 1;
        ui_temporary_buffer._component_w_ = ui_stack_array._component_w_ + (ushort)(ui_stack_array._component_w_ < 0) + 1;
        ui_temporary_buffer._offset_x_ = ui_stack_array._offset_x_ + (ushort)(ui_stack_array._offset_x_ < 0) + 1;
        ui_temporary_buffer._offset_y_ = ui_stack_array._offset_y_ + (ushort)(ui_stack_array._offset_y_ < 0) + 1;
        ui_temporary_buffer._offset_z_ = ui_stack_array._offset_z_ + (ushort)(ui_stack_array._offset_z_ < 0) + 1;
        ui_temporary_buffer._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_theme_buffer_var._component_x_ = ui_stack_array._component_x_ + (ushort)((short)ui_stack_array._component_x_ < 0) + 1;
        ui_theme_buffer_var._component_y_ = ui_stack_array._component_y_ + (ushort)((short)ui_stack_array._component_y_ < 0) + 1;
        ui_theme_buffer_var._component_z_ = ui_stack_array._component_z_ + (ushort)((short)ui_stack_array._component_z_ < 0) + 1;
        ui_theme_buffer_var._component_w_ = ui_stack_array._component_w_ + (ushort)((short)ui_stack_array._component_w_ < 0) + 1;
        ui_theme_buffer_var._offset_x_ = ui_stack_array._offset_x_ + (ushort)((short)ui_stack_array._offset_x_ < 0) + 1;
        ui_theme_buffer_var._offset_y_ = ui_stack_array._offset_y_ + (ushort)((short)ui_stack_array._offset_y_ < 0) + 1;
        ui_theme_buffer_var._offset_z_ = ui_stack_array._offset_z_ + (ushort)((short)ui_stack_array._offset_z_ < 0) + 1;
        ui_theme_buffer_var._offset_w_ = ui_stack_array._offset_w_ + (ushort)((short)ui_stack_array._offset_w_ < 0) + 1;
        ui_stack_array = psraw(ui_stack_array,2);
        ui_temp_buffer._component_y_ = ui_component + (ushort)(ui_component < 0) + 1;
        ui_temp_buffer._component_x_ = ui_component + (ushort)(ui_component < 0) + 1;
        ui_temp_buffer._component_z_ = ui_component + (ushort)(ui_component < 0) + 1;
        ui_temp_buffer._component_w_ = ui_component + (ushort)(ui_component < 0) + 1;
        ui_temp_buffer._offset_x_ = ui_component + (ushort)(ui_component < 0) + 1;
        ui_temp_buffer._offset_y_ = ui_component + (ushort)(ui_component < 0) + 1;
        ui_temp_buffer._offset_z_ = ui_component + (ushort)(ui_component < 0) + 1;
        ui_temp_buffer._offset_w_ = ui_component + (ushort)(ui_component < 0) + 1;
        ui_stack_array = psraw(ui_temporary_buffer,2);
        ui_stack_array = psraw(ui_stack_array,2);
        ui_temporary_buffer = psraw(ui_stack_array,2);
        ui_temp_buffer = ui_temporary_buffer._0_12_;
        ui_stack_array = psraw(ui_temp_buffer,2);
        ui_system_shader_buffer_variable = psraw(ui_temp_buffer,2);
        ui_stack_array = psraw(ui_temp_buffer,2);
        ui_stack_array = psraw(ui_input_data_buffer,2);
        ui_stack_array = psraw(ui_temporary_buffer,2);
        ui_stack_array = psraw(ui_theme_buffer_var,2);
        ui_stack_array = psraw(ui_temp_buffer,2);
        ui_temp_buffer = psraw(ui_temp_buffer,2);
        ui_stack_array = psraw(ui_stack_array,2);
        aui_task_identifier3 = psraw(ui_stack_array,2);
        ui_temp_buffer = psraw(ui_temp_buffer,2);
        ui_theme_buffer_var = psraw(ui_temp_buffer,2);
        ui_render_buffer_var = psraw(ui_system_shader_buffer_variable,2);
        ui_stack_array = ui_system_shader_buffer_variable;
        ui_stack_array._8_8_ = ui_temporary_buffer._8_8_;
      }
      else {
        ui_temp_buffer._component_y_ = ui_component;
        ui_temp_buffer._component_x_ = ui_component;
        ui_temp_buffer._component_z_ = ui_component;
        ui_temp_buffer._component_w_ = ui_component;
        ui_temp_buffer._offset_x_ = ui_component;
        ui_temp_buffer._offset_y_ = ui_component;
        ui_temp_buffer._offset_z_ = ui_component;
        ui_temp_buffer._offset_w_ = ui_component;
        ui_stack_array._8_8_ = ui_temp_buffer._8_8_;
      }
      ui_component = ui_stack_array._component_x_ + ui_stack_array._component_x_;
      ui_component = ui_stack_array._component_y_ + ui_stack_array._component_y_;
      ui_component = ui_stack_array._component_z_ + ui_stack_array._component_z_;
      ui_component = ui_stack_array._component_w_ + ui_stack_array._component_w_;
      ui_component = ui_stack_array._offset_x_ + ui_stack_array._offset_x_;
      ui_component = ui_stack_array._offset_y_ + ui_stack_array._offset_y_;
      ui_component = ui_stack_array._offset_z_ + ui_stack_array._offset_z_;
      ui_component = ui_stack_array._offset_w_ + ui_stack_array._offset_w_;
      ui_stack_array._component_x_ = ui_stack_array._component_x_ - ui_stack_array._component_x_;
      ui_stack_array._component_y_ = ui_stack_array._component_y_ - ui_stack_array._component_y_;
      ui_stack_array._component_z_ = ui_stack_array._component_z_ - ui_stack_array._component_z_;
      ui_stack_array._component_w_ = ui_stack_array._component_w_ - ui_stack_array._component_w_;
      ui_stack_array._offset_x_ = ui_stack_array._offset_x_ - ui_stack_array._offset_x_;
      ui_stack_array._offset_y_ = ui_stack_array._offset_y_ - ui_stack_array._offset_y_;
      ui_stack_array._offset_z_ = ui_stack_array._offset_z_ - ui_stack_array._offset_z_;
      ui_stack_array._offset_w_ = ui_stack_array._offset_w_ - ui_stack_array._offset_w_;
      ui_component = ui_stack_array._component_x_ + ui_stack_array._component_x_;
      ui_component = ui_stack_array._component_y_ + ui_stack_array._component_y_;
      ui_component = ui_stack_array._component_z_ + ui_stack_array._component_z_;
      ui_component = ui_stack_array._component_w_ + ui_stack_array._component_w_;
      ui_component = ui_stack_array._offset_x_ + ui_stack_array._offset_x_;
      ui_component = ui_stack_array._offset_y_ + ui_stack_array._offset_y_;
      ui_component = ui_stack_array._offset_z_ + ui_stack_array._offset_z_;
      ui_component = ui_stack_array._offset_w_ + ui_stack_array._offset_w_;
      ui_stack_array._component_x_ = ui_stack_array._component_x_ - ui_stack_array._component_x_;
      ui_stack_array._component_y_ = ui_stack_array._component_y_ - ui_stack_array._component_y_;
      ui_stack_array._component_z_ = ui_stack_array._component_z_ - ui_stack_array._component_z_;
      ui_stack_array._component_w_ = ui_stack_array._component_w_ - ui_stack_array._component_w_;
      ui_stack_array._offset_x_ = ui_stack_array._offset_x_ - ui_stack_array._offset_x_;
      ui_stack_array._offset_y_ = ui_stack_array._offset_y_ - ui_stack_array._offset_y_;
      ui_stack_array._offset_z_ = ui_stack_array._offset_z_ - ui_stack_array._offset_z_;
      ui_stack_array._offset_w_ = ui_stack_array._offset_w_ - ui_stack_array._offset_w_;
      ui_component = ui_stack_array._component_x_ + ui_stack_array._component_x_;
      ui_component = ui_stack_array._component_y_ + ui_stack_array._component_y_;
      ui_component = ui_stack_array._component_z_ + ui_stack_array._component_z_;
      ui_component = ui_stack_array._component_w_ + ui_stack_array._component_w_;
      ui_component = ui_stack_array._offset_x_ + ui_stack_array._offset_x_;
      ui_component = ui_stack_array._offset_y_ + ui_stack_array._offset_y_;
      ui_component = ui_stack_array._offset_z_ + ui_stack_array._offset_z_;
      ui_component = ui_stack_array._offset_w_ + ui_stack_array._offset_w_;
      ui_temporary_buffer._component_x_ = ui_stack_array._component_x_ - ui_stack_array._component_x_;
      ui_stack_array._component_y_ = ui_stack_array._component_y_ - ui_stack_array._component_y_;
      ui_stack_array._component_z_ = ui_stack_array._component_z_ - ui_stack_array._component_z_;
      ui_stack_array._component_w_ = ui_stack_array._component_w_ - ui_stack_array._component_w_;
      ui_stack_array._offset_x_ = ui_stack_array._offset_x_ - ui_stack_array._offset_x_;
      ui_stack_array._offset_y_ = ui_stack_array._offset_y_ - ui_stack_array._offset_y_;
      ui_stack_array._offset_z_ = ui_stack_array._offset_z_ - ui_stack_array._offset_z_;
      ui_stack_array._offset_w_ = ui_stack_array._offset_w_ - ui_stack_array._offset_w_;
      ui_component = ui_stack_array._component_x_ + ui_stack_array._component_x_;
      ui_component = ui_stack_array._component_y_ + ui_stack_array._component_y_;
      ui_component = ui_stack_array._component_z_ + ui_stack_array._component_z_;
      ui_component = ui_stack_array._component_w_ + ui_stack_array._component_w_;
      ui_component = ui_stack_array._offset_x_ + ui_stack_array._offset_x_;
      ui_component = ui_stack_array._offset_y_ + ui_stack_array._offset_y_;
      ui_component = ui_stack_array._offset_z_ + ui_stack_array._offset_z_;
      ui_component = ui_stack_array._offset_w_ + ui_stack_array._offset_w_;
      ui_component = ui_stack_array._component_x_ - ui_stack_array._component_x_;
      short_value14 = ui_stack_array._component_y_ - ui_stack_array._component_y_;
      short_value17 = ui_stack_array._component_z_ - ui_stack_array._component_z_;
      short_value21 = ui_stack_array._offset_x_ - ui_stack_array._offset_x_;
      short_value24 = ui_stack_array._offset_y_ - ui_stack_array._offset_y_;
      short_value27 = ui_stack_array._offset_z_ - ui_stack_array._offset_z_;
      short_value30 = ui_stack_array._offset_w_ - ui_stack_array._offset_w_;
      ui_temp_buffer._offset_z_ = ui_temp_buffer._component_w_;
      ui_temp_buffer._0_12_ = ui_temp_buffer;
      ui_temp_buffer._offset_w_ = ui_stack_array._component_w_;
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
      ui_temp_buffer._0_10_ = ui_temp_buffer._0_10_;
      ui_temp_buffer._offset_y_ = ui_stack_array._component_z_;
      ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
      ui_temp_buffer._0_8_ = ui_temp_buffer._0_8_;
      ui_temp_buffer._offset_x_ = ui_temp_buffer._component_z_;
      ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
      ui_temp_buffer._component_w_ = ui_stack_array._component_y_;
      ui_temp_buffer._component_z_ = ui_temp_buffer._component_y_;
      ui_temp_buffer._component_x_ = ui_temp_buffer._component_x_;
      ui_temp_buffer._component_y_ = ui_stack_array._component_x_;
      ui_temp_buffer._component_y_ = ui_stack_array._offset_x_;
      ui_temp_buffer._component_x_ = ui_stack_array._offset_x_;
      ui_temp_buffer._component_z_ = ui_stack_array._offset_y_;
      ui_temp_buffer._component_w_ = ui_stack_array._offset_y_;
      ui_temp_buffer._offset_x_ = ui_stack_array._offset_z_;
      ui_temp_buffer._offset_y_ = ui_stack_array._offset_z_;
      ui_temp_buffer._offset_z_ = ui_stack_array._offset_w_;
      ui_temp_buffer._offset_w_ = ui_stack_array._offset_w_;
      ui_temp_buffer._0_12_ = aui_task_identifier3._0_12_;
      ui_temp_buffer._offset_z_ = aui_task_identifier3._component_w_;
      ui_temp_buffer._offset_w_ = ui_temp_buffer._component_w_;
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_;
      ui_temp_buffer._0_10_ = aui_task_identifier3._0_10_;
      ui_temp_buffer._offset_y_ = ui_temp_buffer._component_z_;
      ui_temp_buffer._10_6_ = ui_temp_buffer._10_6_;
      ui_temp_buffer._0_8_ = aui_task_identifier3._0_8_;
      ui_temp_buffer._offset_x_ = aui_task_identifier3._component_z_;
      ui_temp_buffer._8_8_ = ui_temp_buffer._8_8_;
      ui_temp_buffer._component_w_ = ui_temp_buffer._component_y_;
      ui_temp_buffer._component_z_ = aui_task_identifier3._component_y_;
      ui_temp_buffer._component_x_ = aui_task_identifier3._component_x_;
      ui_temp_buffer._component_y_ = ui_temp_buffer._component_x_;
      aui_task_identifier4._component_y_ = ui_temp_buffer._offset_x_;
      aui_task_identifier4._component_x_ = aui_task_identifier3._offset_x_;
      aui_task_identifier4._component_z_ = aui_task_identifier3._offset_y_;
      aui_task_identifier4._component_w_ = ui_temp_buffer._offset_y_;
      aui_task_identifier4._offset_x_ = aui_task_identifier3._offset_z_;
      aui_task_identifier4._offset_y_ = ui_temp_buffer._offset_z_;
      aui_task_identifier4._offset_z_ = aui_task_identifier3._offset_w_;
      aui_task_identifier4._offset_w_ = ui_temp_buffer._offset_w_;
      ui_stack_array._component_x_ = ui_temporary_buffer._component_x_;
      ui_system_shader_buffer_variable = pmaddwd(aui_task_identifier4,_ui_config_locale_settings);
      ui_temp_buffer = pmaddwd(ui_temp_buffer,_ui_config_locale_settings);
      ui_temporary_buffer = pmaddwd(ui_temp_buffer,_ui_config_locale_settings);
      ui_temp_buffer._data_offset_ = ui_system_shader_buffer_variable._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_system_shader_buffer_variable._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_system_shader_buffer_variable._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_system_shader_buffer_variable._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temporary_buffer._data_offset_ = ui_temp_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temporary_buffer._data_size_ = ui_temp_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temporary_buffer._data_format_ = ui_temp_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temporary_buffer._data_flags_ = ui_temp_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer = packssdw(ui_temporary_buffer,ui_temp_buffer);
      ui_system_shader_buffer_variable = pmaddwd(ui_temp_buffer,_ui_config_locale_settings);
      aui_event_id72._data_offset_ = ui_temporary_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id72._data_size_ = ui_temporary_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id72._data_format_ = ui_temporary_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id72._data_flags_ = ui_temporary_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_offset_ = ui_system_shader_buffer_variable._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_system_shader_buffer_variable._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_system_shader_buffer_variable._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_system_shader_buffer_variable._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer = packssdw(aui_event_id72,ui_temp_buffer);
      ui_system_shader_buffer_variable = pmaddwd(ui_temp_buffer,_ui_config_multitouch_settings);
      ui_temporary_buffer = pmaddwd(aui_task_identifier4,_ui_config_multitouch_settings);
      ui_temp_buffer = pmaddwd(ui_temp_buffer,_ui_config_multitouch_settings);
      ui_temp_buffer._data_offset_ = ui_system_shader_buffer_variable._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_system_shader_buffer_variable._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_system_shader_buffer_variable._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_system_shader_buffer_variable._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_task_identifier5._data_offset_ = ui_temporary_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_task_identifier5._data_size_ = ui_temporary_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_task_identifier5._data_format_ = ui_temporary_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_task_identifier5._data_flags_ = ui_temporary_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_temp_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_temp_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_system_shader_buffer_variable = packssdw(ui_temp_buffer,ui_temp_buffer);
      ui_component = ui_stack_array._component_x_ + ui_stack_array._component_x_;
      short_value29 = ui_stack_array._component_y_ + ui_stack_array._component_y_;
      ui_component = ui_stack_array._component_z_ + ui_stack_array._component_z_;
      ui_component = ui_stack_array._offset_x_ + ui_stack_array._offset_x_;
      ui_component = ui_stack_array._offset_y_ + ui_stack_array._offset_y_;
      ui_component = ui_stack_array._offset_z_ + ui_stack_array._offset_z_;
      ui_component = ui_stack_array._offset_w_ + ui_stack_array._offset_w_;
      ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_temp_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_temp_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_component = ui_stack_array._component_x_ - ui_stack_array._component_x_;
      short_value15 = ui_stack_array._component_y_ - ui_stack_array._component_y_;
      short_value18 = ui_stack_array._component_z_ - ui_stack_array._component_z_;
      short_value22 = ui_stack_array._offset_x_ - ui_stack_array._offset_x_;
      short_value25 = ui_stack_array._offset_y_ - ui_stack_array._offset_y_;
      short_value28 = ui_stack_array._offset_z_ - ui_stack_array._offset_z_;
      short_value31 = ui_stack_array._offset_w_ - ui_stack_array._offset_w_;
      ui_temp_buffer = packssdw(ui_temp_buffer,aui_task_identifier5);
      short_value62 = ui_stack_array._component_x_ - ui_stack_array._component_x_;
      short_value57 = ui_stack_array._component_y_ - ui_stack_array._component_y_;
      short_value59 = ui_stack_array._component_z_ - ui_stack_array._component_z_;
      short_value61 = ui_stack_array._component_w_ - ui_stack_array._component_w_;
      ui_stack_array._component_x_ = ui_render_buffer_var._component_x_ + ui_stack_array._component_x_;
      ui_stack_array._component_y_ = ui_render_buffer_var._component_y_ + ui_stack_array._component_y_;
      ui_stack_array._component_z_ = ui_render_buffer_var._component_z_ + ui_stack_array._component_z_;
      ui_stack_array._component_w_ = ui_render_buffer_var._component_w_ + ui_stack_array._component_w_;
      ui_stack_array._offset_x_ = ui_render_buffer_var._offset_x_ + ui_stack_array._offset_x_;
      ui_stack_array._offset_y_ = ui_render_buffer_var._offset_y_ + ui_stack_array._offset_y_;
      ui_stack_array._offset_z_ = ui_render_buffer_var._offset_z_ + ui_stack_array._offset_z_;
      ui_stack_array._offset_w_ = ui_render_buffer_var._offset_w_ + ui_stack_array._offset_w_;
      ui_stack_array._component_x_ = ui_stack_array._component_x_ - ui_temp_buffer._component_x_;
      ui_stack_array._component_y_ = ui_stack_array._component_y_ - ui_temp_buffer._component_y_;
      ui_stack_array._component_z_ = ui_stack_array._component_z_ - ui_temp_buffer._component_z_;
      short_value63 = ui_stack_array._component_w_ - ui_temp_buffer._component_w_;
      ui_stack_array._offset_x_ = ui_stack_array._offset_x_ - ui_temp_buffer._offset_x_;
      ui_stack_array._offset_y_ = ui_stack_array._offset_y_ - ui_temp_buffer._offset_y_;
      ui_stack_array._offset_z_ = ui_stack_array._offset_z_ - ui_temp_buffer._offset_z_;
      ui_stack_array._offset_w_ = ui_stack_array._offset_w_ - ui_temp_buffer._offset_w_;
      ui_stack_array._component_x_ = ui_temp_buffer._component_x_ + ui_stack_array._component_x_;
      ui_stack_array._component_y_ = ui_temp_buffer._component_y_ + ui_stack_array._component_y_;
      ui_stack_array._component_z_ = ui_temp_buffer._component_z_ + ui_stack_array._component_z_;
      ui_stack_array._component_w_ = ui_temp_buffer._component_w_ + ui_stack_array._component_w_;
      ui_stack_array._offset_x_ = ui_temp_buffer._offset_x_ + ui_stack_array._offset_x_;
      ui_stack_array._offset_y_ = ui_temp_buffer._offset_y_ + ui_stack_array._offset_y_;
      ui_stack_array._offset_z_ = ui_temp_buffer._offset_z_ + ui_stack_array._offset_z_;
      ui_stack_array._offset_w_ = ui_temp_buffer._offset_w_ + ui_stack_array._offset_w_;
      ui_component = ui_component - ui_component;
      short_value13 = ui_stack_array._component_x_ - ui_theme_buffer_var._component_x_;
      ui_component = ui_stack_array._component_y_ - ui_theme_buffer_var._component_y_;
      ui_component = ui_stack_array._component_z_ - ui_theme_buffer_var._component_z_;
      short_value64 = ui_stack_array._component_w_ - ui_theme_buffer_var._component_w_;
      ui_component = ui_stack_array._offset_x_ - ui_theme_buffer_var._offset_x_;
      ui_component = ui_stack_array._offset_y_ - ui_theme_buffer_var._offset_y_;
      ui_component = ui_stack_array._offset_z_ - ui_theme_buffer_var._offset_z_;
      ui_component = ui_stack_array._offset_w_ - ui_theme_buffer_var._offset_w_;
      ui_stack_array._component_x_ = ui_theme_buffer_var._component_x_ + ui_stack_array._component_x_;
      ui_stack_array._component_y_ = ui_theme_buffer_var._component_y_ + ui_stack_array._component_y_;
      ui_stack_array._component_z_ = ui_theme_buffer_var._component_z_ + ui_stack_array._component_z_;
      ui_stack_array._component_w_ = ui_theme_buffer_var._component_w_ + ui_stack_array._component_w_;
      ui_stack_array._offset_x_ = ui_theme_buffer_var._offset_x_ + ui_stack_array._offset_x_;
      ui_stack_array._offset_y_ = ui_theme_buffer_var._offset_y_ + ui_stack_array._offset_y_;
      ui_stack_array._offset_z_ = ui_theme_buffer_var._offset_z_ + ui_stack_array._offset_z_;
      ui_stack_array._offset_w_ = ui_theme_buffer_var._offset_w_ + ui_stack_array._offset_w_;
      ui_component = ui_component + ui_component;
      short_value16 = ui_temp_buffer._component_x_ + ui_stack_array._component_x_;
      ui_component = ui_temp_buffer._component_y_ + ui_stack_array._component_y_;
      short_value32 = ui_temp_buffer._component_z_ + ui_stack_array._component_z_;
      ui_stack_array._component_w_ = ui_temp_buffer._component_w_ + ui_stack_array._component_w_;
      ui_component = ui_temp_buffer._offset_x_ + ui_stack_array._offset_x_;
      ui_component = ui_temp_buffer._offset_y_ + ui_stack_array._offset_y_;
      ui_component = ui_temp_buffer._offset_z_ + ui_stack_array._offset_z_;
      ui_component = ui_temp_buffer._offset_w_ + ui_stack_array._offset_w_;
      ui_stack_array._component_x_ = ui_stack_array._component_x_ - ui_temp_buffer._component_x_;
      ui_stack_array._component_y_ = ui_stack_array._component_y_ - ui_temp_buffer._component_y_;
      ui_stack_array._component_z_ = ui_stack_array._component_z_ - ui_temp_buffer._component_z_;
      ui_stack_array._component_w_ = ui_stack_array._component_w_ - ui_temp_buffer._component_w_;
      ui_stack_array._offset_x_ = ui_stack_array._offset_x_ - ui_temp_buffer._offset_x_;
      ui_stack_array._offset_y_ = ui_stack_array._offset_y_ - ui_temp_buffer._offset_y_;
      ui_stack_array._offset_z_ = ui_stack_array._offset_z_ - ui_temp_buffer._offset_z_;
      ui_stack_array._offset_w_ = ui_stack_array._offset_w_ - ui_temp_buffer._offset_w_;
      short_value19 = ui_temp_buffer._component_x_ + ui_stack_array._component_x_;
      short_value23 = ui_temp_buffer._component_y_ + ui_stack_array._component_y_;
      short_value26 = ui_temp_buffer._component_z_ + ui_stack_array._component_z_;
      ui_component = ui_temp_buffer._component_w_ + ui_stack_array._component_w_;
      ui_component = ui_temp_buffer._offset_x_ + ui_stack_array._offset_x_;
      ui_component = ui_temp_buffer._offset_y_ + ui_stack_array._offset_y_;
      short_value58 = ui_temp_buffer._offset_z_ + ui_stack_array._offset_z_;
      short_value60 = ui_temp_buffer._offset_w_ + ui_stack_array._offset_w_;
      ui_stack_array._component_x_ = ui_stack_array._component_x_ - ui_temp_buffer._component_x_;
      ui_stack_array._component_y_ = ui_stack_array._component_y_ - ui_temp_buffer._component_y_;
      ui_stack_array._component_z_ = ui_stack_array._component_z_ - ui_temp_buffer._component_z_;
      ui_stack_array._component_w_ = ui_stack_array._component_w_ - ui_temp_buffer._component_w_;
      ui_stack_array._offset_x_ = ui_stack_array._offset_x_ - ui_temp_buffer._offset_x_;
      ui_stack_array._offset_y_ = ui_stack_array._offset_y_ - ui_temp_buffer._offset_y_;
      ui_stack_array._offset_z_ = ui_stack_array._offset_z_ - ui_temp_buffer._offset_z_;
      ui_stack_array._offset_w_ = ui_stack_array._offset_w_ - ui_temp_buffer._offset_w_;
      short_value20 = ui_stack_array._component_x_ - ui_system_shader_buffer_variable._component_x_;
      ui_component = ui_stack_array._component_y_ - ui_system_shader_buffer_variable._component_y_;
      short_value56 = ui_stack_array._component_z_ - ui_system_shader_buffer_variable._component_z_;
      short_value65 = ui_stack_array._component_w_ - ui_system_shader_buffer_variable._component_w_;
      ui_component = ui_stack_array._offset_x_ - ui_system_shader_buffer_variable._offset_x_;
      ui_component = ui_stack_array._offset_y_ - ui_system_shader_buffer_variable._offset_y_;
      ui_component = ui_stack_array._offset_z_ - ui_system_shader_buffer_variable._offset_z_;
      ui_component = ui_stack_array._offset_w_ - ui_system_shader_buffer_variable._offset_w_;
      ui_stack_array._component_x_ = ui_system_shader_buffer_variable._component_x_ + ui_stack_array._component_x_;
      ui_stack_array._component_y_ = ui_system_shader_buffer_variable._component_y_ + ui_stack_array._component_y_;
      ui_stack_array._component_z_ = ui_system_shader_buffer_variable._component_z_ + ui_stack_array._component_z_;
      ui_stack_array._component_w_ = ui_system_shader_buffer_variable._component_w_ + ui_stack_array._component_w_;
      ui_stack_array._offset_x_ = ui_system_shader_buffer_variable._offset_x_ + ui_stack_array._offset_x_;
      ui_stack_array._offset_y_ = ui_system_shader_buffer_variable._offset_y_ + ui_stack_array._offset_y_;
      ui_stack_array._offset_z_ = ui_system_shader_buffer_variable._offset_z_ + ui_stack_array._offset_z_;
      ui_stack_array._offset_w_ = ui_system_shader_buffer_variable._offset_w_ + ui_stack_array._offset_w_;
      ui_temp_buffer._8_8_ =
           (ui_void_ptr8)
           (CONCAT64(CONCAT42(CONCAT22(ui_stack_array._component_w_ + ui_stack_array._component_w_,
                                       ui_stack_array._component_w_ + ui_stack_array._component_w_),
                              ui_stack_array._component_z_ + ui_stack_array._component_z_),
                     CONCAT22(ui_stack_array._component_z_ + ui_stack_array._component_z_,
                              ui_stack_array._component_w_ + ui_stack_array._component_w_)) >> UI_EVENT_FLAG_OFFSET);
      ui_temp_buffer._component_w_ = ui_stack_array._component_y_ + ui_stack_array._component_y_;
      ui_temp_buffer._component_z_ = ui_stack_array._component_y_ + ui_stack_array._component_y_;
      ui_temp_buffer._component_y_ = ui_stack_array._component_x_ + ui_stack_array._component_x_;
      ui_temp_buffer._component_x_ = ui_stack_array._component_x_ + ui_stack_array._component_x_;
      ui_temp_buffer._component_y_ = ui_stack_array._offset_x_ + ui_stack_array._offset_x_;
      ui_temp_buffer._component_x_ = ui_stack_array._offset_x_ + ui_stack_array._offset_x_;
      ui_temp_buffer._component_z_ = ui_stack_array._offset_y_ + ui_stack_array._offset_y_;
      ui_temp_buffer._component_w_ = ui_stack_array._offset_y_ + ui_stack_array._offset_y_;
      ui_temp_buffer._offset_x_ = ui_stack_array._offset_z_ + ui_stack_array._offset_z_;
      ui_temp_buffer._offset_y_ = ui_stack_array._offset_z_ + ui_stack_array._offset_z_;
      ui_temp_buffer._offset_z_ = ui_stack_array._offset_w_ + ui_stack_array._offset_w_;
      ui_temp_buffer._offset_w_ = ui_stack_array._offset_w_ + ui_stack_array._offset_w_;
      ui_input_data_buffer._component_y_ = ui_stack_array._offset_x_;
      ui_input_data_buffer._component_x_ = ui_stack_array._offset_x_;
      ui_input_data_buffer._component_z_ = ui_stack_array._offset_y_;
      ui_input_data_buffer._component_w_ = ui_stack_array._offset_y_;
      ui_input_data_buffer._offset_x_ = ui_stack_array._offset_z_;
      ui_input_data_buffer._offset_y_ = ui_stack_array._offset_z_;
      ui_input_data_buffer._offset_z_ = ui_stack_array._offset_w_;
      ui_input_data_buffer._offset_w_ = ui_stack_array._offset_w_;
      ui_task_processing_buffer._offset_z_ = ui_stack_array._component_w_;
      ui_task_processing_buffer._0_12_ = ui_stack_array._0_12_;
      ui_task_processing_buffer._offset_w_ = ui_stack_array._component_w_;
      ui_temporary_buffer._data_flags_ = ui_task_processing_buffer._data_flags_;
      ui_temporary_buffer._offset_y_ = ui_stack_array._component_z_;
      ui_temporary_buffer._0_10_ = ui_stack_array._0_10_;
      ui_temporary_buffer._10_6_ = ui_temporary_buffer._10_6_;
      ui_temporary_buffer._offset_x_ = ui_stack_array._component_z_;
      ui_temporary_buffer._0_8_ = ui_stack_array._0_8_;
      ui_temporary_buffer._8_8_ = ui_temporary_buffer._8_8_;
      ui_temporary_buffer._component_w_ = ui_stack_array._component_y_;
      ui_temporary_buffer._component_z_ = ui_stack_array._component_y_;
      ui_temporary_buffer._component_y_ = ui_stack_array._component_x_;
      ui_temp_buffer = pmaddwd(ui_input_data_buffer,_ui_config_multitouch_settings);
      ui_temporary_buffer = pmaddwd(ui_temporary_buffer,_ui_config_multitouch_settings);
      ui_system_shader_buffer_variable = pmaddwd(ui_temporary_buffer,_ui_config_locale_settings);
      ui_theme_buffer_var = pmaddwd(ui_input_data_buffer,_ui_config_locale_settings);
      ui_input_data_buffer._data_offset_ = ui_temp_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_input_data_buffer._data_size_ = ui_temp_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_input_data_buffer._data_format_ = ui_temp_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_input_data_buffer._data_flags_ = ui_temp_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_task_processing_buffer._data_offset_ = ui_temporary_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_task_processing_buffer._data_size_ = ui_temporary_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_task_processing_buffer._data_format_ = ui_temporary_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_task_processing_buffer._data_flags_ = ui_temporary_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer = packssdw(ui_task_processing_buffer,ui_input_data_buffer);
      ui_temp_buffer._8_8_ =
           (ui_void_ptr8)
           (CONCAT64(CONCAT42(CONCAT22(ui_stack_array._component_w_,ui_stack_array._component_w_ + ui_stack_array._component_w_),
                              ui_stack_array._component_z_),
                     CONCAT22(ui_stack_array._component_z_ + ui_stack_array._component_z_,
                              ui_stack_array._component_w_ + ui_stack_array._component_w_)) >> UI_EVENT_FLAG_OFFSET);
      ui_temp_buffer._component_w_ = ui_stack_array._component_y_;
      ui_temp_buffer._component_z_ = ui_stack_array._component_y_ + ui_stack_array._component_y_;
      ui_temp_buffer._component_y_ = ui_stack_array._component_x_;
      ui_temp_buffer._component_x_ = ui_stack_array._component_x_ + ui_stack_array._component_x_;
      ui_temporary_buffer._component_y_ = ui_stack_array._offset_x_;
      ui_temporary_buffer._component_x_ = ui_stack_array._offset_x_ + ui_stack_array._offset_x_;
      ui_temporary_buffer._component_z_ = ui_stack_array._offset_y_ + ui_stack_array._offset_y_;
      ui_temporary_buffer._component_w_ = ui_stack_array._offset_y_;
      ui_temporary_buffer._offset_x_ = ui_stack_array._offset_z_ + ui_stack_array._offset_z_;
      ui_temporary_buffer._offset_y_ = ui_stack_array._offset_z_;
      ui_temporary_buffer._offset_z_ = ui_stack_array._offset_w_ + ui_stack_array._offset_w_;
      ui_temporary_buffer._offset_w_ = ui_stack_array._offset_w_;
      aui_event_id73._data_offset_ = ui_system_shader_buffer_variable._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id73._data_size_ = ui_system_shader_buffer_variable._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id73._data_format_ = ui_system_shader_buffer_variable._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id73._data_flags_ = ui_system_shader_buffer_variable._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_offset_ = ui_theme_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_theme_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_theme_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_theme_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._8_8_ =
           (ui_void_ptr8)
           (CONCAT64(CONCAT42(CONCAT22(ui_stack_array._component_w_ - ui_render_buffer_var._component_w_,
                                       ui_stack_array._component_w_ - ui_stack_array._component_w_),
                              ui_stack_array._component_z_ - ui_render_buffer_var._component_z_),
                     CONCAT22(ui_stack_array._component_z_ - ui_stack_array._component_z_,
                              ui_stack_array._component_w_ - ui_stack_array._component_w_)) >> UI_EVENT_FLAG_OFFSET);
      ui_temp_buffer._component_w_ = ui_stack_array._component_y_ - ui_render_buffer_var._component_y_;
      ui_temp_buffer._component_z_ = ui_stack_array._component_y_ - ui_stack_array._component_y_;
      ui_temp_buffer._component_y_ = ui_stack_array._component_x_ - ui_render_buffer_var._component_x_;
      ui_temp_buffer._component_x_ = ui_stack_array._component_x_ - ui_stack_array._component_x_;
      ui_temporary_buffer = packssdw(aui_event_id73,ui_temp_buffer);
      ui_stack_array._component_y_ = ui_stack_array._offset_x_ - ui_render_buffer_var._offset_x_;
      ui_stack_array._component_x_ = ui_stack_array._offset_x_ - ui_stack_array._offset_x_;
      ui_stack_array._component_z_ = ui_stack_array._offset_y_ - ui_stack_array._offset_y_;
      ui_stack_array._component_w_ = ui_stack_array._offset_y_ - ui_render_buffer_var._offset_y_;
      ui_stack_array._offset_x_ = ui_stack_array._offset_z_ - ui_stack_array._offset_z_;
      ui_stack_array._offset_y_ = ui_stack_array._offset_z_ - ui_render_buffer_var._offset_z_;
      ui_stack_array._offset_z_ = ui_stack_array._offset_w_ - ui_stack_array._offset_w_;
      ui_stack_array._offset_w_ = ui_stack_array._offset_w_ - ui_render_buffer_var._offset_w_;
      ui_stack_array._component_y_ = ui_stack_array._offset_x_ - ui_stack_array._offset_x_;
      ui_stack_array._component_x_ = ui_stack_array._offset_x_ - ui_stack_array._offset_x_;
      ui_stack_array._component_z_ = ui_stack_array._offset_y_ - ui_stack_array._offset_y_;
      ui_stack_array._component_w_ = ui_stack_array._offset_y_ - ui_stack_array._offset_y_;
      ui_stack_array._offset_x_ = ui_stack_array._offset_z_ - ui_stack_array._offset_z_;
      ui_stack_array._offset_y_ = ui_stack_array._offset_z_ - ui_stack_array._offset_z_;
      ui_stack_array._offset_z_ = ui_stack_array._offset_w_ - ui_stack_array._offset_w_;
      ui_stack_array._offset_w_ = ui_stack_array._offset_w_ - ui_stack_array._offset_w_;
      ui_temp_buffer._8_8_ =
           (ui_void_ptr8)
           (CONCAT64(CONCAT42(CONCAT22(ui_stack_array._component_w_ - ui_stack_array._component_w_,short_value61),
                              ui_stack_array._component_z_ - ui_stack_array._component_z_),CONCAT22(short_value59,short_value61)) >>
           UI_EVENT_FLAG_OFFSET);
      ui_temp_buffer._component_w_ = ui_stack_array._component_y_ - ui_stack_array._component_y_;
      ui_temp_buffer._component_z_ = short_value57;
      ui_temp_buffer._component_y_ = ui_stack_array._component_x_ - ui_stack_array._component_x_;
      ui_temp_buffer._component_x_ = short_value62;
      ui_render_buffer_var = pmaddwd(ui_temp_buffer,_ui_config_stylus_settings);
      ui_theme_buffer_var = pmaddwd(ui_temp_buffer,_ui_config_stylus_settings);
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_offset_ = ui_theme_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_theme_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_theme_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_theme_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer = pmaddwd(ui_temp_buffer,_ui_config_keyboard_settings);
      ui_temp_buffer = packssdw(ui_temp_buffer,ui_temp_buffer);
      ui_temp_buffer = pmaddwd(ui_temporary_buffer,_ui_config_keyboard_settings);
      ui_render_buffer_var = pmaddwd(ui_temporary_buffer,_ui_config_stylus_settings);
      ui_theme_buffer_var = pmaddwd(ui_temp_buffer,_ui_config_stylus_settings);
      ui_temp_buffer = pmaddwd(ui_temp_buffer,_ui_config_mouse_settings);
      ui_temp_buffer = pmaddwd(ui_temp_buffer,_ui_config_stylus_settings);
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_offset_ = ui_theme_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_theme_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_theme_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_theme_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer = packssdw(ui_temp_buffer,ui_temp_buffer);
      ui_render_buffer_var = pmaddwd(ui_stack_array,_ui_config_mouse_settings);
      ui_theme_buffer_var = pmaddwd(ui_temp_buffer,_ui_config_stylus_settings);
      ui_system_shader_buffer_variable = pmaddwd(ui_temp_buffer,_ui_config_mouse_settings);
      ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_temp_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_temp_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer = packssdw(ui_temp_buffer,ui_temp_buffer);
      ui_render_buffer_var = pmaddwd(ui_stack_array,_ui_config_mouse_settings);
      ui_temp_buffer._data_offset_ = ui_theme_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_theme_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_theme_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_theme_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_input_data_buffer._data_offset_ = ui_system_shader_buffer_variable._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_input_data_buffer._data_size_ = ui_system_shader_buffer_variable._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_input_data_buffer._data_format_ = ui_system_shader_buffer_variable._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_input_data_buffer._data_flags_ = ui_system_shader_buffer_variable._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer = packssdw(ui_input_data_buffer,ui_temp_buffer);
      ui_render_buffer_var = pmaddwd(ui_stack_array,_ui_config_stylus_settings);
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array = packssdw(ui_temp_buffer,ui_temp_buffer);
      ui_render_buffer_var = pmaddwd(ui_stack_array,_ui_config_stylus_settings);
      ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_temp_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_temp_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temporary_buffer._data_offset_ = ui_temp_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temporary_buffer._data_size_ = ui_temp_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temporary_buffer._data_format_ = ui_temp_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temporary_buffer._data_flags_ = ui_temp_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array = packssdw(ui_temp_buffer,ui_temporary_buffer);
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_render_buffer_var = pmaddwd(ui_temp_buffer,_ui_config_keyboard_settings);
      ui_theme_buffer_var = pmaddwd(ui_temp_buffer,_ui_config_keyboard_settings);
      ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_temp_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_temp_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array = packssdw(ui_temp_buffer,ui_temp_buffer);
      aui_task_identifier6._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_task_identifier6._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_task_identifier6._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_task_identifier6._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_offset_ = ui_theme_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_theme_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_theme_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_theme_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array = packssdw(aui_task_identifier6,ui_temp_buffer);
      ui_stack_array._component_x_ = ui_component - ui_temporary_buffer._component_x_;
      ui_stack_array._component_y_ = short_value14 - ui_temporary_buffer._component_y_;
      ui_stack_array._component_z_ = short_value17 - ui_temporary_buffer._component_z_;
      short_value57 = (ui_stack_array._component_w_ - ui_stack_array._component_w_) - ui_temporary_buffer._component_w_;
      ui_stack_array._offset_x_ = short_value21 - ui_temporary_buffer._offset_x_;
      ui_stack_array._offset_y_ = short_value24 - ui_temporary_buffer._offset_y_;
      ui_stack_array._offset_z_ = short_value27 - ui_temporary_buffer._offset_z_;
      ui_stack_array._offset_w_ = short_value30 - ui_temporary_buffer._offset_w_;
      ui_component = (ui_stack_array._component_w_ - ui_stack_array._component_w_) + ui_temporary_buffer._component_w_;
      ui_stack_array._component_w_ = short_value57;
      aui_task_identifier7._8_8_ =
           (ui_void_ptr8)
           (CONCAT64(CONCAT42(CONCAT22(ui_component + ui_component,ui_component),ui_component + ui_component),
                     CONCAT22(ui_component + ui_component,ui_component)) >> UI_EVENT_FLAG_OFFSET);
      aui_task_identifier7._component_w_ = ui_component + ui_component;
      aui_task_identifier7._component_z_ = ui_component + ui_component;
      aui_task_identifier7._component_y_ = ui_component + ui_component;
      aui_task_identifier7._component_x_ = ui_component + ui_component;
      short_value59 = ui_stack_array._component_w_ + ui_temp_buffer._component_w_;
      ui_component = ui_stack_array._offset_x_ + ui_temp_buffer._offset_x_;
      ui_component = ui_stack_array._offset_y_ + ui_temp_buffer._offset_y_;
      ui_component = ui_stack_array._offset_z_ + ui_temp_buffer._offset_z_;
      ui_component = ui_stack_array._offset_w_ + ui_temp_buffer._offset_w_;
      ui_temp_buffer._component_y_ = ui_component + ui_component;
      ui_temp_buffer._component_x_ = ui_component + ui_component;
      ui_temp_buffer._component_z_ = ui_component + ui_component;
      ui_temp_buffer._component_w_ = ui_component + ui_component;
      ui_temp_buffer._offset_x_ = ui_component + ui_component;
      ui_temp_buffer._offset_y_ = ui_component + ui_component;
      ui_temp_buffer._offset_z_ = ui_component + ui_component;
      ui_temp_buffer._offset_w_ = ui_component + ui_component;
      ui_theme_buffer_var = pmaddwd(aui_task_identifier7,_ui_config_multitouch_settings);
      ui_system_shader_buffer_variable = pmaddwd(aui_task_identifier7,_ui_config_locale_settings);
      aui_event_id74._8_8_ =
           (ui_void_ptr8)
           (CONCAT64(CONCAT42(CONCAT22(ui_component - ui_component,ui_component),ui_component - ui_component),
                     CONCAT22(ui_component - ui_component,ui_component)) >> UI_EVENT_FLAG_OFFSET);
      aui_event_id74._component_w_ = ui_component - ui_component;
      aui_event_id74._component_z_ = ui_component - ui_component;
      aui_event_id74._component_y_ = ui_component - ui_component;
      aui_event_id74._component_x_ = ui_component - ui_component;
      ui_render_buffer_var = pmaddwd(ui_temp_buffer,_ui_config_multitouch_settings);
      ui_task_processing_buffer._component_y_ = ui_component - ui_component;
      ui_task_processing_buffer._component_x_ = ui_component - ui_component;
      ui_task_processing_buffer._component_z_ = ui_component - ui_component;
      ui_task_processing_buffer._component_w_ = ui_component - ui_component;
      ui_task_processing_buffer._offset_x_ = ui_component - ui_component;
      ui_task_processing_buffer._offset_y_ = ui_component - ui_component;
      ui_task_processing_buffer._offset_z_ = ui_component - ui_component;
      ui_task_processing_buffer._offset_w_ = ui_component - ui_component;
      ui_temp_buffer = pmaddwd(ui_temp_buffer,_ui_config_locale_settings);
      ui_temp_buffer._data_offset_ = ui_theme_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_theme_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_theme_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_theme_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_task_identifier8._data_offset_ = ui_system_shader_buffer_variable._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_task_identifier8._data_size_ = ui_system_shader_buffer_variable._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_task_identifier8._data_format_ = ui_system_shader_buffer_variable._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_task_identifier8._data_flags_ = ui_system_shader_buffer_variable._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array = packssdw(ui_temp_buffer,ui_temp_buffer);
      ui_render_buffer_var = pmaddwd(ui_task_processing_buffer,_ui_config_keyboard_settings);
      ui_system_shader_buffer_variable = pmaddwd(aui_event_id74,_ui_config_stylus_settings);
      ui_theme_buffer_var = pmaddwd(aui_event_id74,_ui_config_keyboard_settings);
      ui_temp_buffer = pmaddwd(ui_task_processing_buffer,_ui_config_stylus_settings);
      ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_temp_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_temp_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array = packssdw(aui_task_identifier8,ui_temp_buffer);
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id75._data_offset_ = ui_system_shader_buffer_variable._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id75._data_size_ = ui_system_shader_buffer_variable._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id75._data_format_ = ui_system_shader_buffer_variable._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id75._data_flags_ = ui_system_shader_buffer_variable._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_event_buffer_var._data_offset_ = ui_theme_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_event_buffer_var._data_size_ = ui_theme_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_event_buffer_var._data_format_ = ui_theme_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_event_buffer_var._data_flags_ = ui_theme_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array = packssdw(ui_event_buffer_var,ui_temp_buffer);
      ui_task_processing_buffer._data_offset_ = ui_temp_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_task_processing_buffer._data_size_ = ui_temp_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_task_processing_buffer._data_format_ = ui_temp_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_task_processing_buffer._data_flags_ = ui_temp_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array = packssdw(aui_event_id75,ui_task_processing_buffer);
      ui_system_shader_buffer_variable._offset_z_ = ui_stack_array._component_w_;
      ui_system_shader_buffer_variable._0_12_ = ui_stack_array._0_12_;
      ui_system_shader_buffer_variable._offset_w_ = ui_stack_array._component_w_ - ui_temp_buffer._component_w_;
      ui_system_shader_buffer_variable._data_flags_ = ui_system_shader_buffer_variable._data_flags_;
      ui_system_shader_buffer_variable._offset_y_ = ui_stack_array._component_z_ - ui_temp_buffer._component_z_;
      ui_system_shader_buffer_variable._0_10_ = ui_stack_array._0_10_;
      ui_system_shader_buffer_variable._10_6_ = ui_system_shader_buffer_variable._10_6_;
      ui_system_shader_buffer_variable._offset_x_ = ui_stack_array._component_z_;
      ui_system_shader_buffer_variable._0_8_ = ui_stack_array._0_8_;
      ui_system_shader_buffer_variable._8_8_ = ui_system_shader_buffer_variable._8_8_;
      ui_system_shader_buffer_variable._component_w_ = ui_stack_array._component_y_ - ui_temp_buffer._component_y_;
      ui_system_shader_buffer_variable._component_z_ = ui_stack_array._component_y_;
      ui_system_shader_buffer_variable._component_y_ = ui_stack_array._component_x_ - ui_temp_buffer._component_x_;
      ui_system_shader_buffer_variable._component_x_ = ui_stack_array._component_x_;
      ui_task_processing_buffer._component_y_ = ui_stack_array._offset_x_ - ui_temp_buffer._offset_x_;
      ui_task_processing_buffer._component_x_ = ui_stack_array._offset_x_;
      ui_task_processing_buffer._component_z_ = ui_stack_array._offset_y_;
      ui_task_processing_buffer._component_w_ = ui_stack_array._offset_y_ - ui_temp_buffer._offset_y_;
      ui_task_processing_buffer._offset_x_ = ui_stack_array._offset_z_;
      ui_task_processing_buffer._offset_y_ = ui_stack_array._offset_z_ - ui_temp_buffer._offset_z_;
      ui_task_processing_buffer._offset_z_ = ui_stack_array._offset_w_;
      ui_task_processing_buffer._offset_w_ = ui_stack_array._offset_w_ - ui_temp_buffer._offset_w_;
      ui_render_buffer_var = pmaddwd(ui_system_shader_buffer_variable,_ui_config_mouse_settings);
      aui_task_identifier9._8_8_ =
           (ui_void_ptr8)
           (CONCAT64(CONCAT42(CONCAT22(ui_temp_buffer._component_w_ + ui_stack_array._component_w_,ui_component),
                              ui_temp_buffer._component_z_ + ui_stack_array._component_z_),CONCAT22(short_value26,ui_component)) >> UI_EVENT_FLAG_OFFSET
           );
      aui_task_identifier9._component_w_ = ui_temp_buffer._component_y_ + ui_stack_array._component_y_;
      aui_task_identifier9._component_z_ = short_value23;
      aui_task_identifier9._component_y_ = ui_temp_buffer._component_x_ + ui_stack_array._component_x_;
      aui_task_identifier9._component_x_ = short_value19;
      ui_event_buffer_var._component_y_ = ui_temp_buffer._offset_x_ + ui_stack_array._offset_x_;
      ui_event_buffer_var._component_x_ = ui_component;
      ui_event_buffer_var._component_z_ = ui_component;
      ui_event_buffer_var._component_w_ = ui_temp_buffer._offset_y_ + ui_stack_array._offset_y_;
      ui_event_buffer_var._offset_x_ = short_value58;
      ui_event_buffer_var._offset_y_ = ui_temp_buffer._offset_z_ + ui_stack_array._offset_z_;
      ui_event_buffer_var._offset_z_ = short_value60;
      ui_event_buffer_var._offset_w_ = ui_temp_buffer._offset_w_ + ui_stack_array._offset_w_;
      ui_event_id_array_primary._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_event_id_array_primary._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_event_id_array_primary._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_event_id_array_primary._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_theme_buffer_var = pmaddwd(aui_task_identifier9,_ui_config_stylus_settings);
      ui_render_buffer_var = pmaddwd(ui_event_buffer_var,_ui_config_stylus_settings);
      ui_theme_buffer_var._data_offset_ = ui_theme_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_theme_buffer_var._data_size_ = ui_theme_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_theme_buffer_var._data_format_ = ui_theme_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_theme_buffer_var._data_flags_ = ui_theme_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer = packssdw(ui_theme_buffer_var,ui_temp_buffer);
      ui_render_buffer_var = pmaddwd(ui_task_processing_buffer,_ui_config_mouse_settings);
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer = packssdw(ui_event_id_array_primary,ui_temp_buffer);
      ui_render_buffer_var = pmaddwd(ui_event_buffer_var,_ui_config_keyboard_settings);
      ui_theme_buffer_var = pmaddwd(aui_task_identifier9,_ui_config_keyboard_settings);
      ui_temp_buffer = pmaddwd(ui_task_processing_buffer,_ui_config_stylus_settings);
      ui_temp_buffer = pmaddwd(ui_system_shader_buffer_variable,_ui_config_stylus_settings);
      ui_event_buffer_var._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_event_buffer_var._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_event_buffer_var._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_event_buffer_var._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      short_value19 = ui_stack_array._component_x_ + ui_stack_array._component_x_ + ui_temp_buffer._component_x_;
      ui_component = ui_stack_array._component_y_ + ui_stack_array._component_y_ + ui_temp_buffer._component_y_;
      short_value58 = ui_stack_array._component_z_ + ui_stack_array._component_z_ + ui_temp_buffer._component_z_;
      short_value61 = ui_stack_array._component_w_ + ui_stack_array._component_w_ + ui_temp_buffer._component_w_;
      ui_component = ui_stack_array._offset_x_ + ui_stack_array._offset_x_ + ui_temp_buffer._offset_x_;
      ui_component = ui_stack_array._offset_y_ + ui_stack_array._offset_y_ + ui_temp_buffer._offset_y_;
      ui_component = ui_stack_array._offset_z_ + ui_stack_array._offset_z_ + ui_temp_buffer._offset_z_;
      ui_component = ui_stack_array._offset_w_ + ui_stack_array._offset_w_ + ui_temp_buffer._offset_w_;
      aui_event_id_fourth0._data_offset_ = ui_theme_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id_fourth0._data_size_ = ui_theme_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id_fourth0._data_format_ = ui_theme_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id_fourth0._data_flags_ = ui_theme_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_component = (ui_stack_array._component_x_ + ui_stack_array._component_x_) - ui_temp_buffer._component_x_;
      ui_component = (ui_stack_array._component_y_ + ui_stack_array._component_y_) - ui_temp_buffer._component_y_;
      ui_component = (ui_stack_array._component_z_ + ui_stack_array._component_z_) - ui_temp_buffer._component_z_;
      ui_component = (ui_stack_array._component_w_ + ui_stack_array._component_w_) - ui_temp_buffer._component_w_;
      ui_component = (ui_stack_array._offset_x_ + ui_stack_array._offset_x_) - ui_temp_buffer._offset_x_;
      ui_component = (ui_stack_array._offset_y_ + ui_stack_array._offset_y_) - ui_temp_buffer._offset_y_;
      ui_component = (ui_stack_array._offset_z_ + ui_stack_array._offset_z_) - ui_temp_buffer._offset_z_;
      ui_component = (ui_stack_array._offset_w_ + ui_stack_array._offset_w_) - ui_temp_buffer._offset_w_;
      ui_system_shader_buffer_variable = packssdw(aui_event_id_fourth0,ui_event_buffer_var);
      sStack_c78 = ui_component - ui_temp_buffer._component_x_;
      sStack_c76 = short_value29 - ui_temp_buffer._component_y_;
      sStack_c74 = ui_component - ui_temp_buffer._component_z_;
      sStack_c72 = (ui_stack_array._component_w_ + ui_stack_array._component_w_) - ui_temp_buffer._component_w_;
      sStack_c70 = ui_component - ui_temp_buffer._offset_x_;
      sStack_c6e = ui_component - ui_temp_buffer._offset_y_;
      sStack_c6c = ui_component - ui_temp_buffer._offset_z_;
      sStack_c6a = ui_component - ui_temp_buffer._offset_w_;
      ui_component = ui_stack_array._component_w_ + ui_stack_array._component_w_ + ui_temp_buffer._component_w_;
      ui_component = (ui_stack_array._component_x_ - ui_stack_array._component_x_) + ui_temp_buffer._component_x_;
      ui_component = (ui_stack_array._component_y_ - ui_stack_array._component_y_) + ui_temp_buffer._component_y_;
      ui_component = (ui_stack_array._component_z_ - ui_stack_array._component_z_) + ui_temp_buffer._component_z_;
      ui_component = (ui_stack_array._component_w_ - ui_stack_array._component_w_) + ui_temp_buffer._component_w_;
      ui_component = (ui_stack_array._offset_x_ - ui_stack_array._offset_x_) + ui_temp_buffer._offset_x_;
      ui_component = (ui_stack_array._offset_y_ - ui_stack_array._offset_y_) + ui_temp_buffer._offset_y_;
      ui_component = (ui_stack_array._offset_z_ - ui_stack_array._offset_z_) + ui_temp_buffer._offset_z_;
      ui_component = (ui_stack_array._offset_w_ - ui_stack_array._offset_w_) + ui_temp_buffer._offset_w_;
      short_value23 = (ui_stack_array._component_x_ - ui_stack_array._component_x_) - ui_temp_buffer._component_x_;
      ui_component = (ui_stack_array._component_y_ - ui_stack_array._component_y_) - ui_temp_buffer._component_y_;
      short_value60 = (ui_stack_array._component_z_ - ui_stack_array._component_z_) - ui_temp_buffer._component_z_;
      ui_stack_array._component_w_ = (ui_stack_array._component_w_ - ui_stack_array._component_w_) - ui_temp_buffer._component_w_;
      ui_component = (ui_stack_array._offset_x_ - ui_stack_array._offset_x_) - ui_temp_buffer._offset_x_;
      ui_component = (ui_stack_array._offset_y_ - ui_stack_array._offset_y_) - ui_temp_buffer._offset_y_;
      ui_component = (ui_stack_array._offset_z_ - ui_stack_array._offset_z_) - ui_temp_buffer._offset_z_;
      ui_component = (ui_stack_array._offset_w_ - ui_stack_array._offset_w_) - ui_temp_buffer._offset_w_;
      ui_stack_array._component_y_ = ui_component;
      ui_stack_array._component_x_ = ui_component;
      ui_stack_array._component_z_ = ui_component;
      ui_stack_array._component_w_ = ui_component;
      ui_stack_array._offset_x_ = ui_component;
      ui_stack_array._offset_y_ = ui_component;
      ui_stack_array._offset_z_ = ui_component;
      ui_stack_array._offset_w_ = ui_component;
      ui_task_processing_buffer._data_offset_ = ui_temp_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_task_processing_buffer._data_size_ = ui_temp_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_task_processing_buffer._data_format_ = ui_temp_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_task_processing_buffer._data_flags_ = ui_temp_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_component = (ui_stack_array._component_w_ - ui_stack_array._component_w_) + ui_temp_buffer._component_w_;
      ui_system_layout_data_buffer._data_offset_ = ui_temp_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_system_layout_data_buffer._data_size_ = ui_temp_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_system_layout_data_buffer._data_format_ = ui_temp_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_system_layout_data_buffer._data_flags_ = ui_temp_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_component = (ui_stack_array._component_w_ - ui_stack_array._component_w_) - ui_temp_buffer._component_w_;
      ui_temp_buffer = packssdw(ui_system_layout_data_buffer,ui_task_processing_buffer);
      ui_stack_array._component_x_ = short_value13 - ui_stack_array._component_x_;
      ui_stack_array._component_y_ = ui_component - ui_stack_array._component_y_;
      ui_stack_array._component_z_ = ui_component - ui_stack_array._component_z_;
      ui_stack_array._component_w_ = short_value64 - ui_stack_array._component_w_;
      ui_stack_array._offset_x_ = ui_component - ui_stack_array._offset_x_;
      ui_stack_array._offset_y_ = ui_component - ui_stack_array._offset_y_;
      ui_stack_array._offset_z_ = ui_component - ui_stack_array._offset_z_;
      ui_stack_array._offset_w_ = ui_component - ui_stack_array._offset_w_;
      short_value26 = ui_stack_array._component_x_ + ui_stack_array._component_x_;
      ui_component = ui_stack_array._component_y_ + ui_stack_array._component_y_;
      short_value62 = ui_stack_array._component_z_ + ui_stack_array._component_z_;
      ui_component = short_value63 + ui_stack_array._component_w_;
      ui_component = ui_stack_array._offset_x_ + ui_stack_array._offset_x_;
      ui_component = ui_stack_array._offset_y_ + ui_stack_array._offset_y_;
      ui_component = ui_stack_array._offset_z_ + ui_stack_array._offset_z_;
      ui_component = ui_stack_array._offset_w_ + ui_stack_array._offset_w_;
      ui_stack_array._component_x_ = ui_stack_array._component_x_ - ui_stack_array._component_x_;
      ui_stack_array._component_y_ = ui_stack_array._component_y_ - ui_stack_array._component_y_;
      ui_stack_array._component_z_ = ui_stack_array._component_z_ - ui_stack_array._component_z_;
      ui_stack_array._component_w_ = short_value63 - ui_stack_array._component_w_;
      ui_stack_array._offset_x_ = ui_stack_array._offset_x_ - ui_stack_array._offset_x_;
      ui_stack_array._offset_y_ = ui_stack_array._offset_y_ - ui_stack_array._offset_y_;
      ui_stack_array._offset_z_ = ui_stack_array._offset_z_ - ui_stack_array._offset_z_;
      ui_stack_array._offset_w_ = ui_stack_array._offset_w_ - ui_stack_array._offset_w_;
      sStack_b28 = ui_stack_array._component_x_ - ui_stack_array._component_x_;
      sStack_b26 = ui_stack_array._component_y_ - ui_stack_array._component_y_;
      sStack_b24 = ui_stack_array._component_z_ - ui_stack_array._component_z_;
      sStack_b22 = ui_stack_array._component_w_ - ui_stack_array._component_w_;
      sStack_b20 = ui_stack_array._offset_x_ - ui_stack_array._offset_x_;
      sStack_b1e = ui_stack_array._offset_y_ - ui_stack_array._offset_y_;
      sStack_b1c = ui_stack_array._offset_z_ - ui_stack_array._offset_z_;
      sStack_b1a = ui_stack_array._offset_w_ - ui_stack_array._offset_w_;
      ui_stack_array._component_x_ = ui_stack_array._component_x_ + ui_stack_array._component_x_;
      ui_stack_array._component_y_ = ui_stack_array._component_y_ + ui_stack_array._component_y_;
      ui_stack_array._component_z_ = ui_stack_array._component_z_ + ui_stack_array._component_z_;
      ui_stack_array._component_w_ = ui_stack_array._component_w_ + ui_stack_array._component_w_;
      ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + ui_stack_array._offset_x_;
      ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + ui_stack_array._offset_y_;
      ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + ui_stack_array._offset_z_;
      ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + ui_stack_array._offset_w_;
      aui_event_id77._8_8_ =
           (ui_void_ptr8)
           (CONCAT64(CONCAT42(CONCAT22(short_value59,ui_component),ui_stack_array._component_z_ + ui_temp_buffer._component_z_),
                     CONCAT22(short_value17 + ui_temporary_buffer._component_z_,ui_component)) >> UI_EVENT_FLAG_OFFSET);
      aui_event_id77._component_w_ = ui_stack_array._component_y_ + ui_temp_buffer._component_y_;
      aui_event_id77._component_z_ = short_value14 + ui_temporary_buffer._component_y_;
      aui_event_id77._component_y_ = ui_stack_array._component_x_ + ui_temp_buffer._component_x_;
      aui_event_id77._component_x_ = ui_component + ui_temporary_buffer._component_x_;
      ui_temp_buffer._component_y_ = ui_component;
      ui_temp_buffer._component_x_ = short_value21 + ui_temporary_buffer._offset_x_;
      ui_temp_buffer._component_z_ = short_value24 + ui_temporary_buffer._offset_y_;
      ui_temp_buffer._component_w_ = ui_component;
      ui_temp_buffer._offset_x_ = short_value27 + ui_temporary_buffer._offset_z_;
      ui_temp_buffer._offset_y_ = ui_component;
      ui_temp_buffer._offset_z_ = short_value30 + ui_temporary_buffer._offset_w_;
      ui_temp_buffer._offset_w_ = ui_component;
      ui_render_buffer_var = pmaddwd(ui_temp_buffer,_ui_config_gamepad_settings);
      ui_theme_buffer_var = pmaddwd(aui_event_id77,_ui_config_gamepad_settings);
      aui_event_id_fourth4._offset_z_ = short_value57;
      aui_event_id_fourth4._0_12_ = ui_stack_array._0_12_;
      aui_event_id_fourth4._offset_w_ = ui_stack_array._component_w_ - ui_temp_buffer._component_w_;
      aui_event_id_fourth3._data_flags_ = aui_event_id_fourth4._data_flags_;
      aui_event_id_fourth3._offset_y_ = ui_stack_array._component_z_ - ui_temp_buffer._component_z_;
      aui_event_id_fourth3._0_10_ = ui_stack_array._0_10_;
      aui_event_id_fourth2._10_6_ = aui_event_id_fourth3._10_6_;
      aui_event_id_fourth2._offset_x_ = ui_stack_array._component_z_;
      aui_event_id_fourth2._0_8_ = ui_stack_array._0_8_;
      aui_event_id_fourth1._8_8_ = aui_event_id_fourth2._8_8_;
      aui_event_id_fourth1._component_w_ = ui_stack_array._component_y_ - ui_temp_buffer._component_y_;
      aui_event_id_fourth1._component_z_ = ui_stack_array._component_y_;
      aui_event_id_fourth1._component_y_ = ui_stack_array._component_x_ - ui_temp_buffer._component_x_;
      aui_event_id_fourth1._component_x_ = ui_stack_array._component_x_;
      ui_temp_buffer._component_y_ = ui_stack_array._offset_x_ - ui_temp_buffer._offset_x_;
      ui_temp_buffer._component_x_ = ui_stack_array._offset_x_;
      ui_temp_buffer._component_z_ = ui_stack_array._offset_y_;
      ui_temp_buffer._component_w_ = ui_stack_array._offset_y_ - ui_temp_buffer._offset_y_;
      ui_temp_buffer._offset_x_ = ui_stack_array._offset_z_;
      ui_temp_buffer._offset_y_ = ui_stack_array._offset_z_ - ui_temp_buffer._offset_z_;
      ui_temp_buffer._offset_z_ = ui_stack_array._offset_w_;
      ui_temp_buffer._offset_w_ = ui_stack_array._offset_w_ - ui_temp_buffer._offset_w_;
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_event_buffer_var._data_offset_ = ui_theme_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_event_buffer_var._data_size_ = ui_theme_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_event_buffer_var._data_format_ = ui_theme_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_event_buffer_var._data_flags_ = ui_theme_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array = packssdw(ui_event_buffer_var,ui_temp_buffer);
      ui_render_buffer_var = pmaddwd(aui_event_id_fourth1,_ui_config_vibration_settings);
      ui_event_buffer_var._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_event_buffer_var._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_event_buffer_var._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_event_buffer_var._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_render_buffer_var = pmaddwd(ui_temp_buffer,_ui_config_vibration_settings);
      ui_temp_buffer = pmaddwd(ui_temp_buffer,_ui_config_motion_settings);
      ui_theme_buffer_var = pmaddwd(aui_event_id_fourth1,_ui_config_motion_settings);
      ui_temporary_buffer = pmaddwd(aui_event_id77,_ui_config_sensor_settings);
      ui_temp_buffer = pmaddwd(ui_temp_buffer,_ui_config_sensor_settings);
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array = packssdw(ui_event_buffer_var,ui_temp_buffer);
      ui_component = ui_temp_buffer._component_w_ + ui_stack_array._component_w_;
      ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_temp_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_temp_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array._component_x_ = short_value16 - ui_temp_buffer._component_x_;
      ui_stack_array._component_y_ = ui_component - ui_temp_buffer._component_y_;
      ui_stack_array._component_z_ = short_value32 - ui_temp_buffer._component_z_;
      ui_stack_array._component_w_ = ui_stack_array._component_w_ - ui_temp_buffer._component_w_;
      ui_stack_array._offset_x_ = ui_component - ui_temp_buffer._offset_x_;
      ui_stack_array._offset_y_ = ui_component - ui_temp_buffer._offset_y_;
      ui_stack_array._offset_z_ = ui_component - ui_temp_buffer._offset_z_;
      ui_stack_array._offset_w_ = ui_component - ui_temp_buffer._offset_w_;
      aui_event_id_fourth5._data_offset_ = ui_theme_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id_fourth5._data_size_ = ui_theme_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id_fourth5._data_format_ = ui_theme_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id_fourth5._data_flags_ = ui_theme_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array._component_x_ = ui_temp_buffer._component_x_;
      ui_stack_array._component_y_ = ui_temp_buffer._component_y_;
      ui_stack_array._component_z_ = ui_temp_buffer._component_z_;
      ui_stack_array._component_w_ = ui_temp_buffer._component_w_;
      ui_stack_array._offset_x_ = ui_temp_buffer._offset_x_;
      ui_stack_array._offset_y_ = ui_temp_buffer._offset_y_;
      ui_stack_array._offset_z_ = ui_temp_buffer._offset_z_;
      ui_stack_array._offset_w_ = ui_temp_buffer._offset_w_;
      short_value30 = ui_stack_array._component_x_ - ui_stack_array._component_x_;
      ui_component = ui_stack_array._component_y_ - ui_stack_array._component_y_;
      ui_component = ui_stack_array._component_z_ - ui_stack_array._component_z_;
      ui_component = ui_stack_array._component_w_ - ui_stack_array._component_w_;
      ui_component = ui_stack_array._offset_x_ - ui_stack_array._offset_x_;
      ui_component = ui_stack_array._offset_y_ - ui_stack_array._offset_y_;
      ui_component = ui_stack_array._offset_z_ - ui_stack_array._offset_z_;
      ui_component = ui_stack_array._offset_w_ - ui_stack_array._offset_w_;
      ui_stack_array = packssdw(aui_event_id_fourth5,ui_temp_buffer);
      ui_stack_array._component_x_ = ui_stack_array._component_x_ + ui_stack_array._component_x_;
      ui_stack_array._component_y_ = ui_stack_array._component_y_ + ui_stack_array._component_y_;
      ui_stack_array._component_z_ = ui_stack_array._component_z_ + ui_stack_array._component_z_;
      ui_stack_array._component_w_ = ui_stack_array._component_w_ + ui_stack_array._component_w_;
      ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + ui_stack_array._offset_x_;
      ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + ui_stack_array._offset_y_;
      ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + ui_stack_array._offset_z_;
      ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + ui_stack_array._offset_w_;
      aui_event_id78._data_offset_ = ui_temporary_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id78._data_size_ = ui_temporary_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id78._data_format_ = ui_temporary_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id78._data_flags_ = ui_temporary_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_temp_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_temp_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array = packssdw(aui_event_id78,ui_temp_buffer);
      ui_stack_array._component_x_ = short_value20 - ui_temp_buffer._component_x_;
      ui_stack_array._component_y_ = ui_component - ui_temp_buffer._component_y_;
      ui_stack_array._component_z_ = short_value56 - ui_temp_buffer._component_z_;
      ui_stack_array._component_w_ = short_value65 - ui_temp_buffer._component_w_;
      ui_stack_array._offset_x_ = ui_component - ui_temp_buffer._offset_x_;
      ui_stack_array._offset_y_ = ui_component - ui_temp_buffer._offset_y_;
      ui_stack_array._offset_z_ = ui_component - ui_temp_buffer._offset_z_;
      ui_stack_array._offset_w_ = ui_component - ui_temp_buffer._offset_w_;
      ui_stack_array._component_x_ = ui_system_shader_buffer_variable._component_x_;
      ui_stack_array._component_y_ = ui_system_shader_buffer_variable._component_y_;
      ui_stack_array._component_z_ = ui_system_shader_buffer_variable._component_z_;
      ui_stack_array._component_w_ = ui_system_shader_buffer_variable._component_w_;
      ui_stack_array._offset_x_ = ui_system_shader_buffer_variable._offset_x_;
      ui_stack_array._offset_y_ = ui_system_shader_buffer_variable._offset_y_;
      ui_stack_array._offset_z_ = ui_system_shader_buffer_variable._offset_z_;
      ui_stack_array._offset_w_ = ui_system_shader_buffer_variable._offset_w_;
      short_value63 = ui_stack_array._component_x_ - ui_stack_array._component_x_;
      short_value57 = ui_stack_array._component_y_ - ui_stack_array._component_y_;
      ui_component = ui_stack_array._component_z_ - ui_stack_array._component_z_;
      short_value14 = ui_stack_array._component_w_ - ui_stack_array._component_w_;
      short_value17 = ui_stack_array._offset_x_ - ui_stack_array._offset_x_;
      short_value21 = ui_stack_array._offset_y_ - ui_stack_array._offset_y_;
      short_value24 = ui_stack_array._offset_z_ - ui_stack_array._offset_z_;
      short_value27 = ui_stack_array._offset_w_ - ui_stack_array._offset_w_;
      ui_stack_array._component_x_ = ui_stack_array._component_x_ + ui_stack_array._component_x_;
      ui_stack_array._component_y_ = ui_stack_array._component_y_ + ui_stack_array._component_y_;
      ui_stack_array._component_z_ = ui_stack_array._component_z_ + ui_stack_array._component_z_;
      ui_stack_array._component_w_ = ui_stack_array._component_w_ + ui_stack_array._component_w_;
      ui_stack_array._offset_x_ = ui_stack_array._offset_x_ + ui_stack_array._offset_x_;
      ui_stack_array._offset_y_ = ui_stack_array._offset_y_ + ui_stack_array._offset_y_;
      ui_stack_array._offset_z_ = ui_stack_array._offset_z_ + ui_stack_array._offset_z_;
      ui_stack_array._offset_w_ = ui_stack_array._offset_w_ + ui_stack_array._offset_w_;
      aui_event_id79._8_8_ =
           (ui_void_ptr8)
           (CONCAT64(CONCAT42(CONCAT22(ui_stack_array._component_w_ + ui_stack_array._component_w_,ui_component),
                              ui_stack_array._component_z_ + ui_stack_array._component_z_),
                     CONCAT22(ui_component + ui_temp_buffer._component_z_,ui_component)) >> UI_EVENT_FLAG_OFFSET);
      aui_event_id79._component_w_ = ui_stack_array._component_y_ + ui_stack_array._component_y_;
      aui_event_id79._component_z_ = short_value29 + ui_temp_buffer._component_y_;
      aui_event_id79._component_y_ = ui_stack_array._component_x_ + ui_stack_array._component_x_;
      aui_event_id79._component_x_ = ui_component + ui_temp_buffer._component_x_;
      ui_stack_array._component_y_ = ui_component + ui_stack_array._offset_x_;
      ui_stack_array._component_x_ = short_value22 + ui_temp_buffer._offset_x_;
      ui_stack_array._component_z_ = short_value25 + ui_temp_buffer._offset_y_;
      ui_stack_array._component_w_ = ui_component + ui_stack_array._offset_y_;
      ui_stack_array._offset_x_ = short_value28 + ui_temp_buffer._offset_z_;
      ui_stack_array._offset_y_ = ui_component + ui_stack_array._offset_z_;
      ui_stack_array._offset_z_ = short_value31 + ui_temp_buffer._offset_w_;
      ui_stack_array._offset_w_ = ui_component + ui_stack_array._offset_w_;
      ui_theme_buffer_var = pmaddwd(aui_event_id79,_ui_config_sensor_settings);
      ui_temp_buffer._component_y_ = ui_stack_array._offset_x_ + ui_stack_array._offset_x_;
      ui_temp_buffer._component_x_ = ui_component + ui_temp_buffer._offset_x_;
      ui_temp_buffer._component_z_ = ui_component + ui_temp_buffer._offset_y_;
      ui_temp_buffer._component_w_ = ui_stack_array._offset_y_ + ui_stack_array._offset_y_;
      ui_temp_buffer._offset_x_ = ui_component + ui_temp_buffer._offset_z_;
      ui_temp_buffer._offset_y_ = ui_stack_array._offset_z_ + ui_stack_array._offset_z_;
      ui_temp_buffer._offset_z_ = ui_component + ui_temp_buffer._offset_w_;
      ui_temp_buffer._offset_w_ = ui_stack_array._offset_w_ + ui_stack_array._offset_w_;
      ui_temp_buffer._8_8_ =
           (ui_void_ptr8)
           (CONCAT64(CONCAT42(CONCAT22(ui_stack_array._component_w_ - ui_stack_array._component_w_,sStack_c72),
                              ui_stack_array._component_z_ - ui_stack_array._component_z_),CONCAT22(sStack_c74,sStack_c72)
                    ) >> UI_EVENT_FLAG_OFFSET);
      ui_temp_buffer._component_w_ = ui_stack_array._component_y_ - ui_stack_array._component_y_;
      ui_temp_buffer._component_z_ = sStack_c76;
      ui_temp_buffer._component_y_ = ui_stack_array._component_x_ - ui_stack_array._component_x_;
      ui_temp_buffer._component_x_ = sStack_c78;
      ui_render_buffer_var = pmaddwd(ui_temp_buffer,_ui_config_sensor_settings);
      ui_temporary_buffer = pmaddwd(ui_temp_buffer,_ui_config_misc_settings);
      ui_theme_buffer_var._component_y_ = ui_stack_array._offset_x_ - ui_stack_array._offset_x_;
      ui_theme_buffer_var._component_x_ = sStack_c70;
      ui_theme_buffer_var._component_z_ = sStack_c6e;
      ui_theme_buffer_var._component_w_ = ui_stack_array._offset_y_ - ui_stack_array._offset_y_;
      ui_theme_buffer_var._offset_x_ = sStack_c6c;
      ui_theme_buffer_var._offset_y_ = ui_stack_array._offset_z_ - ui_stack_array._offset_z_;
      ui_theme_buffer_var._offset_z_ = sStack_c6a;
      ui_theme_buffer_var._offset_w_ = ui_stack_array._offset_w_ - ui_stack_array._offset_w_;
      ui_task_processing_buffer._8_8_ =
           (ui_void_ptr8)
           (CONCAT64(CONCAT42(CONCAT22(ui_stack_array._component_w_,ui_component),ui_stack_array._component_z_),
                     CONCAT22(short_value18 - ui_temp_buffer._component_z_,ui_component)) >> UI_EVENT_FLAG_OFFSET);
      ui_task_processing_buffer._component_w_ = ui_stack_array._component_y_;
      ui_task_processing_buffer._component_z_ = short_value15 - ui_temp_buffer._component_y_;
      ui_task_processing_buffer._component_y_ = ui_stack_array._component_x_;
      ui_task_processing_buffer._component_x_ = ui_component - ui_temp_buffer._component_x_;
      ui_temp_buffer._component_y_ = ui_stack_array._offset_x_;
      ui_temp_buffer._component_x_ = short_value22 - ui_temp_buffer._offset_x_;
      ui_temp_buffer._component_z_ = short_value25 - ui_temp_buffer._offset_y_;
      ui_temp_buffer._component_w_ = ui_stack_array._offset_y_;
      ui_temp_buffer._offset_x_ = short_value28 - ui_temp_buffer._offset_z_;
      ui_temp_buffer._offset_y_ = ui_stack_array._offset_z_;
      ui_temp_buffer._offset_z_ = short_value31 - ui_temp_buffer._offset_w_;
      ui_temp_buffer._offset_w_ = ui_stack_array._offset_w_;
      ui_system_shader_buffer_variable = pmaddwd(ui_task_processing_buffer,_ui_config_motion_settings);
      ui_temp_buffer._8_8_ =
           (ui_void_ptr8)
           (CONCAT64(CONCAT42(CONCAT22(short_value64 + ui_stack_array._component_w_,ui_component),
                              ui_component + ui_stack_array._component_z_),
                     CONCAT22(short_value18 + ui_temp_buffer._component_z_,ui_component)) >> UI_EVENT_FLAG_OFFSET);
      ui_temp_buffer._component_w_ = ui_component + ui_stack_array._component_y_;
      ui_temp_buffer._component_z_ = short_value15 + ui_temp_buffer._component_y_;
      ui_temp_buffer._component_y_ = short_value13 + ui_stack_array._component_x_;
      ui_temp_buffer._component_x_ = ui_component + ui_temp_buffer._component_x_;
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_system_layout_data_buffer._data_offset_ = ui_theme_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_system_layout_data_buffer._data_size_ = ui_theme_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_system_layout_data_buffer._data_format_ = ui_theme_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_system_layout_data_buffer._data_flags_ = ui_theme_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer = packssdw(ui_system_layout_data_buffer,ui_temp_buffer);
      ui_render_buffer_var = pmaddwd(ui_theme_buffer_var,_ui_config_misc_settings);
      ui_temp_buffer._data_offset_ = ui_temporary_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_temporary_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_temporary_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_temporary_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temporary_buffer._data_offset_ = ui_system_shader_buffer_variable._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temporary_buffer._data_size_ = ui_system_shader_buffer_variable._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temporary_buffer._data_format_ = ui_system_shader_buffer_variable._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temporary_buffer._data_flags_ = ui_system_shader_buffer_variable._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer = packssdw(ui_temp_buffer,ui_temp_buffer);
      ui_render_buffer_var = pmaddwd(ui_temp_buffer,_ui_config_motion_settings);
      ui_theme_buffer_var = pmaddwd(aui_event_id79,_ui_config_gamepad_settings);
      ui_system_shader_buffer_variable = pmaddwd(ui_task_processing_buffer,_ui_config_vibration_settings);
      ui_temp_buffer = pmaddwd(ui_temp_buffer,_ui_config_gamepad_settings);
      ui_temp_buffer = pmaddwd(ui_theme_buffer_var,_ui_config_sensor_settings);
      ui_temp_buffer = pmaddwd(ui_temp_buffer,_ui_config_vibration_settings);
      ui_temp_buffer = pmaddwd(ui_temp_buffer,_ui_config_sensor_settings);
      ui_temporary_buffer = pmaddwd(ui_temp_buffer,_ui_config_reserved_settings);
      ui_temp_buffer = pmaddwd(ui_temp_buffer,_ui_config_motion_settings);
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer = packssdw(ui_temporary_buffer,ui_temp_buffer);
      ui_render_buffer_var = pmaddwd(ui_stack_array,_ui_config_reserved_settings);
      ui_input_data_buffer._data_offset_ = ui_temporary_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_input_data_buffer._data_size_ = ui_temporary_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_input_data_buffer._data_format_ = ui_temporary_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_input_data_buffer._data_flags_ = ui_temporary_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array = packssdw(ui_input_data_buffer,ui_temp_buffer);
      ui_render_buffer_var = pmaddwd(ui_stack_array,_ui_config_motion_settings);
      aui_event_id80._data_offset_ = ui_theme_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id80._data_size_ = ui_theme_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id80._data_format_ = ui_theme_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      aui_event_id80._data_flags_ = ui_theme_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_temp_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_temp_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_offset_ = ui_render_buffer_var._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_render_buffer_var._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_render_buffer_var._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_render_buffer_var._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array = packssdw(aui_event_id80,ui_temp_buffer);
      ui_font_data_buffer._data_offset_ = ui_temp_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_font_data_buffer._data_size_ = ui_temp_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_font_data_buffer._data_format_ = ui_temp_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_font_data_buffer._data_flags_ = ui_temp_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_task_processing_buffer._data_offset_ = ui_system_shader_buffer_variable._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_task_processing_buffer._data_size_ = ui_system_shader_buffer_variable._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_task_processing_buffer._data_format_ = ui_system_shader_buffer_variable._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_task_processing_buffer._data_flags_ = ui_system_shader_buffer_variable._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_widget_data_buffer._offset_z_ = ui_stack_array._component_w_;
      ui_widget_data_buffer._0_12_ = ui_stack_array._0_12_;
      ui_widget_data_buffer._offset_w_ = short_value14;
      ui_input_data_buffer._data_flags_ = ui_widget_data_buffer._data_flags_;
      ui_input_data_buffer._offset_y_ = ui_component;
      ui_input_data_buffer._0_10_ = ui_stack_array._0_10_;
      ui_input_data_buffer._10_6_ = ui_input_data_buffer._10_6_;
      ui_input_data_buffer._offset_x_ = ui_stack_array._component_z_;
      ui_input_data_buffer._0_8_ = ui_stack_array._0_8_;
      ui_input_data_buffer._8_8_ = ui_input_data_buffer._8_8_;
      ui_input_data_buffer._component_w_ = short_value57;
      ui_input_data_buffer._component_z_ = ui_stack_array._component_y_;
      ui_input_data_buffer._component_y_ = short_value63;
      ui_input_data_buffer._component_x_ = ui_stack_array._component_x_;
      ui_temp_buffer._component_y_ = short_value17;
      ui_temp_buffer._component_x_ = ui_stack_array._offset_x_;
      ui_temp_buffer._component_z_ = ui_stack_array._offset_y_;
      ui_temp_buffer._component_w_ = short_value21;
      ui_temp_buffer._offset_x_ = ui_stack_array._offset_z_;
      ui_temp_buffer._offset_y_ = short_value24;
      ui_temp_buffer._offset_z_ = ui_stack_array._offset_w_;
      ui_temp_buffer._offset_w_ = short_value27;
      ui_temp_buffer._data_offset_ = ui_temp_buffer._data_offset_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_size_ = ui_temp_buffer._data_size_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_format_ = ui_temp_buffer._data_format_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_temp_buffer._data_flags_ = ui_temp_buffer._data_flags_ + UI_OFFSET_3200 >> ui_component_angle_offset;
      ui_stack_array = packssdw(ui_task_processing_buffer,ui_temp_buffer);
      aui_event_id84._offset_z_ = ui_stack_array._component_w_;
      aui_event_id84._0_12_ = ui_stack_array._0_12_;
      aui_event_id84._offset_w_ = ui_temp_buffer._component_w_ + short_value65;
      aui_event_id83._data_flags_ = aui_event_id84._data_flags_;
      aui_event_id83._offset_y_ = ui_temp_buffer._component_z_ + short_value56;
      aui_event_id83._0_10_ = ui_stack_array._0_10_;
      aui_event_id82._10_6_ = aui_event_id83._10_6_;
      aui_event_id82._offset_x_ = ui_stack_array._component_z_;
      aui_event_id82._0_8_ = ui_stack_array._0_8_;
      aui_event_id81._8_8_ = aui_event_id82._8_8_;
      aui_event_id81._component_w_ = ui_temp_buffer._component_y_ + ui_component;
      aui_event_id81._component_z_ = ui_stack_array._component_y_;
      aui_event_id81._component_y_ = ui_temp_buffer._component_x_ + short_value20;
      aui_event_id81._component_