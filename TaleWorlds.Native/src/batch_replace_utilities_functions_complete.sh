#!/bin/bash

# 批量替换06_utilities.c中的FUN_函数
FILE="/dev/shm/mountblade-code/TaleWorlds.Native/src/06_utilities.c"

# 创建替换映射
declare -A FUNCTION_MAP=(
    ["FUN_180045af0"]="ProcessResourceHandler"
    ["FUN_180057010"]="ExecuteSystemOperation"
    ["FUN_1800596a0"]="ProcessResourceIndex"
    ["FUN_18005a050"]="PerformSystemCleanup"
    ["FUN_18005d260"]="ProcessResourceData"
    ["FUN_18005d580"]="InitializeResourceSystem"
    ["FUN_180060bd0"]="CalculateResourceOffset"
    ["FUN_180067070"]="InitializeResourceContext"
    ["FUN_1800670d0"]="ConfigureResourceSettings"
    ["FUN_18006cb90"]="ValidateResourceIntegrity"
    ["FUN_180059ee0"]="ProcessResourceValidation"
    ["FUN_18006b760"]="ExecuteResourceOperation"
    ["FUN_18066c220"]="HandleResourceAllocation"
    ["FUN_18062b420"]="AllocateResourceMemory"
    ["FUN_18015bdc0"]="ProcessResourceCommand"
    ["FUN_18015b450"]="ReleaseResourceHandle"
    ["FUN_18015b4f0"]="CleanupResourceContext"
    ["FUN_180057830"]="UpdateResourceStatus"
    ["FUN_180048980"]="ResetResourceState"
    ["FUN_180069530"]="AccessResourceData"
    ["FUN_180074a80"]="OptimizeResourcePerformance"
    ["FUN_180080060"]="InitializeResourceCache"
    ["FUN_1800809a0"]="ConfigureResourceCache"
    ["FUN_180080870"]="ManageResourceCache"
    ["FUN_18007bb70"]="HandleResourceEvents"
    ["FUN_18007f6a0"]="ProcessResourceRequest"
    ["FUN_18007f840"]="CompleteResourceOperation"
    ["FUN_18022f390"]="FinalizeResourceProcess"
    ["FUN_180085530"]="ValidateResourceAccess"
    ["FUN_180179f00"]="CheckResourceValidation"
    ["FUN_180089640"]="ProcessResourceIndexing"
    ["FUN_18008d810"]="HandleResourceTransfer"
    ["FUN_1800ba100"]="ExecuteResourceCommand"
    ["FUN_180047e40"]="InitializeResourceBuffer"
    ["FUN_18008d1f0"]="ManageMemoryAllocation"
    ["FUN_1800a19c0"]="ProcessSystemEvent"
    ["FUN_18009fb60"]="HandleSystemConfiguration"
    ["FUN_1800ad6f0"]="InitializeSystemServices"
    ["FUN_180152b00"]="ProcessSystemCommand"
    ["FUN_18005d560"]="ExecuteSystemOperation"
    ["FUN_1800adb30"]="AccessSystemData"
    ["FUN_1800ae2c0"]="HandleSystemTransfer"
    ["FUN_1802a07c0"]="ProcessSystemRequest"
    ["FUN_1802ab7f0"]="HandleSystemEvents"
    ["FUN_1800b9030"]="ProcessSystemData"
    ["FUN_1800b9210"]="ValidateSystemOperation"
    ["FUN_1800b94f0"]="CompleteSystemProcess"
    ["FUN_1802ab380"]="FinalizeSystemOperation"
    ["FUN_1800b9270"]="ExecuteSystemCommand"
    ["FUN_1800c2ca0"]="ProcessResourceTransfer"
    ["FUN_1800c2ff0"]="HandleResourceTransfer"
    ["FUN_1800ed380"]="ConfigureSystemSettings"
    ["FUN_180057340"]="ProcessSystemOperation"
    ["FUN_1802c24b0"]="ExecuteSystemTask"
    ["FUN_1801b9690"]="HandleResourceManagement"
    ["FUN_1800e7ca0"]="ProcessResourceManagement"
    ["FUN_1800e7f20"]="HandleResourceEvents"
    ["FUN_180080df0"]="InitializeResourceSystem"
    ["FUN_180051d00"]="ProcessResourceAllocation"
    ["FUN_1800e7b80"]="HandleResourceBuffer"
    ["FUN_1800e7d00"]="ManageResourceData"
    ["FUN_1800e7c40"]="ProcessResourceOperation"
    ["FUN_1800e7be0"]="HandleResourceValidation"
)

# 执行替换
for old_name in "${!FUNCTION_MAP[@]}"; do
    new_name="${FUNCTION_MAP[$old_name]}"
    echo "替换 $old_name -> $new_name"
    sed -i "s/$old_name/$new_name/g" "$FILE"
done

echo "替换完成"