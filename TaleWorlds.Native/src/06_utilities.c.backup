#include "TaleWorlds.Native.Split.h"

// 06_utilities.c - 473 个函数

// 函数: int processBufferData(longlong bufferHandle)
// 缓冲区数据处理函数
// 缓冲区读取偏移量
data g_bufferReadOffset;
// 缓冲区写入偏移量
data g_bufferWriteOffset;
// 缓冲区当前大小
data g_bufferCurrentSize;
// 缓冲区最大允许大小
data g_bufferMaximumAllowedSize;
// 缓冲区操作标志
data g_bufferOperationFlags;
// 缓冲区数据校验和
data g_bufferDataChecksum;
// 缓冲区初始化状态标志
byte g_isBufferInitialized;
// 缓冲区总容量
data g_bufferTotalCapacity;
// 缓冲区绝对最大尺寸
data g_bufferAbsoluteMaximumSize;
// 缓冲区锁定标志
byte g_bufferIsLocked;
// 缓冲区状态标志
data g_bufferStatusFlags;
// 主缓冲区句柄
uint64 g_primaryBufferHandle;
// 辅助缓冲区句柄
uint64 g_secondaryBufferHandle;
// 缓冲区控制数据1
data g_bufferControlData1;
// 缓冲区控制数据2
data g_bufferControlData2;
// 缓冲区控制数据3
data g_bufferControlData3;
// 缓冲区控制数据4
data g_bufferControlData4;
// 缓冲区内存指针
data g_bufferMemoryPointer;

// 函数: data InitializeMemoryPool;
// 系统初始化函数180941590
data InitializeMemoryPool;
data memoryPoolBaseAddress;
data memoryPoolSize;
data memoryPoolAlignment;
data memoryPoolFlags;

// 函数: data SetupMemoryManager;
data SetupMemoryManager;
data bufferManagerControl1;
data bufferManagerControl2;
data bufferManagerControl3;
data bufferManagerControl4;
data memoryPoolInitializationFlag;

// 函数: data CreateMemoryAllocator;
data CreateMemoryAllocator;
data dataStructurePointer1;
data dataStructurePointer2;
data dataStructurePointer3;
data dataStructurePointer4;
data memoryAllocatorStatusFlag;

// 函数: data RegisterMemoryHandler;
data RegisterMemoryHandler;
data systemStatusFlag1;
data systemStatusFlag2;
data systemStatusFlag3;
data systemStatusFlag4;

// 函数: data ConfigureMemorySettings;
data ConfigureMemorySettings;
data errorHandlerState1;
data errorHandlerState2;
data errorHandlerState3;
data errorHandlerState4;

// 函数: data ValidateMemoryConfiguration;
// 内存配置验证函数180941630
data ValidateMemoryConfiguration;
byte threadSyncFlag1;

// 函数: data InitializeThreadSynchronization;
// 线程同步初始化函数180941650
data InitializeThreadSynchronization;
byte threadSyncFlag2;

// 函数: data InitializeEventHandler;
// 事件处理初始化函数180941690
data InitializeEventHandler;
byte threadSyncFlag3;

// 函数: data InitializeSemaphore;
// 信号量初始化函数1809416d0
data InitializeSemaphore;
byte g_semaphoreInitFlag;

// 函数: data CleanupThreadSynchronization;
data CleanupThreadSynchronization;
data g_threadCleanupData;
data g_threadCleanupPointer;

// 函数: data CloseSystemHandle;
data CloseSystemHandle;

// 函数: data DestroyMutex;
data DestroyMutex;
data g_mutexDestroyData;
data g_mutexDestroyPointer1;
data g_mutexDestroyPointer2;
data g_mutexDestroyTempData;
data g_mutexDestroyWorkPointer;

// 函数: data initializeDataStructure1;          # 数据结构初始化函数
data initializeDataStructure1;          # 数据结构初始化函数
data g_memoryFreeData1;
data g_memoryFreeData2;
data g_memoryFreePointer1;
data g_memoryFreePointer2;
data g_memoryFreeConfig1;
data g_memoryFreeConfig2;
data g_memoryFreeConfig3;

// 函数: data initializeDataStructure2;
data initializeDataStructure2;
data g_chunkAllocHeader;
data g_chunkAllocPointer;
data g_chunkAllocData1;
data g_chunkAllocData2;
data g_chunkAllocData3;
data g_chunkAllocData4;

// 函数: data FreeMemoryChunk;
data FreeMemoryChunk;
data g_chunkFreePointer;
data g_chunkFreeData1;
data g_chunkFreeData2;
data g_chunkFreeData3;
data g_chunkFreeData4;

// 函数: data GetMemoryChunkSize;
data GetMemoryChunkSize;
data g_chunkSizePointer;
data g_chunkSizeData1;
data g_chunkSizeData2;
data g_chunkSizeData3;
data g_chunkSizeData4;

// 函数: data initializeDataStructure5;
data initializeDataStructure5;
data aiSystemPointer;
data aiSystemHandle;
data aiBehaviorTree;
data aiNavigationMesh;
data aiPathfindingData;
data sceneManagerPointer;

// 函数: data initializeDataStructure6;
data initializeDataStructure6;
data sceneManagerHandle;
data sceneObjectPool;
data sceneLightingData;
data sceneCameraData;
data sceneRenderingState;

// 函数: data initializeResourceManager;
data initializeResourceManager;
data resourceManagerHandle;
data resourceTextureCache;
data resourceMeshBuffer;
data resourceShaderCache;
data resourceManagerPointer;

// 函数: data InitializeScriptSystem;
data InitializeScriptSystem;
data scriptSystemHandle;
data scriptVirtualMachine;
data scriptFunctionTable;
data scriptGlobalData;
data scriptSystemPointer;

// 函数: data InitializeDebugSystem;
data InitializeDebugSystem;
data debugSystemHandle;
data debugLoggerBuffer;
data debugProfilerData;
data debugBreakpoints;
data debugSystemPointer;

// 函数: data InitializePerformanceMonitor;
data InitializePerformanceMonitor;
data performanceMonitorHandle;
data performanceFrameData;
data performanceMemoryStats;
data performanceCPUMetrics;
data performanceMonitorPointer;

// 函数: data LoadConfiguration;
data LoadConfiguration;

// 函数: data InitializeConfigurationSystem;
data InitializeConfigurationSystem;
data configSystemHandle;
data configSystemPointer;
data configSettingsData;
data configWorkPointer;
data configGraphicsSettings;
data configAudioSettings;
data configInputSettings;
data configNetworkSettings;
data configPhysicsSettings;
data configAISettings;
data configRenderingSettings;
data configGameplaySettings;
data configQualitySettings;
data configControlsSettings;
data configLanguageSettings;
data configAccessibilitySettings;
data configVideoSettings;
data configDisplaySettings;
data configSoundSettings;
data configMusicSettings;
data configMultiplayerSettings;
data configSocialSettings;
data configPrivacySettings;
data configSecuritySettings;
data configModSettings;
data configCloudSettings;
data configBackupSettings;
data configUpdateSettings;
data configAdvancedSettings;
data configDeveloperSettings;
data configExperimentalSettings;
data configDebugSettings;
data configProfileSettings;
data configSaveSettings;
data configLoadSettings;
data configImportSettings;
data configExportSettings;
data configSyncSettings;
data configShareSettings;
data configPublishSettings;
data configStreamSettings;
data configRecordSettings;
data configBroadcastSettings;
data configValidationFlags;
data configSerializationBuffer;
data configDeserializationBuffer;
data configEncryptionKey;
data configDecryptionKey;
data configCompressionBuffer;
data configDecompressionBuffer;
data configChecksumData;
data configHashData;
data configSignatureData;
data configAuthenticityData;
data configIntegrityData;
data configVersionInfo;
data configMetadata;
data configAttributes;
data configProperties;
data configParameters;
data configOptions;
data configPreferences;
data configSelections;
data configChoices;
data configSettingsArray;
data configValuesArray;
data configKeysArray;
data configDataArray;
data configCacheData;
data configBufferPointer;
data configMemoryBlock;
data configStorageArea;
data configAllocationSize;
data configFreeSpace;
data configUsedSpace;
data configTotalSize;
data configAlignment;
data configPadding;
data configSystemInitialized;
data configSystemLoaded;
data configSystemValidated;
data configSystemActive;
data configSystemErrorFlag;
data configSystemWarningFlag;
data configSystemDebugFlag;
data configSystemLogLevel;
data configSystemPerformanceMode;
data configSystemMemoryUsage;
data configSystemCpuUsage;
data configSystemGpuUsage;
data configSystemDiskUsage;
data configSystemNetworkUsage;
data configSystemThreadCount;
data configSystemProcessId;
data configSystemSessionId;
data configSystemUserId;
data configSystemTimestamp;
data configSystemUptime;
data configSystemVersion;
data configSystemBuildNumber;
data configSystemPlatform;
data configSystemArchitecture;
data configSystemLocale;
data configSystemTimezone;
data configSystemLanguage;
data configSystemDateFormat;
data configSystemTimeFormat;
data configSystemNumberFormat;
data configSystemCurrencyFormat;
data configSystemMeasurementSystem;
data configSystemKeyboardLayout;
data configSystemMouseSettings;
data configSystemDisplaySettings;
data configSystemSoundSettings;
data configSystemNetworkSettings;
data configSystemSecuritySettings;
data configSystemPrivacySettings;
data configSystemAccessibilitySettings;
data configSystemBackupSettings;
data configSystemUpdateSettings;
data configSystemModSettings;
data configSystemCloudSettings;
data configSystemSocialSettings;
data systemDataTable1;
data systemDataTable2;
data systemDataTable3;
data systemDataTable4;
data systemDataTable5;
data systemDataTable6;
data systemDataTable7;
data systemDataTable8;
data systemDataTable9;
data bufferManagementControl;
data g_miscTempData3;
data bufferAllocationPointer;
data systemIsInitialized;
data systemRuntimeStatus;
data systemHasError;
data systemMemoryUsage;
data systemProcessorLoad;
data threadIsSynchronized;
data threadManagementControl;
data threadExecutionState;
data threadPriorityLevel;
data eventHandlerQueue;
data eventProcessingState;
data eventNotificationFlag;
data eventCallbackPointer;
data memoryPoolAllocationSize;
data memoryPoolFreeList;
data memoryPoolUsedBlocks;
data memoryPoolTotalBlocks;
data memoryPoolBlockSize;
data bufferReadPointer;
data bufferWritePointer;
data bufferSizeRemaining;
data bufferFlushFlag;
data bufferLockStatus;
data fileHandleTable;
data fileAccessMode;
data fileCurrentPosition;
data fileBufferSize;
data fileOperationFlag;
data networkConnectionStatus;
data networkSocketHandle;
data systemDataTable10;
data systemDataTable11;
data systemDataTable12;

// 函数: data InitializeSystemModule1;
data InitializeSystemModule1;
data systemDataTable13;
data networkSendBuffer;
data bufferDataTable4;
data bufferDataTable5;
data bufferDataTable6;
data bufferDataTable7;

// 函数: data InitializeSystemModule2;
data InitializeSystemModule2;
data networkReceiveBuffer;
data systemDataTable14;
data systemDataTable15;
data systemDataTable16;
data systemDataTable17;

// 函数: data InitializeSystemModule3;
data InitializeSystemModule3;
data networkPacketSize;
data threadSyncData2;
data threadSyncData3;
data threadSyncData4;
data threadSyncData5;
data eventData9;
data eventData10;
data systemDataTable18;
data memoryData1;
data fileData4;
data fileData5;
data fileData6;
data fileData7;
data systemDataTable19;
data renderData1;
data systemDataTable20;
data renderData2;
data systemConfigData6;
data systemConfigData7;
data systemConfigData8;
data systemConfigData9;
data renderData14;
data renderData15;
data renderData16;
data renderData17;
data deviceConfigData1;
data deviceConfigData2;
data deviceConfigData3;
data deviceConfigData4;
data inputData1;
data inputData2;
data inputData3;
data inputData4;
data audioData1;
data audioData2;
data audioData3;
data audioData4;
data physicsData1;
data physicsData2;
data physicsData3;
data physicsData4;
data resourceManagerConfig1;  /* 原: g_meshTempData1 */;
data resourceManagerConfig2;  /* 原: g_meshTempData2 */;
data resourceManagerConfig3;  /* 原: g_meshTempData3 */;
data resourceManagerConfig4;  /* 原: g_meshTempData4 */;
data sceneManagerConfig1;  /* 原: g_shaderTempData1 */;
data sceneManagerConfig2;  /* 原: g_shaderTempData2 */;
data sceneManagerConfig3;  /* 原: g_shaderTempData3 */;
data sceneManagerConfig4;  /* 原: g_shaderTempData4 */;
data materialSystemConfig1;  /* 原: g_shaderTempData5 */;
data materialSystemConfig2;  /* 原: g_shaderTempData6 */;
data materialSystemConfig3;  /* 原: g_shaderTempData7 */;
data materialSystemConfig4;  /* 原: g_shaderTempData8 */;
data textureSystemConfig1;  /* 原: g_shaderTempData9 */;
data textureSystemConfig2;  /* 原: g_shaderTempData10 */;
data textureSystemConfig3;  /* 原: g_shaderTempData11 */;
data textureSystemConfig4;  /* 原: g_shaderTempData12 */;
data meshSystemConfig1;  /* 原: g_computeShaderTempData1 */;
data meshSystemConfig2;  /* 原: g_computeShaderTempData2 */;
data meshSystemConfig3;  /* 原: g_computeShaderTempData3 */;
data meshSystemConfig4;  /* 原: g_computeShaderTempData4 */;
data animationData1;
data animationData2;
data animationData3;
data animationData4;
data renderPipelineState;
data renderFrameBuffer;
data renderDepthBuffer;
data renderStencilBuffer;
data renderTextureAtlas;
data audioDeviceHandle;
data audioStreamBuffer;
data audioSampleRate;
data audioChannelCount;
data audioVolumeLevel;
data inputDeviceState;
data inputKeyMapping;
data inputMousePosition;
data inputButtonState;
data inputScrollDelta;
data physicsWorldHandle;
data physicsGravityVector;
data g_physicsTempData1;
data physicsCollisionMatrix;
data g_physicsTempData2;
data physicsRaycastResult;
data gameData1;
data gameData2;
data gameData3;
data gameData4;
data gameData5;
data gameData6;
data g_frameBufferTempData7;
data g_frameBufferTempData8;
data g_renderPipelineTempData1;
data g_renderPipelineTempData2;
data g_renderPipelineTempData3;
data g_renderPipelineTempData4;
data g_renderPipelineTempData5;
data g_renderPipelineTempData6;
data g_renderPipelineTempData7;
data g_renderPipelineTempData8;
data g_materialRenderStateTempData1;
data g_materialRenderStateTempData2;
data g_materialRenderStateTempData3;
data g_materialRenderStateTempData4;
data g_textureUploadTempData1;
data g_textureUploadTempData2;
data g_textureUploadTempData3;
data g_textureUploadTempData4;
data g_textureCompressionTempData1;
data g_textureCompressionTempData2;
data g_textureCompressionTempData3;
data g_textureCompressionTempData4;
data g_textureFilterTempData1;
data g_textureFilterTempData2;
data g_textureFilterTempData3;
data g_textureFilterTempData4;
data g_textureWrapTempData1;
data g_textureWrapTempData2;
data g_textureWrapTempData3;
data g_textureWrapTempData4;
data g_meshVertexTempData1;
data g_meshVertexTempData2;
data g_meshVertexTempData3;
data g_meshVertexTempData4;
data g_meshIndexTempData1;
data g_meshIndexTempData2;
data g_meshIndexTempData3;
data g_meshIndexTempData4;
data g_meshLayoutTempData1;
data g_meshLayoutTempData2;
data g_meshLayoutTempData3;
data g_meshLayoutTempData4;
data g_meshBoundingBoxTempData1;
data g_meshBoundingBoxTempData2;
data g_meshBoundingBoxTempData3;
data g_meshBoundingBoxTempData4;
data g_meshCollisionTempData1;
data g_meshCollisionTempData2;
data g_meshCollisionTempData3;
data g_meshCollisionTempData4;
data g_shaderCompileTempData1;
data g_shaderCompileTempData2;
data g_shaderCompileTempData3;
data g_shaderCompileTempData4;
data g_shaderProgramTempData1;
data g_shaderProgramTempData2;
data g_shaderProgramTempData3;
data g_shaderProgramTempData4;
data g_shaderUniformTempData1;
data g_shaderUniformTempData2;
data g_shaderUniformTempData3;
data g_shaderUniformTempData4;
data g_shaderAttributeTempData1;
data g_shaderAttributeTempData2;
data g_shaderAttributeTempData3;
data g_shaderAttributeTempData4;
data g_shaderConstantTempData1;
data g_shaderConstantTempData2;
data g_shaderConstantTempData3;
data g_shaderConstantTempData4;
data g_renderPassTempData1;
data g_renderPassTempData2;
data g_renderPassTempData3;
data g_renderPassTempData4;
data g_renderTargetTempData1;
data g_renderTargetTempData2;
data g_renderTargetTempData3;
data g_renderTargetTempData4;
data g_renderDescriptorTempData1;
data g_renderDescriptorTempData2;
data g_renderDescriptorTempData3;
data g_renderDescriptorTempData4;
data g_renderCommandTempData1;
data g_renderCommandTempData2;
data g_renderCommandTempData3;
data g_renderCommandTempData4;
data g_renderStateTempData1;
data g_renderStateTempData2;
data g_renderStateTempData3;
data g_renderStateTempData4;
data g_renderQueueTempData1;
data g_renderQueueTempData2;
data g_renderQueueTempData3;
data g_renderQueueTempData4;
data g_renderBufferTempData1;
data g_renderBufferTempData2;
data g_renderBufferTempData3;
data g_renderBufferTempData4;
data g_renderSyncTempData1;
data g_renderSyncTempData2;
data g_renderSyncTempData3;
data g_renderSyncTempData4;
data g_renderMemoryTempData1;
data g_renderMemoryTempData2;
data g_renderMemoryTempData3;
data g_renderMemoryTempData4;
data g_renderResourceTempData1;
data g_renderResourceTempData2;
data g_renderResourceTempData3;
data g_renderResourceTempData4;
data g_renderTextureTempData1;
data g_renderTextureTempData2;
data g_renderTextureTempData3;
data g_renderTextureTempData4;
data g_renderSamplerTempData1;
data g_renderSamplerTempData2;
data g_renderSamplerTempData3;
data g_renderSamplerTempData4;
data g_renderBlendTempData1;
data g_renderBlendTempData2;
data g_renderBlendTempData3;
data g_renderBlendTempData4;
data animationSystemState;
data g_aiTempData1;
data animationClipData;
data g_aiTempData2;
data animationBlendTree;
data g_aiTempData3;
data animationStateMachine;
data g_aiTempData4;
data g_aiTempData5;
data g_aiTempData6;
data animationPlaybackTime;
data g_aiTempData7;
data aiNavigationMesh;
data g_aiNavigationTempData1;
data g_aiNavigationTempData2;
data g_aiNavigationTempData3;
data g_aiNavigationTempData4;

// 函数: data InitializeDatabaseConnection;
data InitializeDatabaseConnection;
data g_databaseTempData1;
data g_databaseTempData2;
data g_databaseTempData3;
data g_databaseTempData4;

// 函数: data SetupDatabaseTables;
data SetupDatabaseTables;
data g_aiBehaviorTempData1;
data g_aiBehaviorTempData2;
data g_aiBehaviorTempData3;
data g_aiBehaviorTempData4;
data g_aiBehaviorTempData5;
data aiBehaviorTree;
data g_aiDecisionTempData1;
data aiPathfindingData;
data g_aiDecisionTempData2;
data aiDecisionMaking;
data g_aiDecisionTempData3;
data aiStateVariables;
data g_aiDecisionTempData4;
data resourceLoadingQueue;
data g_resourceTempData1;
data resourceCacheManager;
data g_resourceTempData2;
data resourceMemoryPool;
data g_resourceTempData3;
data referenceCountTable;
data g_resourceTempData4;
data resourceGarbageCollector;
data g_resourceTempData5;
data sceneObjectDatabase;
data g_resourceTempData6;
data sceneTransformData;
data g_sceneTempData1;
data g_sceneTempData2;
data g_sceneTempData3;
data g_sceneTempData4;
data sceneLightingSystem;

// 函数: data CreateFileSystemHandler;
data CreateFileSystemHandler;
data g_fileSystemTempData1;
data g_fileSystemTempData2;
data g_fileSystemTempData3;
data g_fileSystemTempData4;
data sceneCameraController;

// 函数: data InitializeFileCache;
data InitializeFileCache;

// 函数: data SetupFileWatcher;
data SetupFileWatcher;
data g_fileCacheTempData1;
data g_fileCacheTempData2;
data g_fileCacheTempData3;
data g_fileCacheTempData4;
data sceneRenderQueue;
data g_sceneRenderTempData1;

// 函数: data materialShaderProgramInitialize;
data materialShaderProgramInitialize;
data g_materialShaderTempData1;
data g_materialShaderTempData2;
data g_materialShaderTempData3;
data materialShaderProgram;
data g_materialTextureTempData1;
data g_materialTextureTempData2;

// 函数: data materialTextureSamplerInitialize;
data materialTextureSamplerInitialize;
data DAT_180bf9340;
data DAT_180bf9348;
data materialTextureSampler;
data g_materialTextureTempData3;
data g_materialTextureTempData4;
data g_materialTextureTempData5;

// 函数: data materialPropertyBufferInitialize;
data materialPropertyBufferInitialize;
data g_materialPropertyTempData1;
data materialPropertyBuffer;
data g_materialPropertyTempData2;
data g_materialPropertyTempData3;
data g_materialPropertyTempData4;
data g_materialPropertyTempData5;

// 函数: data materialRenderStateInitialize;
data materialRenderStateInitialize;
data materialRenderState;
data g_materialRenderStateTempData5;
data g_materialRenderStateTempData6;
data g_materialRenderStateTempData7;
data g_materialRenderStateTempData8;

// 函数: data materialUniformDataInitialize;
data materialUniformDataInitialize;
data materialUniformData;
data g_materialUniformTempData5;
data g_materialUniformTempData6;
data g_materialUniformTempData7;
data g_materialUniformTempData8;

// 函数: data textureUploadBufferInitialize;
data textureUploadBufferInitialize;
data textureUploadBuffer;
data g_textureUploadTempData5;
data g_textureUploadTempData6;
data g_textureUploadTempData7;
data g_textureUploadTempData8;
data textureMipChainData;

// 函数: data textureMipChainInitialize;
data textureMipChainInitialize;
data g_textureMipTempData1;
data g_textureMipTempData2;
data g_textureMipTempData3;
data g_textureMipTempData4;
data textureCompressionFlag;

// 函数: data textureCompressionInitialize;
data textureCompressionInitialize;
data g_textureCompressionTempData5;
data g_textureCompressionTempData6;
data g_textureCompressionTempData7;
data g_textureCompressionTempData8;
data textureFilteringMode;

// 函数: data textureFilteringInitialize;
data textureFilteringInitialize;
data g_textureFilterTempData5;
data g_textureFilterTempData6;
data g_textureFilterTempData7;
data g_textureFilterTempData8;
data textureWrappingMode;

// 函数: data textureWrappingInitialize;
data textureWrappingInitialize;
data g_textureWrapTempData5;
data g_textureWrapTempData6;
data g_textureWrapTempData7;
data g_textureWrapTempData8;
data g_miscTempData1;

// 函数: data meshVertexBufferInitialize;
data meshVertexBufferInitialize;
data DAT_180bf96f0;
data DAT_180bf96f8;
data DAT_180bf9700;
data DAT_180bf9708;
data meshVertexBuffer;

// 函数: data meshIndexBufferInitialize;
data meshIndexBufferInitialize;
data DAT_180bf9750;
data DAT_180bf9758;
data DAT_180bf9760;
data DAT_180bf9768;
data meshIndexBuffer;

// 函数: data meshVertexLayoutInitialize;
data meshVertexLayoutInitialize;
data DAT_180bf97b0;
data DAT_180bf97b8;
data DAT_180bf97c0;
data DAT_180bf97c8;
data meshVertexLayout;

// 函数: data meshBoundingBoxInitialize;
data meshBoundingBoxInitialize;
data DAT_180bf9810;
data DAT_180bf9818;
data DAT_180bf9820;
data DAT_180bf9828;
data meshBoundingBox;

// 函数: data meshCollisionInitialize;
data meshCollisionInitialize;

// 函数: data meshDataProcess;
data meshDataProcess;
data DAT_180bf9870;
data DAT_180bf9878;
data DAT_180bf9880;
data DAT_180bf9888;
data meshCollisionData;
data DAT_180bf98d0;

// 函数: data shaderCompileInitialize;
data shaderCompileInitialize;
data DAT_180bf98d8;
data DAT_180bf98e0;
data DAT_180bf98e8;
data shaderCompileStatus;
data DAT_180bf9930;
data DAT_180bf9938;

// 函数: data shaderProgramInitialize;
data shaderProgramInitialize;
data DAT_180bf9940;
data DAT_180bf9948;
data shaderProgramHandle;
data DAT_180bf9990;
data DAT_180bf9998;
data DAT_180bf99a0;

// 函数: data shaderUniformBufferInitialize;
data shaderUniformBufferInitialize;
data DAT_180bf99a8;
data shaderUniformBuffer;
data DAT_180bf99f0;
data DAT_180bf99f8;
data DAT_180bf9a00;
data DAT_180bf9a08;

// 函数: data shaderAttributeTableInitialize;
data shaderAttributeTableInitialize;
data shaderAttributeTable;
data DAT_180bf9a50;
data DAT_180bf9a58;
data DAT_180bf9a60;
data DAT_180bf9a68;

// 函数: data shaderConstantDataInitialize;
data shaderConstantDataInitialize;
data shaderConstantData;
data DAT_180bf9ab0;
data DAT_180bf9ab8;
data DAT_180bf9ac0;
data DAT_180bf9ac8;

// 函数: data renderPassDescriptorInitialize;
data renderPassDescriptorInitialize;
data g_miscTempData2;
data DAT_180bf9b10;
data DAT_180bf9b18;
data DAT_180bf9b20;
data DAT_180bf9b28;
data renderPassDescriptor;

// 函数: data renderPipelineInitialize;
data renderPipelineInitialize;
data DAT_180bf9b70;
data DAT_180bf9b78;
data DAT_180bf9b80;
data DAT_180bf9b88;
data renderCommandBuffer;

// 函数: data renderTargetInitialize;
data renderTargetInitialize;
data DAT_180bf9bd0;
data DAT_180bf9bd8;
data DAT_180bf9be0;
data DAT_180bf9be8;
data renderDrawCallData;

// 函数: data renderDescriptorInitialize;
data renderDescriptorInitialize;
data DAT_180bf9c30;
data DAT_180bf9c38;
data DAT_180bf9c40;
data DAT_180bf9c48;
data renderViewportState;

// 函数: data renderCommandInitialize;
data renderCommandInitialize;
data DAT_180bf9c90;
data DAT_180bf9c98;
data DAT_180bf9ca0;
data DAT_180bf9ca8;
data renderScissorRect;

// 函数: data renderStateInitialize;
data renderStateInitialize;
data DAT_180bf9cf0;
data DAT_180bf9cf8;
data DAT_180bf9d00;
data DAT_180bf9d08;
data framebufferColorAttachment;

// 函数: data renderQueueInitialize;
data renderQueueInitialize;
data DAT_180bf9d50;
data DAT_180bf9d58;
data DAT_180bf9d60;
data DAT_180bf9d68;
data framebufferDepthAttachment;

// 函数: data renderBufferInitialize;
data renderBufferInitialize;
data DAT_180bf9db0;
data DAT_180bf9db8;
data DAT_180bf9dc0;
data DAT_180bf9dc8;
data framebufferStencilAttachment;

// 函数: data renderSyncInitialize;
data renderSyncInitialize;
data DAT_180bf9e10;
data DAT_180bf9e18;
data DAT_180bf9e20;
data DAT_180bf9e28;
data framebufferResolveTarget;

// 函数: data renderMemoryInitialize;
data renderMemoryInitialize;

// 函数: data renderResourceInitialize;
data renderResourceInitialize;
data DAT_180bf9e70;
data DAT_180bf9e78;
data DAT_180bf9e80;
data DAT_180bf9e88;
data framebufferClearColor;
data DAT_180bf9ed0;

// 函数: data renderTextureInitialize;
data renderTextureInitialize;
data DAT_180bf9ed8;
data DAT_180bf9ee0;
data DAT_180bf9ee8;
data computeShaderKernel;
data DAT_180bf9f30;
data DAT_180bf9f38;

// 函数: data renderSamplerInitialize;
data renderSamplerInitialize;
data DAT_180bf9f40;
data DAT_180bf9f48;
data computeWorkGroupSize;
data DAT_180bf9f90;
data DAT_180bf9f98;
data DAT_180bf9fa0;

// 函数: data renderBlendInitialize;
data renderBlendInitialize;
data DAT_180bf9fa8;
data computeDispatchCount;
data DAT_180bf9ff0;
data DAT_180bf9ff8;
data DAT_180bfa000;
data DAT_180bfa008;

// 函数: data renderDepthInitialize;
data renderDepthInitialize;
data computeSharedMemory;
data DAT_180bfa050;
data DAT_180bfa058;
data DAT_180bfa060;
data DAT_180bfa068;

// 函数: data renderStencilInitialize;
data renderStencilInitialize;
data computeBarrierFlag;
data DAT_180bfa0b0;
data DAT_180bfa0b8;
data DAT_180bfa0c0;
data DAT_180bfa0c8;

// 函数: data renderViewportInitialize;
data renderViewportInitialize;
data geometryInputAssembler;
data DAT_180bfa110;
data DAT_180bfa118;
data DAT_180bfa120;
data DAT_180bfa128;
data geometryTessellator;

// 函数: data renderScissorInitialize;
data renderScissorInitialize;
data DAT_180bfa170;
data DAT_180bfa178;
data DAT_180bfa180;
data DAT_180bfa188;
data geometryPrimitiveType;

// 函数: data renderClearInitialize;
data renderClearInitialize;
data DAT_180bfa1d0;
data DAT_180bfa1d8;
data DAT_180bfa1e0;
data DAT_180bfa1e8;
data DAT_180a22fd0;

// 函数: data renderDrawInitialize;
data renderDrawInitialize;
data DAT_180bfa230;
data DAT_180bfa238;
data DAT_180bfa240;
data DAT_180bfa248;
data DAT_180a22fa8;

// 函数: data renderDispatchInitialize;
data renderDispatchInitialize;
data DAT_180bfa290;
data DAT_180bfa298;
data DAT_180bfa2a0;
data DAT_180bfa2a8;
data geometryVertexCount;

// 函数: data resourceAcquireHandle;
data resourceAcquireHandle;

// 函数: data updateRenderState;
data updateRenderState;

// 函数: data resourceReleaseHandle;
data resourceReleaseHandle;

// 函数: data resourceAllocateMemory;
data resourceAllocateMemory;

// 函数: data resourceDeallocateMemory;
data resourceDeallocateMemory;
data DAT_180c91f6c;
data geometryIndexCount;
data DAT_180c91fcc;
data particleEmitterData;
data DAT_180bfa350;
data DAT_180bfa358;
data DAT_180bfa360;
data DAT_180bfa368;
data particleEmissionRate;  /* 原: DAT_180bfa3e8 */
data particleSpawnPosition;  /* 原: DAT_180bfa3f0 */
data particleSpawnDirection;  /* 原: DAT_180bfa3f8 */
data particleSpawnColor;  /* 原: DAT_180bfa400 */
data particleSizeRange;  /* 原: DAT_180bfa480 */
data particleLifeRange;  /* 原: DAT_180bfa488 */
data particleSpeedRange;  /* 原: DAT_180bfa490 */
data particleRotationRange;  /* 原: DAT_180bfa498 */
data particleGravity;  /* 原: DAT_180bfa518 */
data particleWindEffect;  /* 原: DAT_180bfa520 */
data particleTurbulence;  /* 原: DAT_180bfa528 */
data particleCollisionData;  /* 原: DAT_180bfa530 */
data particleTextureData;  /* 原: DAT_180bfa5b0 */
data particleShaderData;  /* 原: DAT_180bfa5b8 */
data particleBlendMode;  /* 原: DAT_180bfa5c0 */
data particleDepthTest;  /* 原: DAT_180bfa5c8 */
data particleSortMode;  /* 原: DAT_180bfa648 */
data particleCullingData;  /* 原: DAT_180bfa650 */
data particleLodData;  /* 原: DAT_180bfa658 */
data particleBatchData;  /* 原: DAT_180bfa660 */
data postProcessExposure;  /* 原: DAT_180bfa6e0 */
data postProcessContrast;  /* 原: DAT_180bfa6e8 */
data postProcessSaturation;  /* 原: DAT_180bfa6f0 */
data postProcessBrightness;  /* 原: DAT_180bfa6f8 */
data particleSimulationData;
data particleRenderData;
data particleLifetimeData;
data particleVelocityData;
data postProcessChain;
data postProcessSettings;
data postProcessBuffer;
data postProcessUniforms;
data postProcessBloom;  /* 原: DAT_180bfa780 */
data postProcessVignette;  /* 原: DAT_180bfa788 */
data postProcessDepthOfField;  /* 原: DAT_180bfa790 */
data postProcessMotionBlur;  /* 原: DAT_180bfa798 */
data postProcessAmbientOcclusion;  /* 原: DAT_180bfa818 */
data postProcessScreenReflection;  /* 原: DAT_180bfa820 */
data postProcessAntiAliasing;  /* 原: DAT_180bfa828 */
data postProcessColorGrading;  /* 原: DAT_180bfa830 */
data postProcessLensFlare;  /* 原: DAT_180bfa8b0 */
data postProcessLensDistortion;  /* 原: DAT_180bfa8b8 */
data postProcessChromaticAberration;  /* 原: DAT_180bfa8c0 */
data postProcessFilmGrain;  /* 原: DAT_180bfa8c8 */
data postProcessSharpen;  /* 原: DAT_180bfa948 */
data postProcessBlur;  /* 原: DAT_180bfa950 */
data postProcessNoise;  /* 原: DAT_180bfa958 */
data postProcessGamma;  /* 原: DAT_180bfa960 */
data renderTargetWidth;  /* 原: DAT_180bfa9e0 */
data renderTargetHeight;  /* 原: DAT_180bfa9e8 */
data DAT_180bfa9f0;
data DAT_180bfa9f8;
data DAT_180bfaa78;
data DAT_180bfaa80;
data DAT_180bfaa88;
data DAT_180bfaa90;
data memoryAllocatorStatusFlag;
data lightingShadowMap;
data lightingProbeData;
data lightingIBLData;
data lightingCascadeData;
data shadowMapAtlas;
data shadowCascadeData;
data DAT_180bfab10;
data DAT_180bfab18;
data DAT_180bfab20;
data DAT_180bfab28;
data DAT_180bfaba8;
data DAT_180bfabb0;
data DAT_180bfabb8;
data DAT_180bfabc0;
data DAT_180bfac40;
data DAT_180bfac48;
data DAT_180bfac50;
data DAT_180bfac58;
data DAT_180bfacd8;
data DAT_180bface0;
data DAT_180bface8;
data DAT_180bfacf0;
data DAT_180bfad70;
data DAT_180bfad78;
data DAT_180bfad80;
data DAT_180bfad88;
data DAT_180bfae08;
data DAT_180bfae10;
data DAT_180bfae18;
data DAT_180bfae20;
data threadSynchronizationFlag;
data shadowBiasData;
data shadowProjectionMatrix;

// 函数: data resourceLoadFromDisk;
data resourceLoadFromDisk;
data DAT_180bfc150;
byte DAT_180bfc140;
data DAT_180bfc160;
data DAT_180bfc168;
uint64 reflectionCubeMap;
data DAT_180bfaec0;
data DAT_180bfaec8;
data DAT_180bfaed0;
data DAT_180bfaed8;

// 函数: data resourceDecompressData;
data resourceDecompressData;
data DAT_180bfaee0;
data DAT_180bfaee8;
data DAT_180c92050;
data DAT_180c92058;
data DAT_180c92060;
data DAT_180c92068;

// 函数: data resourceEncryptData;
data resourceEncryptData;
data DAT_180bfaef0;
data DAT_180bfaef8;
data DAT_180bfaf00;
data DAT_180bfaf08;

// 函数: data resourceDecryptData;
data resourceDecryptData;
data reflectionMipChain;
data DAT_180bfb310;
data DAT_180bfb318;
data DAT_180bfb320;
data DAT_180bfb328;
data renderOcclusionQuery;

// 函数: data resourceSignData;
data resourceSignData;
data DAT_180bfb730;
data DAT_180bfb738;
data DAT_180bfb740;
data DAT_180bfb748;
data renderBatchData;

// 函数: data resourceVerifySignature;
data resourceVerifySignature;
data DAT_180c9246c;
data renderInstanceData;

// 函数: data resourceCreateBackup;
data resourceCreateBackup;
data DAT_180c92490;

// 函数: data resourceOptimizeStorage;
data resourceOptimizeStorage;
data DAT_180c92480;

// 函数: data resourceUpdateReferences;
data resourceUpdateReferences;

// 函数: data resourceCacheEvict;
data resourceCacheEvict;

// 函数: data resourceCachePrefetch;
data resourceCachePrefetch;
data DAT_180c924ac;
data renderLODData;
data DAT_180c924b0;
data DAT_180a2c1d0;
data DAT_180c924b4;
data DAT_180a2c338;
data DAT_180c924b8;
data DAT_180a2c510;
data DAT_180bf6048;
data DAT_180bf6050;
data DAT_180bf6058;
data DAT_180bf6060;

// 函数: data resourceCacheInvalidate;
data resourceCacheInvalidate;
data DAT_180bf6498;
data DAT_180bf64a0;
data DAT_180bf64a8;
data DAT_180bf64b0;

// 函数: data resourceCacheUpdate;
data resourceCacheUpdate;
data DAT_180a2d660;
data renderCullingData;
data DAT_180a2d590;
data renderFrustumData;
data DAT_180c96310;
data DAT_180c96320;
data DAT_180c96328;

// 函数: data resourceMonitorActivity;
data resourceMonitorActivity;
data DAT_180bf6558;
data DAT_180bf6560;
data DAT_180bf6568;
data DAT_180bf6570;

// 函数: data resourceManageLifecycle;
data resourceManageLifecycle;
data DAT_180c95ecc;
data memoryAllocatorHeap;

// 函数: data resourceOptimizePerformance;
data resourceOptimizePerformance;
data DAT_180c9606c;
data memoryPoolManager;
data DAT_180c96218;
data eventHandlerState;

// 函数: data resourceReportStatus;
data resourceReportStatus;

// 函数: data resourceGenerateReport;
data resourceGenerateReport;
data DAT_180c96790;
data DAT_180c96798;

// 函数: data resourceBatchOperation;
data resourceBatchOperation;
data DAT_180c967a0;
data DAT_180c967a8;
data DAT_180c967b0;
data DAT_180c967b8;
data DAT_180c967d0;
data memoryTrackingTable;
data threadLocalStorageCleanup;

// 函数: data InitializeThreadLocalStorage;
data InitializeThreadLocalStorage;
data _tls_index;
void *tlsPointer;
data DAT_180c967d4;
data memoryDebugInfo;
data DAT_180c967d8;
data memoryLeakDetector;
data systemCallData;
data DAT_180c967e8;
data DAT_180c967f0;
data DAT_180c967f8;

// 函数: data CleanupThreadResources;
data CleanupThreadResources;
data DAT_180c96800;
data DAT_180c96808;
data DAT_180c0c6c0;
data DAT_180be14a0;
data DAT_180be1324;
data semaphoreInitState;
data semaphoreControlFlag;
data DAT_180c0c6d0;
data DAT_180c0c6d8;
data DAT_180c0d100;
data DAT_180c0e170;
data DAT_180c108d0;
data DAT_180c2bca0;
data DAT_180c31148;
data mutexInitializationFlag;
data bufferManagerState;
data DAT_180c4ea58;
data DAT_180c4ea60;
data bufferPoolAddress;
data bufferPoolSize;
byte DAT_180c82841;
byte DAT_180c82840;
data DAT_180c82864;
data DAT_180c91048;
data DAT_180c8ed18;
data DAT_180c86948;
data DAT_180c86870;
data DAT_180c82868;
data bufferControlData1;
data bufferControlData2;
data bufferControlData3;
data threadSyncObject;
data threadContextData;
data DAT_180bf00a8;
data DAT_180c86928;
data systemStatusFlag1;
data systemStatusFlag2;
data systemStatusFlag3;
data fileMetadataTable;
data fileDirectoryTree;
data systemStatusFlag4;
data fileAccessTable;
data DAT_180c8ed10;
data networkConnectionPool;
data networkPacketQueue;
data DAT_180c8ed08;
data DAT_180c8ed68;
data DAT_180c8ed00;
data DAT_180c8ed50;
char DAT_180bf0102;
data DAT_180c8ed58;
data DAT_180c8ed48;
data DAT_180c8ed40;
data DAT_180c86940;
data threadManagerState;
data threadControlFlag1;
data threadControlFlag2;
data threadControlFlag3;
data threadControlFlag4;
data threadControlFlag5;
data DAT_180c82854;
data allocatorState;
char DAT_180c82860;
data allocatorControlFlag;
data DAT_180c86920;
void *ExceptionList;
data databaseSchemaData;
data allocatorMemoryPool;
data DAT_180c86960;
data DAT_180bf52b8;
data DAT_180bf52bc;
data DAT_180bf5248;
data DAT_180c8ed60;
data encryptionKeyData;
data encryptionAlgorithm;
data allocatorHeapBase;
data allocatorHeapSize;
data allocatorHeapFlags;
data DAT_1809fc7ec;
data DAT_180bf5240;

// 函数: data systemInitializeCore;
data systemInitializeCore;
data DAT_180d49160;
data DAT_180d49168;
data DAT_180d49170;
data DAT_180d49178;
data eventQueueState;
data DAT_180a001d0;
data compressionBuffer;
data compressionLevel;
data compressionAlgorithm;
data compressionStream;

// 函数: data systemInitializeModules;
data systemInitializeModules;
data serializationBuffer;
data serializationContext;
data serializationTypeData;

// 函数: data systemInitializeServices;
data systemInitializeServices;
data serializationObjectPool;
data serializationReferenceTable;
data uiLayoutData;
data uiStyleData;
data DAT_180a01440;
data DAT_180d48d38;
data uiWidgetTree;
data eventHandlerTable;
data uiAnimationData;
data uiThemeData;
data DAT_180d48d30;
data *PTR_?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A_180944718;
data inputDeviceManager;
data inputMappingTable;
data inputStateBuffer;
data inputEventQueue;
data inputBindingData;
data inputConfigData;
data audioDeviceManager;
data audioStreamData;
data audioBufferPool;
data audioCodecData;
data audioEffectChain;
data audioMixerData;
data videoDecoderData;

// 函数: data systemInitializePlugins;
data systemInitializePlugins;
data DAT_180d49238;
data DAT_180d49250;
data DAT_180d49248;
data DAT_180d49240;
data DAT_180d49258;
data DAT_180d4925c;
data videoStreamBuffer;

// 函数: data systemInitializeExtensions;
data systemInitializeExtensions;
data videoFrameData;
data videoCodecContext;
data videoPlaybackData;
data videoSyncData;
data cameraDeviceData;
data cameraFrameBuffer;
data cameraSettingsData;
data unknown_1801527b4;
data cameraStreamData;
data cameraFormatData;
longlong unknown_180c961a8;
uint unknown_180d48d44;
double unknown_180d48d48;
double unknown_180d48d50;
int unknown_180d49260;
double unknown_180d49268;
data unknown_180a073d8;
data unknown_180a073b8;
data unknown_180155fc0;
data unknown_180155fe0;
data unknown_180156000;
data unknown_180156020;
data unknown_180156040;
data unknown_180156060;
data unknown_180156080;
data unknown_1801560a0;
data unknown_1801560c0;
data unknown_1801560e0;
data unknown_180156100;
data unknown_180156120;
data unknown_180156140;
data unknown_180156160;
data unknown_180156180;
data unknown_1801561a0;
data unknown_1801561c0;
data unknown_1801561e0;
data unknown_180156200;
data unknown_180156220;
data unknown_180156240;
data unknown_180156260;
data unknown_180156280;
data unknown_1801562a0;
data unknown_1801562c0;
data unknown_1801562e0;
data unknown_180a073f0;
data unknown_180a07400;
data unknown_180a07420;
data unknown_180a07438;
data unknown_180a07450;
data unknown_180a07470;
data unknown_180a07490;
data unknown_180a074b8;
data unknown_180a074d8;
data unknown_180a074f8;
data unknown_180a07518;
data unknown_180a07530;
data unknown_180a07548;
data unknown_180a07568;
data unknown_180a07580;
data unknown_180a075a0;
data unknown_180a075b0;
data unknown_180a075d0;
data unknown_180a075f0;
data unknown_180a07610;
data unknown_180a07628;
data unknown_180a07640;
data unknown_180a07650;
data unknown_180a07668;
data unknown_180a07688;
data unknown_180a076a0;
data unknown_180a076c0;
data unknown_180a076d8;
data unknown_180a076f8;
data unknown_180a07720;
data unknown_180a07748;
data unknown_180a07760;
data unknown_180a07cd0;
data unknown_180a1afb8;
data unknown_180a079c0;
data unknown_180a07b48;
data unknown_180a3c313;
data eventCallbackTable;
data unknown_180a078fc;
data unknown_180a07804;
data eventDispatchTable;
data unknown_18015c090;

// 函数: data systemInitializeComponents;
data systemInitializeComponents;
data DAT_180d49648;
data DAT_180d49640;
data DAT_180d49650;
data unknown_180a0b650;
data DAT_180d49638;
data unknown_180a0c258;
data unknown_1801bc7a0;
data unknown_1801bc7e0;
data unknown_180a0b640;
data unknown_180a0b660;
data unknown_180a0b670;
data unknown_1801bc6b0;
data unknown_180a0b680;
data unknown_180a0b690;

// 函数: data systemInitializeSubsystems;
data systemInitializeSubsystems;
data unknown_180bd8a60;
data unknown_180a185f0;
data unknown_180a18618;
data unknown_180a18630;
data unknown_180a18860;
data unknown_180a18888;
data DAT_180a06b58;
data unknown_180a18870;
data unknown_180a18898;
data unknown_180a06b98;
data unknown_180a18880;
data unknown_180a188a8;
data unknown_180a188c0;
data unknown_180a188d8;
data unknown_180a188e0;
data unknown_180a188f8;
data unknown_180a18908;
data unknown_180a18918;
data unknown_180a1892c;
data unknown_180a18938;
data unknown_180a18980;
data unknown_180a18998;
data unknown_180a18968;
data unknown_180a189b8;
data DAT_180c96830;
data unknown_180a189f8;
data unknown_180a18a98;
data unknown_180a18aa8;
data unknown_180a18ab8;
data unknown_180a18ad0;
data unknown_180a18ae8;
data unknown_180a18af8;
data unknown_180a18b10;
data sensorDeviceData;
data sensorReadingBuffer;
data sensorCalibrationData;
data sensorConfiguration;
data sensorFilterData;
data sensorEventQueue;
data gpsLocationData;
data gpsSatelliteData;
data gpsAccuracyData;
data gpsTimeData;
data gpsVelocityData;
data gpsHeadingData;
data gyroscopeData;
data gyroscopeCalibration;
data gyroscopeTemperature;
data gyroscopeBiasData;
data gyroscopeNoiseData;
data gyroscopeDriftData;
data accelerometerData;
data accelerometerCalibration;
data accelerometerGravity;
data accelerometerMotion;
data accelerometerOrientation;

// 函数: data systemInitializeWorkers;
data systemInitializeWorkers;
data gameEngineCore;
data gameEngineState;
data gameEngineConfig;
data gameEngineTimer;
data gameEngineStats;
data gameEngineProfile;
data entityComponentSystem;

// 函数: data systemInitializePools;
data systemInitializePools;
data DAT_180d497d0;

// 函数: data systemInitializeQueues;
data systemInitializeQueues;
data DAT_180d49990;
data DAT_180d48de0;
data DAT_180d48de8;
data DAT_180d48df0;
data DAT_180d48df8;
data DAT_180d48e00;
data DAT_180d48e08;
data DAT_180c918d8;
data DAT_180d48e10;
data DAT_180d48e18;
data DAT_180c918c0;
data entityManager;
data componentManager;
data systemManager;

// 函数: data resourceHashData;
data resourceHashData;
data entityPool;
data componentPool;
data DAT_180d49d08;
data DAT_180d49bf0;
data DAT_180d49bf8;
data DAT_180d49c00;
data DAT_180d49c08;
data physicsEngineCore;
data physicsWorldData;

// 函数: data resourceVerifyHash;
data resourceVerifyHash;
data DAT_180c91038;
data physicsSceneData;
data physicsBodyData;
data physicsColliderData;
data physicsJointData;
data collisionDetectionData;
data collisionResponseData;
data collisionBroadphase;
data collisionNarrowphase;
data collisionContactData;
data collisionResolver;
data constraintSolverData;
data constraintIterationData;
data constraintVelocityData;
data unknown_180462fc0;
data unknown_180462ff0;
data unknown_180463030;
data unknown_180463060;
data constraintPositionData;
data constraintForceData;
data constraintImpulseData;
data physicsMaterialData;
data fileSystemState;
data physicsFrictionData;
data physicsRestitutionData;
data physicsDensityData;
data physicsSurfaceData;
data rigidBodyData;
data rigidBodyState;
data rigidBodyMassData;
data rigidBodyInertia;
data rigidBodyForceData;
data rigidBodyTorqueData;
data DAT_180d49d0c;
data DAT_180d49d10;
data DAT_180d49d18;
data DAT_180d49d20;
data DAT_180d49d28;
data DAT_180d49d30;
data DAT_180d49d38;
data DAT_180d49d40;
data DAT_180d49d48;
data fileCacheState;
uint32 softBodyVertices;
uint32 softBodyIndices;
data softBodyConstraints;
data DAT_180c8ecd4;
data networkManagerState;
data softBodyDamping;
data DAT_180bfbb50;
data DAT_180bfbb60;
data DAT_180bfbb70;
data DAT_180bfbb80;

// 函数: data resourceCacheFlush;
data resourceCacheFlush;

// 函数: data resourceBatchProcess;
data resourceBatchProcess;
data DAT_180a2de40;
byte DAT_180d49e30;
data fluidSimulationData;
data fluidParticleData;
data fluidGridData;
data fluidBoundaryData;
data fluidForceData;

// 函数: data resourceControlAccess;
data resourceControlAccess;
data fluidViscosityData;
data clothSimulationData;
data DAT_180c96128;
data clothMeshData;
data DAT_180c9612c;
data DAT_180c96410;
data clothConstraints;
data clothCollisionData;
data DAT_180d49ec0;
data DAT_180d49ec4;
data DAT_180c9642c;
data DAT_180c96430;

// 函数: data resourceTrackUsage;
data resourceTrackUsage;
data DAT_180c963e8;
data DAT_180d49f60;
data DAT_180d49f64;
data clothWindData;
data clothGravityData;
data audioProcessingData;
data audioEffectData;
data audioFilterData;
data audioCompressorData;
data renderingStateFlag1;
data renderingStateFlag2;
data renderingStateFlag3;
data renderingStateFlag4;
data renderingStateFlag5;
data renderingStateFlag6;
data renderingStateFlag7;
data renderingStateFlag8;
data renderingStateFlag9;
data renderingStateFlag10;
data renderingStateFlag11;
data renderingStateFlag12;
data DAT_180c963d4;
data DAT_180c963dc;
data DAT_180c963d8;
data DAT_180c9644c;
data DAT_180c96450;
data audioListenerData;
data audioSourceData;
data audioStreamData;
data audioBufferQueue;
data audioSampleData;
data DAT_180d49128;
data systemInitializationFlag;
data resourceManagerState;
data audioBitrateData;
data audioDeviceConfig;
data audioDriverData;
data audioHardwareInfo;
data audioLatencyData;
data audioBufferSize;
data audioSampleRate;
data unknown_180a303c8;
data unknown_180a30330;
data unknown_180a30368;
data resourceCacheState;
data resourcePoolState;
data DAT_180bfbcc0;
data resourceControlFlag1;
data resourceControlFlag2;
data unknown_180a30568;
data unknown_180a305a0;
data resourceControlFlag3;
data unknown_180a305f8;
data unknown_180a30638;
data unknown_180a30660;
data unknown_180a306a8;
data resourceControlFlag4;
data unknown_180a31018;
data unknown_180a31040;
data unknown_180a31058;
data unknown_180a31078;
data unknown_180a310a0;
data unknown_180a310d0;
data unknown_180a31110;
data unknown_180a31138;
data unknown_180a31158;
data unknown_180a31178;
data unknown_180a31198;
data unknown_180a311d8;
data unknown_180a311f8;
data unknown_180a31228;
data unknown_180a31250;
data unknown_180a31288;
data unknown_180a312b0;
data unknown_180a312d8;
data unknown_180a312f8;
data unknown_180a31320;
data unknown_180a31348;
data unknown_180a31380;
data unknown_180a313a8;
data unknown_180a313d0;
data unknown_180a313f8;
data unknown_180a31420;
data unknown_180a31448;
data unknown_180a31478;
data unknown_180a31498;
data unknown_180a314c8;
data unknown_180a31500;
data unknown_180a31530;
data unknown_180a31560;
data unknown_180a31598;
data unknown_180a315c0;
data unknown_180a315f8;
data unknown_180a31620;
data unknown_180a31638;
data unknown_180a31660;
data unknown_180a31688;
data unknown_180a316b0;
data unknown_180a316c8;
data unknown_180a316f8;
data unknown_180a31720;
data unknown_180a31740;
data unknown_180a31770;
data unknown_180a31790;
data unknown_180a317b8;
data unknown_180a317e0;
data unknown_180a317f8;
data unknown_180a31820;
data unknown_180a31850;
data unknown_180a31878;
data unknown_180a318a8;
data unknown_180a318d0;
data unknown_180a31918;
data unknown_180a31948;
data unknown_180a31978;
data unknown_180a319a0;
data unknown_180a319b8;
data unknown_180a319e8;
data unknown_180a31a00;
data unknown_180a31a30;
data unknown_180a31a60;
data unknown_180a31a80;
data unknown_180a31ab8;
data unknown_180a31af0;
data unknown_180a31b10;
data unknown_180a31b48;
data unknown_180a31b80;
data unknown_180a31bb0;
data unknown_180a31bd8;
data unknown_180a31c08;
data unknown_180a31c40;
data unknown_180a31c70;
data unknown_180a31ca0;
data unknown_180a31cd0;
data unknown_180a31cf8;
data unknown_180a31d18;
data unknown_180a31d40;
data unknown_180a31d58;
data unknown_180a31d80;
data unknown_180a31da8;
data unknown_180a31dc8;
data unknown_180a31de8;
data unknown_180a31e08;
data unknown_180a31e28;
data unknown_180a31e48;
data unknown_180a31e68;
data unknown_180a31e88;
data unknown_180a31eb0;
data unknown_180a31ed0;
data unknown_180a31ef0;
data unknown_180a31f38;
data unknown_180a31f58;
data unknown_180a31f80;
data unknown_180a31fc8;
data unknown_180a31ff0;
data unknown_180a32010;
data unknown_180a32040;
data unknown_180a32070;
data unknown_180a320b0;
data unknown_180a320d8;
data unknown_180a32120;
data unknown_180a32168;
data unknown_180a32180;
data unknown_180a32198;
data unknown_180a321c8;
data unknown_180a321f8;
data unknown_180a32240;
data unknown_180a32288;
data unknown_180a322d0;
data unknown_180a32318;
data unknown_180a32350;
data unknown_180a32398;
data unknown_180a323e0;
data unknown_180a32428;
data unknown_180a32470;
data unknown_180a324b8;
data unknown_180a324f0;
data unknown_180a32538;
data unknown_180a32580;
data unknown_180a325c8;
data unknown_180a32610;
data unknown_180a32658;
data unknown_180a326a0;
data unknown_180a326e8;
data unknown_180a32730;
data unknown_180a32778;
data unknown_180a327b0;
data unknown_180a327f8;
data unknown_180a32830;
data unknown_180a32870;
data unknown_180a328a0;
data unknown_180a328e8;
data unknown_180a32920;
data unknown_180a32960;
data unknown_180a329a0;
data unknown_180a329e8;
data unknown_180a32a30;
data unknown_180a32a78;
data unknown_180a32ab0;
data unknown_180a32af0;
data unknown_180a32b30;
data unknown_180a32b70;
data unknown_180a32ba8;
data unknown_180a32be8;
data unknown_180a32c20;
data unknown_180a32c60;
data unknown_180a32c98;
data unknown_180a32cd8;
data unknown_180a32d10;
data unknown_180a32d58;
data unknown_180a32d90;
data unknown_180a32dd0;
data unknown_180a32e08;
data unknown_180a32e48;
data unknown_180a32e70;
data unknown_180a32eb8;
data unknown_180a32ee0;
data unknown_180a32f10;
data unknown_180a32f50;
data unknown_180a32f90;
data unknown_180a32fd0;
data unknown_180a33020;
data unknown_180a33060;
data unknown_180a330b0;
data unknown_180a330f0;
data unknown_180a33140;
data unknown_180a33188;
data unknown_180a331c0;
data unknown_180a33200;
data unknown_180a33250;
data unknown_180a33280;
data unknown_180a332c8;
data unknown_180a332f8;
data unknown_180a33330;
data unknown_180a33370;
data unknown_180a333c0;
data unknown_180a33400;
data unknown_180a33450;
data unknown_180a334a0;
data unknown_180a334f0;
data unknown_180a33540;
data unknown_180a33590;
data unknown_180a335d8;
data unknown_180a33610;
data unknown_180a33660;
data unknown_180a336b0;
data unknown_180a336f0;
data unknown_180a33740;
data unknown_180a33780;
data unknown_180a337d0;
data unknown_180a33820;
data unknown_180a33870;
data unknown_180a338e0;
data unknown_180a33930;
data unknown_180a2c968;
data unknown_180a33988;
data unknown_180a339b0;
data unknown_180a339c0;
data unknown_180a339e0;
data unknown_180a339e8;
data unknown_180a33a60;
data unknown_180a33c10;
data unknown_180a33c90;
data unknown_18053f010;
data unknown_18053f040;
data unknown_18053f080;
data unknown_18053f090;
byte DAT_180c91d14;
data DAT_180c91d18;
data unknown_180a33ca8;
data unknown_18053eee0;
data unknown_18053efd0;

// 函数: data resourceBalanceLoad;
data resourceBalanceLoad;
data DAT_180d49ff8;

// 函数: data resourceScheduleMaintenance;
data resourceScheduleMaintenance;
data networkConnectionData1;
data networkConnectionData2;
data networkConnectionData3;
data networkConnectionData4;
data networkConnectionData5;
data networkConnectionData6;
data networkConnectionData7;
data networkConnectionData8;
data networkConnectionData9;
data networkConnectionData10;
data networkConnectionData11;
data networkConnectionData12;
data networkConnectionData13;
data networkConnectionData14;
data networkConnectionData15;
data networkConnectionData16;
data networkConnectionData17;
data networkConnectionData18;
data networkConnectionData19;
data networkConnectionData20;
data networkConnectionData21;
data networkConnectionData22;
data networkConnectionData23;
data networkConnectionData24;
data networkConnectionData25;
data networkConnectionData26;
data networkConnectionData27;
data networkConnectionData28;
data networkConnectionData29;
data networkConnectionData30;
data networkConnectionData31;
data networkConnectionData32;
data networkConnectionData33;
data networkConnectionData34;
data networkConnectionData35;
data networkConnectionData36;
data networkConnectionData37;
data networkConnectionData38;
data networkConnectionData39;
data networkConnectionData40;
data networkConnectionData41;
data networkConnectionData42;
data networkConnectionData43;
data networkConnectionData44;
data networkConnectionData45;
data networkConnectionData46;
data networkConnectionData47;
data networkConnectionData48;
data networkConnectionData49;
data networkConnectionData50;
data networkConnectionData51;
data networkConnectionData52;
data networkConnectionData53;
data networkConnectionData54;
data networkConnectionData55;
data networkConnectionData56;
data networkConnectionData57;
data networkConnectionData58;
data networkConnectionData59;
data networkConnectionData60;
data networkConnectionData61;
data networkConnectionData62;
data networkConnectionData63;
data networkConnectionData64;
data networkConnectionData65;
data networkConnectionData66;
data networkConnectionData67;
data networkConnectionData68;
data networkConnectionData69;
data networkConnectionData70;
data networkConnectionData71;
data networkConnectionData72;
data networkConnectionData73;
data networkConnectionData74;
data networkConnectionData75;
data networkConnectionData76;
data networkConnectionData77;
data networkConnectionData78;
data networkConnectionData79;
data networkConnectionData80;
data networkConnectionData81;
data networkConnectionData82;
data networkConnectionData83;
data networkConnectionData84;
data networkConnectionData85;
data networkConnectionData86;
data networkConnectionData87;
data networkConnectionData88;
data networkConnectionData89;
data networkConnectionData90;
data networkConnectionData91;
data networkConnectionData92;
data networkConnectionData93;
data networkConnectionData94;
data networkConnectionData95;
data networkConnectionData96;
data networkConnectionData97;
data networkConnectionData98;
data networkConnectionData99;
data networkConnectionData100;
data unknown_180a39360;
data unknown_180a39378;
data unknown_180a39390;
data unknown_180a393a8;
data unknown_180a393d0;
data unknown_180a393f0;
data unknown_180a39408;
data unknown_180a39428;
data unknown_180a39450;
data unknown_180a39468;
data unknown_180a39480;
data unknown_180a394a0;
data unknown_180a394b8;
data unknown_180a394e0;
data unknown_180a39500;
data unknown_180a39518;
data unknown_180a39538;
data unknown_180a39568;
data unknown_180a39598;
data unknown_180a395c0;
data unknown_180a395e0;
data unknown_180a39600;
data unknown_180a39628;
data unknown_180a39640;
data unknown_180a39660;
data unknown_180a39688;
data unknown_180a396b0;
data unknown_180a396c8;
data unknown_180a396f0;
data unknown_180a39710;
data unknown_180a39728;
data unknown_180a39740;
data unknown_180a39758;
data unknown_180a39768;
data unknown_180a39788;
data unknown_180a397a8;
data unknown_180a397c8;
data unknown_180a397d8;
data unknown_180a397e8;
data unknown_180a397f8;
data unknown_180a39820;
data unknown_180a39850;
data unknown_180a39864;
data unknown_180a39870;
data unknown_180a39888;
data unknown_180a398a8;
data unknown_180a398b8;
data unknown_180a398d8;
data unknown_180a398f0;
data unknown_180a39910;
data unknown_180a39920;
data unknown_180a39940;
data unknown_180a39970;
data unknown_180a39988;
data unknown_180a399a8;
data unknown_180a399c0;
data unknown_180a399e0;
data unknown_180a399f0;
data unknown_180a39a18;
data unknown_180a39a28;
data unknown_180a39a40;
data unknown_180a39a60;
data unknown_180a39a70;
data unknown_180a39a88;
data unknown_180a39aa0;
data unknown_180a39ab8;
data unknown_180a39ad8;
data unknown_180a39af0;
data unknown_180a39b00;
data unknown_180a39b18;
data unknown_180a39b30;
data unknown_180a39b48;
data unknown_180a39b68;
data unknown_180a39b78;
data unknown_180a39b88;
data unknown_180a39ba0;
data unknown_180a39bc0;
data unknown_180a39bd8;
data unknown_180a39bf0;
data unknown_180a39c10;
data unknown_180a39c30;
data unknown_180a39c50;
data unknown_180a39c60;
data unknown_180a39c80;
data unknown_180a39c98;
data unknown_180a39cb8;
data unknown_180a39ccc;
data unknown_180a39cd0;
data unknown_180a39cd4;
data unknown_180a39cd8;
data unknown_180a39ce0;
data unknown_180a39cf8;
data unknown_180a39d10;
data unknown_180a39d28;
data unknown_180a39d40;
data unknown_180a39d58;
data unknown_180a39d70;
data unknown_180a39d88;
data unknown_180a39d98;
data unknown_180a39da8;
data unknown_180a39db0;
data unknown_180a39dc0;
data unknown_180a39dd0;
data unknown_180a39de0;
data unknown_180a39df0;
data unknown_180a39e08;
data unknown_180a39e18;
data unknown_180a39e30;
data unknown_180a39e48;
data unknown_180a39e58;
data unknown_180a39e78;
data unknown_180a39e90;
data unknown_180a39ea8;
data unknown_180a39eb8;
data unknown_180a39ed0;
data unknown_180a39ee0;
data unknown_180a39ef0;
data unknown_180a39f00;
data unknown_180a39f18;
data unknown_180a39f28;
data unknown_180a39f50;
data unknown_180a39f60;
data unknown_180a39f78;
data unknown_180a39f88;
data unknown_180a39f98;
data unknown_180a39fb0;
data unknown_180a39fc0;
data unknown_180a39fe0;
data unknown_180a39ff8;
data unknown_180a3a018;
data unknown_180a3a038;
data unknown_180a3a048;
data unknown_180a3a058;
data unknown_180a3a068;
data unknown_180a3a078;
data unknown_180a3a098;
data unknown_180a3a0b8;
data unknown_180a3a0d0;
data unknown_180a3a0f0;
data unknown_180a3a118;
data unknown_180a3a140;
data unknown_180a3a158;
data unknown_180a3a178;
data unknown_180a3a188;
data unknown_180a3a1a8;
data unknown_180a3a1b8;
data unknown_180a3a1c8;
data unknown_180a3a1e8;
data unknown_180a3a208;
data unknown_180a3a220;
data unknown_180a3a240;
data unknown_180a3a250;
data unknown_180a3a260;
data unknown_180a3a278;
data unknown_180a3a298;
data unknown_180a3a2b0;
data unknown_180a3a2c0;
data unknown_180a3a2d8;
data unknown_180a3a2e8;
data unknown_180a3a2f8;
data unknown_180a3a300;
data unknown_180a3a310;
data unknown_180a3a320;
data unknown_180a3a348;
data unknown_180a3a370;
data unknown_180a3a398;
data unknown_180a3a3c0;
data unknown_180a3a3d0;
data unknown_180a3a3e8;
data unknown_180a3a3f8;
data unknown_180a3a408;
data unknown_180a3a418;
data unknown_180a3a428;
data unknown_180a3a440;
data unknown_180a3a458;
data unknown_180a3a468;
data unknown_180a3a478;
data unknown_180a3a498;
data unknown_180a3a4a8;
data unknown_180a3a4c0;
data unknown_180a3a4d0;
data unknown_180a3a4e0;
data unknown_180a3a4f8;
data unknown_180a3a508;
data unknown_180a3a520;
data unknown_180a3a530;
data unknown_180a3a540;
data unknown_180a3a560;
data unknown_180a3a580;
data unknown_180a3a5a8;
data unknown_180a3a5c0;
data unknown_180a3a5d0;
data unknown_180a3a5e0;
data unknown_180a3a600;
data unknown_180a3a620;
data unknown_180a3a630;
data unknown_180a3a640;
data unknown_180a3a650;
data unknown_180a3a660;
data unknown_180a3a670;
data unknown_180a3a688;
data unknown_180a3a6a0;
data unknown_180a3a6c0;
data unknown_180a3a6e0;
data unknown_180a3a6f8;
data unknown_180a3a708;
data unknown_180a3a720;
data unknown_180a3a738;
data unknown_180a3a748;
data unknown_180a3a754;
data unknown_180a3a758;
data unknown_180a3a768;
data unknown_180a3a778;
data unknown_180a3a788;
data unknown_180a3a798;
data unknown_180a3a7a8;
data unknown_180a3a7b8;
data unknown_180a3a7d0;
data unknown_180a3a7e0;
data unknown_180a3a7f0;
data unknown_180a3a800;
data unknown_180a3a820;
data unknown_180a3a830;
data unknown_180a3a850;
data unknown_180a3a860;
data unknown_180a3a870;
data unknown_180a3a880;
data unknown_180a3a898;
data unknown_180a3a8b0;
data unknown_180a3a8c0;
data unknown_180a3a8d8;
data unknown_180a3a8f0;
data unknown_180a3a900;
data unknown_180a3a910;
data unknown_180a3a920;
data unknown_180a3a938;
data unknown_180a3a948;
data unknown_180a3a960;
data unknown_180a3a970;
data unknown_180a3a988;
data unknown_180a3a998;
data unknown_180a3a9b0;
data unknown_180a3a9c8;
data unknown_180a3a9d8;
data unknown_180a3a9e0;
data unknown_180a3a9f0;
data unknown_180a3aa08;
data unknown_180a3aa20;
data unknown_180a3aa38;
data unknown_180a3aa50;
data unknown_180a3aa70;
data unknown_180a3aa98;
data unknown_180a3aab0;
data unknown_180a3aac0;
data unknown_180a3aad8;
data unknown_180a3aae8;
data unknown_180a3aaf8;
data unknown_180a3ab08;
data unknown_180a3ab18;
data unknown_180a3ab28;
data unknown_180a3ab38;
data unknown_180a3ab50;
data unknown_180a3ab60;
data unknown_180a3ab70;
data unknown_180a3ab80;
data unknown_180a3ab90;
data unknown_180a3aba0;
data unknown_180a3abb0;
data unknown_180a3abc0;
data unknown_180a3abd0;
data unknown_180a3abe0;
data unknown_180a3abe8;
data unknown_180a3ac00;
data unknown_180a3ac10;
data unknown_180a3ac18;
data unknown_180a3ac30;
data unknown_180a3ac48;
data unknown_180a3ac68;
data unknown_180a3ac80;
data unknown_180a3ac90;
data unknown_180a3aca8;
data unknown_180a3acc8;
data unknown_180a3acd8;
data unknown_180a3acf8;
data unknown_180a3ad18;
data unknown_180a3ad30;
data unknown_180a3ad60;
data unknown_180a3ad88;
data unknown_180a3ada0;
data unknown_180a3adb8;
data unknown_180a3add0;
data unknown_180a3ade8;
data unknown_180a3ae00;
data unknown_180a3ae18;
data unknown_180a2eac0;
data DAT_180c92510;
char DAT_180c8aa68;
data unknown_180a3e5e8;

// 函数: data resourceExecuteMaintenance;
data resourceExecuteMaintenance;
byte DAT_180bf66d8;
data DAT_180c96858;
data DAT_180bfbf64;
data DAT_180bfbf7c;
data DAT_180bfbf60;
data DAT_180bf7308;
data DAT_180bfbf78;
data bufferDataTable3;
char DAT_180c8efc8;
data unknown_18064ffc0;
data unknown_180a3c8c8;
data unknown_180a3c908;
data unknown_180a3d970;
data unknown_180a3db60;
data DAT_180bfbd80;

// 函数: void ProcessMemoryAllocation(longlong resourceHandle,longlong memorySize)
// 处理内存分配函数
// 参数: resourceHandle - 资源句柄, memorySize - 内存大小
void ProcessMemoryAllocation(longlong resourceHandle,longlong memorySize)

{
  uint64 memoryBlockHandle;    // 内存块句柄
  int operationResult;        // 操作结果
  longlong iterationCounter;  // 迭代计数器
  int processedCount;         // 已处理计数
  byte tempBuffer [32];       // 临时缓冲区
  longlong resourceInfo [2];  // 资源信息数组
  byte *allocatedMemory;      // 分配的内存指针
  int allocationCount;        // 分配计数
  uint32 tempUInt;            // 临时无符号整数
  byte workingBuffer [512];   // 工作缓冲区
  ulonglong securityToken;    // 安全令牌
  
  securityToken = _DAT_180bf00a8 ^ (ulonglong)tempBuffer;
  operationResult = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),resourceInfo);
  if ((operationResult == 0) && (*(longlong *)(resourceInfo[0] + 8) != 0)) {
    allocatedMemory = tempBuffer;
    processedCount = 0;
    allocationCount = 0;
    securityToken = 0xffffffc0;
    operationResult = AllocateSystemMemory(*(uint64 *)(memorySize + 0x90),*(longlong *)(resourceInfo[0] + 8),
                          &allocatedMemory);
    if (operationResult == 0) {
      if (0 < allocationCount) {
        iterationCounter = 0;
        do {
          memoryBlockHandle = *(uint64 *)(allocatedMemory + iterationCounter);
          operationResult = utilityAllocateMemoryBlock(memoryBlockHandle);
          if (operationResult != 2) {
                    // WARNING: Subroutine does not return
            utilityFreeMemoryBlock(memoryBlockHandle,1); # 内存块释放函数
          }
          processedCount = processedCount + 1;
          iterationCounter = iterationCounter + 8;
        } while (processedCount < allocationCount);
      }
      FreeMemoryBuffer(&allocatedMemory);
    }
    else {
      FreeMemoryBuffer(&allocatedMemory);
    }
  }
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(securityToken ^ (ulonglong)tempBuffer);
}




// 函数: void HandleResourceCleanup(void)
// 资源清理处理函数 - 释放和清理系统资源
void HandleResourceCleanup(void)

{
  uint64 localUInt1;
  int localInt2;
  longlong inputRegister;
  longlong baseRegister;
  longlong localLong3;
  int localInt4;
  byte *stackParameter1;
  int stackParameter2;
  uint32 stackParameter3;
  ulonglong stackParameter4;
  
  if (*(longlong *)(inputRegister + 8) != 0) {
    stackParameter1 = &stackLocalBuffer;
    localInt4 = 0;
    stackParameter2 = 0;
    stackParameter3 = 0xffffffc0;
    localInt2 = AllocateSystemMemory(*(uint64 *)(baseRegister + 0x90),*(longlong *)(inputRegister + 8),
                          &stack0x00000030);
    if (localInt2 == 0) {
      if (0 < stackParameter2) {
        localLong3 = 0;
        do {
          localUInt1 = *(uint64 *)(stackParameter1 + localLong3);
          localInt2 = utilityAllocateMemoryBlock(localUInt1);
          if (localInt2 != 2) {
                    // WARNING: Subroutine does not return
            utilityFreeMemoryBlock(localUInt1,1); # 内存块释放函数
          }
          localInt4 = localInt4 + 1;
          localLong3 = localLong3 + 8;
        } while (localInt4 < stackParameter2);
      }
      FreeMemoryBuffer(&stack0x00000030);
    }
    else {
      FreeMemoryBuffer(&stack0x00000030);
    }
  }
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(stackParameter4 ^ (ulonglong)&stack0x00000000);
}




// 函数: void system_initialization_helper(void)
void system_initialization_helper(void)          // 系统初始化辅助函数

{
  ulonglong stackParameter4;
  
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(stackParameter4 ^ (ulonglong)&stack0x00000000);
}




// 函数: void memory_pool_initializer(void)
void memory_pool_initializer(void)          // 内存池初始化函数

{
  longlong baseRegister;
  ulonglong stackParameter4;
  
  if ((*(uint *)(baseRegister + 0x2d8) >> 7 & 1) != 0) {
                    // WARNING: Subroutine does not return
    utilityFreeMemoryBlock(); # 内存块释放函数
  }
  FreeMemoryBuffer(&stack0x00000030);
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(stackParameter4 ^ (ulonglong)&stack0x00000000);
}



uint64 validate_resource_handle(longlong resourceHandle)    // 资源句柄验证函数

{
  longlong localLong1;
  longlong localLong2;
  int localInt3;
  uint64 uVar4;
  uint64 uVar5;
  longlong *plVar6;
  int iVar7;
  ulonglong uVar8;
  int iVar9;
  ulonglong localUInt10;
  longlong *plocalLong11;
  longlong in_stack_00000008;
  char acStackX_18 [16];
  
  uVar4 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&stack0x00000008);
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  localLong2 = *(longlong *)(in_stack_00000008 + 8);
  if ((localLong2 == 0) || (*(longlong *)(localLong2 + 0x48) != in_stack_00000008)) {
    return 0x1c;
  }
  localLong1 = *(longlong *)(localLong2 + 0x38);
  if (localLong2 == 0) {
    return 0x1f;
  }
  if (*(int *)(localLong2 + 0xe4) == -1) {
    uVar4 = utilityProcessMemoryData(localLong2,acStackX_18);
    if ((int)uVar4 != 0) {
      return uVar4;
    }
    uVar5 = process_system_data(localLong2);
    if ((int)uVar5 != 0) {
      return uVar5;
    }
    if ((char)uVar4 == (char)uVar5) {
      if (acStackX_18[0] == (char)uVar5) {
        plocalLong11 = (longlong *)(localLong1 + 0x4d8);
        uVar8 = 0;
        iVar7 = *(int *)(localLong1 + 0x4e4);
        if (0 < iVar7) {
          plVar6 = (longlong *)*plocalLong11;
          localUInt10 = uVar8;
          do {
            if (*plVar6 == localLong2) {
              if (-1 < (int)localUInt10) {
                return 0;
              }
              break;
            }
            localUInt10 = (ulonglong)((int)localUInt10 + 1);
            uVar8 = uVar8 + 1;
            plVar6 = plVar6 + 1;
          } while ((longlong)uVar8 < (longlong)iVar7);
        }
        iVar7 = iVar7 + 1;
        if (*(int *)(localLong1 + 0x4e8) < iVar7) {
          iVar9 = (int)((float)*(int *)(localLong1 + 0x4e8) * 1.5);
          localInt3 = iVar7;
          if (iVar7 <= iVar9) {
            localInt3 = iVar9;
          }
          if (localInt3 < 8) {
            iVar9 = 8;
          }
          else if (iVar9 < iVar7) {
            iVar9 = iVar7;
          }
          iVar7 = utilityHandleMemoryOperation(plocalLong11,iVar9);
          if (iVar7 != 0) {
            return 0;
          }
        }
        *(longlong *)(*plocalLong11 + (longlong)*(int *)(localLong1 + 0x4e4) * 8) = localLong2;
        *(int *)(localLong1 + 0x4e4) = *(int *)(localLong1 + 0x4e4) + 1;
        *(int *)(localLong1 + 0x4e0) = *(int *)(localLong1 + 0x4e0) + 1;
      }
      else {
        uVar4 = utilityAccessMemoryRegion(localLong1 + 0x368,localLong2);
        if ((int)uVar4 != 0) {
          return uVar4;
        }
      }
    }
  }
  return 0;
}



ulonglong calculate_memory_allocation(longlong resourceHandle,longlong memorySize)    // 内存分配计算函数

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  int localInt4;
  uint uVar5;
  ulonglong uVar6;
  longlong *plVar7;
  longlong *plVar8;
  longlong *plVar9;
  longlong *plocalLong10;
  longlong lStackX_8;
  longlong lStackX_18;
  
  uVar6 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x18),&lStackX_18);
  localInt4 = (int)uVar6;
  if (localInt4 == 0) {
    plocalLong10 = (longlong *)0x0;
    plVar9 = plocalLong10;
    if (lStackX_18 != 0) {
      plVar9 = (longlong *)(lStackX_18 + -8);
    }
    uVar6 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_18);
    localInt4 = (int)uVar6;
    if (localInt4 == 0) {
      lStackX_8 = 0;
      uVar5 = utilityEncryptMemoryData(*(uint64 *)(memorySize + 0x90),*(longlong *)(lStackX_18 + 8) + 0x10,
                            &lStackX_8);
      if (uVar5 != 0) {
        utilityValidateMemoryAccess(plVar9);
        return (ulonglong)uVar5;
      }
      if (((*(uint *)(*(longlong *)(lStackX_18 + 8) + 0xf8) >> 2 & 1) == 0) &&
         (uVar6 = validate_system_integrity(lStackX_8), (int)uVar6 != 0)) {
        return uVar6;
      }
      plocalLong1 = (longlong *)(lStackX_8 + 0x240);
      plVar7 = (longlong *)(*plocalLong1 + -0x18);
      if (*plocalLong1 == 0) {
        plVar7 = plocalLong10;
      }
      plVar8 = plocalLong10;
      plocalLong2 = plocalLong10;
      plocalLong3 = plocalLong10;
      if (plVar7 != (longlong *)0x0) {
        plVar8 = plVar7 + 3;
      }
      while( true ) {
        if (plVar8 == plocalLong1) {
          *(longlong **)(lStackX_8 + 0x80) = plVar9;
          cleanup_system_resources(lStackX_8,plVar9);
          plVar9[2] = lStackX_8;
          uVar6 = utilityGetMemoryStatus(lStackX_8);
          if ((int)uVar6 == 0) {
            return 0;
          }
          return uVar6;
        }
        if ((int)plVar9[5] <= (int)plocalLong3) {
          return 0x1c;
        }
        plVar7 = plVar8 + 4;
        if (plVar8 == (longlong *)0x0) {
          plVar7 = (longlong *)0x38;
        }
        *(longlong *)(plVar9[4] + 8 + (longlong)plocalLong2) = *plVar7;
        if (plVar8 == plocalLong1) break;
        plVar7 = (longlong *)(*plVar8 + -0x18);
        if (*plVar8 == 0) {
          plVar7 = plocalLong10;
        }
        plVar8 = plocalLong10;
        if (plVar7 != (longlong *)0x0) {
          plVar8 = plVar7 + 3;
        }
        plocalLong2 = plocalLong2 + 3;
        plocalLong3 = (longlong *)(ulonglong)((int)plocalLong3 + 1);
      }
      return 0x1c;
    }
  }
  if (localInt4 == 0x1e) {
    return 0;
  }
  return uVar6;
}



uint64 manage_resource_memory(longlong resourceHandle,longlong memorySize) # 资源内存管理函数

{
  longlong localLong1;
  int localInt2;
  uint64 uVar3;
  longlong alStackX_8 [2];
  
  uVar3 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),alStackX_8);
  localLong1 = alStackX_8[0];
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  *(int *)(alStackX_8[0] + 0x4c) = *(int *)(alStackX_8[0] + 0x4c) + 1;
  if (*(int *)(alStackX_8[0] + 0x58) + *(int *)(alStackX_8[0] + 0x54) +
      *(int *)(alStackX_8[0] + 0x4c) == 1) {
    alStackX_8[0] = 0;
    localInt2 = utilityInitializeResource(alStackX_8);
    if (localInt2 == 0) {
      localInt2 = utilityCreateResourceHandle(localLong1,*(uint64 *)(localLong1 + 8),*(uint64 *)(memorySize + 0x90),
                            *(uint64 *)(memorySize + 800));
      if (localInt2 == 0) {
                    // WARNING: Subroutine does not return
        utilityCleanupResource(alStackX_8);
      }
    }
                    // WARNING: Subroutine does not return
    utilityCleanupResource(alStackX_8);
  }
  return 0;
}



uint64 check_resource_status(longlong resourceHandle) # 资源状态检查函数

{
  uint *plocalUInt1;
  longlong localLong2;
  uint64 uVar3;
  longlong *plVar4;
  longlong alStackX_8 [4];
  
  uVar3 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),alStackX_8);
  if ((int)uVar3 == 0) {
    plVar4 = *(longlong **)(alStackX_8[0] + 0x20);
    while ((*(longlong **)(alStackX_8[0] + 0x20) <= plVar4 &&
           (plVar4 < *(longlong **)(alStackX_8[0] + 0x20) + *(int *)(alStackX_8[0] + 0x28)))) {
      localLong2 = *plVar4;
      plVar4 = plVar4 + 1;
      if ((*(longlong *)(localLong2 + 0x18) == *(longlong *)(alStackX_8[0] + 8)) &&
         (localLong2 = *(longlong *)(localLong2 + 0x10), localLong2 != 0)) {
        plocalUInt1 = (uint *)(localLong2 + 0x2d8);
        *plocalUInt1 = *plocalUInt1 | 4;
      }
    }
    uVar3 = 0;
  }
  return uVar3;
}



uint64 validate_memory_size(longlong resourceHandle,uint64 memorySize) # 内存大小验证函数

{
  longlong localLong1;
  uint64 localUInt2;
  int localInt3;
  longlong alStackX_8 [2];
  
  localUInt2 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),alStackX_8);
  localLong1 = alStackX_8[0];
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  if (*(int *)(alStackX_8[0] + 0x4c) < 1) {
    return 0x1c;
  }
  localInt3 = *(int *)(alStackX_8[0] + 0x4c) + -1;
  *(int *)(alStackX_8[0] + 0x4c) = localInt3;
  if (*(int *)(alStackX_8[0] + 0x58) + *(int *)(alStackX_8[0] + 0x54) + localInt3 != 0) {
    return 0;
  }
  alStackX_8[0] = 0;
  localInt3 = utilityInitializeResource(alStackX_8);
  if (localInt3 == 0) {
    localInt3 = utilityReleaseResourceHandle(localLong1,0);
    if (localInt3 == 0) {
      localInt3 = utilityCheckResourceState(memorySize);
      if (localInt3 == 0) {
                    // WARNING: Subroutine does not return
        utilityCleanupResource(alStackX_8);
      }
    }
  }
                    // WARNING: Subroutine does not return
  utilityCleanupResource(alStackX_8);
}



uint64 query_resource_handle(longlong resourceHandle) # 资源句柄查询函数

{
  longlong localLong1;
  uint64 localUInt2;
  longlong alStackX_8 [4];
  
  localUInt2 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),alStackX_8);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  if (alStackX_8[0] != 0) {
    alStackX_8[0] = alStackX_8[0] + -8;
  }
  localLong1 = *(longlong *)(alStackX_8[0] + 0x10);
  if (localLong1 != 0) {
    *(int *)(localLong1 + 500) = *(int *)(localLong1 + 500) + 1;
    if ((*(char *)(localLong1 + 0x204) != '\0') && (localUInt2 = utilityGetSystemStatus(), (int)localUInt2 != 0)) {
      return localUInt2;
    }
    return 0;
  }
  return 0x1c;
}



uint64 allocate_resource_memory(longlong resourceHandle)

{
  uint64 localUInt1;
  longlong lStackX_8;
  
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)localUInt1 == 0) {
    if (lStackX_8 == 0) {
      lStackX_8 = 0;
    }
    else {
      lStackX_8 = lStackX_8 + -8;
    }
    if (*(longlong *)(lStackX_8 + 0x10) != 0) {
                    // WARNING: Subroutine does not return
      utilityFreeMemoryBlock(*(longlong *)(lStackX_8 + 0x10),1); # 内存块释放函数
    }
    localUInt1 = 0;
  }
  return localUInt1;
}



uint64 get_system_status(void)

{
  longlong inputRegister;
  longlong localLong1;
  
  if (inputRegister == 0) {
    localLong1 = 0;
  }
  else {
    localLong1 = inputRegister + -8;
  }
  if (*(longlong *)(localLong1 + 0x10) != 0) {
                    // WARNING: Subroutine does not return
    utilityFreeMemoryBlock(*(longlong *)(localLong1 + 0x10),1); # 内存块释放函数
  }
  return 0;
}



uint64 validate_character_resource(char resourceHandle)

{
  if (resourceHandle != '\0') {
                    // WARNING: Subroutine does not return
    utilityFreeMemoryBlock(); # 内存块释放函数
  }
  return 0;
}




// 函数: void initializeEmptyFunction(void)
void initializeEmptyFunction(void)

{
  return;
}



uint64 process_resource_data(longlong resourceHandle)

{
  uint64 localUInt1;
  longlong lStackX_8;
  
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)localUInt1 != 0) {
    return localUInt1;
  }
  if (lStackX_8 == 0) {
    lStackX_8 = 0;
  }
  else {
    lStackX_8 = lStackX_8 + -8;
  }
  if (*(longlong *)(lStackX_8 + 0x10) == 0) {
    return 0x1c;
  }
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(*(longlong *)(lStackX_8 + 0x10),1); # 内存块释放函数
}



uint32 get_memory_usage(void)

{
  longlong inputRegister;
  longlong localLong1;
  
  if (inputRegister == 0) {
    localLong1 = 0;
  }
  else {
    localLong1 = inputRegister + -8;
  }
  if (*(longlong *)(localLong1 + 0x10) == 0) {
    return 0x1c;
  }
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(*(longlong *)(localLong1 + 0x10),1); # 内存块释放函数
}




// 函数: void releaseMemoryAndExit(void)
void releaseMemoryAndExit(void)

{
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(); # 内存块释放函数
}




// 函数: void cleanupResourceFunction(void)
void cleanupResourceFunction(void)

{
  return;
}



uint64 validate_resource_access(longlong resourceHandle)

{
  uint64 localUInt1;
  longlong lStackX_8;
  
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)localUInt1 != 0) {
    return localUInt1;
  }
  if (lStackX_8 == 0) {
    lStackX_8 = 0;
  }
  else {
    lStackX_8 = lStackX_8 + -8;
  }
  if (*(longlong *)(lStackX_8 + 0x10) == 0) {
    return 0x1c;
  }
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(*(longlong *)(lStackX_8 + 0x10),1); # 内存块释放函数
}



uint32 get_system_info(void)

{
  longlong inputRegister;
  longlong localLong1;
  
  if (inputRegister == 0) {
    localLong1 = 0;
  }
  else {
    localLong1 = inputRegister + -8;
  }
  if (*(longlong *)(localLong1 + 0x10) == 0) {
    return 0x1c;
  }
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(*(longlong *)(localLong1 + 0x10),1); # 内存块释放函数
}




// 函数: void emergencyMemoryRelease(void)
void emergencyMemoryRelease(void)

{
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(); # 内存块释放函数
}




// 函数: void emptyReturnFunction(void)
void emptyReturnFunction(void)

{
  return;
}



uint64 handle_resource_operation(longlong resourceHandle)

{
  uint64 localUInt1;
  longlong alStackX_8 [2];
  longlong alStackX_18 [2];
  
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),alStackX_18);
  if ((int)localUInt1 == 0) {
    if (alStackX_18[0] == 0) {
      alStackX_18[0] = 0;
    }
    else {
      alStackX_18[0] = alStackX_18[0] + -8;
    }
    alStackX_8[0] = 0;
    localUInt1 = utilityProcessResourceData(alStackX_18[0],resourceHandle + 0x18,alStackX_8);
    if ((int)localUInt1 == 0) {
      if (alStackX_8[0] != 0) {
        if (*(longlong *)(alStackX_8[0] + 8) == 0) {
          return 0x1c;
        }
        localUInt1 = utilityHandleResourceOperation(*(longlong *)(alStackX_8[0] + 8),*(uint32 *)(resourceHandle + 0x20),
                              *(byte *)(resourceHandle + 0x24));
        if ((int)localUInt1 != 0) {
          return localUInt1;
        }
      }
      localUInt1 = 0;
    }
  }
  return localUInt1;
}



uint64 manage_resource_handle(longlong resourceHandle)

{
  uint64 localUInt1;
  longlong alStackX_8 [2];
  longlong alStackX_18 [2];
  
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),alStackX_18);
  if ((int)localUInt1 == 0) {
    if (alStackX_18[0] == 0) {
      alStackX_18[0] = 0;
    }
    else {
      alStackX_18[0] = alStackX_18[0] + -8;
    }
    alStackX_8[0] = 0;
    localUInt1 = utilityProcessResourceData(alStackX_18[0],resourceHandle + 0x20,alStackX_8);
    if ((int)localUInt1 == 0) {
      if (alStackX_8[0] != 0) {
        if (*(longlong *)(alStackX_8[0] + 8) == 0) {
          return 0x1c;
        }
        localUInt1 = utilityHandleResourceOperation(*(longlong *)(alStackX_8[0] + 8),*(uint32 *)(resourceHandle + 0x18),
                              *(byte *)(resourceHandle + 0x1c));
        if ((int)localUInt1 != 0) {
          return localUInt1;
        }
      }
      localUInt1 = 0;
    }
  }
  return localUInt1;
}



// WARNING: Removing unreachable block (ram,0x0001808d7494)
// WARNING: Removing unreachable block (ram,0x0001808d74a4)
// WARNING: Removing unreachable block (ram,0x0001808d74b1)

uint64 execute_resource_command(longlong resourceHandle)

{
  longlong localLong1;
  uint localUInt2;
  uint uVar3;
  uint64 uVar4;
  uint64 *puVar5;
  int iVar6;
  float fVar7;
  byte auVar8 [16];
  longlong lStackX_8;
  
  uVar4 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x1c),&lStackX_8);
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  localLong1 = *(longlong *)(lStackX_8 + 8);
  if (localLong1 != 0) {
    fVar7 = *(float *)(resourceHandle + 0x20);
    for (puVar5 = *(uint64 **)(localLong1 + 0x48);
        (*(uint64 **)(localLong1 + 0x48) <= puVar5 &&
        (puVar5 < *(uint64 **)(localLong1 + 0x48) + *(int *)(localLong1 + 0x50))); puVar5 = puVar5 + 1) {
      uVar4 = utilityHandleResourceOperation(*puVar5,fVar7,0);
      if ((int)uVar4 != 0) {
        return uVar4;
      }
    }
    if ((*(char *)(localLong1 + 0x34) == '\0') ||
       ((*(uint *)(*(longlong *)(localLong1 + 0x18) + 0x34) >> 1 & 1) == 0)) {
      uVar3 = *(uint *)(*(longlong *)(localLong1 + 0x18) + 0x34);
      localUInt2 = uVar3 >> 4;
      if ((localUInt2 & 1) == 0) {
        if ((((uVar3 >> 3 & 1) != 0) && (iVar6 = (int)fVar7, iVar6 != -0x80000000)) &&
           ((float)iVar6 != fVar7)) {
          auVar8._4_4_ = fVar7;
          auVar8._0_4_ = fVar7;
          auVar8._8_8_ = 0;
          uVar3 = movmskps(localUInt2,auVar8);
          fVar7 = (float)(int)(iVar6 - (uVar3 & 1));
        }
        fVar7 = (float)calculate_resource_size(*(longlong *)(localLong1 + 0x18),fVar7);
        if (((*(char *)(localLong1 + 0x34) == '\0') ||
            ((*(uint *)(*(longlong *)(localLong1 + 0x18) + 0x34) >> 1 & 1) == 0)) &&
           (fVar7 != *(float *)(localLong1 + 0x20))) {
          *(float *)(localLong1 + 0x20) = fVar7;
          utilityPrepareResourceAccess(localLong1);
          *(byte *)(localLong1 + 0x35) = 0;
        }
      }
    }
    return 0;
  }
  return 0x1c;
}



uint64 validate_resource_operation(longlong resourceHandle)

{
  longlong localLong1;
  int localInt2;
  uint64 uVar3;
  uint32 *puVar4;
  ulonglong uVar5;
  uint uVar6;
  ulonglong uVar7;
  longlong lVar8;
  longlong lStackX_8;
  
  uVar3 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)uVar3 == 0) {
    uVar7 = 0;
    uVar5 = lStackX_8 - 8;
    if (lStackX_8 == 0) {
      uVar5 = uVar7;
    }
    puVar4 = (uint32 *)(resourceHandle + 0x20 + (longlong)*(int *)(resourceHandle + 0x18) * 4);
    if (0 < *(int *)(resourceHandle + 0x18)) {
      lVar8 = (resourceHandle + 0x20) - (longlong)puVar4;
      do {
        localInt2 = *(int *)(lVar8 + (longlong)puVar4);
        if (localInt2 != -1) {
          localLong1 = *(longlong *)(uVar5 + 0x20) + (longlong)localInt2 * 0x18;
          if ((localLong1 == 0) || (localLong1 = *(longlong *)(localLong1 + 8), localLong1 == 0)) {
            return 0x1c;
          }
          uVar3 = utilityHandleResourceOperation(localLong1,*puVar4,0);
          if ((int)uVar3 != 0) {
            return uVar3;
          }
        }
        uVar6 = (int)uVar7 + 1;
        uVar7 = (ulonglong)uVar6;
        puVar4 = puVar4 + 1;
      } while ((int)uVar6 < *(int *)(resourceHandle + 0x18));
    }
    uVar3 = 0;
  }
  return uVar3;
}



uint64 get_resource_status(void)

{
  longlong localLong1;
  int localInt2;
  longlong inputRegister;
  uint64 uVar3;
  uint32 *puVar4;
  ulonglong uVar5;
  longlong unaff_RSI;
  uint uVar6;
  ulonglong uVar7;
  longlong lVar8;
  
  uVar7 = 0;
  uVar5 = inputRegister - 8;
  if (inputRegister == 0) {
    uVar5 = uVar7;
  }
  puVar4 = (uint32 *)(unaff_RSI + 0x20 + (longlong)*(int *)(unaff_RSI + 0x18) * 4);
  if (0 < *(int *)(unaff_RSI + 0x18)) {
    lVar8 = (unaff_RSI + 0x20) - (longlong)puVar4;
    do {
      localInt2 = *(int *)(lVar8 + (longlong)puVar4);
      if (localInt2 != -1) {
        localLong1 = *(longlong *)(uVar5 + 0x20) + (longlong)localInt2 * 0x18;
        if ((localLong1 == 0) || (localLong1 = *(longlong *)(localLong1 + 8), localLong1 == 0)) {
          return 0x1c;
        }
        uVar3 = utilityHandleResourceOperation(localLong1,*puVar4,0);
        if ((int)uVar3 != 0) {
          return uVar3;
        }
      }
      uVar6 = (int)uVar7 + 1;
      uVar7 = (ulonglong)uVar6;
      puVar4 = puVar4 + 1;
    } while ((int)uVar6 < *(int *)(unaff_RSI + 0x18));
  }
  return 0;
}




// 函数: void initializeSystemResources(void)
void initializeSystemResources(void)

{
  return;
}



uint64 initialize_resource_manager(void)

{
  return 0x1c;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint64 allocate_system_resources(longlong resourceHandle)

{
  uint64 localUInt1;
  int *plocalInt2;
  uint32 *puVar3;
  uint uVar4;
  ulonglong uVar6;
  longlong lStackX_8;
  ulonglong uVar5;
  
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)localUInt1 == 0) {
    uVar5 = 0;
    uVar6 = lStackX_8 - 8;
    if (lStackX_8 == 0) {
      uVar6 = uVar5;
    }
    puVar3 = (uint32 *)(resourceHandle + 0x20 + (longlong)*(int *)(resourceHandle + 0x18) * 8);
    plocalInt2 = (int *)(resourceHandle + 0x20);
    if (0 < *(int *)(resourceHandle + 0x18)) {
      do {
        if ((*plocalInt2 != _DAT_180c4eaa0) || (plocalInt2[1] != _DAT_180c4eaa4)) {
          lStackX_8 = 0;
          localUInt1 = utilityProcessResourceData(uVar6,(int *)(resourceHandle + 0x20) + (longlong)(int)uVar5 * 2,&lStackX_8)
          ;
          if ((int)localUInt1 != 0) {
            return localUInt1;
          }
          if (*(longlong *)(lStackX_8 + 8) == 0) {
            return 0x1c;
          }
          localUInt1 = utilityHandleResourceOperation(*(longlong *)(lStackX_8 + 8),*puVar3,*(byte *)(resourceHandle + 0x1c)
                               );
          if ((int)localUInt1 != 0) {
            return localUInt1;
          }
        }
        uVar4 = (int)uVar5 + 1;
        uVar5 = (ulonglong)uVar4;
        puVar3 = puVar3 + 1;
        plocalInt2 = plocalInt2 + 2;
      } while ((int)uVar4 < *(int *)(resourceHandle + 0x18));
    }
    localUInt1 = 0;
  }
  return localUInt1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint64 release_system_resources(void)

{
  longlong inputRegister;
  uint64 localUInt1;
  int *plocalInt2;
  longlong unaff_RBP;
  uint32 *puVar3;
  uint uVar4;
  ulonglong uVar6;
  longlong lStack0000000000000050;
  ulonglong uVar5;
  
  uVar5 = 0;
  uVar6 = inputRegister - 8;
  if (inputRegister == 0) {
    uVar6 = uVar5;
  }
  puVar3 = (uint32 *)(unaff_RBP + 0x20 + (longlong)*(int *)(unaff_RBP + 0x18) * 8);
  plocalInt2 = (int *)(unaff_RBP + 0x20);
  if (0 < *(int *)(unaff_RBP + 0x18)) {
    do {
      if ((*plocalInt2 != _DAT_180c4eaa0) || (plocalInt2[1] != _DAT_180c4eaa4)) {
        lStack0000000000000050 = 0;
        localUInt1 = utilityProcessResourceData(uVar6,(int *)(unaff_RBP + 0x20) + (longlong)(int)uVar5 * 2,
                              &stack0x00000050);
        if ((int)localUInt1 != 0) {
          return localUInt1;
        }
        if (*(longlong *)(lStack0000000000000050 + 8) == 0) {
          return 0x1c;
        }
        localUInt1 = utilityHandleResourceOperation(*(longlong *)(lStack0000000000000050 + 8),*puVar3,
                              *(byte *)(unaff_RBP + 0x1c));
        if ((int)localUInt1 != 0) {
          return localUInt1;
        }
      }
      uVar4 = (int)uVar5 + 1;
      uVar5 = (ulonglong)uVar4;
      puVar3 = puVar3 + 1;
      plocalInt2 = plocalInt2 + 2;
    } while ((int)uVar4 < *(int *)(unaff_RBP + 0x18));
  }
  return 0;
}




// 函数: void cleanup_temporary_data(void)
void cleanup_temporary_data(void)

{
  return;
}



uint64 get_process_status(void)

{
  return 0x1c;
}



uint64 terminate_process(longlong resourceHandle)

{
  uint64 localUInt1;
  longlong lStackX_8;
  
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)localUInt1 != 0) {
    return localUInt1;
  }
  if (lStackX_8 == 0) {
    lStackX_8 = 0;
  }
  else {
    lStackX_8 = lStackX_8 + -8;
  }
  if (*(longlong *)(lStackX_8 + 0x10) == 0) {
    return 0x1c;
  }
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(*(longlong *)(lStackX_8 + 0x10),1); # 内存块释放函数
}



uint32 get_cpu_usage(void)

{
  longlong inputRegister;
  longlong localLong1;
  
  if (inputRegister == 0) {
    localLong1 = 0;
  }
  else {
    localLong1 = inputRegister + -8;
  }
  if (*(longlong *)(localLong1 + 0x10) == 0) {
    return 0x1c;
  }
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(*(longlong *)(localLong1 + 0x10),1); # 内存块释放函数
}




// 函数: void free_system_memory(void)
void free_system_memory(void)

{
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(); # 内存块释放函数
}




// 函数: void initialize_thread_pool(void)
void initialize_thread_pool(void)

{
  return;
}



uint64 manage_thread_pool(longlong resourceHandle)

{
  uint64 localUInt1;
  longlong lStackX_8;
  
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)localUInt1 != 0) {
    return localUInt1;
  }
  if (lStackX_8 == 0) {
    lStackX_8 = 0;
  }
  else {
    lStackX_8 = lStackX_8 + -8;
  }
  if (*(longlong *)(lStackX_8 + 0x10) == 0) {
    return 0x1c;
  }
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(*(longlong *)(lStackX_8 + 0x10),1); # 内存块释放函数
}



uint32 get_thread_count(void)

{
  longlong inputRegister;
  longlong localLong1;
  
  if (inputRegister == 0) {
    localLong1 = 0;
  }
  else {
    localLong1 = inputRegister + -8;
  }
  if (*(longlong *)(localLong1 + 0x10) == 0) {
    return 0x1c;
  }
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(*(longlong *)(localLong1 + 0x10),1); # 内存块释放函数
}




// 函数: void destroy_thread_pool(void)
void destroy_thread_pool(void)

{
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(); # 内存块释放函数
}




// 函数: void initialize_mutex(void)
void initialize_mutex(void)

{
  return;
}



uint64 lock_mutex(longlong resourceHandle)

{
  uint64 localUInt1;
  longlong localLong2;
  longlong lStackX_8;
  
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)localUInt1 != 0) {
    return localUInt1;
  }
  localLong2 = lStackX_8 + -8;
  if (lStackX_8 == 0) {
    localLong2 = 0;
  }
  if (*(longlong *)(localLong2 + 0x10) == 0) {
    return 0x1c;
  }
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(*(longlong *)(localLong2 + 0x10),1); # 内存块释放函数
}



uint32 unlock_mutex(void)

{
  longlong inputRegister;
  longlong localLong1;
  
  localLong1 = inputRegister + -8;
  if (inputRegister == 0) {
    localLong1 = 0;
  }
  if (*(longlong *)(localLong1 + 0x10) == 0) {
    return 0x1c;
  }
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(*(longlong *)(localLong1 + 0x10),1); # 内存块释放函数
}




// 函数: void destroy_mutex(void)
void destroy_mutex(void)

{
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(); # 内存块释放函数
}




// 函数: void initialize_semaphore(void)
void initialize_semaphore(void)

{
  return;
}



uint64 wait_for_semaphore(longlong resourceHandle)

{
  uint64 localUInt1;
  longlong lStackX_8;
  
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)localUInt1 != 0) {
    return localUInt1;
  }
  if (lStackX_8 == 0) {
    lStackX_8 = 0;
  }
  else {
    lStackX_8 = lStackX_8 + -8;
  }
  if (*(longlong *)(lStackX_8 + 0x10) == 0) {
    return 0x1c;
  }
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(*(longlong *)(lStackX_8 + 0x10),1); # 内存块释放函数
}



uint32 release_semaphore(void)

{
  longlong inputRegister;
  longlong localLong1;
  
  if (inputRegister == 0) {
    localLong1 = 0;
  }
  else {
    localLong1 = inputRegister + -8;
  }
  if (*(longlong *)(localLong1 + 0x10) == 0) {
    return 0x1c;
  }
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(*(longlong *)(localLong1 + 0x10),1); # 内存块释放函数
}




// 函数: void destroy_semaphore(void)
void destroy_semaphore(void)

{
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(); # 内存块释放函数
}




// 函数: void initialize_event(void)
void initialize_event(void)

{
  return;
}



uint64 wait_for_event(longlong resourceHandle)

{
  uint64 localUInt1;
  longlong lStackX_8;
  
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)localUInt1 != 0) {
    return localUInt1;
  }
  if (lStackX_8 == 0) {
    lStackX_8 = 0;
  }
  else {
    lStackX_8 = lStackX_8 + -8;
  }
  if (*(longlong *)(lStackX_8 + 0x10) == 0) {
    return 0x1c;
  }
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(*(longlong *)(lStackX_8 + 0x10),1); # 内存块释放函数
}



uint32 set_event(void)

{
  longlong inputRegister;
  longlong localLong1;
  
  if (inputRegister == 0) {
    localLong1 = 0;
  }
  else {
    localLong1 = inputRegister + -8;
  }
  if (*(longlong *)(localLong1 + 0x10) == 0) {
    return 0x1c;
  }
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(*(longlong *)(localLong1 + 0x10),1); # 内存块释放函数
}




// 函数: void reset_event(void)
void reset_event(void)

{
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(); # 内存块释放函数
}




// 函数: void destroy_event(void)
void destroy_event(void)

{
  return;
}



uint64 create_timer(longlong resourceHandle)

{
  uint64 localUInt1;
  longlong lStackX_8;
  
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)localUInt1 != 0) {
    return localUInt1;
  }
  if (lStackX_8 == 0) {
    lStackX_8 = 0;
  }
  else {
    lStackX_8 = lStackX_8 + -8;
  }
  if (*(longlong *)(lStackX_8 + 0x10) == 0) {
    return 0x1c;
  }
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(*(longlong *)(lStackX_8 + 0x10),1); # 内存块释放函数
}



uint32 start_timer(void)

{
  longlong inputRegister;
  longlong localLong1;
  
  if (inputRegister == 0) {
    localLong1 = 0;
  }
  else {
    localLong1 = inputRegister + -8;
  }
  if (*(longlong *)(localLong1 + 0x10) == 0) {
    return 0x1c;
  }
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(*(longlong *)(localLong1 + 0x10),1); # 内存块释放函数
}




// 函数: void stop_timer(void)
void stop_timer(void)

{
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(); # 内存块释放函数
}




// 函数: void destroy_timer(void)
void destroy_timer(void)

{
  return;
}



uint64 get_timer_elapsed(longlong resourceHandle)

{
  uint64 localUInt1;
  longlong lStackX_8;
  
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)localUInt1 != 0) {
    return localUInt1;
  }
  if (lStackX_8 != 0) {
    lStackX_8 = lStackX_8 + -8;
  }
  if (*(longlong *)(lStackX_8 + 0x10) == 0) {
    return 0x1c;
  }
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(*(longlong *)(lStackX_8 + 0x10),1); # 内存块释放函数
}



uint32 get_system_time(void)

{
  longlong in_stack_00000040;
  
  if (in_stack_00000040 != 0) {
    in_stack_00000040 = in_stack_00000040 + -8;
  }
  if (*(longlong *)(in_stack_00000040 + 0x10) == 0) {
    return 0x1c;
  }
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(*(longlong *)(in_stack_00000040 + 0x10),1); # 内存块释放函数
}




// 函数: void initialize_file_system(void)
void initialize_file_system(void)

{
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(); # 内存块释放函数
}




// 函数: void mount_file_system(void)
void mount_file_system(void)

{
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(); # 内存块释放函数
}




// 函数: void unmount_file_system(void)
void unmount_file_system(void)

{
  return;
}



uint64 open_file_handle(longlong resourceHandle)

{
  uint64 localUInt1;
  longlong lStackX_8;
  
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)localUInt1 != 0) {
    return localUInt1;
  }
  if (lStackX_8 != 0) {
    lStackX_8 = lStackX_8 + -8;
  }
  if (*(longlong *)(lStackX_8 + 0x10) == 0) {
    return 0x1c;
  }
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(*(longlong *)(lStackX_8 + 0x10),1); # 内存块释放函数
}



uint32 close_file_handle(void)

{
  longlong in_stack_00000040;
  
  if (in_stack_00000040 != 0) {
    in_stack_00000040 = in_stack_00000040 + -8;
  }
  if (*(longlong *)(in_stack_00000040 + 0x10) == 0) {
    return 0x1c;
  }
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(*(longlong *)(in_stack_00000040 + 0x10),1); # 内存块释放函数
}




// 函数: void read_file_data(void)
void read_file_data(void)

{
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(); # 内存块释放函数
}




// 函数: void write_file_data(void)
void write_file_data(void)

{
                    // WARNING: Subroutine does not return
  utilityFreeMemoryBlock(); # 内存块释放函数
}




// 函数: void flush_file_buffers(void)
void flush_file_buffers(void)

{
  return;
}




// 函数: void seek_file_position(longlong resourceHandle,uint64 memorySize)
void seek_file_position(longlong resourceHandle,uint64 memorySize)

{
  int localInt1;
  uint64 auStackX_8 [4];
  uint32 localBuffer [2];
  uint64 localUInt;
  uint32 localUInt;
  
  localUInt = *(uint64 *)(resourceHandle + 0x10);
  localUInt = *(uint32 *)(resourceHandle + 0x18);
  localBuffer[0] = 2;
  localInt1 = allocate_memory_resource(memorySize,localBuffer,*(uint32 *)(resourceHandle + 0x1c),auStackX_8);
  if (localInt1 == 0) {
    utilityExecuteMemoryOperation(memorySize,auStackX_8[0]);
  }
  return;
}



// WARNING: Removing unreachable block (ram,0x0001808d7494)
// WARNING: Removing unreachable block (ram,0x0001808d74a4)
// WARNING: Removing unreachable block (ram,0x0001808d74b1)

uint64 get_file_position(longlong resourceHandle)

{
  longlong localLong1;
  uint localUInt2;
  uint uVar3;
  uint64 uVar4;
  uint64 *puVar5;
  int iVar6;
  float fVar7;
  byte auVar8 [16];
  longlong lStackX_8;
  
  uVar4 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  localLong1 = *(longlong *)(lStackX_8 + 8);
  if (localLong1 != 0) {
    fVar7 = *(float *)(resourceHandle + 0x14);
    for (puVar5 = *(uint64 **)(localLong1 + 0x48);
        (*(uint64 **)(localLong1 + 0x48) <= puVar5 &&
        (puVar5 < *(uint64 **)(localLong1 + 0x48) + *(int *)(localLong1 + 0x50))); puVar5 = puVar5 + 1) {
      uVar4 = utilityHandleResourceOperation(*puVar5,fVar7,0);
      if ((int)uVar4 != 0) {
        return uVar4;
      }
    }
    if ((*(char *)(localLong1 + 0x34) == '\0') ||
       ((*(uint *)(*(longlong *)(localLong1 + 0x18) + 0x34) >> 1 & 1) == 0)) {
      uVar3 = *(uint *)(*(longlong *)(localLong1 + 0x18) + 0x34);
      localUInt2 = uVar3 >> 4;
      if ((localUInt2 & 1) == 0) {
        if ((((uVar3 >> 3 & 1) != 0) && (iVar6 = (int)fVar7, iVar6 != -0x80000000)) &&
           ((float)iVar6 != fVar7)) {
          auVar8._4_4_ = fVar7;
          auVar8._0_4_ = fVar7;
          auVar8._8_8_ = 0;
          uVar3 = movmskps(localUInt2,auVar8);
          fVar7 = (float)(int)(iVar6 - (uVar3 & 1));
        }
        fVar7 = (float)calculate_resource_size(*(longlong *)(localLong1 + 0x18),fVar7);
        if (((*(char *)(localLong1 + 0x34) == '\0') ||
            ((*(uint *)(*(longlong *)(localLong1 + 0x18) + 0x34) >> 1 & 1) == 0)) &&
           (fVar7 != *(float *)(localLong1 + 0x20))) {
          *(float *)(localLong1 + 0x20) = fVar7;
          utilityPrepareResourceAccess(localLong1);
          *(byte *)(localLong1 + 0x35) = 0;
        }
      }
    }
    return 0;
  }
  return 0x1c;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

int get_file_size(longlong resourceHandle)

{
  int localInt1;
  longlong localLong2;
  byte auStackX_8 [8];
  byte localBuffer [72];
  
  localLong2 = 0;
  if (0 < *(int *)(resourceHandle + 0x20)) {
    localLong2 = *(longlong *)(resourceHandle + 0x18);
  }
  localInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x4c),auStackX_8);
  if (localInt1 == 0) {
    localInt1 = *(int *)(resourceHandle + 0x10);
    if (0x38 < *(int *)(resourceHandle + 0x10)) {
      localInt1 = 0x38;
    }
                    // WARNING: Subroutine does not return
    memcpy(localBuffer,resourceHandle + 0x10,(longlong)localInt1);
  }
  if (localLong2 != 0) {
                    // WARNING: Subroutine does not return
    utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),localLong2,&utilitySystemDataBuffer,0xb8,1);
  }
  return localInt1;
}




// 函数: void truncate_file(longlong resourceHandle,uint64 memorySize)
void truncate_file(longlong resourceHandle,uint64 memorySize)

{
  uint64 uStackX_8;
  int alocalInt [2];
  longlong lStack_50;
  
  alocalInt[0] = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&uStackX_8);
  if (alocalInt[0] == 0) {
    lStack_50 = resourceHandle + 0x18;
    utilityReadMemoryData(memorySize,alocalInt,*(uint32 *)(resourceHandle + 0x14),uStackX_8);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

ulonglong create_directory(longlong resourceHandle,uint64 memorySize)

{
  uint localUInt1;
  ulonglong localUInt2;
  longlong localLong3;
  uint64 uStackX_8;
  uint32 localBuffer [2];
  longlong lStack_50;
  int localInt;
  
  localUInt2 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x24),&uStackX_8);
  if ((int)localUInt2 == 0) {
    localInt = *(int *)(resourceHandle + 0x18);
    if ((0 < localInt) && (*(uint *)(resourceHandle + 0x1c) < 2)) {
      localLong3 = 0;
      if (*(uint *)(resourceHandle + 0x1c) == 0) {
        lStack_50 = *(longlong *)(resourceHandle + 0x10);
        localBuffer[0] = 1;
        localLong3 = lStack_50;
      }
      else {
        lStack_50 = *(longlong *)(resourceHandle + 0x10);
        localBuffer[0] = 2;
      }
      localUInt1 = utilityReadMemoryData(memorySize,localBuffer,*(uint32 *)(resourceHandle + 0x20),uStackX_8);
      localUInt2 = (ulonglong)localUInt1;
      if (localUInt1 == 0) {
        localUInt2 = 0;
      }
      else if (localLong3 != 0) {
        utilityAccessSystemMemory(*(uint64 *)(utilitySystemDataTable + 0x1a0),localLong3,&utilityMemoryDataBuffer,0xe9);
        return localUInt2;
      }
      return localUInt2;
    }
    localUInt2 = 0x1f;
  }
  return localUInt2;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

int delete_file(uint32 resourceHandle)

{
  int in_EAX;
  int localInt1;
  longlong localLong2;
  longlong unaff_RDI;
  uint32 uVar3;
  longlong lStack0000000000000028;
  uint32 uStack0000000000000030;
  
  localLong2 = 0;
  if (in_EAX == 0) {
    lStack0000000000000028 = *(longlong *)(unaff_RDI + 0x10);
    uVar3 = 1;
    localLong2 = lStack0000000000000028;
  }
  else {
    lStack0000000000000028 = *(longlong *)(unaff_RDI + 0x10);
    uVar3 = 2;
  }
  uStack0000000000000030 = resourceHandle;
  localInt1 = utilityReadMemoryData();
  if (localInt1 == 0) {
    localInt1 = 0;
  }
  else if (localLong2 != 0) {
    utilityAccessSystemMemory(*(uint64 *)(utilitySystemDataTable + 0x1a0),localLong2,&utilityMemoryDataBuffer,0xe9,uVar3);
    return localInt1;
  }
  return localInt1;
}



uint64 remove_directory(void)

{
  return 0;
}



uint64 list_directory_contents(void)

{
  return 0x1f;
}




// 函数: void create_symbolic_link(longlong resourceHandle,longlong memorySize)
void create_symbolic_link(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = utilityProcessDataBuffer(*(uint64 *)(memorySize + 0x78),*(uint32 *)(resourceHandle + 0x10),
                        resourceHandle + 0x14,resourceHandle + 0x20,resourceHandle + 0x2c,resourceHandle + 0x38);
  if ((localInt1 == 0) &&
     (localInt1 = initialize_resource_table((longlong)*(int *)(resourceHandle + 0x10) * 0x44 +
                                  *(longlong *)(memorySize + 0x90) + 0x554,resourceHandle + 0x14), localInt1 == 0)
     ) {
    if ((*(char *)(resourceHandle + 0x50) != '\0') &&
       (localInt1 = setup_resource_mapping((longlong)*(int *)(resourceHandle + 0x10) * 0x44 +
                                    *(longlong *)(memorySize + 0x90) + 0x554,resourceHandle + 0x44),
       localInt1 != 0)) {
      return;
    }
    activate_resource_handlers((longlong)*(int *)(resourceHandle + 0x10) * 0x44 +
                        *(longlong *)(memorySize + 0x90) + 0x554,*(byte *)(resourceHandle + 0x50));
  }
  return;
}




// 函数: void resolve_symbolic_link(longlong resourceHandle,longlong memorySize)
void resolve_symbolic_link(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = utilityValidateDataBuffer(*(uint64 *)(memorySize + 0x78),*(uint32 *)(resourceHandle + 0x10));
  if (localInt1 == 0) {
    register_resource_callbacks(*(uint64 *)(memorySize + 0x90),*(uint32 *)(resourceHandle + 0x10));
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint64 get_file_attributes(longlong resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  int *plocalInt2;
  uint32 *puVar3;
  int localInt4;
  
  localInt4 = 0;
  puVar3 = (uint32 *)(resourceHandle + 0x18 + (longlong)*(int *)(resourceHandle + 0x10) * 8);
  plocalInt2 = (int *)(resourceHandle + 0x18);
  if (0 < *(int *)(resourceHandle + 0x10)) {
    do {
      if (((*plocalInt2 != _DAT_180c4eaa0) || (plocalInt2[1] != _DAT_180c4eaa4)) &&
         (localUInt1 = utilityParseDataStructure(memorySize + 0x60,(int *)(resourceHandle + 0x18) + (longlong)localInt4 * 2,*puVar3
                                ,*(byte *)(resourceHandle + 0x14)), (int)localUInt1 != 0)) {
        return localUInt1;
      }
      localInt4 = localInt4 + 1;
      puVar3 = puVar3 + 1;
      plocalInt2 = plocalInt2 + 2;
    } while (localInt4 < *(int *)(resourceHandle + 0x10));
  }
  return 0;
}




// 函数: void set_file_attributes(longlong resourceHandle,longlong memorySize)
void set_file_attributes(longlong resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  int localInt2;
  longlong *plocalLong3;
  longlong *plVar4;
  longlong *plVar5;
  uint64 auStackX_18 [2];
  
  plVar5 = (longlong *)0x0;
  auStackX_18[0] = 0;
  localInt2 = utilityInitializeResource(auStackX_18);
  if ((localInt2 == 0) && (localInt2 = validateMemoryAccess(*(uint64 *)(memorySize + 0x90)), localInt2 == 0)) {
    plVar4 = (longlong *)(*(longlong *)(memorySize + 0x50) + -8);
    if (*(longlong *)(memorySize + 0x50) == 0) {
      plVar4 = plVar5;
    }
    plocalLong1 = plVar5;
    if (plVar4 != (longlong *)0x0) {
      plocalLong1 = plVar4 + 1;
    }
    do {
      if (plocalLong1 == (longlong *)(memorySize + 0x50)) {
        if (*(char *)(resourceHandle + 0x10) != '\0') {
          release_memory_resources(memorySize);
        }
        break;
      }
      plVar4 = plocalLong1;
      if (plocalLong1 != (longlong *)(memorySize + 0x50)) {
        plocalLong3 = (longlong *)(*plocalLong1 + -8);
        if (*plocalLong1 == 0) {
          plocalLong3 = plVar5;
        }
        plVar4 = plVar5;
        if (plocalLong3 != (longlong *)0x0) {
          plVar4 = plocalLong3 + 1;
        }
      }
      plocalLong3 = plocalLong1 + 2;
      if (plocalLong1 == (longlong *)0x0) {
        plocalLong3 = (longlong *)&DAT_00000018;
      }
      plocalLong1 = plVar4;
    } while ((*plocalLong3 == 0) || (localInt2 = utilityCheckResourceAvailability(memorySize), localInt2 == 0));
  }
                    // WARNING: Subroutine does not return
  utilityCleanupResource(auStackX_18);
}



uint64 get_file_permissions(longlong resourceHandle)

{
  uint64 localUInt1;
  longlong alStackX_8 [4];
  
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),alStackX_8);
  if ((int)localUInt1 == 0) {
    *(uint32 *)(*(longlong *)(alStackX_8[0] + 0x10) + 0x50) = *(uint32 *)(resourceHandle + 0x18);
    if ((*(longlong *)(alStackX_8[0] + 8) != 0) && (localUInt1 = utilityGetResourceCapability(), (int)localUInt1 != 0)) {
      return localUInt1;
    }
    localUInt1 = 0;
  }
  return localUInt1;
}




// 函数: void set_file_permissions(longlong resourceHandle,longlong memorySize)
void set_file_permissions(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  uint64 uStackX_8;
  
  if (*(int *)(resourceHandle + 0x2c) == 0) {
    localInt1 = utilityExtractResourceInfo(memorySize,resourceHandle + 0x1c,&uStackX_8);
    if (localInt1 == 0) {
      localInt1 = validate_resource_handle(uStackX_8,resourceHandle + 0x2c);
      if (localInt1 == 0) goto LAB_1808918d2;
    }
    return;
  }
LAB_1808918d2:
                    // WARNING: Subroutine does not return
  utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
}




// 函数: void get_file_owner(longlong resourceHandle,longlong memorySize)
void get_file_owner(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  longlong lStackX_8;
  
  if (*(int *)(resourceHandle + 0x2c) == 0) {
    localInt1 = utilityAnalyzeResourceData(memorySize,resourceHandle + 0x1c,&lStackX_8);
    if (localInt1 != 0) {
      return;
    }
    localInt1 = validate_resource_handle(*(uint64 *)(lStackX_8 + 0xd0),resourceHandle + 0x2c);
    if (localInt1 != 0) {
      return;
    }
  }
  utilityAcquireResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
  return;
}




// 函数: void set_file_owner(longlong resourceHandle,longlong memorySize)
void set_file_owner(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  longlong lStackX_8;
  
  localInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if (localInt1 == 0) {
    *(uint32 *)(resourceHandle + 0x18) = *(uint32 *)(lStackX_8 + 0x30);
    *(uint32 *)(resourceHandle + 0x1c) = *(uint32 *)(lStackX_8 + 0x34);
    utilityAcquireResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
  }
  return;
}




// 函数: void get_file_timestamp(longlong resourceHandle,longlong memorySize)
void get_file_timestamp(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  uint64 uStackX_8;
  
  localInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&uStackX_8);
  if (localInt1 == 0) {
    localInt1 = utilityProcessResourceAttribute(uStackX_8,resourceHandle + 0x18);
    if (localInt1 == 0) {
      utilityAcquireResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
    }
  }
  return;
}




// 函数: void set_file_timestamp(longlong resourceHandle,longlong memorySize)
void set_file_timestamp(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  uint64 uStackX_8;
  
  if (*(int *)(resourceHandle + 0x2c) == 0) {
    localInt1 = utilityGenerateResourceReport(memorySize,resourceHandle + 0x1c,&uStackX_8);
    if (localInt1 == 0) {
      localInt1 = validate_resource_handle(uStackX_8,resourceHandle + 0x2c);
      if (localInt1 == 0) goto LAB_180891a52;
    }
    return;
  }
LAB_180891a52:
                    // WARNING: Subroutine does not return
  utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
}



uint64 check_file_access(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  uint64 localUInt2;
  longlong lStackX_8;
  
  localUInt2 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)localUInt2 == 0) {
    if (*(int *)(lStackX_8 + 0x34) != 0) {
      return 0x2e;
    }
    localInt1 = *(int *)(lStackX_8 + 0x28);
    *(int *)(lStackX_8 + 0x28) = localInt1 + 1;
    if (localInt1 == 0) {
                    // WARNING: Subroutine does not return
      utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
    }
    localUInt2 = 0;
  }
  return localUInt2;
}




// 函数: void lock_file(longlong resourceHandle,longlong memorySize)
void lock_file(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  longlong lStackX_8;
  
  localInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if (localInt1 == 0) {
    *(uint32 *)(lStackX_8 + 0x30) = 0;
                    // WARNING: Subroutine does not return
    utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
  }
  return;
}



uint64 unlock_file(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  uint64 localUInt2;
  longlong lStackX_8;
  
  localUInt2 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)localUInt2 == 0) {
    if (*(int *)(lStackX_8 + 0x34) != 0) {
      return 0x2e;
    }
    localInt1 = *(int *)(lStackX_8 + 0x28);
    if (localInt1 < 0) {
      return 0x1c;
    }
    if (localInt1 == 0) {
      return 0x4c;
    }
    *(int *)(lStackX_8 + 0x28) = localInt1 + -1;
    if (localInt1 == 1) {
                    // WARNING: Subroutine does not return
      utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
    }
    localUInt2 = 0;
  }
  return localUInt2;
}



uint64 check_file_lock(longlong resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  longlong lStackX_8;
  
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)localUInt1 == 0) {
    if (*(longlong *)(lStackX_8 + 8) == 0) {
      return 0x4c;
    }
    *(uint64 *)(resourceHandle + 0x18) = *(uint64 *)(*(longlong *)(lStackX_8 + 8) + 0x78);
    localUInt1 = utilityAcquireResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
  }
  return localUInt1;
}



uint64 get_file_lock_info(longlong resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  longlong lStackX_8;
  
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)localUInt1 != 0) {
    return localUInt1;
  }
  if (*(char *)(lStackX_8 + 0x2c) != '\0') {
    return 0x4e;
  }
  *(byte *)(lStackX_8 + 0x2c) = 1;
                    // WARNING: Subroutine does not return
  utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
}




// 函数: void compress_file(longlong resourceHandle,longlong memorySize)
void compress_file(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  longlong lStackX_8;
  
  localInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if (localInt1 == 0) {
    *(byte *)(lStackX_8 + 0x29) = *(byte *)(resourceHandle + 0x18);
                    // WARNING: Subroutine does not return
    utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
  }
  return;
}




// 函数: void decompress_file(longlong resourceHandle,longlong memorySize)
void decompress_file(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  longlong lStackX_8;
  
  localInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if (localInt1 == 0) {
    *(byte *)(lStackX_8 + 0x28) = *(byte *)(resourceHandle + 0x18);
                    // WARNING: Subroutine does not return
    utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
  }
  return;
}



uint64 calculate_file_hash(longlong resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  uint uStackX_8;
  uint32 uStackX_c;
  
  uStackX_8 = *(uint *)(resourceHandle + 0x18);
  if ((uStackX_8 & 0x7f800000) == 0x7f800000) {
    return 0x1d;
  }
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&uStackX_8);
  if ((int)localUInt1 == 0) {
    *(uint32 *)(CONCAT44(uStackX_c,uStackX_8) + 0x24) = *(uint32 *)(resourceHandle + 0x18);
                    // WARNING: Subroutine does not return
    utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
  }
  return localUInt1;
}



uint64 verify_file_integrity(longlong resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  longlong lStackX_8;
  
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)localUInt1 != 0) {
    return localUInt1;
  }
  if (*(char *)(lStackX_8 + 0x2c) == '\0') {
    return 0x4f;
  }
  *(byte *)(lStackX_8 + 0x2c) = 0;
                    // WARNING: Subroutine does not return
  utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void encrypt_file(longlong resourceHandle,longlong memorySize)
void encrypt_file(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  int localInt2;
  longlong localLong3;
  longlong lVar4;
  uint uVar5;
  longlong lStackX_8;
  longlong lStackX_18;
  
  localInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_18);
  if (((localInt1 != 0) || (localInt1 = utilityInitializeResourceEnvironment(&lStackX_8), localInt1 != 0)) ||
     (localInt1 = utilityConfigureResourceSettings(lStackX_8,memorySize,*(uint64 *)(lStackX_18 + 8)), localInt1 != 0)) {
    return;
  }
  localLong3 = 0;
  lVar4 = lStackX_8 + 8;
  if (lStackX_8 == 0) {
    lVar4 = localLong3;
  }
  localInt1 = validate_resource_handle(lVar4,resourceHandle + 0x18);
  if (localInt1 != 0) {
    return;
  }
  uVar5 = (int)*(uint *)(lStackX_18 + 0x2c) >> 0x1f;
  localInt2 = (*(uint *)(lStackX_18 + 0x2c) ^ uVar5) - uVar5;
  localInt1 = *(int *)(lStackX_18 + 0x28) + 1;
  if (localInt2 < localInt1) {
    localInt2 = (int)((float)localInt2 * 1.5);
    if (localInt1 <= localInt2) {
      localInt1 = localInt2;
    }
    if (localInt1 < 8) {
      localInt1 = 8;
    }
    if (localInt1 < *(int *)(lStackX_18 + 0x28)) goto LAB_180891fc0;
    if (localInt1 != 0) {
      if ((0x3ffffffe < localInt1 * 8 - 1U) ||
         (localLong3 = utilityAccessSystemResource(*(uint64 *)(utilitySystemDataTable + 0x1a0),localInt1 * 8,&utilityMemoryDataBuffer,
                                0xf4,0,0,1), localLong3 == 0)) goto LAB_180891fc0;
      if (*(int *)(lStackX_18 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
        memcpy(localLong3,*(uint64 *)(lStackX_18 + 0x20),(longlong)*(int *)(lStackX_18 + 0x28) << 3);
      }
    }
    if ((0 < *(int *)(lStackX_18 + 0x2c)) && (*(longlong *)(lStackX_18 + 0x20) != 0)) {
                    // WARNING: Subroutine does not return
      utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),*(longlong *)(lStackX_18 + 0x20),
                    &utilityMemoryDataBuffer,0x100,1);
    }
    *(longlong *)(lStackX_18 + 0x20) = localLong3;
    *(int *)(lStackX_18 + 0x2c) = localInt1;
  }
  *(longlong *)(*(longlong *)(lStackX_18 + 0x20) + (longlong)*(int *)(lStackX_18 + 0x28) * 8) =
       lStackX_8;
  *(int *)(lStackX_18 + 0x28) = *(int *)(lStackX_18 + 0x28) + 1;
LAB_180891fc0:
                    // WARNING: Subroutine does not return
  utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void decrypt_file(uint64 resourceHandle,uint64 memorySize)
void decrypt_file(uint64 resourceHandle,uint64 memorySize)

{
  int localInt1;
  int localInt2;
  longlong localLong3;
  longlong lVar4;
  uint uVar5;
  longlong unaff_RBP;
  longlong unaff_R14;
  longlong in_stack_00000060;
  longlong in_stack_00000070;
  
  localInt1 = utilityConfigureResourceSettings(resourceHandle,memorySize,*(uint64 *)(in_stack_00000070 + 8));
  if (localInt1 != 0) {
    return;
  }
  localLong3 = 0;
  lVar4 = in_stack_00000060 + 8;
  if (in_stack_00000060 == 0) {
    lVar4 = localLong3;
  }
  localInt1 = validate_resource_handle(lVar4,unaff_RBP + 0x18);
  if (localInt1 != 0) {
    return;
  }
  uVar5 = (int)*(uint *)(in_stack_00000070 + 0x2c) >> 0x1f;
  localInt2 = (*(uint *)(in_stack_00000070 + 0x2c) ^ uVar5) - uVar5;
  localInt1 = *(int *)(in_stack_00000070 + 0x28) + 1;
  if (localInt2 < localInt1) {
    localInt2 = (int)((float)localInt2 * 1.5);
    if (localInt1 <= localInt2) {
      localInt1 = localInt2;
    }
    if (localInt1 < 8) {
      localInt1 = 8;
    }
    if (localInt1 < *(int *)(in_stack_00000070 + 0x28)) goto LAB_180891fc0;
    if (localInt1 != 0) {
      if ((0x3ffffffe < localInt1 * 8 - 1U) ||
         (localLong3 = utilityAccessSystemResource(*(uint64 *)(utilitySystemDataTable + 0x1a0),localInt1 * 8,&utilityMemoryDataBuffer,
                                0xf4,0), localLong3 == 0)) goto LAB_180891fc0;
      if (*(int *)(in_stack_00000070 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
        memcpy(localLong3,*(uint64 *)(in_stack_00000070 + 0x20),
               (longlong)*(int *)(in_stack_00000070 + 0x28) << 3);
      }
    }
    if ((0 < *(int *)(in_stack_00000070 + 0x2c)) && (*(longlong *)(in_stack_00000070 + 0x20) != 0))
    {
                    // WARNING: Subroutine does not return
      utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),*(longlong *)(in_stack_00000070 + 0x20),
                    &utilityMemoryDataBuffer,0x100,1);
    }
    *(longlong *)(in_stack_00000070 + 0x20) = localLong3;
    *(int *)(in_stack_00000070 + 0x2c) = localInt1;
  }
  *(longlong *)
   (*(longlong *)(in_stack_00000070 + 0x20) + (longlong)*(int *)(in_stack_00000070 + 0x28) * 8) =
       in_stack_00000060;
  *(int *)(in_stack_00000070 + 0x28) = *(int *)(in_stack_00000070 + 0x28) + 1;
LAB_180891fc0:
                    // WARNING: Subroutine does not return
  utilityReleaseResourceHandle(*(uint64 *)(unaff_R14 + 0x98));
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void utilityStartResourceService(void)
void utilityStartResourceService(void)

{
  int localInt1;
  int localInt2;
  longlong inputRegister;
  longlong localLong3;
  longlong lVar4;
  uint uVar5;
  longlong baseRegister;
  longlong unaff_R14;
  uint64 in_stack_00000060;
  
  localLong3 = 0;
  lVar4 = inputRegister + 8;
  if (inputRegister == 0) {
    lVar4 = localLong3;
  }
  localInt1 = validate_resource_handle(lVar4);
  if (localInt1 != 0) {
    return;
  }
  uVar5 = (int)*(uint *)(baseRegister + 0x2c) >> 0x1f;
  localInt2 = (*(uint *)(baseRegister + 0x2c) ^ uVar5) - uVar5;
  localInt1 = *(int *)(baseRegister + 0x28) + 1;
  if (localInt2 < localInt1) {
    localInt2 = (int)((float)localInt2 * 1.5);
    if (localInt1 <= localInt2) {
      localInt1 = localInt2;
    }
    if (localInt1 < 8) {
      localInt1 = 8;
    }
    if (localInt1 < *(int *)(baseRegister + 0x28)) goto LAB_180891fc0;
    if (localInt1 != 0) {
      if (0x3ffffffe < localInt1 * 8 - 1U) goto LAB_180891fc0;
      localLong3 = utilityAccessSystemResource(*(uint64 *)(utilitySystemDataTable + 0x1a0),localInt1 * 8,&utilityMemoryDataBuffer,0xf4,0)
      ;
      if (localLong3 == 0) goto LAB_180891fc0;
      if (*(int *)(baseRegister + 0x28) != 0) {
                    // WARNING: Subroutine does not return
        memcpy(localLong3,*(uint64 *)(baseRegister + 0x20),(longlong)*(int *)(baseRegister + 0x28) << 3);
      }
    }
    if ((0 < *(int *)(baseRegister + 0x2c)) && (*(longlong *)(baseRegister + 0x20) != 0)) {
                    // WARNING: Subroutine does not return
      utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),*(longlong *)(baseRegister + 0x20),
                    &utilityMemoryDataBuffer,0x100,1);
    }
    *(longlong *)(baseRegister + 0x20) = localLong3;
    *(int *)(baseRegister + 0x2c) = localInt1;
  }
  *(uint64 *)(*(longlong *)(baseRegister + 0x20) + (longlong)*(int *)(baseRegister + 0x28) * 8) =
       in_stack_00000060;
  *(int *)(baseRegister + 0x28) = *(int *)(baseRegister + 0x28) + 1;
LAB_180891fc0:
                    // WARNING: Subroutine does not return
  utilityReleaseResourceHandle(*(uint64 *)(unaff_R14 + 0x98));
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void utilityInitializeResourceComponent(int resourceHandle,int memorySize)
void utilityInitializeResourceComponent(int resourceHandle,int memorySize)

{
  int in_EAX;
  int localInt1;
  longlong baseRegister;
  longlong unaff_RSI;
  int localInt2;
  longlong unaff_R14;
  uint64 in_stack_00000060;
  
  localInt2 = resourceHandle + 1;
  if (in_EAX - memorySize < localInt2) {
    localInt1 = (int)((float)(in_EAX - memorySize) * 1.5);
    if (localInt2 <= localInt1) {
      localInt2 = localInt1;
    }
    if (localInt2 < 8) {
      localInt2 = 8;
    }
    if (localInt2 < resourceHandle) goto LAB_180891fc0;
    if (localInt2 != 0) {
      if (0x3ffffffe < localInt2 * 8 - 1U) goto LAB_180891fc0;
      unaff_RSI = utilityAccessSystemResource(*(uint64 *)(utilitySystemDataTable + 0x1a0),localInt2 * 8,&utilityMemoryDataBuffer,
                                0xf4);
      if (unaff_RSI == 0) goto LAB_180891fc0;
      if (*(int *)(baseRegister + 0x28) != 0) {
                    // WARNING: Subroutine does not return
        memcpy(unaff_RSI,*(uint64 *)(baseRegister + 0x20),(longlong)*(int *)(baseRegister + 0x28) << 3
              );
      }
    }
    if ((0 < *(int *)(baseRegister + 0x2c)) && (*(longlong *)(baseRegister + 0x20) != 0)) {
                    // WARNING: Subroutine does not return
      utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),*(longlong *)(baseRegister + 0x20),
                    &utilityMemoryDataBuffer,0x100,1);
    }
    *(longlong *)(baseRegister + 0x20) = unaff_RSI;
    *(int *)(baseRegister + 0x2c) = localInt2;
  }
  *(uint64 *)(*(longlong *)(baseRegister + 0x20) + (longlong)*(int *)(baseRegister + 0x28) * 8) =
       in_stack_00000060;
  *(int *)(baseRegister + 0x28) = *(int *)(baseRegister + 0x28) + 1;
LAB_180891fc0:
                    // WARNING: Subroutine does not return
  utilityReleaseResourceHandle(*(uint64 *)(unaff_R14 + 0x98));
}




// 函数: void utilityResetResourceSystem(void)
void utilityResetResourceSystem(void)

{
  return;
}




// 函数: void utilityClearResourceCache(void)
void utilityClearResourceCache(void)

{
  return;
}




// 函数: void utilityFlushResourceBuffers(void)
void utilityFlushResourceBuffers(void)

{
  return;
}




// 函数: void utilityProcessResourceRequest(longlong resourceHandle,longlong memorySize)
void utilityProcessResourceRequest(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  uint64 uStackX_8;
  
  localInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&uStackX_8);
  if (localInt1 == 0) {
    localInt1 = query_resource_status(uStackX_8);
    if (localInt1 < 1) {
      localInt1 = check_resource_availability(uStackX_8);
      *(uint *)(resourceHandle + 0x18) = (uint)(localInt1 < 1);
    }
    else {
      localInt1 = check_resource_availability(uStackX_8);
      if (localInt1 < 1) {
        *(uint32 *)(resourceHandle + 0x18) = 2;
      }
      else {
        localInt1 = utilityProcessResourceAttribute(uStackX_8,resourceHandle + 0x18);
        if (localInt1 != 0) {
          return;
        }
      }
    }
    utilityAcquireResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
  }
  return;
}




// 函数: void utilityHandleResourceCallback(void)
void utilityHandleResourceCallback(void)

{
  int localInt1;
  longlong unaff_RBP;
  longlong unaff_RSI;
  uint64 stackParameter1;
  
  localInt1 = query_resource_status(stackParameter1);
  if (localInt1 < 1) {
    localInt1 = check_resource_availability(stackParameter1);
    *(uint *)(unaff_RSI + 0x18) = (uint)(localInt1 < 1);
  }
  else {
    localInt1 = check_resource_availability(stackParameter1);
    if (localInt1 < 1) {
      *(uint32 *)(unaff_RSI + 0x18) = 2;
    }
    else {
      localInt1 = utilityProcessResourceAttribute(stackParameter1,unaff_RSI + 0x18);
      if (localInt1 != 0) {
        return;
      }
    }
  }
  utilityAcquireResourceHandle(*(uint64 *)(unaff_RBP + 0x98));
  return;
}




// 函数: void utilityMonitorResourceActivity(void)
void utilityMonitorResourceActivity(void)

{
  return;
}




// 函数: void utilityManageResourceLifecycle(longlong resourceHandle,longlong memorySize)
void utilityManageResourceLifecycle(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  uint64 uStackX_8;
  
  localInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&uStackX_8);
  if (localInt1 == 0) {
    localInt1 = func_0x0001808c8470(uStackX_8);
    if (localInt1 == 0) {
                    // WARNING: Subroutine does not return
      utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
    }
  }
  return;
}




// 函数: void utilityControlResourceAccess(longlong resourceHandle,longlong memorySize)
void utilityControlResourceAccess(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  byte auStackX_8 [8];
  
  localInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),auStackX_8);
  if (localInt1 == 0) {
                    // WARNING: Subroutine does not return
    utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
  }
  return;
}




// 函数: void utilityOptimizeResourceUsage(longlong resourceHandle,longlong memorySize)
void utilityOptimizeResourceUsage(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  uint64 uStackX_8;
  
  localInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&uStackX_8);
  if (localInt1 == 0) {
    localInt1 = func_0x0001808c7d30(uStackX_8);
    if (localInt1 == 0) {
                    // WARNING: Subroutine does not return
      utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
    }
  }
  return;
}



uint64 utilityQueryResourceStatus(longlong resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  longlong lStackX_8;
  
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)localUInt1 == 0) {
    if (lStackX_8 != 0) {
      lStackX_8 = lStackX_8 + -8;
    }
    if (*(longlong *)(lStackX_8 + 0x10) == 0) {
      return 0x4c;
    }
    *(uint64 *)(resourceHandle + 0x18) =
         *(uint64 *)(*(longlong *)(*(longlong *)(lStackX_8 + 0x10) + 0x2b0) + 0x78);
    localUInt1 = utilityAcquireResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
  }
  return localUInt1;
}



uint64 utilityCheckResourceAvailability(longlong resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  longlong lStackX_8;
  
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)localUInt1 == 0) {
    if (lStackX_8 != 0) {
      lStackX_8 = lStackX_8 + -8;
    }
    if (*(longlong *)(lStackX_8 + 0x18) == 0) {
      return 0x1e;
    }
    localUInt1 = validate_resource_handle(*(uint64 *)(*(longlong *)(lStackX_8 + 0x18) + 0xd0),
                                resourceHandle + 0x18);
    if ((int)localUInt1 == 0) {
      localUInt1 = utilityAcquireResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
    }
  }
  return localUInt1;
}



uint64 utilityGetResourceInformation(longlong resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  uint64 uVar3;
  data *puVar4;
  uint uVar5;
  ulonglong uVar6;
  longlong lVar7;
  ulonglong uVar8;
  ulonglong uVar9;
  longlong lStackX_8;
  
  if (resourceHandle + 0x1c == 0) {
    return 0x1f;
  }
  uVar3 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)uVar3 == 0) {
    uVar6 = 0;
    uVar8 = uVar6;
    if (lStackX_8 != 0) {
      uVar8 = lStackX_8 - 8;
    }
    uVar9 = uVar6;
    if (0 < *(int *)(uVar8 + 0x28)) {
      do {
        lVar7 = *(longlong *)(uVar8 + 0x20) + uVar9;
        localLong1 = *(longlong *)(lVar7 + 0x10);
        if (localLong1 == 0) {
          return 0x1e;
        }
        if (*(int *)(localLong1 + 0x58) < 1) {
          puVar4 = &g_miscTempData3;
        }
        else {
          puVar4 = *(data **)(localLong1 + 0x50);
        }
        localInt2 = func_0x00018076b630(puVar4,resourceHandle + 0x1c);
        if (localInt2 == 0) {
          uVar3 = validate_resource_handle(lVar7,resourceHandle + 0x18);
          if ((int)uVar3 != 0) {
            return uVar3;
          }
          uVar3 = utilityAcquireResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
          return uVar3;
        }
        uVar5 = (int)uVar6 + 1;
        uVar6 = (ulonglong)uVar5;
        uVar9 = uVar9 + 0x18;
      } while ((int)uVar5 < *(int *)(uVar8 + 0x28));
    }
    uVar3 = 0x4a;
  }
  return uVar3;
}



uint64 utilityRetrieveResourceData(void)

{
  longlong localLong1;
  int localInt2;
  uint64 uVar3;
  data *puVar4;
  uint uVar5;
  ulonglong uVar6;
  longlong lVar7;
  ulonglong uVar8;
  ulonglong uVar9;
  longlong unaff_R13;
  longlong unaff_R14;
  longlong in_stack_00000050;
  
  uVar6 = 0;
  uVar8 = uVar6;
  if (in_stack_00000050 != 0) {
    uVar8 = in_stack_00000050 - 8;
  }
  uVar9 = uVar6;
  if (0 < *(int *)(uVar8 + 0x28)) {
    do {
      lVar7 = *(longlong *)(uVar8 + 0x20) + uVar9;
      localLong1 = *(longlong *)(lVar7 + 0x10);
      if (localLong1 == 0) {
        return 0x1e;
      }
      if (*(int *)(localLong1 + 0x58) < 1) {
        puVar4 = &g_miscTempData3;
      }
      else {
        puVar4 = *(data **)(localLong1 + 0x50);
      }
      localInt2 = func_0x00018076b630(puVar4);
      if (localInt2 == 0) {
        uVar3 = validate_resource_handle(lVar7,unaff_R14 + 0x18);
        if ((int)uVar3 != 0) {
          return uVar3;
        }
        uVar3 = utilityAcquireResourceHandle(*(uint64 *)(unaff_R13 + 0x98));
        return uVar3;
      }
      uVar5 = (int)uVar6 + 1;
      uVar6 = (ulonglong)uVar5;
      uVar9 = uVar9 + 0x18;
    } while ((int)uVar5 < *(int *)(uVar8 + 0x28));
  }
  return 0x4a;
}




// 函数: void utilityRefreshResourceCache(void)
void utilityRefreshResourceCache(void)

{
  return;
}




// 函数: void utilityUpdateResourceState(void)
void utilityUpdateResourceState(void)

{
  int localInt1;
  longlong unaff_R13;
  
  localInt1 = validate_resource_handle();
  if (localInt1 == 0) {
    utilityAcquireResourceHandle(*(uint64 *)(unaff_R13 + 0x98));
  }
  return;
}



uint64 utilityProcessResourceTransaction(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  uint64 localUInt2;
  longlong localLong3;
  longlong lStackX_8;
  
  localUInt2 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  localLong3 = lStackX_8;
  if (lStackX_8 != 0) {
    localLong3 = lStackX_8 + -8;
  }
  localInt1 = *(int *)(resourceHandle + 0x18);
  if ((localInt1 < 0) || (*(int *)(localLong3 + 0x28) <= localInt1)) {
    return 0x1f;
  }
  if (*(longlong *)(*(longlong *)(localLong3 + 0x20) + 0x10 + (longlong)localInt1 * 0x18) == 0) {
    return 0x1e;
  }
  localUInt2 = validate_resource_handle(*(longlong *)(localLong3 + 0x20) + (longlong)localInt1 * 0x18,resourceHandle + 0x1c);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  localLong3 = *(longlong *)(memorySize + 0x98);
  if (*(int *)(localLong3 + 0x200) == 0) {
    return 0;
  }
  if ((*(int *)(localLong3 + 0x180) != 0) || (*(int *)(localLong3 + 0x184) != 0)) {
    lStackX_8 = 0;
    utilityPrepareResourceOperation(&lStackX_8);
    if (lStackX_8 == *(longlong *)((longlong)*(int *)(localLong3 + 0x17c) * 8 + 0x180c4f450)) {
      localUInt2 = utilityExecuteResourceOperation(localLong3,resourceHandle);
      goto LAB_18088d83c;
    }
  }
  *(uint *)(resourceHandle + 8) = *(int *)(resourceHandle + 8) + 0xfU & 0xfffffff0;
  localUInt2 = func_0x0001808e64d0(*(uint64 *)(localLong3 + 0x1e0));
LAB_18088d83c:
  if ((int)localUInt2 == 0) {
    return 0;
  }
  return localUInt2;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void utilityExecuteResourceCommand(longlong resourceHandle,longlong memorySize)
void utilityExecuteResourceCommand(longlong resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  byte localBuffer [32];
  longlong lStack_48;
  byte localBuffer [40];
  ulonglong localUInt;
  
  localUInt = _DAT_180bf00a8 ^ (ulonglong)localBuffer;
  localInt2 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStack_48);
  if (localInt2 == 0) {
    if (lStack_48 != 0) {
      lStack_48 = lStack_48 + -8;
    }
    if (*(longlong *)(lStack_48 + 0x18) != 0) {
      localLong1 = *(longlong *)(lStack_48 + 0x18) + 0x30;
      localLong3 = (**(code **)(**(longlong **)(memorySize + 800) + 0x2f0))
                        (*(longlong **)(memorySize + 800),localLong1,1);
      if (localLong3 == 0) {
                    // WARNING: Subroutine does not return
        copyMemoryData(localLong1,localBuffer);
      }
      plVar4 = (longlong *)(localLong3 + 0x58);
      if (((longlong *)*plVar4 != plVar4) || (*(longlong **)(localLong3 + 0x60) != plVar4)) {
                    // WARNING: Subroutine does not return
        utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
      }
    }
  }
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(localUInt ^ (ulonglong)localBuffer);
}




// 函数: void utilityHandleResourceAllocation(longlong *resourceHandle,longlong memorySize)
void utilityHandleResourceAllocation(longlong *resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong unaff_RDI;
  ulonglong in_stack_00000050;
  
  localLong1 = (**(code **)(*resourceHandle + 0x2f0))(resourceHandle,memorySize + 0x30);
  if (localLong1 == 0) {
                    // WARNING: Subroutine does not return
    copyMemoryData(memorySize + 0x30,&stack0x00000028);
  }
  plocalLong2 = (longlong *)(localLong1 + 0x58);
  if (((longlong *)*plocalLong2 == plocalLong2) && (*(longlong **)(localLong1 + 0x60) == plocalLong2)) {
                    // WARNING: Subroutine does not return
    ExecuteSecurityCheck(in_stack_00000050 ^ (ulonglong)&stack0x00000000);
  }
                    // WARNING: Subroutine does not return
  utilityReleaseResourceHandle(*(uint64 *)(unaff_RDI + 0x98));
}




// 函数: void utilityFinalizeResourceOperation(void)
void utilityFinalizeResourceOperation(void)

{
  ulonglong in_stack_00000050;
  
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(in_stack_00000050 ^ (ulonglong)&stack0x00000000);
}



uint64 utilityValidateResourceTransaction(longlong resourceHandle,longlong memorySize)

{
  float fVar1;
  uint32 localUInt2;
  uint32 uVar3;
  uint32 uVar4;
  uint64 uVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  int iVar9;
  longlong localLong10;
  longlong alStackX_8 [2];
  uint uStackX_18;
  float fStackX_20;
  
  localLong10 = 0;
  iVar8 = 0;
  iVar9 = iVar8;
  if ((*(uint *)(resourceHandle + 0x20) & 0x7f800000) == 0x7f800000) {
    iVar9 = 0x1d;
  }
  iVar6 = iVar8;
  if ((*(uint *)(resourceHandle + 0x1c) & 0x7f800000) == 0x7f800000) {
    iVar6 = 0x1d;
  }
  iVar7 = iVar8;
  if ((*(uint *)(resourceHandle + 0x18) & 0x7f800000) == 0x7f800000) {
    iVar7 = 0x1d;
  }
  if ((iVar9 != 0 || iVar6 != 0) || iVar7 != 0) {
    return 0x1f;
  }
  iVar9 = 0;
  if ((*(uint *)(resourceHandle + 0x2c) & 0x7f800000) == 0x7f800000) {
    iVar8 = 0x1d;
  }
  iVar6 = iVar9;
  if ((*(uint *)(resourceHandle + 0x28) & 0x7f800000) == 0x7f800000) {
    iVar6 = 0x1d;
  }
  iVar7 = iVar9;
  if ((*(uint *)(resourceHandle + 0x24) & 0x7f800000) == 0x7f800000) {
    iVar7 = 0x1d;
  }
  if ((iVar8 != 0 || iVar6 != 0) || iVar7 != 0) {
    return 0x1f;
  }
  iVar8 = iVar9;
  if ((*(uint *)(resourceHandle + 0x38) & 0x7f800000) == 0x7f800000) {
    iVar8 = 0x1d;
  }
  iVar6 = iVar9;
  if ((*(uint *)(resourceHandle + 0x34) & 0x7f800000) == 0x7f800000) {
    iVar6 = 0x1d;
  }
  if (((uint)*(float *)(resourceHandle + 0x30) & 0x7f800000) == 0x7f800000) {
    iVar9 = 0x1d;
  }
  if ((iVar8 != 0 || iVar6 != 0) || iVar9 != 0) {
    return 0x1f;
  }
  fVar1 = *(float *)(resourceHandle + 0x44);
  iVar8 = 0;
  uStackX_18 = *(uint *)(resourceHandle + 0x40);
  fStackX_20 = *(float *)(resourceHandle + 0x3c);
  alStackX_8[0] = CONCAT44(alStackX_8[0]._4_4_,fVar1);
  iVar9 = iVar8;
  if (((uint)fVar1 & 0x7f800000) == 0x7f800000) {
    iVar9 = 0x1d;
  }
  iVar6 = iVar8;
  if ((uStackX_18 & 0x7f800000) == 0x7f800000) {
    iVar6 = 0x1d;
  }
  if (((uint)fStackX_20 & 0x7f800000) == 0x7f800000) {
    iVar8 = 0x1d;
  }
  if ((iVar9 == 0 && iVar6 == 0) && iVar8 == 0) {
    if (((*(float *)(resourceHandle + 0x30) == 0.0) && (*(float *)(resourceHandle + 0x34) == 0.0)) &&
       (*(float *)(resourceHandle + 0x38) == 0.0)) {
      return 0x1f;
    }
    if (((fStackX_20 == 0.0) && (*(float *)(resourceHandle + 0x40) == 0.0)) && (fVar1 == 0.0)) {
      return 0x1f;
    }
    uVar5 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),alStackX_8);
    if ((int)uVar5 != 0) {
      return uVar5;
    }
    if (alStackX_8[0] != 0) {
      localLong10 = alStackX_8[0] + -8;
    }
    uVar5 = *(uint64 *)(resourceHandle + 0x20);
    *(uint64 *)(localLong10 + 0x38) = *(uint64 *)(resourceHandle + 0x18);
    *(uint64 *)(localLong10 + 0x40) = uVar5;
    localUInt2 = *(uint32 *)(resourceHandle + 0x2c);
    uVar3 = *(uint32 *)(resourceHandle + 0x30);
    uVar4 = *(uint32 *)(resourceHandle + 0x34);
    *(uint32 *)(localLong10 + 0x48) = *(uint32 *)(resourceHandle + 0x28);
    *(uint32 *)(localLong10 + 0x4c) = localUInt2;
    *(uint32 *)(localLong10 + 0x50) = uVar3;
    *(uint32 *)(localLong10 + 0x54) = uVar4;
    localUInt2 = *(uint32 *)(resourceHandle + 0x3c);
    uVar3 = *(uint32 *)(resourceHandle + 0x40);
    uVar4 = *(uint32 *)(resourceHandle + 0x44);
    *(uint32 *)(localLong10 + 0x58) = *(uint32 *)(resourceHandle + 0x38);
    *(uint32 *)(localLong10 + 0x5c) = localUInt2;
    *(uint32 *)(localLong10 + 0x60) = uVar3;
    *(uint32 *)(localLong10 + 100) = uVar4;
    localLong10 = *(longlong *)(memorySize + 0x98);
    if ((*(int *)(localLong10 + 0x180) != 0) || (*(int *)(localLong10 + 0x184) != 0)) {
      alStackX_8[0] = 0;
      utilityPrepareResourceOperation(alStackX_8);
      if (alStackX_8[0] == *(longlong *)((longlong)*(int *)(localLong10 + 0x17c) * 8 + 0x180c4f450)) {
        uVar5 = utilityExecuteResourceOperation(localLong10,resourceHandle);
        if ((int)uVar5 == 0) {
          return 0;
        }
        return uVar5;
      }
    }
    *(uint *)(resourceHandle + 8) = *(int *)(resourceHandle + 8) + 0xfU & 0xfffffff0;
    uVar5 = func_0x0001808e64d0(*(uint64 *)(localLong10 + 0x1e0));
    if ((int)uVar5 == 0) {
      return 0;
    }
    return uVar5;
  }
  return 0x1f;
}




// 函数: void utilityCompleteResourceProcess(longlong resourceHandle,longlong memorySize)
void utilityCompleteResourceProcess(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  longlong localLong2;
  uint64 uStackX_8;
  
  localInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10));
  if (localInt1 == 0) {
    if (uStackX_8 == 0) {
      localLong2 = 0;
    }
    else {
      localLong2 = uStackX_8 + -8;
    }
    *(uint32 *)(localLong2 + 0x88) = *(uint32 *)(resourceHandle + 0x18);
                    // WARNING: Subroutine does not return
    utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
  }
  return;
}



uint64 utilityHandleResourceResponse(longlong resourceHandle,longlong memorySize)

{
  float fVar1;
  longlong localLong2;
  uint64 uVar3;
  float fVar4;
  longlong lStackX_8;
  longlong alStackX_18 [2];
  
  lStackX_8 = CONCAT44(lStackX_8._4_4_,*(uint *)(resourceHandle + 0x20));
  if ((*(uint *)(resourceHandle + 0x20) & 0x7f800000) == 0x7f800000) {
    return 0x1d;
  }
  uVar3 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),alStackX_18);
  if ((int)uVar3 == 0) {
    if (alStackX_18[0] == 0) {
      alStackX_18[0] = 0;
    }
    else {
      alStackX_18[0] = alStackX_18[0] + -8;
    }
    lStackX_8 = 0;
    uVar3 = utilityProcessResourceData(alStackX_18[0],resourceHandle + 0x18,&lStackX_8);
    if ((int)uVar3 == 0) {
      if (lStackX_8 == 0) {
        return 0x4a;
      }
      localLong2 = *(longlong *)(lStackX_8 + 0x10);
      if (localLong2 == 0) {
        return 0x1e;
      }
      if ((*(byte *)(localLong2 + 0x34) & 0x11) != 0) {
        return 0x1f;
      }
      fVar1 = *(float *)(resourceHandle + 0x20);
      fVar4 = *(float *)(localLong2 + 0x38);
      if ((*(float *)(localLong2 + 0x38) <= fVar1) &&
         (fVar4 = *(float *)(localLong2 + 0x3c), fVar1 <= *(float *)(localLong2 + 0x3c))) {
        fVar4 = fVar1;
      }
      *(float *)(resourceHandle + 0x20) = fVar4;
      *(float *)(lStackX_8 + 4) = fVar4;
                    // WARNING: Subroutine does not return
      utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
    }
  }
  return uVar3;
}



uint64 utilityProcessResourceResult(longlong resourceHandle,longlong memorySize)

{
  float fVar1;
  longlong localLong2;
  uint64 uVar3;
  longlong lStackX_8;
  longlong alStackX_18 [2];
  
  uVar3 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),alStackX_18);
  if ((int)uVar3 == 0) {
    if (alStackX_18[0] == 0) {
      alStackX_18[0] = 0;
    }
    else {
      alStackX_18[0] = alStackX_18[0] + -8;
    }
    lStackX_8 = 0;
    uVar3 = utilityProcessResourceData(alStackX_18[0],resourceHandle + 0x18,&lStackX_8);
    if ((int)uVar3 == 0) {
      if (lStackX_8 == 0) {
        return 0x4a;
      }
      localLong2 = *(longlong *)(lStackX_8 + 0x10);
      if (localLong2 == 0) {
        return 0x1e;
      }
      if ((*(byte *)(localLong2 + 0x34) & 0x11) != 0) {
        return 0x1f;
      }
      uVar3 = utilityAccessResourceAttribute(localLong2,resourceHandle + 0x25,resourceHandle + 0x20);
      if ((int)uVar3 == 0) {
        fVar1 = *(float *)(resourceHandle + 0x20);
        if ((*(float *)(localLong2 + 0x38) <= fVar1) &&
           (fVar1 < *(float *)(localLong2 + 0x3c) || fVar1 == *(float *)(localLong2 + 0x3c))) {
          uVar3 = *(uint64 *)(memorySize + 0x98);
          *(float *)(lStackX_8 + 4) = fVar1;
                    // WARNING: Subroutine does not return
          utilityReleaseResourceHandle(uVar3,resourceHandle);
        }
        uVar3 = 0x1c;
      }
    }
  }
  return uVar3;
}



uint64 utilityExtractResourceOutput(void)

{
  float fVar1;
  longlong localLong2;
  uint64 uVar3;
  longlong unaff_RBP;
  longlong unaff_RDI;
  longlong in_stack_00000040;
  
  if (in_stack_00000040 == 0) {
    return 0x4a;
  }
  localLong2 = *(longlong *)(in_stack_00000040 + 0x10);
  if (localLong2 == 0) {
    return 0x1e;
  }
  if ((*(byte *)(localLong2 + 0x34) & 0x11) != 0) {
    return 0x1f;
  }
  uVar3 = utilityAccessResourceAttribute(localLong2,unaff_RDI + 0x25,unaff_RDI + 0x20);
  if ((int)uVar3 == 0) {
    fVar1 = *(float *)(unaff_RDI + 0x20);
    if ((*(float *)(localLong2 + 0x38) <= fVar1) &&
       (fVar1 < *(float *)(localLong2 + 0x3c) || fVar1 == *(float *)(localLong2 + 0x3c))) {
      uVar3 = *(uint64 *)(unaff_RBP + 0x98);
      *(float *)(in_stack_00000040 + 4) = fVar1;
                    // WARNING: Subroutine does not return
      utilityReleaseResourceHandle(uVar3);
    }
    uVar3 = 0x1c;
  }
  return uVar3;
}



uint64 utilityFormatResourceData(void)

{
  float fVar1;
  longlong localLong2;
  uint64 uVar3;
  longlong baseRegister;
  longlong unaff_RBP;
  longlong unaff_RDI;
  longlong in_stack_00000040;
  
  localLong2 = *(longlong *)(baseRegister + 0x10);
  if (localLong2 == 0) {
    return 0x1e;
  }
  if ((*(byte *)(localLong2 + 0x34) & 0x11) != 0) {
    return 0x1f;
  }
  uVar3 = utilityAccessResourceAttribute(localLong2,unaff_RDI + 0x25,unaff_RDI + 0x20);
  if ((int)uVar3 == 0) {
    fVar1 = *(float *)(unaff_RDI + 0x20);
    if ((*(float *)(localLong2 + 0x38) <= fVar1) &&
       (fVar1 < *(float *)(localLong2 + 0x3c) || fVar1 == *(float *)(localLong2 + 0x3c))) {
      uVar3 = *(uint64 *)(unaff_RBP + 0x98);
      *(float *)(in_stack_00000040 + 4) = fVar1;
                    // WARNING: Subroutine does not return
      utilityReleaseResourceHandle(uVar3);
    }
    uVar3 = 0x1c;
  }
  return uVar3;
}



uint64 utilityValidateResourceOutput(uint32 resourceHandle)

{
  float fVar1;
  uint64 localUInt2;
  longlong baseRegister;
  longlong unaff_RBP;
  longlong unaff_RDI;
  longlong in_stack_00000040;
  
  if ((*(byte *)(baseRegister + 0x34) & 0x11) != 0) {
    return 0x1f;
  }
  localUInt2 = utilityAccessResourceAttribute(resourceHandle,unaff_RDI + 0x25,unaff_RDI + 0x20);
  if ((int)localUInt2 == 0) {
    fVar1 = *(float *)(unaff_RDI + 0x20);
    if ((*(float *)(baseRegister + 0x38) <= fVar1) &&
       (fVar1 < *(float *)(baseRegister + 0x3c) || fVar1 == *(float *)(baseRegister + 0x3c))) {
      localUInt2 = *(uint64 *)(unaff_RBP + 0x98);
      *(float *)(in_stack_00000040 + 4) = fVar1;
                    // WARNING: Subroutine does not return
      utilityReleaseResourceHandle(localUInt2);
    }
    localUInt2 = 0x1c;
  }
  return localUInt2;
}



uint64 utilityConfirmResourceOperation(uint32 resourceHandle)

{
  float fVar1;
  uint64 localUInt2;
  longlong baseRegister;
  longlong unaff_RBP;
  longlong unaff_RDI;
  longlong in_stack_00000040;
  
  localUInt2 = utilityAccessResourceAttribute(resourceHandle,unaff_RDI + 0x25,unaff_RDI + 0x20);
  if ((int)localUInt2 == 0) {
    fVar1 = *(float *)(unaff_RDI + 0x20);
    if ((*(float *)(baseRegister + 0x38) <= fVar1) &&
       (fVar1 < *(float *)(baseRegister + 0x3c) || fVar1 == *(float *)(baseRegister + 0x3c))) {
      localUInt2 = *(uint64 *)(unaff_RBP + 0x98);
      *(float *)(in_stack_00000040 + 4) = fVar1;
                    // WARNING: Subroutine does not return
      utilityReleaseResourceHandle(localUInt2);
    }
    localUInt2 = 0x1c;
  }
  return localUInt2;
}



uint64 utilityCleanupResourceOperation(void)

{
  return 0x1c;
}




// 函数: void utilityResetResourceProcessor(void)
void utilityResetResourceProcessor(void)

{
  return;
}



uint64 utilityAnalyzeResourcePerformance(longlong resourceHandle,longlong memorySize)

{
  float fVar1;
  longlong localLong2;
  longlong localLong3;
  uint64 uVar4;
  longlong lVar5;
  float fVar6;
  uint auStackX_8 [2];
  longlong lStackX_18;
  
  auStackX_8[0] = *(uint *)(resourceHandle + 0x18);
  if ((auStackX_8[0] & 0x7f800000) == 0x7f800000) {
    return 0x1d;
  }
  if (resourceHandle + 0x28 != 0) {
    uVar4 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_18);
    if ((int)uVar4 != 0) {
      return uVar4;
    }
    lVar5 = lStackX_18;
    if (lStackX_18 != 0) {
      lVar5 = lStackX_18 + -8;
    }
    localLong2 = *(longlong *)(lVar5 + 0x18);
    if (localLong2 == 0) {
      return 0x1e;
    }
    auStackX_8[0] = 0;
    uVar4 = utilityCalculateResourceMetrics(memorySize,lVar5,resourceHandle + 0x28,auStackX_8);
    if ((int)uVar4 != 0) {
      return uVar4;
    }
    lVar5 = *(longlong *)(lVar5 + 0x20);
    localLong3 = *(longlong *)(lVar5 + 0x10 + (longlong)(int)auStackX_8[0] * 0x18);
    if ((*(byte *)(localLong3 + 0x34) & 0x11) == 0) {
      fVar1 = *(float *)(resourceHandle + 0x18);
      fVar6 = *(float *)(localLong3 + 0x38);
      if ((*(float *)(localLong3 + 0x38) <= fVar1) &&
         (fVar6 = *(float *)(localLong3 + 0x3c), fVar1 <= *(float *)(localLong3 + 0x3c))) {
        fVar6 = fVar1;
      }
      *(float *)(resourceHandle + 0x18) = fVar6;
      localLong2 = *(longlong *)(localLong2 + 0x90);
      *(float *)(lVar5 + 4 + (longlong)(int)auStackX_8[0] * 0x18) = fVar6;
      *(uint64 *)(resourceHandle + 0x20) = *(uint64 *)(localLong2 + (longlong)(int)auStackX_8[0] * 8);
                    // WARNING: Subroutine does not return
      utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
    }
  }
  return 0x1f;
}



uint64 utilityOptimizeResourcePerformance(longlong resourceHandle,longlong memorySize)

{
  float fVar1;
  longlong localLong2;
  longlong localLong3;
  uint64 uVar4;
  longlong lVar5;
  longlong lVar6;
  int aiStackX_8 [2];
  longlong lStackX_18;
  
  if (resourceHandle + 0x28 != 0) {
    uVar4 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_18);
    if ((int)uVar4 != 0) {
      return uVar4;
    }
    lVar6 = lStackX_18;
    if (lStackX_18 != 0) {
      lVar6 = lStackX_18 + -8;
    }
    localLong2 = *(longlong *)(lVar6 + 0x18);
    if (localLong2 == 0) {
      return 0x1e;
    }
    aiStackX_8[0] = 0;
    uVar4 = utilityCalculateResourceMetrics(memorySize,lVar6,resourceHandle + 0x28,aiStackX_8);
    if ((int)uVar4 != 0) {
      return uVar4;
    }
    lVar5 = (longlong)aiStackX_8[0];
    lVar6 = *(longlong *)(lVar6 + 0x20);
    localLong3 = *(longlong *)(lVar6 + 0x10 + lVar5 * 0x18);
    if ((*(byte *)(localLong3 + 0x34) & 0x11) == 0) {
      uVar4 = utilityAccessResourceAttribute(localLong3,resourceHandle + 0xa8,resourceHandle + 0x18);
      if ((int)uVar4 != 0) {
        return uVar4;
      }
      fVar1 = *(float *)(resourceHandle + 0x18);
      if ((*(float *)(localLong3 + 0x38) <= fVar1) &&
         (fVar1 < *(float *)(localLong3 + 0x3c) || fVar1 == *(float *)(localLong3 + 0x3c))) {
        localLong2 = *(longlong *)(localLong2 + 0x90);
        *(float *)(lVar6 + 4 + lVar5 * 0x18) = fVar1;
        *(uint64 *)(resourceHandle + 0x20) = *(uint64 *)(localLong2 + (longlong)aiStackX_8[0] * 8);
                    // WARNING: Subroutine does not return
        utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
      }
      return 0x1c;
    }
  }
  return 0x1f;
}



uint64 utilityExecuteResourceTask(longlong resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  float fVar1;
  int localInt2;
  longlong localLong3;
  uint64 uVar4;
  longlong lVar5;
  uint64 unaff_RDI;
  float fVar6;
  longlong lStackX_8;
  
  lStackX_8 = CONCAT44(lStackX_8._4_4_,*(uint *)(resourceHandle + 0x20));
  if ((*(uint *)(resourceHandle + 0x20) & 0x7f800000) == 0x7f800000) {
    return 0x1d;
  }
  uVar4 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  lVar5 = lStackX_8;
  if (lStackX_8 != 0) {
    lVar5 = lStackX_8 + -8;
  }
  localInt2 = *(int *)(resourceHandle + 0x18);
  if ((localInt2 < 0) || (*(int *)(lVar5 + 0x28) <= localInt2)) {
    return 0x1f;
  }
  lVar5 = *(longlong *)(lVar5 + 0x20) + (longlong)localInt2 * 0x18;
  localLong3 = *(longlong *)(lVar5 + 0x10);
  if (localLong3 == 0) {
    return 0x1e;
  }
  if ((*(byte *)(localLong3 + 0x34) & 0x11) == 0) {
    fVar1 = *(float *)(resourceHandle + 0x20);
    fVar6 = *(float *)(localLong3 + 0x38);
    if ((*(float *)(localLong3 + 0x38) <= fVar1) &&
       (fVar6 = *(float *)(localLong3 + 0x3c), fVar1 <= *(float *)(localLong3 + 0x3c))) {
      fVar6 = fVar1;
    }
    *(float *)(resourceHandle + 0x20) = fVar6;
    *(float *)(lVar5 + 4) = fVar6;
    uVar4 = validate_resource_handle(lVar5,resourceHandle + 0x1c);
    if ((int)uVar4 != 0) {
      return uVar4;
    }
    lVar5 = *(longlong *)(memorySize + 0x98);
    if ((*(int *)(lVar5 + 0x180) != 0) || (*(int *)(lVar5 + 0x184) != 0)) {
      lStackX_8 = 0;
      utilityPrepareResourceOperation(&lStackX_8,resourceHandle,operationFlags,callbackFunction,unaff_RDI);
      if (lStackX_8 == *(longlong *)((longlong)*(int *)(lVar5 + 0x17c) * 8 + 0x180c4f450)) {
        uVar4 = utilityExecuteResourceOperation(lVar5,resourceHandle);
        if ((int)uVar4 == 0) {
          return 0;
        }
        return uVar4;
      }
    }
    *(uint *)(resourceHandle + 8) = *(int *)(resourceHandle + 8) + 0xfU & 0xfffffff0;
    uVar4 = func_0x0001808e64d0(*(uint64 *)(lVar5 + 0x1e0));
    if ((int)uVar4 == 0) {
      return 0;
    }
    return uVar4;
  }
  return 0x1f;
}



uint64 utilityFinalizeResourceTask(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  int localInt2;
  uint64 uVar3;
  float *pfVar4;
  longlong lVar5;
  ulonglong uVar6;
  float *pfVar7;
  ulonglong uVar8;
  uint uVar9;
  float fVar11;
  float fStackX_8;
  uint32 uStackX_c;
  ulonglong localUInt10;
  
  uVar3 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&fStackX_8);
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  uVar8 = 0;
  uVar6 = CONCAT44(uStackX_c,fStackX_8) - 8;
  if (CONCAT44(uStackX_c,fStackX_8) == 0) {
    uVar6 = uVar8;
  }
  localInt1 = *(int *)(uVar6 + 0x28);
  pfVar7 = (float *)(resourceHandle + 0x20 + (longlong)*(int *)(resourceHandle + 0x18) * 4);
  if (0 < *(int *)(resourceHandle + 0x18)) {
    pfVar4 = pfVar7;
    localUInt10 = uVar8;
    do {
      localInt2 = *(int *)(((resourceHandle + 0x20) - (longlong)pfVar7) + (longlong)pfVar4);
      if (localInt2 != -1) {
        fStackX_8 = *pfVar4;
        if (((uint)fStackX_8 & 0x7f800000) == 0x7f800000) {
          return 0x1d;
        }
        if ((localInt2 < 0) || (localInt1 <= localInt2)) {
          return 0x1f;
        }
        lVar5 = *(longlong *)(uVar6 + 0x20) + (longlong)localInt2 * 0x18;
        if (lVar5 == 0) {
          return 0x1c;
        }
        lVar5 = *(longlong *)(lVar5 + 0x10);
        if (lVar5 == 0) {
          return 0x1e;
        }
        if (*(int *)(lVar5 + 0x30) != 0) {
          return 0x1f;
        }
        fVar11 = *(float *)(lVar5 + 0x38);
        if ((*(float *)(lVar5 + 0x38) <= fStackX_8) &&
           (fVar11 = *(float *)(lVar5 + 0x3c), fStackX_8 <= *(float *)(lVar5 + 0x3c))) {
          fVar11 = fStackX_8;
        }
        *pfVar4 = fVar11;
      }
      uVar9 = (int)localUInt10 + 1;
      localUInt10 = (ulonglong)uVar9;
      pfVar4 = pfVar4 + 1;
    } while ((int)uVar9 < *(int *)(resourceHandle + 0x18));
    if (0 < *(int *)(resourceHandle + 0x18)) {
      lVar5 = (resourceHandle + 0x20) - (longlong)pfVar7;
      do {
        localInt1 = *(int *)((longlong)pfVar7 + lVar5);
        if (localInt1 != -1) {
          *(float *)(*(longlong *)(uVar6 + 0x20) + 4 + (longlong)localInt1 * 0x18) = *pfVar7;
        }
        uVar9 = (int)uVar8 + 1;
        uVar8 = (ulonglong)uVar9;
        pfVar7 = pfVar7 + 1;
      } while ((int)uVar9 < *(int *)(resourceHandle + 0x18));
    }
  }
                    // WARNING: Subroutine does not return
  utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
}



uint64 utilityCompleteResourceCycle(void)

{
  float fVar1;
  int localInt2;
  int localInt3;
  longlong inputRegister;
  float *pfVar4;
  longlong baseRegister;
  longlong lVar5;
  ulonglong uVar6;
  float *pfVar7;
  uint in_R9D;
  uint uVar8;
  longlong unaff_R15;
  float fVar9;
  
  uVar6 = inputRegister - 8;
  if (inputRegister == 0) {
    uVar6 = (ulonglong)in_R9D;
  }
  localInt2 = *(int *)(uVar6 + 0x28);
  pfVar7 = (float *)(baseRegister + 0x20 + (longlong)*(int *)(baseRegister + 0x18) * 4);
  if (0 < *(int *)(baseRegister + 0x18)) {
    pfVar4 = pfVar7;
    uVar8 = in_R9D;
    do {
      localInt3 = *(int *)(((baseRegister + 0x20) - (longlong)pfVar7) + (longlong)pfVar4);
      if (localInt3 != -1) {
        fVar1 = *pfVar4;
        if (((uint)fVar1 & 0x7f800000) == 0x7f800000) {
          return 0x1d;
        }
        if ((localInt3 < 0) || (localInt2 <= localInt3)) {
          return 0x1f;
        }
        lVar5 = *(longlong *)(uVar6 + 0x20) + (longlong)localInt3 * 0x18;
        if (lVar5 == 0) {
          return 0x1c;
        }
        lVar5 = *(longlong *)(lVar5 + 0x10);
        if (lVar5 == 0) {
          return 0x1e;
        }
        if (*(uint *)(lVar5 + 0x30) != in_R9D) {
          return 0x1f;
        }
        fVar9 = *(float *)(lVar5 + 0x38);
        if ((*(float *)(lVar5 + 0x38) <= fVar1) &&
           (fVar9 = *(float *)(lVar5 + 0x3c), fVar1 <= *(float *)(lVar5 + 0x3c))) {
          fVar9 = fVar1;
        }
        *pfVar4 = fVar9;
      }
      uVar8 = uVar8 + 1;
      pfVar4 = pfVar4 + 1;
    } while ((int)uVar8 < *(int *)(baseRegister + 0x18));
    if (0 < *(int *)(baseRegister + 0x18)) {
      lVar5 = (baseRegister + 0x20) - (longlong)pfVar7;
      do {
        localInt2 = *(int *)((longlong)pfVar7 + lVar5);
        if (localInt2 != -1) {
          *(float *)(*(longlong *)(uVar6 + 0x20) + 4 + (longlong)localInt2 * 0x18) = *pfVar7;
        }
        in_R9D = in_R9D + 1;
        pfVar7 = pfVar7 + 1;
      } while ((int)in_R9D < *(int *)(baseRegister + 0x18));
    }
  }
                    // WARNING: Subroutine does not return
  utilityReleaseResourceHandle(*(uint64 *)(unaff_R15 + 0x98));
}




// 函数: void utilityInitializeResourceCycle(void)
void utilityInitializeResourceCycle(void)

{
  return;
}



uint64 utilityStartResourceCycle(void)

{
  return 0x1e;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void utilityProcessResourceCycle(longlong resourceHandle,uint64 memorySize)
void utilityProcessResourceCycle(longlong resourceHandle,uint64 memorySize)

{
  int localInt1;
  longlong localLong2;
  ulonglong uVar3;
  bool bVar4;
  longlong localArray [3];
  longlong lStack_40;
  uint64 localUInt;
  ulonglong localUInt;
  
  localUInt = _DAT_180bf00a8 ^ (ulonglong)localArray;
  localUInt = memorySize;
  localInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),localArray);
  if (localInt1 == 0) {
    bVar4 = localArray[0] == 0;
    localArray[0] = localArray[0] + -8;
    if (bVar4) {
      localArray[0] = 0;
    }
    localLong2 = (longlong)*(int *)(resourceHandle + 0x18);
    uVar3 = localLong2 * 4 + 0xf;
    lStack_40 = resourceHandle + 0x20 + localLong2 * 8;
    if (uVar3 <= (ulonglong)(localLong2 * 4)) {
      uVar3 = 0xffffffffffffff0;
    }
                    // WARNING: Subroutine does not return
    utilityProcessResourceData(localLong2,uVar3 & 0xfffffffffffffff0);
  }
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(localUInt ^ (ulonglong)localArray);
}




// 函数: void utilityManageResourceCycle(longlong resourceHandle,longlong memorySize)
void utilityManageResourceCycle(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  longlong localLong2;
  uint64 uStackX_8;
  
  localInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10));
  if (localInt1 == 0) {
    if (uStackX_8 == 0) {
      localLong2 = 0;
    }
    else {
      localLong2 = uStackX_8 + -8;
    }
    *(byte *)(localLong2 + 0xbc) = *(byte *)(resourceHandle + 0x18);
                    // WARNING: Subroutine does not return
    utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
  }
  return;
}



uint64 utilityExecuteResourceCycleTask(longlong resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  float fVar1;
  uint64 localUInt2;
  longlong localLong3;
  uint64 unaff_RDI;
  longlong lStackX_8;
  
  fVar1 = *(float *)(resourceHandle + 0x18);
  lStackX_8 = CONCAT44(lStackX_8._4_4_,fVar1);
  if (((uint)fVar1 & 0x7f800000) == 0x7f800000) {
    return 0x1d;
  }
  if ((fVar1 < 0.0) || (3.4028235e+38 <= fVar1)) {
    return 0x1f;
  }
  localUInt2 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  if (lStackX_8 == 0) {
    localLong3 = 0;
  }
  else {
    localLong3 = lStackX_8 + -8;
  }
  *(uint32 *)(localLong3 + 0x90) = *(uint32 *)(resourceHandle + 0x18);
  localLong3 = *(longlong *)(memorySize + 0x98);
  if ((*(int *)(localLong3 + 0x180) != 0) || (*(int *)(localLong3 + 0x184) != 0)) {
    lStackX_8 = 0;
    utilityPrepareResourceOperation(&lStackX_8,resourceHandle,operationFlags,callbackFunction,unaff_RDI);
    if (lStackX_8 == *(longlong *)((longlong)*(int *)(localLong3 + 0x17c) * 8 + 0x180c4f450)) {
      localUInt2 = utilityExecuteResourceOperation(localLong3,resourceHandle);
      if ((int)localUInt2 == 0) {
        return 0;
      }
      return localUInt2;
    }
  }
  *(uint *)(resourceHandle + 8) = *(int *)(resourceHandle + 8) + 0xfU & 0xfffffff0;
  localUInt2 = func_0x0001808e64d0(*(uint64 *)(localLong3 + 0x1e0));
  if ((int)localUInt2 == 0) {
    return 0;
  }
  return localUInt2;
}



uint64 utilityHandleResourceCycleResponse(longlong resourceHandle,longlong memorySize)

{
  float fVar1;
  uint64 localUInt2;
  longlong localLong3;
  longlong lStackX_8;
  
  fVar1 = *(float *)(resourceHandle + 0x1c);
  lStackX_8 = CONCAT44(lStackX_8._4_4_,fVar1);
  if (((uint)fVar1 & 0x7f800000) == 0x7f800000) {
    return 0x1d;
  }
  switch(*(uint32 *)(resourceHandle + 0x18)) {
  case 0:
    if ((0.0 <= fVar1) && (fVar1 <= 256.0)) goto code_r0x00018089322c;
    goto joined_r0x00018089322a;
  case 1:
  case 2:
  case 3:
  case 4:
    break;
  case 5:
    break;
  default:
    goto code_r0x000180893206;
  }
  if (fVar1 < 0.0) {
joined_r0x00018089322a:
    if (fVar1 != -1.0) {
code_r0x000180893206:
      return 0x1f;
    }
  }
code_r0x00018089322c:
  localUInt2 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10));
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  if (lStackX_8 == 0) {
    localLong3 = 0;
  }
  else {
    localLong3 = lStackX_8 + -8;
  }
  *(uint32 *)(localLong3 + 0xa4 + (longlong)*(int *)(resourceHandle + 0x18) * 4) =
       *(uint32 *)(resourceHandle + 0x1c);
  localLong3 = *(longlong *)(memorySize + 0x98);
  if ((*(int *)(localLong3 + 0x180) != 0) || (*(int *)(localLong3 + 0x184) != 0)) {
    lStackX_8 = 0;
    utilityPrepareResourceOperation(&lStackX_8);
    if (lStackX_8 == *(longlong *)((longlong)*(int *)(localLong3 + 0x17c) * 8 + 0x180c4f450)) {
      localUInt2 = utilityExecuteResourceOperation(localLong3,resourceHandle);
      if ((int)localUInt2 == 0) {
        return 0;
      }
      return localUInt2;
    }
  }
  *(uint *)(resourceHandle + 8) = *(int *)(resourceHandle + 8) + 0xfU & 0xfffffff0;
  localUInt2 = func_0x0001808e64d0(*(uint64 *)(localLong3 + 0x1e0));
  if ((int)localUInt2 == 0) {
    return 0;
  }
  return localUInt2;
}



uint64 utilityProcessResourceCycleResult(longlong resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  longlong localLong2;
  longlong lStackX_8;
  
  if (3 < *(uint *)(resourceHandle + 0x18)) {
    return 0x1f;
  }
  lStackX_8 = CONCAT44(lStackX_8._4_4_,*(uint *)(resourceHandle + 0x1c));
  if ((*(uint *)(resourceHandle + 0x1c) & 0x7f800000) == 0x7f800000) {
    return 0x1d;
  }
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10));
  if ((int)localUInt1 != 0) {
    return localUInt1;
  }
  if (lStackX_8 == 0) {
    localLong2 = 0;
  }
  else {
    localLong2 = lStackX_8 + -8;
  }
  *(uint32 *)(localLong2 + 0x94 + (longlong)*(int *)(resourceHandle + 0x18) * 4) =
       *(uint32 *)(resourceHandle + 0x1c);
  localLong2 = *(longlong *)(memorySize + 0x98);
  if ((*(int *)(localLong2 + 0x180) != 0) || (*(int *)(localLong2 + 0x184) != 0)) {
    lStackX_8 = 0;
    utilityPrepareResourceOperation(&lStackX_8);
    if (lStackX_8 == *(longlong *)((longlong)*(int *)(localLong2 + 0x17c) * 8 + 0x180c4f450)) {
      localUInt1 = utilityExecuteResourceOperation(localLong2,resourceHandle);
      if ((int)localUInt1 == 0) {
        return 0;
      }
      return localUInt1;
    }
  }
  *(uint *)(resourceHandle + 8) = *(int *)(resourceHandle + 8) + 0xfU & 0xfffffff0;
  localUInt1 = func_0x0001808e64d0(*(uint64 *)(localLong2 + 0x1e0));
  if ((int)localUInt1 == 0) {
    return 0;
  }
  return localUInt1;
}



uint64 utilityValidateResourceCycle(longlong resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  longlong localLong2;
  uint uStackX_8;
  uint32 uStackX_c;
  
  uStackX_8 = *(uint *)(resourceHandle + 0x18);
  if ((uStackX_8 & 0x7f800000) == 0x7f800000) {
    return 0x1d;
  }
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&uStackX_8);
  if ((int)localUInt1 == 0) {
    if (CONCAT44(uStackX_c,uStackX_8) == 0) {
      localLong2 = 0;
    }
    else {
      localLong2 = CONCAT44(uStackX_c,uStackX_8) + -8;
    }
    *(uint32 *)(localLong2 + 0x8c) = *(uint32 *)(resourceHandle + 0x18);
                    // WARNING: Subroutine does not return
    utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
  }
  return localUInt1;
}




// 函数: void utilityOptimizeResourceCycle(longlong resourceHandle,longlong memorySize)
void utilityOptimizeResourceCycle(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  longlong lStackX_8;
  
  localInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if (localInt1 == 0) {
    if (lStackX_8 != 0) {
      lStackX_8 = lStackX_8 + -8;
    }
    *(int *)(lStackX_8 + 0x84) = *(int *)(lStackX_8 + 0x84) + 1;
    *(byte *)(lStackX_8 + 0xbd) = 1;
                    // WARNING: Subroutine does not return
    utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
  }
  return;
}




// 函数: void utilityCompleteResourceCycle(longlong resourceHandle,longlong memorySize)
void utilityCompleteResourceCycle(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  longlong lStackX_8;
  
  localInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
  if (localInt1 == 0) {
    if (lStackX_8 != 0) {
      lStackX_8 = lStackX_8 + -8;
    }
    *(int *)(lStackX_8 + 0x84) = *(int *)(lStackX_8 + 0x84) + 1;
    *(byte *)(lStackX_8 + 0xbd) = 0;
                    // WARNING: Subroutine does not return
    utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
  }
  return;
}



uint64 utilityAnalyzeResourceCycle(longlong resourceHandle,longlong memorySize)

{
  float fVar1;
  longlong localLong2;
  uint64 uVar3;
  float fVar4;
  uint uStackX_8;
  uint32 uStackX_c;
  
  uStackX_8 = *(uint *)(resourceHandle + 0x14);
  if ((uStackX_8 & 0x7f800000) == 0x7f800000) {
    return 0x1d;
  }
  uVar3 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&uStackX_8);
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  localLong2 = *(longlong *)(CONCAT44(uStackX_c,uStackX_8) + 0x10);
  if (localLong2 == 0) {
    return 0x1e;
  }
  if ((*(byte *)(localLong2 + 0x34) & 0x11) != 0) {
    return 0x1f;
  }
  fVar1 = *(float *)(resourceHandle + 0x14);
  fVar4 = *(float *)(localLong2 + 0x38);
  if ((*(float *)(localLong2 + 0x38) <= fVar1) &&
     (fVar4 = *(float *)(localLong2 + 0x3c), fVar1 <= *(float *)(localLong2 + 0x3c))) {
    fVar4 = fVar1;
  }
  *(float *)(resourceHandle + 0x14) = fVar4;
  *(float *)(CONCAT44(uStackX_c,uStackX_8) + 4) = fVar4;
                    // WARNING: Subroutine does not return
  utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
}



uint64 utilityMonitorResourceCycle(longlong resourceHandle,longlong memorySize)

{
  longlong localLong1;
  uint64 localUInt2;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  
  localUInt = *(uint32 *)(resourceHandle + 0x10);
  localUInt = *(uint32 *)(resourceHandle + 0x14);
  localUInt = *(uint32 *)(resourceHandle + 0x18);
  localUInt = *(uint32 *)(resourceHandle + 0x1c);
  localLong1 = (**(code **)(**(longlong **)(memorySize + 800) + 600))
                    (*(longlong **)(memorySize + 800),&localUInt,1);
  if ((localLong1 == 0) || (*(longlong *)(localLong1 + 0x2e8) == 0)) {
    localUInt2 = 0x4a;
  }
  else {
    localUInt2 = validate_resource_handle(*(longlong *)(localLong1 + 0x2e8),resourceHandle + 0x20);
    if ((int)localUInt2 == 0) {
      localUInt2 = utilityAcquireResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
      return localUInt2;
    }
  }
  return localUInt2;
}



uint64 utilityReportResourceCycle(longlong resourceHandle,longlong memorySize)

{
  longlong localLong1;
  uint64 localUInt2;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  
  localUInt = *(uint32 *)(resourceHandle + 0x10);
  localUInt = *(uint32 *)(resourceHandle + 0x14);
  localUInt = *(uint32 *)(resourceHandle + 0x18);
  localUInt = *(uint32 *)(resourceHandle + 0x1c);
  localLong1 = (**(code **)(**(longlong **)(memorySize + 800) + 600))
                    (*(longlong **)(memorySize + 800),&localUInt,1);
  if ((localLong1 == 0) || (*(longlong *)(localLong1 + 0x2e8) == 0)) {
    return 0x4a;
  }
  localUInt2 = validate_resource_handle(*(longlong *)(localLong1 + 0x2e8),resourceHandle + 0x20);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  localLong1 = *(longlong *)(memorySize + 0x98);
  if (*(int *)(localLong1 + 0x200) != 0) {
    if (((*(int *)(localLong1 + 0x180) == 0) && (*(int *)(localLong1 + 0x184) == 0)) ||
       (utilityPrepareResourceOperation(&stack0x00000008),
       *(longlong *)((longlong)*(int *)(localLong1 + 0x17c) * 8 + 0x180c4f450) != 0)) {
      *(uint *)(resourceHandle + 8) = *(int *)(resourceHandle + 8) + 0xfU & 0xfffffff0;
      localUInt2 = func_0x0001808e64d0(*(uint64 *)(localLong1 + 0x1e0));
    }
    else {
      localUInt2 = utilityExecuteResourceOperation(localLong1,resourceHandle);
    }
    if ((int)localUInt2 != 0) {
      return localUInt2;
    }
  }
  return 0;
}




// 函数: void utilityLogResourceCycle(longlong resourceHandle,longlong memorySize)
void utilityLogResourceCycle(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  uint64 uStackX_8;
  
  localInt1 = utilityExtractResourceInfo(memorySize,resourceHandle + 0x10,&uStackX_8);
  if (localInt1 == 0) {
    localInt1 = validate_resource_handle(uStackX_8,resourceHandle + 0x20);
    if (localInt1 == 0) {
                    // WARNING: Subroutine does not return
      utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
    }
  }
  return;
}




// 函数: void utilityTrackResourceCycle(longlong resourceHandle,longlong memorySize)
void utilityTrackResourceCycle(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  longlong lStackX_8;
  
  localInt1 = utilityAnalyzeResourceData(memorySize,resourceHandle + 0x10,&lStackX_8);
  if (localInt1 == 0) {
    localInt1 = validate_resource_handle(*(uint64 *)(lStackX_8 + 0xd0),resourceHandle + 0x20);
    if (localInt1 == 0) {
      utilityAcquireResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
    }
  }
  return;
}




// 函数: void create_network_socket(longlong resourceHandle,longlong memorySize)
void create_network_socket(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  uint64 uStackX_8;
  
  localInt1 = utilityGenerateResourceReport(memorySize,resourceHandle + 0x10,&uStackX_8);
  if (localInt1 == 0) {
    localInt1 = validate_resource_handle(uStackX_8,resourceHandle + 0x20);
    if (localInt1 == 0) {
                    // WARNING: Subroutine does not return
      utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
    }
  }
  return;
}



// WARNING: Removing unreachable block (ram,0x000180893865)
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

int bind_network_socket(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  longlong localLong2;
  longlong lStackX_8;
  
  if ((((*(longlong *)(resourceHandle + 0x28) != 0) && (*(longlong *)(resourceHandle + 0x30) != 0)) &&
      (*(longlong *)(resourceHandle + 0x38) != 0)) && (*(longlong *)(resourceHandle + 0x40) != 0)) {
    if (*(int *)(resourceHandle + 0x20) < 1) {
      localInt1 = allocateSystemMemory(memorySize,resourceHandle + 0x4c);
      if ((localInt1 == 0) &&
         (localInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x4c),&lStackX_8), localInt1 == 0)) {
        if (*(int *)(lStackX_8 + 0x30) == 1) {
          *(uint32 *)(lStackX_8 + 0x30) = 2;
        }
                    // WARNING: Subroutine does not return
        utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
      }
    }
    else if (*(longlong *)(resourceHandle + 0x18) == 0) {
      localInt1 = 0x1f;
    }
    else {
      localLong2 = utilityAccessSystemResource(*(uint64 *)(utilitySystemDataTable + 0x1a0),*(int *)(resourceHandle + 0x20),
                            &unknown_1809862d0,0x315,0,0,1);
      if (localLong2 != 0) {
                    // WARNING: Subroutine does not return
        memcpy(localLong2,*(uint64 *)(resourceHandle + 0x18),(longlong)*(int *)(resourceHandle + 0x20));
      }
      localInt1 = 0x26;
    }
    return localInt1;
  }
  return 0x1f;
}



// WARNING: Removing unreachable block (ram,0x000180893865)
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

int connect_network_socket(longlong resourceHandle,uint64 memorySize)

{
  int localInt1;
  longlong localLong2;
  longlong unaff_RDI;
  longlong unaff_R15;
  longlong in_stack_00000060;
  
  if ((int)memorySize < 1) {
    localInt1 = allocateSystemMemory();
    if ((localInt1 == 0) &&
       (localInt1 = SystemMemoryFunction(*(uint32 *)(unaff_RDI + 0x4c),&stack0x00000060), localInt1 == 0)
       ) {
      if (*(int *)(in_stack_00000060 + 0x30) == 1) {
        *(uint32 *)(in_stack_00000060 + 0x30) = 2;
      }
                    // WARNING: Subroutine does not return
      utilityReleaseResourceHandle(*(uint64 *)(unaff_R15 + 0x98));
    }
  }
  else if (*(longlong *)(resourceHandle + 0x18) == 0) {
    localInt1 = 0x1f;
  }
  else {
    localLong2 = utilityAccessSystemResource(*(uint64 *)(utilitySystemDataTable + 0x1a0),memorySize,&unknown_1809862d0,0x315,0);
    if (localLong2 != 0) {
                    // WARNING: Subroutine does not return
      memcpy(localLong2,*(uint64 *)(unaff_RDI + 0x18),(longlong)*(int *)(unaff_RDI + 0x20));
    }
    localInt1 = 0x26;
  }
  return localInt1;
}



uint64 get_socket_status(void)

{
  return 0x1f;
}




// 函数: void listen_network_socket(longlong resourceHandle,longlong memorySize)
void listen_network_socket(longlong resourceHandle,longlong memorySize)

{
  int localInt1;
  longlong lStackX_8;
  
  localInt1 = allocateSystemMemory(memorySize,resourceHandle + 0x10);
  if (localInt1 == 0) {
    localInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&lStackX_8);
    if (localInt1 == 0) {
      if (*(int *)(lStackX_8 + 0x30) == 1) {
        *(uint32 *)(lStackX_8 + 0x30) = 2;
      }
                    // WARNING: Subroutine does not return
      utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
    }
  }
  return;
}



// WARNING: Removing unreachable block (ram,0x000180893a22)
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

int accept_network_connection(longlong resourceHandle,longlong memorySize)

{
  uint localUInt1;
  int localInt2;
  longlong localLong3;
  longlong lStackX_8;
  
  localUInt1 = *(uint *)(resourceHandle + 0x1c);
  if ((((localUInt1 != 1) || ((*(byte *)(resourceHandle + 0x10) & 0x1f) == 0)) && (0 < *(int *)(resourceHandle + 0x18))
      ) && (localUInt1 < 2)) {
    if (localUInt1 == 0) {
      localLong3 = readSystemData(*(uint64 *)(utilitySystemDataTable + 0x1a0),*(int *)(resourceHandle + 0x18),0x20,
                            &utilityMemoryDataBuffer,0xdd,0,0);
      if (localLong3 != 0) {
                    // WARNING: Subroutine does not return
        memcpy(localLong3,*(uint64 *)(resourceHandle + 0x10),(longlong)*(int *)(resourceHandle + 0x18));
      }
      localInt2 = 0x26;
    }
    else {
      localInt2 = allocateSystemMemory(memorySize,resourceHandle + 0x24);
      if ((localInt2 == 0) &&
         (localInt2 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x24),&lStackX_8), localInt2 == 0)) {
        if (*(int *)(lStackX_8 + 0x30) == 1) {
          *(uint32 *)(lStackX_8 + 0x30) = 2;
        }
                    // WARNING: Subroutine does not return
        utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
      }
    }
    return localInt2;
  }
  return 0x1f;
}



// WARNING: Removing unreachable block (ram,0x000180893a22)
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

int send_network_data(uint64 resourceHandle,uint64 memorySize)

{
  int in_EAX;
  int localInt1;
  longlong localLong2;
  longlong unaff_RDI;
  longlong unaff_R15;
  longlong in_stack_00000060;
  
  if (in_EAX == 0) {
    localLong2 = readSystemData(*(uint64 *)(utilitySystemDataTable + 0x1a0),memorySize,0x20,&utilityMemoryDataBuffer,0xdd);
    if (localLong2 != 0) {
                    // WARNING: Subroutine does not return
      memcpy(localLong2,*(uint64 *)(unaff_RDI + 0x10),(longlong)*(int *)(unaff_RDI + 0x18));
    }
    localInt1 = 0x26;
  }
  else {
    localInt1 = allocateSystemMemory();
    if ((localInt1 == 0) &&
       (localInt1 = SystemMemoryFunction(*(uint32 *)(unaff_RDI + 0x24),&stack0x00000060), localInt1 == 0)
       ) {
      if (*(int *)(in_stack_00000060 + 0x30) == 1) {
        *(uint32 *)(in_stack_00000060 + 0x30) = 2;
      }
                    // WARNING: Subroutine does not return
      utilityReleaseResourceHandle(*(uint64 *)(unaff_R15 + 0x98));
    }
  }
  return localInt1;
}



uint64 receive_network_data(void)

{
  return 0x1f;
}



uint64 close_network_socket(longlong resourceHandle,longlong memorySize)

{
  float fVar1;
  uint64 localUInt2;
  longlong localLong3;
  float fVar4;
  uint32 auStackX_18 [2];
  
  if ((*(uint *)(resourceHandle + 0x18) & 0x7f800000) == 0x7f800000) {
    return 0x1d;
  }
  auStackX_18[0] = 0;
  localUInt2 = processResourceData(memorySize + 0x60,resourceHandle + 0x10,auStackX_18);
  if ((int)localUInt2 == 0) {
    localLong3 = func_0x000180867680(memorySize + 0x60,auStackX_18[0]);
    if ((*(uint *)(localLong3 + 0x34) >> 4 & 1) != 0) {
      return 0x1f;
    }
    fVar1 = *(float *)(resourceHandle + 0x18);
    fVar4 = *(float *)(localLong3 + 0x38);
    if ((*(float *)(localLong3 + 0x38) <= fVar1) &&
       (fVar4 = *(float *)(localLong3 + 0x3c), fVar1 <= *(float *)(localLong3 + 0x3c))) {
      fVar4 = fVar1;
    }
    *(float *)(resourceHandle + 0x18) = fVar4;
    localUInt2 = func_0x000180867960(memorySize + 0x60,auStackX_18[0],fVar4);
    if ((int)localUInt2 == 0) {
                    // WARNING: Subroutine does not return
      utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
    }
  }
  return localUInt2;
}



uint64 shutdown_network_socket(uint64 resourceHandle,uint64 memorySize)

{
  float fVar1;
  uint64 localUInt2;
  longlong localLong3;
  longlong baseRegister;
  longlong unaff_RSI;
  float fVar4;
  uint32 uStack0000000000000040;
  
  uStack0000000000000040 = 0;
  localUInt2 = processResourceData(unaff_RSI + 0x60,memorySize,&stackLocalBuffer);
  if ((int)localUInt2 == 0) {
    localLong3 = func_0x000180867680(unaff_RSI + 0x60,uStack0000000000000040);
    if ((*(uint *)(localLong3 + 0x34) >> 4 & 1) != 0) {
      return 0x1f;
    }
    fVar1 = *(float *)(baseRegister + 0x18);
    fVar4 = *(float *)(localLong3 + 0x38);
    if ((*(float *)(localLong3 + 0x38) <= fVar1) &&
       (fVar4 = *(float *)(localLong3 + 0x3c), fVar1 <= *(float *)(localLong3 + 0x3c))) {
      fVar4 = fVar1;
    }
    *(float *)(baseRegister + 0x18) = fVar4;
    localUInt2 = func_0x000180867960(unaff_RSI + 0x60,uStack0000000000000040,fVar4);
    if ((int)localUInt2 == 0) {
                    // WARNING: Subroutine does not return
      utilityReleaseResourceHandle(*(uint64 *)(unaff_RSI + 0x98));
    }
  }
  return localUInt2;
}




// 函数: void initialize_network_stack(void)
void initialize_network_stack(void)

{
  float fVar1;
  uint32 in_EAX;
  int localInt2;
  uint32 in_register_00000004;
  longlong baseRegister;
  longlong unaff_RSI;
  float fVar3;
  uint32 in_stack_00000040;
  
  fVar3 = *(float *)(CONCAT44(in_register_00000004,in_EAX) + 0x38);
  fVar1 = *(float *)(baseRegister + 0x18);
  if ((fVar3 <= fVar1) &&
     (fVar3 = *(float *)(CONCAT44(in_register_00000004,in_EAX) + 0x3c), fVar1 <= fVar3)) {
    fVar3 = fVar1;
  }
  *(float *)(baseRegister + 0x18) = fVar3;
  localInt2 = func_0x000180867960(unaff_RSI + 0x60,in_stack_00000040,fVar3);
  if (localInt2 == 0) {
                    // WARNING: Subroutine does not return
    utilityReleaseResourceHandle(*(uint64 *)(unaff_RSI + 0x98));
  }
  return;
}



uint64 get_network_address(longlong resourceHandle,longlong memorySize)

{
  float fVar1;
  uint64 localUInt2;
  longlong localLong3;
  uint32 auStackX_10 [2];
  
  auStackX_10[0] = 0;
  localUInt2 = processResourceData(memorySize + 0x60,resourceHandle + 0x10,auStackX_10);
  if ((int)localUInt2 == 0) {
    localLong3 = func_0x000180867680(memorySize + 0x60,auStackX_10[0]);
    if ((*(uint *)(localLong3 + 0x34) >> 4 & 1) != 0) {
      return 0x1f;
    }
    localUInt2 = utilityAccessResourceAttribute(localLong3,resourceHandle + 0x1d,resourceHandle + 0x18);
    if ((int)localUInt2 == 0) {
      fVar1 = *(float *)(resourceHandle + 0x18);
      if ((fVar1 < *(float *)(localLong3 + 0x38)) ||
         (*(float *)(localLong3 + 0x3c) <= fVar1 && fVar1 != *(float *)(localLong3 + 0x3c))) {
        localUInt2 = 0x1c;
      }
      else {
        localUInt2 = func_0x000180867960(memorySize + 0x60,auStackX_10[0]);
        if ((int)localUInt2 == 0) {
                    // WARNING: Subroutine does not return
          utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
        }
      }
    }
  }
  return localUInt2;
}



uint64 resolve_hostname(void)

{
  float fVar1;
  longlong localLong2;
  uint64 uVar3;
  longlong unaff_RDI;
  longlong unaff_R14;
  uint32 in_stack_00000048;
  
  localLong2 = func_0x000180867680();
  if ((*(uint *)(localLong2 + 0x34) >> 4 & 1) != 0) {
    return 0x1f;
  }
  uVar3 = utilityAccessResourceAttribute(localLong2,unaff_RDI + 0x1d,unaff_RDI + 0x18);
  if ((int)uVar3 == 0) {
    fVar1 = *(float *)(unaff_RDI + 0x18);
    if ((fVar1 < *(float *)(localLong2 + 0x38)) ||
       (*(float *)(localLong2 + 0x3c) <= fVar1 && fVar1 != *(float *)(localLong2 + 0x3c))) {
      uVar3 = 0x1c;
    }
    else {
      uVar3 = func_0x000180867960(unaff_R14 + 0x60,in_stack_00000048);
      if ((int)uVar3 == 0) {
                    // WARNING: Subroutine does not return
        utilityReleaseResourceHandle(*(uint64 *)(unaff_R14 + 0x98));
      }
    }
  }
  return uVar3;
}



uint64 get_host_by_address(void)

{
  float fVar1;
  uint64 localUInt2;
  longlong baseRegister;
  longlong unaff_RDI;
  longlong unaff_R14;
  uint32 in_stack_00000048;
  
  localUInt2 = utilityAccessResourceAttribute();
  if ((int)localUInt2 == 0) {
    fVar1 = *(float *)(unaff_RDI + 0x18);
    if ((fVar1 < *(float *)(baseRegister + 0x38)) ||
       (*(float *)(baseRegister + 0x3c) <= fVar1 && fVar1 != *(float *)(baseRegister + 0x3c))) {
      localUInt2 = 0x1c;
    }
    else {
      localUInt2 = func_0x000180867960(unaff_R14 + 0x60,in_stack_00000048);
      if ((int)localUInt2 == 0) {
                    // WARNING: Subroutine does not return
        utilityReleaseResourceHandle(*(uint64 *)(unaff_R14 + 0x98));
      }
    }
  }
  return localUInt2;
}




// 函数: void cleanup_network_stack(void)
void cleanup_network_stack(void)

{
  return;
}



uint64 create_network_connection(longlong resourceHandle,longlong memorySize)

{
  float fVar1;
  uint64 localUInt2;
  longlong localLong3;
  uint64 *puVar4;
  float fVar5;
  uint auStackX_8 [2];
  uint32 auStackX_18 [2];
  
  auStackX_8[0] = *(uint *)(resourceHandle + 0x10);
  if ((auStackX_8[0] & 0x7f800000) == 0x7f800000) {
    return 0x1d;
  }
  auStackX_18[0] = 0;
  localUInt2 = handleFileOperation(memorySize,resourceHandle + 0x20,auStackX_18);
  if ((int)localUInt2 == 0) {
    localLong3 = func_0x000180867680(memorySize + 0x60,auStackX_18[0]);
    if ((*(uint *)(localLong3 + 0x34) >> 4 & 1) != 0) {
      return 0x1f;
    }
    fVar1 = *(float *)(resourceHandle + 0x10);
    fVar5 = *(float *)(localLong3 + 0x38);
    if ((*(float *)(localLong3 + 0x38) <= fVar1) &&
       (fVar5 = *(float *)(localLong3 + 0x3c), fVar1 <= *(float *)(localLong3 + 0x3c))) {
      fVar5 = fVar1;
    }
    *(float *)(resourceHandle + 0x10) = fVar5;
    localUInt2 = func_0x000180867960(memorySize + 0x60,auStackX_18[0],fVar5);
    if ((int)localUInt2 == 0) {
      puVar4 = (uint64 *)func_0x000180867660(memorySize + 0x60,auStackX_8,auStackX_18[0]);
      *(uint64 *)(resourceHandle + 0x18) = *puVar4;
                    // WARNING: Subroutine does not return
      utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
    }
  }
  return localUInt2;
}



uint64 get_network_statistics(void)

{
  float fVar1;
  longlong localLong2;
  uint64 uVar3;
  uint64 *puVar4;
  longlong baseRegister;
  longlong unaff_RDI;
  float fVar5;
  uint32 in_stack_00000040;
  
  localLong2 = func_0x000180867680();
  if ((*(uint *)(localLong2 + 0x34) >> 4 & 1) != 0) {
    return 0x1f;
  }
  fVar1 = *(float *)(baseRegister + 0x10);
  fVar5 = *(float *)(localLong2 + 0x38);
  if ((*(float *)(localLong2 + 0x38) <= fVar1) &&
     (fVar5 = *(float *)(localLong2 + 0x3c), fVar1 <= *(float *)(localLong2 + 0x3c))) {
    fVar5 = fVar1;
  }
  *(float *)(baseRegister + 0x10) = fVar5;
  uVar3 = func_0x000180867960(unaff_RDI + 0x60,in_stack_00000040,fVar5);
  if ((int)uVar3 == 0) {
    puVar4 = (uint64 *)func_0x000180867660(unaff_RDI + 0x60,&stack0x00000030,in_stack_00000040);
    *(uint64 *)(baseRegister + 0x18) = *puVar4;
                    // WARNING: Subroutine does not return
    utilityReleaseResourceHandle(*(uint64 *)(unaff_RDI + 0x98));
  }
  return uVar3;
}




// 函数: void initialize_ssl_context(void)
void initialize_ssl_context(void)

{
  float fVar1;
  uint64 *plocalUInt2;
  uint32 in_EAX;
  int localInt3;
  uint32 in_register_00000004;
  longlong baseRegister;
  longlong unaff_RDI;
  float fVar4;
  uint32 in_stack_00000040;
  
  fVar4 = *(float *)(CONCAT44(in_register_00000004,in_EAX) + 0x38);
  fVar1 = *(float *)(baseRegister + 0x10);
  if ((fVar4 <= fVar1) &&
     (fVar4 = *(float *)(CONCAT44(in_register_00000004,in_EAX) + 0x3c), fVar1 <= fVar4)) {
    fVar4 = fVar1;
  }
  *(float *)(baseRegister + 0x10) = fVar4;
  localInt3 = func_0x000180867960(unaff_RDI + 0x60,in_stack_00000040,fVar4);
  if (localInt3 == 0) {
    plocalUInt2 = (uint64 *)func_0x000180867660(unaff_RDI + 0x60,&stack0x00000030,in_stack_00000040);
    *(uint64 *)(baseRegister + 0x18) = *plocalUInt2;
                    // WARNING: Subroutine does not return
    utilityReleaseResourceHandle(*(uint64 *)(unaff_RDI + 0x98));
  }
  return;
}




// 函数: void cleanup_ssl_context(void)
void cleanup_ssl_context(void)

{
  return;
}



uint64 create_ssl_connection(longlong resourceHandle,longlong memorySize)

{
  float fVar1;
  uint64 localUInt2;
  longlong localLong3;
  uint64 *puVar4;
  byte auStackX_8 [8];
  uint32 auStackX_18 [2];
  
  auStackX_18[0] = 0;
  localUInt2 = handleFileOperation(memorySize,resourceHandle + 0x20,auStackX_18);
  if ((int)localUInt2 == 0) {
    localLong3 = func_0x000180867680(memorySize + 0x60,auStackX_18[0]);
    if ((*(uint *)(localLong3 + 0x34) >> 4 & 1) != 0) {
      return 0x1f;
    }
    localUInt2 = utilityAccessResourceAttribute(localLong3,resourceHandle + 0xa0,resourceHandle + 0x10);
    if ((int)localUInt2 == 0) {
      fVar1 = *(float *)(resourceHandle + 0x10);
      if ((fVar1 < *(float *)(localLong3 + 0x38)) ||
         (*(float *)(localLong3 + 0x3c) <= fVar1 && fVar1 != *(float *)(localLong3 + 0x3c))) {
        localUInt2 = 0x1c;
      }
      else {
        localUInt2 = func_0x000180867960(memorySize + 0x60,auStackX_18[0]);
        if ((int)localUInt2 == 0) {
          puVar4 = (uint64 *)func_0x000180867660(memorySize + 0x60,auStackX_8,auStackX_18[0]);
          *(uint64 *)(resourceHandle + 0x18) = *puVar4;
                    // WARNING: Subroutine does not return
          utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
        }
      }
    }
  }
  return localUInt2;
}



uint64 get_ssl_certificate(void)

{
  float fVar1;
  longlong localLong2;
  uint64 uVar3;
  uint64 *puVar4;
  longlong unaff_RDI;
  longlong unaff_R14;
  uint32 in_stack_00000050;
  
  localLong2 = func_0x000180867680();
  if ((*(uint *)(localLong2 + 0x34) >> 4 & 1) != 0) {
    return 0x1f;
  }
  uVar3 = utilityAccessResourceAttribute(localLong2,unaff_RDI + 0xa0,unaff_RDI + 0x10);
  if ((int)uVar3 == 0) {
    fVar1 = *(float *)(unaff_RDI + 0x10);
    if ((fVar1 < *(float *)(localLong2 + 0x38)) ||
       (*(float *)(localLong2 + 0x3c) <= fVar1 && fVar1 != *(float *)(localLong2 + 0x3c))) {
      uVar3 = 0x1c;
    }
    else {
      uVar3 = func_0x000180867960(unaff_R14 + 0x60,in_stack_00000050);
      if ((int)uVar3 == 0) {
        puVar4 = (uint64 *)
                 func_0x000180867660(unaff_R14 + 0x60,&stackLocalBuffer,in_stack_00000050);
        *(uint64 *)(unaff_RDI + 0x18) = *puVar4;
                    // WARNING: Subroutine does not return
        utilityReleaseResourceHandle(*(uint64 *)(unaff_R14 + 0x98));
      }
    }
  }
  return uVar3;
}



uint64 verify_ssl_certificate(void)

{
  float fVar1;
  uint64 localUInt2;
  uint64 *puVar3;
  longlong baseRegister;
  longlong unaff_RDI;
  longlong unaff_R14;
  uint32 in_stack_00000050;
  
  localUInt2 = utilityAccessResourceAttribute();
  if ((int)localUInt2 == 0) {
    fVar1 = *(float *)(unaff_RDI + 0x10);
    if ((fVar1 < *(float *)(baseRegister + 0x38)) ||
       (*(float *)(baseRegister + 0x3c) <= fVar1 && fVar1 != *(float *)(baseRegister + 0x3c))) {
      localUInt2 = 0x1c;
    }
    else {
      localUInt2 = func_0x000180867960(unaff_R14 + 0x60,in_stack_00000050);
      if ((int)localUInt2 == 0) {
        puVar3 = (uint64 *)
                 func_0x000180867660(unaff_R14 + 0x60,&stackLocalBuffer,in_stack_00000050);
        *(uint64 *)(unaff_RDI + 0x18) = *puVar3;
                    // WARNING: Subroutine does not return
        utilityReleaseResourceHandle(*(uint64 *)(unaff_R14 + 0x98));
      }
    }
  }
  return localUInt2;
}




// 函数: void initialize_database_connection(void)
void initialize_database_connection(void)

{
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void execute_database_query(longlong resourceHandle,longlong memorySize)
void execute_database_query(longlong resourceHandle,longlong memorySize)

{
  byte localBuffer [8];
  longlong lStack_60;
  longlong lStack_50;
  longlong lStack_40;
  ulonglong localUInt;
  
  localUInt = _DAT_180bf00a8 ^ (ulonglong)localBuffer;
  lStack_60 = memorySize + 0x60;
  lStack_50 = resourceHandle + 0x18 + (longlong)*(int *)(resourceHandle + 0x10) * 8;
  lStack_40 = memorySize;
                    // WARNING: Subroutine does not return
  utilityProcessResourceData();
}



uint64 fetch_database_results(longlong resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  uint uStackX_8;
  uint32 uStackX_c;
  
  uStackX_8 = *(uint *)(resourceHandle + 0x18);
  if ((uStackX_8 & 0x7f800000) == 0x7f800000) {
    return 0x1d;
  }
  localUInt1 = SystemMemoryFunction(*(uint32 *)(resourceHandle + 0x10),&uStackX_8);
  if ((int)localUInt1 == 0) {
    *(uint32 *)(CONCAT44(uStackX_c,uStackX_8) + 0x18) = *(uint32 *)(resourceHandle + 0x18);
                    // WARNING: Subroutine does not return
    utilityReleaseResourceHandle(*(uint64 *)(memorySize + 0x98),resourceHandle);
  }
  return localUInt1;
}



int insert_database_record(longlong resourceHandle,longlong memorySize,int operationFlags)

{
  int localInt1;
  int localInt2;
  
  localInt1 = func_0x00018074b800(memorySize,operationFlags,*(uint32 *)(resourceHandle + 0x10));
  localInt2 = executeSystemCommand(memorySize + localInt1,operationFlags - localInt1,&DAT_180a06434);
  localInt1 = localInt1 + localInt2;
  localInt2 = func_0x00018074b7d0(localInt1 + memorySize,operationFlags - localInt1,*(uint32 *)(resourceHandle + 0x18));
  localInt1 = localInt1 + localInt2;
  localInt2 = executeSystemCommand(localInt1 + memorySize,operationFlags - localInt1,&DAT_180a06434);
  localInt1 = localInt1 + localInt2;
  localInt2 = performSystemOperation(localInt1 + memorySize,operationFlags - localInt1,resourceHandle + 0x20,
                        *(uint32 *)(resourceHandle + 0x18));
  localInt1 = localInt1 + localInt2;
  localInt2 = executeSystemCommand(localInt1 + memorySize,operationFlags - localInt1,&DAT_180a06434);
  localInt1 = localInt1 + localInt2;
  localInt2 = FUN_18074bb00(localInt1 + memorySize,operationFlags - localInt1,
                        resourceHandle + 0x20 + (longlong)*(int *)(resourceHandle + 0x18) * 4);
  return localInt2 + localInt1;
}



int update_database_record(longlong resourceHandle,longlong memorySize,int operationFlags)

{
  int localInt1;
  int localInt2;
  
  localInt1 = func_0x00018074b800(memorySize,operationFlags,*(uint32 *)(resourceHandle + 0x10));
  localInt2 = executeSystemCommand(memorySize + localInt1,operationFlags - localInt1,&DAT_180a06434);
  localInt1 = localInt1 + localInt2;
  localInt2 = func_0x00018074b7d0(localInt1 + memorySize,operationFlags - localInt1,*(uint32 *)(resourceHandle + 0x18));
  localInt1 = localInt1 + localInt2;
  localInt2 = executeSystemCommand(localInt1 + memorySize,operationFlags - localInt1,&DAT_180a06434);
  localInt1 = localInt1 + localInt2;
  localInt2 = FUN_18088ed70(localInt1 + memorySize,operationFlags - localInt1,resourceHandle + 0x20,
                        *(uint32 *)(resourceHandle + 0x18));
  localInt1 = localInt1 + localInt2;
  localInt2 = executeSystemCommand(localInt1 + memorySize,operationFlags - localInt1,&DAT_180a06434);
  localInt1 = localInt1 + localInt2;
  localInt2 = FUN_18074bb00(localInt1 + memorySize,operationFlags - localInt1,
                        resourceHandle + 0x20 + (longlong)*(int *)(resourceHandle + 0x18) * 8);
  localInt1 = localInt1 + localInt2;
  localInt2 = executeSystemCommand(localInt1 + memorySize,operationFlags - localInt1,&DAT_180a06434);
  localInt1 = localInt1 + localInt2;
  localInt2 = FUN_18074be90(localInt1 + memorySize,operationFlags - localInt1,*(byte *)(resourceHandle + 0x1c));
  return localInt2 + localInt1;
}



int delete_database_record(longlong resourceHandle,longlong memorySize,int operationFlags)

{
  int localInt1;
  int localInt2;
  
  localInt1 = func_0x00018074b7d0(memorySize,operationFlags,*(uint32 *)(resourceHandle + 0x10));
  localInt2 = executeSystemCommand(memorySize + localInt1,operationFlags - localInt1,&DAT_180a06434);
  localInt1 = localInt1 + localInt2;
  localInt2 = FUN_18088ed70(localInt1 + memorySize,operationFlags - localInt1,resourceHandle + 0x18,
                        *(uint32 *)(resourceHandle + 0x10));
  localInt1 = localInt1 + localInt2;
  localInt2 = executeSystemCommand(localInt1 + memorySize,operationFlags - localInt1,&DAT_180a06434);
  localInt1 = localInt1 + localInt2;
  localInt2 = FUN_18074bb00(localInt1 + memorySize,operationFlags - localInt1,
                        resourceHandle + 0x18 + (longlong)*(int *)(resourceHandle + 0x10) * 8);
  localInt1 = localInt1 + localInt2;
  localInt2 = executeSystemCommand(localInt1 + memorySize,operationFlags - localInt1,&DAT_180a06434);
  localInt1 = localInt1 + localInt2;
  localInt2 = FUN_18074be90(localInt1 + memorySize,operationFlags - localInt1,*(byte *)(resourceHandle + 0x14));
  return localInt2 + localInt1;
}



int begin_database_transaction(longlong *resourceHandle,longlong memorySize,int operationFlags)

{
  int localInt1;
  int localInt2;
  
  localInt1 = executeSystemCommand(memorySize,operationFlags,&unknown_180986298);
  localInt2 = executeSystemCommand(memorySize + localInt1,operationFlags - localInt1,&DAT_180a06434);
  localInt1 = localInt1 + localInt2;
  localInt2 = func_0x00018074b7d0(localInt1 + memorySize,operationFlags - localInt1,(int)resourceHandle[3] * 8 + 0x20);
  localInt1 = localInt1 + localInt2;
  localInt2 = executeSystemCommand(localInt1 + memorySize,operationFlags - localInt1,&DAT_180a06434);
  localInt1 = localInt1 + localInt2;
  localInt2 = (**(code **)(*resourceHandle + 8))(resourceHandle,localInt1 + memorySize,operationFlags - localInt1);
  return localInt2 + localInt1;
}



int commit_database_transaction(longlong *resourceHandle,longlong memorySize,int operationFlags)

{
  int localInt1;
  int localInt2;
  
  localInt1 = executeSystemCommand(memorySize,operationFlags,&unknown_180984010);
  localInt2 = executeSystemCommand(memorySize + localInt1,operationFlags - localInt1,&DAT_180a06434);
  localInt1 = localInt1 + localInt2;
  localInt2 = func_0x00018074b7d0(localInt1 + memorySize,operationFlags - localInt1,(int)resourceHandle[3] * 0xc + 0x20);
  localInt1 = localInt1 + localInt2;
  localInt2 = executeSystemCommand(localInt1 + memorySize,operationFlags - localInt1,&DAT_180a06434);
  localInt1 = localInt1 + localInt2;
  localInt2 = (**(code **)(*resourceHandle + 8))(resourceHandle,localInt1 + memorySize,operationFlags - localInt1);
  return localInt2 + localInt1;
}



int rollback_database_transaction(longlong *resourceHandle,longlong memorySize,int operationFlags)

{
  int localInt1;
  int localInt2;
  
  localInt1 = executeSystemCommand(memorySize,operationFlags,&unknown_180982240);
  localInt2 = executeSystemCommand(memorySize + localInt1,operationFlags - localInt1,&DAT_180a06434);
  localInt1 = localInt1 + localInt2;
  localInt2 = func_0x00018074b7d0(localInt1 + memorySize,operationFlags - localInt1,((int)resourceHandle[2] + 2) * 0xc);
  localInt1 = localInt1 + localInt2;
  localInt2 = executeSystemCommand(localInt1 + memorySize,operationFlags - localInt1,&DAT_180a06434);
  localInt1 = localInt1 + localInt2;
  localInt2 = (**(code **)(*resourceHandle + 8))(resourceHandle,localInt1 + memorySize,operationFlags - localInt1);
  return localInt2 + localInt1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void utilityExtractResourceInfo(longlong resourceHandle,uint32 *memorySize,longlong *operationFlags)
void utilityExtractResourceInfo(longlong resourceHandle,uint32 *memorySize,longlong *operationFlags)

{
  longlong *plocalLong1;
  int localInt2;
  longlong localLong3;
  byte localBuffer [32];
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint32 localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  longlong lStack_48;
  byte localBuffer [40];
  ulonglong localUInt;
  
  localUInt = _DAT_180bf00a8 ^ (ulonglong)localBuffer;
  plocalLong1 = *(longlong **)(resourceHandle + 800);
  if (plocalLong1 != (longlong *)0x0) {
    localUInt = *memorySize;
    localUInt = memorySize[1];
    localUInt = memorySize[2];
    localUInt = memorySize[3];
    localLong3 = (**(code **)(*plocalLong1 + 0x150))(plocalLong1,&localUInt,1);
    if (localLong3 == 0) {
      localUInt = localUInt >> 0x18;
      localUInt = localUInt >> 0x18;
      localUInt = localUInt >> 0x10;
      localUInt = localUInt >> 0x10 & 0xff;
      localUInt = localUInt >> 8 & 0xff;
      localUInt = localUInt & 0xff;
      localUInt = localUInt >> 0x10 & 0xff;
      localUInt = localUInt >> 8 & 0xff;
      localUInt = localUInt & 0xff;
      localUInt = localUInt & 0xffff;
                    // WARNING: Subroutine does not return
      FUN_18076b390(localBuffer,0x27,&unknown_180958180,localUInt);
    }
    if (((*(byte *)(localLong3 + 0xc4) & 1) != 0) &&
       ((lStack_48 = *(longlong *)(localLong3 + 0x68), lStack_48 != 0 ||
        (localInt2 = FUN_18088c7c0(resourceHandle,localLong3,&lStack_48), localInt2 == 0)))) {
      *operationFlags = lStack_48;
    }
  }
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(localUInt ^ (ulonglong)localBuffer);
}




// 函数: void initialize_thread_local_storage(void)
void initialize_thread_local_storage(void)

{
                    // WARNING: Subroutine does not return
  FUN_18076b390();
}




// 函数: void cleanup_thread_local_storage(void)
void cleanup_thread_local_storage(void)

{
  ulonglong in_stack_000000b0;
  
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(in_stack_000000b0 ^ (ulonglong)&stack0x00000000);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void utilityAnalyzeResourceData(longlong resourceHandle,uint32 *memorySize,longlong *operationFlags)
void utilityAnalyzeResourceData(longlong resourceHandle,uint32 *memorySize,longlong *operationFlags)

{
  longlong *plocalLong1;
  int localInt2;
  longlong localLong3;
  byte localBuffer [32];
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint32 localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  byte localBuffer [40];
  ulonglong localUInt;
  
  localUInt = _DAT_180bf00a8 ^ (ulonglong)localBuffer;
  plocalLong1 = *(longlong **)(resourceHandle + 800);
  if (plocalLong1 != (longlong *)0x0) {
    localUInt = *memorySize;
    localUInt = memorySize[1];
    localUInt = memorySize[2];
    localUInt = memorySize[3];
    localLong3 = (**(code **)(*plocalLong1 + 0x288))(plocalLong1,&localUInt,1);
    if (localLong3 == 0) {
      localUInt = localUInt >> 0x18;
      localUInt = localUInt >> 0x18;
      localUInt = localUInt >> 0x10;
      localUInt = localUInt >> 0x10 & 0xff;
      localUInt = localUInt >> 8 & 0xff;
      localUInt = localUInt & 0xff;
      localUInt = localUInt >> 0x10 & 0xff;
      localUInt = localUInt >> 8 & 0xff;
      localUInt = localUInt & 0xff;
      localUInt = localUInt & 0xffff;
                    // WARNING: Subroutine does not return
      FUN_18076b390(localBuffer,0x27,&unknown_180958180,localUInt);
    }
    if ((**(int **)(localLong3 + 0xd0) != 0) ||
       (localInt2 = FUN_18088c060(*(uint32 *)(resourceHandle + 0x18)), localInt2 == 0)) {
      *operationFlags = localLong3;
    }
  }
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(localUInt ^ (ulonglong)localBuffer);
}




// 函数: void set_thread_local_data(ulonglong resourceHandle)
void set_thread_local_data(ulonglong resourceHandle)

{
  int localInt1;
  longlong inputRegister;
  longlong localLong2;
  longlong *unaff_RSI;
  longlong unaff_RDI;
  ulonglong uStack0000000000000070;
  ulonglong in_stack_000000a8;
  
  uStack0000000000000070 = resourceHandle;
  localLong2 = (**(code **)(inputRegister + 0x288))();
  if (localLong2 == 0) {
                    // WARNING: Subroutine does not return
    FUN_18076b390(&stack0x00000080,0x27,&unknown_180958180,uStack0000000000000070 & 0xffffffff,
                  uStack0000000000000070._4_2_);
  }
  if (**(int **)(localLong2 + 0xd0) == 0) {
    localInt1 = FUN_18088c060(*(uint32 *)(unaff_RDI + 0x18));
    if (localInt1 != 0) goto LAB_180894aca;
  }
  *unaff_RSI = localLong2;
LAB_180894aca:
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(in_stack_000000a8 ^ (ulonglong)&stack0x00000000);
}




// 函数: void get_thread_local_data(void)
void get_thread_local_data(void)

{
  ulonglong in_stack_000000a8;
  
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(in_stack_000000a8 ^ (ulonglong)&stack0x00000000);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void utilityGenerateResourceReport(longlong resourceHandle,uint32 *memorySize,longlong *operationFlags)
void utilityGenerateResourceReport(longlong resourceHandle,uint32 *memorySize,longlong *operationFlags)

{
  longlong *plocalLong1;
  int localInt2;
  longlong localLong3;
  byte localBuffer [32];
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  uint32 localUInt;
  uint localUInt;
  uint localUInt;
  uint localUInt;
  longlong lStack_48;
  byte localBuffer [40];
  ulonglong localUInt;
  
  localUInt = _DAT_180bf00a8 ^ (ulonglong)localBuffer;
  plocalLong1 = *(longlong **)(resourceHandle + 800);
  if (plocalLong1 != (longlong *)0x0) {
    localUInt = *memorySize;
    localUInt = memorySize[1];
    localUInt = memorySize[2];
    localUInt = memorySize[3];
    localLong3 = (**(code **)(*plocalLong1 + 0x2f8))(plocalLong1,&localUInt,1);
    if (localLong3 == 0) {
      localUInt = localUInt >> 0x18;
      localUInt = localUInt >> 0x18;
      localUInt = localUInt >> 0x10;
      localUInt = localUInt >> 0x10 & 0xff;
      localUInt = localUInt >> 8 & 0xff;
      localUInt = localUInt & 0xff;
      localUInt = localUInt >> 0x10 & 0xff;
      localUInt = localUInt >> 8 & 0xff;
      localUInt = localUInt & 0xff;
      localUInt = localUInt & 0xffff;
                    // WARNING: Subroutine does not return
      FUN_18076b390(localBuffer,0x27,&unknown_180958180,localUInt);
    }
    lStack_48 = *(longlong *)(localLong3 + 0x48);
    if ((lStack_48 != 0) || (localInt2 = FUN_18088ca20(resourceHandle,localLong3,&lStack_48), localInt2 == 0)) {
      *operationFlags = lStack_48;
    }
  }
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(localUInt ^ (ulonglong)localBuffer);
}




// 函数: void initialize_memory_pool(void)
void initialize_memory_pool(void)

{
                    // WARNING: Subroutine does not return
  FUN_18076b390();
}




// 函数: void allocate_from_pool(void)
void allocate_from_pool(void)

{
  int localInt1;
  longlong inputRegister;
  longlong *unaff_RDI;
  longlong lStack0000000000000080;
  ulonglong in_stack_000000b0;
  
  lStack0000000000000080 = *(longlong *)(inputRegister + 0x48);
  if ((lStack0000000000000080 != 0) || (localInt1 = FUN_18088ca20(), localInt1 == 0)) {
    *unaff_RDI = lStack0000000000000080;
  }
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(in_stack_000000b0 ^ (ulonglong)&stack0x00000000);
}




// 函数: void free_to_pool(longlong resourceHandle,uint64 memorySize)
void free_to_pool(longlong resourceHandle,uint64 memorySize)

{
  int localInt1;
  
  localInt1 = FUN_18088ee60(memorySize,resourceHandle + 0x10);
  if (((localInt1 == 0) && (localInt1 = FUN_18088ee20(memorySize,resourceHandle + 0x18), localInt1 == 0)) &&
     (localInt1 = FUN_18088f530(memorySize,resourceHandle + 0x20,*(uint32 *)(resourceHandle + 0x18)), localInt1 == 0)) {
    FUN_18088f5c0(memorySize,resourceHandle + 0x20 + (longlong)*(int *)(resourceHandle + 0x18) * 4);
  }
  return;
}




// 函数: void FUN_180894c94(void)
void FUN_180894c94(void)

{
  int localInt1;
  
  localInt1 = FUN_18088ee20();
  if (localInt1 == 0) {
    localInt1 = FUN_18088f530();
    if (localInt1 == 0) {
      FUN_18088f5c0();
    }
  }
  return;
}




// 函数: void FUN_180894cd2(void)
void FUN_180894cd2(void)

{
  return;
}




// 函数: void FUN_180894ce0(longlong resourceHandle,uint64 memorySize)
void FUN_180894ce0(longlong resourceHandle,uint64 memorySize)

{
  int localInt1;
  
  localInt1 = FUN_18088ee60(memorySize,resourceHandle + 0x10);
  if ((((localInt1 == 0) && (localInt1 = FUN_18088ee20(memorySize,resourceHandle + 0x18), localInt1 == 0)) &&
      (localInt1 = FUN_18088f620(memorySize,resourceHandle + 0x20,*(uint32 *)(resourceHandle + 0x18)), localInt1 == 0))
     && (localInt1 = FUN_18088f5c0(memorySize,resourceHandle + 0x20 + (longlong)*(int *)(resourceHandle + 0x18) * 8),
        localInt1 == 0)) {
    FUN_18088f470(memorySize,resourceHandle + 0x1c);
  }
  return;
}




// 函数: void FUN_180894d04(void)
void FUN_180894d04(void)

{
  int localInt1;
  
  localInt1 = FUN_18088ee20();
  if (localInt1 == 0) {
    localInt1 = FUN_18088f620();
    if (localInt1 == 0) {
      localInt1 = FUN_18088f5c0();
      if (localInt1 == 0) {
        FUN_18088f470();
      }
    }
  }
  return;
}




// 函数: void FUN_180894d52(void)
void FUN_180894d52(void)

{
  return;
}




// 函数: void FUN_180894d60(longlong resourceHandle,uint64 memorySize)
void FUN_180894d60(longlong resourceHandle,uint64 memorySize)

{
  int localInt1;
  
  localInt1 = FUN_18088ee20(memorySize,resourceHandle + 0x10);
  if (localInt1 == 0) {
    localInt1 = FUN_18088f620(memorySize,resourceHandle + 0x18,*(uint32 *)(resourceHandle + 0x10));
    if (localInt1 == 0) {
      localInt1 = FUN_18088f5c0(memorySize,resourceHandle + 0x18 + (longlong)*(int *)(resourceHandle + 0x10) * 8);
      if (localInt1 == 0) {
        FUN_18088f470(memorySize,resourceHandle + 0x14);
      }
    }
  }
  return;
}



uint32 utilityReadMemoryData(longlong resourceHandle,uint64 memorySize,uint operationFlags,longlong callbackFunction)

{
  longlong *plocalLong1;
  uint localUInt2;
  int localInt3;
  longlong *plVar4;
  int iVar5;
  uint uVar6;
  uint64 uStackX_20;
  uint64 localBuffer [2];
  
  if (callbackFunction == 0) {
    return 0x1f;
  }
  iVar5 = 0;
  localUInt2 = *(uint *)(resourceHandle + 0x20);
  localBuffer[0] = 0;
  localInt3 = utilityInitializeResource(localBuffer,resourceHandle);
  if (localInt3 == 0) {
    uStackX_20 = 0;
    uVar6 = operationFlags | 0x10000000;
    if ((localUInt2 & 1) == 0) {
      uVar6 = operationFlags;
    }
    localInt3 = allocate_memory_resource(resourceHandle,memorySize,uVar6,&uStackX_20);
    if ((localInt3 == 0) && (plocalLong1 = (longlong *)(callbackFunction + 8), plocalLong1 != (longlong *)0x0)) {
      plVar4 = (longlong *)*plocalLong1;
      if (plVar4 != plocalLong1) {
        do {
          plVar4 = (longlong *)*plVar4;
          iVar5 = iVar5 + 1;
        } while (plVar4 != plocalLong1);
        if (iVar5 != 0) goto LAB_180894ebf;
      }
      *(uint64 *)(callbackFunction + 0x10) = *(uint64 *)(resourceHandle + 0x58);
      *plocalLong1 = resourceHandle + 0x50;
      *(longlong **)(resourceHandle + 0x58) = plocalLong1;
      **(longlong **)(callbackFunction + 0x10) = (longlong)plocalLong1;
      func_0x0001808ded80(callbackFunction,uStackX_20);
      FUN_180882c20(resourceHandle,uStackX_20);
    }
  }
LAB_180894ebf:
                    // WARNING: Subroutine does not return
  utilityCleanupResource(localBuffer);
}



// WARNING: Removing unreachable block (ram,0x000180895f53)
// WARNING: Removing unreachable block (ram,0x000180895f67)
// WARNING: Removing unreachable block (ram,0x000180895fa1)
// WARNING: Removing unreachable block (ram,0x000180895fa9)
// WARNING: Removing unreachable block (ram,0x000180895fb1)
// WARNING: Removing unreachable block (ram,0x000180895fc0)
// WARNING: Removing unreachable block (ram,0x000180896027)
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint FUN_180894ef0(longlong *resourceHandle)

{
  int localInt1;
  uint localUInt2;
  uint uVar3;
  
  uVar3 = *(uint *)((longlong)resourceHandle + 0xc);
  localUInt2 = uVar3 ^ (int)uVar3 >> 0x1f;
  if ((int)(localUInt2 - ((int)uVar3 >> 0x1f)) < 0) {
    if (0 < (int)resourceHandle[1]) {
      return localUInt2;
    }
    if ((0 < (int)uVar3) && (*resourceHandle != 0)) {
                    // WARNING: Subroutine does not return
      utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),*resourceHandle,&utilityMemoryDataBuffer,0x100,1);
    }
    *resourceHandle = 0;
    uVar3 = 0;
    *(uint32 *)((longlong)resourceHandle + 0xc) = 0;
  }
  localInt1 = (int)resourceHandle[1];
  if (localInt1 < 0) {
    if (localInt1 < 0) {
                    // WARNING: Subroutine does not return
      memset(*resourceHandle + (longlong)localInt1 * 0xc,0,(ulonglong)(uint)-localInt1 * 0xc);
    }
  }
  *(uint32 *)(resourceHandle + 1) = 0;
  uVar3 = (uVar3 ^ (int)uVar3 >> 0x1f) - ((int)uVar3 >> 0x1f);
  if ((int)uVar3 < 1) {
    return uVar3;
  }
  if (0 < (int)resourceHandle[1]) {
    return 0x1c;
  }
  if ((0 < *(int *)((longlong)resourceHandle + 0xc)) && (*resourceHandle != 0)) {
                    // WARNING: Subroutine does not return
    utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),*resourceHandle,&utilityMemoryDataBuffer,0x100,1);
  }
  *resourceHandle = 0;
  *(uint32 *)((longlong)resourceHandle + 0xc) = 0;
  return 0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint64 FUN_180894fb0(longlong resourceHandle)

{
  longlong *plocalLong1;
  int localInt2;
  uint64 uVar3;
  uint uVar4;
  
  FUN_18088c620();
  FUN_180840270(resourceHandle + 0xd8);
  localInt2 = FUN_180744cc0(resourceHandle + 0x70);
  if ((localInt2 == 0) && (localInt2 = FUN_180895130(resourceHandle + 0x80), localInt2 == 0)) {
    *(uint32 *)(resourceHandle + 0x90) = 0xffffffff;
    *(uint32 *)(resourceHandle + 0x94) = 0;
  }
  FUN_180895130(resourceHandle + 0x80);
  FUN_180744cc0(resourceHandle + 0x70);
  localInt2 = FUN_180744cc0(resourceHandle + 0x28);
  if ((localInt2 == 0) && (localInt2 = FUN_180895070(resourceHandle + 0x38), localInt2 == 0)) {
    *(uint32 *)(resourceHandle + 0x48) = 0xffffffff;
    *(uint32 *)(resourceHandle + 0x4c) = 0;
  }
  FUN_180895070(resourceHandle + 0x38);
  FUN_180744cc0(resourceHandle + 0x28);
  FUN_180894ef0(resourceHandle + 0x18);
  plocalLong1 = (longlong *)(resourceHandle + 8);
  uVar4 = *(uint *)(resourceHandle + 0x14);
  if ((int)((uVar4 ^ (int)uVar4 >> 0x1f) - ((int)uVar4 >> 0x1f)) < 0) {
    if (0 < *(int *)(resourceHandle + 0x10)) {
      return 0x1c;
    }
    if ((0 < (int)uVar4) && (*plocalLong1 != 0)) {
                    // WARNING: Subroutine does not return
      utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),*plocalLong1,&utilityMemoryDataBuffer,0x100,1);
    }
    *plocalLong1 = 0;
    uVar4 = 0;
    *(uint32 *)(resourceHandle + 0x14) = 0;
  }
  localInt2 = *(int *)(resourceHandle + 0x10);
  if (localInt2 < 0) {
                    // WARNING: Subroutine does not return
    memset((longlong)localInt2 + *plocalLong1,0,(longlong)-localInt2);
  }
  *(uint32 *)(resourceHandle + 0x10) = 0;
  if ((0 < (int)((uVar4 ^ (int)uVar4 >> 0x1f) - ((int)uVar4 >> 0x1f))) &&
     (uVar3 = FUN_180849030(plocalLong1,0), (int)uVar3 != 0)) {
    return uVar3;
  }
  return 0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint64 FUN_180895070(longlong *resourceHandle)

{
  int localInt1;
  uint64 localUInt2;
  uint uVar3;
  
  uVar3 = *(uint *)((longlong)resourceHandle + 0xc);
  if ((int)((uVar3 ^ (int)uVar3 >> 0x1f) - ((int)uVar3 >> 0x1f)) < 0) {
    if (0 < (int)resourceHandle[1]) {
      return 0x1c;
    }
    if ((0 < (int)uVar3) && (*resourceHandle != 0)) {
                    // WARNING: Subroutine does not return
      utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),*resourceHandle,&utilityMemoryDataBuffer,0x100,1);
    }
    *resourceHandle = 0;
    uVar3 = 0;
    *(uint32 *)((longlong)resourceHandle + 0xc) = 0;
  }
  localInt1 = (int)resourceHandle[1];
  if (localInt1 < 0) {
                    // WARNING: Subroutine does not return
    memset(*resourceHandle + (longlong)localInt1 * 0xc,0,(longlong)-localInt1 * 0xc);
  }
  *(uint32 *)(resourceHandle + 1) = 0;
  if ((0 < (int)((uVar3 ^ (int)uVar3 >> 0x1f) - ((int)uVar3 >> 0x1f))) &&
     (localUInt2 = FUN_180896040(resourceHandle,0), (int)localUInt2 != 0)) {
    return localUInt2;
  }
  return 0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint64 FUN_180895130(longlong *resourceHandle)

{
  int localInt1;
  uint32 *plocalUInt2;
  uint64 uVar3;
  longlong lVar4;
  uint uVar5;
  
  uVar5 = *(uint *)((longlong)resourceHandle + 0xc);
  if ((int)((uVar5 ^ (int)uVar5 >> 0x1f) - ((int)uVar5 >> 0x1f)) < 0) {
    if (0 < (int)resourceHandle[1]) {
      return 0x1c;
    }
    if ((0 < (int)uVar5) && (*resourceHandle != 0)) {
                    // WARNING: Subroutine does not return
      utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),*resourceHandle,&utilityMemoryDataBuffer,0x100,1);
    }
    *resourceHandle = 0;
    *(uint32 *)((longlong)resourceHandle + 0xc) = 0;
    uVar5 = 0;
  }
  localInt1 = (int)resourceHandle[1];
  if (localInt1 < 0) {
    lVar4 = (longlong)-localInt1;
    if (localInt1 < 0) {
      plocalUInt2 = (uint32 *)((longlong)localInt1 * 0x10 + *resourceHandle + 4);
      do {
        plocalUInt2[-1] = 0;
        *plocalUInt2 = 0xffffffff;
        *(uint64 *)(plocalUInt2 + 1) = 0;
        plocalUInt2 = plocalUInt2 + 4;
        lVar4 = lVar4 + -1;
      } while (lVar4 != 0);
      uVar5 = *(uint *)((longlong)resourceHandle + 0xc);
    }
  }
  *(uint32 *)(resourceHandle + 1) = 0;
  if ((0 < (int)((uVar5 ^ (int)uVar5 >> 0x1f) - ((int)uVar5 >> 0x1f))) &&
     (uVar3 = FUN_1807d3f50(resourceHandle,0), (int)uVar3 != 0)) {
    return uVar3;
  }
  return 0;
}



uint64 FUN_180895210(longlong *resourceHandle)

{
  int localInt1;
  longlong localLong2;
  uint64 uVar3;
  ulonglong uVar4;
  longlong lVar5;
  uint uVar6;
  int *piVar7;
  int iVar8;
  ulonglong uVar9;
  ulonglong localUInt10;
  
  iVar8 = *(int *)((longlong)resourceHandle + 0x24);
  if (iVar8 == -1) {
    return 0x1c;
  }
  localInt1 = (int)resourceHandle[1];
  if (iVar8 == localInt1) {
    iVar8 = iVar8 * 2;
    if (iVar8 < 4) {
      iVar8 = 4;
    }
    if (((iVar8 <= localInt1) || ((int)resourceHandle[3] != localInt1)) || ((int)resourceHandle[4] != -1)) {
      return 0x1c;
    }
    uVar6 = (int)*(uint *)((longlong)resourceHandle + 0x1c) >> 0x1f;
    if (((int)((*(uint *)((longlong)resourceHandle + 0x1c) ^ uVar6) - uVar6) < iVar8) &&
       (uVar3 = FUN_1807d3f50(resourceHandle + 2,iVar8), (int)uVar3 != 0)) {
      return uVar3;
    }
    uVar3 = FUN_1807703c0(resourceHandle,iVar8);
    if ((int)uVar3 != 0) {
      return uVar3;
    }
    uVar9 = 0;
    uVar4 = uVar9;
    if (0 < iVar8) {
      do {
        *(uint32 *)(*resourceHandle + uVar4 * 4) = 0xffffffff;
        uVar4 = uVar4 + 1;
      } while ((longlong)uVar4 < (longlong)iVar8);
    }
    localLong2 = resourceHandle[3];
    uVar4 = uVar9;
    localUInt10 = uVar9;
    if (0 < (int)localLong2) {
      do {
        if ((int)resourceHandle[1] == 0) {
          return 0x1c;
        }
        lVar5 = (longlong)(int)(*(uint *)(uVar4 + resourceHandle[2]) & (int)resourceHandle[1] - 1U);
        piVar7 = (int *)(*resourceHandle + lVar5 * 4);
        iVar8 = *(int *)(*resourceHandle + lVar5 * 4);
        while (iVar8 != -1) {
          piVar7 = (int *)(resourceHandle[2] + 4 + (longlong)iVar8 * 0x10);
          iVar8 = *piVar7;
        }
        *piVar7 = (int)uVar9;
        localUInt10 = localUInt10 + 1;
        uVar9 = (ulonglong)((int)uVar9 + 1);
        *(uint32 *)(resourceHandle[2] + 4 + uVar4) = 0xffffffff;
        uVar4 = uVar4 + 0x10;
      } while ((longlong)localUInt10 < (longlong)(int)localLong2);
    }
  }
  return 0;
}



uint64 FUN_180895236(void)

{
  longlong localLong1;
  int in_EAX;
  uint64 localUInt2;
  ulonglong uVar3;
  longlong lVar4;
  uint uVar5;
  int *piVar6;
  longlong *baseRegister;
  int unaff_EDI;
  int iVar7;
  ulonglong uVar8;
  ulonglong uVar9;
  
  if (unaff_EDI == in_EAX) {
    iVar7 = unaff_EDI * 2;
    if (iVar7 < 4) {
      iVar7 = 4;
    }
    if (((iVar7 <= in_EAX) || ((int)baseRegister[3] != in_EAX)) || ((int)baseRegister[4] != -1)) {
      return 0x1c;
    }
    uVar5 = (int)*(uint *)((longlong)baseRegister + 0x1c) >> 0x1f;
    if (((int)((*(uint *)((longlong)baseRegister + 0x1c) ^ uVar5) - uVar5) < iVar7) &&
       (localUInt2 = FUN_1807d3f50(baseRegister + 2,iVar7), (int)localUInt2 != 0)) {
      return localUInt2;
    }
    localUInt2 = FUN_1807703c0();
    if ((int)localUInt2 != 0) {
      return localUInt2;
    }
    uVar8 = 0;
    uVar3 = uVar8;
    if (0 < iVar7) {
      do {
        *(uint32 *)(*baseRegister + uVar3 * 4) = 0xffffffff;
        uVar3 = uVar3 + 1;
      } while ((longlong)uVar3 < (longlong)iVar7);
    }
    localLong1 = baseRegister[3];
    uVar3 = uVar8;
    uVar9 = uVar8;
    if (0 < (int)localLong1) {
      do {
        if ((int)baseRegister[1] == 0) {
          return 0x1c;
        }
        lVar4 = (longlong)(int)(*(uint *)(uVar3 + baseRegister[2]) & (int)baseRegister[1] - 1U);
        piVar6 = (int *)(*baseRegister + lVar4 * 4);
        iVar7 = *(int *)(*baseRegister + lVar4 * 4);
        while (iVar7 != -1) {
          piVar6 = (int *)(baseRegister[2] + 4 + (longlong)iVar7 * 0x10);
          iVar7 = *piVar6;
        }
        *piVar6 = (int)uVar8;
        uVar9 = uVar9 + 1;
        uVar8 = (ulonglong)((int)uVar8 + 1);
        *(uint32 *)(baseRegister[2] + 4 + uVar3) = 0xffffffff;
        uVar3 = uVar3 + 0x10;
      } while ((longlong)uVar9 < (longlong)(int)localLong1);
    }
  }
  return 0;
}



uint64 FUN_180895345(void)

{
  return 0x1c;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void FUN_180895360(longlong resourceHandle,byte *memorySize,int *operationFlags)
void FUN_180895360(longlong resourceHandle,byte *memorySize,int *operationFlags)

{
  byte bVar1;
  longlong localLong2;
  char cVar3;
  int localInt4;
  uint64 uVar5;
  longlong lVar6;
  longlong lVar7;
  int iVar8;
  longlong lVar9;
  float fVar10;
  float fVar11;
  byte localBuffer [68];
  uint32 localUInt;
  int *plocalInt;
  longlong lStack_6e0;
  longlong lStack_6b8;
  longlong localArray [13];
  byte localBuffer [1536];
  ulonglong localUInt;
  
  localUInt = _DAT_180bf00a8 ^ (ulonglong)localBuffer;
  localInt4 = *(int *)(resourceHandle + 0xac);
  lVar7 = (longlong)localInt4;
  plocalInt = operationFlags;
  if (localInt4 < *(int *)(resourceHandle + 0x20)) {
    lStack_6e0 = *(longlong *)(resourceHandle + 0x18);
    lStack_6b8 = lVar7 * 3;
    lVar9 = (longlong)*(int *)(lStack_6e0 + lVar7 * 0xc) + *(longlong *)(resourceHandle + 8);
    cVar3 = *(char *)(lStack_6e0 + 8 + lVar7 * 0xc);
    if (cVar3 == '\x01') {
      iVar8 = *(int *)(resourceHandle + 0xb0);
      if (localInt4 < iVar8) {
        *(int *)(resourceHandle + 0xac) = localInt4 + 1;
        goto FUN_180895b89;
      }
      fVar10 = *(float *)(lVar9 + 0x18);
      fVar11 = fVar10;
      if (iVar8 != -1) {
        fVar11 = *(float *)(resourceHandle + 0xb4);
        iVar8 = -1;
        *(uint32 *)(resourceHandle + 0xb0) = 0xffffffff;
        *(uint32 *)(resourceHandle + 0xb4) = 0xbf800000;
      }
      *(float *)(resourceHandle + 0xa8) = fVar10;
      lVar7 = 0;
      fVar10 = (float)*(uint *)(resourceHandle + 0x68) * fVar10;
      if ((9.223372e+18 <= fVar10) && (fVar10 = fVar10 - 9.223372e+18, fVar10 < 9.223372e+18)) {
        lVar7 = -0x8000000000000000;
      }
      localLong2 = *(longlong *)(resourceHandle + 0xa0);
      lVar6 = *(longlong *)(resourceHandle + 0x98);
      if (lVar6 == 0) {
        fVar11 = (float)*(uint *)(resourceHandle + 0x68) * fVar11;
        lVar6 = 0;
        if ((9.223372e+18 <= fVar11) && (fVar11 = fVar11 - 9.223372e+18, fVar11 < 9.223372e+18)) {
          lVar6 = -0x8000000000000000;
        }
        lVar6 = localLong2 - ((longlong)fVar11 + lVar6);
        *(longlong *)(resourceHandle + 0x98) = lVar6;
      }
      bVar1 = *(byte *)(resourceHandle + 0x6c);
      if (*(longlong *)(resourceHandle + 0xc0) != 0) {
        uVar5 = FUN_180895ef0(resourceHandle);
        localInt4 = (**(code **)(resourceHandle + 0xc0))
                          (uVar5,localInt4,*(uint32 *)(lVar9 + 0x18),*(uint64 *)(resourceHandle + 0xb8)
                          );
        if (localInt4 != 0) goto FUN_180895b89;
      }
      if (((((bVar1 & 2) != 0 || (longlong)fVar10 + lVar7 < localLong2 - lVar6) &&
           (localInt4 = *plocalInt, *plocalInt = localInt4 + 1, localInt4 < 10)) &&
          ((*(uint *)(resourceHandle + 0x6c) >> 0x18 & 1) == 0)) &&
         (((*(uint *)(resourceHandle + 0x6c) >> 0x19 & 1) != 0 && (iVar8 == *(int *)(resourceHandle + 0xb0))))) {
LAB_18089555d:
                    // WARNING: Subroutine does not return
        memcpy(localBuffer,lVar9,(longlong)*(int *)(lVar9 + 8));
      }
    }
    else {
      if (cVar3 == '\x06') {
        cVar3 = func_0x000180881f80(*(uint64 *)(resourceHandle + 0x58));
        if (cVar3 == '\0') goto LAB_18089555d;
        *memorySize = 0;
        goto FUN_180895b89;
      }
      if (cVar3 == '\a') {
        cVar3 = func_0x000180881f80(*(uint64 *)(resourceHandle + 0x58));
        if (cVar3 == '\0') {
          if (*(int *)(*(longlong *)(*(longlong *)(*(longlong *)(resourceHandle + 0x58) + 0x90) + 0x790) +
                      0x1c8) != 0) {
            *memorySize = 0;
            goto FUN_180895b89;
          }
          goto LAB_18089555d;
        }
      }
      else {
        if ((cVar3 != '\x02') || ((*(byte *)(resourceHandle + 0x6c) & 4) != 0)) goto LAB_18089555d;
        localUInt = *(uint32 *)(lVar9 + 0x20);
        localInt4 = FUN_180895c60(resourceHandle,localInt4,&localUInt);
        if (localInt4 != 0) goto FUN_180895b89;
        localInt4 = SystemMemoryFunction(localUInt,localArray);
        if ((localInt4 != 0) || (*(int *)(localArray[0] + 0x30) != 2)) goto LAB_18089555d;
      }
    }
    *memorySize = 0;
  }
  else {
    *(uint *)(resourceHandle + 0x6c) = *(uint *)(resourceHandle + 0x6c) & 0xfdffffff;
    *(uint *)(resourceHandle + 0x6c) = *(uint *)(resourceHandle + 0x6c) | 0x4000000;
    *memorySize = 0;
  }
FUN_180895b89:
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(localUInt ^ (ulonglong)localBuffer);
}




// 函数: void FUN_1808953bf(longlong resourceHandle,uint64 memorySize,int *operationFlags)
void FUN_1808953bf(longlong resourceHandle,uint64 memorySize,int *operationFlags)

{
  longlong localLong1;
  char cVar2;
  int localInt3;
  int localInt4;
  longlong inputRegister;
  longlong lVar5;
  uint64 uVar6;
  longlong lVar7;
  int unaff_EBX;
  uint32 unaff_0000001c;
  longlong unaff_RBP;
  longlong unaff_RDI;
  char in_R11B;
  byte *unaff_R13;
  longlong lVar8;
  float fVar9;
  float fVar10;
  uint64 in_stack_00000040;
  int *in_stack_00000048;
  
  lVar5 = CONCAT44(unaff_0000001c,unaff_EBX) + CONCAT44(unaff_0000001c,unaff_EBX) * 2;
  lVar8 = (longlong)*(int *)(inputRegister + lVar5 * 4) + *(longlong *)(resourceHandle + 8);
  cVar2 = *(char *)(inputRegister + 8 + lVar5 * 4);
  *(longlong *)(unaff_RBP + -0x80) = lVar5;
  if (cVar2 == in_R11B) {
    localInt4 = *(int *)(resourceHandle + 0xb0);
    if (unaff_EBX < localInt4) {
      *(int *)(resourceHandle + 0xac) = unaff_EBX + 1;
      goto LAB_180895b69;
    }
    fVar9 = *(float *)(lVar8 + 0x18);
    fVar10 = fVar9;
    if (localInt4 != -1) {
      fVar10 = *(float *)(resourceHandle + 0xb4);
      localInt4 = -1;
      *(uint32 *)(resourceHandle + 0xb0) = 0xffffffff;
      *(uint32 *)(resourceHandle + 0xb4) = 0xbf800000;
    }
    *(float *)(resourceHandle + 0xa8) = fVar9;
    lVar5 = 0;
    fVar9 = (float)*(uint *)(resourceHandle + 0x68) * fVar9;
    if ((9.223372e+18 <= fVar9) && (fVar9 = fVar9 - 9.223372e+18, fVar9 < 9.223372e+18)) {
      lVar5 = -0x8000000000000000;
    }
    localLong1 = *(longlong *)(resourceHandle + 0xa0);
    lVar7 = *(longlong *)(resourceHandle + 0x98);
    if (lVar7 == 0) {
      fVar10 = (float)*(uint *)(resourceHandle + 0x68) * fVar10;
      lVar7 = 0;
      if ((9.223372e+18 <= fVar10) && (fVar10 = fVar10 - 9.223372e+18, fVar10 < 9.223372e+18)) {
        lVar7 = -0x8000000000000000;
      }
      lVar7 = localLong1 - ((longlong)fVar10 + lVar7);
      *(longlong *)(unaff_RDI + 0x98) = lVar7;
    }
    cVar2 = (longlong)fVar9 + lVar5 < localLong1 - lVar7;
    if ((*(byte *)(unaff_RDI + 0x6c) & 2) != 0) {
      cVar2 = in_R11B;
    }
    if (*(longlong *)(unaff_RDI + 0xc0) != 0) {
      uVar6 = FUN_180895ef0();
      localInt3 = (**(code **)(unaff_RDI + 0xc0))
                        (uVar6,unaff_EBX,*(uint32 *)(lVar8 + 0x18),
                         *(uint64 *)(unaff_RDI + 0xb8));
      operationFlags = in_stack_00000048;
      if (localInt3 != 0) goto LAB_180895b69;
    }
    if ((((cVar2 != '\0') && (localInt3 = *operationFlags, *operationFlags = localInt3 + 1, localInt3 < 10)) &&
        ((*(uint *)(unaff_RDI + 0x6c) >> 0x18 & 1) == 0)) &&
       (((*(uint *)(unaff_RDI + 0x6c) >> 0x19 & 1) != 0 && (localInt4 == *(int *)(unaff_RDI + 0xb0)))))
    {
LAB_18089555d:
                    // WARNING: Subroutine does not return
      memcpy(unaff_RBP + -0x10,lVar8,(longlong)*(int *)(lVar8 + 8));
    }
  }
  else {
    if (cVar2 == '\x06') {
      cVar2 = func_0x000180881f80(*(uint64 *)(resourceHandle + 0x58));
      if (cVar2 == '\0') goto LAB_18089555d;
      *unaff_R13 = 0;
      goto LAB_180895b69;
    }
    if (cVar2 == '\a') {
      cVar2 = func_0x000180881f80(*(uint64 *)(resourceHandle + 0x58));
      if (cVar2 == '\0') {
        if (*(int *)(*(longlong *)(*(longlong *)(*(longlong *)(unaff_RDI + 0x58) + 0x90) + 0x790) +
                    0x1c8) != 0) {
          *unaff_R13 = 0;
          goto LAB_180895b69;
        }
        goto LAB_18089555d;
      }
    }
    else {
      if ((cVar2 != '\x02') || ((*(byte *)(resourceHandle + 0x6c) & 4) != 0)) goto LAB_18089555d;
      in_stack_00000040._4_4_ = *(uint32 *)(lVar8 + 0x20);
      localInt4 = FUN_180895c60(resourceHandle,unaff_EBX,(longlong)&stackLocalBuffer + 4);
      if (localInt4 != 0) goto LAB_180895b69;
      localInt4 = SystemMemoryFunction(in_stack_00000040._4_4_,unaff_RBP + -0x78);
      if ((localInt4 != 0) || (*(int *)(*(longlong *)(unaff_RBP + -0x78) + 0x30) != 2))
      goto LAB_18089555d;
    }
  }
  *unaff_R13 = 0;
LAB_180895b69:
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(*(ulonglong *)(unaff_RBP + 0x5f0) ^ (ulonglong)&stack0x00000000);
}




// 函数: void FUN_180895b89(void)
void FUN_180895b89(void)

{
  longlong unaff_RBP;
  
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(*(ulonglong *)(unaff_RBP + 0x5f0) ^ (ulonglong)&stack0x00000000);
}




// 函数: void FUN_180895bb0(longlong resourceHandle,int memorySize,uint64 *operationFlags)
void FUN_180895bb0(longlong resourceHandle,int memorySize,uint64 *operationFlags)

{
  uint64 localUInt1;
  int *plocalInt2;
  longlong localLong3;
  longlong lVar4;
  int iVar5;
  
  *operationFlags = 0;
  operationFlags[1] = 0;
  plocalInt2 = (int *)(**(code **)(*(longlong *)
                                ((longlong)
                                 *(int *)(*(longlong *)(resourceHandle + 0x18) + (longlong)memorySize * 0xc) +
                                *(longlong *)(resourceHandle + 8)) + 0x50))();
  if (plocalInt2 == (int *)0x0) {
    iVar5 = 0;
  }
  else {
    iVar5 = *plocalInt2;
  }
  if (memorySize + 1 < *(int *)(resourceHandle + 0x20)) {
    lVar4 = (longlong)(memorySize + 1);
    plocalInt2 = (int *)(*(longlong *)(resourceHandle + 0x18) + lVar4 * 0xc);
    while (((char)plocalInt2[2] != '\x02' ||
           (localLong3 = (longlong)*plocalInt2 + *(longlong *)(resourceHandle + 8), *(int *)(localLong3 + 0x20) != iVar5)
           )) {
      lVar4 = lVar4 + 1;
      plocalInt2 = plocalInt2 + 3;
      if (*(int *)(resourceHandle + 0x20) <= lVar4) {
        return;
      }
    }
    localUInt1 = *(uint64 *)(localLong3 + 0x18);
    *operationFlags = *(uint64 *)(localLong3 + 0x10);
    operationFlags[1] = localUInt1;
  }
  return;
}



uint64 FUN_180895c60(longlong resourceHandle,int memorySize,uint *operationFlags)

{
  uint localUInt1;
  longlong localLong2;
  longlong localLong3;
  uint64 *puVar4;
  int iVar5;
  uint32 uStackX_1c;
  
  if (operationFlags != (uint *)0x0) {
    localUInt1 = *operationFlags;
    if (localUInt1 != 0) {
      if (((*(int *)(resourceHandle + 0x94) != 0) && (*(int *)(resourceHandle + 0x78) != 0)) &&
         (iVar5 = *(int *)(*(longlong *)(resourceHandle + 0x70) +
                          (longlong)(int)(*(int *)(resourceHandle + 0x78) - 1U & localUInt1) * 4), iVar5 != -1))
      {
        localLong2 = *(longlong *)(resourceHandle + 0x80);
        do {
          localLong3 = (longlong)iVar5;
          if (*(uint *)(localLong2 + localLong3 * 0x10) == localUInt1) {
            uStackX_1c = (uint)((ulonglong)*(uint64 *)(localLong2 + 8 + localLong3 * 0x10) >> 0x20);
            if (uStackX_1c != 0) {
              *operationFlags = uStackX_1c;
              return 0;
            }
            goto LAB_180895ccb;
          }
          iVar5 = *(int *)(localLong2 + 4 + localLong3 * 0x10);
        } while (iVar5 != -1);
      }
      uStackX_1c = 0;
LAB_180895ccb:
      puVar4 = (uint64 *)
               ((longlong)*(int *)(*(longlong *)(resourceHandle + 0x18) + (longlong)memorySize * 0xc) +
               *(longlong *)(resourceHandle + 8));
      if (puVar4 != (uint64 *)0x0) {
        (**(code **)*puVar4)();
      }
      *operationFlags = uStackX_1c;
      return 0;
    }
  }
  return 0x1e;
}



uint64 FUN_180895c8b(longlong resourceHandle,uint64 memorySize,longlong operationFlags,uint callbackFunction)

{
  longlong localLong1;
  longlong localLong2;
  uint64 *puVar3;
  int localInt4;
  int *unaff_RDI;
  longlong in_R10;
  bool in_ZF;
  int iStack0000000000000044;
  
  if (((!in_ZF) && (*(int *)(resourceHandle + 0x78) != 0)) &&
     (localInt4 = *(int *)(*(longlong *)(in_R10 + 0x70) +
                      (longlong)(int)(*(int *)(resourceHandle + 0x78) - 1U & callbackFunction) * 4), localInt4 != -1)) {
    localLong1 = *(longlong *)(in_R10 + 0x80);
    do {
      localLong2 = (longlong)localInt4;
      if (*(uint *)(localLong1 + localLong2 * 0x10) == callbackFunction) {
        iStack0000000000000044 = (int)((ulonglong)*(uint64 *)(localLong1 + 8 + localLong2 * 0x10) >> 0x20)
        ;
        if (iStack0000000000000044 != 0) {
          *unaff_RDI = iStack0000000000000044;
          return 0;
        }
        goto LAB_180895ccb;
      }
      localInt4 = *(int *)(localLong1 + 4 + localLong2 * 0x10);
    } while (localInt4 != -1);
  }
  iStack0000000000000044 = 0;
LAB_180895ccb:
  puVar3 = (uint64 *)
           ((longlong)*(int *)(*(longlong *)(in_R10 + 0x18) + operationFlags * 0xc) +
           *(longlong *)(in_R10 + 8));
  if (puVar3 != (uint64 *)0x0) {
    (**(code **)*puVar3)();
  }
  *unaff_RDI = iStack0000000000000044;
  return 0;
}



uint64 FUN_180895cf1(longlong resourceHandle,uint64 memorySize,longlong operationFlags)

{
  uint64 localUInt1;
  longlong inputRegister;
  uint64 *plocalUInt2;
  int *unaff_RDI;
  longlong in_R10;
  uint64 uStack0000000000000040;
  
  localUInt1 = *(uint64 *)(resourceHandle + 8 + inputRegister * 8);
  uStack0000000000000040._4_4_ = (int)((ulonglong)localUInt1 >> 0x20);
  if (uStack0000000000000040._4_4_ != 0) {
    *unaff_RDI = uStack0000000000000040._4_4_;
    return 0;
  }
  plocalUInt2 = (uint64 *)
           ((longlong)*(int *)(*(longlong *)(in_R10 + 0x18) + operationFlags * 0xc) +
           *(longlong *)(in_R10 + 8));
  if (plocalUInt2 != (uint64 *)0x0) {
    uStack0000000000000040 = localUInt1;
    (**(code **)*plocalUInt2)();
  }
  *unaff_RDI = 0;
  return 0;
}



uint64 FUN_180895d16(void)

{
  return 0x1e;
}



uint64 FUN_180895d30(longlong *resourceHandle,uint *memorySize,uint64 *operationFlags)

{
  uint localUInt1;
  int localInt2;
  int localInt3;
  uint64 uVar4;
  uint64 uVar5;
  uint64 *puVar6;
  int iVar7;
  longlong lVar8;
  longlong lVar9;
  uint *plocalUInt10;
  uint localUInt11;
  int localInt12;
  int *plocalInt13;
  
  uVar4 = FUN_180895210();
  if ((int)uVar4 == 0) {
    if ((int)resourceHandle[1] == 0) {
      return 0x1c;
    }
    localUInt1 = *memorySize;
    lVar8 = (longlong)(int)((int)resourceHandle[1] - 1U & localUInt1);
    plocalInt13 = (int *)(*resourceHandle + lVar8 * 4);
    localInt2 = *(int *)(*resourceHandle + lVar8 * 4);
    if (localInt2 != -1) {
      lVar8 = resourceHandle[2];
      do {
        lVar9 = (longlong)localInt2;
        if (*(uint *)(lVar8 + lVar9 * 0x10) == localUInt1) {
          *(uint64 *)(lVar8 + 8 + lVar9 * 0x10) = *operationFlags;
          return 0;
        }
        localInt2 = *(int *)(lVar8 + 4 + lVar9 * 0x10);
        plocalInt13 = (int *)(lVar8 + 4 + lVar9 * 0x10);
      } while (localInt2 != -1);
    }
    localInt2 = (int)resourceHandle[4];
    if (localInt2 == -1) {
      uVar4 = *operationFlags;
      localInt2 = (int)resourceHandle[3];
      iVar7 = localInt2 + 1;
      localUInt11 = (int)*(uint *)((longlong)resourceHandle + 0x1c) >> 0x1f;
      localInt3 = (*(uint *)((longlong)resourceHandle + 0x1c) ^ localUInt11) - localUInt11;
      if (localInt3 < iVar7) {
        localInt12 = (int)((float)localInt3 * 1.5);
        localInt3 = iVar7;
        if (iVar7 <= localInt12) {
          localInt3 = localInt12;
        }
        if (localInt3 < 4) {
          localInt12 = 4;
        }
        else if (localInt12 < iVar7) {
          localInt12 = iVar7;
        }
        uVar5 = FUN_1807d3f50(resourceHandle + 2,localInt12);
        if ((int)uVar5 != 0) {
          return uVar5;
        }
      }
      puVar6 = (uint64 *)((longlong)(int)resourceHandle[3] * 0x10 + resourceHandle[2]);
      *puVar6 = CONCAT44(0xffffffff,localUInt1);
      puVar6[1] = uVar4;
      *(int *)(resourceHandle + 3) = (int)resourceHandle[3] + 1;
    }
    else {
      plocalUInt10 = (uint *)((longlong)localInt2 * 0x10 + resourceHandle[2]);
      *(uint *)(resourceHandle + 4) = plocalUInt10[1];
      plocalUInt10[1] = 0xffffffff;
      *plocalUInt10 = *memorySize;
      *(uint64 *)(plocalUInt10 + 2) = *operationFlags;
    }
    *plocalInt13 = localInt2;
    *(int *)((longlong)resourceHandle + 0x24) = *(int *)((longlong)resourceHandle + 0x24) + 1;
    uVar4 = 0;
  }
  return uVar4;
}



uint64 FUN_180895d62(uint64 resourceHandle,int memorySize)

{
  longlong localLong1;
  int in_EAX;
  int localInt2;
  int localInt3;
  uint64 uVar4;
  uint64 *puVar5;
  int iVar6;
  longlong lVar7;
  uint32 *puVar8;
  uint uVar9;
  int localInt10;
  int *plocalInt11;
  longlong *unaff_RDI;
  uint64 *unaff_R14;
  uint32 *unaff_R15;
  uint64 uStack0000000000000028;
  
  plocalInt11 = (int *)(*unaff_RDI + (longlong)in_EAX * 4);
  localInt2 = *(int *)(*unaff_RDI + (longlong)in_EAX * 4);
  if (localInt2 != -1) {
    localLong1 = unaff_RDI[2];
    do {
      lVar7 = (longlong)localInt2;
      if (*(int *)(localLong1 + lVar7 * 0x10) == memorySize) {
        *(uint64 *)(localLong1 + 8 + lVar7 * 0x10) = *unaff_R14;
        return 0;
      }
      localInt2 = *(int *)(localLong1 + 4 + lVar7 * 0x10);
      plocalInt11 = (int *)(localLong1 + 4 + lVar7 * 0x10);
    } while (localInt2 != -1);
  }
  localInt2 = (int)unaff_RDI[4];
  if (localInt2 == -1) {
    uStack0000000000000028 = *unaff_R14;
    localInt2 = (int)unaff_RDI[3];
    iVar6 = localInt2 + 1;
    uVar9 = (int)*(uint *)((longlong)unaff_RDI + 0x1c) >> 0x1f;
    localInt3 = (*(uint *)((longlong)unaff_RDI + 0x1c) ^ uVar9) - uVar9;
    if (localInt3 < iVar6) {
      localInt10 = (int)((float)localInt3 * 1.5);
      localInt3 = iVar6;
      if (iVar6 <= localInt10) {
        localInt3 = localInt10;
      }
      if (localInt3 < 4) {
        localInt10 = 4;
      }
      else if (localInt10 < iVar6) {
        localInt10 = iVar6;
      }
      uVar4 = FUN_1807d3f50(unaff_RDI + 2,localInt10);
      if ((int)uVar4 != 0) {
        return uVar4;
      }
    }
    puVar5 = (uint64 *)((longlong)(int)unaff_RDI[3] * 0x10 + unaff_RDI[2]);
    *puVar5 = CONCAT44(0xffffffff,memorySize);
    puVar5[1] = uStack0000000000000028;
    *(int *)(unaff_RDI + 3) = (int)unaff_RDI[3] + 1;
  }
  else {
    puVar8 = (uint32 *)((longlong)localInt2 * 0x10 + unaff_RDI[2]);
    *(uint32 *)(unaff_RDI + 4) = puVar8[1];
    puVar8[1] = 0xffffffff;
    *puVar8 = *unaff_R15;
    *(uint64 *)(puVar8 + 2) = *unaff_R14;
  }
  *plocalInt11 = localInt2;
  *(int *)((longlong)unaff_RDI + 0x24) = *(int *)((longlong)unaff_RDI + 0x24) + 1;
  return 0;
}



uint64 FUN_180895d9c(uint64 resourceHandle,uint32 memorySize)

{
  int localInt1;
  uint64 localUInt2;
  uint64 *puVar3;
  int localInt4;
  uint32 *puVar5;
  uint uVar6;
  int iVar7;
  int *baseRegister;
  int iVar8;
  longlong unaff_RDI;
  uint64 *unaff_R14;
  uint32 *unaff_R15;
  uint64 uStack0000000000000028;
  
  iVar8 = *(int *)(unaff_RDI + 0x20);
  if (iVar8 == -1) {
    uStack0000000000000028 = *unaff_R14;
    iVar8 = *(int *)(unaff_RDI + 0x18);
    localInt4 = iVar8 + 1;
    uVar6 = (int)*(uint *)(unaff_RDI + 0x1c) >> 0x1f;
    localInt1 = (*(uint *)(unaff_RDI + 0x1c) ^ uVar6) - uVar6;
    if (localInt1 < localInt4) {
      iVar7 = (int)((float)localInt1 * 1.5);
      localInt1 = localInt4;
      if (localInt4 <= iVar7) {
        localInt1 = iVar7;
      }
      if (localInt1 < 4) {
        iVar7 = 4;
      }
      else if (iVar7 < localInt4) {
        iVar7 = localInt4;
      }
      localUInt2 = FUN_1807d3f50(unaff_RDI + 0x10,iVar7);
      if ((int)localUInt2 != 0) {
        return localUInt2;
      }
    }
    puVar3 = (uint64 *)
             ((longlong)*(int *)(unaff_RDI + 0x18) * 0x10 + *(longlong *)(unaff_RDI + 0x10));
    *puVar3 = CONCAT44(0xffffffff,memorySize);
    puVar3[1] = uStack0000000000000028;
    *(int *)(unaff_RDI + 0x18) = *(int *)(unaff_RDI + 0x18) + 1;
  }
  else {
    puVar5 = (uint32 *)((longlong)iVar8 * 0x10 + *(longlong *)(unaff_RDI + 0x10));
    *(uint32 *)(unaff_RDI + 0x20) = puVar5[1];
    puVar5[1] = 0xffffffff;
    *puVar5 = *unaff_R15;
    *(uint64 *)(puVar5 + 2) = *unaff_R14;
  }
  *baseRegister = iVar8;
  *(int *)(unaff_RDI + 0x24) = *(int *)(unaff_RDI + 0x24) + 1;
  return 0;
}



uint64 FUN_180895e00(longlong resourceHandle,uint64 memorySize,longlong operationFlags)

{
  uint64 *unaff_R14;
  
  *(uint64 *)(operationFlags + 8 + resourceHandle * 8) = *unaff_R14;
  return 0;
}



// 资源分配函数 - 分配并初始化资源
uint64
allocateResource(int resourceHandle, int memorySize, uint64 operationFlags, uint64 callbackFunction, uint64 param_5)

{
  uint64 allocationResult;
  uint64 *resourceDataPtr;
  uint32 *baseRegister;
  uint32 registerValue;
  longlong resourceManagerPtr;
  uint64 stackValue;
  
  if (memorySize < resourceHandle) {
    memorySize = resourceHandle;
  }
  allocationResult = allocateMemory(resourceManagerPtr + 0x10, memorySize);
  if ((int)allocationResult == 0) {
    resourceDataPtr = (uint64 *)
             ((longlong)*(int *)(resourceManagerPtr + 0x18) * 0x10 + *(longlong *)(resourceManagerPtr + 0x10));
    *resourceDataPtr = stackValue;
    resourceDataPtr[1] = param_5;
    *(int *)(resourceManagerPtr + 0x18) = *(int *)(resourceManagerPtr + 0x18) + 1;
    *baseRegister = registerValue;
    *(int *)(resourceManagerPtr + 0x24) = *(int *)(resourceManagerPtr + 0x24) + 1;
    allocationResult = 0;
  }
  return allocationResult;
}




// 空函数 - 占位符函数
void emptyFunction(void)

{
  return;
}



// 获取资源状态函数 - 获取指定资源的状态信息
uint32 getResourceStatus(uint64 resourceHandle)

{
  int operationResult;
  uint32 statusBuffer [6];
  
  statusBuffer[0] = 0;
  operationResult = queryResourceStatus(resourceHandle, statusBuffer);
  if (operationResult == 0) {
    return statusBuffer[0];
  }
  return 0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint64 FUN_180895f20(longlong *resourceHandle,int memorySize)

{
  int localInt1;
  longlong localLong2;
  uint64 *puVar3;
  longlong lVar4;
  uint64 *puVar5;
  
  if (memorySize < (int)resourceHandle[1]) {
    return 0x1c;
  }
  puVar3 = (uint64 *)0x0;
  if (memorySize != 0) {
    if (memorySize * 0xc - 1U < 0x3fffffff) {
      puVar3 = (uint64 *)
               utilityAccessSystemResource(*(uint64 *)(utilitySystemDataTable + 0x1a0),memorySize * 0xc,&utilityMemoryDataBuffer,
                             0xf4,0,0,1);
      if (puVar3 != (uint64 *)0x0) {
        localInt1 = (int)resourceHandle[1];
        lVar4 = (longlong)localInt1;
        if ((localInt1 != 0) && (localLong2 = *resourceHandle, 0 < localInt1)) {
          puVar5 = puVar3;
          do {
            *puVar5 = *(uint64 *)((localLong2 - (longlong)puVar3) + (longlong)puVar5);
            *(uint32 *)(puVar5 + 1) =
                 *(uint32 *)((localLong2 - (longlong)puVar3) + 8 + (longlong)puVar5);
            puVar5 = (uint64 *)((longlong)puVar5 + 0xc);
            lVar4 = lVar4 + -1;
          } while (lVar4 != 0);
        }
        goto LAB_180895fdc;
      }
    }
    return 0x26;
  }
LAB_180895fdc:
  if ((0 < *(int *)((longlong)resourceHandle + 0xc)) && (*resourceHandle != 0)) {
                    // WARNING: Subroutine does not return
    utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),*resourceHandle,&utilityMemoryDataBuffer,0x100,1);
  }
  *resourceHandle = (longlong)puVar3;
  *(int *)((longlong)resourceHandle + 0xc) = memorySize;
  return 0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint64 FUN_180895f44(uint64 resourceHandle,int memorySize)

{
  int localInt1;
  longlong localLong2;
  uint64 *puVar3;
  longlong lVar4;
  uint64 *puVar5;
  longlong *baseRegister;
  int unaff_EDI;
  
  puVar3 = (uint64 *)0x0;
  if (unaff_EDI == 0) {
LAB_180895fdc:
    if ((0 < *(int *)((longlong)baseRegister + 0xc)) && (*baseRegister != 0)) {
                    // WARNING: Subroutine does not return
      utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),*baseRegister,&utilityMemoryDataBuffer,0x100,1);
    }
    *baseRegister = (longlong)puVar3;
    *(int *)((longlong)baseRegister + 0xc) = unaff_EDI;
    return 0;
  }
  if (memorySize * 0xc - 1U < 0x3fffffff) {
    puVar3 = (uint64 *)
             utilityAccessSystemResource(*(uint64 *)(utilitySystemDataTable + 0x1a0),memorySize * 0xc,&utilityMemoryDataBuffer,0xf4
                           ,0);
    if (puVar3 != (uint64 *)0x0) {
      localInt1 = (int)baseRegister[1];
      lVar4 = (longlong)localInt1;
      if ((localInt1 != 0) && (localLong2 = *baseRegister, 0 < localInt1)) {
        puVar5 = puVar3;
        do {
          *puVar5 = *(uint64 *)((localLong2 - (longlong)puVar3) + (longlong)puVar5);
          *(uint32 *)(puVar5 + 1) =
               *(uint32 *)((localLong2 - (longlong)puVar3) + 8 + (longlong)puVar5);
          puVar5 = (uint64 *)((longlong)puVar5 + 0xc);
          lVar4 = lVar4 + -1;
        } while (lVar4 != 0);
      }
      goto LAB_180895fdc;
    }
  }
  return 0x26;
}



uint64 FUN_180896027(void)

{
  return 0x26;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint64 FUN_180896040(longlong *resourceHandle,int memorySize)

{
  longlong localLong1;
  
  if (memorySize < (int)resourceHandle[1]) {
    return 0x1c;
  }
  localLong1 = 0;
  if (memorySize != 0) {
    if (memorySize * 0xc - 1U < 0x3fffffff) {
      localLong1 = utilityAccessSystemResource(*(uint64 *)(utilitySystemDataTable + 0x1a0),memorySize * 0xc,&utilityMemoryDataBuffer,
                            0xf4,0,0,1);
      if (localLong1 != 0) {
        if ((int)resourceHandle[1] != 0) {
                    // WARNING: Subroutine does not return
          memcpy(localLong1,*resourceHandle,(longlong)(int)resourceHandle[1] * 0xc);
        }
        goto LAB_1808960d4;
      }
    }
    return 0x26;
  }
LAB_1808960d4:
  if ((0 < *(int *)((longlong)resourceHandle + 0xc)) && (*resourceHandle != 0)) {
                    // WARNING: Subroutine does not return
    utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),*resourceHandle,&utilityMemoryDataBuffer,0x100,1);
  }
  *resourceHandle = localLong1;
  *(int *)((longlong)resourceHandle + 0xc) = memorySize;
  return 0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint64 FUN_180896064(uint64 resourceHandle,int memorySize)

{
  longlong localLong1;
  longlong *baseRegister;
  int unaff_EDI;
  
  localLong1 = 0;
  if (unaff_EDI == 0) {
LAB_1808960d4:
    if ((0 < *(int *)((longlong)baseRegister + 0xc)) && (*baseRegister != 0)) {
                    // WARNING: Subroutine does not return
      utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),*baseRegister,&utilityMemoryDataBuffer,0x100,1);
    }
    *baseRegister = localLong1;
    *(int *)((longlong)baseRegister + 0xc) = unaff_EDI;
    return 0;
  }
  if (memorySize * 0xc - 1U < 0x3fffffff) {
    localLong1 = utilityAccessSystemResource(*(uint64 *)(utilitySystemDataTable + 0x1a0),memorySize * 0xc,&utilityMemoryDataBuffer,0xf4,
                          0);
    if (localLong1 != 0) {
      if ((int)baseRegister[1] != 0) {
                    // WARNING: Subroutine does not return
        memcpy(localLong1,*baseRegister,(longlong)(int)baseRegister[1] * 0xc);
      }
      goto LAB_1808960d4;
    }
  }
  return 0x26;
}



uint64 FUN_18089611f(void)

{
  return 0x26;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

ulonglong FUN_180896140(longlong resourceHandle)

{
  byte *pbVar1;
  uint32 localUInt2;
  uint64 uVar3;
  int localInt4;
  longlong lVar5;
  ulonglong uVar6;
  int iVar7;
  uint uVar8;
  uint uVar9;
  ulonglong localUInt10;
  int localInt11;
  uint32 *plocalUInt12;
  longlong *plocalLong13;
  int localInt14;
  longlong localLong15;
  int localInt16;
  bool bVar17;
  int aiStackX_8 [2];
  uint auStackX_10 [2];
  uint64 uStackX_18;
  byte auStackX_20 [8];
  ulonglong localUInt;
  uint64 localUInt;
  longlong *plStack_108;
  ulonglong localUInt;
  int alocalInt [2];
  data *localPtr;
  uint32 localUInt;
  uint32 localUInt;
  data *localPtr;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  data *localPtr;
  uint32 localUInt;
  uint32 localUInt;
  uint localUInt;
  data *localPtr;
  uint32 localUInt;
  uint32 localUInt;
  byte localUInt;
  byte localBuffer [8];
  byte localBuffer [8];
  byte localBuffer [40];
  
  uVar8 = *(uint *)(resourceHandle + 0x6c);
  uVar6 = 0;
  localInt4 = 0;
  if ((uVar8 >> 0x1a & 1) == 0) goto LAB_1808963ec;
  if ((uVar8 & 1) == 0) {
    plStack_108 = (longlong *)(resourceHandle + 0x70);
    localUInt = 0;
    localInt16 = 0;
    auStackX_10[0] = 0;
    localUInt = 0;
    localUInt = 0xffffffffffffffff;
    alocalInt[0] = -1;
    FUN_1807d1650(plStack_108,&localUInt,alocalInt);
    aiStackX_8[0] = alocalInt[0];
    if (alocalInt[0] != -1) {
      plocalLong13 = plStack_108;
      localUInt10 = uVar6;
      localInt11 = (int)localUInt;
      do {
        do {
          localInt16 = (int)localUInt10;
          lVar5 = plocalLong13[2];
          localLong15 = (longlong)aiStackX_8[0];
          localInt4 = *(int *)(lVar5 + 8 + localLong15 * 0x10);
          if (localInt4 == 2) {
            localInt4 = SystemMemoryFunction(*(uint32 *)(lVar5 + 0xc + localLong15 * 0x10),&uStackX_18);
            uVar3 = uStackX_18;
            plocalLong13 = plStack_108;
            if ((localInt4 == 0) &&
               (localInt4 = func_0x0001808c7ed0(uStackX_18), plocalLong13 = plStack_108, 0 < localInt4)) {
              do {
                localUInt = *(uint32 *)(lVar5 + 0xc + localLong15 * 0x10);
                localUInt = 0;
                localPtr = &unknown_180983588;
                utilityOptimizeResourceUsage(&localPtr,*(uint64 *)(resourceHandle + 0x58));
                localInt4 = func_0x0001808c7ed0(uVar3);
              } while (0 < localInt4);
              uVar6 = (ulonglong)auStackX_10[0];
              plocalLong13 = plStack_108;
            }
          }
          else if (localInt4 == 3) {
            localInt4 = SystemMemoryFunction(*(uint32 *)(lVar5 + 0xc + localLong15 * 0x10),auStackX_20);
            plocalLong13 = plStack_108;
            if (localInt4 == 0) {
              localPtr = &unknown_180983b68;
              localUInt = *(uint32 *)(lVar5 + 0xc + localLong15 * 0x10);
              localUInt = 0;
              localUInt = 1;
              utilityCompleteResourceCycle(&localPtr,*(uint64 *)(resourceHandle + 0x58));
              localPtr = &unknown_180983cf8;
              localUInt = *(uint32 *)(lVar5 + 0xc + localLong15 * 0x10);
              localUInt = 0;
              utilityControlResourceAccess(&localPtr,*(uint64 *)(resourceHandle + 0x58));
              plocalLong13 = plStack_108;
            }
          }
          else if (localInt4 == 5) {
            localInt4 = SystemMemoryFunction(*(uint32 *)(lVar5 + 0xc + localLong15 * 0x10),localBuffer);
            plocalLong13 = plStack_108;
            if (localInt4 == 0) {
              localPtr = &unknown_1809842e0;
              localUInt = *(uint32 *)(lVar5 + 0xc + localLong15 * 0x10);
              localUInt = 0;
              localUInt = 0x3f800000;
              calculate_file_hash(&localPtr,*(uint64 *)(resourceHandle + 0x58));
              localPtr = &unknown_180984358;
              localUInt = *(uint32 *)(lVar5 + 0xc + localLong15 * 0x10);
              localUInt = 0;
              localUInt = 0;
              decompress_file(&localPtr,*(uint64 *)(resourceHandle + 0x58));
              localPtr = &unknown_1809843d0;
              localUInt = *(uint32 *)(lVar5 + 0xc + localLong15 * 0x10);
              localUInt = 0;
              localUInt = localUInt & 0xffffff00;
              compress_file(&localPtr,*(uint64 *)(resourceHandle + 0x58));
              localPtr = &unknown_1809841e0;
              localUInt = *(uint32 *)(lVar5 + 0xc + localLong15 * 0x10);
              localUInt = 0;
              verify_file_integrity(&localPtr,*(uint64 *)(resourceHandle + 0x58));
              plocalLong13 = plStack_108;
            }
          }
          else if (localInt4 == 6) {
            localInt4 = SystemMemoryFunction(*(uint32 *)(lVar5 + 0xc + localLong15 * 0x10),localBuffer);
            plocalLong13 = plStack_108;
            if (localInt4 == 0) {
              localPtr = &unknown_1809844c8;
              localUInt = *(uint32 *)(lVar5 + 0xc + localLong15 * 0x10);
              localUInt = 0;
              localUInt = 0x3f800000;
              fetch_database_results(&localPtr,*(uint64 *)(resourceHandle + 0x58));
              plocalLong13 = plStack_108;
            }
          }
          else if ((localInt4 == 7) &&
                  (localInt4 = SystemMemoryFunction(*(uint32 *)(lVar5 + 0xc + localLong15 * 0x10),
                                               localBuffer), plocalLong13 = plStack_108, localInt4 == 0)) {
            localUInt2 = *(uint32 *)(lVar5 + 0xc + localLong15 * 0x10);
            iVar7 = (int)uVar6 + 1;
            localInt4 = localInt16;
            if (localInt16 < 0) {
              localInt4 = -localInt16;
            }
            localInt14 = (int)uVar6;
            if (localInt4 < iVar7) {
              if (localInt16 < 0) {
                localInt16 = -localInt16;
              }
              localInt16 = (int)((float)localInt16 * 1.5);
              localInt4 = iVar7;
              if (iVar7 <= localInt16) {
                localInt4 = localInt16;
              }
              if (localInt4 < 0x10) {
                localInt16 = 0x10;
              }
              else if (localInt16 < iVar7) {
                localInt16 = iVar7;
              }
              uVar8 = FUN_18084c470(&localUInt,localInt16);
              uVar6 = (ulonglong)uVar8;
              localInt4 = (int)localUInt;
              if (uVar8 != 0) {
                uVar8 = localUInt._4_4_;
                if ((longlong)localUInt < 0) {
                  uVar8 = -localUInt._4_4_;
                }
                lVar5 = (longlong)(int)localUInt;
                uVar9 = localUInt._4_4_;
                if ((int)uVar8 < 0) {
                  if (0 < (int)localUInt) {
                    return uVar6;
                  }
                  if ((0 < (int)localUInt._4_4_) && (localUInt != 0)) {
                    // WARNING: Subroutine does not return
                    utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),localUInt,&utilityMemoryDataBuffer,
                                  0x100,1);
                  }
                  localUInt = 0;
                  localUInt = 0;
                  uVar9 = 0;
                }
                if (localInt4 < 0) {
                  plocalUInt12 = (uint32 *)(localUInt + lVar5 * 4);
                  lVar5 = (longlong)-localInt4;
                  if (localInt4 < 0) {
                    for (; lVar5 != 0; lVar5 = lVar5 + -1) {
                      *plocalUInt12 = 0;
                      plocalUInt12 = plocalUInt12 + 1;
                    }
                  }
                }
                localUInt = localUInt & 0xffffffff00000000;
                if ((int)uVar9 < 0) {
                  uVar9 = -uVar9;
                }
                if (uVar9 == 0) {
                  return uVar6;
                }
                FUN_18084c470(&localUInt,0);
                return uVar6;
              }
              localUInt10 = (ulonglong)localUInt._4_4_;
              localInt14 = (int)localUInt;
            }
            auStackX_10[0] = localInt14 + 1;
            uVar6 = (ulonglong)auStackX_10[0];
            localUInt = CONCAT44(localUInt._4_4_,auStackX_10[0]);
            *(uint32 *)(localUInt + (longlong)localInt14 * 4) = localUInt2;
            plocalLong13 = plStack_108;
          }
          localInt4 = (int)localUInt10;
          localInt16 = (int)uVar6;
        } while ((aiStackX_8[0] != -1) &&
                (aiStackX_8[0] = *(int *)(plocalLong13[2] + 4 + localLong15 * 0x10), aiStackX_8[0] != -1));
        iVar7 = localInt11 + 1;
        bVar17 = localInt11 != -1;
        localInt11 = 0;
        if (bVar17) {
          localInt11 = iVar7;
        }
        if (localInt11 != (int)plocalLong13[1]) {
          lVar5 = (longlong)localInt11;
          do {
            if (*(int *)(*plocalLong13 + lVar5 * 4) != -1) {
              aiStackX_8[0] = *(int *)(*plocalLong13 + (longlong)localInt11 * 4);
              goto LAB_1808962af;
            }
            localInt11 = localInt11 + 1;
            lVar5 = lVar5 + 1;
          } while (lVar5 != (int)plocalLong13[1]);
        }
        aiStackX_8[0] = -1;
        localInt11 = aiStackX_8[0];
LAB_1808962af:
      } while (aiStackX_8[0] != -1);
      aiStackX_8[0] = -1;
      uVar6 = localUInt;
    }
    lVar5 = (longlong)(localInt16 + -1);
    if (-1 < localInt16 + -1) {
      do {
        localUInt = localUInt & 0xffffffff00000000;
        plStack_108 = (longlong *)&unknown_180982dc0;
        alocalInt[0] = *(int *)(uVar6 + lVar5 * 4);
        lock_file(&plStack_108,*(uint64 *)(resourceHandle + 0x58));
        lVar5 = lVar5 + -1;
      } while (-1 < lVar5);
    }
    localInt11 = localInt4;
    if (localInt4 < 0) {
      localInt11 = -localInt4;
    }
    if (localInt11 < 0) {
      if (0 < localInt16) goto LAB_18089638e;
      if ((0 < localInt4) && (uVar6 != 0)) {
                    // WARNING: Subroutine does not return
        utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),uVar6,&utilityMemoryDataBuffer,0x100,1);
      }
      localUInt = 0;
      localUInt = 0;
      uVar6 = 0;
      localInt4 = 0;
    }
    if (localInt16 < 0) {
      lVar5 = (longlong)-localInt16;
      plocalUInt12 = (uint32 *)(uVar6 + (longlong)localInt16 * 4);
      if (localInt16 < 0) {
        for (; lVar5 != 0; lVar5 = lVar5 + -1) {
          *plocalUInt12 = 0;
          plocalUInt12 = plocalUInt12 + 1;
        }
      }
    }
    localUInt = localUInt & 0xffffffff00000000;
    if (localInt4 < 0) {
      localInt4 = -localInt4;
    }
    if (localInt4 != 0) {
      FUN_18084c470(&localUInt,0);
    }
  }
LAB_18089638e:
  uVar6 = 0;
  localUInt10 = uVar6;
  if (0 < *(int *)(resourceHandle + 0x20)) {
    do {
      uVar8 = (int)localUInt10 + 1;
      pbVar1 = (byte *)(uVar6 + 0xb + *(longlong *)(resourceHandle + 0x18));
      *pbVar1 = *pbVar1 & 0xfe;
      uVar6 = uVar6 + 0xc;
      localUInt10 = (ulonglong)uVar8;
    } while ((int)uVar8 < *(int *)(resourceHandle + 0x20));
  }
  localInt4 = FUN_180744cc0(resourceHandle + 0x70);
  if ((localInt4 == 0) && (localInt4 = FUN_180895130(resourceHandle + 0x80), localInt4 == 0)) {
    *(uint32 *)(resourceHandle + 0x90) = 0xffffffff;
    *(uint32 *)(resourceHandle + 0x94) = 0;
  }
  *(uint *)(resourceHandle + 0x6c) = *(uint *)(resourceHandle + 0x6c) & 0xfbffffff;
  uVar8 = *(uint *)(resourceHandle + 0x6c);
LAB_1808963ec:
  if ((uVar8 >> 0x19 & 1) != 0) {
    lVar5 = *(longlong *)(resourceHandle + 0xa0);
    uVar6 = FUN_18073c4c0(*(uint64 *)(resourceHandle + 0x60),resourceHandle + 0xa0,0);
    if ((int)uVar6 != 0) {
      return uVar6;
    }
    if ((*(uint *)(resourceHandle + 0x6c) >> 0x18 & 1) == 0) {
      if ((*(int *)(resourceHandle + 0xb0) == -1) || (*(int *)(resourceHandle + 0xac) <= *(int *)(resourceHandle + 0xb0))
         ) {
        aiStackX_8[0] = CONCAT31(aiStackX_8[0]._1_3_,1);
        auStackX_10[0] = 0;
        do {
          uVar6 = FUN_180895360(resourceHandle,aiStackX_8,auStackX_10);
          if ((int)uVar6 != 0) {
            return uVar6;
          }
        } while ((char)aiStackX_8[0] != (char)uVar6);
      }
      else {
        *(uint64 *)(resourceHandle + 0xa8) = 0;
        *(uint *)(resourceHandle + 0x6c) = *(uint *)(resourceHandle + 0x6c) | 0x6000000;
        *(uint64 *)(resourceHandle + 0x98) = 0;
        *(uint64 *)(resourceHandle + 0xa0) = 0;
      }
    }
    else if ((*(longlong *)(resourceHandle + 0x98) != 0) && (lVar5 != 0)) {
      *(longlong *)(resourceHandle + 0x98) =
           (*(longlong *)(resourceHandle + 0x98) - lVar5) + *(longlong *)(resourceHandle + 0xa0);
    }
  }
  return 0;
}



uint64 * FUN_180896800(uint64 *resourceHandle,ulonglong memorySize)

{
  *resourceHandle = &unknown_180986350;
  if ((memorySize & 1) != 0) {
    free(resourceHandle,0x28);
  }
  return resourceHandle;
}



uint64 * FUN_180896830(uint64 *resourceHandle,ulonglong memorySize)

{
  *resourceHandle = &unknown_180986370;
  FUN_180840270(resourceHandle + 5);
  *resourceHandle = &unknown_180986350;
  if ((memorySize & 1) != 0) {
    free(resourceHandle,0x38);
  }
  return resourceHandle;
}




// 函数: void FUN_180896880(longlong *resourceHandle)
void FUN_180896880(longlong *resourceHandle)

{
  int localInt1;
  
  localInt1 = (**(code **)(*resourceHandle + 0x18))();
  if (localInt1 == 0) {
    *(byte *)(resourceHandle + 4) = 0;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint64 FUN_1808968a0(longlong resourceHandle)

{
  longlong localLong1;
  longlong localLong2;
  int *plocalInt3;
  uint64 uVar4;
  int iVar5;
  
  if ((*(longlong *)(resourceHandle + 8) != 0) && (iVar5 = *(int *)(resourceHandle + 0x30), 0 < iVar5)) {
    localLong1 = *(longlong *)(resourceHandle + 0x28);
    if (0x40000 < iVar5) {
      localLong2 = func_0x00018076b3e0(localLong1 + 0x40000,10);
      if (localLong2 != 0) {
        iVar5 = ((int)localLong2 - (int)localLong1) + 1;
      }
    }
    plocalInt3 = (int *)utilityAccessSystemResource(*(uint64 *)(utilitySystemDataTable + 0x1a0),iVar5 + 0x19,
                                  &unknown_1809868b0,0x278,0,0,1);
    plocalInt3[0] = 0;
    plocalInt3[1] = 0;
    plocalInt3[2] = 0;
    plocalInt3[3] = 0;
    plocalInt3[4] = 0;
    plocalInt3[5] = 0;
    *plocalInt3 = iVar5 + 0x19;
    *(data2 *)(plocalInt3 + 2) = 0x508;
    *(byte *)((longlong)plocalInt3 + 10) = 3;
    plocalInt3[3] = 1;
    localLong2 = *(longlong *)(*(longlong *)(resourceHandle + 8) + 0x90);
    uVar4 = func_0x0001808e3470(*(uint64 *)(localLong2 + 0x4d0),*(uint32 *)(localLong2 + 0x774));
    *(uint64 *)(plocalInt3 + 4) = uVar4;
                    // WARNING: Subroutine does not return
    memcpy(plocalInt3 + 6,localLong1,(longlong)iVar5);
  }
  return 0;
}



int FUN_180896a30(longlong resourceHandle,longlong memorySize,int operationFlags)

{
  uint32 localUInt1;
  int localInt2;
  int localInt3;
  
  localUInt1 = *(uint32 *)(resourceHandle + 0x14);
  localInt2 = func_0x00018074b7d0(memorySize,operationFlags,*(uint32 *)(resourceHandle + 0x10));
  localInt3 = executeSystemCommand(memorySize + localInt2,operationFlags - localInt2,&DAT_180a06434);
  localInt2 = localInt2 + localInt3;
  localInt3 = func_0x00018074b800(localInt2 + memorySize,operationFlags - localInt2,localUInt1);
  return localInt3 + localInt2;
}



int FUN_180896aa0(longlong resourceHandle,longlong memorySize,int operationFlags)

{
  uint64 localUInt1;
  int localInt2;
  int localInt3;
  
  localUInt1 = *(uint64 *)(resourceHandle + 0x10);
  localInt2 = executeSystemCommand(memorySize,operationFlags,&unknown_1809863f8);
  localInt3 = executeSystemCommand(memorySize + localInt2,operationFlags - localInt2,&DAT_180a06434);
  localInt2 = localInt2 + localInt3;
  localInt3 = func_0x00018074be80(localInt2 + memorySize,operationFlags - localInt2,localUInt1);
  return localInt3 + localInt2;
}



int FUN_180896b20(longlong resourceHandle,longlong memorySize,int operationFlags)

{
  uint32 localUInt1;
  uint32 localUInt2;
  int localInt3;
  int localInt4;
  
  localUInt1 = *(uint32 *)(resourceHandle + 0x14);
  localUInt2 = *(uint32 *)(resourceHandle + 0x10);
  localInt3 = executeSystemCommand(memorySize,operationFlags,&unknown_180986470);
  localInt4 = executeSystemCommand(localInt3 + memorySize,operationFlags - localInt3,&DAT_180a06434);
  localInt3 = localInt3 + localInt4;
  localInt4 = func_0x00018074b7d0(localInt3 + memorySize,operationFlags - localInt3,localUInt2);
  localInt3 = localInt3 + localInt4;
  localInt4 = executeSystemCommand(localInt3 + memorySize,operationFlags - localInt3,&DAT_180a06434);
  localInt3 = localInt3 + localInt4;
  localInt4 = func_0x00018074b800(localInt3 + memorySize,operationFlags - localInt3,localUInt1);
  return localInt4 + localInt3;
}



uint64 FUN_180896c10(longlong resourceHandle,uint64 memorySize,uint64 operationFlags)

{
  uint64 localUInt1;
  
  localUInt1 = FUN_18088ee20(operationFlags,resourceHandle + 0x10);
  if ((int)localUInt1 == 0) {
    *(uint32 *)(resourceHandle + 0x14) = 0;
    if ((1 < *(int *)(resourceHandle + 0x10)) && (localUInt1 = FUN_18088ee60(operationFlags), (int)localUInt1 != 0)) {
      return localUInt1;
    }
    localUInt1 = 0;
  }
  return localUInt1;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void FUN_180896c60(uint64 resourceHandle,longlong memorySize,uint operationFlags,char callbackFunction)
void FUN_180896c60(uint64 resourceHandle,longlong memorySize,uint operationFlags,char callbackFunction)

{
  longlong localLong1;
  longlong localLong2;
  int localInt3;
  int localInt4;
  int iVar5;
  data **ppuVar6;
  int iVar7;
  byte localBuffer [32];
  uint32 localUInt;
  float afStack_304 [3];
  data *localPtr;
  int localInt;
  uint64 localUInt;
  ulonglong localUInt;
  longlong lStack_2d8;
  uint64 localUInt;
  uint64 localUInt;
  uint64 localUInt;
  uint64 localUInt;
  uint32 localUInt;
  uint localUInt;
  data *localPtr;
  int localInt;
  uint localUInt;
  uint32 localUInt;
  int localInt;
  uint32 localUInt;
  uint localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  data *localPtr;
  uint32 localUInt;
  uint localUInt;
  uint32 localUInt;
  byte localBuffer [520];
  ulonglong localUInt;
  
  localUInt = _DAT_180bf00a8 ^ (ulonglong)localBuffer;
  iVar5 = 0;
  if (operationFlags != 0) {
    localInt3 = *(int *)(memorySize + 0x220);
    if (localInt3 == 0) {
      localPtr = &unknown_180982508;
      localUInt = 0;
      localUInt = 0;
      localUInt = operationFlags;
      func_0x00018076b450(localBuffer,*(uint64 *)(memorySize + 0x228),0x200);
      ppuVar6 = &localPtr;
LAB_180896ce3:
      localInt3 = FUN_180897520(resourceHandle,ppuVar6);
    }
    else {
      localInt = 0;
      if (1 < localInt3 - 1U) {
        localPtr = &unknown_180982608;
        ppuVar6 = &localPtr;
        localUInt = 0;
        localUInt = 0;
        localUInt = 0;
        lStack_2d8 = 0;
        localUInt = 0;
        localUInt = 0;
        localUInt = 0;
        localUInt = 0;
        localUInt = operationFlags;
        goto LAB_180896ce3;
      }
      localPtr = &unknown_180982588;
      lStack_2d8 = (ulonglong)operationFlags << 0x20;
      localUInt = *(uint64 *)(memorySize + 0x228);
      localUInt = (ulonglong)CONCAT14(localInt3 != 1,*(uint32 *)(memorySize + 0x230));
      localInt3 = FUN_180897520(resourceHandle,&localPtr);
    }
    if (localInt3 != 0) goto FUN_1808974f4;
    localUInt = *(uint *)(memorySize + 0x10);
    localUInt = *(uint32 *)(memorySize + 0x14);
    localInt = *(int *)(memorySize + 0x18);
    localUInt = *(uint32 *)(memorySize + 0x1c);
    localInt = 0;
    localPtr = &unknown_180985a80;
    localUInt = 0;
    localUInt = operationFlags;
    localInt3 = FUN_180897520(resourceHandle,&localPtr);
    if (localInt3 != 0) goto FUN_1808974f4;
    iVar7 = 0;
    localInt3 = *(int *)(*(longlong *)(memorySize + 0x2e8) + 0x2c);
    if (0 < localInt3) {
      do {
        localInt = 0;
        localPtr = &unknown_180982cc0;
        localUInt = CONCAT44(localUInt._4_4_,operationFlags);
        localInt4 = FUN_180897520(resourceHandle,&localPtr);
        if (localInt4 != 0) goto FUN_1808974f4;
        iVar7 = iVar7 + 1;
      } while (iVar7 < localInt3);
    }
  }
  if (((callbackFunction != '\0') || (*(int *)(*(longlong *)(memorySize + 0x2e8) + 0x34) == 0)) &&
     (localInt3 = FUN_180897b40(resourceHandle,memorySize,operationFlags), localInt3 == 0)) {
    for (localInt3 = 0; (-1 < localInt3 && (localInt3 < *(int *)(memorySize + 0x48))); localInt3 = localInt3 + 1) {
      localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + (longlong)localInt3 * 8);
      localLong2 = *(longlong *)(localLong1 + 0x68);
      if (((*(byte *)(localLong1 + 0xc4) & 1) != 0) && (localLong2 != 0)) {
        localUInt = 0;
        iVar7 = validate_resource_handle(localLong2,&localUInt);
        if (iVar7 != 0) goto FUN_1808974f4;
        localUInt = *(uint32 *)(localLong1 + 0x10);
        localUInt = *(uint *)(localLong1 + 0x14);
        localUInt = *(uint32 *)(localLong1 + 0x18);
        localUInt = *(uint32 *)(localLong1 + 0x1c);
        localPtr = &unknown_1809830b8;
        localInt4 = iVar5 + 1;
        localUInt = localUInt;
        localInt = iVar7;
        localUInt = operationFlags;
        localInt = iVar5;
        iVar5 = FUN_180897520(resourceHandle,&localPtr);
        if ((iVar5 != 0) || (iVar5 = FUN_18088c970(localLong2,afStack_304), iVar5 != 0))
        goto FUN_1808974f4;
        if (afStack_304[0] != 1.0) {
          localUInt = CONCAT44(localUInt._4_4_,afStack_304[0]);
          localPtr = &unknown_1809842e0;
          localUInt = CONCAT44(localUInt._4_4_,localUInt);
          localInt = iVar5;
          iVar5 = FUN_180897520(resourceHandle,&localPtr);
          if (iVar5 != 0) goto FUN_1808974f4;
        }
        if (*(char *)(localLong2 + 0x28) != '\0') {
          localInt = 0;
          localPtr = &unknown_180984358;
          localUInt = CONCAT44(localUInt._4_4_,localUInt);
          localUInt = CONCAT71(localUInt._1_7_,1);
          iVar5 = FUN_180897520(resourceHandle,&localPtr);
          if (iVar5 != 0) goto FUN_1808974f4;
        }
        iVar5 = localInt4;
        if (*(char *)(localLong2 + 0x29) != '\0') {
          localInt = 0;
          localPtr = &unknown_1809843d0;
          localUInt = CONCAT44(localUInt._4_4_,localUInt);
          localUInt = CONCAT71(localUInt._1_7_,1);
          iVar7 = FUN_180897520(resourceHandle,&localPtr);
          if (iVar7 != 0) goto FUN_1808974f4;
        }
      }
    }
    for (localInt3 = 0; (-1 < localInt3 && (localInt3 < *(int *)(memorySize + 0x58))); localInt3 = localInt3 + 1) {
      localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x50) + (longlong)localInt3 * 8);
      localLong2 = *(longlong *)(localLong1 + 0x68);
      if (((*(byte *)(localLong1 + 0xc4) & 1) != 0) && (localLong2 != 0)) {
        localUInt = 0;
        iVar7 = validate_resource_handle(localLong2,&localUInt);
        if (iVar7 != 0) goto FUN_1808974f4;
        localUInt = *(uint32 *)(localLong1 + 0x10);
        localUInt = *(uint *)(localLong1 + 0x14);
        localUInt = *(uint32 *)(localLong1 + 0x18);
        localUInt = *(uint32 *)(localLong1 + 0x1c);
        localPtr = &unknown_1809830b8;
        localInt4 = iVar5 + 1;
        localUInt = localUInt;
        localInt = iVar7;
        localUInt = operationFlags;
        localInt = iVar5;
        iVar5 = FUN_180897520(resourceHandle,&localPtr);
        if ((iVar5 != 0) || (iVar5 = FUN_18088c970(localLong2,afStack_304), iVar5 != 0))
        goto FUN_1808974f4;
        if (afStack_304[0] != 1.0) {
          localUInt = CONCAT44(localUInt._4_4_,afStack_304[0]);
          localPtr = &unknown_1809842e0;
          localUInt = CONCAT44(localUInt._4_4_,localUInt);
          localInt = iVar5;
          iVar5 = FUN_180897520(resourceHandle,&localPtr);
          if (iVar5 != 0) goto FUN_1808974f4;
        }
        if (*(char *)(localLong2 + 0x28) != '\0') {
          localInt = 0;
          localPtr = &unknown_180984358;
          localUInt = CONCAT44(localUInt._4_4_,localUInt);
          localUInt = CONCAT71(localUInt._1_7_,1);
          iVar5 = FUN_180897520(resourceHandle,&localPtr);
          if (iVar5 != 0) goto FUN_1808974f4;
        }
        iVar5 = localInt4;
        if (*(char *)(localLong2 + 0x29) != '\0') {
          localInt = 0;
          localPtr = &unknown_1809843d0;
          localUInt = CONCAT44(localUInt._4_4_,localUInt);
          localUInt = CONCAT71(localUInt._1_7_,1);
          iVar7 = FUN_180897520(resourceHandle,&localPtr);
          if (iVar7 != 0) goto FUN_1808974f4;
        }
      }
    }
    for (localInt3 = 0; (-1 < localInt3 && (localInt3 < *(int *)(memorySize + 0x68))); localInt3 = localInt3 + 1) {
      localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x60) + (longlong)localInt3 * 8);
      localLong2 = *(longlong *)(localLong1 + 0x68);
      if (((*(byte *)(localLong1 + 0xc4) & 1) != 0) && (localLong2 != 0)) {
        localUInt = 0;
        iVar7 = validate_resource_handle(localLong2,&localUInt);
        if (iVar7 != 0) goto FUN_1808974f4;
        localUInt = *(uint32 *)(localLong1 + 0x10);
        localUInt = *(uint *)(localLong1 + 0x14);
        localUInt = *(uint32 *)(localLong1 + 0x18);
        localUInt = *(uint32 *)(localLong1 + 0x1c);
        localPtr = &unknown_1809830b8;
        localInt4 = iVar5 + 1;
        localUInt = localUInt;
        localInt = iVar7;
        localUInt = operationFlags;
        localInt = iVar5;
        iVar5 = FUN_180897520(resourceHandle,&localPtr);
        if ((iVar5 != 0) || (iVar5 = FUN_18088c970(localLong2,afStack_304), iVar5 != 0))
        goto FUN_1808974f4;
        if (afStack_304[0] != 1.0) {
          localUInt = CONCAT44(localUInt._4_4_,afStack_304[0]);
          localPtr = &unknown_1809842e0;
          localUInt = CONCAT44(localUInt._4_4_,localUInt);
          localInt = iVar5;
          iVar5 = FUN_180897520(resourceHandle,&localPtr);
          if (iVar5 != 0) goto FUN_1808974f4;
        }
        if (*(char *)(localLong2 + 0x28) != '\0') {
          localInt = 0;
          localPtr = &unknown_180984358;
          localUInt = CONCAT44(localUInt._4_4_,localUInt);
          localUInt = CONCAT71(localUInt._1_7_,1);
          iVar5 = FUN_180897520(resourceHandle,&localPtr);
          if (iVar5 != 0) goto FUN_1808974f4;
        }
        iVar5 = localInt4;
        if (*(char *)(localLong2 + 0x29) != '\0') {
          localInt = 0;
          localPtr = &unknown_1809843d0;
          localUInt = CONCAT44(localUInt._4_4_,localUInt);
          localUInt = CONCAT71(localUInt._1_7_,1);
          iVar7 = FUN_180897520(resourceHandle,&localPtr);
          if (iVar7 != 0) goto FUN_1808974f4;
        }
      }
    }
    for (localInt3 = 0; (-1 < localInt3 && (localInt3 < *(int *)(memorySize + 0x78))); localInt3 = localInt3 + 1) {
      localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + (longlong)localInt3 * 8);
      localLong2 = *(longlong *)(localLong1 + 0x68);
      if (((*(byte *)(localLong1 + 0xc4) & 1) != 0) && (localLong2 != 0)) {
        localUInt = 0;
        iVar7 = validate_resource_handle(localLong2,&localUInt);
        if (iVar7 != 0) goto FUN_1808974f4;
        localUInt = *(uint32 *)(localLong1 + 0x10);
        localUInt = *(uint *)(localLong1 + 0x14);
        localUInt = *(uint32 *)(localLong1 + 0x18);
        localUInt = *(uint32 *)(localLong1 + 0x1c);
        localPtr = &unknown_1809830b8;
        localInt4 = iVar5 + 1;
        localUInt = localUInt;
        localInt = iVar7;
        localUInt = operationFlags;
        localInt = iVar5;
        iVar5 = FUN_180897520(resourceHandle,&localPtr);
        if ((iVar5 != 0) || (iVar5 = FUN_18088c970(localLong2,afStack_304), iVar5 != 0))
        goto FUN_1808974f4;
        if (afStack_304[0] != 1.0) {
          localUInt = CONCAT44(localUInt._4_4_,afStack_304[0]);
          localPtr = &unknown_1809842e0;
          localUInt = CONCAT44(localUInt._4_4_,localUInt);
          localInt = iVar5;
          iVar5 = FUN_180897520(resourceHandle,&localPtr);
          if (iVar5 != 0) goto FUN_1808974f4;
        }
        if (*(char *)(localLong2 + 0x28) != '\0') {
          localInt = 0;
          localPtr = &unknown_180984358;
          localUInt = CONCAT44(localUInt._4_4_,localUInt);
          localUInt = CONCAT71(localUInt._1_7_,1);
          iVar5 = FUN_180897520(resourceHandle,&localPtr);
          if (iVar5 != 0) goto FUN_1808974f4;
        }
        iVar5 = localInt4;
        if (*(char *)(localLong2 + 0x29) != '\0') {
          localInt = 0;
          localPtr = &unknown_1809843d0;
          localUInt = CONCAT44(localUInt._4_4_,localUInt);
          localUInt = CONCAT71(localUInt._1_7_,1);
          iVar7 = FUN_180897520(resourceHandle,&localPtr);
          if (iVar7 != 0) goto FUN_1808974f4;
        }
      }
    }
    iVar5 = 0;
    localInt3 = 0;
    do {
      if ((localInt3 < 0) || (*(int *)(memorySize + 200) <= localInt3)) break;
      localLong1 = *(longlong *)(*(longlong *)(memorySize + 0xc0) + (longlong)localInt3 * 8);
      localLong2 = *(longlong *)(localLong1 + 0x48);
      if (localLong2 != 0) {
        localUInt = 0;
        iVar7 = validate_resource_handle(localLong2,&localUInt);
        if (iVar7 != 0) break;
        localUInt = *(uint32 *)(localLong1 + 0x10);
        localUInt = *(uint *)(localLong1 + 0x14);
        localUInt = *(uint32 *)(localLong1 + 0x18);
        localUInt = *(uint32 *)(localLong1 + 0x1c);
        localPtr = &unknown_180983238;
        localInt4 = iVar5 + 1;
        localUInt = localUInt;
        localInt = iVar7;
        localUInt = operationFlags;
        localInt = iVar5;
        iVar5 = FUN_180897520(resourceHandle,&localPtr);
        if ((iVar5 != 0) || (iVar7 = FUN_18088cbb0(localLong2,afStack_304,0), iVar7 != 0)) break;
        iVar5 = localInt4;
        if (afStack_304[0] != 1.0) {
          localUInt = CONCAT44(localUInt._4_4_,afStack_304[0]);
          localPtr = &unknown_1809844c8;
          localUInt = CONCAT44(localUInt._4_4_,localUInt);
          localInt = iVar7;
          iVar7 = FUN_180897520(resourceHandle,&localPtr);
          if (iVar7 != 0) break;
        }
      }
      localInt3 = localInt3 + 1;
    } while( true );
  }
FUN_1808974f4:
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(localUInt ^ (ulonglong)localBuffer);
}




// 函数: void FUN_180896e11(void)
void FUN_180896e11(void)

{
  longlong localLong1;
  longlong localLong2;
  uint32 uVar3;
  uint32 uVar4;
  uint32 uVar5;
  uint32 uVar6;
  int iVar7;
  int iVar8;
  int iVar9;
  uint32 unaff_EBX;
  longlong unaff_RBP;
  int unaff_R12D;
  longlong unaff_R13;
  char unaff_R15B;
  float extraout_XMM0_Da;
  float extraout_XMM0_Da_00;
  float extraout_XMM0_Da_01;
  float extraout_XMM0_Da_02;
  float extraout_XMM0_Da_03;
  float extraout_XMM0_Da_04;
  float extraout_XMM0_Da_05;
  float extraout_XMM0_Da_06;
  float fVar10;
  uint32 uStackX_20;
  float fStackX_24;
  data *stackParameter1;
  int in_stack_00000038;
  uint32 in_stack_00000040;
  float in_stack_00000048;
  
  if (((unaff_R15B != '\0') || (*(int *)(*(longlong *)(unaff_R13 + 0x2e8) + 0x34) == unaff_R12D)) &&
     (iVar7 = FUN_180897b40(), iVar7 == 0)) {
    for (iVar7 = 0; (-1 < iVar7 && (iVar7 < *(int *)(unaff_R13 + 0x48))); iVar7 = iVar7 + 1) {
      localLong1 = *(longlong *)(*(longlong *)(unaff_R13 + 0x40) + (longlong)iVar7 * 8);
      localLong2 = *(longlong *)(localLong1 + 0x68);
      if (((*(byte *)(localLong1 + 0xc4) & 1) != 0) && (localLong2 != 0)) {
        uStackX_20 = 0;
        iVar8 = validate_resource_handle(localLong2,&uStackX_20);
        if (iVar8 != 0) goto LAB_1808974ec;
        uVar3 = *(uint32 *)(localLong1 + 0x10);
        uVar4 = *(uint32 *)(localLong1 + 0x14);
        uVar5 = *(uint32 *)(localLong1 + 0x18);
        uVar6 = *(uint32 *)(localLong1 + 0x1c);
        *(uint32 *)(unaff_RBP + -0x78) = 0;
        *(int *)(unaff_RBP + -0x68) = unaff_R12D;
        *(data **)(unaff_RBP + -0x80) = &unknown_1809830b8;
        unaff_R12D = unaff_R12D + 1;
        *(uint32 *)(unaff_RBP + -0x54) = uStackX_20;
        *(uint32 *)(unaff_RBP + -0x70) = unaff_EBX;
        *(uint32 *)(unaff_RBP + -100) = uVar3;
        *(uint32 *)(unaff_RBP + -0x60) = uVar4;
        *(uint32 *)(unaff_RBP + -0x5c) = uVar5;
        *(uint32 *)(unaff_RBP + -0x58) = uVar6;
        iVar8 = FUN_180897520(uVar3,unaff_RBP + -0x80);
        if ((iVar8 != 0) || (iVar8 = FUN_18088c970(localLong2,&fStackX_24), iVar8 != 0))
        goto LAB_1808974ec;
        fVar10 = fStackX_24;
        if (fStackX_24 != 1.0) {
          in_stack_00000048 = fStackX_24;
          stackParameter1 = &unknown_1809842e0;
          in_stack_00000040 = uStackX_20;
          in_stack_00000038 = iVar8;
          iVar8 = FUN_180897520(fStackX_24,&stack0x00000030);
          fVar10 = extraout_XMM0_Da;
          if (iVar8 != 0) goto LAB_1808974ec;
        }
        if (*(char *)(localLong2 + 0x28) != '\0') {
          in_stack_00000038 = 0;
          stackParameter1 = &unknown_180984358;
          in_stack_00000040 = uStackX_20;
          in_stack_00000048 = (float)CONCAT31(in_stack_00000048._1_3_,1);
          iVar8 = FUN_180897520(fVar10,&stack0x00000030);
          fVar10 = extraout_XMM0_Da_00;
          if (iVar8 != 0) goto LAB_1808974ec;
        }
        if (*(char *)(localLong2 + 0x29) != '\0') {
          in_stack_00000038 = 0;
          stackParameter1 = &unknown_1809843d0;
          in_stack_00000040 = uStackX_20;
          in_stack_00000048 = (float)CONCAT31(in_stack_00000048._1_3_,1);
          iVar8 = FUN_180897520(fVar10,&stack0x00000030);
          if (iVar8 != 0) goto LAB_1808974ec;
        }
      }
    }
    for (iVar7 = 0; (-1 < iVar7 && (iVar7 < *(int *)(unaff_R13 + 0x58))); iVar7 = iVar7 + 1) {
      localLong1 = *(longlong *)(*(longlong *)(unaff_R13 + 0x50) + (longlong)iVar7 * 8);
      localLong2 = *(longlong *)(localLong1 + 0x68);
      if (((*(byte *)(localLong1 + 0xc4) & 1) != 0) && (localLong2 != 0)) {
        uStackX_20 = 0;
        iVar8 = validate_resource_handle(localLong2,&uStackX_20);
        if (iVar8 != 0) goto LAB_1808974ec;
        uVar3 = *(uint32 *)(localLong1 + 0x10);
        uVar4 = *(uint32 *)(localLong1 + 0x14);
        uVar5 = *(uint32 *)(localLong1 + 0x18);
        uVar6 = *(uint32 *)(localLong1 + 0x1c);
        *(uint32 *)(unaff_RBP + -0x78) = 0;
        *(int *)(unaff_RBP + -0x68) = unaff_R12D;
        *(data **)(unaff_RBP + -0x80) = &unknown_1809830b8;
        unaff_R12D = unaff_R12D + 1;
        *(uint32 *)(unaff_RBP + -0x54) = uStackX_20;
        *(uint32 *)(unaff_RBP + -0x70) = unaff_EBX;
        *(uint32 *)(unaff_RBP + -100) = uVar3;
        *(uint32 *)(unaff_RBP + -0x60) = uVar4;
        *(uint32 *)(unaff_RBP + -0x5c) = uVar5;
        *(uint32 *)(unaff_RBP + -0x58) = uVar6;
        iVar8 = FUN_180897520(uVar3,unaff_RBP + -0x80);
        if ((iVar8 != 0) || (iVar8 = FUN_18088c970(localLong2,&fStackX_24), iVar8 != 0))
        goto LAB_1808974ec;
        fVar10 = fStackX_24;
        if (fStackX_24 != 1.0) {
          in_stack_00000048 = fStackX_24;
          stackParameter1 = &unknown_1809842e0;
          in_stack_00000040 = uStackX_20;
          in_stack_00000038 = iVar8;
          iVar8 = FUN_180897520(fStackX_24,&stack0x00000030);
          fVar10 = extraout_XMM0_Da_01;
          if (iVar8 != 0) goto LAB_1808974ec;
        }
        if (*(char *)(localLong2 + 0x28) != '\0') {
          in_stack_00000038 = 0;
          stackParameter1 = &unknown_180984358;
          in_stack_00000040 = uStackX_20;
          in_stack_00000048 = (float)CONCAT31(in_stack_00000048._1_3_,1);
          iVar8 = FUN_180897520(fVar10,&stack0x00000030);
          fVar10 = extraout_XMM0_Da_02;
          if (iVar8 != 0) goto LAB_1808974ec;
        }
        if (*(char *)(localLong2 + 0x29) != '\0') {
          in_stack_00000038 = 0;
          stackParameter1 = &unknown_1809843d0;
          in_stack_00000040 = uStackX_20;
          in_stack_00000048 = (float)CONCAT31(in_stack_00000048._1_3_,1);
          iVar8 = FUN_180897520(fVar10,&stack0x00000030);
          if (iVar8 != 0) goto LAB_1808974ec;
        }
      }
    }
    for (iVar7 = 0; (-1 < iVar7 && (iVar7 < *(int *)(unaff_R13 + 0x68))); iVar7 = iVar7 + 1) {
      localLong1 = *(longlong *)(*(longlong *)(unaff_R13 + 0x60) + (longlong)iVar7 * 8);
      localLong2 = *(longlong *)(localLong1 + 0x68);
      if (((*(byte *)(localLong1 + 0xc4) & 1) != 0) && (localLong2 != 0)) {
        uStackX_20 = 0;
        iVar8 = validate_resource_handle(localLong2,&uStackX_20);
        if (iVar8 != 0) goto LAB_1808974ec;
        uVar3 = *(uint32 *)(localLong1 + 0x10);
        uVar4 = *(uint32 *)(localLong1 + 0x14);
        uVar5 = *(uint32 *)(localLong1 + 0x18);
        uVar6 = *(uint32 *)(localLong1 + 0x1c);
        *(uint32 *)(unaff_RBP + -0x78) = 0;
        *(int *)(unaff_RBP + -0x68) = unaff_R12D;
        *(data **)(unaff_RBP + -0x80) = &unknown_1809830b8;
        unaff_R12D = unaff_R12D + 1;
        *(uint32 *)(unaff_RBP + -0x54) = uStackX_20;
        *(uint32 *)(unaff_RBP + -0x70) = unaff_EBX;
        *(uint32 *)(unaff_RBP + -100) = uVar3;
        *(uint32 *)(unaff_RBP + -0x60) = uVar4;
        *(uint32 *)(unaff_RBP + -0x5c) = uVar5;
        *(uint32 *)(unaff_RBP + -0x58) = uVar6;
        iVar8 = FUN_180897520(uVar3,unaff_RBP + -0x80);
        if ((iVar8 != 0) || (iVar8 = FUN_18088c970(localLong2,&fStackX_24), iVar8 != 0))
        goto LAB_1808974ec;
        fVar10 = fStackX_24;
        if (fStackX_24 != 1.0) {
          in_stack_00000048 = fStackX_24;
          stackParameter1 = &unknown_1809842e0;
          in_stack_00000040 = uStackX_20;
          in_stack_00000038 = iVar8;
          iVar8 = FUN_180897520(fStackX_24,&stack0x00000030);
          fVar10 = extraout_XMM0_Da_03;
          if (iVar8 != 0) goto LAB_1808974ec;
        }
        if (*(char *)(localLong2 + 0x28) != '\0') {
          in_stack_00000038 = 0;
          stackParameter1 = &unknown_180984358;
          in_stack_00000040 = uStackX_20;
          in_stack_00000048 = (float)CONCAT31(in_stack_00000048._1_3_,1);
          iVar8 = FUN_180897520(fVar10,&stack0x00000030);
          fVar10 = extraout_XMM0_Da_04;
          if (iVar8 != 0) goto LAB_1808974ec;
        }
        if (*(char *)(localLong2 + 0x29) != '\0') {
          in_stack_00000038 = 0;
          stackParameter1 = &unknown_1809843d0;
          in_stack_00000040 = uStackX_20;
          in_stack_00000048 = (float)CONCAT31(in_stack_00000048._1_3_,1);
          iVar8 = FUN_180897520(fVar10,&stack0x00000030);
          if (iVar8 != 0) goto LAB_1808974ec;
        }
      }
    }
    for (iVar7 = 0; (-1 < iVar7 && (iVar7 < *(int *)(unaff_R13 + 0x78))); iVar7 = iVar7 + 1) {
      localLong1 = *(longlong *)(*(longlong *)(unaff_R13 + 0x70) + (longlong)iVar7 * 8);
      localLong2 = *(longlong *)(localLong1 + 0x68);
      if (((*(byte *)(localLong1 + 0xc4) & 1) != 0) && (localLong2 != 0)) {
        uStackX_20 = 0;
        iVar8 = validate_resource_handle(localLong2,&uStackX_20);
        if (iVar8 != 0) goto LAB_1808974ec;
        uVar3 = *(uint32 *)(localLong1 + 0x10);
        uVar4 = *(uint32 *)(localLong1 + 0x14);
        uVar5 = *(uint32 *)(localLong1 + 0x18);
        uVar6 = *(uint32 *)(localLong1 + 0x1c);
        *(uint32 *)(unaff_RBP + -0x78) = 0;
        *(int *)(unaff_RBP + -0x68) = unaff_R12D;
        *(data **)(unaff_RBP + -0x80) = &unknown_1809830b8;
        unaff_R12D = unaff_R12D + 1;
        *(uint32 *)(unaff_RBP + -0x54) = uStackX_20;
        *(uint32 *)(unaff_RBP + -0x70) = unaff_EBX;
        *(uint32 *)(unaff_RBP + -100) = uVar3;
        *(uint32 *)(unaff_RBP + -0x60) = uVar4;
        *(uint32 *)(unaff_RBP + -0x5c) = uVar5;
        *(uint32 *)(unaff_RBP + -0x58) = uVar6;
        iVar8 = FUN_180897520(uVar3,unaff_RBP + -0x80);
        if ((iVar8 != 0) || (iVar8 = FUN_18088c970(localLong2,&fStackX_24), iVar8 != 0))
        goto LAB_1808974ec;
        fVar10 = fStackX_24;
        if (fStackX_24 != 1.0) {
          in_stack_00000048 = fStackX_24;
          stackParameter1 = &unknown_1809842e0;
          in_stack_00000040 = uStackX_20;
          in_stack_00000038 = iVar8;
          iVar8 = FUN_180897520(fStackX_24,&stack0x00000030);
          fVar10 = extraout_XMM0_Da_05;
          if (iVar8 != 0) goto LAB_1808974ec;
        }
        if (*(char *)(localLong2 + 0x28) != '\0') {
          in_stack_00000038 = 0;
          stackParameter1 = &unknown_180984358;
          in_stack_00000040 = uStackX_20;
          in_stack_00000048 = (float)CONCAT31(in_stack_00000048._1_3_,1);
          iVar8 = FUN_180897520(fVar10,&stack0x00000030);
          fVar10 = extraout_XMM0_Da_06;
          if (iVar8 != 0) goto LAB_1808974ec;
        }
        if (*(char *)(localLong2 + 0x29) != '\0') {
          in_stack_00000038 = 0;
          stackParameter1 = &unknown_1809843d0;
          in_stack_00000040 = uStackX_20;
          in_stack_00000048 = (float)CONCAT31(in_stack_00000048._1_3_,1);
          iVar8 = FUN_180897520(fVar10,&stack0x00000030);
          if (iVar8 != 0) goto LAB_1808974ec;
        }
      }
    }
    iVar8 = 0;
    iVar7 = 0;
    do {
      if ((iVar7 < 0) || (*(int *)(unaff_R13 + 200) <= iVar7)) break;
      localLong1 = *(longlong *)(*(longlong *)(unaff_R13 + 0xc0) + (longlong)iVar7 * 8);
      localLong2 = *(longlong *)(localLong1 + 0x48);
      if (localLong2 != 0) {
        uStackX_20 = 0;
        iVar9 = validate_resource_handle(localLong2,&uStackX_20);
        if (iVar9 != 0) break;
        uVar3 = *(uint32 *)(localLong1 + 0x10);
        uVar4 = *(uint32 *)(localLong1 + 0x14);
        uVar5 = *(uint32 *)(localLong1 + 0x18);
        uVar6 = *(uint32 *)(localLong1 + 0x1c);
        *(uint32 *)(unaff_RBP + -0x78) = 0;
        *(int *)(unaff_RBP + -0x68) = iVar8;
        *(data **)(unaff_RBP + -0x80) = &unknown_180983238;
        iVar8 = iVar8 + 1;
        *(uint32 *)(unaff_RBP + -0x54) = uStackX_20;
        *(uint32 *)(unaff_RBP + -0x70) = unaff_EBX;
        *(uint32 *)(unaff_RBP + -100) = uVar3;
        *(uint32 *)(unaff_RBP + -0x60) = uVar4;
        *(uint32 *)(unaff_RBP + -0x5c) = uVar5;
        *(uint32 *)(unaff_RBP + -0x58) = uVar6;
        iVar9 = FUN_180897520(uVar3,unaff_RBP + -0x80);
        if ((iVar9 != 0) || (iVar9 = FUN_18088cbb0(localLong2,&fStackX_24,0), iVar9 != 0)) break;
        if (fStackX_24 != 1.0) {
          in_stack_00000048 = fStackX_24;
          stackParameter1 = &unknown_1809844c8;
          in_stack_00000040 = uStackX_20;
          in_stack_00000038 = iVar9;
          iVar9 = FUN_180897520(fStackX_24,&stack0x00000030);
          if (iVar9 != 0) break;
        }
      }
      iVar7 = iVar7 + 1;
    } while( true );
  }
LAB_1808974ec:
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(*(ulonglong *)(unaff_RBP + 0x1d0) ^ (ulonglong)&stack0x00000000);
}




// 函数: void FUN_1808974f4(void)
void FUN_1808974f4(void)

{
  longlong unaff_RBP;
  
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(*(ulonglong *)(unaff_RBP + 0x1d0) ^ (ulonglong)&stack0x00000000);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void FUN_180897520(longlong *resourceHandle,longlong *memorySize)
void FUN_180897520(longlong *resourceHandle,longlong *memorySize)

{
  longlong localLong1;
  int localInt2;
  byte localBuffer [32];
  byte localBuffer [512];
  ulonglong localUInt;
  
  localUInt = _DAT_180bf00a8 ^ (ulonglong)localBuffer;
  localLong1 = resourceHandle[4];
  if (((char)localLong1 != '\0') || (localInt2 = FUN_1808987e0(resourceHandle,1), localInt2 == 0)) {
    localInt2 = (**(code **)(*memorySize + 0x10))(memorySize,localBuffer,0x200);
    func_0x00018074b7b0(localBuffer + localInt2,0x200 - localInt2,10);
    localInt2 = (**(code **)(*resourceHandle + 8))(resourceHandle,localBuffer);
    if ((localInt2 == 0) &&
       (((char)localLong1 == '\0' && (localInt2 = (**(code **)(*resourceHandle + 0x18))(resourceHandle), localInt2 == 0)))) {
      *(byte *)(resourceHandle + 4) = 0;
    }
  }
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(localUInt ^ (ulonglong)localBuffer);
}




// 函数: void FUN_180897560(void)
void FUN_180897560(void)

{
  int localInt1;
  longlong inputRegister;
  char unaff_SIL;
  longlong *unaff_RDI;
  byte auStackX_20 [8];
  ulonglong in_stack_00000220;
  
  localInt1 = (**(code **)(inputRegister + 0x10))();
  func_0x00018074b7b0(auStackX_20 + localInt1,0x200 - localInt1,10);
  localInt1 = (**(code **)(*unaff_RDI + 8))();
  if (((localInt1 == 0) && (unaff_SIL == '\0')) &&
     (localInt1 = (**(code **)(*unaff_RDI + 0x18))(), localInt1 == 0)) {
    *(byte *)(unaff_RDI + 4) = 0;
  }
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(in_stack_00000220 ^ (ulonglong)&stack0x00000000);
}




// 函数: void FUN_1808975a6(void)
void FUN_1808975a6(void)

{
  int localInt1;
  char unaff_SIL;
  longlong *unaff_RDI;
  ulonglong in_stack_00000220;
  
  if ((unaff_SIL == '\0') && (localInt1 = (**(code **)(*unaff_RDI + 0x18))(), localInt1 == 0)) {
    *(byte *)(unaff_RDI + 4) = 0;
  }
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(in_stack_00000220 ^ (ulonglong)&stack0x00000000);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void FUN_1808975e0(longlong resourceHandle,longlong memorySize)
void FUN_1808975e0(longlong resourceHandle,longlong memorySize)

{
  float fVar1;
  longlong localLong2;
  longlong localLong3;
  longlong lVar4;
  char cVar5;
  int iVar6;
  uint uVar7;
  longlong lVar8;
  longlong lVar9;
  uint64 localUInt10;
  uint64 localUInt11;
  data *plocalUInt12;
  float fVar13;
  longlong localLong14;
  float *pfVar15;
  uint64 *plocalUInt16;
  byte localBuffer [32];
  uint32 localUInt;
  char acStack_1c4 [4];
  data *localPtr;
  uint32 localUInt;
  uint32 localUInt;
  float fStack_1a8;
  float fStack_1a4;
  uint32 localUInt;
  float fStack_19c;
  float afStack_198 [2];
  uint64 *localPtr;
  longlong lStack_188;
  longlong lStack_180;
  data *localPtr;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  data *localPtr;
  uint32 localUInt;
  uint32 localUInt;
  uint64 localUInt;
  uint64 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  data *localPtr;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  byte localUInt;
  uint64 localUInt;
  byte localBuffer [136];
  ulonglong localUInt;
  
  localUInt = _DAT_180bf00a8 ^ (ulonglong)localBuffer;
  localLong2 = *(longlong *)(memorySize + 0x80);
  localLong14 = 0;
  localUInt = 0;
  lVar8 = localLong2 + 8;
  if (localLong2 == 0) {
    lVar8 = localLong14;
  }
  lStack_180 = memorySize;
  iVar6 = validate_resource_handle(lVar8,&localUInt);
  if (iVar6 == 0) {
    plocalUInt16 = (uint64 *)(memorySize + 8);
    localUInt = 0;
    localPtr = plocalUInt16;
    lVar8 = (*(code *)**(uint64 **)(memorySize + 8))(plocalUInt16);
    iVar6 = validate_resource_handle(*(uint64 *)(lVar8 + 0xd0),&localUInt);
    if (iVar6 == 0) {
      localUInt = 0;
      localPtr = &unknown_1809832b8;
      localUInt = localUInt;
      localUInt = localUInt;
      iVar6 = FUN_180897520(resourceHandle,&localPtr);
      if (iVar6 == 0) {
        lStack_188 = (longlong)*(int *)(localLong2 + 0x28);
        lVar8 = localLong14;
        if (0 < lStack_188) {
          do {
            lVar9 = *(longlong *)(localLong2 + 0x20);
            localLong3 = *(longlong *)(localLong14 + 0x10 + lVar9);
            lVar4 = *(longlong *)(localLong14 + 8 + lVar9);
            cVar5 = func_0x000180894c50(localLong3,1);
            plocalUInt16 = localPtr;
            if ((cVar5 == '\0') && (*(float *)(localLong3 + 0x4c) != *(float *)(lVar4 + 0x28))) {
              localUInt = *(uint32 *)(localLong14 + 4 + lVar9);
              localPtr = &unknown_180984038;
              localUInt = localUInt;
              localUInt = 0;
              lVar9 = (**(code **)*localPtr)(localPtr);
              localUInt = *(uint64 *)(*(longlong *)(lVar9 + 0x90) + lVar8 * 8);
              localUInt = 0;
              if (*(int *)(localLong3 + 0x58) < 1) {
                plocalUInt12 = &g_miscTempData3;
              }
              else {
                plocalUInt12 = *(data **)(localLong3 + 0x50);
              }
              func_0x00018076b450(localBuffer,plocalUInt12,0x80);
              iVar6 = FUN_180897520(resourceHandle,&localPtr);
              if (iVar6 != 0) goto FUN_180897b16;
            }
            lVar8 = lVar8 + 1;
            localLong14 = localLong14 + 0x18;
            memorySize = lStack_180;
          } while (lVar8 < lStack_188);
        }
        localUInt11 = *(uint64 *)(*(longlong *)(resourceHandle + 8) + 800);
        localUInt10 = (**(code **)*plocalUInt16)(plocalUInt16);
        iVar6 = FUN_1808479d0(localUInt10,localUInt11,acStack_1c4);
        if (iVar6 == 0) {
          if (acStack_1c4[0] != '\0') {
            localUInt11 = func_0x00018085fa80();
            iVar6 = memcmp(localLong2 + 0x38,localUInt11,0x30);
            if (iVar6 != 0) {
              localUInt = *(uint64 *)(localLong2 + 0x38);
              localUInt = *(uint64 *)(localLong2 + 0x40);
              localUInt = *(uint32 *)(localLong2 + 0x48);
              localUInt = *(uint32 *)(localLong2 + 0x4c);
              localUInt = *(uint32 *)(localLong2 + 0x50);
              localUInt = *(uint32 *)(localLong2 + 0x54);
              localPtr = &unknown_180983840;
              localUInt = 0;
              localUInt = *(uint32 *)(localLong2 + 0x58);
              localUInt = *(uint32 *)(localLong2 + 0x5c);
              localUInt = *(uint32 *)(localLong2 + 0x60);
              localUInt = *(uint32 *)(localLong2 + 100);
              localUInt = localUInt;
              iVar6 = FUN_180897520(resourceHandle,&localPtr);
              if (iVar6 != 0) goto FUN_180897b16;
            }
          }
          iVar6 = FUN_1808682e0(localLong2,&fStack_19c,0);
          if (iVar6 == 0) {
            if (fStack_19c != 1.0) {
              fStack_1a8 = fStack_19c;
              localPtr = &unknown_180983738;
              localUInt = localUInt;
              localUInt = 0;
              iVar6 = FUN_180897520(resourceHandle,&localPtr);
              if (iVar6 != 0) goto FUN_180897b16;
            }
            iVar6 = FUN_180868270(localLong2,afStack_198,0);
            if (iVar6 == 0) {
              if (afStack_198[0] != 1.0) {
                fStack_1a8 = afStack_198[0];
                localPtr = &unknown_1809837c0;
                localUInt = localUInt;
                localUInt = 0;
                iVar6 = FUN_180897520(resourceHandle,&localPtr);
                if (iVar6 != 0) goto FUN_180897b16;
              }
              fVar13 = 0.0;
              pfVar15 = (float *)(localLong2 + 0x94);
              do {
                if (*pfVar15 != 0.0) {
                  localUInt = localUInt;
                  localUInt = 0;
                  localPtr = &unknown_1809839d8;
                  fStack_1a8 = fVar13;
                  fStack_1a4 = *pfVar15;
                  iVar6 = FUN_180897520(resourceHandle,&localPtr);
                  if (iVar6 != 0) goto FUN_180897b16;
                }
                fVar13 = (float)((int)fVar13 + 1);
                pfVar15 = pfVar15 + 1;
              } while ((int)fVar13 < 4);
              pfVar15 = (float *)&unknown_1809850f8;
              fVar13 = 0.0;
              do {
                fVar1 = *(float *)(localLong2 + -0x180985054 + (longlong)pfVar15);
                if (fVar1 != *pfVar15) {
                  localUInt = localUInt;
                  localUInt = 0;
                  localPtr = &unknown_180983950;
                  fStack_1a8 = fVar13;
                  fStack_1a4 = fVar1;
                  iVar6 = FUN_180897520(resourceHandle,&localPtr);
                  if (iVar6 != 0) goto FUN_180897b16;
                }
                fVar13 = (float)((int)fVar13 + 1);
                pfVar15 = pfVar15 + 1;
              } while ((int)fVar13 < 6);
              uVar7 = func_0x000180855b70(memorySize + 200);
              if ((float)(uVar7 / 0x30) != 0.0) {
                localPtr = &unknown_180983be8;
                localUInt = localUInt;
                localUInt = 0;
                fStack_1a8 = (float)(uVar7 / 0x30);
                iVar6 = FUN_180897520(resourceHandle,&localPtr);
                if (iVar6 != 0) goto FUN_180897b16;
              }
              if ((*(uint *)(memorySize + 0x2d8) >> 1 & 1) != 0) {
                localUInt = 0;
                localPtr = &unknown_180983a60;
                localUInt = localUInt;
                fStack_1a8 = (float)CONCAT31(fStack_1a8._1_3_,1);
                iVar6 = FUN_180897520(resourceHandle,&localPtr);
                if (iVar6 != 0) goto FUN_180897b16;
              }
              iVar6 = utilityAllocateMemoryBlock(memorySize);
              if (iVar6 != 2) {
                localUInt = 0;
                localPtr = &unknown_180983ae8;
                localUInt = localUInt;
                iVar6 = FUN_180897520(resourceHandle,&localPtr);
                if (iVar6 != 0) goto FUN_180897b16;
              }
              iVar6 = utilityAllocateMemoryBlock(memorySize);
              if (iVar6 == 4) {
                localUInt = 0;
                localPtr = &unknown_180983b68;
                localUInt = localUInt;
                fStack_1a8 = 0.0;
                iVar6 = FUN_180897520(resourceHandle,&localPtr);
                if (iVar6 != 0) goto FUN_180897b16;
              }
              if ((*(uint *)(memorySize + 0x2d8) >> 3 & 1) != 0) {
                localUInt = 0;
                localPtr = &unknown_180983cf8;
                localUInt = localUInt;
                FUN_180897520(resourceHandle,&localPtr);
              }
            }
          }
        }
      }
    }
  }
FUN_180897b16:
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(localUInt ^ (ulonglong)localBuffer);
}




// 函数: void FUN_180897644(void)
void FUN_180897644(void)

{
  float fVar1;
  longlong localLong2;
  longlong localLong3;
  uint64 *puVar4;
  uint32 uVar5;
  uint32 uVar6;
  uint32 uVar7;
  uint32 uVar8;
  uint32 uVar9;
  uint32 localUInt10;
  uint32 localUInt11;
  char cVar12;
  int localInt13;
  uint localUInt14;
  uint64 *inputRegister;
  longlong localLong15;
  uint64 localUInt16;
  uint64 localUInt17;
  data *plocalUInt18;
  float fVar19;
  ulonglong localUInt20;
  float *pfVar21;
  uint64 *unaff_RBP;
  longlong unaff_RSI;
  uint64 *plocalUInt22;
  float unaff_R13D;
  longlong unaff_R14;
  ulonglong localUInt23;
  longlong unaff_R15;
  uint32 extraout_XMM0_Da;
  uint32 localUInt24;
  uint32 extraout_XMM0_Da_00;
  uint32 extraout_XMM0_Da_01;
  uint32 extraout_XMM0_Da_02;
  float extraout_XMM0_Da_03;
  uint32 extraout_XMM0_Da_04;
  uint32 extraout_XMM0_Da_05;
  uint32 extraout_XMM0_Da_06;
  uint32 extraout_XMM0_Da_07;
  uint32 extraout_XMM0_Da_08;
  uint32 unaff_XMM6_Da;
  uint32 unaff_XMM6_Dc;
  uint32 uStackX_20;
  char acStackX_24 [4];
  data *in_stack_00000028;
  float stackParameter1;
  uint32 in_stack_00000038;
  float fStack0000000000000040;
  float fStack0000000000000044;
  float fStack0000000000000048;
  float fStack000000000000004c;
  float in_stack_00000050;
  uint64 *puStack0000000000000058;
  longlong in_stack_00000060;
  longlong in_stack_00000068;
  data *in_stack_00000070;
  float in_stack_00000078;
  uint32 in_stack_000001a0;
  uint32 in_stack_000001a8;
  
  plocalUInt22 = (uint64 *)(unaff_R14 + 8);
  fStack0000000000000048 = unaff_R13D;
  puStack0000000000000058 = plocalUInt22;
  localLong15 = (*(code *)*inputRegister)(plocalUInt22);
  localInt13 = validate_resource_handle(*(uint64 *)(localLong15 + 0xd0),&stack0x00000048);
  if (localInt13 == 0) {
    in_stack_00000070 = &unknown_1809832b8;
    *(uint32 *)(unaff_RBP + -0xf) = uStackX_20;
    *(float *)(unaff_RBP + -0x10) = fStack0000000000000048;
    in_stack_00000078 = unaff_R13D;
    localInt13 = FUN_180897520(extraout_XMM0_Da,&stack0x00000070);
    if (localInt13 == 0) {
      in_stack_00000060 = (longlong)*(int *)(unaff_R15 + 0x28);
      if (0 < in_stack_00000060) {
        localUInt23 = (ulonglong)(uint)unaff_R13D;
        localUInt20 = (ulonglong)(uint)unaff_R13D;
        do {
          localLong15 = *(longlong *)(unaff_R15 + 0x20);
          localLong2 = *(longlong *)(localUInt20 + 0x10 + localLong15);
          localLong3 = *(longlong *)(localUInt20 + 8 + localLong15);
          cVar12 = func_0x000180894c50(localLong2,1);
          plocalUInt22 = puStack0000000000000058;
          if ((cVar12 == '\0') && (*(float *)(localLong2 + 0x4c) != *(float *)(localLong3 + 0x28))) {
            localUInt24 = *(uint32 *)(localUInt20 + 4 + localLong15);
            unaff_RBP[-4] = &unknown_180984038;
            *(uint32 *)(unaff_RBP + -2) = uStackX_20;
            puVar4 = (uint64 *)*puStack0000000000000058;
            *(uint32 *)(unaff_RBP + -1) = localUInt24;
            *(uint32 *)(unaff_RBP + -3) = 0;
            localLong15 = (*(code *)*puVar4)(puStack0000000000000058);
            *unaff_RBP = *(uint64 *)(*(longlong *)(localLong15 + 0x90) + localUInt23 * 8);
            *(byte *)((longlong)unaff_RBP + -4) = 0;
            if (*(int *)(localLong2 + 0x58) < 1) {
              plocalUInt18 = &g_miscTempData3;
            }
            else {
              plocalUInt18 = *(data **)(localLong2 + 0x50);
            }
            localUInt24 = func_0x00018076b450(unaff_RBP + 1,plocalUInt18,0x80);
            localInt13 = FUN_180897520(localUInt24,unaff_RBP + -4);
            if (localInt13 != 0) goto FUN_180897b0e;
          }
          unaff_R13D = 0.0;
          localUInt23 = localUInt23 + 1;
          localUInt20 = localUInt20 + 0x18;
          unaff_R14 = in_stack_00000068;
        } while ((longlong)localUInt23 < in_stack_00000060);
      }
      localUInt17 = *(uint64 *)(*(longlong *)(unaff_RSI + 8) + 800);
      localUInt16 = (**(code **)*plocalUInt22)(plocalUInt22);
      localInt13 = FUN_1808479d0(localUInt16,localUInt17,acStackX_24);
      if (localInt13 == 0) {
        localUInt24 = extraout_XMM0_Da_00;
        if (acStackX_24[0] != '\0') {
          localUInt17 = func_0x00018085fa80();
          localInt13 = memcmp(unaff_R15 + 0x38,localUInt17,0x30);
          localUInt24 = extraout_XMM0_Da_01;
          if (localInt13 != 0) {
            localUInt17 = *(uint64 *)(unaff_R15 + 0x38);
            localUInt16 = *(uint64 *)(unaff_R15 + 0x40);
            localUInt24 = *(uint32 *)(unaff_R15 + 0x48);
            uVar5 = *(uint32 *)(unaff_R15 + 0x4c);
            uVar6 = *(uint32 *)(unaff_R15 + 0x50);
            uVar7 = *(uint32 *)(unaff_R15 + 0x54);
            unaff_RBP[-0xe] = &unknown_180983840;
            unaff_RBP[-0xb] = localUInt17;
            unaff_RBP[-10] = localUInt16;
            *(float *)(unaff_RBP + -0xd) = unaff_R13D;
            uVar8 = *(uint32 *)(unaff_R15 + 0x58);
            uVar9 = *(uint32 *)(unaff_R15 + 0x5c);
            localUInt10 = *(uint32 *)(unaff_R15 + 0x60);
            localUInt11 = *(uint32 *)(unaff_R15 + 100);
            *(uint32 *)(unaff_RBP + -0xc) = uStackX_20;
            *(uint32 *)(unaff_RBP + -9) = localUInt24;
            *(uint32 *)((longlong)unaff_RBP + -0x44) = uVar5;
            *(uint32 *)(unaff_RBP + -8) = uVar6;
            *(uint32 *)((longlong)unaff_RBP + -0x3c) = uVar7;
            *(uint32 *)(unaff_RBP + -7) = uVar8;
            *(uint32 *)((longlong)unaff_RBP + -0x34) = uVar9;
            *(uint32 *)(unaff_RBP + -6) = localUInt10;
            *(uint32 *)((longlong)unaff_RBP + -0x2c) = localUInt11;
            localInt13 = FUN_180897520(uVar8,unaff_RBP + -0xe);
            localUInt24 = extraout_XMM0_Da_02;
            if (localInt13 != 0) goto FUN_180897b0e;
          }
        }
        localInt13 = FUN_1808682e0(localUInt24,(longlong)&stack0x00000048 + 4,0);
        if (localInt13 == 0) {
          in_stack_000001a0 = unaff_XMM6_Da;
          in_stack_000001a8 = unaff_XMM6_Dc;
          if (fStack000000000000004c != 1.0) {
            fStack0000000000000040 = fStack000000000000004c;
            in_stack_00000028 = &unknown_180983738;
            in_stack_00000038 = uStackX_20;
            stackParameter1 = unaff_R13D;
            localInt13 = FUN_180897520(fStack000000000000004c,&stack0x00000028);
            fStack000000000000004c = extraout_XMM0_Da_03;
            if (localInt13 != 0) goto FUN_180897b0e;
          }
          localInt13 = FUN_180868270(fStack000000000000004c,&stack0x00000050,0);
          if (localInt13 == 0) {
            if (in_stack_00000050 != 1.0) {
              fStack0000000000000040 = in_stack_00000050;
              in_stack_00000028 = &unknown_1809837c0;
              in_stack_00000038 = uStackX_20;
              stackParameter1 = unaff_R13D;
              localInt13 = FUN_180897520(in_stack_00000050,&stack0x00000028);
              if (localInt13 != 0) goto FUN_180897b0e;
            }
            pfVar21 = (float *)(unaff_R15 + 0x94);
            fVar19 = unaff_R13D;
            do {
              fVar1 = *pfVar21;
              if (fVar1 != 0.0) {
                in_stack_00000038 = uStackX_20;
                in_stack_00000028 = &unknown_1809839d8;
                stackParameter1 = unaff_R13D;
                fStack0000000000000040 = fVar19;
                fStack0000000000000044 = fVar1;
                localInt13 = FUN_180897520(fVar1,&stack0x00000028);
                if (localInt13 != 0) goto FUN_180897b0e;
              }
              fVar19 = (float)((int)fVar19 + 1);
              pfVar21 = pfVar21 + 1;
            } while ((int)fVar19 < 4);
            pfVar21 = (float *)&unknown_1809850f8;
            fVar19 = unaff_R13D;
            do {
              fVar1 = *(float *)(unaff_R15 + -0x180985054 + (longlong)pfVar21);
              if (fVar1 != *pfVar21) {
                in_stack_00000038 = uStackX_20;
                in_stack_00000028 = &unknown_180983950;
                stackParameter1 = unaff_R13D;
                fStack0000000000000040 = fVar19;
                fStack0000000000000044 = fVar1;
                localInt13 = FUN_180897520(fVar1,&stack0x00000028);
                if (localInt13 != 0) goto FUN_180897b0e;
              }
              fVar19 = (float)((int)fVar19 + 1);
              pfVar21 = pfVar21 + 1;
            } while ((int)fVar19 < 6);
            localUInt14 = func_0x000180855b70(unaff_R14 + 200);
            localUInt24 = extraout_XMM0_Da_04;
            if ((float)(localUInt14 / 0x30) != 0.0) {
              in_stack_00000028 = &unknown_180983be8;
              in_stack_00000038 = uStackX_20;
              stackParameter1 = unaff_R13D;
              fStack0000000000000040 = (float)(localUInt14 / 0x30);
              localInt13 = FUN_180897520(extraout_XMM0_Da_04,&stack0x00000028);
              localUInt24 = extraout_XMM0_Da_05;
              if (localInt13 != 0) goto FUN_180897b0e;
            }
            if ((*(uint *)(unaff_R14 + 0x2d8) >> 1 & 1) != 0) {
              in_stack_00000028 = &unknown_180983a60;
              in_stack_00000038 = uStackX_20;
              fStack0000000000000040 = (float)CONCAT31(fStack0000000000000040._1_3_,1);
              stackParameter1 = unaff_R13D;
              localInt13 = FUN_180897520(localUInt24,&stack0x00000028);
              if (localInt13 != 0) goto FUN_180897b0e;
            }
            localInt13 = utilityAllocateMemoryBlock(unaff_R14);
            if (localInt13 != 2) {
              in_stack_00000028 = &unknown_180983ae8;
              in_stack_00000038 = uStackX_20;
              stackParameter1 = unaff_R13D;
              localInt13 = FUN_180897520(extraout_XMM0_Da_06,&stack0x00000028);
              if (localInt13 != 0) goto FUN_180897b0e;
            }
            localInt13 = utilityAllocateMemoryBlock(unaff_R14);
            localUInt24 = extraout_XMM0_Da_07;
            if (localInt13 == 4) {
              in_stack_00000028 = &unknown_180983b68;
              in_stack_00000038 = uStackX_20;
              stackParameter1 = unaff_R13D;
              fStack0000000000000040 = unaff_R13D;
              localInt13 = FUN_180897520(extraout_XMM0_Da_07,&stack0x00000028);
              localUInt24 = extraout_XMM0_Da_08;
              if (localInt13 != 0) goto FUN_180897b0e;
            }
            if ((*(uint *)(unaff_R14 + 0x2d8) >> 3 & 1) != 0) {
              in_stack_00000028 = &unknown_180983cf8;
              in_stack_00000038 = uStackX_20;
              stackParameter1 = unaff_R13D;
              FUN_180897520(localUInt24,&stack0x00000028);
            }
          }
        }
      }
    }
  }
FUN_180897b0e:
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(unaff_RBP[0x12] ^ (ulonglong)&stack0x00000000);
}




// 函数: void FUN_1808976b0(void)
void FUN_1808976b0(void)

{
  float fVar1;
  longlong localLong2;
  longlong localLong3;
  uint64 *puVar4;
  uint32 uVar5;
  uint32 uVar6;
  uint32 uVar7;
  uint32 uVar8;
  uint32 uVar9;
  uint32 localUInt10;
  uint32 localUInt11;
  char cVar12;
  int localInt13;
  uint localUInt14;
  longlong inputRegister;
  longlong localLong15;
  uint64 localUInt16;
  uint64 localUInt17;
  data *plocalUInt18;
  float fVar19;
  ulonglong localUInt20;
  float *pfVar21;
  uint64 *unaff_RBP;
  longlong unaff_RSI;
  uint64 *unaff_R12;
  float unaff_R13D;
  longlong unaff_R14;
  ulonglong localUInt22;
  longlong unaff_R15;
  uint32 localUInt23;
  uint32 extraout_XMM0_Da;
  uint32 extraout_XMM0_Da_00;
  uint32 extraout_XMM0_Da_01;
  float extraout_XMM0_Da_02;
  uint32 extraout_XMM0_Da_03;
  uint32 extraout_XMM0_Da_04;
  uint32 extraout_XMM0_Da_05;
  uint32 extraout_XMM0_Da_06;
  uint32 extraout_XMM0_Da_07;
  uint32 unaff_XMM6_Da;
  uint32 unaff_XMM6_Dc;
  uint32 uStackX_20;
  char acStackX_24 [4];
  data *in_stack_00000028;
  float stackParameter1;
  uint32 in_stack_00000038;
  float fStack0000000000000040;
  float fStack0000000000000044;
  uint64 in_stack_00000048;
  float in_stack_00000050;
  uint64 *in_stack_00000058;
  longlong lStack0000000000000060;
  longlong in_stack_00000068;
  uint32 in_stack_000001a0;
  uint32 in_stack_000001a8;
  
  if (0 < inputRegister) {
    localUInt22 = (ulonglong)(uint)unaff_R13D;
    localUInt20 = (ulonglong)(uint)unaff_R13D;
    lStack0000000000000060 = inputRegister;
    do {
      localLong15 = *(longlong *)(unaff_R15 + 0x20);
      localLong2 = *(longlong *)(localUInt20 + 0x10 + localLong15);
      localLong3 = *(longlong *)(localUInt20 + 8 + localLong15);
      cVar12 = func_0x000180894c50(localLong2,1);
      unaff_R12 = in_stack_00000058;
      if ((cVar12 == '\0') && (*(float *)(localLong2 + 0x4c) != *(float *)(localLong3 + 0x28))) {
        localUInt23 = *(uint32 *)(localUInt20 + 4 + localLong15);
        unaff_RBP[-4] = &unknown_180984038;
        *(uint32 *)(unaff_RBP + -2) = uStackX_20;
        puVar4 = (uint64 *)*in_stack_00000058;
        *(uint32 *)(unaff_RBP + -1) = localUInt23;
        *(uint32 *)(unaff_RBP + -3) = 0;
        localLong15 = (*(code *)*puVar4)(in_stack_00000058);
        *unaff_RBP = *(uint64 *)(*(longlong *)(localLong15 + 0x90) + localUInt22 * 8);
        *(byte *)((longlong)unaff_RBP + -4) = 0;
        if (*(int *)(localLong2 + 0x58) < 1) {
          plocalUInt18 = &g_miscTempData3;
        }
        else {
          plocalUInt18 = *(data **)(localLong2 + 0x50);
        }
        localUInt23 = func_0x00018076b450(unaff_RBP + 1,plocalUInt18,0x80);
        localInt13 = FUN_180897520(localUInt23,unaff_RBP + -4);
        if (localInt13 != 0) goto FUN_180897afe;
      }
      unaff_R13D = 0.0;
      localUInt22 = localUInt22 + 1;
      localUInt20 = localUInt20 + 0x18;
      unaff_R14 = in_stack_00000068;
    } while ((longlong)localUInt22 < lStack0000000000000060);
  }
  localUInt17 = *(uint64 *)(*(longlong *)(unaff_RSI + 8) + 800);
  localUInt16 = (**(code **)*unaff_R12)(unaff_R12);
  localInt13 = FUN_1808479d0(localUInt16,localUInt17,acStackX_24);
  if (localInt13 == 0) {
    localUInt23 = extraout_XMM0_Da;
    if (acStackX_24[0] != '\0') {
      localUInt17 = func_0x00018085fa80();
      localInt13 = memcmp(unaff_R15 + 0x38,localUInt17,0x30);
      localUInt23 = extraout_XMM0_Da_00;
      if (localInt13 != 0) {
        localUInt17 = *(uint64 *)(unaff_R15 + 0x38);
        localUInt16 = *(uint64 *)(unaff_R15 + 0x40);
        localUInt23 = *(uint32 *)(unaff_R15 + 0x48);
        uVar5 = *(uint32 *)(unaff_R15 + 0x4c);
        uVar6 = *(uint32 *)(unaff_R15 + 0x50);
        uVar7 = *(uint32 *)(unaff_R15 + 0x54);
        unaff_RBP[-0xe] = &unknown_180983840;
        unaff_RBP[-0xb] = localUInt17;
        unaff_RBP[-10] = localUInt16;
        *(float *)(unaff_RBP + -0xd) = unaff_R13D;
        uVar8 = *(uint32 *)(unaff_R15 + 0x58);
        uVar9 = *(uint32 *)(unaff_R15 + 0x5c);
        localUInt10 = *(uint32 *)(unaff_R15 + 0x60);
        localUInt11 = *(uint32 *)(unaff_R15 + 100);
        *(uint32 *)(unaff_RBP + -0xc) = uStackX_20;
        *(uint32 *)(unaff_RBP + -9) = localUInt23;
        *(uint32 *)((longlong)unaff_RBP + -0x44) = uVar5;
        *(uint32 *)(unaff_RBP + -8) = uVar6;
        *(uint32 *)((longlong)unaff_RBP + -0x3c) = uVar7;
        *(uint32 *)(unaff_RBP + -7) = uVar8;
        *(uint32 *)((longlong)unaff_RBP + -0x34) = uVar9;
        *(uint32 *)(unaff_RBP + -6) = localUInt10;
        *(uint32 *)((longlong)unaff_RBP + -0x2c) = localUInt11;
        localInt13 = FUN_180897520(uVar8,unaff_RBP + -0xe);
        localUInt23 = extraout_XMM0_Da_01;
        if (localInt13 != 0) goto FUN_180897afe;
      }
    }
    localInt13 = FUN_1808682e0(localUInt23,(longlong)&stack0x00000048 + 4,0);
    if (localInt13 == 0) {
      in_stack_000001a0 = unaff_XMM6_Da;
      in_stack_000001a8 = unaff_XMM6_Dc;
      if (in_stack_00000048._4_4_ != 1.0) {
        fStack0000000000000040 = in_stack_00000048._4_4_;
        in_stack_00000028 = &unknown_180983738;
        in_stack_00000038 = uStackX_20;
        stackParameter1 = unaff_R13D;
        localInt13 = FUN_180897520(in_stack_00000048._4_4_,&stack0x00000028);
        in_stack_00000048._4_4_ = extraout_XMM0_Da_02;
        if (localInt13 != 0) goto FUN_180897afe;
      }
      localInt13 = FUN_180868270(in_stack_00000048._4_4_,&stack0x00000050,0);
      if (localInt13 == 0) {
        if (in_stack_00000050 != 1.0) {
          fStack0000000000000040 = in_stack_00000050;
          in_stack_00000028 = &unknown_1809837c0;
          in_stack_00000038 = uStackX_20;
          stackParameter1 = unaff_R13D;
          localInt13 = FUN_180897520(in_stack_00000050,&stack0x00000028);
          if (localInt13 != 0) goto FUN_180897afe;
        }
        pfVar21 = (float *)(unaff_R15 + 0x94);
        fVar19 = unaff_R13D;
        do {
          fVar1 = *pfVar21;
          if (fVar1 != 0.0) {
            in_stack_00000038 = uStackX_20;
            in_stack_00000028 = &unknown_1809839d8;
            stackParameter1 = unaff_R13D;
            fStack0000000000000040 = fVar19;
            fStack0000000000000044 = fVar1;
            localInt13 = FUN_180897520(fVar1,&stack0x00000028);
            if (localInt13 != 0) goto FUN_180897afe;
          }
          fVar19 = (float)((int)fVar19 + 1);
          pfVar21 = pfVar21 + 1;
        } while ((int)fVar19 < 4);
        pfVar21 = (float *)&unknown_1809850f8;
        fVar19 = unaff_R13D;
        do {
          fVar1 = *(float *)(unaff_R15 + -0x180985054 + (longlong)pfVar21);
          if (fVar1 != *pfVar21) {
            in_stack_00000038 = uStackX_20;
            in_stack_00000028 = &unknown_180983950;
            stackParameter1 = unaff_R13D;
            fStack0000000000000040 = fVar19;
            fStack0000000000000044 = fVar1;
            localInt13 = FUN_180897520(fVar1,&stack0x00000028);
            if (localInt13 != 0) goto FUN_180897afe;
          }
          fVar19 = (float)((int)fVar19 + 1);
          pfVar21 = pfVar21 + 1;
        } while ((int)fVar19 < 6);
        localUInt14 = func_0x000180855b70(unaff_R14 + 200);
        localUInt23 = extraout_XMM0_Da_03;
        if ((float)(localUInt14 / 0x30) != 0.0) {
          in_stack_00000028 = &unknown_180983be8;
          in_stack_00000038 = uStackX_20;
          stackParameter1 = unaff_R13D;
          fStack0000000000000040 = (float)(localUInt14 / 0x30);
          localInt13 = FUN_180897520(extraout_XMM0_Da_03,&stack0x00000028);
          localUInt23 = extraout_XMM0_Da_04;
          if (localInt13 != 0) goto FUN_180897afe;
        }
        if ((*(uint *)(unaff_R14 + 0x2d8) >> 1 & 1) != 0) {
          in_stack_00000028 = &unknown_180983a60;
          in_stack_00000038 = uStackX_20;
          fStack0000000000000040 = (float)CONCAT31(fStack0000000000000040._1_3_,1);
          stackParameter1 = unaff_R13D;
          localInt13 = FUN_180897520(localUInt23,&stack0x00000028);
          if (localInt13 != 0) goto FUN_180897afe;
        }
        localInt13 = utilityAllocateMemoryBlock(unaff_R14);
        if (localInt13 != 2) {
          in_stack_00000028 = &unknown_180983ae8;
          in_stack_00000038 = uStackX_20;
          stackParameter1 = unaff_R13D;
          localInt13 = FUN_180897520(extraout_XMM0_Da_05,&stack0x00000028);
          if (localInt13 != 0) goto FUN_180897afe;
        }
        localInt13 = utilityAllocateMemoryBlock(unaff_R14);
        localUInt23 = extraout_XMM0_Da_06;
        if (localInt13 == 4) {
          in_stack_00000028 = &unknown_180983b68;
          in_stack_00000038 = uStackX_20;
          stackParameter1 = unaff_R13D;
          fStack0000000000000040 = unaff_R13D;
          localInt13 = FUN_180897520(extraout_XMM0_Da_06,&stack0x00000028);
          localUInt23 = extraout_XMM0_Da_07;
          if (localInt13 != 0) goto FUN_180897afe;
        }
        if ((*(uint *)(unaff_R14 + 0x2d8) >> 3 & 1) != 0) {
          in_stack_00000028 = &unknown_180983cf8;
          in_stack_00000038 = uStackX_20;
          stackParameter1 = unaff_R13D;
          FUN_180897520(localUInt23,&stack0x00000028);
        }
      }
    }
  }
FUN_180897afe:
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(unaff_RBP[0x12] ^ (ulonglong)&stack0x00000000);
}




// 函数: void FUN_180897859(float resourceHandle)
void FUN_180897859(float resourceHandle)

{
  float fVar1;
  int localInt2;
  uint uVar3;
  float fVar4;
  float *pfVar5;
  longlong unaff_RBP;
  float unaff_R13D;
  longlong unaff_R14;
  longlong unaff_R15;
  float extraout_XMM0_Da;
  uint32 extraout_XMM0_Da_00;
  uint32 extraout_XMM0_Da_01;
  uint32 extraout_XMM0_Da_02;
  uint32 extraout_XMM0_Da_03;
  uint32 extraout_XMM0_Da_04;
  uint32 uVar6;
  uint32 uStackX_20;
  data *in_stack_00000028;
  float stackParameter1;
  uint32 in_stack_00000038;
  float fStack0000000000000040;
  float fStack0000000000000044;
  float in_stack_00000050;
  
  if (resourceHandle != 1.0) {
    in_stack_00000028 = &unknown_180983738;
    in_stack_00000038 = uStackX_20;
    stackParameter1 = unaff_R13D;
    fStack0000000000000040 = resourceHandle;
    localInt2 = FUN_180897520(resourceHandle,&stack0x00000028);
    resourceHandle = extraout_XMM0_Da;
    if (localInt2 != 0) goto LAB_180897af6;
  }
  localInt2 = FUN_180868270(resourceHandle,&stack0x00000050,0);
  if (localInt2 == 0) {
    if (in_stack_00000050 != 1.0) {
      fStack0000000000000040 = in_stack_00000050;
      in_stack_00000028 = &unknown_1809837c0;
      in_stack_00000038 = uStackX_20;
      stackParameter1 = unaff_R13D;
      localInt2 = FUN_180897520(in_stack_00000050,&stack0x00000028);
      if (localInt2 != 0) goto LAB_180897af6;
    }
    pfVar5 = (float *)(unaff_R15 + 0x94);
    fVar4 = unaff_R13D;
    do {
      fVar1 = *pfVar5;
      if (fVar1 != 0.0) {
        in_stack_00000038 = uStackX_20;
        in_stack_00000028 = &unknown_1809839d8;
        stackParameter1 = unaff_R13D;
        fStack0000000000000040 = fVar4;
        fStack0000000000000044 = fVar1;
        localInt2 = FUN_180897520(fVar1,&stack0x00000028);
        if (localInt2 != 0) goto LAB_180897af6;
      }
      fVar4 = (float)((int)fVar4 + 1);
      pfVar5 = pfVar5 + 1;
    } while ((int)fVar4 < 4);
    pfVar5 = (float *)&unknown_1809850f8;
    fVar4 = unaff_R13D;
    do {
      fVar1 = *(float *)(unaff_R15 + -0x180985054 + (longlong)pfVar5);
      if (fVar1 != *pfVar5) {
        in_stack_00000038 = uStackX_20;
        in_stack_00000028 = &unknown_180983950;
        stackParameter1 = unaff_R13D;
        fStack0000000000000040 = fVar4;
        fStack0000000000000044 = fVar1;
        localInt2 = FUN_180897520(fVar1,&stack0x00000028);
        if (localInt2 != 0) goto LAB_180897af6;
      }
      fVar4 = (float)((int)fVar4 + 1);
      pfVar5 = pfVar5 + 1;
    } while ((int)fVar4 < 6);
    uVar3 = func_0x000180855b70(unaff_R14 + 200);
    uVar6 = extraout_XMM0_Da_00;
    if ((float)(uVar3 / 0x30) != 0.0) {
      in_stack_00000028 = &unknown_180983be8;
      in_stack_00000038 = uStackX_20;
      stackParameter1 = unaff_R13D;
      fStack0000000000000040 = (float)(uVar3 / 0x30);
      localInt2 = FUN_180897520(extraout_XMM0_Da_00,&stack0x00000028);
      uVar6 = extraout_XMM0_Da_01;
      if (localInt2 != 0) goto LAB_180897af6;
    }
    if ((*(uint *)(unaff_R14 + 0x2d8) >> 1 & 1) != 0) {
      in_stack_00000028 = &unknown_180983a60;
      in_stack_00000038 = uStackX_20;
      fStack0000000000000040 = (float)CONCAT31(fStack0000000000000040._1_3_,1);
      stackParameter1 = unaff_R13D;
      localInt2 = FUN_180897520(uVar6,&stack0x00000028);
      if (localInt2 != 0) goto LAB_180897af6;
    }
    localInt2 = utilityAllocateMemoryBlock();
    if (localInt2 != 2) {
      in_stack_00000028 = &unknown_180983ae8;
      in_stack_00000038 = uStackX_20;
      stackParameter1 = unaff_R13D;
      localInt2 = FUN_180897520(extraout_XMM0_Da_02,&stack0x00000028);
      if (localInt2 != 0) goto LAB_180897af6;
    }
    localInt2 = utilityAllocateMemoryBlock();
    uVar6 = extraout_XMM0_Da_03;
    if (localInt2 == 4) {
      in_stack_00000028 = &unknown_180983b68;
      in_stack_00000038 = uStackX_20;
      stackParameter1 = unaff_R13D;
      fStack0000000000000040 = unaff_R13D;
      localInt2 = FUN_180897520(extraout_XMM0_Da_03,&stack0x00000028);
      uVar6 = extraout_XMM0_Da_04;
      if (localInt2 != 0) goto LAB_180897af6;
    }
    if ((*(uint *)(unaff_R14 + 0x2d8) >> 3 & 1) != 0) {
      in_stack_00000028 = &unknown_180983cf8;
      in_stack_00000038 = uStackX_20;
      stackParameter1 = unaff_R13D;
      FUN_180897520(uVar6,&stack0x00000028);
    }
  }
LAB_180897af6:
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(*(ulonglong *)(unaff_RBP + 0x90) ^ (ulonglong)&stack0x00000000);
}




// 函数: void FUN_180897afe(void)
void FUN_180897afe(void)

{
  longlong unaff_RBP;
  
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(*(ulonglong *)(unaff_RBP + 0x90) ^ (ulonglong)&stack0x00000000);
}




// 函数: void FUN_180897b0e(void)
void FUN_180897b0e(void)

{
  longlong unaff_RBP;
  
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(*(ulonglong *)(unaff_RBP + 0x90) ^ (ulonglong)&stack0x00000000);
}




// 函数: void FUN_180897b16(void)
void FUN_180897b16(void)

{
  longlong unaff_RBP;
  
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(*(ulonglong *)(unaff_RBP + 0x90) ^ (ulonglong)&stack0x00000000);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void FUN_180897b40(longlong *resourceHandle,longlong memorySize,uint32 operationFlags)
void FUN_180897b40(longlong *resourceHandle,longlong memorySize,uint32 operationFlags)

{
  longlong localLong1;
  longlong localLong2;
  int localInt3;
  int localInt4;
  int iVar5;
  int iVar6;
  int iVar7;
  byte localBuffer [32];
  uint32 localBuffer [2];
  data *localPtr;
  uint32 localUInt;
  uint32 localUInt;
  data *localPtr;
  uint32 localUInt;
  uint32 localUInt;
  int localInt;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint64 localBuffer [64];
  ulonglong localUInt;
  
  localUInt = _DAT_180bf00a8 ^ (ulonglong)localBuffer;
  localInt4 = 0;
  iVar7 = 0;
  do {
    if ((iVar7 < 0) || (*(int *)(memorySize + 0x1a8) <= iVar7)) goto LAB_180897ce8;
    localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x1a0) + (longlong)iVar7 * 8);
    if (**(int **)(localLong1 + 0xd0) != 0) {
      localBuffer[0] = 0;
      localInt3 = validate_resource_handle(*(int **)(localLong1 + 0xd0),localBuffer);
      if (localInt3 != 0) {
LAB_180897ce8:
                    // WARNING: Subroutine does not return
        ExecuteSecurityCheck(localUInt ^ (ulonglong)localBuffer);
      }
      localUInt = *(uint32 *)(localLong1 + 0x10);
      localUInt = *(uint32 *)(localLong1 + 0x14);
      localUInt = *(uint32 *)(localLong1 + 0x18);
      localUInt = *(uint32 *)(localLong1 + 0x1c);
      localUInt = 0;
      localInt3 = localInt4 + 1;
      localPtr = &unknown_180982f38;
      localUInt = localBuffer[0];
      localUInt = operationFlags;
      localInt = localInt4;
      localInt4 = FUN_180897520(resourceHandle,&localPtr);
      if (localInt4 != 0) goto LAB_180897ce8;
      iVar6 = 0;
      iVar5 = func_0x0001808c7ed0(*(uint64 *)(localLong1 + 0xd0));
      localInt4 = localInt3;
      if (0 < iVar5) {
        do {
          localUInt = 0;
          localLong2 = resourceHandle[4];
          localPtr = &unknown_1809834f8;
          localUInt = localBuffer[0];
          if (((char)localLong2 == '\0') && (localInt3 = FUN_1808987e0(resourceHandle,1), localInt3 != 0))
          goto LAB_180897ce8;
          localInt3 = (**(code **)(localPtr + 0x10))(&localPtr,localBuffer,0x200);
          func_0x00018074b7b0((longlong)localBuffer + (longlong)localInt3,0x200 - localInt3,10);
          localInt3 = (**(code **)(*resourceHandle + 8))(resourceHandle,localBuffer);
          if (localInt3 != 0) goto LAB_180897ce8;
          if ((char)localLong2 == '\0') {
            localInt3 = (**(code **)(*resourceHandle + 0x18))(resourceHandle);
            if (localInt3 != 0) goto LAB_180897ce8;
            *(byte *)(resourceHandle + 4) = 0;
          }
          iVar6 = iVar6 + 1;
          localInt3 = func_0x0001808c7ed0(*(uint64 *)(localLong1 + 0xd0));
        } while (iVar6 < localInt3);
      }
    }
    iVar7 = iVar7 + 1;
  } while( true );
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void FUN_180897d20(longlong *resourceHandle,uint64 memorySize,uint64 operationFlags,uint64 callbackFunction)
void FUN_180897d20(longlong *resourceHandle,uint64 memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 uStackX_18;
  uint64 uStackX_20;
  byte localBuffer [32];
  byte localBuffer [1024];
  ulonglong localUInt;
  
  localUInt = _DAT_180bf00a8 ^ (ulonglong)localBuffer;
  uStackX_18 = operationFlags;
  uStackX_20 = callbackFunction;
  FUN_18076b930(localBuffer,0x400,memorySize,&uStackX_18);
  (**(code **)(*resourceHandle + 8))(resourceHandle,localBuffer);
                    // WARNING: Subroutine does not return
  ExecuteSecurityCheck(localUInt ^ (ulonglong)localBuffer);
}



uint64 FUN_180897d90(longlong *resourceHandle)

{
  longlong localLong1;
  uint64 localUInt2;
  longlong localLong3;
  uint32 uVar4;
  uint32 uVar5;
  uint32 uVar6;
  uint32 uVar7;
  uint32 uVar8;
  data *localPtr;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  
  localUInt = 0;
  localPtr = &unknown_180986408;
  localUInt = 2;
  localUInt = 0x20214;
  localUInt2 = FUN_180897520(resourceHandle,&localPtr);
  if ((int)localUInt2 == 0) {
    localLong1 = *(longlong *)(resourceHandle[1] + 0x78);
    localLong3 = func_0x000180879a40();
    if (localLong3 == 0) {
      localUInt2 = 0x1c;
    }
    else {
      localUInt2 = (**(code **)(*resourceHandle + 8))(resourceHandle,&unknown_1809864dc);
      if ((int)localUInt2 == 0) {
        uVar4 = 0x14;
        localUInt2 = FUN_180897d20(resourceHandle,&unknown_1809864e0,2,2,0x14);
        if (((((int)localUInt2 == 0) &&
             (localUInt2 = FUN_180897d20(resourceHandle,&unknown_180986508,*(uint32 *)(localLong1 + 0x116bc)),
             (int)localUInt2 == 0)) &&
            (localUInt2 = FUN_180897d20(resourceHandle,&unknown_180986550,(ulonglong)*(uint *)(localLong1 + 0x6d8),
                                   (ulonglong)*(uint *)(localLong1 + 0x6dc) /
                                   (ulonglong)*(uint *)(localLong1 + 0x6d8),uVar4), (int)localUInt2 == 0)) &&
           (localUInt2 = FUN_180897d20(resourceHandle,&unknown_180986590,*(uint32 *)(localLong1 + 0x6d0),
                                  *(uint32 *)(localLong1 + 0x1193c),*(uint32 *)(localLong1 + 0x6d4)),
           (int)localUInt2 == 0)) {
          uVar4 = *(uint32 *)(localLong1 + 0x11668);
          uVar8 = *(uint32 *)(localLong1 + 0x11624);
          uVar7 = *(uint32 *)(localLong1 + 0x11620);
          uVar6 = *(uint32 *)(localLong1 + 0x1161c);
          localUInt2 = FUN_180897d20(resourceHandle,&unknown_1809865f0,*(uint32 *)(localLong1 + 0x1160c),
                                *(uint32 *)(localLong1 + 0x11610),*(uint32 *)(localLong1 + 0x11614),
                                *(uint32 *)(localLong1 + 0x11618),uVar6,uVar7,uVar8,uVar4);
          if (((int)localUInt2 == 0) &&
             (localUInt2 = FUN_180897d20(resourceHandle,&unknown_1809866c0,*(uint32 *)(localLong1 + 0x11628),
                                    (double)*(float *)(localLong1 + 0x11640),
                                    *(uint32 *)(localLong1 + 0x11644),
                                    *(uint32 *)(localLong1 + 0x1164c),uVar6,uVar7,uVar8,uVar4),
             (int)localUInt2 == 0)) {
            uVar6 = *(uint32 *)(localLong1 + 0x11660);
            localUInt2 = FUN_180897d20(resourceHandle,&unknown_180986730,(double)*(float *)(localLong1 + 0x11650),
                                  *(uint32 *)(localLong1 + 0x11654),*(uint32 *)(localLong1 + 0x11658),
                                  *(uint32 *)(localLong1 + 0x1165c),uVar6,uVar7,uVar8,uVar4);
            if ((int)localUInt2 == 0) {
              uVar5 = *(uint32 *)(localLong3 + 0x10);
              localUInt2 = FUN_180897d20(resourceHandle,&unknown_1809867b0,*(uint32 *)(localLong3 + 4),
                                    *(uint32 *)(localLong3 + 8),*(uint32 *)(localLong3 + 0xc),uVar5,
                                    uVar6,uVar7,uVar8,uVar4);
              if ((((int)localUInt2 == 0) &&
                  (localUInt2 = FUN_180897d20(resourceHandle,&unknown_180986850,*(uint32 *)(localLong1 + 0x1e0),
                                         *(uint32 *)(resourceHandle[1] + 0x20),
                                         *(uint32 *)(localLong1 + 0x78),uVar5,uVar6,uVar7,uVar8,uVar4
                                        ), (int)localUInt2 == 0)) &&
                 ((localUInt2 = (**(code **)(*resourceHandle + 8))(resourceHandle,&unknown_1809864dc), (int)localUInt2 == 0 &&
                  (((*(uint *)(resourceHandle + 3) & 2) != 0 ||
                   (localUInt2 = FUN_180898040(resourceHandle), (int)localUInt2 == 0)))))) {
                localUInt2 = 0;
              }
            }
          }
        }
      }
    }
  }
  return localUInt2;
}



uint64 FUN_180897dd3(void)

{
  longlong localLong1;
  uint64 localUInt2;
  longlong *baseRegister;
  
  localLong1 = func_0x000180879a40();
  if (localLong1 == 0) {
    localUInt2 = 0x1c;
  }
  else {
    localUInt2 = (**(code **)(*baseRegister + 8))();
    if ((((((((int)localUInt2 == 0) && (localUInt2 = FUN_180897d20(), (int)localUInt2 == 0)) &&
           (localUInt2 = FUN_180897d20(), (int)localUInt2 == 0)) &&
          ((localUInt2 = FUN_180897d20(), (int)localUInt2 == 0 && (localUInt2 = FUN_180897d20(), (int)localUInt2 == 0)))
          ) && ((localUInt2 = FUN_180897d20(), (int)localUInt2 == 0 &&
                ((localUInt2 = FUN_180897d20(), (int)localUInt2 == 0 &&
                 (localUInt2 = FUN_180897d20(), (int)localUInt2 == 0)))))) &&
        (localUInt2 = FUN_180897d20(), (int)localUInt2 == 0)) &&
       ((localUInt2 = FUN_180897d20(), (int)localUInt2 == 0 &&
        (localUInt2 = (**(code **)(*baseRegister + 8))(), (int)localUInt2 == 0)))) {
      if (((*(uint *)(baseRegister + 3) & 2) == 0) && (localUInt2 = FUN_180898040(), (int)localUInt2 != 0)) {
        return localUInt2;
      }
      localUInt2 = 0;
    }
  }
  return localUInt2;
}




// 函数: void FUN_18089802e(void)
void FUN_18089802e(void)

{
  return;
}



// WARNING: Type propagation algorithm not settling
// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void FUN_180898040(longlong *resourceHandle)
void FUN_180898040(longlong *resourceHandle)

{
  float fVar1;
  uint64 *plocalUInt2;
  uint32 *puVar3;
  longlong lVar4;
  char cVar5;
  int iVar6;
  int iVar7;
  int iVar8;
  ulonglong uVar9;
  longlong *plocalLong10;
  longlong localLong11;
  data *plocalUInt12;
  longlong *plocalLong13;
  longlong *plocalLong14;
  longlong localLong15;
  longlong *plocalLong16;
  uint localUInt17;
  float fVar18;
  longlong *plocalLong19;
  bool bVar20;
  byte localBuffer [32];
  float afStack_348 [2];
  longlong *plStack_340;
  ulonglong localUInt;
  longlong *aplStack_330 [2];
  longlong lStack_320;
  longlong *plStack_318;
  uint64 localUInt;
  float afStack_308 [2];
  longlong localArray [2];
  byte localBuffer [8];
  uint64 localBuffer [2];
  data *localPtr;
  uint32 localUInt;
  float fStack_2c8;
  uint localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint64 localUInt;
  uint64 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  longlong lStack_294;
  uint localUInt;
  byte localUInt;
  byte localBuffer [512];
  ulonglong localUInt;
  
  localUInt = _DAT_180bf00a8 ^ (ulonglong)localBuffer;
  plocalLong16 = (longlong *)0x0;
  localArray[1] = 0;
  iVar6 = utilityInitializeResource(localArray + 1,resourceHandle[1]);
  if ((iVar6 == 0) && (iVar6 = FUN_1808987e0(resourceHandle,1), iVar6 == 0)) {
    (**(code **)(*resourceHandle + 8))(resourceHandle,&unknown_180986488);
    if (((*(uint *)(resourceHandle + 3) & 0x1000000) == 0) ||
       (iVar6 = FUN_180896c60(resourceHandle,*(uint64 *)(resourceHandle[1] + 0xc0),0,1), iVar6 == 0)) {
      localLong15 = resourceHandle[1];
      plocalLong14 = (longlong *)(localLong15 + 0x50);
      plocalLong10 = (longlong *)(*(longlong *)(localLong15 + 0x50) + -8);
      if (*(longlong *)(localLong15 + 0x50) == 0) {
        plocalLong10 = plocalLong16;
      }
      plocalLong13 = plocalLong16;
      if (plocalLong10 != (longlong *)0x0) {
        plocalLong13 = plocalLong10 + 1;
      }
      if (plocalLong13 != plocalLong14) {
        do {
          plocalLong10 = plocalLong13 + -1;
          if (plocalLong13 == (longlong *)0x0) {
            plocalLong10 = plocalLong16;
          }
          localLong15 = plocalLong10[3];
          if (localLong15 != 0) {
            afStack_348[0] = 0.0;
            iVar6 = validate_resource_handle(plocalLong10,afStack_348);
            if ((iVar6 != 0) || (iVar6 = FUN_180896c60(resourceHandle,localLong15,afStack_348[0],0), iVar6 != 0)
               ) goto LAB_18089866f;
          }
          if (plocalLong13 == plocalLong14) break;
          plocalLong10 = (longlong *)(*plocalLong13 + -8);
          if (*plocalLong13 == 0) {
            plocalLong10 = plocalLong16;
          }
          plocalLong13 = plocalLong16;
          if (plocalLong10 != (longlong *)0x0) {
            plocalLong13 = plocalLong10 + 1;
          }
        } while (plocalLong13 != plocalLong14);
        localLong15 = resourceHandle[1];
      }
      iVar6 = *(int *)(localLong15 + 0x28);
      if (iVar6 != 1) {
        localUInt = localUInt & 0xffffffff00000000;
        plStack_340 = (longlong *)&unknown_180982378;
        aplStack_330[0] = (longlong *)CONCAT44(aplStack_330[0]._4_4_,iVar6);
        iVar7 = FUN_180897520(resourceHandle,&plStack_340);
        if (iVar7 != 0) goto LAB_18089866f;
      }
      plocalLong14 = plocalLong16;
      plocalLong10 = plocalLong16;
      plocalLong13 = plocalLong16;
      plocalLong19 = plocalLong16;
      localArray[0] = (longlong)iVar6;
      if (0 < iVar6) {
        do {
          localLong15 = resourceHandle[1];
          localUInt = 0;
          localPtr = &unknown_1809823f8;
          fVar18 = SUB84(plocalLong13,0);
          plocalLong13 = (longlong *)(localLong15 + 0xe0 + (longlong)plocalLong10);
          localLong11 = *plocalLong13;
          uVar9 = plocalLong13[1];
          localUInt = (uint)localLong11;
          localUInt = (uint32)((ulonglong)localLong11 >> 0x20);
          localUInt = (uint32)uVar9;
          localUInt = (uint32)(uVar9 >> 0x20);
          plocalUInt2 = (uint64 *)(localLong15 + 0xf0 + (longlong)plocalLong10);
          localUInt = *plocalUInt2;
          localUInt = plocalUInt2[1];
          puVar3 = (uint32 *)(localLong15 + 0x100 + (longlong)plocalLong10);
          localUInt = *puVar3;
          localUInt = puVar3[1];
          localUInt = puVar3[2];
          localUInt = puVar3[3];
          lStack_294 = *(longlong *)(localLong15 + 0x260 + (longlong)plocalLong19);
          localUInt = *(uint *)(localLong15 + 0x268 + (longlong)plocalLong19);
          localLong11 = localLong11 - lStack_294;
          if (localLong11 == 0) {
            localLong11 = (uVar9 & 0xffffffff) - (ulonglong)localUInt;
          }
          localLong15 = resourceHandle[4];
          localUInt = localLong11 == 0;
          fStack_2c8 = fVar18;
          if (((char)localLong15 == '\0') &&
             (iVar6 = FUN_1808987e0(resourceHandle,CONCAT71((uint7)(uint3)(localUInt >> 8),1)), iVar6 != 0
             )) goto LAB_18089866f;
          iVar6 = (**(code **)(localPtr + 0x10))(&localPtr,localBuffer,0x200);
          func_0x00018074b7b0(localBuffer + iVar6,0x200 - iVar6,10);
          iVar6 = (**(code **)(*resourceHandle + 8))(resourceHandle,localBuffer);
          if (iVar6 != 0) goto LAB_18089866f;
          if ((char)localLong15 == '\0') {
            iVar6 = (**(code **)(*resourceHandle + 0x18))(resourceHandle);
            if (iVar6 != 0) goto LAB_18089866f;
            *(byte *)(resourceHandle + 4) = 0;
          }
          plocalLong14 = (longlong *)((longlong)plocalLong14 + 1);
          plocalLong10 = plocalLong10 + 6;
          plocalLong13 = (longlong *)(ulonglong)((int)fVar18 + 1);
          plocalLong19 = (longlong *)((longlong)plocalLong19 + 0xc);
        } while ((longlong)plocalLong14 < localArray[0]);
      }
      localLong15 = resourceHandle[1] + 0x60;
      iVar6 = func_0x0001808675f0(localLong15);
      plocalLong14 = plocalLong16;
      if (0 < iVar6) {
        do {
          func_0x000180867660(localLong15,localBuffer,plocalLong14);
          func_0x0001808676a0(localLong15,plocalLong14,afStack_348,localArray);
          localLong11 = func_0x000180867680(localLong15,plocalLong14);
          cVar5 = func_0x000180894c50(localLong11,0);
          if ((cVar5 == '\0') && (afStack_348[0] != *(float *)(localLong11 + 0x4c))) {
            localUInt = localBuffer._0_4_;
            localUInt = localBuffer._4_4_;
            fStack_2c8 = afStack_348[0];
            localUInt = 0;
            localPtr = &unknown_180982260;
            localUInt = localUInt & 0xffffff00;
            if (*(int *)(localLong11 + 0x58) < 1) {
              plocalUInt12 = &g_miscTempData3;
            }
            else {
              plocalUInt12 = *(data **)(localLong11 + 0x50);
            }
            func_0x00018076b450(&localUInt,plocalUInt12,0x80);
            localLong11 = resourceHandle[4];
            if ((char)localLong11 == '\0') {
              *(byte *)(resourceHandle + 4) = 1;
              iVar7 = FUN_18073a200(*(uint64 *)(resourceHandle[1] + 0x78),localBuffer);
              if (((iVar7 != 0) || (iVar7 = FUN_18073c4c0(localBuffer[0],&lStack_320,0), iVar7 != 0)
                  ) || (iVar7 = (**(code **)(*resourceHandle + 0x10))(resourceHandle), iVar7 != 0))
              goto LAB_18089866f;
              uVar9 = (ulonglong)(lStack_320 * 48000) /
                      (ulonglong)*(uint *)((longlong)resourceHandle + 0x1c);
              lVar4 = resourceHandle[2];
              plStack_340 = (longlong *)&unknown_180986390;
              localUInt = localUInt & 0xffffffff00000000;
              resourceHandle[2] = uVar9;
              aplStack_330[0] = plocalLong16;
              if (lVar4 != 0) {
                aplStack_330[0] = (longlong *)(uVar9 - lVar4);
              }
              iVar7 = FUN_180897520(resourceHandle,&plStack_340);
              if (iVar7 != 0) goto LAB_18089866f;
            }
            iVar7 = (**(code **)(localPtr + 0x10))(&localPtr,localBuffer,0x200);
            func_0x00018074b7b0(localBuffer + iVar7,0x200 - iVar7,10);
            iVar7 = (**(code **)(*resourceHandle + 8))(resourceHandle,localBuffer);
            if (iVar7 != 0) goto LAB_18089866f;
            if ((char)localLong11 == '\0') {
              iVar7 = (**(code **)(*resourceHandle + 0x18))(resourceHandle);
              if (iVar7 != 0) goto LAB_18089866f;
              *(byte *)(resourceHandle + 4) = 0;
            }
          }
          localUInt17 = (int)plocalLong14 + 1;
          plocalLong14 = (longlong *)(ulonglong)localUInt17;
        } while ((int)localUInt17 < iVar6);
      }
      localUInt = 0xffffffffffffffff;
      afStack_308[0] = -NAN;
      plStack_318 = (longlong *)(*(longlong *)(resourceHandle[1] + 0x90) + 0x38);
      FUN_1808741f0(plStack_318,&localUInt,afStack_308);
      afStack_348[0] = afStack_308[0];
      if (afStack_308[0] != -NAN) {
        plocalLong16 = plStack_318;
        fVar18 = (float)localUInt;
        do {
          do {
            localLong15 = (longlong)(int)afStack_348[0] * 0x20;
            localUInt = 0xffffffffffffffff;
            aplStack_330[0] = (longlong *)CONCAT44(aplStack_330[0]._4_4_,0xffffffff);
            plStack_340 = *(longlong **)(plocalLong16[2] + 0x18 + localLong15);
            lStack_320 = localLong15;
            FUN_1807d1650(plStack_340,&localUInt,aplStack_330);
            plocalLong14 = plStack_340;
            if ((int)aplStack_330[0] != -1) {
              iVar6 = (int)aplStack_330[0];
              iVar7 = (int)localUInt;
              do {
                do {
                  localLong15 = *(longlong *)(plocalLong14[2] + 8 + (longlong)iVar6 * 0x10);
                  if (((*(longlong *)(localLong15 + 0x80) != 0) && (*(longlong *)(localLong15 + 0x350) == 0))
                     && (iVar8 = FUN_1808975e0(resourceHandle), iVar8 != 0)) goto LAB_18089866f;
                } while ((iVar6 != -1) &&
                        (iVar6 = *(int *)(plocalLong14[2] + 4 + (longlong)iVar6 * 0x10), iVar6 != -1));
                iVar6 = iVar7 + 1;
                bVar20 = iVar7 != -1;
                iVar7 = 0;
                if (bVar20) {
                  iVar7 = iVar6;
                }
                if (iVar7 != (int)plocalLong14[1]) {
                  localLong15 = (longlong)iVar7;
                  do {
                    if (*(int *)(*plocalLong14 + localLong15 * 4) != -1) {
                      iVar6 = *(int *)(*plocalLong14 + (longlong)iVar7 * 4);
                      goto LAB_1808985be;
                    }
                    iVar7 = iVar7 + 1;
                    localLong15 = localLong15 + 1;
                  } while (localLong15 != (int)plocalLong14[1]);
                }
                iVar6 = -1;
                iVar7 = iVar6;
LAB_1808985be:
                localLong15 = lStack_320;
                plocalLong16 = plStack_318;
              } while (iVar6 != -1);
            }
          } while ((afStack_348[0] != -NAN) &&
                  (afStack_348[0] = *(float *)(plocalLong16[2] + 0x10 + localLong15), afStack_348[0] != -NAN))
          ;
          fVar1 = (float)((int)fVar18 + 1);
          bVar20 = fVar18 != -NAN;
          fVar18 = 0.0;
          if (bVar20) {
            fVar18 = fVar1;
          }
          if (fVar18 != *(float *)(plocalLong16 + 1)) {
            localLong15 = (longlong)(int)fVar18;
            do {
              if (*(int *)(*plocalLong16 + localLong15 * 4) != -1) {
                afStack_348[0] = *(float *)(*plocalLong16 + (longlong)(int)fVar18 * 4);
                goto LAB_180898629;
              }
              fVar18 = (float)((int)fVar18 + 1);
              localLong15 = localLong15 + 1;
            } while (localLong15 != (int)*(float *)(plocalLong16 + 1));
          }
          afStack_348[0] = -NAN;
          fVar18 = afStack_348[0];
LAB_180898629:
        } while (afStack_348[0] != -NAN);
      }
      (**(code **)(*resourceHandle + 8))(resourceHandle,&unknown_1809864b0);
      iVar6 = (**(code **)(*resourceHandle + 0x18))(resourceHandle);
      if (iVar6 == 0) {
        *(byte *)(resourceHandle + 4) = 0;
      }
    }
  }
LAB_18089866f:
                    // WARNING: Subroutine does not return
  utilityCleanupResource(localArray + 1);
}




// 函数: void FUN_1808986b0(longlong resourceHandle,uint64 memorySize)
void FUN_1808986b0(longlong resourceHandle,uint64 memorySize)

{
  int localInt1;
  int localInt2;
  int localInt3;
  int localInt4;
  uint uVar5;
  int iVar6;
  
  localInt2 = func_0x00018076b690(memorySize);
  localInt1 = *(int *)(resourceHandle + 0x30);
  uVar5 = (int)*(uint *)(resourceHandle + 0x34) >> 0x1f;
  localInt3 = (*(uint *)(resourceHandle + 0x34) ^ uVar5) - uVar5;
  iVar6 = localInt1 + localInt2;
  if (localInt3 < iVar6) {
    localInt4 = (int)((float)localInt3 * 1.5);
    localInt3 = iVar6;
    if (iVar6 <= localInt4) {
      localInt3 = localInt4;
    }
    if (localInt3 < 0x40) {
      localInt3 = 0x40;
    }
    localInt3 = FUN_180849030(resourceHandle + 0x28,localInt3);
    if (localInt3 != 0) {
      return;
    }
  }
  uVar5 = (int)*(uint *)(resourceHandle + 0x34) >> 0x1f;
  if (((int)((*(uint *)(resourceHandle + 0x34) ^ uVar5) - uVar5) < iVar6) &&
     (localInt3 = FUN_180849030(resourceHandle + 0x28,iVar6), localInt3 != 0)) {
    return;
  }
  localInt3 = *(int *)(resourceHandle + 0x30);
  if (iVar6 <= localInt3) {
    *(int *)(resourceHandle + 0x30) = iVar6;
                    // WARNING: Subroutine does not return
    memcpy((longlong)localInt1 + *(longlong *)(resourceHandle + 0x28),memorySize,(longlong)localInt2);
  }
                    // WARNING: Subroutine does not return
  memset((longlong)localInt3 + *(longlong *)(resourceHandle + 0x28),0,(longlong)(iVar6 - localInt3));
}



uint64 FUN_180898790(longlong *resourceHandle,int memorySize)

{
  int localInt1;
  uint64 localUInt2;
  uint uVar3;
  
  uVar3 = (int)*(uint *)((longlong)resourceHandle + 0xc) >> 0x1f;
  if (((int)((*(uint *)((longlong)resourceHandle + 0xc) ^ uVar3) - uVar3) < memorySize) &&
     (localUInt2 = FUN_180849030(resourceHandle,memorySize), (int)localUInt2 != 0)) {
    return localUInt2;
  }
  localInt1 = (int)resourceHandle[1];
  if (memorySize <= localInt1) {
    *(int *)(resourceHandle + 1) = memorySize;
    return 0;
  }
                    // WARNING: Subroutine does not return
  memset((longlong)localInt1 + *resourceHandle,0,(longlong)(memorySize - localInt1));
}



uint64 FUN_1808987e0(longlong *resourceHandle,char memorySize)

{
  longlong localLong1;
  uint64 localUInt2;
  ulonglong uVar3;
  ulonglong uVar4;
  uint64 uStackX_8;
  longlong alStackX_18 [2];
  data *localPtr;
  uint32 localUInt;
  ulonglong localUInt;
  
  *(byte *)(resourceHandle + 4) = 1;
  localUInt2 = FUN_18073a200(*(uint64 *)(resourceHandle[1] + 0x78),&uStackX_8);
  if ((((int)localUInt2 == 0) && (localUInt2 = FUN_18073c4c0(uStackX_8,alStackX_18,0), (int)localUInt2 == 0)) &&
     (localUInt2 = (**(code **)(*resourceHandle + 0x10))(resourceHandle), (int)localUInt2 == 0)) {
    uVar3 = (ulonglong)(alStackX_18[0] * 48000) / (ulonglong)*(uint *)((longlong)resourceHandle + 0x1c);
    localLong1 = resourceHandle[2];
    uVar4 = uVar3 - localLong1;
    if (((memorySize != '\0') || (localLong1 == 0)) || (47999 < uVar4)) {
      resourceHandle[2] = uVar3;
      localUInt = 0;
      localUInt = 0;
      if (localLong1 != 0) {
        localUInt = uVar4;
      }
      localPtr = &unknown_180986390;
      localUInt2 = FUN_180897520(resourceHandle,&localPtr);
      if ((int)localUInt2 != 0) {
        return localUInt2;
      }
    }
    localUInt2 = 0;
  }
  return localUInt2;
}



uint64 FUN_1808988b0(longlong *resourceHandle,char *memorySize,uint64 *operationFlags)

{
  char *pcVar1;
  uint64 *plocalUInt2;
  byte bVar3;
  uint64 uVar4;
  char cVar5;
  char cVar6;
  int iVar7;
  uint uVar8;
  char *pcVar9;
  int localInt10;
  uint *plocalUInt11;
  
  plocalUInt11 = (uint *)*resourceHandle;
  if (((plocalUInt11 != (uint *)0x0) && (resourceHandle[4] != 0)) && (resourceHandle[2] != 0)) {
    localInt10 = 0;
    cVar5 = *memorySize;
    while (cVar5 != '\0') {
      bVar3 = *(byte *)((longlong)plocalUInt11 + 7);
      if (bVar3 == 0) {
        return 0x4a;
      }
      cVar5 = func_0x00018076b8a0(cVar5);
      plocalUInt11 = (uint *)(*resourceHandle + (ulonglong)(plocalUInt11[1] & 0xffffff) * 8);
      iVar7 = 0;
      if (bVar3 == 0) {
        return 0x4a;
      }
      while (*(char *)((longlong)plocalUInt11 + 3) != cVar5) {
        iVar7 = iVar7 + 1;
        plocalUInt11 = plocalUInt11 + 2;
        if ((int)(uint)bVar3 <= iVar7) {
          return 0x4a;
        }
      }
      memorySize = memorySize + 1;
      pcVar9 = (char *)(resourceHandle[4] + 1 + (ulonglong)(*plocalUInt11 & 0xffffff));
      cVar5 = *memorySize;
      while (cVar5 != '\0') {
        if (*pcVar9 == '\0') goto LAB_1808989b1;
        cVar5 = func_0x00018076b8a0(cVar5);
        cVar6 = func_0x00018076b8a0(*pcVar9);
        if (cVar5 != cVar6) break;
        pcVar1 = memorySize + 1;
        memorySize = memorySize + 1;
        pcVar9 = pcVar9 + 1;
        cVar5 = *pcVar1;
      }
      if (*pcVar9 != '\0') {
        return 0x4a;
      }
LAB_1808989b1:
      cVar5 = *memorySize;
    }
    bVar3 = *(byte *)((longlong)plocalUInt11 + 7);
    if (bVar3 != 0) {
      plocalUInt11 = (uint *)(*resourceHandle + (ulonglong)(plocalUInt11[1] & 0xffffff) * 8);
      if (bVar3 != 0) {
        do {
          if (*(char *)((longlong)plocalUInt11 + 3) == '\0') goto LAB_1808989f7;
          localInt10 = localInt10 + 1;
          plocalUInt11 = plocalUInt11 + 2;
        } while (localInt10 < (int)(uint)bVar3);
      }
      return 0x4a;
    }
LAB_1808989f7:
    uVar8 = plocalUInt11[1] & 0xffffff;
    if (((char)(plocalUInt11[1] >> 0x18) == '\0') && ((int)uVar8 < (int)resourceHandle[3])) {
      plocalUInt2 = (uint64 *)(resourceHandle[2] + (ulonglong)uVar8 * 0x10);
      uVar4 = plocalUInt2[1];
      *operationFlags = *plocalUInt2;
      operationFlags[1] = uVar4;
      return 0;
    }
  }
  return 0x1c;
}



// 数组二分搜索函数 - 在排序数组中查找指定元素
uint64
binarySearchInArray(longlong arrayHandle, uint *searchKey, uint64 param3, uint32 param4,
                   uint64 param5)

{
  uint searchValue;
  longlong dataArrayPtr;
  int rightBound;
  int comparisonResult;
  uint64 result;
  uint *currentElement;
  int middleIndex;
  int leftBound;
  int elementCount;
  
  leftBound = 0;
  elementCount = *(int *)(arrayHandle + 0x18) + -1;
  if (-1 < elementCount) {
    dataArrayPtr = *(longlong *)(arrayHandle + 0x10);
    searchValue = *searchKey;
    do {
      middleIndex = elementCount + leftBound >> 1;
      currentElement = (uint *)((longlong)middleIndex * 0x10 + dataArrayPtr);
      if (searchValue == *currentElement) {
        comparisonResult = (uint)(ushort)searchKey[1] - (uint)(ushort)currentElement[1];
        if ((comparisonResult == 0) &&
           (comparisonResult = (uint)*(ushort *)((longlong)searchKey + 6) -
                               (uint)*(ushort *)((longlong)currentElement + 6), comparisonResult == 0)) {
          comparisonResult = memcmp(searchKey + 2, currentElement + 2, 8);
        }
      }
      else {
        comparisonResult = 1;
        if (searchValue < *currentElement) {
          comparisonResult = -1;
        }
      }
      if (comparisonResult == 0) {
        if (middleIndex < 0) {
          return 0x4a;
        }
        result = retrieveArrayElementData(arrayHandle, middleIndex, 0, param3, param4, param5);
        return result;
      }
      rightBound = middleIndex + -1;
      if (-1 < comparisonResult) {
        rightBound = elementCount;
      }
      elementCount = rightBound;
      if (-1 < comparisonResult) {
        leftBound = middleIndex + 1;
      }
    } while (leftBound <= elementCount);
  }
  return 0x4a;
}



uint32
FUN_180898b40(longlong *resourceHandle,int memorySize,uint32 *operationFlags,byte *callbackFunction,int param_5,
             int *param_6)

{
  uint32 *plocalUInt1;
  byte localUInt2;
  uint uVar3;
  uint3 uVar4;
  uint32 uVar5;
  uint32 uVar6;
  uint uVar7;
  int iVar8;
  int iVar9;
  byte *plocalUInt10;
  byte *plocalUInt11;
  uint localUInt12;
  longlong localLong13;
  byte *plocalUInt14;
  int localInt15;
  uint32 localUInt16;
  int localInt17;
  
  if ((-1 < memorySize) && (memorySize < (int)resourceHandle[3])) {
    if (operationFlags != (uint32 *)0x0) {
      plocalUInt1 = (uint32 *)(resourceHandle[2] + (longlong)memorySize * 0x10);
      localUInt16 = plocalUInt1[1];
      uVar5 = plocalUInt1[2];
      uVar6 = plocalUInt1[3];
      *operationFlags = *plocalUInt1;
      operationFlags[1] = localUInt16;
      operationFlags[2] = uVar5;
      operationFlags[3] = uVar6;
    }
    localInt17 = 0;
    localUInt12 = 0;
    uVar4 = *(uint3 *)((longlong)memorySize * 3 + resourceHandle[6]);
    while (uVar7 = (uint)uVar4, uVar7 != 0xffffff) {
      uVar3 = *(uint *)(*resourceHandle + (ulonglong)uVar7 * 8);
      if ((uVar3 & 0xffffff) != 0xffffff) {
        localLong13 = (ulonglong)(uVar3 & 0xffffff) + resourceHandle[4];
        iVar8 = func_0x00018076b690(localLong13);
        if (param_5 != 0) {
          plocalUInt14 = (byte *)((iVar8 + -1) + localLong13);
          localInt15 = iVar8;
          while (0 < localInt15) {
            iVar9 = localInt15;
            if ((int)(param_5 - localUInt12) <= localInt15) {
              iVar9 = param_5 - localUInt12;
            }
            localInt15 = localInt15 - iVar9;
            if (iVar9 != 0) {
              plocalUInt10 = callbackFunction + (int)localUInt12;
              localUInt12 = localUInt12 + iVar9;
              do {
                localUInt2 = *plocalUInt14;
                plocalUInt14 = plocalUInt14 + -1;
                *plocalUInt10 = localUInt2;
                plocalUInt10 = plocalUInt10 + 1;
                iVar9 = iVar9 + -1;
              } while (iVar9 != 0);
            }
            localUInt12 = localUInt12 & (int)(localUInt12 - param_5) >> 0x1f;
          }
        }
        localInt17 = localInt17 + iVar8;
      }
      uVar4 = *(uint3 *)((ulonglong)uVar7 * 3 + resourceHandle[8]);
    }
    localUInt16 = 0;
    if (param_5 != 0) {
      if (localInt17 < param_5) {
        plocalUInt10 = callbackFunction + localInt17;
        plocalUInt14 = plocalUInt10 + -1;
        if (callbackFunction < plocalUInt14) {
          do {
            localUInt2 = *callbackFunction;
            *callbackFunction = *plocalUInt14;
            callbackFunction = callbackFunction + 1;
            *plocalUInt14 = localUInt2;
            plocalUInt14 = plocalUInt14 + -1;
          } while (callbackFunction < plocalUInt14);
        }
        *plocalUInt10 = 0;
        localUInt16 = 0;
      }
      else {
        plocalUInt11 = callbackFunction + (int)localUInt12;
        plocalUInt14 = plocalUInt11 + -1;
        plocalUInt10 = callbackFunction;
        if (callbackFunction < plocalUInt14) {
          do {
            localUInt2 = *plocalUInt10;
            *plocalUInt10 = *plocalUInt14;
            plocalUInt10 = plocalUInt10 + 1;
            *plocalUInt14 = localUInt2;
            plocalUInt14 = plocalUInt14 + -1;
          } while (plocalUInt10 < plocalUInt14);
        }
        plocalUInt14 = plocalUInt11 + (longlong)(int)(param_5 - localUInt12) + -1;
        if (plocalUInt11 < plocalUInt14) {
          do {
            localUInt2 = *plocalUInt11;
            *plocalUInt11 = *plocalUInt14;
            plocalUInt11 = plocalUInt11 + 1;
            *plocalUInt14 = localUInt2;
            plocalUInt14 = plocalUInt14 + -1;
          } while (plocalUInt11 < plocalUInt14);
        }
        callbackFunction[(longlong)param_5 + -1] = 0;
        localUInt16 = 0x41;
      }
    }
    if (param_6 != (int *)0x0) {
      *param_6 = localInt17 + 1;
    }
    return localUInt16;
  }
  return 0x1f;
}



uint32 FUN_180898b65(uint64 resourceHandle,int memorySize,uint32 *operationFlags)

{
  uint32 *plocalUInt1;
  byte localUInt2;
  uint uVar3;
  uint3 uVar4;
  uint32 uVar5;
  uint32 uVar6;
  uint uVar7;
  int iVar8;
  int iVar9;
  byte *plocalUInt10;
  byte *plocalUInt11;
  uint localUInt12;
  int localInt13;
  longlong unaff_RBP;
  byte *unaff_RSI;
  longlong localLong14;
  byte *plocalUInt15;
  int localInt16;
  uint32 localUInt17;
  longlong *unaff_R14;
  int localInt18;
  int *in_stack_00000078;
  
  if (operationFlags != (uint32 *)0x0) {
    plocalUInt1 = (uint32 *)(unaff_R14[2] + (longlong)memorySize * 0x10);
    localUInt17 = plocalUInt1[1];
    uVar5 = plocalUInt1[2];
    uVar6 = plocalUInt1[3];
    *operationFlags = *plocalUInt1;
    operationFlags[1] = localUInt17;
    operationFlags[2] = uVar5;
    operationFlags[3] = uVar6;
  }
  localInt18 = 0;
  localUInt12 = 0;
  localInt13 = (int)unaff_RBP;
  uVar4 = *(uint3 *)((longlong)memorySize * 3 + unaff_R14[6]);
  while (uVar7 = (uint)uVar4, uVar7 != 0xffffff) {
    uVar3 = *(uint *)(*unaff_R14 + (ulonglong)uVar7 * 8);
    if ((uVar3 & 0xffffff) != 0xffffff) {
      localLong14 = (ulonglong)(uVar3 & 0xffffff) + unaff_R14[4];
      iVar8 = func_0x00018076b690(localLong14);
      if (localInt13 != 0) {
        plocalUInt15 = (byte *)((iVar8 + -1) + localLong14);
        localInt16 = iVar8;
        while (0 < localInt16) {
          iVar9 = localInt16;
          if ((int)(localInt13 - localUInt12) <= localInt16) {
            iVar9 = localInt13 - localUInt12;
          }
          localInt16 = localInt16 - iVar9;
          if (iVar9 != 0) {
            plocalUInt10 = unaff_RSI + (int)localUInt12;
            localUInt12 = localUInt12 + iVar9;
            do {
              localUInt2 = *plocalUInt15;
              plocalUInt15 = plocalUInt15 + -1;
              *plocalUInt10 = localUInt2;
              plocalUInt10 = plocalUInt10 + 1;
              iVar9 = iVar9 + -1;
            } while (iVar9 != 0);
          }
          localUInt12 = localUInt12 & (int)(localUInt12 - localInt13) >> 0x1f;
        }
      }
      localInt18 = localInt18 + iVar8;
    }
    uVar4 = *(uint3 *)((ulonglong)uVar7 * 3 + unaff_R14[8]);
  }
  localUInt17 = 0;
  if (localInt13 != 0) {
    if (localInt18 < localInt13) {
      plocalUInt10 = unaff_RSI + localInt18;
      plocalUInt15 = plocalUInt10 + -1;
      if (unaff_RSI < plocalUInt15) {
        do {
          localUInt2 = *unaff_RSI;
          *unaff_RSI = *plocalUInt15;
          unaff_RSI = unaff_RSI + 1;
          *plocalUInt15 = localUInt2;
          plocalUInt15 = plocalUInt15 + -1;
        } while (unaff_RSI < plocalUInt15);
      }
      *plocalUInt10 = 0;
      localUInt17 = 0;
    }
    else {
      plocalUInt11 = unaff_RSI + (int)localUInt12;
      plocalUInt15 = plocalUInt11 + -1;
      plocalUInt10 = unaff_RSI;
      if (unaff_RSI < plocalUInt15) {
        do {
          localUInt2 = *plocalUInt10;
          *plocalUInt10 = *plocalUInt15;
          plocalUInt10 = plocalUInt10 + 1;
          *plocalUInt15 = localUInt2;
          plocalUInt15 = plocalUInt15 + -1;
        } while (plocalUInt10 < plocalUInt15);
      }
      plocalUInt15 = plocalUInt11 + (longlong)(int)(localInt13 - localUInt12) + -1;
      if (plocalUInt11 < plocalUInt15) {
        do {
          localUInt2 = *plocalUInt11;
          *plocalUInt11 = *plocalUInt15;
          plocalUInt11 = plocalUInt11 + 1;
          *plocalUInt15 = localUInt2;
          plocalUInt15 = plocalUInt15 + -1;
        } while (plocalUInt11 < plocalUInt15);
      }
      unaff_RSI[unaff_RBP + -1] = 0;
      localUInt17 = 0x41;
    }
  }
  if (in_stack_00000078 != (int *)0x0) {
    *in_stack_00000078 = localInt18 + 1;
  }
  return localUInt17;
}



uint32 FUN_180898bc0(uint64 resourceHandle,ulonglong memorySize)

{
  byte localUInt1;
  int localInt2;
  int localInt3;
  uint uVar4;
  byte *puVar5;
  byte *puVar6;
  uint unaff_EBX;
  int iVar7;
  longlong unaff_RBP;
  byte *unaff_RSI;
  longlong lVar8;
  byte *puVar9;
  int localInt10;
  uint32 unaff_R13D;
  longlong *unaff_R14;
  int unaff_R15D;
  int *in_stack_00000078;
  
  do {
    uVar4 = *(uint *)(*unaff_R14 + memorySize * 8);
    iVar7 = (int)unaff_RBP;
    if ((uVar4 & 0xffffff) != 0xffffff) {
      lVar8 = (ulonglong)(uVar4 & 0xffffff) + unaff_R14[4];
      localInt2 = func_0x00018076b690(lVar8);
      if (iVar7 != 0) {
        puVar9 = (byte *)((localInt2 + -1) + lVar8);
        localInt10 = localInt2;
        while (0 < localInt10) {
          localInt3 = localInt10;
          if ((int)(iVar7 - unaff_EBX) <= localInt10) {
            localInt3 = iVar7 - unaff_EBX;
          }
          localInt10 = localInt10 - localInt3;
          if (localInt3 != 0) {
            puVar5 = unaff_RSI + (int)unaff_EBX;
            unaff_EBX = unaff_EBX + localInt3;
            do {
              localUInt1 = *puVar9;
              puVar9 = puVar9 + -1;
              *puVar5 = localUInt1;
              puVar5 = puVar5 + 1;
              localInt3 = localInt3 + -1;
            } while (localInt3 != 0);
          }
          unaff_EBX = unaff_EBX & (int)(unaff_EBX - iVar7) >> 0x1f;
        }
      }
      unaff_R15D = unaff_R15D + localInt2;
    }
    uVar4 = (uint)*(uint3 *)((memorySize & 0xffffffff) * 3 + unaff_R14[8]);
    memorySize = (ulonglong)uVar4;
  } while (uVar4 != 0xffffff);
  if (iVar7 != 0) {
    if (unaff_R15D < iVar7) {
      puVar5 = unaff_RSI + unaff_R15D;
      puVar9 = puVar5 + -1;
      if (unaff_RSI < puVar9) {
        do {
          localUInt1 = *unaff_RSI;
          *unaff_RSI = *puVar9;
          unaff_RSI = unaff_RSI + 1;
          *puVar9 = localUInt1;
          puVar9 = puVar9 + -1;
        } while (unaff_RSI < puVar9);
      }
      *puVar5 = (char)unaff_R13D;
    }
    else {
      puVar6 = unaff_RSI + (int)unaff_EBX;
      puVar9 = puVar6 + -1;
      puVar5 = unaff_RSI;
      if (unaff_RSI < puVar9) {
        do {
          localUInt1 = *puVar5;
          *puVar5 = *puVar9;
          puVar5 = puVar5 + 1;
          *puVar9 = localUInt1;
          puVar9 = puVar9 + -1;
        } while (puVar5 < puVar9);
      }
      puVar9 = puVar6 + (longlong)(int)(iVar7 - unaff_EBX) + -1;
      if (puVar6 < puVar9) {
        do {
          localUInt1 = *puVar6;
          *puVar6 = *puVar9;
          puVar6 = puVar6 + 1;
          *puVar9 = localUInt1;
          puVar9 = puVar9 + -1;
        } while (puVar6 < puVar9);
      }
      unaff_RSI[unaff_RBP + -1] = (char)unaff_R13D;
      unaff_R13D = 0x41;
    }
  }
  if (in_stack_00000078 != (int *)0x0) {
    *in_stack_00000078 = unaff_R15D + 1;
  }
  return unaff_R13D;
}



uint32 FUN_180898c86(void)

{
  byte localUInt1;
  byte *plocalUInt2;
  byte *puVar3;
  int unaff_EBX;
  int localInt4;
  longlong unaff_RBP;
  byte *unaff_RSI;
  byte *puVar5;
  uint32 unaff_R13D;
  int unaff_R15D;
  int *in_stack_00000078;
  
  localInt4 = (int)unaff_RBP;
  if (localInt4 != 0) {
    if (unaff_R15D < localInt4) {
      puVar5 = unaff_RSI + unaff_R15D;
      plocalUInt2 = puVar5 + -1;
      if (unaff_RSI < plocalUInt2) {
        do {
          localUInt1 = *unaff_RSI;
          *unaff_RSI = *plocalUInt2;
          unaff_RSI = unaff_RSI + 1;
          *plocalUInt2 = localUInt1;
          plocalUInt2 = plocalUInt2 + -1;
        } while (unaff_RSI < plocalUInt2);
      }
      *puVar5 = (char)unaff_R13D;
    }
    else {
      puVar3 = unaff_RSI + unaff_EBX;
      plocalUInt2 = puVar3 + -1;
      puVar5 = unaff_RSI;
      if (unaff_RSI < plocalUInt2) {
        do {
          localUInt1 = *puVar5;
          *puVar5 = *plocalUInt2;
          puVar5 = puVar5 + 1;
          *plocalUInt2 = localUInt1;
          plocalUInt2 = plocalUInt2 + -1;
        } while (puVar5 < plocalUInt2);
      }
      plocalUInt2 = puVar3 + (longlong)(localInt4 - unaff_EBX) + -1;
      if (puVar3 < plocalUInt2) {
        do {
          localUInt1 = *puVar3;
          *puVar3 = *plocalUInt2;
          puVar3 = puVar3 + 1;
          *plocalUInt2 = localUInt1;
          plocalUInt2 = plocalUInt2 + -1;
        } while (puVar3 < plocalUInt2);
      }
      unaff_RSI[unaff_RBP + -1] = (char)unaff_R13D;
      unaff_R13D = 0x41;
    }
  }
  if (in_stack_00000078 != (int *)0x0) {
    *in_stack_00000078 = unaff_R15D + 1;
  }
  return unaff_R13D;
}



uint32 FUN_180898d31(uint64 resourceHandle,int *memorySize)

{
  uint32 unaff_R13D;
  int unaff_R15D;
  
  *memorySize = unaff_R15D + 1;
  return unaff_R13D;
}



uint64 FUN_180898d4d(void)

{
  return 0x1f;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint64 FUN_180898d60(longlong *resourceHandle,int memorySize)

{
  int localInt1;
  longlong localLong2;
  data2 *puVar3;
  longlong lVar4;
  data2 *puVar5;
  
  if (memorySize < (int)resourceHandle[1]) {
    return 0x1c;
  }
  puVar3 = (data2 *)0x0;
  if (memorySize != 0) {
    if (memorySize * 3 - 1U < 0x3fffffff) {
      puVar3 = (data2 *)
               utilityAccessSystemResource(*(uint64 *)(utilitySystemDataTable + 0x1a0),memorySize * 3,&utilityMemoryDataBuffer,0xf4
                             ,0,0,1);
      if (puVar3 != (data2 *)0x0) {
        localInt1 = (int)resourceHandle[1];
        lVar4 = (longlong)localInt1;
        if ((localInt1 != 0) && (localLong2 = *resourceHandle, 0 < localInt1)) {
          puVar5 = puVar3;
          do {
            *puVar5 = *(data2 *)((localLong2 - (longlong)puVar3) + (longlong)puVar5);
            *(byte *)(puVar5 + 1) =
                 *(byte *)((localLong2 - (longlong)puVar3) + 2 + (longlong)puVar5);
            puVar5 = (data2 *)((longlong)puVar5 + 3);
            lVar4 = lVar4 + -1;
          } while (lVar4 != 0);
        }
        goto LAB_180898e0b;
      }
    }
    return 0x26;
  }
LAB_180898e0b:
  if ((0 < *(int *)((longlong)resourceHandle + 0xc)) && (*resourceHandle != 0)) {
                    // WARNING: Subroutine does not return
    utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),*resourceHandle,&utilityMemoryDataBuffer,0x100,1);
  }
  *resourceHandle = (longlong)puVar3;
  *(int *)((longlong)resourceHandle + 0xc) = memorySize;
  return 0;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint64 FUN_180898d84(uint64 resourceHandle,int memorySize)

{
  int localInt1;
  longlong localLong2;
  data2 *puVar3;
  longlong lVar4;
  data2 *puVar5;
  longlong *baseRegister;
  int unaff_EDI;
  
  puVar3 = (data2 *)0x0;
  if (unaff_EDI == 0) {
LAB_180898e0b:
    if ((0 < *(int *)((longlong)baseRegister + 0xc)) && (*baseRegister != 0)) {
                    // WARNING: Subroutine does not return
      utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),*baseRegister,&utilityMemoryDataBuffer,0x100,1);
    }
    *baseRegister = (longlong)puVar3;
    *(int *)((longlong)baseRegister + 0xc) = unaff_EDI;
    return 0;
  }
  if (memorySize * 3 - 1U < 0x3fffffff) {
    puVar3 = (data2 *)
             utilityAccessSystemResource(*(uint64 *)(utilitySystemDataTable + 0x1a0),memorySize * 3,&utilityMemoryDataBuffer,0xf4,0
                          );
    if (puVar3 != (data2 *)0x0) {
      localInt1 = (int)baseRegister[1];
      lVar4 = (longlong)localInt1;
      if ((localInt1 != 0) && (localLong2 = *baseRegister, 0 < localInt1)) {
        puVar5 = puVar3;
        do {
          *puVar5 = *(data2 *)((localLong2 - (longlong)puVar3) + (longlong)puVar5);
          *(byte *)(puVar5 + 1) =
               *(byte *)((localLong2 - (longlong)puVar3) + 2 + (longlong)puVar5);
          puVar5 = (data2 *)((longlong)puVar5 + 3);
          lVar4 = lVar4 + -1;
        } while (lVar4 != 0);
      }
      goto LAB_180898e0b;
    }
  }
  return 0x26;
}



uint64 FUN_180898e56(void)

{
  return 0x26;
}



uint64 FUN_180898e70(longlong *resourceHandle,uint32 *memorySize)

{
  uint64 localUInt1;
  uint32 auStackX_8 [8];
  
  if (*(int *)(resourceHandle[1] + 0x18) != 0) {
    return 0x1c;
  }
  auStackX_8[0] = *memorySize;
  localUInt1 = (**(code **)**(uint64 **)(*resourceHandle + 8))(*(uint64 **)(*resourceHandle + 8),auStackX_8,4);
  return localUInt1;
}



uint64 FUN_180898eb0(longlong *resourceHandle,uint32 *memorySize)

{
  uint64 localUInt1;
  uint32 auStackX_8 [8];
  
  if (*(int *)(resourceHandle[1] + 0x18) != 0) {
    return 0x1c;
  }
  auStackX_8[0] = *memorySize;
  localUInt1 = (**(code **)**(uint64 **)(*resourceHandle + 8))(*(uint64 **)(*resourceHandle + 8),auStackX_8,4);
  return localUInt1;
}



uint64 FUN_180898ef0(uint64 *resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  uint64 localUInt2;
  
  if (*(int *)(resourceHandle[1] + 0x18) != 0) {
    return 0x1c;
  }
  localUInt1 = *resourceHandle;
  localUInt2 = FUN_1808995c0(localUInt1);
  if ((int)localUInt2 == 0) {
    localUInt2 = FUN_1808995c0(localUInt1,memorySize + 4);
  }
  return localUInt2;
}



uint64 FUN_180898f40(longlong *resourceHandle,uint32 *memorySize)

{
  longlong localLong1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  uint32 auStackX_8 [2];
  uint32 auStackX_18 [4];
  
  if (*(int *)(resourceHandle[1] + 0x18) != 0) {
    return 0x1c;
  }
  auStackX_8[0] = *memorySize;
  localLong1 = *resourceHandle;
  plocalUInt2 = *(uint64 **)(localLong1 + 8);
  uVar3 = (**(code **)*plocalUInt2)(plocalUInt2,auStackX_8,4);
  if ((int)uVar3 == 0) {
    plocalUInt2 = *(uint64 **)(localLong1 + 8);
    auStackX_18[0] = memorySize[1];
    uVar3 = (**(code **)*plocalUInt2)(plocalUInt2,auStackX_18,4);
  }
  return uVar3;
}




// 函数: void FUN_180898fc0(uint64 resourceHandle,longlong memorySize)
void FUN_180898fc0(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = FUN_1808aed00(resourceHandle,memorySize,4);
  if (localInt1 == 0) {
    localInt1 = FUN_1808aed00(resourceHandle,memorySize + 4,2);
    if (localInt1 == 0) {
      localInt1 = FUN_1808aed00(resourceHandle,memorySize + 6,2);
      if (localInt1 == 0) {
        localInt1 = FUN_1808aed00(resourceHandle,memorySize + 8,8);
        if (localInt1 == 0) {
          FUN_1808aed00(resourceHandle,memorySize + 0x10,4);
        }
      }
    }
  }
  return;
}




// 函数: void FUN_180899040(uint64 resourceHandle,longlong memorySize)
void FUN_180899040(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = FUN_180899100();
  if (localInt1 == 0) {
    localInt1 = FUN_180899100(resourceHandle,memorySize + 0xc);
    if (localInt1 == 0) {
      localInt1 = FUN_180899100(resourceHandle,memorySize + 0x18);
      if (localInt1 == 0) {
        FUN_180899100(resourceHandle,memorySize + 0x24);
      }
    }
  }
  return;
}




// 函数: void FUN_180899090(uint64 resourceHandle,longlong memorySize)
void FUN_180899090(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = FUN_1808aed00(resourceHandle,memorySize,4);
  if (localInt1 == 0) {
    localInt1 = FUN_1808aed00(resourceHandle,memorySize + 4,2);
    if (localInt1 == 0) {
      localInt1 = FUN_1808aed00(resourceHandle,memorySize + 6,2);
      if (localInt1 == 0) {
        FUN_1808aed00(resourceHandle,memorySize + 8,8);
      }
    }
  }
  return;
}




// 函数: void FUN_180899100(longlong resourceHandle,uint32 *memorySize)
void FUN_180899100(longlong resourceHandle,uint32 *memorySize)

{
  int localInt1;
  uint32 auStackX_8 [2];
  uint32 auStackX_10 [2];
  uint32 auStackX_18 [2];
  
  auStackX_8[0] = *memorySize;
  localInt1 = (**(code **)**(uint64 **)(resourceHandle + 8))(*(uint64 **)(resourceHandle + 8),auStackX_8,4);
  if (localInt1 == 0) {
    auStackX_10[0] = memorySize[1];
    localInt1 = (**(code **)**(uint64 **)(resourceHandle + 8))(*(uint64 **)(resourceHandle + 8),auStackX_10,4)
    ;
    if (localInt1 == 0) {
      auStackX_18[0] = memorySize[2];
      (**(code **)**(uint64 **)(resourceHandle + 8))(*(uint64 **)(resourceHandle + 8),auStackX_18,4);
    }
  }
  return;
}



uint64 FUN_180899180(uint64 *resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  uint64 localUInt2;
  
  if (*(int *)(resourceHandle[1] + 0x18) != 0) {
    return 0x1c;
  }
  localUInt1 = *resourceHandle;
  localUInt2 = FUN_1808aed00(localUInt1,memorySize,4);
  if ((int)localUInt2 == 0) {
    localUInt2 = FUN_1808aed00(localUInt1,memorySize + 4,2);
    if ((int)localUInt2 == 0) {
      localUInt2 = FUN_1808aed00(localUInt1,memorySize + 6,2);
      if ((int)localUInt2 == 0) {
        localUInt2 = FUN_1808aed00(localUInt1,memorySize + 8,8);
        if ((int)localUInt2 == 0) {
          localUInt2 = FUN_1808995c0(localUInt1,memorySize + 0x10);
          if ((int)localUInt2 == 0) {
            localUInt2 = FUN_1808995c0(localUInt1,memorySize + 0x14);
          }
        }
      }
    }
  }
  return localUInt2;
}



uint64 FUN_180899220(longlong *resourceHandle,uint *memorySize)

{
  uint64 localUInt1;
  uint auStackX_8 [2];
  uint auStackX_18 [4];
  
  if (*(int *)(resourceHandle[1] + 0x18) != 0) {
    return 0x1c;
  }
  resourceHandle = (longlong *)*resourceHandle;
  if (*resourceHandle == 0) {
    localUInt1 = 0x1c;
  }
  else {
    if (resourceHandle[2] != 0) {
      auStackX_8[0] = 0;
      localUInt1 = func_0x00018076a7d0(*resourceHandle,auStackX_8);
      if ((int)localUInt1 != 0) {
        return localUInt1;
      }
      if ((ulonglong)resourceHandle[2] < (ulonglong)auStackX_8[0] + 4) {
        localUInt1 = 0x11;
        goto LAB_1808992a5;
      }
    }
    localUInt1 = FUN_180769ed0(*resourceHandle,auStackX_18,1,4,0);
  }
LAB_1808992a5:
  if ((int)localUInt1 == 0) {
    *memorySize = auStackX_18[0];
    if (2 < auStackX_18[0]) {
      return 0xd;
    }
    localUInt1 = FUN_1808aed00(resourceHandle,memorySize + 1,4);
  }
  return localUInt1;
}



uint64 FUN_18089923e(longlong *resourceHandle)

{
  uint64 localUInt1;
  uint *unaff_RDI;
  uint in_stack_00000040;
  uint in_stack_00000050;
  
  resourceHandle = (longlong *)*resourceHandle;
  if (*resourceHandle == 0) {
    localUInt1 = 0x1c;
  }
  else {
    if (resourceHandle[2] != 0) {
      in_stack_00000040 = 0;
      localUInt1 = func_0x00018076a7d0(*resourceHandle,&stackLocalBuffer);
      if ((int)localUInt1 != 0) {
        return localUInt1;
      }
      if ((ulonglong)resourceHandle[2] < (ulonglong)in_stack_00000040 + 4) {
        localUInt1 = 0x11;
        goto LAB_1808992a5;
      }
    }
    localUInt1 = FUN_180769ed0(*resourceHandle,&stack0x00000050,1,4,0);
  }
LAB_1808992a5:
  if ((int)localUInt1 == 0) {
    *unaff_RDI = in_stack_00000050;
    if (2 < in_stack_00000050) {
      return 0xd;
    }
    localUInt1 = FUN_1808aed00(resourceHandle,unaff_RDI + 1,4);
  }
  return localUInt1;
}




// 函数: void FUN_1808992c4(void)
void FUN_1808992c4(void)

{
  FUN_1808aed00();
  return;
}



uint64 FUN_1808992f0(longlong *resourceHandle,uint32 *memorySize)

{
  longlong localLong1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  uint32 auStackX_8 [2];
  uint32 auStackX_18 [4];
  
  if (*(int *)(resourceHandle[1] + 0x18) != 0) {
    return 0x1c;
  }
  auStackX_8[0] = *memorySize;
  localLong1 = *resourceHandle;
  plocalUInt2 = *(uint64 **)(localLong1 + 8);
  uVar3 = (**(code **)*plocalUInt2)(plocalUInt2,auStackX_8,4);
  if ((int)uVar3 == 0) {
    auStackX_18[0] = memorySize[1];
    plocalUInt2 = *(uint64 **)(localLong1 + 8);
    uVar3 = (**(code **)*plocalUInt2)(plocalUInt2,auStackX_18,4);
  }
  return uVar3;
}



uint64 FUN_180899360(uint64 *resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  uint64 localUInt2;
  
  if (*(int *)(resourceHandle[1] + 0x18) != 0) {
    return 0x1c;
  }
  localUInt1 = *resourceHandle;
  localUInt2 = FUN_1808aed00(localUInt1,memorySize,4);
  if ((int)localUInt2 == 0) {
    localUInt2 = FUN_1808aed00(localUInt1,memorySize + 4,2);
    if ((int)localUInt2 == 0) {
      localUInt2 = FUN_1808aed00(localUInt1,memorySize + 6,2);
      if ((int)localUInt2 == 0) {
        localUInt2 = FUN_1808aed00(localUInt1,memorySize + 8,8);
      }
    }
  }
  return localUInt2;
}



uint64 FUN_1808993e0(uint64 *resourceHandle,longlong *memorySize)

{
  uint64 localUInt1;
  longlong localLong2;
  uint *puVar3;
  int aiStackX_8 [2];
  uint auStackX_10 [2];
  
  aiStackX_8[0] = *(int *)(resourceHandle + 1);
  if (*memorySize == 0) {
    localUInt1 = 0x1c;
  }
  else {
    if (memorySize[2] != 0) {
      auStackX_10[0] = 0;
      localUInt1 = func_0x00018076a7d0(*memorySize,auStackX_10);
      if ((int)localUInt1 != 0) {
        return localUInt1;
      }
      if ((ulonglong)memorySize[2] < (ulonglong)auStackX_10[0] + 4) {
        localUInt1 = 0x11;
        goto LAB_180899456;
      }
    }
    localUInt1 = FUN_180769ed0(*memorySize,aiStackX_8,1,4,0);
  }
LAB_180899456:
  if ((int)localUInt1 == 0) {
    FUN_1808b0fb0(resourceHandle,aiStackX_8[0]);
    puVar3 = (uint *)*resourceHandle;
    while (0 < aiStackX_8[0]) {
      localUInt1 = FUN_1808aed00(memorySize,puVar3,4);
      if ((int)localUInt1 != 0) {
        return localUInt1;
      }
      switch(*puVar3 & 0xff) {
      case 0:
      case 1:
      case 2:
      case 3:
      case 0x12:
      case 0x30:
        localLong2 = 4;
        aiStackX_8[0] = aiStackX_8[0] + -4;
        break;
      default:
        goto LAB_180899546;
      case 0x10:
        localUInt1 = FUN_1808995c0(memorySize,puVar3 + 1);
        if ((int)localUInt1 != 0) {
          return localUInt1;
        }
        localLong2 = 8;
        aiStackX_8[0] = aiStackX_8[0] + -8;
        break;
      case 0x11:
        localUInt1 = FUN_180899090(memorySize,puVar3 + 1);
        if ((int)localUInt1 != 0) {
          return localUInt1;
        }
        localLong2 = 0x14;
        aiStackX_8[0] = aiStackX_8[0] + -0x14;
        break;
      case 0x20:
        localUInt1 = FUN_1808995c0(memorySize,puVar3 + 1);
        if ((int)localUInt1 != 0) {
          return localUInt1;
        }
        localUInt1 = FUN_1808995c0(memorySize,puVar3 + 2);
        if ((int)localUInt1 != 0) {
          return localUInt1;
        }
        localLong2 = 0xc;
        aiStackX_8[0] = aiStackX_8[0] + -0xc;
      }
      puVar3 = (uint *)((longlong)puVar3 + localLong2);
    }
    if (aiStackX_8[0] != 0) {
LAB_180899546:
      return 0x1c;
    }
    localUInt1 = 0;
  }
  return localUInt1;
}




// 函数: void FUN_1808995c0(longlong *resourceHandle,uint32 *memorySize)
void FUN_1808995c0(longlong *resourceHandle,uint32 *memorySize)

{
  int localInt1;
  uint auStackX_8 [2];
  uint32 auStackX_18 [4];
  
  if (*resourceHandle == 0) {
    localInt1 = 0x1c;
  }
  else {
    if (resourceHandle[2] != 0) {
      auStackX_8[0] = 0;
      localInt1 = func_0x00018076a7d0(*resourceHandle,auStackX_8);
      if (localInt1 != 0) {
        return;
      }
      if ((ulonglong)resourceHandle[2] < (ulonglong)auStackX_8[0] + 4) {
        localInt1 = 0x11;
        goto LAB_18089962f;
      }
    }
    localInt1 = FUN_180769ed0(*resourceHandle,auStackX_18,1,4,0);
  }
LAB_18089962f:
  if (localInt1 == 0) {
    *memorySize = auStackX_18[0];
  }
  return;
}



uint64 FUN_180899650(longlong *resourceHandle,longlong *memorySize)

{
  uint64 localUInt1;
  int localInt2;
  int aiStackX_8 [2];
  uint auStackX_10 [2];
  
  localInt2 = 0;
  aiStackX_8[0] = 0;
  if (*resourceHandle == 0) {
    localUInt1 = 0x1c;
  }
  else {
    if (resourceHandle[2] != 0) {
      auStackX_10[0] = 0;
      localUInt1 = func_0x00018076a7d0(*resourceHandle,auStackX_10);
      if ((int)localUInt1 != 0) {
        return localUInt1;
      }
      if ((ulonglong)resourceHandle[2] < (ulonglong)auStackX_10[0] + 4) {
        localUInt1 = 0x11;
        goto LAB_1808996c5;
      }
    }
    localUInt1 = FUN_180769ed0(*resourceHandle,aiStackX_8,1,4,0);
  }
LAB_1808996c5:
  if ((int)localUInt1 == 0) {
    if (aiStackX_8[0] < 0) {
      return 0xd;
    }
    localUInt1 = FUN_1808af2e0(memorySize,aiStackX_8[0]);
    if ((int)localUInt1 == 0) {
      if (0 < aiStackX_8[0]) {
        do {
          localUInt1 = FUN_180898fc0(resourceHandle,*memorySize + (longlong)localInt2 * 0x14);
          if ((int)localUInt1 != 0) {
            return localUInt1;
          }
          localInt2 = localInt2 + 1;
        } while (localInt2 < aiStackX_8[0]);
      }
      localUInt1 = 0;
    }
  }
  return localUInt1;
}



uint64 FUN_180899740(uint64 resourceHandle,uint32 *memorySize)

{
  uint64 localUInt1;
  
  localUInt1 = FUN_1808aed00(resourceHandle,memorySize,4);
  if (((int)localUInt1 == 0) && (localUInt1 = FUN_1808aed00(resourceHandle,memorySize + 1,4), (int)localUInt1 == 0x11)) {
    memorySize[1] = *memorySize;
    return 0;
  }
  return localUInt1;
}



uint64 FUN_180899763(void)

{
  uint64 localUInt1;
  uint32 *baseRegister;
  
  localUInt1 = FUN_1808aed00();
  if ((int)localUInt1 != 0x11) {
    return localUInt1;
  }
  baseRegister[1] = *baseRegister;
  return 0;
}




// 函数: void FUN_180899790(void)
void FUN_180899790(void)

{
  return;
}




// 函数: void FUN_180899799(void)
void FUN_180899799(void)

{
  return;
}




// 函数: void FUN_1808997b0(uint64 resourceHandle,longlong memorySize)
void FUN_1808997b0(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = FUN_1808aed00(resourceHandle,memorySize,4);
  if (localInt1 == 0) {
    FUN_1808aed00(resourceHandle,memorySize + 4,4);
  }
  return;
}



uint64 FUN_1808997f0(uint64 resourceHandle,longlong *memorySize)

{
  int localInt1;
  uint64 localUInt2;
  uint uVar3;
  longlong lVar4;
  int iVar5;
  int aiStackX_18 [2];
  
  aiStackX_18[0] = 0;
  localUInt2 = FUN_1808afe30(resourceHandle,aiStackX_18);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  lVar4 = (longlong)aiStackX_18[0];
  if (aiStackX_18[0] == 0) {
    FUN_180840270(memorySize);
  }
  else {
    iVar5 = aiStackX_18[0] + 1;
    uVar3 = (int)*(uint *)((longlong)memorySize + 0xc) >> 0x1f;
    if (((int)((*(uint *)((longlong)memorySize + 0xc) ^ uVar3) - uVar3) < iVar5) &&
       (localUInt2 = FUN_180849030(memorySize,iVar5), (int)localUInt2 != 0)) {
      return localUInt2;
    }
    localInt1 = (int)memorySize[1];
    if (localInt1 < iVar5) {
                    // WARNING: Subroutine does not return
      memset((longlong)localInt1 + *memorySize,0,(longlong)(iVar5 - localInt1));
    }
    *(int *)(memorySize + 1) = iVar5;
    localUInt2 = FUN_1808aed00(resourceHandle,*memorySize,lVar4);
    if ((int)localUInt2 != 0) {
      return localUInt2;
    }
    *(byte *)(lVar4 + *memorySize) = 0;
  }
  return 0;
}



uint64 FUN_180899816(void)

{
  int localInt1;
  uint64 localUInt2;
  uint uVar3;
  longlong *baseRegister;
  int localInt4;
  int in_stack_00000040;
  
  if (in_stack_00000040 == 0) {
    FUN_180840270();
  }
  else {
    localInt4 = in_stack_00000040 + 1;
    uVar3 = (int)*(uint *)((longlong)baseRegister + 0xc) >> 0x1f;
    if (((int)((*(uint *)((longlong)baseRegister + 0xc) ^ uVar3) - uVar3) < localInt4) &&
       (localUInt2 = FUN_180849030(), (int)localUInt2 != 0)) {
      return localUInt2;
    }
    localInt1 = (int)baseRegister[1];
    if (localInt1 < localInt4) {
                    // WARNING: Subroutine does not return
      memset((longlong)localInt1 + *baseRegister,0,(longlong)(localInt4 - localInt1));
    }
    *(int *)(baseRegister + 1) = localInt4;
    localUInt2 = FUN_1808aed00();
    if ((int)localUInt2 != 0) {
      return localUInt2;
    }
    *(byte *)((longlong)in_stack_00000040 + *baseRegister) = 0;
  }
  return 0;
}




// 函数: void FUN_180899891(void)
void FUN_180899891(void)

{
  return;
}



uint64 FUN_1808998a0(longlong resourceHandle,longlong *memorySize)

{
  int localInt1;
  longlong localLong2;
  uint64 uVar3;
  longlong lVar4;
  longlong lVar5;
  int aiStackX_8 [2];
  
  localInt1 = (int)memorySize[1];
  aiStackX_8[0] = localInt1;
  uVar3 = (**(code **)**(uint64 **)(resourceHandle + 8))(*(uint64 **)(resourceHandle + 8),aiStackX_8,4);
  if ((int)uVar3 == 0) {
    if (0 < localInt1) {
      lVar4 = 0;
      lVar5 = lVar4;
      do {
        localLong2 = *memorySize;
        uVar3 = FUN_180899ef0(resourceHandle,localLong2 + lVar5);
        if ((int)uVar3 != 0) {
          return uVar3;
        }
        aiStackX_8[0] = *(int *)(localLong2 + lVar5 + 0x10);
        uVar3 = (**(code **)**(uint64 **)(resourceHandle + 8))
                          (*(uint64 **)(resourceHandle + 8),aiStackX_8,4);
        if ((int)uVar3 != 0) {
          return uVar3;
        }
        lVar4 = lVar4 + 1;
        lVar5 = lVar5 + 0x14;
      } while (lVar4 < localInt1);
    }
    uVar3 = 0;
  }
  return uVar3;
}




// 函数: void FUN_180899950(longlong resourceHandle,uint32 *memorySize)
void FUN_180899950(longlong resourceHandle,uint32 *memorySize)

{
  int localInt1;
  int localInt2;
  uint uVar3;
  ulonglong uVar4;
  longlong lVar5;
  ulonglong uVar6;
  uint32 uVar7;
  ulonglong uVar8;
  uint64 uStackX_8;
  
  uStackX_8 = CONCAT44(uStackX_8._4_4_,*memorySize);
  localInt1 = (**(code **)**(uint64 **)(resourceHandle + 8))(*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
  if (localInt1 == 0) {
    uStackX_8 = *(uint64 *)(memorySize + 2);
    localInt1 = (**(code **)**(uint64 **)(resourceHandle + 8))(*(uint64 **)(resourceHandle + 8),&uStackX_8,8);
    if ((localInt1 == 0) && (localInt1 = FUN_1808ac750(resourceHandle,memorySize + 4), localInt1 == 0)) {
      localInt1 = memorySize[10];
      uStackX_8 = CONCAT44(uStackX_8._4_4_,localInt1);
      localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                        (*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
      uVar6 = 0;
      if (localInt2 == 0) {
        uVar4 = uVar6;
        if (0 < localInt1) {
          do {
            localInt2 = FUN_180899c60(resourceHandle,(longlong)(int)uVar4 * 0x6c + *(longlong *)(memorySize + 8));
            if (localInt2 != 0) {
              return;
            }
            uVar3 = (int)uVar4 + 1;
            uVar4 = (ulonglong)uVar3;
          } while ((int)uVar3 < localInt1);
        }
        localInt1 = memorySize[0xe];
        uStackX_8 = CONCAT44(uStackX_8._4_4_,localInt1);
        localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                          (*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
        if (localInt2 == 0) {
          uVar4 = uVar6;
          if (0 < localInt1) {
            do {
              localInt2 = FUN_180899ef0(resourceHandle,(longlong)(int)uVar4 * 0x10 +
                                            *(longlong *)(memorySize + 0xc));
              if (localInt2 != 0) {
                return;
              }
              uVar3 = (int)uVar4 + 1;
              uVar4 = (ulonglong)uVar3;
            } while ((int)uVar3 < localInt1);
          }
          localInt1 = memorySize[0x12];
          uStackX_8 = CONCAT44(uStackX_8._4_4_,localInt1);
          localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                            (*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
          if (localInt2 == 0) {
            uVar4 = uVar6;
            if (0 < localInt1) {
              do {
                uStackX_8 = CONCAT44(uStackX_8._4_4_,
                                     *(uint32 *)(*(longlong *)(memorySize + 0x10) + uVar4 * 4));
                localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                                  (*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
                if (localInt2 != 0) {
                  return;
                }
                uVar4 = uVar4 + 1;
              } while ((longlong)uVar4 < (longlong)localInt1);
            }
            localInt1 = memorySize[0x16];
            uStackX_8 = CONCAT44(uStackX_8._4_4_,localInt1);
            localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                              (*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
            if (localInt2 == 0) {
              uVar4 = uVar6;
              uVar8 = uVar6;
              if (0 < localInt1) {
                do {
                  lVar5 = *(longlong *)(memorySize + 0x14) + uVar4;
                  localInt2 = FUN_180899ef0(resourceHandle,lVar5);
                  if (localInt2 != 0) {
                    return;
                  }
                  uVar3 = *(uint *)(lVar5 + 0x10);
                  if (uVar3 < 0x8000) {
                    uStackX_8 = CONCAT62(uStackX_8._2_6_,(short)uVar3);
                    uVar7 = 2;
                  }
                  else {
                    uVar7 = 4;
                    uStackX_8 = CONCAT44(uStackX_8._4_4_,
                                         (uVar3 & 0xffffc000 | 0x4000) * 2 | uVar3 & 0x7fff);
                  }
                  localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                                    (*(uint64 **)(resourceHandle + 8),&uStackX_8,uVar7);
                  if (localInt2 != 0) {
                    return;
                  }
                  localInt2 = FUN_1808affb0(resourceHandle,lVar5 + 0x14);
                  if (localInt2 != 0) {
                    return;
                  }
                  uVar8 = uVar8 + 1;
                  uVar4 = uVar4 + 0x18;
                } while ((longlong)uVar8 < (longlong)localInt1);
              }
              localInt1 = FUN_1808aca30(resourceHandle,memorySize + 0x18);
              if (localInt1 == 0) {
                localInt1 = memorySize[0x1e];
                uStackX_8 = CONCAT44(uStackX_8._4_4_,localInt1);
                localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                                  (*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
                if (localInt2 == 0) {
                  if (0 < localInt1) {
                    do {
                      lVar5 = *(longlong *)(memorySize + 0x1c);
                      uStackX_8._0_4_ = *(uint32 *)(lVar5 + uVar6 * 8);
                      localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                                        (*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
                      if (localInt2 != 0) {
                        return;
                      }
                      uStackX_8 = CONCAT44(uStackX_8._4_4_,*(uint32 *)(lVar5 + 4 + uVar6 * 8));
                      localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                                        (*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
                      if (localInt2 != 0) {
                        return;
                      }
                      uVar6 = uVar6 + 1;
                    } while ((longlong)uVar6 < (longlong)localInt1);
                  }
                  uStackX_8 = CONCAT44(uStackX_8._4_4_,memorySize[0x20]);
                  (**(code **)**(uint64 **)(resourceHandle + 8))
                            (*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
                }
              }
            }
          }
        }
      }
    }
  }
  return;
}




// 函数: void FUN_1808999c1(uint64 *resourceHandle,uint64 memorySize)
void FUN_1808999c1(uint64 *resourceHandle,uint64 memorySize)

{
  uint64 *plocalUInt1;
  int localInt2;
  int localInt3;
  longlong baseRegister;
  longlong unaff_RBP;
  uint uVar4;
  ulonglong uVar5;
  longlong lVar6;
  ulonglong uVar7;
  longlong unaff_R14;
  ulonglong uVar8;
  uint32 extraout_XMM0_Da;
  uint32 extraout_XMM0_Da_00;
  uint32 extraout_XMM0_Da_01;
  uint32 extraout_XMM0_Da_02;
  uint32 extraout_XMM0_Da_03;
  uint32 extraout_XMM0_Da_04;
  uint32 extraout_XMM0_Da_05;
  uint32 uVar9;
  
  localInt3 = *(int *)(unaff_R14 + 0x28);
  *(int *)(unaff_RBP + 0x20) = localInt3;
  localInt2 = (**(code **)*resourceHandle)(resourceHandle,memorySize,4);
  uVar7 = 0;
  if (localInt2 == 0) {
    uVar5 = uVar7;
    uVar9 = extraout_XMM0_Da;
    if (0 < localInt3) {
      do {
        localInt2 = FUN_180899c60(uVar9,(longlong)(int)uVar5 * 0x6c + *(longlong *)(unaff_R14 + 0x20));
        if (localInt2 != 0) {
          return;
        }
        uVar4 = (int)uVar5 + 1;
        uVar5 = (ulonglong)uVar4;
        uVar9 = extraout_XMM0_Da_00;
      } while ((int)uVar4 < localInt3);
    }
    plocalUInt1 = *(uint64 **)(baseRegister + 8);
    localInt3 = *(int *)(unaff_R14 + 0x38);
    *(int *)(unaff_RBP + 0x20) = localInt3;
    localInt2 = (**(code **)*plocalUInt1)(plocalUInt1,unaff_RBP + 0x20,4);
    if (localInt2 == 0) {
      uVar5 = uVar7;
      uVar9 = extraout_XMM0_Da_01;
      if (0 < localInt3) {
        do {
          localInt2 = FUN_180899ef0(uVar9,(longlong)(int)uVar5 * 0x10 + *(longlong *)(unaff_R14 + 0x30))
          ;
          if (localInt2 != 0) {
            return;
          }
          uVar4 = (int)uVar5 + 1;
          uVar5 = (ulonglong)uVar4;
          uVar9 = extraout_XMM0_Da_02;
        } while ((int)uVar4 < localInt3);
      }
      plocalUInt1 = *(uint64 **)(baseRegister + 8);
      localInt3 = *(int *)(unaff_R14 + 0x48);
      *(int *)(unaff_RBP + 0x20) = localInt3;
      localInt2 = (**(code **)*plocalUInt1)(plocalUInt1,unaff_RBP + 0x20,4);
      if (localInt2 == 0) {
        uVar5 = uVar7;
        if (0 < localInt3) {
          do {
            plocalUInt1 = *(uint64 **)(baseRegister + 8);
            *(uint32 *)(unaff_RBP + 0x20) =
                 *(uint32 *)(*(longlong *)(unaff_R14 + 0x40) + uVar5 * 4);
            localInt2 = (**(code **)*plocalUInt1)(plocalUInt1,unaff_RBP + 0x20,4);
            if (localInt2 != 0) {
              return;
            }
            uVar5 = uVar5 + 1;
          } while ((longlong)uVar5 < (longlong)localInt3);
        }
        plocalUInt1 = *(uint64 **)(baseRegister + 8);
        localInt3 = *(int *)(unaff_R14 + 0x58);
        *(int *)(unaff_RBP + 0x20) = localInt3;
        localInt2 = (**(code **)*plocalUInt1)(plocalUInt1,unaff_RBP + 0x20,4);
        if (localInt2 == 0) {
          uVar5 = uVar7;
          uVar8 = uVar7;
          uVar9 = extraout_XMM0_Da_03;
          if (0 < localInt3) {
            do {
              lVar6 = *(longlong *)(unaff_R14 + 0x50) + uVar5;
              localInt2 = FUN_180899ef0(uVar9,lVar6);
              if (localInt2 != 0) {
                return;
              }
              uVar4 = *(uint *)(lVar6 + 0x10);
              plocalUInt1 = *(uint64 **)(baseRegister + 8);
              if (uVar4 < 0x8000) {
                *(short *)(unaff_RBP + 0x20) = (short)uVar4;
                uVar9 = 2;
              }
              else {
                uVar9 = 4;
                *(uint *)(unaff_RBP + 0x20) = (uVar4 & 0xffffc000 | 0x4000) * 2 | uVar4 & 0x7fff;
              }
              localInt2 = (**(code **)*plocalUInt1)(plocalUInt1,unaff_RBP + 0x20,uVar9);
              if (localInt2 != 0) {
                return;
              }
              localInt2 = FUN_1808affb0(extraout_XMM0_Da_04,lVar6 + 0x14);
              if (localInt2 != 0) {
                return;
              }
              uVar8 = uVar8 + 1;
              uVar5 = uVar5 + 0x18;
              uVar9 = extraout_XMM0_Da_05;
            } while ((longlong)uVar8 < (longlong)localInt3);
          }
          localInt3 = FUN_1808aca30(uVar9,unaff_R14 + 0x60);
          if (localInt3 == 0) {
            plocalUInt1 = *(uint64 **)(baseRegister + 8);
            localInt3 = *(int *)(unaff_R14 + 0x78);
            *(int *)(unaff_RBP + 0x20) = localInt3;
            localInt2 = (**(code **)*plocalUInt1)(plocalUInt1,unaff_RBP + 0x20,4);
            if (localInt2 == 0) {
              if (0 < localInt3) {
                do {
                  lVar6 = *(longlong *)(unaff_R14 + 0x70);
                  plocalUInt1 = *(uint64 **)(baseRegister + 8);
                  *(uint32 *)(unaff_RBP + 0x20) = *(uint32 *)(lVar6 + uVar7 * 8);
                  localInt2 = (**(code **)*plocalUInt1)(plocalUInt1,unaff_RBP + 0x20,4);
                  if (localInt2 != 0) {
                    return;
                  }
                  plocalUInt1 = *(uint64 **)(baseRegister + 8);
                  *(uint32 *)(unaff_RBP + 0x20) = *(uint32 *)(lVar6 + 4 + uVar7 * 8);
                  localInt2 = (**(code **)*plocalUInt1)(plocalUInt1,unaff_RBP + 0x20,4);
                  if (localInt2 != 0) {
                    return;
                  }
                  uVar7 = uVar7 + 1;
                } while ((longlong)uVar7 < (longlong)localInt3);
              }
              plocalUInt1 = *(uint64 **)(baseRegister + 8);
              *(uint32 *)(unaff_RBP + 0x20) = *(uint32 *)(unaff_R14 + 0x80);
              (**(code **)*plocalUInt1)(plocalUInt1,unaff_RBP + 0x20,4);
            }
          }
        }
      }
    }
  }
  return;
}




// 函数: void FUN_180899ae6(uint64 *resourceHandle)
void FUN_180899ae6(uint64 *resourceHandle)

{
  uint localUInt1;
  uint64 *plocalUInt2;
  int localInt3;
  int localInt4;
  longlong baseRegister;
  longlong unaff_RBP;
  longlong unaff_RSI;
  longlong lVar5;
  longlong unaff_RDI;
  longlong lVar6;
  longlong unaff_R14;
  longlong lVar7;
  uint32 extraout_XMM0_Da;
  uint32 extraout_XMM0_Da_00;
  uint32 extraout_XMM0_Da_01;
  uint32 uVar8;
  
  localInt3 = (**(code **)*resourceHandle)();
  if (localInt3 == 0) {
    lVar6 = unaff_RDI;
    lVar7 = unaff_RDI;
    uVar8 = extraout_XMM0_Da;
    if (0 < (int)unaff_RSI) {
      do {
        lVar5 = *(longlong *)(unaff_R14 + 0x50) + lVar6;
        localInt3 = FUN_180899ef0(uVar8,lVar5);
        if (localInt3 != 0) {
          return;
        }
        localUInt1 = *(uint *)(lVar5 + 0x10);
        plocalUInt2 = *(uint64 **)(baseRegister + 8);
        if (localUInt1 < 0x8000) {
          *(short *)(unaff_RBP + 0x20) = (short)localUInt1;
          uVar8 = 2;
        }
        else {
          uVar8 = 4;
          *(uint *)(unaff_RBP + 0x20) = (localUInt1 & 0xffffc000 | 0x4000) * 2 | localUInt1 & 0x7fff;
        }
        localInt3 = (**(code **)*plocalUInt2)(plocalUInt2,unaff_RBP + 0x20,uVar8);
        if (localInt3 != 0) {
          return;
        }
        localInt3 = FUN_1808affb0(extraout_XMM0_Da_00,lVar5 + 0x14);
        if (localInt3 != 0) {
          return;
        }
        lVar7 = lVar7 + 1;
        lVar6 = lVar6 + 0x18;
        uVar8 = extraout_XMM0_Da_01;
      } while (lVar7 < unaff_RSI);
    }
    localInt3 = FUN_1808aca30(uVar8,unaff_R14 + 0x60);
    if (localInt3 == 0) {
      plocalUInt2 = *(uint64 **)(baseRegister + 8);
      localInt3 = *(int *)(unaff_R14 + 0x78);
      *(int *)(unaff_RBP + 0x20) = localInt3;
      localInt4 = (**(code **)*plocalUInt2)(plocalUInt2,unaff_RBP + 0x20,4);
      if (localInt4 == 0) {
        if (0 < localInt3) {
          do {
            lVar6 = *(longlong *)(unaff_R14 + 0x70);
            plocalUInt2 = *(uint64 **)(baseRegister + 8);
            *(uint32 *)(unaff_RBP + 0x20) = *(uint32 *)(lVar6 + unaff_RDI * 8);
            localInt4 = (**(code **)*plocalUInt2)(plocalUInt2,unaff_RBP + 0x20,4);
            if (localInt4 != 0) {
              return;
            }
            plocalUInt2 = *(uint64 **)(baseRegister + 8);
            *(uint32 *)(unaff_RBP + 0x20) = *(uint32 *)(lVar6 + 4 + unaff_RDI * 8);
            localInt4 = (**(code **)*plocalUInt2)(plocalUInt2,unaff_RBP + 0x20,4);
            if (localInt4 != 0) {
              return;
            }
            unaff_RDI = unaff_RDI + 1;
          } while (unaff_RDI < localInt3);
        }
        plocalUInt2 = *(uint64 **)(baseRegister + 8);
        *(uint32 *)(unaff_RBP + 0x20) = *(uint32 *)(unaff_R14 + 0x80);
        (**(code **)*plocalUInt2)(plocalUInt2,unaff_RBP + 0x20,4);
      }
    }
  }
  return;
}




// 函数: void FUN_180899c45(void)
void FUN_180899c45(void)

{
  return;
}




// 函数: void FUN_180899c54(void)
void FUN_180899c54(void)

{
  return;
}




// 函数: void FUN_180899c60(longlong resourceHandle,uint32 *memorySize)
void FUN_180899c60(longlong resourceHandle,uint32 *memorySize)

{
  int localInt1;
  uint32 auStackX_8 [2];
  
  auStackX_8[0] = *memorySize;
  localInt1 = (**(code **)**(uint64 **)(resourceHandle + 8))(*(uint64 **)(resourceHandle + 8),auStackX_8,4);
  if (((((localInt1 == 0) && (localInt1 = FUN_1808affb0(resourceHandle,memorySize + 1), localInt1 == 0)) &&
       (((*(byte *)(memorySize + 1) & 0x20) == 0 ||
        (localInt1 = FUN_180899040(resourceHandle,memorySize + 2), localInt1 == 0)))) &&
      (((localInt1 = FUN_1808b0010(resourceHandle,memorySize + 0xe), localInt1 == 0 &&
        (localInt1 = FUN_1808b0010(resourceHandle,memorySize + 0xf), localInt1 == 0)) &&
       (localInt1 = FUN_1808b0010(resourceHandle,memorySize + 0x10), localInt1 == 0)))) &&
     (localInt1 = FUN_1808b0010(resourceHandle,memorySize + 0x11), localInt1 == 0)) {
    if ((memorySize[1] & 0x100) != 0) {
      auStackX_8[0] = memorySize[0x12];
      localInt1 = (**(code **)**(uint64 **)(resourceHandle + 8))
                        (*(uint64 **)(resourceHandle + 8),auStackX_8,4);
      if (localInt1 != 0) {
        return;
      }
      localInt1 = FUN_180899ef0(resourceHandle,memorySize + 0x13);
      if (localInt1 != 0) {
        return;
      }
    }
    if (((memorySize[1] & 0x800) == 0) ||
       ((localInt1 = FUN_1808b0010(resourceHandle,memorySize + 0x18), localInt1 == 0 &&
        (localInt1 = FUN_1808b0010(resourceHandle,memorySize + 0x17), localInt1 == 0)))) {
      FUN_18089a750(resourceHandle,memorySize + 0x19);
    }
  }
  return;
}




// 函数: void FUN_180899c96(void)
void FUN_180899c96(void)

{
  int localInt1;
  longlong baseRegister;
  longlong unaff_RDI;
  uint32 stackParameter1;
  
  localInt1 = FUN_1808affb0();
  if (localInt1 == 0) {
    if (((*(byte *)(baseRegister + 4) & 0x20) != 0) && (localInt1 = FUN_180899040(), localInt1 != 0)) {
      return;
    }
    localInt1 = FUN_1808b0010();
    if ((((localInt1 == 0) && (localInt1 = FUN_1808b0010(), localInt1 == 0)) &&
        (localInt1 = FUN_1808b0010(), localInt1 == 0)) && (localInt1 = FUN_1808b0010(), localInt1 == 0)) {
      if ((*(uint *)(baseRegister + 4) & 0x100) != 0) {
        stackParameter1 = *(uint32 *)(baseRegister + 0x48);
        localInt1 = (**(code **)**(uint64 **)(unaff_RDI + 8))
                          (*(uint64 **)(unaff_RDI + 8),&stack0x00000030,4);
        if (localInt1 != 0) {
          return;
        }
        localInt1 = FUN_180899ef0();
        if (localInt1 != 0) {
          return;
        }
      }
      if ((*(uint *)(baseRegister + 4) & 0x800) != 0) {
        localInt1 = FUN_1808b0010();
        if (localInt1 != 0) {
          return;
        }
        localInt1 = FUN_1808b0010();
        if (localInt1 != 0) {
          return;
        }
      }
      FUN_18089a750();
    }
  }
  return;
}




// 函数: void FUN_180899d7f(void)
void FUN_180899d7f(void)

{
  return;
}



uint64 FUN_180899d90(longlong resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  float *pfVar2;
  int localInt3;
  float fVar4;
  data2 auStackX_8 [4];
  
  auStackX_8[0] = CONCAT11(auStackX_8[0]._1_1_,*(byte *)(memorySize + 0x104));
  localUInt1 = (**(code **)**(uint64 **)(resourceHandle + 8))(*(uint64 **)(resourceHandle + 8),auStackX_8,1);
  if ((int)localUInt1 == 0) {
    localInt3 = 0;
    if (0 < *(short *)(memorySize + 0x104)) {
      pfVar2 = (float *)(memorySize + 0x84);
      do {
        fVar4 = pfVar2[-0x20] * 0.25;
        if (0.0 <= fVar4) {
          if (1.0 <= fVar4) {
            fVar4 = 1.0;
          }
        }
        else {
          fVar4 = 0.0;
        }
        auStackX_8[0] = (data2)(int)(fVar4 * 65535.0);
        localUInt1 = (**(code **)**(uint64 **)(resourceHandle + 8))
                          (*(uint64 **)(resourceHandle + 8),auStackX_8,2);
        if ((int)localUInt1 != 0) {
          return localUInt1;
        }
        fVar4 = *pfVar2 * 0.25;
        if (0.0 <= fVar4) {
          if (1.0 <= fVar4) {
            fVar4 = 1.0;
          }
        }
        else {
          fVar4 = 0.0;
        }
        auStackX_8[0] = (data2)(int)(fVar4 * 65535.0);
        localUInt1 = (**(code **)**(uint64 **)(resourceHandle + 8))
                          (*(uint64 **)(resourceHandle + 8),auStackX_8,2);
        if ((int)localUInt1 != 0) {
          return localUInt1;
        }
        localInt3 = localInt3 + 1;
        pfVar2 = pfVar2 + 1;
      } while (localInt3 < *(short *)(memorySize + 0x104));
    }
    localUInt1 = 0;
  }
  return localUInt1;
}



uint64 FUN_180899dc7(void)

{
  uint64 localUInt1;
  float *pfVar2;
  longlong unaff_RBP;
  longlong unaff_RSI;
  int localInt3;
  float fVar4;
  data2 uStack0000000000000070;
  
  localInt3 = 0;
  if (0 < *(short *)(unaff_RSI + 0x104)) {
    pfVar2 = (float *)(unaff_RSI + 0x84);
    do {
      fVar4 = pfVar2[-0x20] * 0.25;
      if (0.0 <= fVar4) {
        if (1.0 <= fVar4) {
          fVar4 = 1.0;
        }
      }
      else {
        fVar4 = 0.0;
      }
      uStack0000000000000070 = (data2)(int)(fVar4 * 65535.0);
      localUInt1 = (**(code **)**(uint64 **)(unaff_RBP + 8))
                        (*(uint64 **)(unaff_RBP + 8),&stack0x00000070,2);
      if ((int)localUInt1 != 0) {
        return localUInt1;
      }
      fVar4 = *pfVar2 * 0.25;
      if (0.0 <= fVar4) {
        if (1.0 <= fVar4) {
          fVar4 = 1.0;
        }
      }
      else {
        fVar4 = 0.0;
      }
      uStack0000000000000070 = (data2)(int)(fVar4 * 65535.0);
      localUInt1 = (**(code **)**(uint64 **)(unaff_RBP + 8))
                        (*(uint64 **)(unaff_RBP + 8),&stack0x00000070,2);
      if ((int)localUInt1 != 0) {
        return localUInt1;
      }
      localInt3 = localInt3 + 1;
      pfVar2 = pfVar2 + 1;
    } while (localInt3 < *(short *)(unaff_RSI + 0x104));
  }
  return 0;
}




// 函数: void FUN_180899ed5(void)
void FUN_180899ed5(void)

{
  return;
}




// 函数: void FUN_180899ef0(longlong resourceHandle,uint32 *memorySize)
void FUN_180899ef0(longlong resourceHandle,uint32 *memorySize)

{
  int localInt1;
  uint32 auStackX_8 [2];
  
  auStackX_8[0] = *memorySize;
  localInt1 = (**(code **)**(uint64 **)(resourceHandle + 8))(*(uint64 **)(resourceHandle + 8),auStackX_8,4);
  if (localInt1 == 0) {
    auStackX_8[0]._0_2_ = *(data2 *)(memorySize + 1);
    localInt1 = (**(code **)**(uint64 **)(resourceHandle + 8))(*(uint64 **)(resourceHandle + 8),auStackX_8,2);
    if (localInt1 == 0) {
      auStackX_8[0] = CONCAT22(auStackX_8[0]._2_2_,*(data2 *)((longlong)memorySize + 6));
      localInt1 = (**(code **)**(uint64 **)(resourceHandle + 8))
                        (*(uint64 **)(resourceHandle + 8),auStackX_8,2);
      if (localInt1 == 0) {
        (**(code **)**(uint64 **)(resourceHandle + 8))(*(uint64 **)(resourceHandle + 8),memorySize + 2,8);
      }
    }
  }
  return;
}




// 函数: void FUN_180899f80(longlong resourceHandle,uint32 *memorySize)
void FUN_180899f80(longlong resourceHandle,uint32 *memorySize)

{
  int localInt1;
  uint32 auStackX_8 [2];
  
  auStackX_8[0] = *memorySize;
  localInt1 = (**(code **)**(uint64 **)(resourceHandle + 8))(*(uint64 **)(resourceHandle + 8),auStackX_8,4);
  if (localInt1 == 0) {
    auStackX_8[0] = memorySize[1];
    (**(code **)**(uint64 **)(resourceHandle + 8))(*(uint64 **)(resourceHandle + 8),auStackX_8,4);
  }
  return;
}




// 函数: void FUN_180899fe0(longlong resourceHandle,uint32 *memorySize)
void FUN_180899fe0(longlong resourceHandle,uint32 *memorySize)

{
  uint localUInt1;
  int localInt2;
  int localInt3;
  uint64 uVar4;
  uint64 uStackX_8;
  
  uStackX_8 = CONCAT44(uStackX_8._4_4_,*memorySize);
  localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))(*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
  if (localInt2 == 0) {
    uStackX_8 = *(uint64 *)(memorySize + 2);
    localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))(*(uint64 **)(resourceHandle + 8),&uStackX_8,8);
    if (localInt2 == 0) {
      uStackX_8 = CONCAT71(uStackX_8._1_7_,*(byte *)(memorySize + 0x68));
      localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                        (*(uint64 **)(resourceHandle + 8),&uStackX_8,1);
      if (localInt2 == 0) {
        localInt2 = 0;
        if (0 < (int)memorySize[0x68]) {
          do {
            localInt3 = FUN_180899100(resourceHandle,memorySize + (longlong)localInt2 * 0xc + 4);
            if (localInt3 != 0) {
              return;
            }
            localInt3 = FUN_180899100(resourceHandle,memorySize + (longlong)localInt2 * 0xc + 7);
            if (localInt3 != 0) {
              return;
            }
            localInt3 = FUN_180899100(resourceHandle,memorySize + (longlong)localInt2 * 0xc + 10);
            if (localInt3 != 0) {
              return;
            }
            localInt3 = FUN_180899100(resourceHandle,memorySize + (longlong)localInt2 * 0xc + 0xd);
            if (localInt3 != 0) {
              return;
            }
            localInt2 = localInt2 + 1;
          } while (localInt2 < (int)memorySize[0x68]);
        }
        localUInt1 = memorySize[100];
        if (localUInt1 < 0x8000) {
          uStackX_8 = CONCAT62(uStackX_8._2_6_,(short)localUInt1);
          uVar4 = 2;
        }
        else {
          uVar4 = 4;
          uStackX_8 = CONCAT44(uStackX_8._4_4_,(localUInt1 & 0xffffc000 | 0x4000) * 2 | localUInt1 & 0x7fff);
        }
        localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                          (*(uint64 **)(resourceHandle + 8),&uStackX_8,uVar4);
        if (localInt2 == 0) {
          uStackX_8._0_4_ = memorySize[0x65];
          localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                            (*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
          if (((localInt2 == 0) && (localInt2 = FUN_1808aff40(resourceHandle,memorySize + 0x66), localInt2 == 0)) &&
             (localInt2 = FUN_1808aff40(resourceHandle,memorySize + 0x67), localInt2 == 0)) {
            uStackX_8._0_4_ = memorySize[0x69];
            localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                              (*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
            if (localInt2 == 0) {
              uStackX_8._0_4_ = memorySize[0x6a];
              localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                                (*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
              if (localInt2 == 0) {
                uStackX_8._0_4_ = memorySize[0x6b];
                localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                                  (*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
                if (localInt2 == 0) {
                  uStackX_8._0_4_ = memorySize[0x6d];
                  localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                                    (*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
                  if (localInt2 == 0) {
                    uStackX_8._0_4_ = memorySize[0x6e];
                    localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                                      (*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
                    if (localInt2 == 0) {
                      uStackX_8._0_4_ = memorySize[0x6c];
                      localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                                        (*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
                      if (localInt2 == 0) {
                        uStackX_8 = CONCAT44(uStackX_8._4_4_,memorySize[0x6f]);
                        localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                                          (*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
                        if (localInt2 == 0) {
                          uStackX_8 = *(uint64 *)(memorySize + 0x70);
                          localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                                            (*(uint64 **)(resourceHandle + 8),&uStackX_8,8);
                          if (localInt2 == 0) {
                            uStackX_8 = *(uint64 *)(memorySize + 0x72);
                            localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                                              (*(uint64 **)(resourceHandle + 8),&uStackX_8,8);
                            if (localInt2 == 0) {
                              uStackX_8 = *(uint64 *)(memorySize + 0x74);
                              localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                                                (*(uint64 **)(resourceHandle + 8),&uStackX_8,8);
                              if (localInt2 == 0) {
                                uStackX_8._0_4_ = memorySize[0x77];
                                localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                                                  (*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
                                if (localInt2 == 0) {
                                  uStackX_8._0_4_ = memorySize[0x76];
                                  localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                                                    (*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
                                  if (localInt2 == 0) {
                                    uStackX_8 = CONCAT44(uStackX_8._4_4_,memorySize[0x78]);
                                    (**(code **)**(uint64 **)(resourceHandle + 8))
                                              (*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return;
}




// 函数: void FUN_18089a059(uint32 resourceHandle)
void FUN_18089a059(uint32 resourceHandle)

{
  uint localUInt1;
  uint64 *plocalUInt2;
  int localInt3;
  longlong baseRegister;
  longlong unaff_RBP;
  longlong lVar4;
  longlong unaff_RDI;
  uint64 uVar5;
  int iVar6;
  uint32 extraout_XMM0_Da;
  uint32 extraout_XMM0_Da_00;
  uint32 extraout_XMM0_Da_01;
  uint32 extraout_XMM0_Da_02;
  uint32 extraout_XMM0_Da_03;
  uint32 extraout_XMM0_Da_04;
  
  iVar6 = 0;
  if (0 < *(int *)(unaff_RDI + 0x1a0)) {
    do {
      lVar4 = (longlong)iVar6 * 0x30 + unaff_RDI;
      localInt3 = FUN_180899100(resourceHandle,lVar4 + 0x10);
      if (localInt3 != 0) {
        return;
      }
      localInt3 = FUN_180899100(extraout_XMM0_Da,lVar4 + 0x1c);
      if (localInt3 != 0) {
        return;
      }
      localInt3 = FUN_180899100(extraout_XMM0_Da_00,lVar4 + 0x28);
      if (localInt3 != 0) {
        return;
      }
      localInt3 = FUN_180899100(extraout_XMM0_Da_01,lVar4 + 0x34);
      if (localInt3 != 0) {
        return;
      }
      iVar6 = iVar6 + 1;
      resourceHandle = extraout_XMM0_Da_02;
    } while (iVar6 < *(int *)(unaff_RDI + 0x1a0));
  }
  localUInt1 = *(uint *)(unaff_RDI + 400);
  plocalUInt2 = *(uint64 **)(baseRegister + 8);
  if (localUInt1 < 0x8000) {
    *(short *)(unaff_RBP + 0x20) = (short)localUInt1;
    uVar5 = 2;
  }
  else {
    uVar5 = 4;
    *(uint *)(unaff_RBP + 0x20) = (localUInt1 & 0xffffc000 | 0x4000) * 2 | localUInt1 & 0x7fff;
  }
  iVar6 = (**(code **)*plocalUInt2)(plocalUInt2,unaff_RBP + 0x20,uVar5);
  if (iVar6 == 0) {
    plocalUInt2 = *(uint64 **)(baseRegister + 8);
    *(uint32 *)(unaff_RBP + 0x20) = *(uint32 *)(unaff_RDI + 0x194);
    iVar6 = (**(code **)*plocalUInt2)(plocalUInt2,unaff_RBP + 0x20,4);
    if (((iVar6 == 0) && (iVar6 = FUN_1808aff40(extraout_XMM0_Da_03,unaff_RDI + 0x198), iVar6 == 0))
       && (iVar6 = FUN_1808aff40(extraout_XMM0_Da_04,unaff_RDI + 0x19c), iVar6 == 0)) {
      plocalUInt2 = *(uint64 **)(baseRegister + 8);
      *(uint32 *)(unaff_RBP + 0x20) = *(uint32 *)(unaff_RDI + 0x1a4);
      iVar6 = (**(code **)*plocalUInt2)(plocalUInt2,unaff_RBP + 0x20,4);
      if (iVar6 == 0) {
        plocalUInt2 = *(uint64 **)(baseRegister + 8);
        *(uint32 *)(unaff_RBP + 0x20) = *(uint32 *)(unaff_RDI + 0x1a8);
        iVar6 = (**(code **)*plocalUInt2)(plocalUInt2,unaff_RBP + 0x20,4);
        if (iVar6 == 0) {
          plocalUInt2 = *(uint64 **)(baseRegister + 8);
          *(uint32 *)(unaff_RBP + 0x20) = *(uint32 *)(unaff_RDI + 0x1ac);
          iVar6 = (**(code **)*plocalUInt2)(plocalUInt2,unaff_RBP + 0x20,4);
          if (iVar6 == 0) {
            plocalUInt2 = *(uint64 **)(baseRegister + 8);
            *(uint32 *)(unaff_RBP + 0x20) = *(uint32 *)(unaff_RDI + 0x1b4);
            iVar6 = (**(code **)*plocalUInt2)(plocalUInt2,unaff_RBP + 0x20,4);
            if (iVar6 == 0) {
              plocalUInt2 = *(uint64 **)(baseRegister + 8);
              *(uint32 *)(unaff_RBP + 0x20) = *(uint32 *)(unaff_RDI + 0x1b8);
              iVar6 = (**(code **)*plocalUInt2)(plocalUInt2,unaff_RBP + 0x20,4);
              if (iVar6 == 0) {
                plocalUInt2 = *(uint64 **)(baseRegister + 8);
                *(uint32 *)(unaff_RBP + 0x20) = *(uint32 *)(unaff_RDI + 0x1b0);
                iVar6 = (**(code **)*plocalUInt2)(plocalUInt2,unaff_RBP + 0x20,4);
                if (iVar6 == 0) {
                  plocalUInt2 = *(uint64 **)(baseRegister + 8);
                  *(uint32 *)(unaff_RBP + 0x20) = *(uint32 *)(unaff_RDI + 0x1bc);
                  iVar6 = (**(code **)*plocalUInt2)(plocalUInt2,unaff_RBP + 0x20,4);
                  if (iVar6 == 0) {
                    plocalUInt2 = *(uint64 **)(baseRegister + 8);
                    *(uint64 *)(unaff_RBP + 0x20) = *(uint64 *)(unaff_RDI + 0x1c0);
                    iVar6 = (**(code **)*plocalUInt2)(plocalUInt2,unaff_RBP + 0x20,8);
                    if (iVar6 == 0) {
                      plocalUInt2 = *(uint64 **)(baseRegister + 8);
                      *(uint64 *)(unaff_RBP + 0x20) = *(uint64 *)(unaff_RDI + 0x1c8);
                      iVar6 = (**(code **)*plocalUInt2)(plocalUInt2,unaff_RBP + 0x20,8);
                      if (iVar6 == 0) {
                        plocalUInt2 = *(uint64 **)(baseRegister + 8);
                        *(uint64 *)(unaff_RBP + 0x20) = *(uint64 *)(unaff_RDI + 0x1d0);
                        iVar6 = (**(code **)*plocalUInt2)(plocalUInt2,unaff_RBP + 0x20,8);
                        if (iVar6 == 0) {
                          plocalUInt2 = *(uint64 **)(baseRegister + 8);
                          *(uint32 *)(unaff_RBP + 0x20) = *(uint32 *)(unaff_RDI + 0x1dc);
                          iVar6 = (**(code **)*plocalUInt2)(plocalUInt2,unaff_RBP + 0x20,4);
                          if (iVar6 == 0) {
                            plocalUInt2 = *(uint64 **)(baseRegister + 8);
                            *(uint32 *)(unaff_RBP + 0x20) = *(uint32 *)(unaff_RDI + 0x1d8);
                            iVar6 = (**(code **)*plocalUInt2)(plocalUInt2,unaff_RBP + 0x20,4);
                            if (iVar6 == 0) {
                              plocalUInt2 = *(uint64 **)(baseRegister + 8);
                              *(uint32 *)(unaff_RBP + 0x20) = *(uint32 *)(unaff_RDI + 0x1e0)
                              ;
                              (**(code **)*plocalUInt2)(plocalUInt2,unaff_RBP + 0x20,4);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return;
}




// 函数: void FUN_18089a365(void)
void FUN_18089a365(void)

{
  return;
}



uint64 FUN_18089a370(longlong resourceHandle,longlong memorySize)

{
  short sVar1;
  int localInt2;
  ushort uVar3;
  uint64 uVar4;
  ushort uVar5;
  longlong lVar6;
  longlong lVar7;
  longlong lVar8;
  int alocalInt [4];
  
  lVar7 = 0;
  uVar5 = (ushort)(*(int *)(memorySize + 0x28) != 0);
  if ((*(int *)(memorySize + 0x2c) != 0) || (*(int *)(memorySize + 0x30) != 0)) {
    uVar5 = uVar5 | 2;
  }
  uVar3 = uVar5 | 4;
  if (*(short *)(memorySize + 0x14c) == 0) {
    uVar3 = uVar5;
  }
  uVar5 = uVar3 | 8;
  if (*(short *)(memorySize + 0x254) == 0) {
    uVar5 = uVar3;
  }
  uVar3 = uVar5 | 0x10;
  if (*(int *)(memorySize + 0x260) == 0) {
    uVar3 = uVar5;
  }
  uVar5 = uVar3 | 0x20;
  if (*(int *)(memorySize + 0x270) == 0) {
    uVar5 = uVar3;
  }
  if ((*(int *)(memorySize + 0x34) != 0) || (*(int *)(memorySize + 0x38) != 0)) {
    uVar5 = uVar5 | 0x40;
  }
  if ((*(longlong *)(memorySize + 0x10) != 0) || (*(longlong *)(memorySize + 0x18) != 0)) {
    uVar5 = uVar5 | 0x80;
  }
  if (((*(int *)(memorySize + 0x3c) != 0) || (*(int *)(memorySize + 0x40) != 0)) ||
     (*(int *)(memorySize + 0x44) != 0)) {
    uVar5 = uVar5 | 0x100;
  }
  uVar4 = FUN_180899ef0(resourceHandle);
  if ((int)uVar4 == 0) {
    alocalInt[0] = *(int *)(memorySize + 0x20);
    uVar4 = (**(code **)**(uint64 **)(resourceHandle + 8))(*(uint64 **)(resourceHandle + 8),alocalInt,4);
    if ((int)uVar4 == 0) {
      alocalInt[0] = CONCAT22(alocalInt[0]._2_2_,uVar5);
      uVar4 = (**(code **)**(uint64 **)(resourceHandle + 8))
                        (*(uint64 **)(resourceHandle + 8),alocalInt,2);
      if (((int)uVar4 == 0) && (uVar4 = FUN_1808b00b0(resourceHandle,memorySize + 0x24), (int)uVar4 == 0)) {
        if ((uVar5 & 1) != 0) {
          alocalInt[0] = *(int *)(memorySize + 0x28);
          uVar4 = (**(code **)**(uint64 **)(resourceHandle + 8))
                            (*(uint64 **)(resourceHandle + 8),alocalInt,4);
          if ((int)uVar4 != 0) {
            return uVar4;
          }
        }
        if (((((uVar5 & 2) == 0) ||
             ((uVar4 = FUN_1808aff40(resourceHandle,memorySize + 0x2c), (int)uVar4 == 0 &&
              (uVar4 = FUN_1808aff40(resourceHandle,memorySize + 0x30), (int)uVar4 == 0)))) &&
            (((uVar5 & 4) == 0 || (uVar4 = FUN_180899d90(resourceHandle,memorySize + 0x48), (int)uVar4 == 0)))
            ) && (((uVar5 & 8) == 0 ||
                  (uVar4 = FUN_180899d90(resourceHandle,memorySize + 0x150), (int)uVar4 == 0)))) {
          if ((uVar5 & 0x10) != 0) {
            localInt2 = *(int *)(memorySize + 0x260);
            alocalInt[0] = localInt2;
            uVar4 = (**(code **)**(uint64 **)(resourceHandle + 8))
                              (*(uint64 **)(resourceHandle + 8),alocalInt,4);
            if ((int)uVar4 != 0) {
              return uVar4;
            }
            lVar8 = lVar7;
            if (0 < localInt2) {
              do {
                lVar6 = *(longlong *)(memorySize + 600) + lVar7;
                sVar1 = *(short *)(lVar6 + 0x114);
                uVar4 = FUN_180899ef0(resourceHandle,lVar6);
                if ((int)uVar4 != 0) {
                  return uVar4;
                }
                alocalInt[0] = CONCAT31(alocalInt[0]._1_3_,sVar1 != 0);
                uVar4 = (**(code **)**(uint64 **)(resourceHandle + 8))
                                  (*(uint64 **)(resourceHandle + 8),alocalInt,1);
                if ((int)uVar4 != 0) {
                  return uVar4;
                }
                if ((sVar1 != 0) && (uVar4 = FUN_180899d90(resourceHandle,lVar6 + 0x10), (int)uVar4 != 0))
                {
                  return uVar4;
                }
                lVar8 = lVar8 + 1;
                lVar7 = lVar7 + 0x118;
              } while (lVar8 < localInt2);
            }
          }
          if ((((((uVar5 & 0x20) == 0) ||
                (uVar4 = FUN_1808ac8a0(resourceHandle,memorySize + 0x268), (int)uVar4 == 0)) &&
               (((uVar5 & 0x40) == 0 ||
                ((uVar4 = FUN_1808affb0(resourceHandle,memorySize + 0x34), (int)uVar4 == 0 &&
                 (uVar4 = FUN_1808affb0(resourceHandle,memorySize + 0x38), (int)uVar4 == 0)))))) &&
              ((-1 < (char)uVar5 || (uVar4 = FUN_180899ef0(resourceHandle,memorySize + 0x10), (int)uVar4 == 0)
               ))) && (((uVar5 & 0x100) == 0 ||
                       (((uVar4 = FUN_1808aff40(resourceHandle,memorySize + 0x3c), (int)uVar4 == 0 &&
                         (uVar4 = FUN_1808aff40(resourceHandle,memorySize + 0x40), (int)uVar4 == 0)) &&
                        (uVar4 = FUN_1808aff40(resourceHandle,memorySize + 0x44), (int)uVar4 == 0)))))) {
            uVar4 = 0;
          }
        }
      }
    }
  }
  return uVar4;
}



uint64 FUN_18089a51d(void)

{
  short sVar1;
  int localInt2;
  uint64 uVar3;
  longlong baseRegister;
  ulonglong unaff_RSI;
  longlong unaff_RDI;
  uint64 in_R9;
  longlong unaff_R14;
  longlong lVar4;
  
  if ((unaff_RSI & 0x10) != 0) {
    localInt2 = *(int *)(unaff_RDI + 0x260);
    uVar3 = (**(code **)**(uint64 **)(baseRegister + 8))
                      (*(uint64 **)(baseRegister + 8),&stack0x00000020,4,in_R9,localInt2);
    if ((int)uVar3 != 0) {
      return uVar3;
    }
    lVar4 = unaff_R14;
    if (0 < localInt2) {
      do {
        sVar1 = *(short *)(*(longlong *)(unaff_RDI + 600) + unaff_R14 + 0x114);
        uVar3 = FUN_180899ef0();
        if ((int)uVar3 != 0) {
          return uVar3;
        }
        uVar3 = (**(code **)**(uint64 **)(baseRegister + 8))
                          (*(uint64 **)(baseRegister + 8),&stack0x00000020,1,in_R9,sVar1 != 0);
        if ((int)uVar3 != 0) {
          return uVar3;
        }
        if ((sVar1 != 0) && (uVar3 = FUN_180899d90(), (int)uVar3 != 0)) {
          return uVar3;
        }
        lVar4 = lVar4 + 1;
        unaff_R14 = unaff_R14 + 0x118;
      } while (lVar4 < localInt2);
    }
  }
  if ((((((unaff_RSI & 0x20) == 0) || (uVar3 = FUN_1808ac8a0(), (int)uVar3 == 0)) &&
       (((unaff_RSI & 0x40) == 0 ||
        ((uVar3 = FUN_1808affb0(), (int)uVar3 == 0 && (uVar3 = FUN_1808affb0(), (int)uVar3 == 0)))))
       ) && ((-1 < (char)unaff_RSI || (uVar3 = FUN_180899ef0(), (int)uVar3 == 0)))) &&
     (((unaff_RSI & 0x100) == 0 ||
      (((uVar3 = FUN_1808aff40(), (int)uVar3 == 0 && (uVar3 = FUN_1808aff40(), (int)uVar3 == 0)) &&
       (uVar3 = FUN_1808aff40(), (int)uVar3 == 0)))))) {
    uVar3 = 0;
  }
  return uVar3;
}




// 函数: void FUN_18089a685(void)
void FUN_18089a685(void)

{
  return;
}



uint64 FUN_18089a690(longlong resourceHandle,uint32 *memorySize)

{
  int localInt1;
  uint64 localUInt2;
  int localInt3;
  uint64 uStackX_8;
  
  uStackX_8 = CONCAT44(uStackX_8._4_4_,*memorySize);
  localUInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))(*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
  if ((int)localUInt2 == 0) {
    uStackX_8 = *(uint64 *)(memorySize + 2);
    localUInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))(*(uint64 **)(resourceHandle + 8),&uStackX_8,8);
    if ((int)localUInt2 == 0) {
      localInt1 = memorySize[6];
      uStackX_8 = CONCAT44(uStackX_8._4_4_,localInt1);
      localUInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                        (*(uint64 **)(resourceHandle + 8),&uStackX_8,4);
      if ((int)localUInt2 == 0) {
        localInt3 = 0;
        if (0 < localInt1) {
          do {
            localUInt2 = FUN_18089a370(resourceHandle,(longlong)localInt3 * 0x278 + *(longlong *)(memorySize + 4));
            if ((int)localUInt2 != 0) {
              return localUInt2;
            }
            localInt3 = localInt3 + 1;
          } while (localInt3 < localInt1);
        }
        localUInt2 = 0;
      }
    }
  }
  return localUInt2;
}



uint64 FUN_18089a6e8(uint64 *resourceHandle,uint64 memorySize)

{
  int localInt1;
  uint64 localUInt2;
  int localInt3;
  longlong unaff_RSI;
  int iStack0000000000000030;
  
  localInt1 = *(int *)(unaff_RSI + 0x18);
  iStack0000000000000030 = localInt1;
  localUInt2 = (**(code **)*resourceHandle)(resourceHandle,memorySize,4);
  if ((int)localUInt2 == 0) {
    localInt3 = 0;
    if (0 < localInt1) {
      do {
        localUInt2 = FUN_18089a370();
        if ((int)localUInt2 != 0) {
          return localUInt2;
        }
        localInt3 = localInt3 + 1;
      } while (localInt3 < localInt1);
    }
    localUInt2 = 0;
  }
  return localUInt2;
}




// 函数: void FUN_18089a73c(void)
void FUN_18089a73c(void)

{
  return;
}




// 函数: void FUN_18089a750(longlong resourceHandle,uint *memorySize)
void FUN_18089a750(longlong resourceHandle,uint *memorySize)

{
  uint localUInt1;
  int localInt2;
  uint64 uVar3;
  uint32 uStackX_10;
  
  localUInt1 = *memorySize;
  if (localUInt1 + 0x4000 < 0x8000) {
    uStackX_10 = CONCAT22(uStackX_10._2_2_,(short)localUInt1) & 0xffff7fff;
    uVar3 = 2;
  }
  else {
    uStackX_10 = (localUInt1 & 0xffffc000 | 0x4000) * 2 | localUInt1 & 0x7fff;
    uVar3 = 4;
  }
  localInt2 = (**(code **)**(uint64 **)(resourceHandle + 8))
                    (*(uint64 **)(resourceHandle + 8),&uStackX_10,uVar3);
  if (localInt2 == 0) {
    FUN_1808aff40(resourceHandle,memorySize + 1);
  }
  return;
}



uint64 FUN_18089a7e0(longlong resourceHandle,uint64 *memorySize)

{
  uint64 localUInt1;
  uint localUInt2;
  uint auStackX_10 [2];
  
  localUInt2 = *(int *)(memorySize + 1) - 1;
  if (*(int *)(memorySize + 1) < 1) {
    localUInt2 = 0;
  }
  if (localUInt2 < 0x8000) {
    auStackX_10[0] = CONCAT22(auStackX_10[0]._2_2_,(short)localUInt2);
    localUInt1 = 2;
  }
  else {
    localUInt1 = 4;
    auStackX_10[0] = (localUInt2 & 0xffffc000 | 0x4000) * 2 | localUInt2 & 0x7fff;
  }
  localUInt1 = (**(code **)**(uint64 **)(resourceHandle + 8))
                    (*(uint64 **)(resourceHandle + 8),auStackX_10,localUInt1);
  if ((int)localUInt1 == 0) {
    if ((localUInt2 != 0) &&
       (localUInt1 = (**(code **)**(uint64 **)(resourceHandle + 8))
                          (*(uint64 **)(resourceHandle + 8),*memorySize,(longlong)(int)localUInt2),
       (int)localUInt1 != 0)) {
      return localUInt1;
    }
    localUInt1 = 0;
  }
  return localUInt1;
}



ulonglong FUN_18089a880(longlong resourceHandle,uint64 *memorySize)

{
  ulonglong localUInt1;
  longlong localLong2;
  int localInt3;
  int localInt4;
  uint *puVar5;
  int aiStackX_8 [2];
  uint auStackX_10 [2];
  uint auStackX_18 [2];
  uint auStackX_20 [2];
  uint localBuffer [6];
  
  localInt4 = *(int *)(memorySize + 1);
  aiStackX_8[0] = localInt4;
  localUInt1 = (**(code **)**(uint64 **)(resourceHandle + 8))(*(uint64 **)(resourceHandle + 8),aiStackX_8,4);
  if ((int)localUInt1 == 0) {
    puVar5 = (uint *)*memorySize;
    for (; 0 < localInt4; localInt4 = localInt4 + localInt3) {
      auStackX_10[0] = *puVar5;
      localUInt1 = (**(code **)**(uint64 **)(resourceHandle + 8))
                        (*(uint64 **)(resourceHandle + 8),auStackX_10,4);
      if ((int)localUInt1 != 0) {
        return localUInt1;
      }
      switch(*puVar5 & 0xff) {
      case 0:
      case 1:
      case 2:
      case 3:
      case 0x12:
      case 0x30:
        localLong2 = 4;
        localInt3 = -4;
        break;
      default:
        return 0x1c;
      case 0x10:
        auStackX_18[0] = puVar5[1];
        localUInt1 = (**(code **)**(uint64 **)(resourceHandle + 8))
                          (*(uint64 **)(resourceHandle + 8),auStackX_18,4);
        if ((int)localUInt1 != 0) {
          return localUInt1;
        }
        localLong2 = 8;
        localInt3 = -8;
        break;
      case 0x11:
        localUInt1 = FUN_180899ef0(resourceHandle,puVar5 + 1);
        if ((int)localUInt1 != 0) {
          return localUInt1;
        }
        localLong2 = 0x14;
        localInt3 = -0x14;
        break;
      case 0x20:
        auStackX_20[0] = puVar5[1];
        localUInt1 = (**(code **)**(uint64 **)(resourceHandle + 8))
                          (*(uint64 **)(resourceHandle + 8),auStackX_20,4);
        if ((int)localUInt1 != 0) {
          return localUInt1;
        }
        localBuffer[0] = puVar5[2];
        localUInt1 = (**(code **)**(uint64 **)(resourceHandle + 8))
                          (*(uint64 **)(resourceHandle + 8),localBuffer,4);
        if ((int)localUInt1 != 0) {
          return localUInt1;
        }
        localLong2 = 0xc;
        localInt3 = -0xc;
      }
      puVar5 = (uint *)((longlong)puVar5 + localLong2);
    }
    localUInt1 = (ulonglong)(-(uint)(localInt4 != 0) & 0x1c);
  }
  return localUInt1;
}



ulonglong FUN_18089a8b4(void)

{
  ulonglong localUInt1;
  longlong localLong2;
  int localInt3;
  int unaff_EBX;
  longlong unaff_RSI;
  uint *unaff_RDI;
  uint64 in_R9;
  uint32 extraout_XMM0_Da;
  uint uStack0000000000000068;
  uint in_stack_00000070;
  uint in_stack_00000078;
  
  if (0 < unaff_EBX) {
    do {
      uStack0000000000000068 = *unaff_RDI;
      localUInt1 = (**(code **)**(uint64 **)(unaff_RSI + 8))
                        (*(uint64 **)(unaff_RSI + 8),&stack0x00000068,4);
      if ((int)localUInt1 != 0) {
        return localUInt1;
      }
      switch(*unaff_RDI & 0xff) {
      case 0:
      case 1:
      case 2:
      case 3:
      case 0x12:
      case 0x30:
        localLong2 = 4;
        localInt3 = -4;
        break;
      default:
        return 0x1c;
      case 0x10:
        in_stack_00000070 = unaff_RDI[1];
        localUInt1 = (**(code **)**(uint64 **)(unaff_RSI + 8))
                          (*(uint64 **)(unaff_RSI + 8),&stack0x00000070,4);
        if ((int)localUInt1 != 0) {
          return localUInt1;
        }
        localLong2 = 8;
        localInt3 = -8;
        break;
      case 0x11:
        localUInt1 = FUN_180899ef0(extraout_XMM0_Da,unaff_RDI + 1);
        if ((int)localUInt1 != 0) {
          return localUInt1;
        }
        localLong2 = 0x14;
        localInt3 = -0x14;
        break;
      case 0x20:
        in_stack_00000078 = unaff_RDI[1];
        localUInt1 = (**(code **)**(uint64 **)(unaff_RSI + 8))
                          (*(uint64 **)(unaff_RSI + 8),&stack0x00000078,4);
        if ((int)localUInt1 != 0) {
          return localUInt1;
        }
        localUInt1 = (**(code **)**(uint64 **)(unaff_RSI + 8))
                          (*(uint64 **)(unaff_RSI + 8),&stack0x00000020,4,in_R9,unaff_RDI[2]);
        if ((int)localUInt1 != 0) {
          return localUInt1;
        }
        localLong2 = 0xc;
        localInt3 = -0xc;
      }
      unaff_EBX = unaff_EBX + localInt3;
      unaff_RDI = (uint *)((longlong)unaff_RDI + localLong2);
    } while (0 < unaff_EBX);
  }
  return (ulonglong)(-(uint)(unaff_EBX != 0) & 0x1c);
}




// 函数: void FUN_18089a9d5(void)
void FUN_18089a9d5(void)

{
  return;
}



uint64 FUN_18089a9dd(void)

{
  return 0x1c;
}




// 函数: void FUN_18089a9f0(longlong resourceHandle,int *memorySize)
void FUN_18089a9f0(longlong resourceHandle,int *memorySize)

{
  char *pcVar1;
  code *pcVar2;
  char cVar3;
  uint32 in_EAX;
  data3 uVar6;
  int iVar5;
  uint32 in_register_00000004;
  uint unaff_EBP;
  char in_CF;
  int *plocalInt;
  uint32 uVar4;
  
  uVar6 = (data3)((uint)in_EAX >> 8);
  cVar3 = (char)in_EAX + -0x57 + in_CF;
  uVar4 = CONCAT31(uVar6,cVar3);
  *(uint32 *)CONCAT44(in_register_00000004,uVar4) = uVar4;
  *(uint *)(resourceHandle + -0x565dff77) = *(uint *)(resourceHandle + -0x565dff77) & unaff_EBP;
  *(uint32 *)CONCAT44(in_register_00000004,uVar4) = uVar4;
  plocalInt = memorySize;
  *(uint32 *)CONCAT44(in_register_00000004,uVar4) = uVar4;
  *(char *)CONCAT44(in_register_00000004,uVar4) =
       *(char *)CONCAT44(in_register_00000004,uVar4) + cVar3;
  *(char *)CONCAT44(in_register_00000004,uVar4) =
       *(char *)CONCAT44(in_register_00000004,uVar4) + cVar3;
  iVar5 = CONCAT31(uVar6,cVar3 + '\x18');
  *memorySize = *memorySize + iVar5;
  pcVar1 = (char *)((longlong)&plocalInt + CONCAT44(in_register_00000004,iVar5));
  *pcVar1 = *pcVar1 + cVar3 + '\x18';
  pcVar2 = (code *)swi(3);
  (*pcVar2)();
  return;
}



uint64 FUN_18089aa40(longlong resourceHandle,uint64 *memorySize)

{
  uint64 localUInt1;
  
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  localUInt1 = FUN_1808995c0(*memorySize,resourceHandle + 0x50);
  if ((int)localUInt1 == 0) {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    localUInt1 = FUN_1808995c0(*memorySize,resourceHandle + 0x54);
    if ((int)localUInt1 == 0) {
      if (*(int *)(memorySize[1] + 0x18) != 0) {
        return 0x1c;
      }
      localUInt1 = FUN_1808995c0(*memorySize,resourceHandle + 0x58);
      if ((int)localUInt1 == 0) {
        if (*(int *)(memorySize[1] + 0x18) != 0) {
          return 0x1c;
        }
        localUInt1 = FUN_1808995c0(*memorySize,resourceHandle + 0x60);
        if ((int)localUInt1 == 0) {
          if (*(int *)(memorySize[1] + 0x18) != 0) {
            return 0x1c;
          }
          localUInt1 = FUN_1808995c0(*memorySize,resourceHandle + 100);
          if ((int)localUInt1 == 0) {
            if (*(int *)(memorySize[1] + 0x18) != 0) {
              return 0x1c;
            }
            localUInt1 = FUN_1808995c0(*memorySize,resourceHandle + 0x68);
            if ((int)localUInt1 == 0) {
              if (*(int *)(memorySize[1] + 0x18) != 0) {
                return 0x1c;
              }
              localUInt1 = FUN_1808995c0(*memorySize,resourceHandle + 0x6c);
              if ((int)localUInt1 == 0) {
                if (*(int *)(memorySize[1] + 0x18) != 0) {
                  return 0x1c;
                }
                localUInt1 = FUN_1808995c0(*memorySize,resourceHandle + 0x70);
                if ((int)localUInt1 == 0) {
                  if (*(int *)(memorySize[1] + 0x18) != 0) {
                    return 0x1c;
                  }
                  localUInt1 = FUN_1808995c0(*memorySize,resourceHandle + 0x74);
                  if ((int)localUInt1 == 0) {
                    if (*(int *)(memorySize[1] + 0x18) != 0) {
                      return 0x1c;
                    }
                    localUInt1 = FUN_1808995c0(*memorySize,resourceHandle + 0x78);
                    if ((int)localUInt1 == 0) {
                      if (*(uint *)(memorySize + 8) < 0x74) {
                        localUInt1 = 0;
                      }
                      else if (*(int *)(memorySize[1] + 0x18) == 0) {
                        localUInt1 = FUN_1808995c0(*memorySize,resourceHandle + 0x5c);
                      }
                      else {
                        localUInt1 = 0x1c;
                      }
                      if ((int)localUInt1 == 0) {
                        FUN_1808db8c0(resourceHandle);
                        localUInt1 = 0;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return localUInt1;
}



uint64 FUN_18089abe0(longlong resourceHandle,uint64 *memorySize)

{
  uint64 localUInt1;
  byte localBuffer [32];
  byte localBuffer [48];
  
  localUInt1 = FUN_1808ddc20(memorySize,localBuffer,1,0x46464542);
  if (((((int)localUInt1 == 0) &&
       (localUInt1 = FUN_1808ddc20(memorySize,localBuffer,0,0x42464542), (int)localUInt1 == 0)) &&
      (localUInt1 = FUN_180899360(memorySize,resourceHandle + 0x10), (int)localUInt1 == 0)) &&
     ((0x5a < *(uint *)(memorySize + 8) ||
      (localUInt1 = FUN_1808afc70(memorySize,resourceHandle + 0x44), (int)localUInt1 == 0)))) {
    if (*(int *)(memorySize[1] + 0x18) == 0) {
      localUInt1 = FUN_1808a2890(*memorySize,resourceHandle + 0x60,0x25);
      if ((int)localUInt1 == 0) {
        if (*(uint *)(memorySize + 8) < 0x3d) {
          localUInt1 = 0;
        }
        else if (*(int *)(memorySize[1] + 0x18) == 0) {
          localUInt1 = FUN_1808a2e00(*memorySize,resourceHandle + 0x40);
        }
        else {
          localUInt1 = 0x1c;
        }
        if ((int)localUInt1 == 0) {
                    // WARNING: Subroutine does not return
          FUN_1808ddf80(memorySize,localBuffer);
        }
      }
    }
    else {
      localUInt1 = 0x1c;
    }
  }
  return localUInt1;
}



uint64 FUN_18089ac64(void)

{
  longlong inputRegister;
  uint64 localUInt1;
  uint64 *baseRegister;
  longlong unaff_RDI;
  
  if (*(int *)(inputRegister + 0x18) == 0) {
    localUInt1 = FUN_1808a2890(*baseRegister,unaff_RDI + 0x60,0x25);
    if ((int)localUInt1 == 0) {
      if (*(uint *)(baseRegister + 8) < 0x3d) {
        localUInt1 = 0;
      }
      else if (*(int *)(baseRegister[1] + 0x18) == 0) {
        localUInt1 = FUN_1808a2e00(*baseRegister,unaff_RDI + 0x40);
      }
      else {
        localUInt1 = 0x1c;
      }
      if ((int)localUInt1 == 0) {
                    // WARNING: Subroutine does not return
        FUN_1808ddf80();
      }
    }
  }
  else {
    localUInt1 = 0x1c;
  }
  return localUInt1;
}




// 函数: void FUN_18089ac96(void)
void FUN_18089ac96(void)

{
  int localInt1;
  uint64 *baseRegister;
  longlong unaff_RDI;
  
  if (*(uint *)(baseRegister + 8) < 0x3d) {
    localInt1 = 0;
  }
  else if (*(int *)(baseRegister[1] + 0x18) == 0) {
    localInt1 = FUN_1808a2e00(*baseRegister,unaff_RDI + 0x40);
  }
  else {
    localInt1 = 0x1c;
  }
  if (localInt1 == 0) {
                    // WARNING: Subroutine does not return
    FUN_1808ddf80();
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint64 FUN_18089ace4(void)

{
  float fVar1;
  int in_EAX;
  uint64 localUInt2;
  uint64 *puVar3;
  longlong baseRegister;
  uint64 unaff_RBP;
  longlong unaff_RDI;
  
  if (in_EAX == 0x1b) {
    if (*(uint *)(baseRegister + 0x40) < 0x3b) {
      localUInt2 = FUN_18089cc80();
      if ((int)localUInt2 != 0) {
        return localUInt2;
      }
      if (*(int *)(unaff_RDI + 0x50) == 0x14) {
        puVar3 = (uint64 *)**(longlong **)(unaff_RDI + 0x48);
        if (*(int *)(puVar3 + 2) == (int)unaff_RBP) {
          fVar1 = *(float *)(puVar3 + 3);
          if (puVar3 != (uint64 *)0x0) {
            (**(code **)*puVar3)(puVar3,0);
                    // WARNING: Subroutine does not return
            utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),puVar3,&unknown_1809869a0,0x130,1);
          }
          puVar3 = (uint64 *)
                   utilityAccessSystemResource(*(uint64 *)(utilitySystemDataTable + 0x1a0),0x20,&unknown_1809869a0,0x119);
          if (puVar3 == (uint64 *)0x0) {
            return 0x26;
          }
          puVar3[1] = unaff_RBP;
          *puVar3 = &unknown_180986940;
          *(uint32 *)(puVar3 + 2) = 1;
          *(int *)(puVar3 + 3) = (int)unaff_RBP;
          **(uint64 **)(unaff_RDI + 0x48) = puVar3;
          *(int *)(puVar3 + 3) = (int)fVar1;
          goto LAB_18089ae18;
        }
      }
      return 0xd;
    }
  }
  else if ((in_EAX == 0x12) && (*(uint *)(baseRegister + 0x40) < 0x40)) {
    localUInt2 = FUN_1808a8620();
    if ((int)localUInt2 != 0) {
      return localUInt2;
    }
    goto LAB_18089ae18;
  }
  localUInt2 = FUN_18089cc80();
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
LAB_18089ae18:
                    // WARNING: Subroutine does not return
  FUN_1808ddf80();
}




// 函数: void FUN_18089ae2d(void)
void FUN_18089ae2d(void)

{
  return;
}




// 函数: void FUN_18089ae35(void)
void FUN_18089ae35(void)

{
  return;
}




// 函数: void FUN_18089ae3d(void)
void FUN_18089ae3d(void)

{
  return;
}




// 函数: void FUN_18089ae50(longlong resourceHandle,uint64 memorySize,uint32 operationFlags,uint32 callbackFunction,
void FUN_18089ae50(longlong resourceHandle,uint64 memorySize,uint32 operationFlags,uint32 callbackFunction,
                  char param_5)

{
  int localInt1;
  byte localBuffer [64];
  byte localBuffer [32];
  
  localInt1 = FUN_1808ddc20(memorySize,localBuffer,1,operationFlags);
  if (((localInt1 == 0) && (localInt1 = FUN_1808ddc20(memorySize,localBuffer,0,callbackFunction), localInt1 == 0)) &&
     (localInt1 = FUN_180899360(memorySize,resourceHandle + 0x10), localInt1 == 0)) {
    if ((param_5 != '\0') && (localInt1 = FUN_18089d490(resourceHandle + 0x48,memorySize), localInt1 != 0)) {
      return;
    }
                    // WARNING: Subroutine does not return
    FUN_1808ddf80(memorySize,localBuffer);
  }
  return;
}



ulonglong FUN_18089af12(void)

{
  longlong *plocalLong1;
  uint localUInt2;
  uint in_EAX;
  uint uVar3;
  ulonglong uVar4;
  ulonglong uVar5;
  longlong *baseRegister;
  longlong unaff_RBP;
  uint unaff_ESI;
  uint unaff_EDI;
  uint uVar6;
  uint uVar7;
  char cStack0000000000000030;
  uint uStack0000000000000034;
  uint32 in_stack_00000038;
  
  uVar5 = 0;
  uVar6 = 0;
  uVar7 = 0;
  if (in_EAX < 0x8c) {
    if (*(int *)(baseRegister[1] + 0x18) != 0) {
      return (ulonglong)unaff_EDI;
    }
    plocalLong1 = (longlong *)*baseRegister;
    uVar3 = unaff_EDI;
    if (*plocalLong1 != 0) {
      if (plocalLong1[2] == 0) {
LAB_18089af81:
        uVar3 = FUN_180769ed0(*plocalLong1,&stack0x00000030,unaff_ESI,unaff_ESI,0);
      }
      else {
        uStack0000000000000034 = 0;
        uVar3 = func_0x00018076a7d0(*plocalLong1,(longlong)&stack0x00000030 + 4);
        if (uVar3 == 0) {
          if ((ulonglong)uStack0000000000000034 + 1 <= (ulonglong)plocalLong1[2]) goto LAB_18089af81;
          uVar3 = 0x11;
        }
      }
    }
    localUInt2 = unaff_ESI;
    if (uVar3 == 0) {
      uVar6 = (uint)(cStack0000000000000030 != '\0');
      uVar3 = uVar7;
      localUInt2 = (uint)(cStack0000000000000030 == '\0');
    }
    if (uVar3 != 0) {
      return (ulonglong)uVar3;
    }
    *(uint *)(unaff_RBP + 0xc4) = (*(uint *)(unaff_RBP + 0xc4) | uVar6) & ~localUInt2;
    in_EAX = *(uint *)(baseRegister + 8);
  }
  uVar4 = uVar5;
  if (0x8b < in_EAX) {
    if (*(int *)(baseRegister[1] + 0x18) == 0) {
      uVar4 = FUN_1808aed00(*baseRegister,unaff_RBP + 0xc4,4);
    }
    else {
      uVar4 = (ulonglong)unaff_EDI;
    }
  }
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  uVar4 = FUN_1808afc70();
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  uVar4 = FUN_1808a5d60();
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  uVar4 = FUN_1808a5d60();
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  uVar4 = FUN_18089bd70();
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  uVar4 = uVar5;
  if (0x41 < *(uint *)(baseRegister + 8)) {
    if (*(int *)(baseRegister[1] + 0x18) == 0) {
      uVar4 = FUN_1808aed00(*baseRegister,unaff_RBP + 0xcc,4);
    }
    else {
      uVar4 = (ulonglong)unaff_EDI;
    }
  }
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  uVar4 = uVar5;
  if (0x41 < *(uint *)(baseRegister + 8)) {
    if (*(int *)(baseRegister[1] + 0x18) == 0) {
      uVar4 = FUN_1808aed00(*baseRegister,unaff_RBP + 0xd0,4);
    }
    else {
      uVar4 = (ulonglong)unaff_EDI;
    }
  }
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  if (0x5a < *(uint *)(baseRegister + 8)) {
    uVar4 = FUN_1808a4a20();
    if ((int)uVar4 != 0) {
      return uVar4;
    }
    uVar4 = FUN_1808a4a20();
    if ((int)uVar4 != 0) {
      return uVar4;
    }
  }
  if (0x6e < *(uint *)(baseRegister + 8)) {
    if (*(int *)(baseRegister[1] + 0x18) == 0) {
      uVar5 = FUN_1808aed00(*baseRegister,unaff_RBP + 200,4);
    }
    else {
      uVar5 = (ulonglong)unaff_EDI;
    }
  }
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  uVar6 = uVar7;
  if ((0x8b < *(uint *)(baseRegister + 8)) && (uVar6 = unaff_EDI, *(int *)(baseRegister[1] + 0x18) == 0))
  {
    plocalLong1 = (longlong *)*baseRegister;
    if (*plocalLong1 != 0) {
      if (plocalLong1[2] == 0) {
LAB_18089b1ab:
        unaff_EDI = FUN_180769ed0(*plocalLong1,&stack0x00000038,unaff_ESI,4,0);
      }
      else {
        uStack0000000000000034 = 0;
        unaff_EDI = func_0x00018076a7d0(*plocalLong1,(longlong)&stack0x00000030 + 4);
        if (unaff_EDI == 0) {
          if ((ulonglong)uStack0000000000000034 + 4 <= (ulonglong)plocalLong1[2]) goto LAB_18089b1ab;
          unaff_EDI = 0x11;
        }
      }
    }
    uVar6 = unaff_EDI;
    if (unaff_EDI != 0) goto LAB_18089b22a;
    switch(in_stack_00000038) {
    case 0:
      unaff_ESI = uVar7;
      break;
    case 1:
      break;
    case 2:
      unaff_ESI = 2;
      break;
    case 3:
      unaff_ESI = 3;
      break;
    case 4:
      unaff_ESI = 4;
      break;
    case 5:
      unaff_ESI = 5;
      break;
    case 6:
      unaff_ESI = 6;
      break;
    default:
      uVar6 = 0xd;
      goto LAB_18089b226;
    }
    *(uint *)(unaff_RBP + 0xd4) = unaff_ESI;
    uVar6 = uVar7;
  }
LAB_18089b226:
  if (uVar6 == 0) {
                    // WARNING: Subroutine does not return
    FUN_1808ddf80();
  }
LAB_18089b22a:
  return (ulonglong)uVar6;
}



int FUN_18089b218(void)

{
  longlong unaff_RBP;
  int unaff_R15D;
  
  *(uint32 *)(unaff_RBP + 0xd4) = 7;
  if (unaff_R15D != 0) {
    return unaff_R15D;
  }
                    // WARNING: Subroutine does not return
  FUN_1808ddf80();
}



int FUN_18089b21d(void)

{
  longlong unaff_RBP;
  uint32 unaff_ESI;
  int unaff_R15D;
  
  *(uint32 *)(unaff_RBP + 0xd4) = unaff_ESI;
  if (unaff_R15D != 0) {
    return unaff_R15D;
  }
                    // WARNING: Subroutine does not return
  FUN_1808ddf80();
}




// 函数: void FUN_18089b26e(void)
void FUN_18089b26e(void)

{
  return;
}



ulonglong FUN_18089b2a0(longlong resourceHandle,uint64 *memorySize)

{
  uint64 localUInt1;
  uint32 *plocalUInt2;
  ulonglong uVar3;
  uint uVar4;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  byte localBuffer [32];
  
  plocalUInt2 = (uint32 *)FUN_180847820();
  localUInt = *plocalUInt2;
  localUInt = plocalUInt2[1];
  localUInt = plocalUInt2[2];
  localUInt = plocalUInt2[3];
  uVar3 = FUN_1808ddc20(memorySize,localBuffer,0,0x4c525443);
  if ((((int)uVar3 == 0) && (uVar3 = FUN_180899360(memorySize,resourceHandle + 0x10), (int)uVar3 == 0)) &&
     (uVar3 = FUN_180899360(memorySize,resourceHandle + 0x20), (int)uVar3 == 0)) {
    uVar4 = 0x1c;
    if (*(uint *)(memorySize + 8) < 0x5a) {
      if (*(int *)(memorySize[1] + 0x18) == 0) {
        localUInt1 = *memorySize;
        uVar3 = FUN_1808aed00(localUInt1,&localUInt,4);
        if ((((int)uVar3 == 0) && (uVar3 = FUN_1808aed00(localUInt1,&localUInt,2), (int)uVar3 == 0)) &&
           (uVar3 = FUN_1808aed00(localUInt1,(longlong)&localUInt + 2,2), (int)uVar3 == 0)) {
          uVar3 = FUN_1808aed00(localUInt1,&localUInt,8);
        }
      }
      else {
        uVar3 = 0x1c;
      }
    }
    else {
      uVar3 = 0;
    }
    if ((int)uVar3 == 0) {
      if (*(int *)(memorySize[1] + 0x18) == 0) {
        uVar3 = FUN_180899090(*memorySize,resourceHandle + 0x30);
        if ((int)uVar3 != 0) {
          return uVar3;
        }
        if ((*(int *)(memorySize[1] + 0x18) == 0) &&
           (uVar4 = FUN_1808aed00(*memorySize,resourceHandle + 0x40,4), uVar4 == 0)) {
                    // WARNING: Subroutine does not return
          FUN_1808ddf80(memorySize,localBuffer);
        }
      }
      return (ulonglong)uVar4;
    }
  }
  return uVar3;
}



ulonglong FUN_18089b307(void)

{
  uint64 localUInt1;
  int in_EAX;
  ulonglong localUInt2;
  uint64 *baseRegister;
  longlong unaff_RBP;
  uint uVar3;
  bool in_CF;
  byte auStackX_20 [4];
  byte auStackX_24 [2];
  byte auStackX_26 [2];
  
  uVar3 = in_EAX + 0x1c;
  if (in_CF) {
    if (*(int *)(baseRegister[1] + 0x18) == 0) {
      localUInt1 = *baseRegister;
      localUInt2 = FUN_1808aed00(localUInt1,auStackX_20,4);
      if ((((int)localUInt2 == 0) && (localUInt2 = FUN_1808aed00(localUInt1,auStackX_24,2), (int)localUInt2 == 0)) &&
         (localUInt2 = FUN_1808aed00(localUInt1,auStackX_26,2), (int)localUInt2 == 0)) {
        localUInt2 = FUN_1808aed00(localUInt1,&stack0x00000028,8);
      }
    }
    else {
      localUInt2 = (ulonglong)uVar3;
    }
  }
  else {
    localUInt2 = 0;
  }
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  if (*(int *)(baseRegister[1] + 0x18) == 0) {
    localUInt2 = FUN_180899090(*baseRegister,unaff_RBP + 0x30);
    if ((int)localUInt2 != 0) {
      return localUInt2;
    }
    if ((*(int *)(baseRegister[1] + 0x18) == 0) &&
       (uVar3 = FUN_1808aed00(*baseRegister,unaff_RBP + 0x40,4), uVar3 == 0)) {
                    // WARNING: Subroutine does not return
      FUN_1808ddf80();
    }
  }
  return (ulonglong)uVar3;
}



ulonglong FUN_18089b31f(void)

{
  uint64 localUInt1;
  uint localUInt2;
  ulonglong uVar3;
  uint64 *baseRegister;
  longlong unaff_RBP;
  ulonglong unaff_RDI;
  byte auStackX_20 [4];
  byte auStackX_24 [2];
  byte auStackX_26 [2];
  
  localUInt1 = *baseRegister;
  uVar3 = FUN_1808aed00(localUInt1,auStackX_20,4);
  if ((((int)uVar3 == 0) && (uVar3 = FUN_1808aed00(localUInt1,auStackX_24,2), (int)uVar3 == 0)) &&
     (uVar3 = FUN_1808aed00(localUInt1,auStackX_26,2), (int)uVar3 == 0)) {
    uVar3 = FUN_1808aed00(localUInt1,&stack0x00000028,8);
  }
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  if (*(int *)(baseRegister[1] + 0x18) == 0) {
    uVar3 = FUN_180899090(*baseRegister,unaff_RBP + 0x30);
    if ((int)uVar3 != 0) {
      return uVar3;
    }
    if (*(int *)(baseRegister[1] + 0x18) == 0) {
      localUInt2 = FUN_1808aed00(*baseRegister,unaff_RBP + 0x40,4);
      unaff_RDI = (ulonglong)localUInt2;
      if (localUInt2 == 0) {
                    // WARNING: Subroutine does not return
        FUN_1808ddf80();
      }
    }
  }
  return unaff_RDI & 0xffffffff;
}



ulonglong FUN_18089b380(void)

{
  uint localUInt1;
  ulonglong localUInt2;
  uint64 *baseRegister;
  longlong unaff_RBP;
  ulonglong unaff_RDI;
  
  if (*(int *)(baseRegister[1] + 0x18) == 0) {
    localUInt2 = FUN_180899090(*baseRegister,unaff_RBP + 0x30);
    if ((int)localUInt2 != 0) {
      return localUInt2;
    }
    if (*(int *)(baseRegister[1] + 0x18) == 0) {
      localUInt1 = FUN_1808aed00(*baseRegister,unaff_RBP + 0x40,4);
      unaff_RDI = (ulonglong)localUInt1;
      if (localUInt1 == 0) {
                    // WARNING: Subroutine does not return
        FUN_1808ddf80();
      }
    }
  }
  return unaff_RDI & 0xffffffff;
}




// 函数: void FUN_18089b3d4(void)
void FUN_18089b3d4(void)

{
                    // WARNING: Subroutine does not return
  FUN_1808ddf80();
}




// 函数: void FUN_18089b3e6(void)
void FUN_18089b3e6(void)

{
  return;
}




// 函数: void FUN_18089b400(longlong resourceHandle,uint64 memorySize)
void FUN_18089b400(longlong resourceHandle,uint64 memorySize)

{
  int localInt1;
  byte localBuffer [32];
  
  localInt1 = FUN_1808ddc20(memorySize,localBuffer,0,0x4f525443);
  if (localInt1 == 0) {
    localInt1 = FUN_1808a79f0(memorySize,resourceHandle + 8);
    if (localInt1 == 0) {
                    // WARNING: Subroutine does not return
      FUN_1808ddf80(memorySize,localBuffer);
    }
  }
  return;
}



uint64 FUN_18089b460(longlong resourceHandle,longlong *memorySize)

{
  longlong localLong1;
  uint64 localUInt2;
  char unaff_BPL;
  char in_stack_00000008;
  
  if (*(uint *)(memorySize + 8) < 0x55) {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    localUInt2 = FUN_1808995c0(*memorySize,resourceHandle + 0x50);
    if ((int)localUInt2 != 0) {
      return localUInt2;
    }
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    localUInt2 = FUN_1808995c0(*memorySize,resourceHandle + 0x54);
    if ((int)localUInt2 != 0) {
      return localUInt2;
    }
  }
  else {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    localUInt2 = FUN_1808995c0(*memorySize,resourceHandle + 0x78);
    if ((int)localUInt2 != 0) {
      return localUInt2;
    }
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  localUInt2 = FUN_1808995c0(*memorySize,resourceHandle + 0x58);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  localUInt2 = FUN_1808995c0(*memorySize,resourceHandle + 0x5c);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  if (*(uint *)(memorySize + 8) < 0x53) {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    localLong1 = *memorySize;
    localUInt2 = FUN_1808aed00(localLong1,resourceHandle + 0x60,4);
    if ((((int)localUInt2 == 0) && (localUInt2 = FUN_1808aed00(localLong1,resourceHandle + 100,2), (int)localUInt2 == 0)) &&
       (localUInt2 = FUN_1808aed00(localLong1,resourceHandle + 0x66,2), (int)localUInt2 == 0)) {
      localUInt2 = FUN_1808aed00(localLong1,resourceHandle + 0x68,8);
    }
    in_stack_00000008 = unaff_BPL;
    if ((int)localUInt2 != 0) {
      return localUInt2;
    }
  }
  else {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    localUInt2 = FUN_1808995c0(*memorySize,resourceHandle + 0x70);
    if ((int)localUInt2 != 0) {
      return localUInt2;
    }
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    localUInt2 = FUN_1808995c0(*memorySize,resourceHandle + 0x74);
    if ((int)localUInt2 != 0) {
      return localUInt2;
    }
  }
  if (*(uint *)(memorySize + 8) < 0x7d) {
    return 0;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  memorySize = (longlong *)*memorySize;
  if (*memorySize == 0) {
    localUInt2 = 0x1c;
  }
  else {
    if (memorySize[2] != 0) {
      localUInt2 = func_0x00018076a7d0(*memorySize,&stack0x00000018);
      if ((int)localUInt2 != 0) {
        return localUInt2;
      }
      if (memorySize[2] == 0) {
        localUInt2 = 0x11;
        goto LAB_1808a2e6d;
      }
    }
    localUInt2 = FUN_180769ed0(*memorySize,&stack0x00000008,1,1,0);
  }
LAB_1808a2e6d:
  if ((int)localUInt2 == 0) {
    *(bool *)(resourceHandle + 0x7c) = in_stack_00000008 != (char)localUInt2;
  }
  return localUInt2;
}



uint64 FUN_18089b52a(void)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong inputRegister;
  uint64 uVar3;
  longlong *baseRegister;
  uint64 unaff_RBP;
  longlong unaff_RDI;
  bool in_CF;
  char cStack0000000000000030;
  uint in_stack_00000040;
  
  if (in_CF) {
    if (*(int *)(inputRegister + 0x18) != 0) {
      return 0x1c;
    }
    localLong1 = *baseRegister;
    _cStack0000000000000030 = unaff_RBP;
    uVar3 = FUN_1808aed00(localLong1,unaff_RDI + 0x60,4);
    if ((((int)uVar3 == 0) && (uVar3 = FUN_1808aed00(localLong1,unaff_RDI + 100,2), (int)uVar3 == 0)) &&
       (uVar3 = FUN_1808aed00(localLong1,unaff_RDI + 0x66,2), (int)uVar3 == 0)) {
      uVar3 = FUN_1808aed00(localLong1,unaff_RDI + 0x68,8);
    }
    if ((int)uVar3 != 0) {
      return uVar3;
    }
  }
  else {
    if (*(int *)(inputRegister + 0x18) != 0) {
      return 0x1c;
    }
    uVar3 = FUN_1808995c0(*baseRegister,unaff_RDI + 0x70);
    if ((int)uVar3 != 0) {
      return uVar3;
    }
    if (*(int *)(baseRegister[1] + 0x18) != 0) {
      return 0x1c;
    }
    uVar3 = FUN_1808995c0(*baseRegister,unaff_RDI + 0x74);
    if ((int)uVar3 != 0) {
      return uVar3;
    }
  }
  if (*(uint *)(baseRegister + 8) < 0x7d) {
    return 0;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  plocalLong2 = (longlong *)*baseRegister;
  if (*plocalLong2 == 0) {
    uVar3 = 0x1c;
  }
  else {
    if (plocalLong2[2] != 0) {
      in_stack_00000040 = 0;
      uVar3 = func_0x00018076a7d0(*plocalLong2,&stackLocalBuffer);
      if ((int)uVar3 != 0) {
        return uVar3;
      }
      if ((ulonglong)plocalLong2[2] < (ulonglong)in_stack_00000040 + 1) {
        uVar3 = 0x11;
        goto LAB_1808a2e6d;
      }
    }
    uVar3 = FUN_180769ed0(*plocalLong2,&stack0x00000030,1,1,0);
  }
LAB_1808a2e6d:
  if ((int)uVar3 == 0) {
    *(bool *)(unaff_RDI + 0x7c) = cStack0000000000000030 != (char)uVar3;
  }
  return uVar3;
}



uint64 FUN_18089b540(void)

{
  longlong localLong1;
  longlong *plocalLong2;
  uint64 uVar3;
  longlong *baseRegister;
  char unaff_BPL;
  longlong unaff_RDI;
  uint in_stack_00000040;
  
  localLong1 = *baseRegister;
  uVar3 = FUN_1808aed00(localLong1,unaff_RDI + 0x60);
  if ((((int)uVar3 == 0) && (uVar3 = FUN_1808aed00(localLong1,unaff_RDI + 100,2), (int)uVar3 == 0)) &&
     (uVar3 = FUN_1808aed00(localLong1,unaff_RDI + 0x66,2), (int)uVar3 == 0)) {
    uVar3 = FUN_1808aed00(localLong1,unaff_RDI + 0x68,8);
  }
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  if (*(uint *)(baseRegister + 8) < 0x7d) {
    return 0;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  plocalLong2 = (longlong *)*baseRegister;
  if (*plocalLong2 == 0) {
    uVar3 = 0x1c;
  }
  else {
    if (plocalLong2[2] != 0) {
      in_stack_00000040 = 0;
      uVar3 = func_0x00018076a7d0(*plocalLong2,&stackLocalBuffer);
      if ((int)uVar3 != 0) {
        return uVar3;
      }
      if ((ulonglong)plocalLong2[2] < (ulonglong)in_stack_00000040 + 1) {
        uVar3 = 0x11;
        goto LAB_1808a2e6d;
      }
    }
    uVar3 = FUN_180769ed0(*plocalLong2,&stack0x00000030,1,1,0);
  }
LAB_1808a2e6d:
  if ((int)uVar3 == 0) {
    *(bool *)(unaff_RDI + 0x7c) = unaff_BPL != (char)uVar3;
  }
  return uVar3;
}




// 函数: void FUN_18089b599(void)
void FUN_18089b599(void)

{
  return;
}



uint64 FUN_18089b5a9(int resourceHandle)

{
  longlong *plocalLong1;
  uint64 localUInt2;
  longlong *baseRegister;
  longlong unaff_RDI;
  char stackParameter1;
  uint64 in_stack_00000038;
  uint uStack0000000000000040;
  uint32 uStack0000000000000044;
  
  if (resourceHandle != 0) {
    return 0x1c;
  }
  localUInt2 = FUN_1808995c0(*baseRegister,unaff_RDI + 0x70);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  localUInt2 = FUN_1808995c0(*baseRegister,unaff_RDI + 0x74);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  if (*(uint *)(baseRegister + 8) < 0x7d) {
    return 0;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  plocalLong1 = (longlong *)*baseRegister;
  in_stack_00000038 = CONCAT44(uStack0000000000000044,uStack0000000000000040);
  if (*plocalLong1 == 0) {
    localUInt2 = 0x1c;
  }
  else {
    if (plocalLong1[2] != 0) {
      uStack0000000000000040 = 0;
      localUInt2 = func_0x00018076a7d0(*plocalLong1,&stackLocalBuffer);
      if ((int)localUInt2 != 0) {
        return localUInt2;
      }
      if ((ulonglong)plocalLong1[2] < (ulonglong)uStack0000000000000040 + 1) {
        localUInt2 = 0x11;
        goto LAB_1808a2e6d;
      }
    }
    localUInt2 = FUN_180769ed0(*plocalLong1,&stack0x00000030,1,1,0);
  }
LAB_1808a2e6d:
  if ((int)localUInt2 == 0) {
    *(bool *)(unaff_RDI + 0x7c) = stackParameter1 != (char)localUInt2;
  }
  return localUInt2;
}




// 函数: void FUN_18089b5fc(void)
void FUN_18089b5fc(void)

{
  longlong *plocalLong1;
  int localInt2;
  longlong *baseRegister;
  longlong unaff_RDI;
  char stackParameter1;
  uint64 uStack0000000000000038;
  uint uStack0000000000000040;
  
  plocalLong1 = (longlong *)*baseRegister;
  uStack0000000000000038 = _uStack0000000000000040;
  if (*plocalLong1 == 0) {
    localInt2 = 0x1c;
  }
  else {
    if (plocalLong1[2] != 0) {
      uStack0000000000000040 = 0;
      localInt2 = func_0x00018076a7d0(*plocalLong1,&stackLocalBuffer);
      if (localInt2 != 0) {
        return;
      }
      if ((ulonglong)plocalLong1[2] < (ulonglong)uStack0000000000000040 + 1) {
        localInt2 = 0x11;
        goto LAB_1808a2e6d;
      }
    }
    localInt2 = FUN_180769ed0(*plocalLong1,&stack0x00000030,1,1,0);
  }
LAB_1808a2e6d:
  if (localInt2 == 0) {
    *(bool *)(unaff_RDI + 0x7c) = stackParameter1 != '\0';
  }
  return;
}



uint64 FUN_18089b617(void)

{
  return 0;
}




// 函数: void FUN_18089b61e(void)
void FUN_18089b61e(void)

{
  return;
}



uint64 FUN_18089b630(longlong resourceHandle,uint64 *memorySize)

{
  uint64 localUInt1;
  int localInt2;
  uint uVar3;
  uint uVar4;
  uint auStackX_18 [2];
  uint auStackX_20 [2];
  byte localBuffer [32];
  byte localBuffer [32];
  
  localUInt1 = FUN_1808ddc20(memorySize,localBuffer,1,0x54495645);
  if (((((int)localUInt1 == 0) &&
       (localUInt1 = FUN_1808ddc20(memorySize,localBuffer,0,0x42495645), (int)localUInt1 == 0)) &&
      (localUInt1 = FUN_180899360(memorySize,resourceHandle + 0x10), (int)localUInt1 == 0)) &&
     (localUInt1 = FUN_180899360(memorySize,resourceHandle + 0xd8), (int)localUInt1 == 0)) {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    localUInt1 = FUN_1808995c0(*memorySize,resourceHandle + 0xf8);
    if ((int)localUInt1 == 0) {
      auStackX_20[0] = 0;
      localUInt1 = FUN_1808afe30(*memorySize,auStackX_20);
      if ((int)localUInt1 == 0) {
        localInt2 = 0;
        auStackX_18[0] = 0;
        uVar3 = auStackX_20[0] & 1;
        uVar4 = auStackX_20[0] >> 1;
        if (uVar4 != 0) {
          do {
            localUInt1 = FUN_1808dde10(memorySize,auStackX_18[0]);
            if ((int)localUInt1 != 0) {
              return localUInt1;
            }
            localUInt1 = FUN_1808a7f40(memorySize,resourceHandle + 0xe8,localInt2,resourceHandle);
            if ((int)localUInt1 != 0) {
              return localUInt1;
            }
            localUInt1 = FUN_1808de0e0(memorySize,auStackX_18);
            if ((int)localUInt1 != 0) {
              return localUInt1;
            }
            localInt2 = localInt2 + 1;
            auStackX_18[0] = auStackX_18[0] & -uVar3;
          } while (localInt2 < (int)uVar4);
        }
                    // WARNING: Subroutine does not return
        FUN_1808ddf80(memorySize,localBuffer);
      }
    }
  }
  return localUInt1;
}




// 函数: void FUN_18089b6df(void)
void FUN_18089b6df(void)

{
  int localInt1;
  int localInt2;
  uint uVar3;
  uint uStack00000000000000a8;
  
  uStack00000000000000a8 = 0;
  localInt1 = FUN_1808afe30();
  if (localInt1 != 0) {
    return;
  }
  localInt1 = 0;
  uVar3 = uStack00000000000000a8 >> 1;
  if (uVar3 != 0) {
    do {
      localInt2 = FUN_1808dde10();
      if (localInt2 != 0) {
        return;
      }
      localInt2 = FUN_1808a7f40();
      if (localInt2 != 0) {
        return;
      }
      localInt2 = FUN_1808de0e0();
      if (localInt2 != 0) {
        return;
      }
      localInt1 = localInt1 + 1;
    } while (localInt1 < (int)uVar3);
  }
                    // WARNING: Subroutine does not return
  FUN_1808ddf80();
}




// 函数: void FUN_18089b7c7(void)
void FUN_18089b7c7(void)

{
  return;
}



ulonglong FUN_18089b7d0(longlong resourceHandle,longlong *memorySize)

{
  longlong *plocalLong1;
  longlong localLong2;
  uint uVar3;
  uint uVar4;
  ulonglong uVar5;
  ulonglong uVar6;
  uint uVar7;
  ulonglong uVar8;
  char acStackX_18 [8];
  uint auStackX_20 [2];
  byte localBuffer [32];
  
  uVar5 = FUN_1808ddc20(memorySize,localBuffer,0,0x54534e49);
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  uVar5 = FUN_180899360(memorySize,resourceHandle + 0x60);
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar3 = FUN_1808995c0(*memorySize,resourceHandle + 0x90);
  if (uVar3 != 0) {
    return (ulonglong)uVar3;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar3 = FUN_1808995c0(*memorySize,resourceHandle + 0xa4);
  if (uVar3 != 0) {
    return (ulonglong)uVar3;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar3 = FUN_1808aed00(*memorySize,resourceHandle + 0xb0,4);
  if (uVar3 != 0) {
    return (ulonglong)uVar3;
  }
  uVar8 = 0x1c;
  uVar5 = 0;
  if (*(uint *)(memorySize + 8) < 0x82) {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    plocalLong1 = (longlong *)*memorySize;
    uVar3 = 1;
    if (*plocalLong1 == 0) {
      uVar4 = 0x1c;
    }
    else if (plocalLong1[2] == 0) {
LAB_18089b91c:
      uVar4 = FUN_180769ed0(*plocalLong1,acStackX_18,1,1,0);
    }
    else {
      auStackX_20[0] = 0;
      uVar4 = func_0x00018076a7d0(*plocalLong1,auStackX_20);
      if (uVar4 == 0) {
        if ((ulonglong)auStackX_20[0] + 1 <= (ulonglong)plocalLong1[2]) goto LAB_18089b91c;
        uVar4 = 0x11;
      }
    }
    uVar7 = 0;
    if (uVar4 == 0) {
      uVar7 = (uint)(acStackX_18[0] != '\0');
      uVar3 = (uint)(acStackX_18[0] == '\0');
      uVar4 = 0;
    }
    if (uVar4 != 0) {
      return (ulonglong)uVar4;
    }
    *(uint *)(resourceHandle + 0xb8) = (*(uint *)(resourceHandle + 0xb8) | uVar7) & ~uVar3;
  }
  else {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    uVar6 = FUN_1808aed00(*memorySize,resourceHandle + 0xb8,4);
    if ((int)uVar6 != 0) {
      return uVar6;
    }
  }
  uVar6 = uVar8;
  if ((((*(int *)(memorySize[1] + 0x18) == 0) &&
       (uVar6 = FUN_1808995c0(*memorySize,resourceHandle + 0x94), (int)uVar6 == 0)) &&
      (uVar6 = uVar8, *(int *)(memorySize[1] + 0x18) == 0)) &&
     ((uVar6 = FUN_1808995c0(*memorySize,resourceHandle + 0x98), (int)uVar6 == 0 &&
      (uVar6 = uVar8, *(int *)(memorySize[1] + 0x18) == 0)))) {
    localLong2 = *memorySize;
    uVar6 = FUN_1808995c0(localLong2,resourceHandle + 0x80);
    if (((((int)uVar6 == 0) &&
         ((uVar6 = FUN_1808995c0(localLong2,resourceHandle + 0x84), (int)uVar6 == 0 &&
          (uVar6 = FUN_180899220(memorySize,resourceHandle + 0x88), (int)uVar6 == 0)))) &&
        (uVar6 = uVar8, *(int *)(memorySize[1] + 0x18) == 0)) &&
       ((((uVar6 = FUN_180899090(*memorySize,resourceHandle + 0x70), (int)uVar6 == 0 &&
          (uVar6 = uVar8, *(int *)(memorySize[1] + 0x18) == 0)) &&
         (uVar6 = FUN_1808995c0(*memorySize,resourceHandle + 0xa8), (int)uVar6 == 0)) &&
        (((uVar6 = uVar8, *(int *)(memorySize[1] + 0x18) == 0 &&
          (uVar6 = FUN_1808995c0(*memorySize,resourceHandle + 0x9c), (int)uVar6 == 0)) &&
         ((uVar6 = uVar8, *(int *)(memorySize[1] + 0x18) == 0 &&
          ((uVar6 = FUN_1808aed00(*memorySize,resourceHandle + 0xb4,4), (int)uVar6 == 0 &&
           (uVar6 = FUN_18089d490(resourceHandle + 0x30,memorySize), (int)uVar6 == 0)))))))))) {
      uVar6 = uVar5;
      if (0x34 < *(uint *)(memorySize + 8)) {
        if (*(int *)(memorySize[1] + 0x18) == 0) {
          uVar6 = FUN_1808aed00(*memorySize,resourceHandle + 0xbc,4);
        }
        else {
          uVar6 = 0x1c;
        }
      }
      if ((int)uVar6 == 0) {
        uVar6 = uVar5;
        if (0x46 < *(uint *)(memorySize + 8)) {
          if (*(int *)(memorySize[1] + 0x18) == 0) {
            uVar6 = FUN_1808aed00(*memorySize,resourceHandle + 0xc0,4);
          }
          else {
            uVar6 = 0x1c;
          }
        }
        if ((int)uVar6 == 0) {
          uVar6 = uVar5;
          if (0x47 < *(uint *)(memorySize + 8)) {
            if (*(int *)(memorySize[1] + 0x18) == 0) {
              uVar6 = FUN_1808995c0(*memorySize,resourceHandle + 0xa0);
            }
            else {
              uVar6 = 0x1c;
            }
          }
          if ((int)uVar6 == 0) {
            uVar6 = uVar5;
            if (0x4f < *(uint *)(memorySize + 8)) {
              if (*(int *)(memorySize[1] + 0x18) == 0) {
                uVar3 = FUN_1808995c0(*memorySize,resourceHandle + 0xac);
                uVar6 = (ulonglong)uVar3;
              }
              else {
                uVar6 = 0x1c;
              }
            }
            if ((int)uVar6 == 0) {
              if (*(uint *)(memorySize + 8) < 0x82) {
LAB_18089bbcc:
                    // WARNING: Subroutine does not return
                FUN_1808ddf80(memorySize,localBuffer);
              }
              uVar6 = uVar8;
              if (*(int *)(memorySize[1] + 0x18) == 0) {
                uVar3 = FUN_1808993e0(resourceHandle + 200,*memorySize);
                uVar6 = (ulonglong)uVar3;
                if (uVar3 == 0) goto LAB_18089bbcc;
              }
            }
          }
        }
      }
    }
  }
  return uVar6;
}



ulonglong FUN_18089b813(void)

{
  longlong *plocalLong1;
  longlong localLong2;
  uint uVar3;
  uint uVar4;
  longlong inputRegister;
  ulonglong uVar5;
  uint uVar6;
  longlong *baseRegister;
  ulonglong uVar7;
  longlong unaff_RSI;
  ulonglong uVar8;
  char in_stack_00000090;
  uint in_stack_00000098;
  
  if (*(int *)(inputRegister + 0x18) != 0) {
    return 0x1c;
  }
  uVar3 = FUN_1808995c0(*baseRegister,unaff_RSI + 0x90);
  if (uVar3 != 0) {
    return (ulonglong)uVar3;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar3 = FUN_1808995c0(*baseRegister,unaff_RSI + 0xa4);
  if (uVar3 != 0) {
    return (ulonglong)uVar3;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar3 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xb0,4);
  if (uVar3 != 0) {
    return (ulonglong)uVar3;
  }
  uVar8 = 0x1c;
  uVar7 = 0;
  if (*(uint *)(baseRegister + 8) < 0x82) {
    if (*(int *)(baseRegister[1] + 0x18) != 0) {
      return 0x1c;
    }
    plocalLong1 = (longlong *)*baseRegister;
    uVar3 = 1;
    if (*plocalLong1 == 0) {
      uVar4 = 0x1c;
    }
    else if (plocalLong1[2] == 0) {
LAB_18089b91c:
      uVar4 = FUN_180769ed0(*plocalLong1,&stack0x00000090,1,1,0);
    }
    else {
      in_stack_00000098 = 0;
      uVar4 = func_0x00018076a7d0(*plocalLong1,&stack0x00000098);
      if (uVar4 == 0) {
        if ((ulonglong)in_stack_00000098 + 1 <= (ulonglong)plocalLong1[2]) goto LAB_18089b91c;
        uVar4 = 0x11;
      }
    }
    uVar6 = 0;
    if (uVar4 == 0) {
      uVar6 = (uint)(in_stack_00000090 != '\0');
      uVar3 = (uint)(in_stack_00000090 == '\0');
      uVar4 = 0;
    }
    if (uVar4 != 0) {
      return (ulonglong)uVar4;
    }
    *(uint *)(unaff_RSI + 0xb8) = (*(uint *)(unaff_RSI + 0xb8) | uVar6) & ~uVar3;
  }
  else {
    if (*(int *)(baseRegister[1] + 0x18) != 0) {
      return 0x1c;
    }
    uVar5 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xb8,4);
    if ((int)uVar5 != 0) {
      return uVar5;
    }
  }
  uVar5 = uVar8;
  if ((((*(int *)(baseRegister[1] + 0x18) == 0) &&
       (uVar5 = FUN_1808995c0(*baseRegister,unaff_RSI + 0x94), (int)uVar5 == 0)) &&
      (uVar5 = uVar8, *(int *)(baseRegister[1] + 0x18) == 0)) &&
     ((uVar5 = FUN_1808995c0(*baseRegister,unaff_RSI + 0x98), (int)uVar5 == 0 &&
      (uVar5 = uVar8, *(int *)(baseRegister[1] + 0x18) == 0)))) {
    localLong2 = *baseRegister;
    uVar5 = FUN_1808995c0(localLong2,unaff_RSI + 0x80);
    if (((((int)uVar5 == 0) &&
         ((uVar5 = FUN_1808995c0(localLong2,unaff_RSI + 0x84), (int)uVar5 == 0 &&
          (uVar5 = FUN_180899220(), (int)uVar5 == 0)))) &&
        (uVar5 = uVar8, *(int *)(baseRegister[1] + 0x18) == 0)) &&
       ((((uVar5 = FUN_180899090(*baseRegister,unaff_RSI + 0x70), (int)uVar5 == 0 &&
          (uVar5 = uVar8, *(int *)(baseRegister[1] + 0x18) == 0)) &&
         (uVar5 = FUN_1808995c0(*baseRegister,unaff_RSI + 0xa8), (int)uVar5 == 0)) &&
        (((uVar5 = uVar8, *(int *)(baseRegister[1] + 0x18) == 0 &&
          (uVar5 = FUN_1808995c0(*baseRegister,unaff_RSI + 0x9c), (int)uVar5 == 0)) &&
         ((uVar5 = uVar8, *(int *)(baseRegister[1] + 0x18) == 0 &&
          ((uVar5 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xb4,4), (int)uVar5 == 0 &&
           (uVar5 = FUN_18089d490(unaff_RSI + 0x30), (int)uVar5 == 0)))))))))) {
      uVar5 = uVar7;
      if (0x34 < *(uint *)(baseRegister + 8)) {
        if (*(int *)(baseRegister[1] + 0x18) == 0) {
          uVar5 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xbc,4);
        }
        else {
          uVar5 = 0x1c;
        }
      }
      if ((int)uVar5 == 0) {
        uVar5 = uVar7;
        if (0x46 < *(uint *)(baseRegister + 8)) {
          if (*(int *)(baseRegister[1] + 0x18) == 0) {
            uVar5 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xc0,4);
          }
          else {
            uVar5 = 0x1c;
          }
        }
        if ((int)uVar5 == 0) {
          uVar5 = uVar7;
          if (0x47 < *(uint *)(baseRegister + 8)) {
            if (*(int *)(baseRegister[1] + 0x18) == 0) {
              uVar5 = FUN_1808995c0(*baseRegister,unaff_RSI + 0xa0);
            }
            else {
              uVar5 = 0x1c;
            }
          }
          if ((int)uVar5 == 0) {
            if (0x4f < *(uint *)(baseRegister + 8)) {
              if (*(int *)(baseRegister[1] + 0x18) == 0) {
                uVar3 = FUN_1808995c0(*baseRegister,unaff_RSI + 0xac);
                uVar7 = (ulonglong)uVar3;
              }
              else {
                uVar7 = 0x1c;
              }
            }
            uVar5 = uVar7;
            if ((int)uVar7 == 0) {
              if (*(uint *)(baseRegister + 8) < 0x82) {
LAB_18089bbcc:
                    // WARNING: Subroutine does not return
                FUN_1808ddf80();
              }
              uVar5 = uVar8;
              if (*(int *)(baseRegister[1] + 0x18) == 0) {
                uVar3 = FUN_1808993e0(unaff_RSI + 200,*baseRegister);
                uVar5 = (ulonglong)uVar3;
                if (uVar3 == 0) goto LAB_18089bbcc;
              }
            }
          }
        }
      }
    }
  }
  return uVar5;
}



ulonglong FUN_18089b86d(void)

{
  longlong *plocalLong1;
  longlong localLong2;
  uint uVar3;
  uint uVar4;
  ulonglong uVar5;
  uint uVar6;
  longlong *baseRegister;
  ulonglong uVar7;
  longlong unaff_RSI;
  ulonglong uVar8;
  char in_stack_00000090;
  uint in_stack_00000098;
  
  uVar3 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xb0,4);
  if (uVar3 != 0) {
    return (ulonglong)uVar3;
  }
  uVar8 = 0x1c;
  uVar7 = 0;
  if (*(uint *)(baseRegister + 8) < 0x82) {
    if (*(int *)(baseRegister[1] + 0x18) != 0) {
      return 0x1c;
    }
    plocalLong1 = (longlong *)*baseRegister;
    uVar3 = 1;
    if (*plocalLong1 == 0) {
      uVar4 = 0x1c;
    }
    else if (plocalLong1[2] == 0) {
LAB_18089b91c:
      uVar4 = FUN_180769ed0(*plocalLong1,&stack0x00000090,1,1,0);
    }
    else {
      in_stack_00000098 = 0;
      uVar4 = func_0x00018076a7d0(*plocalLong1,&stack0x00000098);
      if (uVar4 == 0) {
        if ((ulonglong)in_stack_00000098 + 1 <= (ulonglong)plocalLong1[2]) goto LAB_18089b91c;
        uVar4 = 0x11;
      }
    }
    uVar6 = 0;
    if (uVar4 == 0) {
      uVar6 = (uint)(in_stack_00000090 != '\0');
      uVar3 = (uint)(in_stack_00000090 == '\0');
      uVar4 = 0;
    }
    if (uVar4 != 0) {
      return (ulonglong)uVar4;
    }
    *(uint *)(unaff_RSI + 0xb8) = (*(uint *)(unaff_RSI + 0xb8) | uVar6) & ~uVar3;
  }
  else {
    if (*(int *)(baseRegister[1] + 0x18) != 0) {
      return 0x1c;
    }
    uVar5 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xb8,4);
    if ((int)uVar5 != 0) {
      return uVar5;
    }
  }
  uVar5 = uVar8;
  if ((((*(int *)(baseRegister[1] + 0x18) == 0) &&
       (uVar5 = FUN_1808995c0(*baseRegister,unaff_RSI + 0x94), (int)uVar5 == 0)) &&
      (uVar5 = uVar8, *(int *)(baseRegister[1] + 0x18) == 0)) &&
     ((uVar5 = FUN_1808995c0(*baseRegister,unaff_RSI + 0x98), (int)uVar5 == 0 &&
      (uVar5 = uVar8, *(int *)(baseRegister[1] + 0x18) == 0)))) {
    localLong2 = *baseRegister;
    uVar5 = FUN_1808995c0(localLong2,unaff_RSI + 0x80);
    if (((((int)uVar5 == 0) &&
         ((uVar5 = FUN_1808995c0(localLong2,unaff_RSI + 0x84), (int)uVar5 == 0 &&
          (uVar5 = FUN_180899220(), (int)uVar5 == 0)))) &&
        (uVar5 = uVar8, *(int *)(baseRegister[1] + 0x18) == 0)) &&
       ((((uVar5 = FUN_180899090(*baseRegister,unaff_RSI + 0x70), (int)uVar5 == 0 &&
          (uVar5 = uVar8, *(int *)(baseRegister[1] + 0x18) == 0)) &&
         (uVar5 = FUN_1808995c0(*baseRegister,unaff_RSI + 0xa8), (int)uVar5 == 0)) &&
        (((uVar5 = uVar8, *(int *)(baseRegister[1] + 0x18) == 0 &&
          (uVar5 = FUN_1808995c0(*baseRegister,unaff_RSI + 0x9c), (int)uVar5 == 0)) &&
         ((uVar5 = uVar8, *(int *)(baseRegister[1] + 0x18) == 0 &&
          ((uVar5 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xb4,4), (int)uVar5 == 0 &&
           (uVar5 = FUN_18089d490(unaff_RSI + 0x30), (int)uVar5 == 0)))))))))) {
      uVar5 = uVar7;
      if (0x34 < *(uint *)(baseRegister + 8)) {
        if (*(int *)(baseRegister[1] + 0x18) == 0) {
          uVar5 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xbc,4);
        }
        else {
          uVar5 = 0x1c;
        }
      }
      if ((int)uVar5 == 0) {
        uVar5 = uVar7;
        if (0x46 < *(uint *)(baseRegister + 8)) {
          if (*(int *)(baseRegister[1] + 0x18) == 0) {
            uVar5 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xc0,4);
          }
          else {
            uVar5 = 0x1c;
          }
        }
        if ((int)uVar5 == 0) {
          uVar5 = uVar7;
          if (0x47 < *(uint *)(baseRegister + 8)) {
            if (*(int *)(baseRegister[1] + 0x18) == 0) {
              uVar5 = FUN_1808995c0(*baseRegister,unaff_RSI + 0xa0);
            }
            else {
              uVar5 = 0x1c;
            }
          }
          if ((int)uVar5 == 0) {
            if (0x4f < *(uint *)(baseRegister + 8)) {
              if (*(int *)(baseRegister[1] + 0x18) == 0) {
                uVar3 = FUN_1808995c0(*baseRegister,unaff_RSI + 0xac);
                uVar7 = (ulonglong)uVar3;
              }
              else {
                uVar7 = 0x1c;
              }
            }
            uVar5 = uVar7;
            if ((int)uVar7 == 0) {
              if (*(uint *)(baseRegister + 8) < 0x82) {
LAB_18089bbcc:
                    // WARNING: Subroutine does not return
                FUN_1808ddf80();
              }
              uVar5 = uVar8;
              if (*(int *)(baseRegister[1] + 0x18) == 0) {
                uVar3 = FUN_1808993e0(unaff_RSI + 200,*baseRegister);
                uVar5 = (ulonglong)uVar3;
                if (uVar3 == 0) goto LAB_18089bbcc;
              }
            }
          }
        }
      }
    }
  }
  return uVar5;
}



ulonglong FUN_18089b896(void)

{
  longlong *plocalLong1;
  longlong localLong2;
  uint uVar3;
  uint uVar4;
  ulonglong uVar5;
  uint uVar6;
  longlong *baseRegister;
  ulonglong uVar7;
  longlong unaff_RSI;
  ulonglong uVar8;
  char in_stack_00000090;
  uint in_stack_00000098;
  
  uVar8 = 0x1c;
  uVar7 = 0;
  if (*(uint *)(baseRegister + 8) < 0x82) {
    if (*(int *)(baseRegister[1] + 0x18) != 0) {
      return 0x1c;
    }
    plocalLong1 = (longlong *)*baseRegister;
    uVar4 = 1;
    if (*plocalLong1 == 0) {
      uVar3 = 0x1c;
    }
    else if (plocalLong1[2] == 0) {
LAB_18089b91c:
      uVar3 = FUN_180769ed0(*plocalLong1,&stack0x00000090,1,1,0);
    }
    else {
      in_stack_00000098 = 0;
      uVar3 = func_0x00018076a7d0(*plocalLong1,&stack0x00000098);
      if (uVar3 == 0) {
        if ((ulonglong)in_stack_00000098 + 1 <= (ulonglong)plocalLong1[2]) goto LAB_18089b91c;
        uVar3 = 0x11;
      }
    }
    uVar6 = 0;
    if (uVar3 == 0) {
      uVar6 = (uint)(in_stack_00000090 != '\0');
      uVar4 = (uint)(in_stack_00000090 == '\0');
      uVar3 = 0;
    }
    if (uVar3 != 0) {
      return (ulonglong)uVar3;
    }
    *(uint *)(unaff_RSI + 0xb8) = (*(uint *)(unaff_RSI + 0xb8) | uVar6) & ~uVar4;
  }
  else {
    if (*(int *)(baseRegister[1] + 0x18) != 0) {
      return 0x1c;
    }
    uVar5 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xb8,4);
    if ((int)uVar5 != 0) {
      return uVar5;
    }
  }
  uVar5 = uVar8;
  if ((((*(int *)(baseRegister[1] + 0x18) == 0) &&
       (uVar5 = FUN_1808995c0(*baseRegister,unaff_RSI + 0x94), (int)uVar5 == 0)) &&
      (uVar5 = uVar8, *(int *)(baseRegister[1] + 0x18) == 0)) &&
     ((uVar5 = FUN_1808995c0(*baseRegister,unaff_RSI + 0x98), (int)uVar5 == 0 &&
      (uVar5 = uVar8, *(int *)(baseRegister[1] + 0x18) == 0)))) {
    localLong2 = *baseRegister;
    uVar5 = FUN_1808995c0(localLong2,unaff_RSI + 0x80);
    if (((((int)uVar5 == 0) &&
         ((uVar5 = FUN_1808995c0(localLong2,unaff_RSI + 0x84), (int)uVar5 == 0 &&
          (uVar5 = FUN_180899220(), (int)uVar5 == 0)))) &&
        (uVar5 = uVar8, *(int *)(baseRegister[1] + 0x18) == 0)) &&
       ((((uVar5 = FUN_180899090(*baseRegister,unaff_RSI + 0x70), (int)uVar5 == 0 &&
          (uVar5 = uVar8, *(int *)(baseRegister[1] + 0x18) == 0)) &&
         (uVar5 = FUN_1808995c0(*baseRegister,unaff_RSI + 0xa8), (int)uVar5 == 0)) &&
        (((uVar5 = uVar8, *(int *)(baseRegister[1] + 0x18) == 0 &&
          (uVar5 = FUN_1808995c0(*baseRegister,unaff_RSI + 0x9c), (int)uVar5 == 0)) &&
         ((uVar5 = uVar8, *(int *)(baseRegister[1] + 0x18) == 0 &&
          ((uVar5 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xb4,4), (int)uVar5 == 0 &&
           (uVar5 = FUN_18089d490(unaff_RSI + 0x30), (int)uVar5 == 0)))))))))) {
      uVar5 = uVar7;
      if (0x34 < *(uint *)(baseRegister + 8)) {
        if (*(int *)(baseRegister[1] + 0x18) == 0) {
          uVar5 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xbc,4);
        }
        else {
          uVar5 = 0x1c;
        }
      }
      if ((int)uVar5 == 0) {
        uVar5 = uVar7;
        if (0x46 < *(uint *)(baseRegister + 8)) {
          if (*(int *)(baseRegister[1] + 0x18) == 0) {
            uVar5 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xc0,4);
          }
          else {
            uVar5 = 0x1c;
          }
        }
        if ((int)uVar5 == 0) {
          uVar5 = uVar7;
          if (0x47 < *(uint *)(baseRegister + 8)) {
            if (*(int *)(baseRegister[1] + 0x18) == 0) {
              uVar5 = FUN_1808995c0(*baseRegister,unaff_RSI + 0xa0);
            }
            else {
              uVar5 = 0x1c;
            }
          }
          if ((int)uVar5 == 0) {
            if (0x4f < *(uint *)(baseRegister + 8)) {
              if (*(int *)(baseRegister[1] + 0x18) == 0) {
                uVar4 = FUN_1808995c0(*baseRegister,unaff_RSI + 0xac);
                uVar7 = (ulonglong)uVar4;
              }
              else {
                uVar7 = 0x1c;
              }
            }
            uVar5 = uVar7;
            if ((int)uVar7 == 0) {
              if (*(uint *)(baseRegister + 8) < 0x82) {
LAB_18089bbcc:
                    // WARNING: Subroutine does not return
                FUN_1808ddf80();
              }
              uVar5 = uVar8;
              if (*(int *)(baseRegister[1] + 0x18) == 0) {
                uVar4 = FUN_1808993e0(unaff_RSI + 200,*baseRegister);
                uVar5 = (ulonglong)uVar4;
                if (uVar4 == 0) goto LAB_18089bbcc;
              }
            }
          }
        }
      }
    }
  }
  return uVar5;
}




// 函数: void FUN_18089bbff(void)
void FUN_18089bbff(void)

{
  return;
}




// 函数: void FUN_18089bc10(longlong resourceHandle,uint64 *memorySize)
void FUN_18089bc10(longlong resourceHandle,uint64 *memorySize)

{
  longlong localLong1;
  uint64 localUInt2;
  uint uVar3;
  int localInt4;
  int iVar5;
  uint uVar6;
  uint uVar7;
  uint auStackX_18 [2];
  uint auStackX_20 [2];
  byte localBuffer [32];
  
  localInt4 = FUN_1808ddc20(memorySize,localBuffer,0,0x2050414d);
  if ((localInt4 == 0) && (localInt4 = FUN_180899360(memorySize,resourceHandle + 0x10), localInt4 == 0)) {
    auStackX_20[0] = 0;
    localInt4 = FUN_1808afe30(*memorySize,auStackX_20);
    uVar3 = auStackX_20[0];
    if (localInt4 == 0) {
      uVar6 = auStackX_20[0] & 1;
      uVar7 = auStackX_20[0] >> 1;
      localInt4 = FUN_1808af700((longlong *)(resourceHandle + 0x20),uVar7);
      if (localInt4 == 0) {
        auStackX_18[0] = 0;
        localInt4 = 0;
        if (uVar3 >> 1 != 0) {
          do {
            iVar5 = FUN_1808dde10(memorySize,auStackX_18[0]);
            if (iVar5 != 0) {
              return;
            }
            if (*(int *)(memorySize[1] + 0x18) == 0) {
              localUInt2 = *memorySize;
              localLong1 = *(longlong *)(resourceHandle + 0x20) + (longlong)localInt4 * 8;
              iVar5 = FUN_1808995c0(localUInt2,localLong1);
              if (iVar5 != 0) {
                return;
              }
              iVar5 = FUN_1808995c0(localUInt2,localLong1 + 4);
            }
            else {
              iVar5 = 0x1c;
            }
            if (iVar5 != 0) {
              return;
            }
            iVar5 = FUN_1808de0e0(memorySize,auStackX_18);
            if (iVar5 != 0) {
              return;
            }
            localInt4 = localInt4 + 1;
            auStackX_18[0] = auStackX_18[0] & -uVar6;
          } while (localInt4 < (int)uVar7);
        }
                    // WARNING: Subroutine does not return
        FUN_1808ddf80(memorySize,localBuffer);
      }
    }
  }
  return;
}




// 函数: void FUN_18089bc5a(void)
void FUN_18089bc5a(void)

{
  longlong localLong1;
  uint64 localUInt2;
  uint uVar3;
  int localInt4;
  int iVar5;
  longlong baseRegister;
  uint64 *unaff_RDI;
  uint uVar6;
  uint uStack0000000000000088;
  
  uStack0000000000000088 = 0;
  localInt4 = FUN_1808afe30();
  uVar3 = uStack0000000000000088;
  if (localInt4 == 0) {
    uVar6 = uStack0000000000000088 >> 1;
    localInt4 = FUN_1808af700((longlong *)(baseRegister + 0x20),uVar6);
    if (localInt4 == 0) {
      localInt4 = 0;
      if (uVar3 >> 1 != 0) {
        do {
          iVar5 = FUN_1808dde10();
          if (iVar5 != 0) {
            return;
          }
          if (*(int *)(unaff_RDI[1] + 0x18) == 0) {
            localUInt2 = *unaff_RDI;
            localLong1 = *(longlong *)(baseRegister + 0x20) + (longlong)localInt4 * 8;
            iVar5 = FUN_1808995c0(localUInt2,localLong1);
            if (iVar5 != 0) {
              return;
            }
            iVar5 = FUN_1808995c0(localUInt2,localLong1 + 4);
          }
          else {
            iVar5 = 0x1c;
          }
          if (iVar5 != 0) {
            return;
          }
          iVar5 = FUN_1808de0e0();
          if (iVar5 != 0) {
            return;
          }
          localInt4 = localInt4 + 1;
        } while (localInt4 < (int)uVar6);
      }
                    // WARNING: Subroutine does not return
      FUN_1808ddf80();
    }
  }
  return;
}




// 函数: void FUN_18089bd61(void)
void FUN_18089bd61(void)

{
  return;
}



uint64 FUN_18089bd70(longlong resourceHandle,uint64 *memorySize)

{
  uint64 localUInt1;
  
  localUInt1 = FUN_1808dde10(memorySize,0);
  if ((int)localUInt1 == 0) {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    localUInt1 = FUN_1808995c0(*memorySize,resourceHandle + 0x30);
    if ((int)localUInt1 == 0) {
      if (*(int *)(memorySize[1] + 0x18) != 0) {
        return 0x1c;
      }
      localUInt1 = FUN_1808995c0(*memorySize,resourceHandle + 0x34);
      if (((int)localUInt1 == 0) && (localUInt1 = FUN_1808de0e0(memorySize,0), (int)localUInt1 == 0)) {
        if ((0x6b < *(uint *)(memorySize + 8)) &&
           (localUInt1 = FUN_1808a6150(memorySize,resourceHandle + 0x38,0), (int)localUInt1 != 0)) {
          return localUInt1;
        }
        localUInt1 = 0;
      }
    }
  }
  return localUInt1;
}




// 函数: void FUN_18089be10(longlong resourceHandle,uint64 *memorySize,int operationFlags)
void FUN_18089be10(longlong resourceHandle,uint64 *memorySize,int operationFlags)

{
  uint localUInt1;
  int localInt2;
  int localInt3;
  uint uVar4;
  uint uVar5;
  longlong lVar6;
  uint uVar7;
  uint auStackX_8 [2];
  uint auStackX_20 [2];
  
  auStackX_20[0] = FUN_1808a5630(memorySize,resourceHandle,0);
  if (auStackX_20[0] != 0) {
    return;
  }
  localInt2 = FUN_1808afe30(*memorySize,auStackX_20);
  localUInt1 = auStackX_20[0];
  if (localInt2 != 0) {
    return;
  }
  uVar7 = auStackX_20[0] & 1;
  uVar4 = (int)*(uint *)(resourceHandle + 0x1c) >> 0x1f;
  uVar5 = auStackX_20[0] >> 1;
  if (((int)((*(uint *)(resourceHandle + 0x1c) ^ uVar4) - uVar4) < (int)uVar5) &&
     (localInt2 = FUN_180748010(resourceHandle + 0x10,uVar5), localInt2 != 0)) {
    return;
  }
  localInt2 = *(int *)(resourceHandle + 0x18);
  if (localInt2 < (int)uVar5) {
                    // WARNING: Subroutine does not return
    memset((longlong)localInt2 * 0x10 + *(longlong *)(resourceHandle + 0x10),0,
           (longlong)(int)(uVar5 - localInt2) << 4);
  }
  *(uint *)(resourceHandle + 0x18) = uVar5;
  auStackX_8[0] = 0;
  localInt2 = 0;
  if (localUInt1 >> 1 != 0) {
    do {
      localInt3 = FUN_1808dde10(memorySize,auStackX_8[0]);
      if (localInt3 != 0) {
        return;
      }
      if (*(int *)(memorySize[1] + 0x18) == 0) {
        localInt3 = FUN_180899090(*memorySize,(longlong)localInt2 * 0x10 + *(longlong *)(resourceHandle + 0x10));
      }
      else {
        localInt3 = 0x1c;
      }
      if (localInt3 != 0) {
        return;
      }
      localInt3 = FUN_1808de0e0(memorySize,auStackX_8);
      if (localInt3 != 0) {
        return;
      }
      localInt2 = localInt2 + 1;
      auStackX_8[0] = auStackX_8[0] & -uVar7;
    } while (localInt2 < (int)uVar5);
  }
  auStackX_8[0] = 0;
  localInt2 = FUN_1808afe30(*memorySize,auStackX_8);
  localUInt1 = auStackX_8[0];
  if (localInt2 != 0) {
    return;
  }
  lVar6 = (longlong)(int)auStackX_8[0];
  uVar4 = (int)*(uint *)(resourceHandle + 0x2c) >> 0x1f;
  if (((int)((*(uint *)(resourceHandle + 0x2c) ^ uVar4) - uVar4) < (int)auStackX_8[0]) &&
     (localInt2 = FUN_180849030(resourceHandle + 0x20,auStackX_8[0]), localInt2 != 0)) {
    return;
  }
  localInt2 = *(int *)(resourceHandle + 0x28);
  if (localInt2 < (int)localUInt1) {
                    // WARNING: Subroutine does not return
    memset((longlong)localInt2 + *(longlong *)(resourceHandle + 0x20),0,(longlong)(int)(localUInt1 - localInt2));
  }
  *(uint *)(resourceHandle + 0x28) = localUInt1;
  if (localUInt1 != 0) {
    if (*(int *)(memorySize[1] + 0x18) == 0) {
      localInt2 = FUN_1808aed00(*memorySize,*(uint64 *)(resourceHandle + 0x20),lVar6);
      if (localInt2 == 0) goto LAB_18089bfc7;
    }
    else {
      localInt2 = 0x1c;
    }
    if (localInt2 != 0) {
      return;
    }
  }
LAB_18089bfc7:
  if (operationFlags == 0) {
    localInt2 = FUN_1808a84c0(resourceHandle,memorySize);
  }
  else {
    localInt2 = FUN_1808ad600(memorySize,resourceHandle + 0x30);
    if (localInt2 != 0) {
      return;
    }
    localInt2 = FUN_1808ad600(memorySize,resourceHandle + 0x40);
  }
  if (localInt2 == 0) {
    func_0x000180069ee0(resourceHandle);
  }
  return;
}




// 函数: void FUN_18089be41(void)
void FUN_18089be41(void)

{
  uint in_EAX;
  int localInt1;
  int localInt2;
  uint uVar3;
  uint64 *baseRegister;
  uint uVar4;
  longlong lVar5;
  int unaff_R12D;
  longlong unaff_R15;
  uint in_stack_00000050;
  uint uStack0000000000000068;
  
  uStack0000000000000068 = in_EAX;
  localInt1 = FUN_1808afe30();
  if (localInt1 != 0) {
    return;
  }
  uVar3 = (int)*(uint *)(unaff_R15 + 0x1c) >> 0x1f;
  uVar4 = uStack0000000000000068 >> 1;
  if (((int)((*(uint *)(unaff_R15 + 0x1c) ^ uVar3) - uVar3) < (int)uVar4) &&
     (localInt1 = FUN_180748010(unaff_R15 + 0x10,uVar4), localInt1 != 0)) {
    return;
  }
  localInt1 = *(int *)(unaff_R15 + 0x18);
  if (localInt1 < (int)uVar4) {
                    // WARNING: Subroutine does not return
    memset((longlong)localInt1 * 0x10 + *(longlong *)(unaff_R15 + 0x10),0,
           (longlong)(int)(uVar4 - localInt1) << 4);
  }
  *(uint *)(unaff_R15 + 0x18) = uVar4;
  in_stack_00000050 = 0;
  localInt1 = 0;
  if (uStack0000000000000068 >> 1 != 0) {
    do {
      localInt2 = FUN_1808dde10();
      if (localInt2 != 0) {
        return;
      }
      if (*(int *)(baseRegister[1] + 0x18) == 0) {
        localInt2 = FUN_180899090(*baseRegister,(longlong)localInt1 * 0x10 + *(longlong *)(unaff_R15 + 0x10));
      }
      else {
        localInt2 = 0x1c;
      }
      if (localInt2 != 0) {
        return;
      }
      localInt2 = FUN_1808de0e0();
      if (localInt2 != 0) {
        return;
      }
      localInt1 = localInt1 + 1;
      in_stack_00000050 = in_stack_00000050 & -(uStack0000000000000068 & 1);
    } while (localInt1 < (int)uVar4);
  }
  in_stack_00000050 = 0;
  localInt2 = FUN_1808afe30(*baseRegister,&stack0x00000050);
  localInt1 = in_stack_00000050;
  if (localInt2 != 0) {
    return;
  }
  lVar5 = (longlong)(int)in_stack_00000050;
  uVar3 = (int)*(uint *)(unaff_R15 + 0x2c) >> 0x1f;
  if (((int)((*(uint *)(unaff_R15 + 0x2c) ^ uVar3) - uVar3) < (int)in_stack_00000050) &&
     (localInt2 = FUN_180849030(unaff_R15 + 0x20,in_stack_00000050), localInt2 != 0)) {
    return;
  }
  localInt2 = *(int *)(unaff_R15 + 0x28);
  if (localInt2 < localInt1) {
                    // WARNING: Subroutine does not return
    memset((longlong)localInt2 + *(longlong *)(unaff_R15 + 0x20),0,(longlong)(localInt1 - localInt2));
  }
  *(int *)(unaff_R15 + 0x28) = localInt1;
  if (localInt1 != 0) {
    if (*(int *)(baseRegister[1] + 0x18) == 0) {
      localInt1 = FUN_1808aed00(*baseRegister,*(uint64 *)(unaff_R15 + 0x20),lVar5);
      if (localInt1 == 0) goto LAB_18089bfc7;
    }
    else {
      localInt1 = 0x1c;
    }
    if (localInt1 != 0) {
      return;
    }
  }
LAB_18089bfc7:
  if (unaff_R12D == 0) {
    localInt1 = FUN_1808a84c0();
  }
  else {
    localInt1 = FUN_1808ad600();
    if (localInt1 != 0) {
      return;
    }
    localInt1 = FUN_1808ad600();
  }
  if (localInt1 == 0) {
    func_0x000180069ee0();
  }
  return;
}




// 函数: void FUN_18089c019(void)
void FUN_18089c019(void)

{
  return;
}



ulonglong FUN_18089c030(longlong resourceHandle,uint64 *memorySize)

{
  int localInt1;
  int localInt2;
  uint uVar3;
  ulonglong uVar4;
  uint uVar5;
  uint64 *puVar6;
  longlong lVar7;
  int aiStackX_10 [2];
  
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar4 = FUN_1808aed00(*memorySize,resourceHandle,4);
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  aiStackX_10[0] = 0;
  uVar4 = FUN_1808afe30(*memorySize,aiStackX_10);
  localInt2 = aiStackX_10[0];
  uVar3 = 0x1c;
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  lVar7 = (longlong)aiStackX_10[0];
  uVar5 = (int)*(uint *)(resourceHandle + 0x14) >> 0x1f;
  if (((int)((*(uint *)(resourceHandle + 0x14) ^ uVar5) - uVar5) < aiStackX_10[0]) &&
     (uVar4 = FUN_180882f00(resourceHandle + 8,aiStackX_10[0]), (int)uVar4 != 0)) {
    return uVar4;
  }
  localInt1 = *(int *)(resourceHandle + 0x10);
  if (localInt1 < localInt2) {
    puVar6 = (uint64 *)(*(longlong *)(resourceHandle + 8) + (longlong)localInt1 * 8);
    if (0 < localInt2 - localInt1) {
      uVar4 = (ulonglong)(uint)(localInt2 - localInt1);
      do {
        if (puVar6 != (uint64 *)0x0) {
          *puVar6 = 0;
        }
        puVar6 = puVar6 + 1;
        uVar4 = uVar4 - 1;
      } while (uVar4 != 0);
    }
  }
  *(int *)(resourceHandle + 0x10) = localInt2;
  if (localInt2 != 0) {
    if (*(int *)(memorySize[1] + 0x18) == 0) {
      uVar4 = FUN_1808aed00(*memorySize,*(uint64 *)(resourceHandle + 8),lVar7 << 3);
      if ((int)uVar4 == 0) goto LAB_18089c131;
    }
    else {
      uVar4 = 0x1c;
    }
    if ((int)uVar4 != 0) {
      return uVar4;
    }
  }
LAB_18089c131:
  uVar4 = FUN_1808ad600(memorySize,resourceHandle + 0x18);
  if ((int)uVar4 == 0) {
    if (*(uint *)(memorySize + 8) < 0x7c) {
      uVar3 = 0;
    }
    else if (*(int *)(memorySize[1] + 0x18) == 0) {
      uVar3 = FUN_1808aed00(*memorySize,resourceHandle + 4,4);
    }
    if (uVar3 == 0) {
      uVar4 = func_0x000180069ee0(resourceHandle);
    }
    else {
      uVar4 = (ulonglong)uVar3;
    }
  }
  return uVar4;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

ulonglong FUN_18089c190(longlong resourceHandle,uint64 *memorySize)

{
  uint64 localUInt1;
  uint32 localUInt2;
  uint32 uVar3;
  uint32 uVar4;
  uint uVar5;
  uint uVar6;
  ulonglong uVar7;
  uint32 *puVar8;
  uint uVar9;
  uint64 *plocalUInt10;
  longlong localLong11;
  longlong localLong12;
  int localInt13;
  uint64 *puStackX_18;
  uint64 *localPtr;
  uint64 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  byte localBuffer [32];
  byte localBuffer [32];
  
  uVar7 = FUN_1808ddc20(memorySize,localBuffer,1,0x4f4c4d50);
  if ((int)uVar7 != 0) {
    return uVar7;
  }
  uVar7 = FUN_1808ddc20(memorySize,localBuffer,0,0x424c4d50);
  if ((int)uVar7 != 0) {
    return uVar7;
  }
  uVar7 = FUN_180899360(memorySize,resourceHandle + 0x10);
  if ((int)uVar7 != 0) {
    return uVar7;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar7 = FUN_180899090(*memorySize,resourceHandle + 0x38);
  if ((int)uVar7 != 0) {
    return uVar7;
  }
  puVar8 = (uint32 *)FUN_180847820();
  uVar7 = 0;
  localUInt = *puVar8;
  localUInt = puVar8[1];
  localUInt = puVar8[2];
  localUInt = puVar8[3];
  uVar5 = 0;
  if (*(uint *)(memorySize + 8) < 0x6d) {
    if (*(int *)(memorySize[1] + 0x18) == 0) {
      localUInt1 = *memorySize;
      uVar7 = FUN_1808aed00(localUInt1,&localUInt,4);
      if ((int)uVar7 != 0) {
        return uVar7;
      }
      uVar7 = FUN_1808aed00(localUInt1,&localUInt,2);
      if ((int)uVar7 != 0) {
        return uVar7;
      }
      uVar7 = FUN_1808aed00(localUInt1,(longlong)&localUInt + 2,2);
      if ((int)uVar7 != 0) {
        return uVar7;
      }
      uVar7 = FUN_1808aed00(localUInt1,&localUInt,8);
    }
    else {
      uVar7 = 0x1c;
    }
  }
  if ((int)uVar7 != 0) {
    return uVar7;
  }
  if (0x81 < *(uint *)(memorySize + 8)) {
    uVar7 = FUN_1808a79f0(memorySize,resourceHandle + 0x58);
    if ((int)uVar7 != 0) {
      return uVar7;
    }
    goto LAB_18089c300;
  }
  if (*(uint *)(memorySize + 8) < 0x6a) {
    localPtr = (uint64 *)0x0;
    localUInt = 0;
    uVar6 = FUN_1808a54c0(memorySize,&localPtr,0);
    uVar7 = (ulonglong)uVar6;
    if (uVar6 != 0) {
LAB_18089c40a:
      uVar6 = localUInt._4_4_;
      if ((longlong)localUInt < 0) {
        uVar6 = -localUInt._4_4_;
      }
      localInt13 = (int)localUInt;
      uVar9 = localUInt._4_4_;
      if ((int)uVar6 < 0) {
        if (0 < (int)localUInt) {
          return uVar7;
        }
        if ((0 < (int)localUInt._4_4_) && (localPtr != (uint64 *)0x0)) {
                    // WARNING: Subroutine does not return
          utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),localPtr,&utilityMemoryDataBuffer,0x100,1);
        }
        localPtr = (uint64 *)0x0;
        localUInt = localUInt & 0xffffffff;
        uVar9 = uVar5;
      }
      if (localInt13 < 0) {
        localLong12 = (longlong)-localInt13;
        if (localInt13 < 0) {
          localLong11 = (longlong)localInt13 * 0x18 + 0x14 + (longlong)localPtr;
          do {
            puVar8 = (uint32 *)FUN_180847820();
            localUInt2 = puVar8[1];
            uVar3 = puVar8[2];
            uVar4 = puVar8[3];
            *(uint32 *)(localLong11 + -0x14) = *puVar8;
            *(uint32 *)(localLong11 + -0x10) = localUInt2;
            *(uint32 *)(localLong11 + -0xc) = uVar3;
            *(uint32 *)(localLong11 + -8) = uVar4;
            *(uint64 *)(localLong11 + -4) = 0;
            localLong12 = localLong12 + -1;
            localLong11 = localLong11 + 0x18;
          } while (localLong12 != 0);
          uVar9 = localUInt._4_4_;
        }
      }
      localUInt = localUInt & 0xffffffff00000000;
      if ((int)uVar9 < 0) {
        uVar9 = -uVar9;
      }
      if (uVar9 == 0) {
        return uVar7;
      }
      FUN_1808aef40(&localPtr,0);
      return uVar7;
    }
    if ((int)localUInt == 0) {
      localInt13 = 0;
    }
    else {
      uVar6 = (int)*(uint *)(resourceHandle + 0x54) >> 0x1f;
      plocalUInt10 = localPtr;
      if ((int)((*(uint *)(resourceHandle + 0x54) ^ uVar6) - uVar6) < (int)localUInt) {
        uVar6 = FUN_180883750(resourceHandle + 0x48,localUInt & 0xffffffff);
        uVar7 = (ulonglong)uVar6;
        plocalUInt10 = localPtr;
        if (uVar6 != 0) goto LAB_18089c40a;
      }
      for (; (localInt13 = (int)localUInt, localPtr <= plocalUInt10 &&
             (plocalUInt10 < localPtr + (longlong)localInt13 * 3)); plocalUInt10 = plocalUInt10 + 3) {
        puStackX_18 = (uint64 *)0x0;
        uVar6 = FUN_1808aec50(resourceHandle + 0x48,&puStackX_18);
        uVar7 = (ulonglong)uVar6;
        if (uVar6 != 0) goto LAB_18089c40a;
        localUInt1 = plocalUInt10[1];
        *puStackX_18 = *plocalUInt10;
        puStackX_18[1] = localUInt1;
        *(uint32 *)(puStackX_18 + 2) = *(uint32 *)(plocalUInt10 + 2);
        *(float *)((longlong)puStackX_18 + 0x14) =
             *(float *)((longlong)plocalUInt10 + 0x14) + *(float *)(plocalUInt10 + 2);
        *(byte *)(puStackX_18 + 3) = 1;
      }
    }
    uVar6 = localUInt._4_4_;
    if ((longlong)localUInt < 0) {
      uVar6 = -localUInt._4_4_;
    }
    uVar9 = localUInt._4_4_;
    if ((int)uVar6 < 0) {
      if (0 < localInt13) goto LAB_18089c586;
      if ((0 < (int)localUInt._4_4_) && (localPtr != (uint64 *)0x0)) {
                    // WARNING: Subroutine does not return
        utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),localPtr,&utilityMemoryDataBuffer,0x100,1);
      }
      localPtr = (uint64 *)0x0;
      localUInt = localUInt & 0xffffffff;
      uVar9 = uVar5;
    }
    if (localInt13 < 0) {
      localLong12 = (longlong)-localInt13;
      if (localInt13 < 0) {
        localLong11 = (longlong)localInt13 * 0x18 + 0x14 + (longlong)localPtr;
        do {
          puVar8 = (uint32 *)FUN_180847820();
          localUInt2 = puVar8[1];
          uVar3 = puVar8[2];
          uVar4 = puVar8[3];
          *(uint32 *)(localLong11 + -0x14) = *puVar8;
          *(uint32 *)(localLong11 + -0x10) = localUInt2;
          *(uint32 *)(localLong11 + -0xc) = uVar3;
          *(uint32 *)(localLong11 + -8) = uVar4;
          *(uint64 *)(localLong11 + -4) = 0;
          localLong12 = localLong12 + -1;
          localLong11 = localLong11 + 0x18;
        } while (localLong12 != 0);
        uVar9 = localUInt._4_4_;
      }
    }
    localUInt = localUInt & 0xffffffff00000000;
    if ((int)uVar9 < 0) {
      uVar9 = -uVar9;
    }
    if (uVar9 != 0) {
      FUN_1808aef40(&localPtr,0);
    }
  }
  else {
    uVar7 = FUN_1808a5780(memorySize,resourceHandle + 0x48);
    if ((int)uVar7 != 0) {
      return uVar7;
    }
  }
LAB_18089c586:
  for (uVar7 = *(ulonglong *)(resourceHandle + 0x48);
      (*(ulonglong *)(resourceHandle + 0x48) <= uVar7 &&
      (uVar7 < (longlong)*(int *)(resourceHandle + 0x50) * 0x1c + *(ulonglong *)(resourceHandle + 0x48)));
      uVar7 = uVar7 + 0x1c) {
    FUN_1807d3e20(resourceHandle + 0x58);
  }
LAB_18089c300:
  if ((0x70 < *(uint *)(memorySize + 8)) && (uVar5 = 0x1c, *(int *)(memorySize[1] + 0x18) == 0)) {
    uVar5 = FUN_1808aed00(*memorySize,resourceHandle + 0x68,4);
  }
  if (uVar5 != 0) {
    return (ulonglong)uVar5;
  }
                    // WARNING: Subroutine does not return
  FUN_1808ddf80(memorySize,localBuffer);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint64 * FUN_18089c1fb(void)

{
  uint64 localUInt1;
  uint32 localUInt2;
  uint32 uVar3;
  uint32 uVar4;
  float fVar5;
  float fVar6;
  float fVar7;
  uint uVar8;
  uint uVar9;
  uint localUInt10;
  longlong inputRegister;
  uint64 *plocalUInt11;
  uint32 *plocalUInt12;
  uint64 *plocalUInt13;
  float *pfVar14;
  ulonglong localUInt15;
  uint64 *plocalUInt16;
  longlong localLong17;
  longlong unaff_RBP;
  longlong unaff_RSI;
  uint64 *unaff_RDI;
  longlong localLong18;
  int localInt19;
  uint32 extraout_XMM0_Da;
  uint32 localUInt20;
  float extraout_XMM0_Da_00;
  float extraout_XMM0_Da_01;
  float extraout_XMM0_Da_02;
  float extraout_XMM0_Da_03;
  float extraout_XMM0_Da_04;
  float fVar21;
  
  if (*(int *)(inputRegister + 0x18) != 0) {
    return (uint64 *)0x1c;
  }
  plocalUInt11 = (uint64 *)FUN_180899090(*unaff_RDI,unaff_RSI + 0x38);
  if ((int)plocalUInt11 != 0) {
    return plocalUInt11;
  }
  plocalUInt12 = (uint32 *)FUN_180847820();
  plocalUInt11 = (uint64 *)0x0;
  uVar9 = *(uint *)(unaff_RDI + 8);
  localUInt20 = *plocalUInt12;
  localUInt2 = plocalUInt12[1];
  uVar3 = plocalUInt12[2];
  uVar4 = plocalUInt12[3];
  *(uint32 *)(unaff_RBP + -0x19) = localUInt20;
  *(uint32 *)(unaff_RBP + -0x15) = localUInt2;
  *(uint32 *)(unaff_RBP + -0x11) = uVar3;
  *(uint32 *)(unaff_RBP + -0xd) = uVar4;
  uVar8 = 0;
  plocalUInt13 = plocalUInt11;
  if (uVar9 < 0x6d) {
    if (*(int *)(unaff_RDI[1] + 0x18) == 0) {
      localUInt1 = *unaff_RDI;
      plocalUInt13 = (uint64 *)FUN_1808aed00(localUInt1,unaff_RBP + -0x19,4);
      if ((int)plocalUInt13 != 0) {
        return plocalUInt13;
      }
      plocalUInt13 = (uint64 *)FUN_1808aed00(localUInt1,unaff_RBP + -0x15,2);
      if ((int)plocalUInt13 != 0) {
        return plocalUInt13;
      }
      plocalUInt13 = (uint64 *)FUN_1808aed00(localUInt1,unaff_RBP + -0x13,2);
      if ((int)plocalUInt13 != 0) {
        return plocalUInt13;
      }
      plocalUInt13 = (uint64 *)FUN_1808aed00(localUInt1,unaff_RBP + -0x11,8);
      localUInt20 = extraout_XMM0_Da;
    }
    else {
      plocalUInt13 = (uint64 *)0x1c;
    }
  }
  if ((int)plocalUInt13 != 0) {
    return plocalUInt13;
  }
  if (0x81 < *(uint *)(unaff_RDI + 8)) {
    plocalUInt11 = (uint64 *)FUN_1808a79f0(localUInt20,unaff_RSI + 0x58);
    fVar21 = extraout_XMM0_Da_00;
    if ((int)plocalUInt11 != 0) {
      return plocalUInt11;
    }
    goto LAB_18089c300;
  }
  if (*(uint *)(unaff_RDI + 8) < 0x6a) {
    *(uint64 *)(unaff_RBP + -0x29) = 0;
    *(uint64 *)(unaff_RBP + -0x21) = 0;
    uVar9 = FUN_1808a54c0(localUInt20,unaff_RBP + -0x29,0);
    plocalUInt13 = (uint64 *)(ulonglong)uVar9;
    if (uVar9 != 0) {
LAB_18089c40a:
      uVar9 = *(uint *)(unaff_RBP + -0x1d);
      localUInt10 = uVar9;
      if ((int)uVar9 < 0) {
        localUInt10 = -uVar9;
      }
      localInt19 = *(int *)(unaff_RBP + -0x21);
      if ((int)localUInt10 < 0) {
        if (0 < localInt19) {
          return plocalUInt13;
        }
        if ((0 < (int)uVar9) && (*(longlong *)(unaff_RBP + -0x29) != 0)) {
                    // WARNING: Subroutine does not return
          utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),*(longlong *)(unaff_RBP + -0x29),
                        &utilityMemoryDataBuffer,0x100,1);
        }
        *(uint64 *)(unaff_RBP + -0x29) = 0;
        *(uint32 *)(unaff_RBP + -0x1d) = 0;
        uVar9 = uVar8;
      }
      else {
        plocalUInt11 = *(uint64 **)(unaff_RBP + -0x29);
      }
      if (localInt19 < 0) {
        localLong18 = (longlong)-localInt19;
        if (localInt19 < 0) {
          localLong17 = (longlong)localInt19 * 0x18 + 0x14 + (longlong)plocalUInt11;
          do {
            plocalUInt12 = (uint32 *)FUN_180847820();
            localUInt20 = plocalUInt12[1];
            localUInt2 = plocalUInt12[2];
            uVar3 = plocalUInt12[3];
            *(uint32 *)(localLong17 + -0x14) = *plocalUInt12;
            *(uint32 *)(localLong17 + -0x10) = localUInt20;
            *(uint32 *)(localLong17 + -0xc) = localUInt2;
            *(uint32 *)(localLong17 + -8) = uVar3;
            *(uint64 *)(localLong17 + -4) = 0;
            localLong18 = localLong18 + -1;
            localLong17 = localLong17 + 0x18;
          } while (localLong18 != 0);
          uVar9 = *(uint *)(unaff_RBP + -0x1d);
        }
      }
      *(uint32 *)(unaff_RBP + -0x21) = 0;
      if ((int)uVar9 < 0) {
        uVar9 = -uVar9;
      }
      if (uVar9 == 0) {
        return plocalUInt13;
      }
      FUN_1808aef40(unaff_RBP + -0x29,0);
      return plocalUInt13;
    }
    localInt19 = *(int *)(unaff_RBP + -0x21);
    fVar21 = extraout_XMM0_Da_03;
    if (localInt19 == 0) {
      plocalUInt13 = *(uint64 **)(unaff_RBP + -0x29);
    }
    else {
      uVar9 = (int)*(uint *)(unaff_RSI + 0x54) >> 0x1f;
      if ((int)((*(uint *)(unaff_RSI + 0x54) ^ uVar9) - uVar9) < localInt19) {
        uVar9 = FUN_180883750(unaff_RSI + 0x48,localInt19);
        plocalUInt13 = (uint64 *)(ulonglong)uVar9;
        if (uVar9 != 0) goto LAB_18089c40a;
        localInt19 = *(int *)(unaff_RBP + -0x21);
        fVar21 = extraout_XMM0_Da_04;
      }
      plocalUInt13 = *(uint64 **)(unaff_RBP + -0x29);
      for (plocalUInt16 = plocalUInt13; (plocalUInt13 <= plocalUInt16 && (plocalUInt16 < plocalUInt13 + (longlong)localInt19 * 3));
          plocalUInt16 = plocalUInt16 + 3) {
        *(uint64 *)(unaff_RBP + 0x77) = 0;
        uVar9 = FUN_1808aec50(unaff_RSI + 0x48,unaff_RBP + 0x77);
        plocalUInt13 = (uint64 *)(ulonglong)uVar9;
        if (uVar9 != 0) goto LAB_18089c40a;
        localUInt1 = plocalUInt16[1];
        plocalUInt13 = *(uint64 **)(unaff_RBP + 0x77);
        *plocalUInt13 = *plocalUInt16;
        plocalUInt13[1] = localUInt1;
        *(uint32 *)(plocalUInt13 + 2) = *(uint32 *)(plocalUInt16 + 2);
        fVar21 = *(float *)((longlong)plocalUInt16 + 0x14) + *(float *)(plocalUInt16 + 2);
        *(float *)((longlong)plocalUInt13 + 0x14) = fVar21;
        *(byte *)(plocalUInt13 + 3) = 1;
        localInt19 = *(int *)(unaff_RBP + -0x21);
        plocalUInt13 = *(uint64 **)(unaff_RBP + -0x29);
      }
    }
    uVar9 = *(uint *)(unaff_RBP + -0x1d);
    localUInt10 = uVar9;
    if ((int)uVar9 < 0) {
      localUInt10 = -uVar9;
    }
    if ((int)localUInt10 < 0) {
      if (0 < localInt19) goto LAB_18089c586;
      if ((0 < (int)uVar9) && (plocalUInt13 != (uint64 *)0x0)) {
                    // WARNING: Subroutine does not return
        utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),plocalUInt13,&utilityMemoryDataBuffer,0x100,1);
      }
      *(uint64 *)(unaff_RBP + -0x29) = 0;
      *(uint32 *)(unaff_RBP + -0x1d) = 0;
      plocalUInt13 = plocalUInt11;
      uVar9 = uVar8;
    }
    if (localInt19 < 0) {
      localLong18 = (longlong)-localInt19;
      if (localInt19 < 0) {
        localLong17 = (longlong)localInt19 * 0x18 + 0x14 + (longlong)plocalUInt13;
        do {
          pfVar14 = (float *)FUN_180847820();
          fVar21 = *pfVar14;
          fVar5 = pfVar14[1];
          fVar6 = pfVar14[2];
          fVar7 = pfVar14[3];
          *(float *)(localLong17 + -0x14) = fVar21;
          *(float *)(localLong17 + -0x10) = fVar5;
          *(float *)(localLong17 + -0xc) = fVar6;
          *(float *)(localLong17 + -8) = fVar7;
          *(uint64 *)(localLong17 + -4) = 0;
          localLong18 = localLong18 + -1;
          localLong17 = localLong17 + 0x18;
        } while (localLong18 != 0);
        uVar9 = *(uint *)(unaff_RBP + -0x1d);
      }
    }
    *(uint32 *)(unaff_RBP + -0x21) = 0;
    if ((int)uVar9 < 0) {
      uVar9 = -uVar9;
    }
    if (uVar9 != 0) {
      fVar21 = (float)FUN_1808aef40(unaff_RBP + -0x29,0);
    }
  }
  else {
    plocalUInt11 = (uint64 *)FUN_1808a5780(localUInt20,unaff_RSI + 0x48);
    fVar21 = extraout_XMM0_Da_02;
    if ((int)plocalUInt11 != 0) {
      return plocalUInt11;
    }
  }
LAB_18089c586:
  for (localUInt15 = *(ulonglong *)(unaff_RSI + 0x48);
      (*(ulonglong *)(unaff_RSI + 0x48) <= localUInt15 &&
      (localUInt15 < (longlong)*(int *)(unaff_RSI + 0x50) * 0x1c + *(ulonglong *)(unaff_RSI + 0x48)));
      localUInt15 = localUInt15 + 0x1c) {
    fVar21 = (float)FUN_1807d3e20(unaff_RSI + 0x58);
  }
LAB_18089c300:
  if ((0x70 < *(uint *)(unaff_RDI + 8)) && (uVar8 = 0x1c, *(int *)(unaff_RDI[1] + 0x18) == 0)) {
    uVar8 = FUN_1808aed00(*unaff_RDI,unaff_RSI + 0x68,4);
    fVar21 = extraout_XMM0_Da_01;
  }
  if (uVar8 != 0) {
    return (uint64 *)(ulonglong)uVar8;
  }
                    // WARNING: Subroutine does not return
  FUN_1808ddf80(fVar21,unaff_RBP + -9);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

uint64 * FUN_18089c22e(void)

{
  uint64 localUInt1;
  uint32 localUInt2;
  uint32 uVar3;
  uint32 uVar4;
  float fVar5;
  float fVar6;
  float fVar7;
  uint uVar8;
  uint uVar9;
  uint localUInt10;
  uint32 *plocalUInt11;
  uint64 *plocalUInt12;
  uint64 *plocalUInt13;
  float *pfVar14;
  ulonglong localUInt15;
  uint64 *plocalUInt16;
  longlong localLong17;
  longlong unaff_RBP;
  longlong unaff_RSI;
  uint64 *unaff_RDI;
  longlong localLong18;
  int localInt19;
  uint32 extraout_XMM0_Da;
  uint32 localUInt20;
  float extraout_XMM0_Da_00;
  float extraout_XMM0_Da_01;
  float extraout_XMM0_Da_02;
  float extraout_XMM0_Da_03;
  float extraout_XMM0_Da_04;
  float fVar21;
  
  plocalUInt11 = (uint32 *)FUN_180847820();
  plocalUInt13 = (uint64 *)0x0;
  uVar9 = *(uint *)(unaff_RDI + 8);
  localUInt20 = *plocalUInt11;
  localUInt2 = plocalUInt11[1];
  uVar3 = plocalUInt11[2];
  uVar4 = plocalUInt11[3];
  *(uint32 *)(unaff_RBP + -0x19) = localUInt20;
  *(uint32 *)(unaff_RBP + -0x15) = localUInt2;
  *(uint32 *)(unaff_RBP + -0x11) = uVar3;
  *(uint32 *)(unaff_RBP + -0xd) = uVar4;
  uVar8 = 0;
  plocalUInt12 = plocalUInt13;
  if (uVar9 < 0x6d) {
    if (*(int *)(unaff_RDI[1] + 0x18) == 0) {
      localUInt1 = *unaff_RDI;
      plocalUInt12 = (uint64 *)FUN_1808aed00(localUInt1,unaff_RBP + -0x19,4);
      if ((int)plocalUInt12 != 0) {
        return plocalUInt12;
      }
      plocalUInt12 = (uint64 *)FUN_1808aed00(localUInt1,unaff_RBP + -0x15,2);
      if ((int)plocalUInt12 != 0) {
        return plocalUInt12;
      }
      plocalUInt12 = (uint64 *)FUN_1808aed00(localUInt1,unaff_RBP + -0x13,2);
      if ((int)plocalUInt12 != 0) {
        return plocalUInt12;
      }
      plocalUInt12 = (uint64 *)FUN_1808aed00(localUInt1,unaff_RBP + -0x11,8);
      localUInt20 = extraout_XMM0_Da;
    }
    else {
      plocalUInt12 = (uint64 *)0x1c;
    }
  }
  if ((int)plocalUInt12 != 0) {
    return plocalUInt12;
  }
  if (0x81 < *(uint *)(unaff_RDI + 8)) {
    plocalUInt13 = (uint64 *)FUN_1808a79f0(localUInt20,unaff_RSI + 0x58);
    fVar21 = extraout_XMM0_Da_00;
    if ((int)plocalUInt13 != 0) {
      return plocalUInt13;
    }
    goto LAB_18089c300;
  }
  if (*(uint *)(unaff_RDI + 8) < 0x6a) {
    *(uint64 *)(unaff_RBP + -0x29) = 0;
    *(uint64 *)(unaff_RBP + -0x21) = 0;
    uVar9 = FUN_1808a54c0(localUInt20,unaff_RBP + -0x29,0);
    plocalUInt12 = (uint64 *)(ulonglong)uVar9;
    if (uVar9 != 0) {
LAB_18089c40a:
      uVar9 = *(uint *)(unaff_RBP + -0x1d);
      localUInt10 = uVar9;
      if ((int)uVar9 < 0) {
        localUInt10 = -uVar9;
      }
      localInt19 = *(int *)(unaff_RBP + -0x21);
      if ((int)localUInt10 < 0) {
        if (0 < localInt19) {
          return plocalUInt12;
        }
        if ((0 < (int)uVar9) && (*(longlong *)(unaff_RBP + -0x29) != 0)) {
                    // WARNING: Subroutine does not return
          utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),*(longlong *)(unaff_RBP + -0x29),
                        &utilityMemoryDataBuffer,0x100,1);
        }
        *(uint64 *)(unaff_RBP + -0x29) = 0;
        *(uint32 *)(unaff_RBP + -0x1d) = 0;
        uVar9 = uVar8;
      }
      else {
        plocalUInt13 = *(uint64 **)(unaff_RBP + -0x29);
      }
      if (localInt19 < 0) {
        localLong18 = (longlong)-localInt19;
        if (localInt19 < 0) {
          localLong17 = (longlong)localInt19 * 0x18 + 0x14 + (longlong)plocalUInt13;
          do {
            plocalUInt11 = (uint32 *)FUN_180847820();
            localUInt20 = plocalUInt11[1];
            localUInt2 = plocalUInt11[2];
            uVar3 = plocalUInt11[3];
            *(uint32 *)(localLong17 + -0x14) = *plocalUInt11;
            *(uint32 *)(localLong17 + -0x10) = localUInt20;
            *(uint32 *)(localLong17 + -0xc) = localUInt2;
            *(uint32 *)(localLong17 + -8) = uVar3;
            *(uint64 *)(localLong17 + -4) = 0;
            localLong18 = localLong18 + -1;
            localLong17 = localLong17 + 0x18;
          } while (localLong18 != 0);
          uVar9 = *(uint *)(unaff_RBP + -0x1d);
        }
      }
      *(uint32 *)(unaff_RBP + -0x21) = 0;
      if ((int)uVar9 < 0) {
        uVar9 = -uVar9;
      }
      if (uVar9 == 0) {
        return plocalUInt12;
      }
      FUN_1808aef40(unaff_RBP + -0x29,0);
      return plocalUInt12;
    }
    localInt19 = *(int *)(unaff_RBP + -0x21);
    fVar21 = extraout_XMM0_Da_03;
    if (localInt19 == 0) {
      plocalUInt12 = *(uint64 **)(unaff_RBP + -0x29);
    }
    else {
      uVar9 = (int)*(uint *)(unaff_RSI + 0x54) >> 0x1f;
      if ((int)((*(uint *)(unaff_RSI + 0x54) ^ uVar9) - uVar9) < localInt19) {
        uVar9 = FUN_180883750(unaff_RSI + 0x48,localInt19);
        plocalUInt12 = (uint64 *)(ulonglong)uVar9;
        if (uVar9 != 0) goto LAB_18089c40a;
        localInt19 = *(int *)(unaff_RBP + -0x21);
        fVar21 = extraout_XMM0_Da_04;
      }
      plocalUInt12 = *(uint64 **)(unaff_RBP + -0x29);
      for (plocalUInt16 = plocalUInt12; (plocalUInt12 <= plocalUInt16 && (plocalUInt16 < plocalUInt12 + (longlong)localInt19 * 3));
          plocalUInt16 = plocalUInt16 + 3) {
        *(uint64 *)(unaff_RBP + 0x77) = 0;
        uVar9 = FUN_1808aec50(unaff_RSI + 0x48,unaff_RBP + 0x77);
        plocalUInt12 = (uint64 *)(ulonglong)uVar9;
        if (uVar9 != 0) goto LAB_18089c40a;
        localUInt1 = plocalUInt16[1];
        plocalUInt12 = *(uint64 **)(unaff_RBP + 0x77);
        *plocalUInt12 = *plocalUInt16;
        plocalUInt12[1] = localUInt1;
        *(uint32 *)(plocalUInt12 + 2) = *(uint32 *)(plocalUInt16 + 2);
        fVar21 = *(float *)((longlong)plocalUInt16 + 0x14) + *(float *)(plocalUInt16 + 2);
        *(float *)((longlong)plocalUInt12 + 0x14) = fVar21;
        *(byte *)(plocalUInt12 + 3) = 1;
        localInt19 = *(int *)(unaff_RBP + -0x21);
        plocalUInt12 = *(uint64 **)(unaff_RBP + -0x29);
      }
    }
    uVar9 = *(uint *)(unaff_RBP + -0x1d);
    localUInt10 = uVar9;
    if ((int)uVar9 < 0) {
      localUInt10 = -uVar9;
    }
    if ((int)localUInt10 < 0) {
      if (0 < localInt19) goto LAB_18089c586;
      if ((0 < (int)uVar9) && (plocalUInt12 != (uint64 *)0x0)) {
                    // WARNING: Subroutine does not return
        utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),plocalUInt12,&utilityMemoryDataBuffer,0x100,1);
      }
      *(uint64 *)(unaff_RBP + -0x29) = 0;
      *(uint32 *)(unaff_RBP + -0x1d) = 0;
      plocalUInt12 = plocalUInt13;
      uVar9 = uVar8;
    }
    if (localInt19 < 0) {
      localLong18 = (longlong)-localInt19;
      if (localInt19 < 0) {
        localLong17 = (longlong)localInt19 * 0x18 + 0x14 + (longlong)plocalUInt12;
        do {
          pfVar14 = (float *)FUN_180847820();
          fVar21 = *pfVar14;
          fVar5 = pfVar14[1];
          fVar6 = pfVar14[2];
          fVar7 = pfVar14[3];
          *(float *)(localLong17 + -0x14) = fVar21;
          *(float *)(localLong17 + -0x10) = fVar5;
          *(float *)(localLong17 + -0xc) = fVar6;
          *(float *)(localLong17 + -8) = fVar7;
          *(uint64 *)(localLong17 + -4) = 0;
          localLong18 = localLong18 + -1;
          localLong17 = localLong17 + 0x18;
        } while (localLong18 != 0);
        uVar9 = *(uint *)(unaff_RBP + -0x1d);
      }
    }
    *(uint32 *)(unaff_RBP + -0x21) = 0;
    if ((int)uVar9 < 0) {
      uVar9 = -uVar9;
    }
    if (uVar9 != 0) {
      fVar21 = (float)FUN_1808aef40(unaff_RBP + -0x29,0);
    }
  }
  else {
    plocalUInt13 = (uint64 *)FUN_1808a5780(localUInt20,unaff_RSI + 0x48);
    fVar21 = extraout_XMM0_Da_02;
    if ((int)plocalUInt13 != 0) {
      return plocalUInt13;
    }
  }
LAB_18089c586:
  for (localUInt15 = *(ulonglong *)(unaff_RSI + 0x48);
      (*(ulonglong *)(unaff_RSI + 0x48) <= localUInt15 &&
      (localUInt15 < (longlong)*(int *)(unaff_RSI + 0x50) * 0x1c + *(ulonglong *)(unaff_RSI + 0x48)));
      localUInt15 = localUInt15 + 0x1c) {
    fVar21 = (float)FUN_1807d3e20(unaff_RSI + 0x58);
  }
LAB_18089c300:
  if ((0x70 < *(uint *)(unaff_RDI + 8)) && (uVar8 = 0x1c, *(int *)(unaff_RDI[1] + 0x18) == 0)) {
    uVar8 = FUN_1808aed00(*unaff_RDI,unaff_RSI + 0x68,4);
    fVar21 = extraout_XMM0_Da_01;
  }
  if (uVar8 != 0) {
    return (uint64 *)(ulonglong)uVar8;
  }
                    // WARNING: Subroutine does not return
  FUN_1808ddf80(fVar21,unaff_RBP + -9);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

ulonglong FUN_18089c2d8(uint64 resourceHandle)

{
  uint32 localUInt1;
  uint32 localUInt2;
  uint32 uVar3;
  float fVar4;
  float fVar5;
  float fVar6;
  uint64 uVar7;
  uint in_EAX;
  uint uVar8;
  uint uVar9;
  uint localUInt10;
  ulonglong localUInt11;
  uint32 *plocalUInt12;
  float *pfVar13;
  uint64 *plocalUInt14;
  uint64 *plocalUInt15;
  longlong localLong16;
  longlong unaff_RBP;
  longlong unaff_RSI;
  uint64 *unaff_RDI;
  longlong localLong17;
  int localInt18;
  uint64 *unaff_R12;
  uint unaff_R15D;
  bool bVar19;
  float extraout_XMM0_Da;
  float extraout_XMM0_Da_00;
  float extraout_XMM0_Da_01;
  float extraout_XMM0_Da_02;
  float extraout_XMM0_Da_03;
  float fVar20;
  
  uVar8 = (uint)unaff_R12;
  if (0x81 < in_EAX) {
    localUInt11 = FUN_1808a79f0(resourceHandle,unaff_RSI + 0x58);
    fVar20 = extraout_XMM0_Da;
    if ((int)localUInt11 != 0) {
      return localUInt11;
    }
    goto LAB_18089c300;
  }
  if (in_EAX < 0x6a) {
    *(uint64 **)(unaff_RBP + -0x29) = unaff_R12;
    *(uint64 **)(unaff_RBP + -0x21) = unaff_R12;
    uVar9 = FUN_1808a54c0(resourceHandle,unaff_RBP + -0x29,0);
    localUInt11 = (ulonglong)uVar9;
    if (uVar9 != 0) {
LAB_18089c40a:
      uVar9 = *(uint *)(unaff_RBP + -0x1d);
      localUInt10 = uVar9;
      if ((int)uVar9 < 0) {
        localUInt10 = -uVar9;
      }
      localInt18 = *(int *)(unaff_RBP + -0x21);
      if ((int)localUInt10 < 0) {
        if (0 < localInt18) {
          return localUInt11;
        }
        if ((0 < (int)uVar9) && (*(longlong *)(unaff_RBP + -0x29) != 0)) {
                    // WARNING: Subroutine does not return
          utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),*(longlong *)(unaff_RBP + -0x29),
                        &utilityMemoryDataBuffer,0x100,1);
        }
        *(uint64 **)(unaff_RBP + -0x29) = unaff_R12;
        *(uint *)(unaff_RBP + -0x1d) = uVar8;
        plocalUInt14 = unaff_R12;
        uVar9 = uVar8;
      }
      else {
        plocalUInt14 = *(uint64 **)(unaff_RBP + -0x29);
      }
      if (localInt18 < 0) {
        localLong17 = (longlong)-localInt18;
        if (localInt18 < 0) {
          localLong16 = (longlong)localInt18 * 0x18 + 0x14 + (longlong)plocalUInt14;
          do {
            plocalUInt12 = (uint32 *)FUN_180847820();
            localUInt1 = plocalUInt12[1];
            localUInt2 = plocalUInt12[2];
            uVar3 = plocalUInt12[3];
            *(uint32 *)(localLong16 + -0x14) = *plocalUInt12;
            *(uint32 *)(localLong16 + -0x10) = localUInt1;
            *(uint32 *)(localLong16 + -0xc) = localUInt2;
            *(uint32 *)(localLong16 + -8) = uVar3;
            *(uint64 **)(localLong16 + -4) = unaff_R12;
            localLong17 = localLong17 + -1;
            localLong16 = localLong16 + 0x18;
          } while (localLong17 != 0);
          uVar9 = *(uint *)(unaff_RBP + -0x1d);
        }
      }
      *(uint *)(unaff_RBP + -0x21) = uVar8;
      if ((int)uVar9 < 0) {
        uVar9 = -uVar9;
      }
      if (uVar9 == 0) {
        return localUInt11;
      }
      FUN_1808aef40(unaff_RBP + -0x29,0);
      return localUInt11;
    }
    localInt18 = *(int *)(unaff_RBP + -0x21);
    fVar20 = extraout_XMM0_Da_02;
    if (localInt18 == 0) {
      plocalUInt14 = *(uint64 **)(unaff_RBP + -0x29);
    }
    else {
      uVar9 = (int)*(uint *)(unaff_RSI + 0x54) >> 0x1f;
      if ((int)((*(uint *)(unaff_RSI + 0x54) ^ uVar9) - uVar9) < localInt18) {
        uVar9 = FUN_180883750(unaff_RSI + 0x48,localInt18);
        localUInt11 = (ulonglong)uVar9;
        if (uVar9 != 0) goto LAB_18089c40a;
        localInt18 = *(int *)(unaff_RBP + -0x21);
        fVar20 = extraout_XMM0_Da_03;
      }
      plocalUInt14 = *(uint64 **)(unaff_RBP + -0x29);
      for (plocalUInt15 = plocalUInt14; (plocalUInt14 <= plocalUInt15 && (plocalUInt15 < plocalUInt14 + (longlong)localInt18 * 3));
          plocalUInt15 = plocalUInt15 + 3) {
        *(uint64 **)(unaff_RBP + 0x77) = unaff_R12;
        uVar9 = FUN_1808aec50(unaff_RSI + 0x48,unaff_RBP + 0x77);
        localUInt11 = (ulonglong)uVar9;
        if (uVar9 != 0) goto LAB_18089c40a;
        uVar7 = plocalUInt15[1];
        plocalUInt14 = *(uint64 **)(unaff_RBP + 0x77);
        *plocalUInt14 = *plocalUInt15;
        plocalUInt14[1] = uVar7;
        *(uint32 *)(plocalUInt14 + 2) = *(uint32 *)(plocalUInt15 + 2);
        fVar20 = *(float *)((longlong)plocalUInt15 + 0x14) + *(float *)(plocalUInt15 + 2);
        *(float *)((longlong)plocalUInt14 + 0x14) = fVar20;
        *(byte *)(plocalUInt14 + 3) = 1;
        localInt18 = *(int *)(unaff_RBP + -0x21);
        plocalUInt14 = *(uint64 **)(unaff_RBP + -0x29);
      }
    }
    uVar9 = *(uint *)(unaff_RBP + -0x1d);
    localUInt10 = uVar9;
    if ((int)uVar9 < 0) {
      localUInt10 = -uVar9;
    }
    if ((int)localUInt10 < 0) {
      if (0 < localInt18) goto LAB_18089c586;
      if ((0 < (int)uVar9) && (plocalUInt14 != (uint64 *)0x0)) {
                    // WARNING: Subroutine does not return
        utilityWriteMemoryData(*(uint64 *)(utilitySystemDataTable + 0x1a0),plocalUInt14,&utilityMemoryDataBuffer,0x100,1);
      }
      *(uint64 **)(unaff_RBP + -0x29) = unaff_R12;
      *(uint *)(unaff_RBP + -0x1d) = uVar8;
      plocalUInt14 = unaff_R12;
      uVar9 = uVar8;
    }
    if (localInt18 < 0) {
      localLong17 = (longlong)-localInt18;
      if (localInt18 < 0) {
        localLong16 = (longlong)localInt18 * 0x18 + 0x14 + (longlong)plocalUInt14;
        do {
          pfVar13 = (float *)FUN_180847820();
          fVar20 = *pfVar13;
          fVar4 = pfVar13[1];
          fVar5 = pfVar13[2];
          fVar6 = pfVar13[3];
          *(float *)(localLong16 + -0x14) = fVar20;
          *(float *)(localLong16 + -0x10) = fVar4;
          *(float *)(localLong16 + -0xc) = fVar5;
          *(float *)(localLong16 + -8) = fVar6;
          *(uint64 **)(localLong16 + -4) = unaff_R12;
          localLong17 = localLong17 + -1;
          localLong16 = localLong16 + 0x18;
        } while (localLong17 != 0);
        uVar9 = *(uint *)(unaff_RBP + -0x1d);
      }
    }
    *(uint *)(unaff_RBP + -0x21) = uVar8;
    if ((int)uVar9 < 0) {
      uVar9 = -uVar9;
    }
    if (uVar9 != 0) {
      fVar20 = (float)FUN_1808aef40(unaff_RBP + -0x29,0);
    }
  }
  else {
    localUInt11 = FUN_1808a5780(resourceHandle,unaff_RSI + 0x48);
    fVar20 = extraout_XMM0_Da_01;
    if ((int)localUInt11 != 0) {
      return localUInt11;
    }
  }
LAB_18089c586:
  for (localUInt11 = *(ulonglong *)(unaff_RSI + 0x48);
      (*(ulonglong *)(unaff_RSI + 0x48) <= localUInt11 &&
      (localUInt11 < (longlong)*(int *)(unaff_RSI + 0x50) * 0x1c + *(ulonglong *)(unaff_RSI + 0x48)));
      localUInt11 = localUInt11 + 0x1c) {
    fVar20 = (float)FUN_1807d3e20(unaff_RSI + 0x58);
  }
LAB_18089c300:
  if ((0x70 < *(uint *)(unaff_RDI + 8)) &&
     (bVar19 = *(uint *)(unaff_RDI[1] + 0x18) == uVar8, uVar8 = unaff_R15D, bVar19)) {
    uVar8 = FUN_1808aed00(*unaff_RDI,unaff_RSI + 0x68,4);
    fVar20 = extraout_XMM0_Da_00;
  }
  if (uVar8 != 0) {
    return (ulonglong)uVar8;
  }
                    // WARNING: Subroutine does not return
  FUN_1808ddf80(fVar20,unaff_RBP + -9);
}




// 函数: void FUN_18089c606(void)
void FUN_18089c606(void)

{
  return;
}




// 函数: void FUN_18089c616(void)
void FUN_18089c616(void)

{
  return;
}




// 函数: void FUN_18089c61e(void)
void FUN_18089c61e(void)

{
  return;
}



ulonglong FUN_18089c630(longlong resourceHandle,longlong *memorySize)

{
  longlong *plocalLong1;
  uint localUInt2;
  ulonglong uVar3;
  uint32 uVar4;
  uint uVar5;
  uint uVar7;
  uint uVar8;
  uint uVar9;
  uint auStackX_18 [2];
  uint auStackX_20 [2];
  uint localUInt;
  uint localUInt;
  byte localBuffer [32];
  byte localBuffer [40];
  ulonglong uVar6;
  
  uVar5 = 1;
  uVar3 = FUN_1808ddc20(memorySize,localBuffer,1,0x4d524150);
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  uVar3 = FUN_1808ddc20(memorySize,localBuffer,0,0x424d5250);
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  uVar3 = FUN_180899360(memorySize,resourceHandle + 0x10);
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  uVar4 = 4;
  uVar6 = 0;
  uVar8 = 0;
  uVar3 = uVar6;
  if (0x6f < *(uint *)(memorySize + 8)) {
    if (*(int *)(memorySize[1] + 0x18) == 0) {
      uVar3 = FUN_1808aed00(*memorySize,resourceHandle + 0x34,4);
    }
    else {
      uVar3 = 0x1c;
    }
  }
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  uVar9 = uVar8;
  if (*(uint *)(memorySize + 8) < 0x70) {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      uVar9 = 0x1c;
      goto LAB_18089c78f;
    }
    plocalLong1 = (longlong *)*memorySize;
    if (*plocalLong1 == 0) {
      uVar9 = 0x1c;
    }
    else if (plocalLong1[2] == 0) {
LAB_18089c743:
      uVar9 = FUN_180769ed0(*plocalLong1,auStackX_18,1,1,0);
    }
    else {
      auStackX_20[0] = 0;
      uVar9 = func_0x00018076a7d0(*plocalLong1,auStackX_20);
      if (uVar9 == 0) {
        if ((ulonglong)auStackX_20[0] + 1 <= (ulonglong)plocalLong1[2]) goto LAB_18089c743;
        uVar9 = 0x11;
      }
    }
    if (uVar9 == 0) {
      auStackX_20[0] = (uint)((char)auStackX_18[0] != '\0');
      localUInt = (uint)((char)auStackX_18[0] == '\0');
      uVar9 = 0;
    }
    else {
      auStackX_20[0] = 0;
      localUInt = 1;
      if (uVar9 == 0) {
        uVar9 = uVar8;
      }
    }
  }
  else {
LAB_18089c78f:
    localUInt = 1;
    auStackX_20[0] = 0;
  }
  if (uVar9 != 0) {
    return (ulonglong)uVar9;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  plocalLong1 = (longlong *)*memorySize;
  if (*plocalLong1 == 0) {
    uVar3 = 0x1c;
  }
  else {
    if (plocalLong1[2] != 0) {
      auStackX_18[0] = 0;
      uVar3 = func_0x00018076a7d0(*plocalLong1,auStackX_18);
      if ((int)uVar3 != 0) {
        return uVar3;
      }
      if ((ulonglong)plocalLong1[2] < (ulonglong)auStackX_18[0] + 4) {
        uVar3 = 0x11;
        goto LAB_18089c808;
      }
    }
    uVar3 = FUN_180769ed0(*plocalLong1,&localUInt,1,4,0);
  }
LAB_18089c808:
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  switch(localUInt) {
  case 0:
    uVar4 = 0;
    break;
  case 1:
    uVar4 = 1;
    break;
  case 2:
    uVar4 = 2;
    break;
  case 3:
    uVar4 = 3;
    break;
  case 4:
    break;
  case 5:
    uVar4 = 5;
    break;
  case 6:
    uVar4 = 6;
    break;
  case 7:
    uVar4 = 7;
    break;
  case 8:
    uVar4 = 8;
    break;
  case 9:
    uVar4 = 9;
    break;
  default:
    uVar3 = 0xd;
    goto LAB_18089c878;
  }
  *(uint32 *)(resourceHandle + 0x30) = uVar4;
  uVar3 = uVar6;
LAB_18089c878:
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar3 = FUN_1808a2740(*memorySize,resourceHandle + 0x50);
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar3 = FUN_1808995c0(*memorySize,resourceHandle + 0x38);
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar3 = FUN_1808995c0(*memorySize,resourceHandle + 0x3c);
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar3 = FUN_1808995c0(*memorySize,resourceHandle + 0x4c);
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar3 = FUN_1808995c0(*memorySize,resourceHandle + 0x40);
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar3 = FUN_1808995c0(*memorySize,resourceHandle + 0x44);
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  uVar3 = uVar6;
  if (*(uint *)(memorySize + 8) < 0x70) {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      uVar3 = 0x1c;
      goto LAB_18089c9ee;
    }
    plocalLong1 = (longlong *)*memorySize;
    if (*plocalLong1 == 0) {
      localUInt2 = 0x1c;
    }
    else if (plocalLong1[2] == 0) {
LAB_18089c9a8:
      localUInt2 = FUN_180769ed0(*plocalLong1,auStackX_18,1,1,0);
    }
    else {
      localUInt = 0;
      localUInt2 = func_0x00018076a7d0(*plocalLong1,&localUInt);
      if (localUInt2 == 0) {
        if ((ulonglong)localUInt + 1 <= (ulonglong)plocalLong1[2]) goto LAB_18089c9a8;
        localUInt2 = 0x11;
      }
    }
    uVar9 = 0;
    if (localUInt2 == 0) {
      uVar9 = (uint)((char)auStackX_18[0] != '\0');
      uVar7 = (uint)((char)auStackX_18[0] == '\0');
      uVar3 = 0;
    }
    else {
      uVar7 = 1;
      uVar3 = (ulonglong)localUInt2;
      if (localUInt2 == 0) {
        uVar3 = uVar6;
      }
    }
  }
  else {
LAB_18089c9ee:
    uVar7 = 1;
    uVar9 = uVar8;
  }
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  if ((*(uint *)(memorySize + 8) < 0x60) && (uVar3 = func_0x0001808de610(memorySize), (int)uVar3 != 0)) {
    return uVar3;
  }
  uVar3 = uVar6;
  if (0x51 < *(uint *)(memorySize + 8)) {
    if (*(int *)(memorySize[1] + 0x18) == 0) {
      uVar3 = FUN_1808995c0(*memorySize,resourceHandle + 0x48);
    }
    else {
      uVar3 = 0x1c;
    }
  }
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  uVar3 = uVar6;
  if ((int)memorySize[8] - 0x52U < 0x1e) {
    if (*(int *)(memorySize[1] + 0x18) == 0) {
      plocalLong1 = (longlong *)*memorySize;
      if (*plocalLong1 == 0) {
        localUInt2 = 0x1c;
      }
      else if (plocalLong1[2] == 0) {
LAB_18089ca9c:
        localUInt2 = FUN_180769ed0(*plocalLong1,auStackX_18,1,1,0);
      }
      else {
        localUInt = 0;
        localUInt2 = func_0x00018076a7d0(*plocalLong1,&localUInt);
        if (localUInt2 == 0) {
          if ((ulonglong)localUInt + 1 <= (ulonglong)plocalLong1[2]) goto LAB_18089ca9c;
          localUInt2 = 0x11;
        }
      }
      uVar8 = 0;
      uVar5 = 1;
      if (localUInt2 == 0) {
        uVar8 = (uint)((char)auStackX_18[0] != '\0');
        uVar5 = (uint)((char)auStackX_18[0] == '\0');
      }
      uVar3 = (ulonglong)localUInt2;
      if (localUInt2 == 0) {
        uVar3 = uVar6;
      }
    }
    else {
      uVar3 = 0x1c;
    }
  }
  if ((int)uVar3 == 0) {
    localUInt2 = *(uint *)(memorySize + 8);
    if (localUInt2 < 0x70) {
      *(uint *)(resourceHandle + 0x34) =
           (((auStackX_20[0] | *(uint *)(resourceHandle + 0x34)) & ~localUInt | uVar9 * 2) & ~(uVar7 * 2) |
           uVar8 * 4) & ~(uVar5 * 4);
      localUInt2 = *(uint *)(memorySize + 8);
    }
    if ((localUInt2 < 0x87) && ((*(uint *)(resourceHandle + 0x34) >> 3 & 1) != 0)) {
      *(float *)(resourceHandle + 0x3c) = *(float *)(resourceHandle + 0x3c) - 1.0;
      localUInt2 = *(uint *)(memorySize + 8);
    }
    if (localUInt2 < 0x8b) {
LAB_18089cbf6:
                    // WARNING: Subroutine does not return
      FUN_1808ddf80(memorySize,localBuffer);
    }
    auStackX_20[0] = 0;
    uVar3 = FUN_1808afe30(*memorySize,auStackX_20);
    uVar5 = auStackX_20[0];
    if ((int)uVar3 == 0) {
      uVar8 = auStackX_20[0] & 1;
      uVar9 = auStackX_20[0] >> 1;
      uVar3 = FUN_1808af8b0(resourceHandle + 0x60,uVar9);
      if ((int)uVar3 == 0) {
        auStackX_18[0] = 0;
        uVar3 = uVar6;
        if (uVar5 >> 1 != 0) {
          do {
            uVar3 = FUN_1808dde10(memorySize,uVar3);
            if ((int)uVar3 != 0) {
              return uVar3;
            }
            if (*(int *)(memorySize[1] + 0x18) == 0) {
              uVar3 = FUN_1808a2740(*memorySize,(longlong)(int)uVar6 * 0x10 +
                                             *(longlong *)(resourceHandle + 0x60));
            }
            else {
              uVar3 = 0x1c;
            }
            if ((int)uVar3 != 0) {
              return uVar3;
            }
            uVar3 = FUN_1808de0e0(memorySize,auStackX_18);
            if ((int)uVar3 != 0) {
              return uVar3;
            }
            uVar5 = (int)uVar6 + 1;
            uVar6 = (ulonglong)uVar5;
            auStackX_18[0] = auStackX_18[0] & -uVar8;
            uVar3 = (ulonglong)auStackX_18[0];
          } while ((int)uVar5 < (int)uVar9);
        }
        goto LAB_18089cbf6;
      }
    }
  }
  return uVar3;
}



ulonglong FUN_18089c69d(void)

{
  longlong *plocalLong1;
  longlong localLong2;
  int in_EAX;
  uint uVar3;
  ulonglong uVar4;
  longlong *baseRegister;
  longlong unaff_RBP;
  uint uVar5;
  uint uVar6;
  uint uVar8;
  longlong unaff_R13;
  uint unaff_R14D;
  float extraout_XMM0_Da;
  float extraout_XMM0_Da_00;
  float extraout_XMM0_Da_01;
  float extraout_XMM0_Da_02;
  float extraout_XMM0_Da_03;
  float extraout_XMM0_Da_04;
  float extraout_XMM0_Da_05;
  float fVar9;
  float extraout_XMM0_Da_06;
  uint32 extraout_XMM0_Da_07;
  uint32 extraout_XMM0_Da_08;
  uint32 localUInt10;
  float extraout_XMM0_Da_09;
  ulonglong uVar7;
  
  uVar5 = in_EAX + 4;
  uVar7 = 0;
  uVar6 = 0;
  uVar4 = uVar7;
  if (0x6f < *(uint *)(baseRegister + 8)) {
    if (*(int *)(baseRegister[1] + 0x18) == 0) {
      uVar4 = FUN_1808aed00(*baseRegister,unaff_R13 + 0x34,(ulonglong)uVar5);
    }
    else {
      uVar4 = 0x1c;
    }
  }
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  uVar8 = uVar6;
  if (*(uint *)(baseRegister + 8) < 0x70) {
    if (*(int *)(baseRegister[1] + 0x18) != 0) {
      uVar8 = 0x1c;
      goto LAB_18089c78f;
    }
    plocalLong1 = (longlong *)*baseRegister;
    localLong2 = *plocalLong1;
    if (localLong2 == 0) {
      uVar8 = 0x1c;
    }
    else if (plocalLong1[2] == 0) {
LAB_18089c743:
      uVar8 = FUN_180769ed0(*plocalLong1,unaff_RBP + 0x77,unaff_R14D,unaff_R14D,0);
    }
    else {
      *(uint32 *)(unaff_RBP + 0x7f) = 0;
      uVar8 = func_0x00018076a7d0(localLong2,unaff_RBP + 0x7f);
      if (uVar8 == 0) {
        if ((ulonglong)*(uint *)(unaff_RBP + 0x7f) + 1 <= (ulonglong)plocalLong1[2]) goto LAB_18089c743;
        uVar8 = 0x11;
      }
    }
    if (uVar8 == 0) {
      *(uint *)(unaff_RBP + 0x7f) = (uint)(*(char *)(unaff_RBP + 0x77) != '\0');
      *(uint *)(unaff_RBP + -0x29) = (uint)(*(char *)(unaff_RBP + 0x77) == '\0');
      uVar8 = 0;
    }
    else {
      *(uint32 *)(unaff_RBP + 0x7f) = 0;
      *(uint *)(unaff_RBP + -0x29) = unaff_R14D;
      if (uVar8 == 0) {
        uVar8 = uVar6;
      }
    }
  }
  else {
LAB_18089c78f:
    *(uint *)(unaff_RBP + -0x29) = unaff_R14D;
    *(uint32 *)(unaff_RBP + 0x7f) = 0;
  }
  if (uVar8 != 0) {
    return (ulonglong)uVar8;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  plocalLong1 = (longlong *)*baseRegister;
  localLong2 = *plocalLong1;
  if (localLong2 == 0) {
    uVar4 = 0x1c;
  }
  else {
    if (plocalLong1[2] != 0) {
      *(uint32 *)(unaff_RBP + 0x77) = 0;
      uVar4 = func_0x00018076a7d0(localLong2,unaff_RBP + 0x77);
      if ((int)uVar4 != 0) {
        return uVar4;
      }
      if ((ulonglong)plocalLong1[2] < (ulonglong)*(uint *)(unaff_RBP + 0x77) + (ulonglong)uVar5) {
        uVar4 = 0x11;
        goto LAB_18089c808;
      }
    }
    uVar4 = FUN_180769ed0(*plocalLong1,unaff_RBP + -0x25,unaff_R14D,uVar5,0);
  }
LAB_18089c808:
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  switch(*(uint32 *)(unaff_RBP + -0x25)) {
  case 0:
    uVar5 = 0;
    break;
  case 1:
    uVar5 = unaff_R14D;
    break;
  case 2:
    uVar5 = 2;
    break;
  case 3:
    uVar5 = 3;
    break;
  case 4:
    break;
  case 5:
    uVar5 = 5;
    break;
  case 6:
    uVar5 = 6;
    break;
  case 7:
    uVar5 = 7;
    break;
  case 8:
    uVar5 = 8;
    break;
  case 9:
    uVar5 = 9;
    break;
  default:
    uVar4 = 0xd;
    goto LAB_18089c878;
  }
  *(uint *)(unaff_R13 + 0x30) = uVar5;
  uVar4 = uVar7;
LAB_18089c878:
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar4 = FUN_1808a2740(*baseRegister,unaff_R13 + 0x50);
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar4 = FUN_1808995c0(*baseRegister,unaff_R13 + 0x38);
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar4 = FUN_1808995c0(*baseRegister,unaff_R13 + 0x3c);
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar4 = FUN_1808995c0(*baseRegister,unaff_R13 + 0x4c);
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar4 = FUN_1808995c0(*baseRegister,unaff_R13 + 0x40);
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar4 = FUN_1808995c0(*baseRegister,unaff_R13 + 0x44);
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  uVar4 = uVar7;
  fVar9 = extraout_XMM0_Da;
  uVar5 = uVar6;
  uVar8 = unaff_R14D;
  if (*(uint *)(baseRegister + 8) < 0x70) {
    if (*(int *)(baseRegister[1] + 0x18) == 0) {
      plocalLong1 = (longlong *)*baseRegister;
      localLong2 = *plocalLong1;
      if (localLong2 == 0) {
        uVar3 = 0x1c;
      }
      else if (plocalLong1[2] == 0) {
LAB_18089c9a8:
        uVar3 = FUN_180769ed0(*plocalLong1,unaff_RBP + 0x77,unaff_R14D,unaff_R14D,0);
        fVar9 = extraout_XMM0_Da_01;
      }
      else {
        *(uint32 *)(unaff_RBP + -0x25) = 0;
        uVar3 = func_0x00018076a7d0(localLong2,unaff_RBP + -0x25);
        fVar9 = extraout_XMM0_Da_00;
        if (uVar3 == 0) {
          if ((ulonglong)*(uint *)(unaff_RBP + -0x25) + 1 <= (ulonglong)plocalLong1[2])
          goto LAB_18089c9a8;
          uVar3 = 0x11;
        }
      }
      uVar5 = 0;
      if (uVar3 == 0) {
        uVar4 = 0;
        uVar5 = (uint)(*(char *)(unaff_RBP + 0x77) != '\0');
        uVar8 = (uint)(*(char *)(unaff_RBP + 0x77) == '\0');
      }
      else {
        uVar4 = (ulonglong)uVar3;
        if (uVar3 == 0) {
          uVar4 = uVar7;
        }
      }
    }
    else {
      uVar4 = 0x1c;
    }
  }
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  if ((*(uint *)(baseRegister + 8) < 0x60) &&
     (uVar4 = func_0x0001808de610(), fVar9 = extraout_XMM0_Da_02, (int)uVar4 != 0)) {
    return uVar4;
  }
  uVar4 = uVar7;
  if (0x51 < *(uint *)(baseRegister + 8)) {
    if (*(int *)(baseRegister[1] + 0x18) == 0) {
      uVar4 = FUN_1808995c0(*baseRegister,unaff_R13 + 0x48);
      fVar9 = extraout_XMM0_Da_03;
    }
    else {
      uVar4 = 0x1c;
    }
  }
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  uVar4 = uVar7;
  if (0x1d < (int)baseRegister[8] - 0x52U) goto LAB_18089cad8;
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    uVar4 = 0x1c;
    goto LAB_18089cad8;
  }
  plocalLong1 = (longlong *)*baseRegister;
  localLong2 = *plocalLong1;
  if (localLong2 == 0) {
    uVar3 = 0x1c;
  }
  else if (plocalLong1[2] == 0) {
LAB_18089ca9c:
    uVar3 = FUN_180769ed0(*plocalLong1,unaff_RBP + 0x77,unaff_R14D,unaff_R14D,0);
    fVar9 = extraout_XMM0_Da_05;
  }
  else {
    *(uint32 *)(unaff_RBP + -0x25) = 0;
    uVar3 = func_0x00018076a7d0(localLong2,unaff_RBP + -0x25);
    fVar9 = extraout_XMM0_Da_04;
    if (uVar3 == 0) {
      if ((ulonglong)*(uint *)(unaff_RBP + -0x25) + 1 <= (ulonglong)plocalLong1[2]) goto LAB_18089ca9c;
      uVar3 = 0x11;
    }
  }
  uVar6 = 0;
  if (uVar3 == 0) {
    uVar6 = (uint)(*(char *)(unaff_RBP + 0x77) != '\0');
    unaff_R14D = (uint)(*(char *)(unaff_RBP + 0x77) == '\0');
  }
  uVar4 = (ulonglong)uVar3;
  if (uVar3 == 0) {
    uVar4 = uVar7;
  }
LAB_18089cad8:
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  uVar3 = *(uint *)(baseRegister + 8);
  if (uVar3 < 0x70) {
    *(uint *)(unaff_R13 + 0x34) =
         (((*(uint *)(unaff_RBP + 0x7f) | *(uint *)(unaff_R13 + 0x34)) &
           ~*(uint *)(unaff_RBP + -0x29) | uVar5 * 2) & ~(uVar8 * 2) | uVar6 * 4) &
         ~(unaff_R14D * 4);
    uVar3 = *(uint *)(baseRegister + 8);
  }
  if ((uVar3 < 0x87) && ((*(uint *)(unaff_R13 + 0x34) >> 3 & 1) != 0)) {
    fVar9 = *(float *)(unaff_R13 + 0x3c) - 1.0;
    *(float *)(unaff_R13 + 0x3c) = fVar9;
    uVar3 = *(uint *)(baseRegister + 8);
  }
  if (0x8a < uVar3) {
    localLong2 = *baseRegister;
    *(uint32 *)(unaff_RBP + 0x7f) = 0;
    uVar4 = FUN_1808afe30(localLong2,unaff_RBP + 0x7f);
    if ((int)uVar4 != 0) {
      return uVar4;
    }
    uVar5 = *(uint *)(unaff_RBP + 0x7f);
    uVar4 = FUN_1808af8b0(unaff_R13 + 0x60,uVar5 >> 1);
    if ((int)uVar4 != 0) {
      return uVar4;
    }
    *(uint32 *)(unaff_RBP + 0x77) = 0;
    uVar4 = uVar7;
    fVar9 = extraout_XMM0_Da_06;
    if (uVar5 >> 1 != 0) {
      do {
        uVar4 = FUN_1808dde10(fVar9,uVar4);
        if ((int)uVar4 != 0) {
          return uVar4;
        }
        if (*(int *)(baseRegister[1] + 0x18) == 0) {
          uVar4 = FUN_1808a2740(*baseRegister,
                                (longlong)(int)uVar7 * 0x10 + *(longlong *)(unaff_R13 + 0x60));
          localUInt10 = extraout_XMM0_Da_08;
        }
        else {
          uVar4 = 0x1c;
          localUInt10 = extraout_XMM0_Da_07;
        }
        if ((int)uVar4 != 0) {
          return uVar4;
        }
        uVar4 = FUN_1808de0e0(localUInt10,unaff_RBP + 0x77);
        if ((int)uVar4 != 0) {
          return uVar4;
        }
        uVar6 = (int)uVar7 + 1;
        uVar7 = (ulonglong)uVar6;
        uVar8 = *(uint *)(unaff_RBP + 0x77) & -(uVar5 & 1);
        uVar4 = (ulonglong)uVar8;
        *(uint *)(unaff_RBP + 0x77) = uVar8;
        fVar9 = extraout_XMM0_Da_09;
      } while ((int)uVar6 < (int)(uVar5 >> 1));
    }
  }
                    // WARNING: Subroutine does not return
  FUN_1808ddf80(fVar9,unaff_RBP + -0x21);
}



ulonglong FUN_18089c86d(void)

{
  longlong *plocalLong1;
  longlong localLong2;
  data7 uVar3;
  uint uVar4;
  ulonglong uVar5;
  ulonglong uVar6;
  int iVar7;
  longlong *baseRegister;
  longlong unaff_RBP;
  uint uVar8;
  uint uVar9;
  ulonglong unaff_RDI;
  int localInt10;
  longlong unaff_R13;
  int unaff_R14D;
  int localInt11;
  float extraout_XMM0_Da;
  float extraout_XMM0_Da_00;
  float extraout_XMM0_Da_01;
  float extraout_XMM0_Da_02;
  float extraout_XMM0_Da_03;
  float extraout_XMM0_Da_04;
  float extraout_XMM0_Da_05;
  float fVar12;
  float extraout_XMM0_Da_06;
  uint32 extraout_XMM0_Da_07;
  uint32 extraout_XMM0_Da_08;
  uint32 localUInt13;
  float extraout_XMM0_Da_09;
  
  *(uint32 *)(unaff_R13 + 0x30) = 10;
  if ((int)unaff_RDI != 0) {
    return unaff_RDI & 0xffffffff;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar5 = FUN_1808a2740(*baseRegister,unaff_R13 + 0x50);
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar5 = FUN_1808995c0(*baseRegister,unaff_R13 + 0x38);
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar5 = FUN_1808995c0(*baseRegister,unaff_R13 + 0x3c);
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar5 = FUN_1808995c0(*baseRegister,unaff_R13 + 0x4c);
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar5 = FUN_1808995c0(*baseRegister,unaff_R13 + 0x40);
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar5 = FUN_1808995c0(*baseRegister,unaff_R13 + 0x44);
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  uVar3 = (data7)(unaff_RDI >> 8);
  iVar7 = 0;
  fVar12 = extraout_XMM0_Da;
  localInt11 = iVar7;
  localInt10 = unaff_R14D;
  if (*(uint *)(baseRegister + 8) < 0x70) {
    if (*(int *)(baseRegister[1] + 0x18) == 0) {
      plocalLong1 = (longlong *)*baseRegister;
      localLong2 = *plocalLong1;
      if (localLong2 == 0) {
        uVar4 = 0x1c;
      }
      else if (plocalLong1[2] == unaff_RDI) {
LAB_18089c9a8:
        uVar4 = FUN_180769ed0(*plocalLong1,unaff_RBP + 0x77,unaff_R14D,unaff_R14D);
        fVar12 = extraout_XMM0_Da_01;
      }
      else {
        *(uint32 *)(unaff_RBP + -0x25) = 0;
        uVar4 = func_0x00018076a7d0(localLong2,unaff_RBP + -0x25);
        fVar12 = extraout_XMM0_Da_00;
        if (uVar4 == 0) {
          if ((ulonglong)*(uint *)(unaff_RBP + -0x25) + 1 <= (ulonglong)plocalLong1[2])
          goto LAB_18089c9a8;
          uVar4 = 0x11;
        }
      }
      if (uVar4 == 0) {
        uVar5 = unaff_RDI & 0xffffffff;
        localInt11 = (int)CONCAT71(uVar3,*(char *)(unaff_RBP + 0x77) != '\0');
        localInt10 = (int)CONCAT71(uVar3,*(char *)(unaff_RBP + 0x77) == '\0');
      }
      else {
        uVar5 = (ulonglong)uVar4;
        if (uVar4 == 0) {
          uVar5 = unaff_RDI & 0xffffffff;
        }
      }
    }
    else {
      uVar5 = 0x1c;
    }
  }
  else {
    uVar5 = unaff_RDI & 0xffffffff;
  }
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  if ((*(uint *)(baseRegister + 8) < 0x60) &&
     (uVar5 = func_0x0001808de610(), fVar12 = extraout_XMM0_Da_02, (int)uVar5 != 0)) {
    return uVar5;
  }
  if (*(uint *)(baseRegister + 8) < 0x52) {
    uVar5 = unaff_RDI & 0xffffffff;
  }
  else if (*(int *)(baseRegister[1] + 0x18) == 0) {
    uVar5 = FUN_1808995c0(*baseRegister,unaff_R13 + 0x48);
    fVar12 = extraout_XMM0_Da_03;
  }
  else {
    uVar5 = 0x1c;
  }
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  if (0x1d < (int)baseRegister[8] - 0x52U) {
    uVar5 = unaff_RDI & 0xffffffff;
    goto LAB_18089cad8;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    uVar5 = 0x1c;
    goto LAB_18089cad8;
  }
  plocalLong1 = (longlong *)*baseRegister;
  localLong2 = *plocalLong1;
  if (localLong2 == 0) {
    uVar4 = 0x1c;
  }
  else if (plocalLong1[2] == unaff_RDI) {
LAB_18089ca9c:
    uVar4 = FUN_180769ed0(*plocalLong1,unaff_RBP + 0x77,unaff_R14D,unaff_R14D);
    fVar12 = extraout_XMM0_Da_05;
  }
  else {
    *(uint32 *)(unaff_RBP + -0x25) = 0;
    uVar4 = func_0x00018076a7d0(localLong2,unaff_RBP + -0x25);
    fVar12 = extraout_XMM0_Da_04;
    if (uVar4 == 0) {
      if ((ulonglong)*(uint *)(unaff_RBP + -0x25) + 1 <= (ulonglong)plocalLong1[2]) goto LAB_18089ca9c;
      uVar4 = 0x11;
    }
  }
  if (uVar4 == 0) {
    iVar7 = (int)CONCAT71(uVar3,*(char *)(unaff_RBP + 0x77) != '\0');
    unaff_R14D = (int)CONCAT71(uVar3,*(char *)(unaff_RBP + 0x77) == '\0');
  }
  uVar5 = (ulonglong)uVar4;
  if (uVar4 == 0) {
    uVar5 = unaff_RDI & 0xffffffff;
  }
LAB_18089cad8:
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  uVar4 = *(uint *)(baseRegister + 8);
  if (uVar4 < 0x70) {
    *(uint *)(unaff_R13 + 0x34) =
         (((*(uint *)(unaff_RBP + 0x7f) | *(uint *)(unaff_R13 + 0x34)) &
           ~*(uint *)(unaff_RBP + -0x29) | localInt11 * 2) & ~(localInt10 * 2) | iVar7 * 4) &
         ~(unaff_R14D * 4);
    uVar4 = *(uint *)(baseRegister + 8);
  }
  if ((uVar4 < 0x87) && ((*(uint *)(unaff_R13 + 0x34) >> 3 & 1) != 0)) {
    fVar12 = *(float *)(unaff_R13 + 0x3c) - 1.0;
    *(float *)(unaff_R13 + 0x3c) = fVar12;
    uVar4 = *(uint *)(baseRegister + 8);
  }
  if (0x8a < uVar4) {
    localLong2 = *baseRegister;
    *(uint32 *)(unaff_RBP + 0x7f) = 0;
    uVar5 = FUN_1808afe30(localLong2,unaff_RBP + 0x7f);
    if ((int)uVar5 != 0) {
      return uVar5;
    }
    uVar4 = *(uint *)(unaff_RBP + 0x7f);
    uVar5 = FUN_1808af8b0(unaff_R13 + 0x60,uVar4 >> 1);
    if ((int)uVar5 != 0) {
      return uVar5;
    }
    *(uint32 *)(unaff_RBP + 0x77) = 0;
    uVar5 = unaff_RDI & 0xffffffff;
    fVar12 = extraout_XMM0_Da_06;
    if (uVar4 >> 1 != 0) {
      do {
        uVar6 = FUN_1808dde10(fVar12,unaff_RDI & 0xffffffff);
        if ((int)uVar6 != 0) {
          return uVar6;
        }
        if (*(int *)(baseRegister[1] + 0x18) == 0) {
          uVar6 = FUN_1808a2740(*baseRegister,
                                (longlong)(int)uVar5 * 0x10 + *(longlong *)(unaff_R13 + 0x60));
          localUInt13 = extraout_XMM0_Da_08;
        }
        else {
          uVar6 = 0x1c;
          localUInt13 = extraout_XMM0_Da_07;
        }
        if ((int)uVar6 != 0) {
          return uVar6;
        }
        uVar6 = FUN_1808de0e0(localUInt13,unaff_RBP + 0x77);
        if ((int)uVar6 != 0) {
          return uVar6;
        }
        uVar8 = (int)uVar5 + 1;
        uVar5 = (ulonglong)uVar8;
        uVar9 = *(uint *)(unaff_RBP + 0x77) & -(uVar4 & 1);
        unaff_RDI = (ulonglong)uVar9;
        *(uint *)(unaff_RBP + 0x77) = uVar9;
        fVar12 = extraout_XMM0_Da_09;
      } while ((int)uVar8 < (int)(uVar4 >> 1));
    }
  }
                    // WARNING: Subroutine does not return
  FUN_1808ddf80(fVar12,unaff_RBP + -0x21);
}



ulonglong FUN_18089c872(void)

{
  longlong *plocalLong1;
  longlong localLong2;
  data7 uVar3;
  uint uVar4;
  ulonglong uVar5;
  ulonglong uVar6;
  int iVar7;
  longlong *baseRegister;
  longlong unaff_RBP;
  uint32 unaff_ESI;
  uint uVar8;
  uint uVar9;
  ulonglong unaff_RDI;
  int localInt10;
  longlong unaff_R13;
  int unaff_R14D;
  int localInt11;
  float extraout_XMM0_Da;
  float extraout_XMM0_Da_00;
  float extraout_XMM0_Da_01;
  float extraout_XMM0_Da_02;
  float extraout_XMM0_Da_03;
  float extraout_XMM0_Da_04;
  float extraout_XMM0_Da_05;
  float fVar12;
  float extraout_XMM0_Da_06;
  uint32 extraout_XMM0_Da_07;
  uint32 extraout_XMM0_Da_08;
  uint32 localUInt13;
  float extraout_XMM0_Da_09;
  
  *(uint32 *)(unaff_R13 + 0x30) = unaff_ESI;
  if ((int)unaff_RDI != 0) {
    return unaff_RDI & 0xffffffff;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar5 = FUN_1808a2740(*baseRegister,unaff_R13 + 0x50);
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar5 = FUN_1808995c0(*baseRegister,unaff_R13 + 0x38);
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar5 = FUN_1808995c0(*baseRegister,unaff_R13 + 0x3c);
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar5 = FUN_1808995c0(*baseRegister,unaff_R13 + 0x4c);
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar5 = FUN_1808995c0(*baseRegister,unaff_R13 + 0x40);
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar5 = FUN_1808995c0(*baseRegister,unaff_R13 + 0x44);
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  uVar3 = (data7)(unaff_RDI >> 8);
  iVar7 = 0;
  fVar12 = extraout_XMM0_Da;
  localInt11 = iVar7;
  localInt10 = unaff_R14D;
  if (*(uint *)(baseRegister + 8) < 0x70) {
    if (*(int *)(baseRegister[1] + 0x18) == 0) {
      plocalLong1 = (longlong *)*baseRegister;
      localLong2 = *plocalLong1;
      if (localLong2 == 0) {
        uVar4 = 0x1c;
      }
      else if (plocalLong1[2] == unaff_RDI) {
LAB_18089c9a8:
        uVar4 = FUN_180769ed0(*plocalLong1,unaff_RBP + 0x77,unaff_R14D,unaff_R14D);
        fVar12 = extraout_XMM0_Da_01;
      }
      else {
        *(uint32 *)(unaff_RBP + -0x25) = 0;
        uVar4 = func_0x00018076a7d0(localLong2,unaff_RBP + -0x25);
        fVar12 = extraout_XMM0_Da_00;
        if (uVar4 == 0) {
          if ((ulonglong)*(uint *)(unaff_RBP + -0x25) + 1 <= (ulonglong)plocalLong1[2])
          goto LAB_18089c9a8;
          uVar4 = 0x11;
        }
      }
      if (uVar4 == 0) {
        uVar5 = unaff_RDI & 0xffffffff;
        localInt11 = (int)CONCAT71(uVar3,*(char *)(unaff_RBP + 0x77) != '\0');
        localInt10 = (int)CONCAT71(uVar3,*(char *)(unaff_RBP + 0x77) == '\0');
      }
      else {
        uVar5 = (ulonglong)uVar4;
        if (uVar4 == 0) {
          uVar5 = unaff_RDI & 0xffffffff;
        }
      }
    }
    else {
      uVar5 = 0x1c;
    }
  }
  else {
    uVar5 = unaff_RDI & 0xffffffff;
  }
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  if ((*(uint *)(baseRegister + 8) < 0x60) &&
     (uVar5 = func_0x0001808de610(), fVar12 = extraout_XMM0_Da_02, (int)uVar5 != 0)) {
    return uVar5;
  }
  if (*(uint *)(baseRegister + 8) < 0x52) {
    uVar5 = unaff_RDI & 0xffffffff;
  }
  else if (*(int *)(baseRegister[1] + 0x18) == 0) {
    uVar5 = FUN_1808995c0(*baseRegister,unaff_R13 + 0x48);
    fVar12 = extraout_XMM0_Da_03;
  }
  else {
    uVar5 = 0x1c;
  }
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  if (0x1d < (int)baseRegister[8] - 0x52U) {
    uVar5 = unaff_RDI & 0xffffffff;
    goto LAB_18089cad8;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    uVar5 = 0x1c;
    goto LAB_18089cad8;
  }
  plocalLong1 = (longlong *)*baseRegister;
  localLong2 = *plocalLong1;
  if (localLong2 == 0) {
    uVar4 = 0x1c;
  }
  else if (plocalLong1[2] == unaff_RDI) {
LAB_18089ca9c:
    uVar4 = FUN_180769ed0(*plocalLong1,unaff_RBP + 0x77,unaff_R14D,unaff_R14D);
    fVar12 = extraout_XMM0_Da_05;
  }
  else {
    *(uint32 *)(unaff_RBP + -0x25) = 0;
    uVar4 = func_0x00018076a7d0(localLong2,unaff_RBP + -0x25);
    fVar12 = extraout_XMM0_Da_04;
    if (uVar4 == 0) {
      if ((ulonglong)*(uint *)(unaff_RBP + -0x25) + 1 <= (ulonglong)plocalLong1[2]) goto LAB_18089ca9c;
      uVar4 = 0x11;
    }
  }
  if (uVar4 == 0) {
    iVar7 = (int)CONCAT71(uVar3,*(char *)(unaff_RBP + 0x77) != '\0');
    unaff_R14D = (int)CONCAT71(uVar3,*(char *)(unaff_RBP + 0x77) == '\0');
  }
  uVar5 = (ulonglong)uVar4;
  if (uVar4 == 0) {
    uVar5 = unaff_RDI & 0xffffffff;
  }
LAB_18089cad8:
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  uVar4 = *(uint *)(baseRegister + 8);
  if (uVar4 < 0x70) {
    *(uint *)(unaff_R13 + 0x34) =
         (((*(uint *)(unaff_RBP + 0x7f) | *(uint *)(unaff_R13 + 0x34)) &
           ~*(uint *)(unaff_RBP + -0x29) | localInt11 * 2) & ~(localInt10 * 2) | iVar7 * 4) &
         ~(unaff_R14D * 4);
    uVar4 = *(uint *)(baseRegister + 8);
  }
  if ((uVar4 < 0x87) && ((*(uint *)(unaff_R13 + 0x34) >> 3 & 1) != 0)) {
    fVar12 = *(float *)(unaff_R13 + 0x3c) - 1.0;
    *(float *)(unaff_R13 + 0x3c) = fVar12;
    uVar4 = *(uint *)(baseRegister + 8);
  }
  if (0x8a < uVar4) {
    localLong2 = *baseRegister;
    *(uint32 *)(unaff_RBP + 0x7f) = 0;
    uVar5 = FUN_1808afe30(localLong2,unaff_RBP + 0x7f);
    if ((int)uVar5 != 0) {
      return uVar5;
    }
    uVar4 = *(uint *)(unaff_RBP + 0x7f);
    uVar5 = FUN_1808af8b0(unaff_R13 + 0x60,uVar4 >> 1);
    if ((int)uVar5 != 0) {
      return uVar5;
    }
    *(uint32 *)(unaff_RBP + 0x77) = 0;
    uVar5 = unaff_RDI & 0xffffffff;
    fVar12 = extraout_XMM0_Da_06;
    if (uVar4 >> 1 != 0) {
      do {
        uVar6 = FUN_1808dde10(fVar12,unaff_RDI & 0xffffffff);
        if ((int)uVar6 != 0) {
          return uVar6;
        }
        if (*(int *)(baseRegister[1] + 0x18) == 0) {
          uVar6 = FUN_1808a2740(*baseRegister,
                                (longlong)(int)uVar5 * 0x10 + *(longlong *)(unaff_R13 + 0x60));
          localUInt13 = extraout_XMM0_Da_08;
        }
        else {
          uVar6 = 0x1c;
          localUInt13 = extraout_XMM0_Da_07;
        }
        if ((int)uVar6 != 0) {
          return uVar6;
        }
        uVar6 = FUN_1808de0e0(localUInt13,unaff_RBP + 0x77);
        if ((int)uVar6 != 0) {
          return uVar6;
        }
        uVar8 = (int)uVar5 + 1;
        uVar5 = (ulonglong)uVar8;
        uVar9 = *(uint *)(unaff_RBP + 0x77) & -(uVar4 & 1);
        unaff_RDI = (ulonglong)uVar9;
        *(uint *)(unaff_RBP + 0x77) = uVar9;
        fVar12 = extraout_XMM0_Da_09;
      } while ((int)uVar8 < (int)(uVar4 >> 1));
    }
  }
                    // WARNING: Subroutine does not return
  FUN_1808ddf80(fVar12,unaff_RBP + -0x21);
}



ulonglong FUN_18089c94a(float resourceHandle)

{
  longlong *plocalLong1;
  longlong localLong2;
  data7 uVar3;
  uint uVar4;
  ulonglong uVar5;
  ulonglong uVar6;
  int iVar7;
  longlong *baseRegister;
  longlong unaff_RBP;
  uint uVar8;
  int iVar9;
  uint localUInt10;
  ulonglong unaff_RDI;
  int localInt11;
  longlong unaff_R13;
  int unaff_R14D;
  int localInt12;
  bool in_CF;
  float extraout_XMM0_Da;
  float extraout_XMM0_Da_00;
  float extraout_XMM0_Da_01;
  float extraout_XMM0_Da_02;
  float extraout_XMM0_Da_03;
  float extraout_XMM0_Da_04;
  float extraout_XMM0_Da_05;
  float fVar13;
  uint32 extraout_XMM0_Da_06;
  uint32 extraout_XMM0_Da_07;
  uint32 localUInt14;
  float extraout_XMM0_Da_08;
  
  iVar9 = (int)unaff_RDI;
  uVar3 = (data7)(unaff_RDI >> 8);
  localInt12 = iVar9;
  localInt11 = unaff_R14D;
  if (in_CF) {
    if (*(int *)(baseRegister[1] + 0x18) == iVar9) {
      plocalLong1 = (longlong *)*baseRegister;
      localLong2 = *plocalLong1;
      if (localLong2 == 0) {
        uVar4 = 0x1c;
      }
      else if (plocalLong1[2] == unaff_RDI) {
LAB_18089c9a8:
        uVar4 = FUN_180769ed0(*plocalLong1,unaff_RBP + 0x77,unaff_R14D,unaff_R14D);
        resourceHandle = extraout_XMM0_Da_00;
      }
      else {
        *(int *)(unaff_RBP + -0x25) = iVar9;
        uVar4 = func_0x00018076a7d0(localLong2,unaff_RBP + -0x25);
        resourceHandle = extraout_XMM0_Da;
        if (uVar4 == 0) {
          if ((ulonglong)*(uint *)(unaff_RBP + -0x25) + 1 <= (ulonglong)plocalLong1[2])
          goto LAB_18089c9a8;
          uVar4 = 0x11;
        }
      }
      if (uVar4 == 0) {
        uVar6 = unaff_RDI & 0xffffffff;
        localInt12 = (int)CONCAT71(uVar3,*(char *)(unaff_RBP + 0x77) != '\0');
        localInt11 = (int)CONCAT71(uVar3,*(char *)(unaff_RBP + 0x77) == '\0');
      }
      else {
        uVar6 = (ulonglong)uVar4;
        if (uVar4 == 0) {
          uVar6 = unaff_RDI & 0xffffffff;
        }
      }
    }
    else {
      uVar6 = 0x1c;
    }
  }
  else {
    uVar6 = unaff_RDI & 0xffffffff;
  }
  if ((int)uVar6 != 0) {
    return uVar6;
  }
  if ((*(uint *)(baseRegister + 8) < 0x60) &&
     (uVar6 = func_0x0001808de610(), resourceHandle = extraout_XMM0_Da_01, (int)uVar6 != 0)) {
    return uVar6;
  }
  if (*(uint *)(baseRegister + 8) < 0x52) {
    uVar6 = unaff_RDI & 0xffffffff;
  }
  else if (*(int *)(baseRegister[1] + 0x18) == iVar9) {
    uVar6 = FUN_1808995c0(*baseRegister,unaff_R13 + 0x48);
    resourceHandle = extraout_XMM0_Da_02;
  }
  else {
    uVar6 = 0x1c;
  }
  if ((int)uVar6 != 0) {
    return uVar6;
  }
  iVar7 = iVar9;
  if ((int)baseRegister[8] - 0x52U < 0x1e) {
    if (*(int *)(baseRegister[1] + 0x18) == iVar9) {
      plocalLong1 = (longlong *)*baseRegister;
      localLong2 = *plocalLong1;
      if (localLong2 == 0) {
        uVar4 = 0x1c;
      }
      else if (plocalLong1[2] == unaff_RDI) {
LAB_18089ca9c:
        uVar4 = FUN_180769ed0(*plocalLong1,unaff_RBP + 0x77,unaff_R14D,unaff_R14D);
        resourceHandle = extraout_XMM0_Da_04;
      }
      else {
        *(int *)(unaff_RBP + -0x25) = iVar9;
        uVar4 = func_0x00018076a7d0(localLong2,unaff_RBP + -0x25);
        resourceHandle = extraout_XMM0_Da_03;
        if (uVar4 == 0) {
          if ((ulonglong)*(uint *)(unaff_RBP + -0x25) + 1 <= (ulonglong)plocalLong1[2])
          goto LAB_18089ca9c;
          uVar4 = 0x11;
        }
      }
      if (uVar4 == 0) {
        iVar7 = (int)CONCAT71(uVar3,*(char *)(unaff_RBP + 0x77) != '\0');
        unaff_R14D = (int)CONCAT71(uVar3,*(char *)(unaff_RBP + 0x77) == '\0');
      }
      uVar6 = (ulonglong)uVar4;
      if (uVar4 == 0) {
        uVar6 = unaff_RDI & 0xffffffff;
      }
    }
    else {
      uVar6 = 0x1c;
    }
  }
  else {
    uVar6 = unaff_RDI & 0xffffffff;
  }
  if ((int)uVar6 == 0) {
    uVar4 = *(uint *)(baseRegister + 8);
    if (uVar4 < 0x70) {
      *(uint *)(unaff_R13 + 0x34) =
           (((*(uint *)(unaff_RBP + 0x7f) | *(uint *)(unaff_R13 + 0x34)) &
             ~*(uint *)(unaff_RBP + -0x29) | localInt12 * 2) & ~(localInt11 * 2) | iVar7 * 4) &
           ~(unaff_R14D * 4);
      uVar4 = *(uint *)(baseRegister + 8);
    }
    if ((uVar4 < 0x87) && ((*(uint *)(unaff_R13 + 0x34) >> 3 & 1) != 0)) {
      resourceHandle = *(float *)(unaff_R13 + 0x3c) - 1.0;
      *(float *)(unaff_R13 + 0x3c) = resourceHandle;
      uVar4 = *(uint *)(baseRegister + 8);
    }
    if (uVar4 < 0x8b) {
LAB_18089cbf6:
                    // WARNING: Subroutine does not return
      FUN_1808ddf80(resourceHandle,unaff_RBP + -0x21);
    }
    localLong2 = *baseRegister;
    *(int *)(unaff_RBP + 0x7f) = iVar9;
    uVar6 = FUN_1808afe30(localLong2,unaff_RBP + 0x7f);
    if ((int)uVar6 == 0) {
      uVar4 = *(uint *)(unaff_RBP + 0x7f);
      uVar6 = FUN_1808af8b0(unaff_R13 + 0x60,uVar4 >> 1);
      if ((int)uVar6 == 0) {
        *(int *)(unaff_RBP + 0x77) = iVar9;
        uVar6 = unaff_RDI & 0xffffffff;
        resourceHandle = extraout_XMM0_Da_05;
        fVar13 = extraout_XMM0_Da_05;
        if (uVar4 >> 1 != 0) {
          do {
            uVar5 = FUN_1808dde10(fVar13,unaff_RDI & 0xffffffff);
            if ((int)uVar5 != 0) {
              return uVar5;
            }
            if (*(int *)(baseRegister[1] + 0x18) == 0) {
              uVar5 = FUN_1808a2740(*baseRegister,
                                    (longlong)(int)uVar6 * 0x10 + *(longlong *)(unaff_R13 + 0x60));
              localUInt14 = extraout_XMM0_Da_07;
            }
            else {
              uVar5 = 0x1c;
              localUInt14 = extraout_XMM0_Da_06;
            }
            if ((int)uVar5 != 0) {
              return uVar5;
            }
            uVar5 = FUN_1808de0e0(localUInt14,unaff_RBP + 0x77);
            if ((int)uVar5 != 0) {
              return uVar5;
            }
            uVar8 = (int)uVar6 + 1;
            uVar6 = (ulonglong)uVar8;
            localUInt10 = *(uint *)(unaff_RBP + 0x77) & -(uVar4 & 1);
            unaff_RDI = (ulonglong)localUInt10;
            *(uint *)(unaff_RBP + 0x77) = localUInt10;
            resourceHandle = extraout_XMM0_Da_08;
            fVar13 = extraout_XMM0_Da_08;
          } while ((int)uVar8 < (int)(uVar4 >> 1));
        }
        goto LAB_18089cbf6;
      }
    }
  }
  return uVar6;
}




// 函数: void FUN_18089cc29(void)
void FUN_18089cc29(void)

{
  return;
}




// 函数: void FUN_18089cc31(void)
void FUN_18089cc31(void)

{
  return;
}




// 函数: void FUN_18089cc41(void)
void FUN_18089cc41(void)

{
  return;
}



ulonglong FUN_18089cc80(longlong resourceHandle,longlong *memorySize)

{
  longlong *plocalLong1;
  uint localUInt2;
  ulonglong uVar3;
  int localInt4;
  uint auStackX_18 [2];
  uint auStackX_20 [2];
  byte localBuffer [32];
  
  uVar3 = FUN_1808ddc20(memorySize,localBuffer,0,0x46454d50);
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  auStackX_18[0] = *(uint *)(resourceHandle + 0x50);
  localUInt2 = 0x1c;
  if (*(int *)(memorySize[1] + 0x18) == 0) {
    plocalLong1 = (longlong *)*memorySize;
    if (*plocalLong1 == 0) {
      uVar3 = 0x1c;
    }
    else {
      if (plocalLong1[2] != 0) {
        auStackX_20[0] = 0;
        uVar3 = func_0x00018076a7d0(*plocalLong1,auStackX_20);
        if ((int)uVar3 != 0) {
          return uVar3;
        }
        if ((ulonglong)plocalLong1[2] < (ulonglong)auStackX_20[0] + 4) {
          uVar3 = 0x11;
          goto LAB_18089cd46;
        }
      }
      uVar3 = FUN_180769ed0(*plocalLong1,auStackX_18,1,4,0);
    }
LAB_18089cd46:
    if ((int)uVar3 != 0) {
      return uVar3;
    }
    if (0x3ff < auStackX_18[0]) {
      return 0xd;
    }
    uVar3 = FUN_1808af280(resourceHandle + 0x48);
    if ((int)uVar3 == 0) goto LAB_18089cd76;
  }
  else {
    uVar3 = 0x1c;
  }
  if ((int)uVar3 != 0) {
    return uVar3;
  }
LAB_18089cd76:
  localInt4 = 0;
  if (0 < (int)auStackX_18[0]) {
    do {
      uVar3 = FUN_1808acb90(resourceHandle,memorySize,localInt4);
      if ((int)uVar3 != 0) {
        return uVar3;
      }
      localInt4 = localInt4 + 1;
    } while (localInt4 < (int)auStackX_18[0]);
  }
  if (*(uint *)(memorySize + 8) < 0x6e) {
    localUInt2 = 0;
  }
  else if (*(int *)(memorySize[1] + 0x18) == 0) {
    localUInt2 = FUN_1808a2e00(*memorySize,resourceHandle + 0x5c);
  }
  if (localUInt2 == 0) {
                    // WARNING: Subroutine does not return
    FUN_1808ddf80(memorySize,localBuffer);
  }
  return (ulonglong)localUInt2;
}



ulonglong FUN_18089ccb9(void)

{
  longlong *plocalLong1;
  uint localUInt2;
  longlong inputRegister;
  ulonglong uVar3;
  int localInt4;
  longlong unaff_RBP;
  longlong *unaff_RSI;
  uint in_stack_00000080;
  uint in_stack_00000088;
  
  localUInt2 = 0x1c;
  if (*(int *)(inputRegister + 0x18) == 0) {
    plocalLong1 = (longlong *)*unaff_RSI;
    if (*plocalLong1 == 0) {
      uVar3 = 0x1c;
    }
    else {
      if (plocalLong1[2] != 0) {
        in_stack_00000088 = 0;
        uVar3 = func_0x00018076a7d0(*plocalLong1,&stack0x00000088);
        if ((int)uVar3 != 0) {
          return uVar3;
        }
        if ((ulonglong)plocalLong1[2] < (ulonglong)in_stack_00000088 + 4) {
          uVar3 = 0x11;
          goto LAB_18089cd46;
        }
      }
      uVar3 = FUN_180769ed0(*plocalLong1,&stack0x00000080,1,4,0);
    }
LAB_18089cd46:
    if ((int)uVar3 != 0) {
      return uVar3;
    }
    if (0x3ff < in_stack_00000080) {
      return 0xd;
    }
    uVar3 = FUN_1808af280(unaff_RBP + 0x48);
    if ((int)uVar3 == 0) goto LAB_18089cd76;
  }
  else {
    uVar3 = 0x1c;
  }
  if ((int)uVar3 != 0) {
    return uVar3;
  }
LAB_18089cd76:
  localInt4 = 0;
  if (0 < (int)in_stack_00000080) {
    do {
      uVar3 = FUN_1808acb90();
      if ((int)uVar3 != 0) {
        return uVar3;
      }
      localInt4 = localInt4 + 1;
    } while (localInt4 < (int)in_stack_00000080);
  }
  if (*(uint *)(unaff_RSI + 8) < 0x6e) {
    localUInt2 = 0;
  }
  else if (*(int *)(unaff_RSI[1] + 0x18) == 0) {
    localUInt2 = FUN_1808a2e00(*unaff_RSI,unaff_RBP + 0x5c);
  }
  if (localUInt2 != 0) {
    return (ulonglong)localUInt2;
  }
                    // WARNING: Subroutine does not return
  FUN_1808ddf80();
}



uint64 FUN_18089ce03(void)

{
  return 0;
}



uint64 FUN_18089ce16(void)

{
  return 0xd;
}




// 函数: void FUN_18089ce25(void)
void FUN_18089ce25(void)

{
  return;
}



ulonglong FUN_18089ce30(longlong resourceHandle,longlong *memorySize)

{
  longlong *plocalLong1;
  ulonglong localUInt2;
  uint uVar3;
  bool bVar4;
  uint auStackX_18 [2];
  uint auStackX_20 [2];
  byte localBuffer [32];
  
  localUInt2 = FUN_1808ddc20(memorySize,localBuffer,0,0x54534c50);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  plocalLong1 = (longlong *)*memorySize;
  uVar3 = 0x1c;
  if (*plocalLong1 == 0) {
    localUInt2 = 0x1c;
  }
  else {
    if (plocalLong1[2] != 0) {
      auStackX_18[0] = 0;
      localUInt2 = func_0x00018076a7d0(*plocalLong1,auStackX_18);
      if ((int)localUInt2 != 0) {
        return localUInt2;
      }
      if ((ulonglong)plocalLong1[2] < (ulonglong)auStackX_18[0] + 4) {
        localUInt2 = 0x11;
        goto LAB_18089cef2;
      }
    }
    localUInt2 = FUN_180769ed0(*plocalLong1,auStackX_20,1,4,0);
  }
LAB_18089cef2:
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  *(uint *)(resourceHandle + 0x10) = auStackX_20[0];
  localUInt2 = 0xd;
  if (auStackX_20[0] < 5) {
    localUInt2 = 0;
  }
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  plocalLong1 = (longlong *)*memorySize;
  if (*plocalLong1 == 0) {
    localUInt2 = 0x1c;
  }
  else {
    if (plocalLong1[2] != 0) {
      auStackX_18[0] = 0;
      localUInt2 = func_0x00018076a7d0(*plocalLong1,auStackX_18);
      if ((int)localUInt2 != 0) {
        return localUInt2;
      }
      if ((ulonglong)plocalLong1[2] < (ulonglong)auStackX_18[0] + 4) {
        localUInt2 = 0x11;
        goto LAB_18089cf93;
      }
    }
    localUInt2 = FUN_180769ed0(*plocalLong1,auStackX_20,1,4,0);
  }
LAB_18089cf93:
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  *(uint *)(resourceHandle + 0x14) = auStackX_20[0];
  localUInt2 = 0xd;
  if (auStackX_20[0] < 3) {
    localUInt2 = 0;
  }
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  localUInt2 = FUN_1808a5150(memorySize,resourceHandle,0);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  if (2 < (int)memorySize[8] - 0x65U) goto LAB_18089d07f;
  bVar4 = false;
  if (*(int *)(memorySize[1] + 0x18) != 0) goto LAB_18089d06e;
  plocalLong1 = (longlong *)*memorySize;
  if (*plocalLong1 != 0) {
    if (plocalLong1[2] == 0) {
LAB_18089d034:
      uVar3 = FUN_180769ed0(*plocalLong1,auStackX_18,1,1,0);
    }
    else {
      auStackX_20[0] = 0;
      uVar3 = func_0x00018076a7d0(*plocalLong1,auStackX_20);
      if (uVar3 == 0) {
        if ((ulonglong)auStackX_20[0] + 1 <= (ulonglong)plocalLong1[2]) goto LAB_18089d034;
        uVar3 = 0x11;
      }
    }
  }
  if (uVar3 == 0) {
    bVar4 = (char)auStackX_18[0] != '\0';
    uVar3 = 0;
  }
  if (uVar3 != 0) {
LAB_18089d06e:
    return (ulonglong)uVar3;
  }
  if (bVar4) {
    *(uint32 *)(resourceHandle + 0x10) = 3;
  }
LAB_18089d07f:
                    // WARNING: Subroutine does not return
  FUN_1808ddf80(memorySize,localBuffer);
}



ulonglong FUN_18089ce60(void)

{
  longlong *plocalLong1;
  longlong inputRegister;
  ulonglong localUInt2;
  uint uVar3;
  longlong *unaff_RDI;
  longlong unaff_R14;
  bool bVar4;
  char cStack0000000000000090;
  uint in_stack_00000098;
  
  if (*(int *)(inputRegister + 0x18) != 0) {
    return 0x1c;
  }
  plocalLong1 = (longlong *)*unaff_RDI;
  uVar3 = 0x1c;
  if (*plocalLong1 == 0) {
    localUInt2 = 0x1c;
  }
  else {
    if (plocalLong1[2] != 0) {
      _cStack0000000000000090 = 0;
      localUInt2 = func_0x00018076a7d0(*plocalLong1,&stack0x00000090);
      if ((int)localUInt2 != 0) {
        return localUInt2;
      }
      if ((ulonglong)plocalLong1[2] < (ulonglong)_cStack0000000000000090 + 4) {
        localUInt2 = 0x11;
        goto LAB_18089cef2;
      }
    }
    localUInt2 = FUN_180769ed0(*plocalLong1,&stack0x00000098,1,4,0);
  }
LAB_18089cef2:
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  *(uint *)(unaff_R14 + 0x10) = in_stack_00000098;
  localUInt2 = 0xd;
  if (in_stack_00000098 < 5) {
    localUInt2 = 0;
  }
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  if (*(int *)(unaff_RDI[1] + 0x18) != 0) {
    return 0x1c;
  }
  plocalLong1 = (longlong *)*unaff_RDI;
  if (*plocalLong1 == 0) {
    localUInt2 = 0x1c;
  }
  else {
    if (plocalLong1[2] != 0) {
      _cStack0000000000000090 = 0;
      localUInt2 = func_0x00018076a7d0(*plocalLong1,&stack0x00000090);
      if ((int)localUInt2 != 0) {
        return localUInt2;
      }
      if ((ulonglong)plocalLong1[2] < (ulonglong)_cStack0000000000000090 + 4) {
        localUInt2 = 0x11;
        goto LAB_18089cf93;
      }
    }
    localUInt2 = FUN_180769ed0(*plocalLong1,&stack0x00000098,1,4,0);
  }
LAB_18089cf93:
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  *(uint *)(unaff_R14 + 0x14) = in_stack_00000098;
  localUInt2 = 0xd;
  if (in_stack_00000098 < 3) {
    localUInt2 = 0;
  }
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  localUInt2 = FUN_1808a5150();
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  if (2 < (int)unaff_RDI[8] - 0x65U) goto LAB_18089d07f;
  bVar4 = false;
  if (*(int *)(unaff_RDI[1] + 0x18) != 0) goto LAB_18089d06e;
  plocalLong1 = (longlong *)*unaff_RDI;
  if (*plocalLong1 != 0) {
    if (plocalLong1[2] == 0) {
LAB_18089d034:
      uVar3 = FUN_180769ed0(*plocalLong1,&stack0x00000090,1,1,0);
    }
    else {
      in_stack_00000098 = 0;
      uVar3 = func_0x00018076a7d0(*plocalLong1,&stack0x00000098);
      if (uVar3 == 0) {
        if ((ulonglong)in_stack_00000098 + 1 <= (ulonglong)plocalLong1[2]) goto LAB_18089d034;
        uVar3 = 0x11;
      }
    }
  }
  if (uVar3 == 0) {
    bVar4 = cStack0000000000000090 != '\0';
    uVar3 = 0;
  }
  if (uVar3 != 0) {
LAB_18089d06e:
    return (ulonglong)uVar3;
  }
  if (bVar4) {
    *(uint32 *)(unaff_R14 + 0x10) = 3;
  }
LAB_18089d07f:
                    // WARNING: Subroutine does not return
  FUN_1808ddf80();
}



ulonglong FUN_18089cfd6(void)

{
  longlong *plocalLong1;
  uint in_EAX;
  uint localUInt2;
  ulonglong baseRegister;
  longlong *unaff_RDI;
  longlong unaff_R14;
  ulonglong unaff_R15;
  char in_stack_00000090;
  uint in_stack_00000098;
  
  localUInt2 = (uint)baseRegister;
  if (2 < in_EAX) goto LAB_18089d07f;
  if (*(uint *)(unaff_RDI[1] + 0x18) != (uint)unaff_R15) goto LAB_18089d06e;
  plocalLong1 = (longlong *)*unaff_RDI;
  if (*plocalLong1 != 0) {
    if (plocalLong1[2] == unaff_R15) {
LAB_18089d034:
      localUInt2 = FUN_180769ed0(*plocalLong1,&stack0x00000090,1);
    }
    else {
      in_stack_00000098 = (uint)unaff_R15;
      localUInt2 = func_0x00018076a7d0(*plocalLong1,&stack0x00000098);
      if (localUInt2 == 0) {
        if ((ulonglong)in_stack_00000098 + 1 <= (ulonglong)plocalLong1[2]) goto LAB_18089d034;
        localUInt2 = 0x11;
      }
    }
  }
  baseRegister = (ulonglong)localUInt2;
  if (localUInt2 == 0) {
    baseRegister = unaff_R15 & 0xffffffff;
  }
  if ((int)baseRegister != 0) {
LAB_18089d06e:
    return baseRegister & 0xffffffff;
  }
  if (localUInt2 == 0 && in_stack_00000090 != (char)unaff_R15) {
    *(uint32 *)(unaff_R14 + 0x10) = 3;
  }
LAB_18089d07f:
                    // WARNING: Subroutine does not return
  FUN_1808ddf80();
}




// 函数: void FUN_18089d091(void)
void FUN_18089d091(void)

{
  return;
}




// 函数: void FUN_18089d0a3(void)
void FUN_18089d0a3(void)

{
  return;
}




// 函数: void FUN_18089d0b0(longlong resourceHandle,uint64 memorySize)
void FUN_18089d0b0(longlong resourceHandle,uint64 memorySize)

{
  int localInt1;
  
  localInt1 = FUN_18089ce30(resourceHandle + 0xd8);
  if (localInt1 == 0) {
    FUN_18089b7d0(resourceHandle,memorySize);
  }
  return;
}



ulonglong FUN_18089d0f0(longlong resourceHandle,uint64 *memorySize)

{
  uint localUInt1;
  ulonglong localUInt2;
  ulonglong uVar3;
  byte localBuffer [32];
  byte localBuffer [32];
  
  localUInt2 = FUN_1808ddc20(memorySize,localBuffer,1,0x46464550);
  if (((((int)localUInt2 != 0) ||
       (localUInt2 = FUN_1808ddc20(memorySize,localBuffer,0,0x42464550), (int)localUInt2 != 0)) ||
      (localUInt2 = FUN_180899360(memorySize,resourceHandle + 0x10), (int)localUInt2 != 0)) ||
     ((*(uint *)(memorySize + 8) < 0x5b &&
      (localUInt2 = FUN_1808afc70(memorySize,resourceHandle + 0x44), (int)localUInt2 != 0)))) {
    return localUInt2;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  localUInt1 = FUN_1808a2740(*memorySize,resourceHandle + 0x60);
  localUInt2 = (ulonglong)localUInt1;
  if (localUInt1 == 0) {
    localUInt2 = 0x1c;
    if (*(uint *)(memorySize + 8) < 0x36) {
      uVar3 = 0;
    }
    else {
      uVar3 = localUInt2;
      if (*(int *)(memorySize[1] + 0x18) == 0) {
        uVar3 = FUN_1808a2740(*memorySize,resourceHandle + 0x70);
      }
    }
    if ((int)uVar3 != 0) {
      return uVar3;
    }
    if (*(uint *)(memorySize + 8) < 0x3d) {
      localUInt2 = 0;
    }
    else if (*(int *)(memorySize[1] + 0x18) == 0) {
      localUInt1 = FUN_1808a2e00(*memorySize,resourceHandle + 0x40);
      localUInt2 = (ulonglong)localUInt1;
    }
    if ((int)localUInt2 == 0) {
                    // WARNING: Subroutine does not return
      FUN_1808ddf80(memorySize,localBuffer);
    }
  }
  return localUInt2;
}



ulonglong FUN_18089d171(void)

{
  uint localUInt1;
  longlong inputRegister;
  ulonglong localUInt2;
  uint64 *baseRegister;
  longlong unaff_RSI;
  ulonglong uVar3;
  
  if (*(int *)(inputRegister + 0x18) != 0) {
    return 0x1c;
  }
  localUInt1 = FUN_1808a2740(*baseRegister,unaff_RSI + 0x60);
  uVar3 = (ulonglong)localUInt1;
  if (localUInt1 == 0) {
    uVar3 = 0x1c;
    if (*(uint *)(baseRegister + 8) < 0x36) {
      localUInt2 = 0;
    }
    else {
      localUInt2 = uVar3;
      if (*(int *)(baseRegister[1] + 0x18) == 0) {
        localUInt2 = FUN_1808a2740(*baseRegister,unaff_RSI + 0x70);
      }
    }
    if ((int)localUInt2 != 0) {
      return localUInt2;
    }
    if (*(uint *)(baseRegister + 8) < 0x3d) {
      uVar3 = 0;
    }
    else if (*(int *)(baseRegister[1] + 0x18) == 0) {
      localUInt1 = FUN_1808a2e00(*baseRegister,unaff_RSI + 0x40);
      uVar3 = (ulonglong)localUInt1;
    }
    if ((int)uVar3 == 0) {
                    // WARNING: Subroutine does not return
      FUN_1808ddf80();
    }
  }
  return uVar3;
}



ulonglong FUN_18089d193(void)

{
  uint localUInt1;
  ulonglong localUInt2;
  uint64 *baseRegister;
  longlong unaff_RSI;
  ulonglong uVar3;
  
  localUInt1 = FUN_1808a2740(*baseRegister,unaff_RSI + 0x60);
  uVar3 = (ulonglong)localUInt1;
  if (localUInt1 == 0) {
    uVar3 = 0x1c;
    if (*(uint *)(baseRegister + 8) < 0x36) {
      localUInt2 = 0;
    }
    else {
      localUInt2 = uVar3;
      if (*(int *)(baseRegister[1] + 0x18) == 0) {
        localUInt2 = FUN_1808a2740(*baseRegister,unaff_RSI + 0x70);
      }
    }
    if ((int)localUInt2 != 0) {
      return localUInt2;
    }
    if (*(uint *)(baseRegister + 8) < 0x3d) {
      uVar3 = 0;
    }
    else if (*(int *)(baseRegister[1] + 0x18) == 0) {
      localUInt1 = FUN_1808a2e00(*baseRegister,unaff_RSI + 0x40);
      uVar3 = (ulonglong)localUInt1;
    }
    if ((int)uVar3 == 0) {
                    // WARNING: Subroutine does not return
      FUN_1808ddf80();
    }
  }
  return uVar3;
}




// 函数: void FUN_18089d208(void)
void FUN_18089d208(void)

{
                    // WARNING: Subroutine does not return
  FUN_1808ddf80();
}




// 函数: void FUN_18089d23a(void)
void FUN_18089d23a(void)

{
  return;
}



uint64 FUN_18089d250(uint64 resourceHandle,longlong *memorySize)

{
  longlong *plocalLong1;
  longlong localLong2;
  uint64 uVar3;
  int aiStackX_18 [2];
  uint auStackX_20 [2];
  uint32 localBuffer [2];
  longlong lStack_60;
  byte localBuffer [32];
  byte localBuffer [32];
  
  uVar3 = FUN_1808ddc20(memorySize,localBuffer,1,0x53505250);
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  aiStackX_18[0] = 0;
  uVar3 = FUN_1808de650(memorySize,aiStackX_18);
  if ((int)uVar3 == 0x12) {
LAB_18089d455:
                    // WARNING: Subroutine does not return
    FUN_1808ddf80(memorySize,localBuffer);
  }
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  if (aiStackX_18[0] < 1) goto LAB_18089d455;
  uVar3 = FUN_1808ddc20(memorySize,localBuffer,0,0x504f5250);
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  localBuffer[0] = 0;
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  plocalLong1 = (longlong *)*memorySize;
  if (*plocalLong1 == 0) {
    uVar3 = 0x1c;
  }
  else {
    if (plocalLong1[2] != 0) {
      auStackX_20[0] = 0;
      uVar3 = func_0x00018076a7d0(*plocalLong1,auStackX_20);
      if ((int)uVar3 != 0) {
        return uVar3;
      }
      if ((ulonglong)plocalLong1[2] < (ulonglong)auStackX_20[0] + 4) {
        uVar3 = 0x11;
        goto LAB_18089d378;
      }
    }
    uVar3 = FUN_180769ed0(*plocalLong1,localBuffer,1,4,0);
  }
LAB_18089d378:
  if ((int)uVar3 == 0) {
    lStack_60 = 0;
    uVar3 = FUN_1808b0490(resourceHandle,localBuffer[0],&lStack_60);
    localLong2 = lStack_60;
    if ((int)uVar3 != 0) {
      return uVar3;
    }
    if (*(int *)(memorySize[1] + 0x18) == 0) {
      uVar3 = FUN_1808aed00(*memorySize,lStack_60 + 0x48,2);
      if ((int)uVar3 != 0) {
        return uVar3;
      }
      if (*(int *)(memorySize[1] + 0x18) == 0) {
        uVar3 = FUN_1808aed00(*memorySize,localLong2 + 0x4a,2);
        if ((int)uVar3 != 0) {
          return uVar3;
        }
        uVar3 = FUN_180899360(memorySize,localLong2 + 0x30);
        if ((int)uVar3 != 0) {
          return uVar3;
        }
        uVar3 = FUN_1808a79f0(memorySize,localLong2 + 0x20);
        if ((int)uVar3 != 0) {
          return uVar3;
        }
        uVar3 = FUN_1808a5d60(memorySize,localLong2 + 0x10,0);
        if ((int)uVar3 == 0) {
          *(uint32 *)(localLong2 + 0x44) = 0xffffffff;
          goto LAB_18089d435;
        }
      }
      else {
        uVar3 = 0x1c;
      }
    }
    else {
      uVar3 = 0x1c;
    }
    if ((int)uVar3 == 0) {
LAB_18089d435:
                    // WARNING: Subroutine does not return
      FUN_1808ddf80(memorySize,localBuffer);
    }
  }
  return uVar3;
}



uint64 FUN_18089d281(void)

{
  longlong *plocalLong1;
  longlong localLong2;
  uint64 uVar3;
  longlong *baseRegister;
  uint32 stackParameter1;
  longlong in_stack_00000038;
  int iStack00000000000000b0;
  uint in_stack_000000b8;
  
  iStack00000000000000b0 = 0;
  uVar3 = FUN_1808de650();
  if ((int)uVar3 == 0x12) {
LAB_18089d455:
                    // WARNING: Subroutine does not return
    FUN_1808ddf80();
  }
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  if (iStack00000000000000b0 < 1) goto LAB_18089d455;
  uVar3 = FUN_1808ddc20();
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  stackParameter1 = 0;
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  plocalLong1 = (longlong *)*baseRegister;
  if (*plocalLong1 == 0) {
    uVar3 = 0x1c;
  }
  else {
    if (plocalLong1[2] != 0) {
      in_stack_000000b8 = 0;
      uVar3 = func_0x00018076a7d0(*plocalLong1,&stack0x000000b8);
      if ((int)uVar3 != 0) {
        return uVar3;
      }
      if ((ulonglong)plocalLong1[2] < (ulonglong)in_stack_000000b8 + 4) {
        uVar3 = 0x11;
        goto LAB_18089d378;
      }
    }
    uVar3 = FUN_180769ed0(*plocalLong1,&stack0x00000030,1,4,0);
  }
LAB_18089d378:
  if ((int)uVar3 == 0) {
    in_stack_00000038 = 0;
    uVar3 = FUN_1808b0490();
    localLong2 = in_stack_00000038;
    if ((int)uVar3 != 0) {
      return uVar3;
    }
    if (*(int *)(baseRegister[1] + 0x18) == 0) {
      uVar3 = FUN_1808aed00(*baseRegister,in_stack_00000038 + 0x48,2);
      if ((int)uVar3 != 0) {
        return uVar3;
      }
      if (*(int *)(baseRegister[1] + 0x18) == 0) {
        uVar3 = FUN_1808aed00(*baseRegister,localLong2 + 0x4a,2);
        if ((int)uVar3 != 0) {
          return uVar3;
        }
        uVar3 = FUN_180899360();
        if ((int)uVar3 != 0) {
          return uVar3;
        }
        uVar3 = FUN_1808a79f0();
        if ((int)uVar3 != 0) {
          return uVar3;
        }
        uVar3 = FUN_1808a5d60();
        if ((int)uVar3 == 0) {
          *(uint32 *)(localLong2 + 0x44) = 0xffffffff;
          goto LAB_18089d435;
        }
      }
      else {
        uVar3 = 0x1c;
      }
    }
    else {
      uVar3 = 0x1c;
    }
    if ((int)uVar3 == 0) {
LAB_18089d435:
                    // WARNING: Subroutine does not return
      FUN_1808ddf80();
    }
  }
  return uVar3;
}




// 函数: void FUN_18089d47a(void)
void FUN_18089d47a(void)

{
  return;
}



uint64 FUN_18089d484(void)

{
  return 0x1c;
}



uint64 FUN_18089d490(longlong resourceHandle,uint64 *memorySize)

{
  uint64 localUInt1;
  
  localUInt1 = FUN_1808dde10(memorySize,0);
  if ((int)localUInt1 == 0) {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    localUInt1 = FUN_180899090(*memorySize,resourceHandle + 0x10);
    if (((int)localUInt1 == 0) && (localUInt1 = FUN_1808afc70(memorySize,resourceHandle + 8), (int)localUInt1 == 0)) {
      if (*(int *)(memorySize[1] + 0x18) != 0) {
        return 0x1c;
      }
      localUInt1 = FUN_1808aed00(*memorySize,resourceHandle + 0xc,4);
      if ((int)localUInt1 == 0) {
        localUInt1 = FUN_1808de0e0(memorySize,0);
      }
    }
  }
  return localUInt1;
}




// 函数: void FUN_18089d520(longlong resourceHandle,uint64 *memorySize)
void FUN_18089d520(longlong resourceHandle,uint64 *memorySize)

{
  int localInt1;
  byte localBuffer [32];
  byte localBuffer [32];
  
  localInt1 = FUN_1808ddc20(memorySize,localBuffer,1,0x4a4f5250);
  if (((localInt1 == 0) && (localInt1 = FUN_1808ddc20(memorySize,localBuffer,0,0x494b4e42), localInt1 == 0)) &&
     (localInt1 = FUN_180899360(memorySize,resourceHandle + 0x10), localInt1 == 0)) {
    if (*(uint *)(memorySize + 8) < 0x37) {
      localInt1 = 0;
    }
    else if (*(int *)(memorySize[1] + 0x18) == 0) {
      localInt1 = FUN_1808aed00(*memorySize,resourceHandle + 0x210,8);
    }
    else {
      localInt1 = 0x1c;
    }
    if (localInt1 == 0) {
      *(uint32 *)(resourceHandle + 0x218) = *(uint32 *)(memorySize + 8);
      if (*(uint *)(memorySize + 8) < 0x41) {
        localInt1 = 0;
      }
      else if (*(int *)(memorySize[1] + 0x18) == 0) {
        localInt1 = FUN_1808aed00(*memorySize,resourceHandle + 0x2f4,4);
      }
      else {
        localInt1 = 0x1c;
      }
      if (localInt1 == 0) {
        if (*(uint *)(memorySize + 8) < 0x4d) {
          localInt1 = 0;
        }
        else if (*(int *)(memorySize[1] + 0x18) == 0) {
          localInt1 = FUN_1808aed00(*memorySize,resourceHandle + 0x21c,4);
        }
        else {
          localInt1 = 0x1c;
        }
        if (localInt1 == 0) {
          *(uint32 *)(resourceHandle + 0x200) = *(uint32 *)(resourceHandle + 0x10);
          *(uint32 *)(resourceHandle + 0x204) = *(uint32 *)(resourceHandle + 0x14);
          *(uint32 *)(resourceHandle + 0x208) = *(uint32 *)(resourceHandle + 0x18);
          *(uint32 *)(resourceHandle + 0x20c) = *(uint32 *)(resourceHandle + 0x1c);
                    // WARNING: Subroutine does not return
          FUN_1808ddf80(memorySize,localBuffer);
        }
      }
    }
  }
  return;
}




// 函数: void FUN_18089d557(uint32 resourceHandle)
void FUN_18089d557(uint32 resourceHandle)

{
  int localInt1;
  uint64 *baseRegister;
  longlong unaff_RDI;
  uint32 extraout_XMM0_Da;
  
  localInt1 = FUN_1808ddc20(resourceHandle,&stack0x00000030,0);
  if (localInt1 == 0) {
    localInt1 = FUN_180899360(extraout_XMM0_Da,unaff_RDI + 0x10);
    if (localInt1 == 0) {
      if (*(uint *)(baseRegister + 8) < 0x37) {
        localInt1 = 0;
      }
      else if (*(int *)(baseRegister[1] + 0x18) == 0) {
        localInt1 = FUN_1808aed00(*baseRegister,unaff_RDI + 0x210,8);
      }
      else {
        localInt1 = 0x1c;
      }
      if (localInt1 == 0) {
        *(uint32 *)(unaff_RDI + 0x218) = *(uint32 *)(baseRegister + 8);
        if (*(uint *)(baseRegister + 8) < 0x41) {
          localInt1 = 0;
        }
        else if (*(int *)(baseRegister[1] + 0x18) == 0) {
          localInt1 = FUN_1808aed00(*baseRegister,unaff_RDI + 0x2f4,4);
        }
        else {
          localInt1 = 0x1c;
        }
        if (localInt1 == 0) {
          if (*(uint *)(baseRegister + 8) < 0x4d) {
            localInt1 = 0;
          }
          else if (*(int *)(baseRegister[1] + 0x18) == 0) {
            localInt1 = FUN_1808aed00(*baseRegister,unaff_RDI + 0x21c,4);
          }
          else {
            localInt1 = 0x1c;
          }
          if (localInt1 == 0) {
            *(uint32 *)(unaff_RDI + 0x200) = *(uint32 *)(unaff_RDI + 0x10);
            *(uint32 *)(unaff_RDI + 0x204) = *(uint32 *)(unaff_RDI + 0x14);
            *(uint32 *)(unaff_RDI + 0x208) = *(uint32 *)(unaff_RDI + 0x18);
            *(uint32 *)(unaff_RDI + 0x20c) = *(uint32 *)(unaff_RDI + 0x1c);
                    // WARNING: Subroutine does not return
            FUN_1808ddf80(*(uint32 *)(unaff_RDI + 0x10),&stack0x00000030);
          }
        }
      }
    }
  }
  return;
}




// 函数: void FUN_18089dcd6(void)
void FUN_18089dcd6(void)

{
  return;
}



ulonglong FUN_18089dcf0(longlong resourceHandle,uint64 *memorySize)

{
  uint64 localUInt1;
  uint localUInt2;
  ulonglong uVar3;
  ulonglong uVar4;
  byte auStackX_18 [4];
  byte auStackX_1c [12];
  byte localBuffer [32];
  byte localBuffer [32];
  
  uVar3 = FUN_1808ddc20(memorySize,localBuffer,1,0x54495053);
  if ((((int)uVar3 == 0) &&
      (uVar3 = FUN_1808ddc20(memorySize,localBuffer,0,0x42495053), (int)uVar3 == 0)) &&
     (uVar3 = FUN_180899360(memorySize,resourceHandle + 0x10), (int)uVar3 == 0)) {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    uVar3 = FUN_1808aed00(*memorySize,resourceHandle + 0xf0,4);
    if ((int)uVar3 != 0) {
      return uVar3;
    }
    if (*(int *)(memorySize[1] + 0x18) == 0) {
      localUInt2 = FUN_1808aed00(*memorySize,resourceHandle + 0xf8,4);
      uVar3 = (ulonglong)localUInt2;
      if (localUInt2 == 0) {
        if (((*(uint *)(memorySize + 8) < 0x8a) && (*(int *)(resourceHandle + 0xf8) == 0)) ||
           ((*(uint *)(memorySize + 8) < 0x8e && (*(int *)(resourceHandle + 0xf8) == 0x7fffffff)))) {
          *(uint32 *)(resourceHandle + 0xf8) = 0x21;
        }
        uVar3 = FUN_180898ef0(memorySize,resourceHandle + 0x100);
        if ((int)uVar3 == 0) {
          uVar4 = 0x1c;
          if (*(uint *)(memorySize + 8) < 0x68) {
            uVar3 = uVar4;
            if (*(int *)(memorySize[1] + 0x18) == 0) {
              localUInt1 = *memorySize;
              uVar3 = FUN_1808995c0(localUInt1,auStackX_18);
              if ((int)uVar3 == 0) {
                uVar3 = FUN_1808995c0(localUInt1,auStackX_1c);
              }
            }
          }
          else {
            uVar3 = 0;
          }
          if ((int)uVar3 == 0) {
            if (*(uint *)(memorySize + 8) < 0x39) {
              uVar3 = 0;
            }
            else {
              uVar3 = uVar4;
              if (*(int *)(memorySize[1] + 0x18) == 0) {
                uVar3 = FUN_1808aed00(*memorySize,resourceHandle + 0xf4,4);
              }
            }
            if ((int)uVar3 == 0) {
              if (*(uint *)(memorySize + 8) < 0x5e) {
                uVar3 = 0;
              }
              else {
                uVar3 = uVar4;
                if (*(int *)(memorySize[1] + 0x18) == 0) {
                  localUInt2 = FUN_1808995c0(*memorySize,resourceHandle + 0xfc);
                  uVar3 = (ulonglong)localUInt2;
                }
              }
              if (((int)uVar3 == 0) &&
                 ((*(uint *)(memorySize + 8) < 0x85 ||
                  (uVar3 = FUN_180899220(memorySize,resourceHandle + 0x108), (int)uVar3 == 0)))) {
                    // WARNING: Subroutine does not return
                FUN_1808ddf80(memorySize,localBuffer);
              }
            }
          }
        }
      }
    }
    else {
      uVar3 = 0x1c;
    }
  }
  return uVar3;
}



ulonglong FUN_18089dd54(void)

{
  uint64 localUInt1;
  uint localUInt2;
  longlong inputRegister;
  ulonglong uVar3;
  uint64 *baseRegister;
  longlong unaff_RSI;
  ulonglong uVar4;
  
  if (*(int *)(inputRegister + 0x18) != 0) {
    return 0x1c;
  }
  uVar3 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xf0,4);
  if ((int)uVar3 == 0) {
    if (*(int *)(baseRegister[1] + 0x18) == 0) {
      localUInt2 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xf8,4);
      uVar3 = (ulonglong)localUInt2;
      if (localUInt2 == 0) {
        if (((*(uint *)(baseRegister + 8) < 0x8a) && (*(int *)(unaff_RSI + 0xf8) == 0)) ||
           ((*(uint *)(baseRegister + 8) < 0x8e && (*(int *)(unaff_RSI + 0xf8) == 0x7fffffff)))) {
          *(uint32 *)(unaff_RSI + 0xf8) = 0x21;
        }
        uVar3 = FUN_180898ef0();
        if ((int)uVar3 == 0) {
          uVar4 = 0x1c;
          if (*(uint *)(baseRegister + 8) < 0x68) {
            uVar3 = uVar4;
            if (*(int *)(baseRegister[1] + 0x18) == 0) {
              localUInt1 = *baseRegister;
              uVar3 = FUN_1808995c0(localUInt1,&stack0x00000090);
              if ((int)uVar3 == 0) {
                uVar3 = FUN_1808995c0(localUInt1,&stack0x00000094);
              }
            }
          }
          else {
            uVar3 = 0;
          }
          if ((int)uVar3 == 0) {
            if (*(uint *)(baseRegister + 8) < 0x39) {
              uVar3 = 0;
            }
            else {
              uVar3 = uVar4;
              if (*(int *)(baseRegister[1] + 0x18) == 0) {
                uVar3 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xf4,4);
              }
            }
            if ((int)uVar3 == 0) {
              if (*(uint *)(baseRegister + 8) < 0x5e) {
                uVar3 = 0;
              }
              else {
                uVar3 = uVar4;
                if (*(int *)(baseRegister[1] + 0x18) == 0) {
                  localUInt2 = FUN_1808995c0(*baseRegister,unaff_RSI + 0xfc);
                  uVar3 = (ulonglong)localUInt2;
                }
              }
              if (((int)uVar3 == 0) &&
                 ((*(uint *)(baseRegister + 8) < 0x85 || (uVar3 = FUN_180899220(), (int)uVar3 == 0))))
              {
                    // WARNING: Subroutine does not return
                FUN_1808ddf80();
              }
            }
          }
        }
      }
    }
    else {
      uVar3 = 0x1c;
    }
    return uVar3;
  }
  return uVar3;
}



ulonglong FUN_18089dd78(void)

{
  uint64 localUInt1;
  uint localUInt2;
  ulonglong uVar3;
  uint64 *baseRegister;
  longlong unaff_RSI;
  ulonglong uVar4;
  
  uVar3 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xf0,4);
  if ((int)uVar3 != 0) {
    return uVar3;
  }
  if (*(int *)(baseRegister[1] + 0x18) == 0) {
    localUInt2 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xf8,4);
    uVar3 = (ulonglong)localUInt2;
    if (localUInt2 == 0) {
      if (((*(uint *)(baseRegister + 8) < 0x8a) && (*(int *)(unaff_RSI + 0xf8) == 0)) ||
         ((*(uint *)(baseRegister + 8) < 0x8e && (*(int *)(unaff_RSI + 0xf8) == 0x7fffffff)))) {
        *(uint32 *)(unaff_RSI + 0xf8) = 0x21;
      }
      uVar3 = FUN_180898ef0();
      if ((int)uVar3 == 0) {
        uVar4 = 0x1c;
        if (*(uint *)(baseRegister + 8) < 0x68) {
          uVar3 = uVar4;
          if (*(int *)(baseRegister[1] + 0x18) == 0) {
            localUInt1 = *baseRegister;
            uVar3 = FUN_1808995c0(localUInt1,&stack0x00000090);
            if ((int)uVar3 == 0) {
              uVar3 = FUN_1808995c0(localUInt1,&stack0x00000094);
            }
          }
        }
        else {
          uVar3 = 0;
        }
        if ((int)uVar3 == 0) {
          if (*(uint *)(baseRegister + 8) < 0x39) {
            uVar3 = 0;
          }
          else {
            uVar3 = uVar4;
            if (*(int *)(baseRegister[1] + 0x18) == 0) {
              uVar3 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xf4,4);
            }
          }
          if ((int)uVar3 == 0) {
            if (*(uint *)(baseRegister + 8) < 0x5e) {
              uVar3 = 0;
            }
            else {
              uVar3 = uVar4;
              if (*(int *)(baseRegister[1] + 0x18) == 0) {
                localUInt2 = FUN_1808995c0(*baseRegister,unaff_RSI + 0xfc);
                uVar3 = (ulonglong)localUInt2;
              }
            }
            if (((int)uVar3 == 0) &&
               ((*(uint *)(baseRegister + 8) < 0x85 || (uVar3 = FUN_180899220(), (int)uVar3 == 0)))) {
                    // WARNING: Subroutine does not return
              FUN_1808ddf80();
            }
          }
        }
      }
    }
  }
  else {
    uVar3 = 0x1c;
  }
  return uVar3;
}



ulonglong FUN_18089dda2(void)

{
  uint64 localUInt1;
  uint localUInt2;
  ulonglong uVar3;
  uint64 *baseRegister;
  longlong unaff_RSI;
  ulonglong uVar4;
  
  if (*(int *)(baseRegister[1] + 0x18) == 0) {
    localUInt2 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xf8,4);
    uVar3 = (ulonglong)localUInt2;
    if (localUInt2 == 0) {
      if (((*(uint *)(baseRegister + 8) < 0x8a) && (*(int *)(unaff_RSI + 0xf8) == 0)) ||
         ((*(uint *)(baseRegister + 8) < 0x8e && (*(int *)(unaff_RSI + 0xf8) == 0x7fffffff)))) {
        *(uint32 *)(unaff_RSI + 0xf8) = 0x21;
      }
      uVar3 = FUN_180898ef0();
      if ((int)uVar3 == 0) {
        uVar4 = 0x1c;
        if (*(uint *)(baseRegister + 8) < 0x68) {
          uVar3 = uVar4;
          if (*(int *)(baseRegister[1] + 0x18) == 0) {
            localUInt1 = *baseRegister;
            uVar3 = FUN_1808995c0(localUInt1,&stack0x00000090);
            if ((int)uVar3 == 0) {
              uVar3 = FUN_1808995c0(localUInt1,&stack0x00000094);
            }
          }
        }
        else {
          uVar3 = 0;
        }
        if ((int)uVar3 == 0) {
          if (*(uint *)(baseRegister + 8) < 0x39) {
            uVar3 = 0;
          }
          else {
            uVar3 = uVar4;
            if (*(int *)(baseRegister[1] + 0x18) == 0) {
              uVar3 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xf4,4);
            }
          }
          if ((int)uVar3 == 0) {
            if (*(uint *)(baseRegister + 8) < 0x5e) {
              uVar3 = 0;
            }
            else {
              uVar3 = uVar4;
              if (*(int *)(baseRegister[1] + 0x18) == 0) {
                localUInt2 = FUN_1808995c0(*baseRegister,unaff_RSI + 0xfc);
                uVar3 = (ulonglong)localUInt2;
              }
            }
            if (((int)uVar3 == 0) &&
               ((*(uint *)(baseRegister + 8) < 0x85 || (uVar3 = FUN_180899220(), (int)uVar3 == 0)))) {
                    // WARNING: Subroutine does not return
              FUN_1808ddf80();
            }
          }
        }
      }
    }
  }
  else {
    uVar3 = 0x1c;
  }
  return uVar3;
}



ulonglong FUN_18089de39(void)

{
  uint64 localUInt1;
  ulonglong localUInt2;
  uint64 *baseRegister;
  longlong unaff_RSI;
  uint unaff_EDI;
  
  localUInt1 = *baseRegister;
  localUInt2 = FUN_1808995c0(localUInt1,&stack0x00000090);
  if ((int)localUInt2 == 0) {
    localUInt2 = FUN_1808995c0(localUInt1,&stack0x00000094);
  }
  if ((int)localUInt2 == 0) {
    if (*(uint *)(baseRegister + 8) < 0x39) {
      localUInt2 = 0;
    }
    else if (*(int *)(baseRegister[1] + 0x18) == 0) {
      localUInt2 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xf4,4);
    }
    else {
      localUInt2 = (ulonglong)unaff_EDI;
    }
    if ((int)localUInt2 == 0) {
      if (*(uint *)(baseRegister + 8) < 0x5e) {
        unaff_EDI = 0;
      }
      else if (*(int *)(baseRegister[1] + 0x18) == 0) {
        unaff_EDI = FUN_1808995c0(*baseRegister,unaff_RSI + 0xfc);
      }
      if (unaff_EDI == 0) {
        if ((0x84 < *(uint *)(baseRegister + 8)) && (localUInt2 = FUN_180899220(), (int)localUInt2 != 0)) {
          return localUInt2;
        }
                    // WARNING: Subroutine does not return
        FUN_1808ddf80();
      }
      localUInt2 = (ulonglong)unaff_EDI;
    }
  }
  return localUInt2;
}



ulonglong FUN_18089de72(void)

{
  ulonglong localUInt1;
  uint64 *baseRegister;
  longlong unaff_RSI;
  uint unaff_EDI;
  
  if (*(uint *)(baseRegister + 8) < 0x39) {
    localUInt1 = 0;
  }
  else if (*(int *)(baseRegister[1] + 0x18) == 0) {
    localUInt1 = FUN_1808aed00(*baseRegister,unaff_RSI + 0xf4,4);
  }
  else {
    localUInt1 = (ulonglong)unaff_EDI;
  }
  if ((int)localUInt1 == 0) {
    if (*(uint *)(baseRegister + 8) < 0x5e) {
      unaff_EDI = 0;
    }
    else if (*(int *)(baseRegister[1] + 0x18) == 0) {
      unaff_EDI = FUN_1808995c0(*baseRegister,unaff_RSI + 0xfc);
    }
    if (unaff_EDI == 0) {
      if ((*(uint *)(baseRegister + 8) < 0x85) || (localUInt1 = FUN_180899220(), (int)localUInt1 == 0)) {
                    // WARNING: Subroutine does not return
        FUN_1808ddf80();
      }
    }
    else {
      localUInt1 = (ulonglong)unaff_EDI;
    }
  }
  return localUInt1;
}




// 函数: void FUN_18089df30(void)
void FUN_18089df30(void)

{
  return;
}



uint64 FUN_18089df40(longlong resourceHandle,uint64 *memorySize)

{
  uint64 localUInt1;
  uint64 localUInt2;
  byte localBuffer [32];
  byte localBuffer [32];
  
  localUInt2 = FUN_1808ddc20(memorySize,localBuffer,1,0x46464553);
  if (((((int)localUInt2 == 0) &&
       (localUInt2 = FUN_1808ddc20(memorySize,localBuffer,0,0x42464553), (int)localUInt2 == 0)) &&
      (localUInt2 = FUN_180899360(memorySize,resourceHandle + 0x10), (int)localUInt2 == 0)) &&
     ((0x5a < *(uint *)(memorySize + 8) ||
      (localUInt2 = FUN_1808afc70(memorySize,resourceHandle + 0x44), (int)localUInt2 == 0)))) {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    localUInt1 = *memorySize;
    localUInt2 = FUN_1808aed00(localUInt1,resourceHandle + 0x4c,4);
    if ((((int)localUInt2 == 0) && (localUInt2 = FUN_1808aed00(localUInt1,resourceHandle + 0x50,2), (int)localUInt2 == 0)) &&
       (localUInt2 = FUN_1808aed00(localUInt1,resourceHandle + 0x52,2), (int)localUInt2 == 0)) {
      localUInt2 = FUN_1808aed00(localUInt1,resourceHandle + 0x54,8);
    }
    if ((int)localUInt2 == 0) {
      if (*(int *)(memorySize[1] + 0x18) != 0) {
        return 0x1c;
      }
      localUInt2 = FUN_1808995c0(*memorySize,resourceHandle + 0x48);
      if ((int)localUInt2 == 0) {
        if (*(uint *)(memorySize + 8) < 0x3d) {
          localUInt2 = 0;
        }
        else if (*(int *)(memorySize[1] + 0x18) == 0) {
          localUInt2 = FUN_1808a2e00(*memorySize,resourceHandle + 0x40);
        }
        else {
          localUInt2 = 0x1c;
        }
        if ((int)localUInt2 == 0) {
                    // WARNING: Subroutine does not return
          FUN_1808ddf80(memorySize,localBuffer);
        }
      }
    }
  }
  return localUInt2;
}



uint64 FUN_18089dfc1(void)

{
  uint64 localUInt1;
  longlong inputRegister;
  uint64 localUInt2;
  uint64 *baseRegister;
  longlong unaff_RDI;
  
  if (*(int *)(inputRegister + 0x18) != 0) {
    return 0x1c;
  }
  localUInt1 = *baseRegister;
  localUInt2 = FUN_1808aed00(localUInt1,unaff_RDI + 0x4c,4);
  if ((((int)localUInt2 == 0) && (localUInt2 = FUN_1808aed00(localUInt1,unaff_RDI + 0x50,2), (int)localUInt2 == 0)) &&
     (localUInt2 = FUN_1808aed00(localUInt1,unaff_RDI + 0x52,2), (int)localUInt2 == 0)) {
    localUInt2 = FUN_1808aed00(localUInt1,unaff_RDI + 0x54,8);
  }
  if ((int)localUInt2 == 0) {
    if (*(int *)(baseRegister[1] + 0x18) != 0) {
      return 0x1c;
    }
    localUInt2 = FUN_1808995c0(*baseRegister,unaff_RDI + 0x48);
    if ((int)localUInt2 == 0) {
      if (*(uint *)(baseRegister + 8) < 0x3d) {
        localUInt2 = 0;
      }
      else if (*(int *)(baseRegister[1] + 0x18) == 0) {
        localUInt2 = FUN_1808a2e00(*baseRegister,unaff_RDI + 0x40);
      }
      else {
        localUInt2 = 0x1c;
      }
      if ((int)localUInt2 == 0) {
                    // WARNING: Subroutine does not return
        FUN_1808ddf80();
      }
    }
  }
  return localUInt2;
}



uint64 FUN_18089dfe4(void)

{
  uint64 localUInt1;
  uint64 localUInt2;
  uint64 *baseRegister;
  longlong unaff_RDI;
  
  localUInt1 = *baseRegister;
  localUInt2 = FUN_1808aed00(localUInt1,unaff_RDI + 0x4c,4);
  if ((int)localUInt2 == 0) {
    localUInt2 = FUN_1808aed00(localUInt1,unaff_RDI + 0x50,2);
    if ((int)localUInt2 == 0) {
      localUInt2 = FUN_1808aed00(localUInt1,unaff_RDI + 0x52,2);
      if ((int)localUInt2 == 0) {
        localUInt2 = FUN_1808aed00(localUInt1,unaff_RDI + 0x54,8);
      }
    }
  }
  if ((int)localUInt2 == 0) {
    if (*(int *)(baseRegister[1] + 0x18) != 0) {
      return 0x1c;
    }
    localUInt2 = FUN_1808995c0(*baseRegister,unaff_RDI + 0x48);
    if ((int)localUInt2 == 0) {
      if (*(uint *)(baseRegister + 8) < 0x3d) {
        localUInt2 = 0;
      }
      else if (*(int *)(baseRegister[1] + 0x18) == 0) {
        localUInt2 = FUN_1808a2e00(*baseRegister,unaff_RDI + 0x40);
      }
      else {
        localUInt2 = 0x1c;
      }
      if ((int)localUInt2 == 0) {
                    // WARNING: Subroutine does not return
        FUN_1808ddf80();
      }
    }
  }
  return localUInt2;
}



uint64 FUN_18089e043(void)

{
  uint64 localUInt1;
  uint64 *baseRegister;
  longlong unaff_RDI;
  
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  localUInt1 = FUN_1808995c0(*baseRegister,unaff_RDI + 0x48);
  if ((int)localUInt1 == 0) {
    if (*(uint *)(baseRegister + 8) < 0x3d) {
      localUInt1 = 0;
    }
    else if (*(int *)(baseRegister[1] + 0x18) == 0) {
      localUInt1 = FUN_1808a2e00(*baseRegister,unaff_RDI + 0x40);
    }
    else {
      localUInt1 = 0x1c;
    }
    if ((int)localUInt1 == 0) {
                    // WARNING: Subroutine does not return
      FUN_1808ddf80();
    }
  }
  return localUInt1;
}




// 函数: void FUN_18089e0be(void)
void FUN_18089e0be(void)

{
  return;
}



uint64 FUN_18089e0d0(longlong resourceHandle,uint64 *memorySize)

{
  uint64 localUInt1;
  byte localBuffer [32];
  byte localBuffer [32];
  
  if ((0x87 < *(uint *)(memorySize + 8)) &&
     (localUInt1 = FUN_1808ddc20(memorySize,localBuffer,1,0x46464353), (int)localUInt1 != 0)) {
    return localUInt1;
  }
  localUInt1 = FUN_1808ddc20(memorySize,localBuffer,0,0x46454353);
  if (((int)localUInt1 == 0) && (localUInt1 = FUN_180899360(memorySize,resourceHandle + 0x10), (int)localUInt1 == 0)) {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    localUInt1 = FUN_1808a2e00(*memorySize,resourceHandle + 0x6c);
    if (((int)localUInt1 == 0) && (localUInt1 = FUN_1808a5d60(memorySize,resourceHandle + 0x48,0), (int)localUInt1 == 0)) {
      if ((*(int *)(memorySize + 8) - 0x4aU < 0x11) &&
         (localUInt1 = FUN_1808afc70(memorySize,resourceHandle + 0x44), (int)localUInt1 != 0)) {
        return localUInt1;
      }
      if ((0x52 < *(uint *)(memorySize + 8)) &&
         (localUInt1 = FUN_1808a5d60(memorySize,resourceHandle + 0x58,0), (int)localUInt1 != 0)) {
        return localUInt1;
      }
      if (*(uint *)(memorySize + 8) < 0x88) {
        localUInt1 = 0;
      }
      else if (*(int *)(memorySize[1] + 0x18) == 0) {
        localUInt1 = FUN_1808995c0(*memorySize,resourceHandle + 0x68);
      }
      else {
        localUInt1 = 0x1c;
      }
      if ((int)localUInt1 == 0) {
                    // WARNING: Subroutine does not return
        FUN_1808ddf80(memorySize,localBuffer);
      }
    }
  }
  return localUInt1;
}



ulonglong FUN_18089e230(longlong resourceHandle,longlong *memorySize)

{
  longlong *plocalLong1;
  ulonglong localUInt2;
  uint uVar3;
  uint uVar4;
  uint uVar6;
  ulonglong uVar7;
  uint auStackX_18 [2];
  uint auStackX_20 [2];
  byte localBuffer [32];
  byte localBuffer [32];
  ulonglong uVar5;
  
  localUInt2 = FUN_1808ddc20(memorySize,localBuffer,1,0x50414e53);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  localUInt2 = FUN_1808ddc20(memorySize,localBuffer,0,0x42414e53);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  localUInt2 = FUN_180899360(memorySize,resourceHandle + 0x10);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  localUInt2 = FUN_1808aed00(*memorySize,resourceHandle + 0x44,4);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  uVar7 = 0;
  auStackX_20[0] = 0;
  localUInt2 = FUN_1808afe30(*memorySize,auStackX_20);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  auStackX_18[0] = 0;
  uVar3 = auStackX_20[0] & 1;
  uVar6 = auStackX_20[0] >> 1;
  localUInt2 = uVar7;
  uVar5 = uVar7;
  if (uVar6 != 0) {
    do {
      localUInt2 = FUN_1808dde10(memorySize,localUInt2);
      if ((int)localUInt2 != 0) {
        return localUInt2;
      }
      localUInt2 = FUN_1808a8120(memorySize,resourceHandle + 0x30,uVar5,resourceHandle);
      if ((int)localUInt2 != 0) {
        return localUInt2;
      }
      localUInt2 = FUN_1808de0e0(memorySize,auStackX_18);
      if ((int)localUInt2 != 0) {
        return localUInt2;
      }
      uVar4 = (int)uVar5 + 1;
      uVar5 = (ulonglong)uVar4;
      auStackX_18[0] = auStackX_18[0] & -uVar3;
      localUInt2 = (ulonglong)auStackX_18[0];
    } while ((int)uVar4 < (int)uVar6);
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar3 = FUN_1808a2e00(*memorySize,resourceHandle + 0x48);
  if (uVar3 != 0) {
    return (ulonglong)uVar3;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  plocalLong1 = (longlong *)*memorySize;
  if (*plocalLong1 == 0) {
    localUInt2 = 0x1c;
  }
  else {
    if (plocalLong1[2] != 0) {
      auStackX_18[0] = 0;
      localUInt2 = func_0x00018076a7d0(*plocalLong1,auStackX_18);
      if ((int)localUInt2 != 0) {
        return localUInt2;
      }
      if ((ulonglong)plocalLong1[2] < (ulonglong)auStackX_18[0] + 4) {
        localUInt2 = 0x11;
        goto LAB_18089e447;
      }
    }
    localUInt2 = FUN_180769ed0(*plocalLong1,auStackX_20,1,4,0);
  }
LAB_18089e447:
  if ((int)localUInt2 == 0) {
    *(uint *)(resourceHandle + 0x4c) = auStackX_20[0];
    localUInt2 = 0xd;
    if (auStackX_20[0] < 7) {
      localUInt2 = uVar7;
    }
    if ((int)localUInt2 == 0) {
      localUInt2 = uVar7;
      if ((0x32 < *(uint *)(memorySize + 8)) && (localUInt2 = 0x1c, *(int *)(memorySize[1] + 0x18) == 0)) {
        uVar3 = FUN_1808995c0(*memorySize,resourceHandle + 0x40);
        localUInt2 = (ulonglong)uVar3;
      }
      if ((int)localUInt2 == 0) {
                    // WARNING: Subroutine does not return
        FUN_1808ddf80(memorySize,localBuffer);
      }
    }
  }
  return localUInt2;
}



ulonglong FUN_18089e297(void)

{
  longlong *plocalLong1;
  longlong inputRegister;
  ulonglong localUInt2;
  ulonglong uVar3;
  longlong *baseRegister;
  uint uVar4;
  longlong unaff_RSI;
  uint uVar5;
  uint uVar6;
  ulonglong uVar7;
  uint in_stack_000000b0;
  uint in_stack_000000b8;
  
  if (*(int *)(inputRegister + 0x18) != 0) {
    return 0x1c;
  }
  localUInt2 = FUN_1808aed00(*baseRegister,unaff_RSI + 0x44,4);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  uVar7 = 0;
  in_stack_000000b8 = 0;
  localUInt2 = FUN_1808afe30(*baseRegister,&stack0x000000b8);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  in_stack_000000b0 = 0;
  uVar4 = in_stack_000000b8 & 1;
  uVar6 = in_stack_000000b8 >> 1;
  localUInt2 = uVar7;
  if (uVar6 != 0) {
    do {
      uVar3 = FUN_1808dde10();
      if ((int)uVar3 != 0) {
        return uVar3;
      }
      uVar3 = FUN_1808a8120();
      if ((int)uVar3 != 0) {
        return uVar3;
      }
      uVar3 = FUN_1808de0e0();
      if ((int)uVar3 != 0) {
        return uVar3;
      }
      uVar5 = (int)localUInt2 + 1;
      localUInt2 = (ulonglong)uVar5;
      in_stack_000000b0 = in_stack_000000b0 & -uVar4;
    } while ((int)uVar5 < (int)uVar6);
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar4 = FUN_1808a2e00(*baseRegister,unaff_RSI + 0x48);
  if (uVar4 != 0) {
    return (ulonglong)uVar4;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  plocalLong1 = (longlong *)*baseRegister;
  if (*plocalLong1 == 0) {
    localUInt2 = 0x1c;
  }
  else {
    if (plocalLong1[2] != 0) {
      in_stack_000000b0 = 0;
      localUInt2 = func_0x00018076a7d0(*plocalLong1,&stack0x000000b0);
      if ((int)localUInt2 != 0) {
        return localUInt2;
      }
      if ((ulonglong)plocalLong1[2] < (ulonglong)in_stack_000000b0 + 4) {
        localUInt2 = 0x11;
        goto LAB_18089e447;
      }
    }
    localUInt2 = FUN_180769ed0(*plocalLong1,&stack0x000000b8,1,4,0);
  }
LAB_18089e447:
  if ((int)localUInt2 == 0) {
    *(uint *)(unaff_RSI + 0x4c) = in_stack_000000b8;
    localUInt2 = 0xd;
    if (in_stack_000000b8 < 7) {
      localUInt2 = uVar7;
    }
    if ((int)localUInt2 == 0) {
      localUInt2 = uVar7;
      if ((0x32 < *(uint *)(baseRegister + 8)) && (localUInt2 = 0x1c, *(int *)(baseRegister[1] + 0x18) == 0)) {
        uVar4 = FUN_1808995c0(*baseRegister,unaff_RSI + 0x40);
        localUInt2 = (ulonglong)uVar4;
      }
      if ((int)localUInt2 == 0) {
                    // WARNING: Subroutine does not return
        FUN_1808ddf80();
      }
    }
  }
  return localUInt2;
}



ulonglong FUN_18089e2be(void)

{
  longlong *plocalLong1;
  ulonglong localUInt2;
  ulonglong uVar3;
  longlong *baseRegister;
  uint uVar4;
  longlong unaff_RSI;
  uint uVar5;
  uint uVar6;
  ulonglong uVar7;
  uint in_stack_000000b0;
  uint in_stack_000000b8;
  
  localUInt2 = FUN_1808aed00(*baseRegister,unaff_RSI + 0x44,4);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  uVar7 = 0;
  in_stack_000000b8 = 0;
  localUInt2 = FUN_1808afe30(*baseRegister,&stack0x000000b8);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  in_stack_000000b0 = 0;
  uVar4 = in_stack_000000b8 & 1;
  uVar6 = in_stack_000000b8 >> 1;
  localUInt2 = uVar7;
  if (uVar6 != 0) {
    do {
      uVar3 = FUN_1808dde10();
      if ((int)uVar3 != 0) {
        return uVar3;
      }
      uVar3 = FUN_1808a8120();
      if ((int)uVar3 != 0) {
        return uVar3;
      }
      uVar3 = FUN_1808de0e0();
      if ((int)uVar3 != 0) {
        return uVar3;
      }
      uVar5 = (int)localUInt2 + 1;
      localUInt2 = (ulonglong)uVar5;
      in_stack_000000b0 = in_stack_000000b0 & -uVar4;
    } while ((int)uVar5 < (int)uVar6);
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar4 = FUN_1808a2e00(*baseRegister,unaff_RSI + 0x48);
  if (uVar4 != 0) {
    return (ulonglong)uVar4;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  plocalLong1 = (longlong *)*baseRegister;
  if (*plocalLong1 == 0) {
    localUInt2 = 0x1c;
  }
  else {
    if (plocalLong1[2] != 0) {
      in_stack_000000b0 = 0;
      localUInt2 = func_0x00018076a7d0(*plocalLong1,&stack0x000000b0);
      if ((int)localUInt2 != 0) {
        return localUInt2;
      }
      if ((ulonglong)plocalLong1[2] < (ulonglong)in_stack_000000b0 + 4) {
        localUInt2 = 0x11;
        goto LAB_18089e447;
      }
    }
    localUInt2 = FUN_180769ed0(*plocalLong1,&stack0x000000b8,1,4,0);
  }
LAB_18089e447:
  if ((int)localUInt2 == 0) {
    *(uint *)(unaff_RSI + 0x4c) = in_stack_000000b8;
    localUInt2 = 0xd;
    if (in_stack_000000b8 < 7) {
      localUInt2 = uVar7;
    }
    if ((int)localUInt2 == 0) {
      localUInt2 = uVar7;
      if ((0x32 < *(uint *)(baseRegister + 8)) && (localUInt2 = 0x1c, *(int *)(baseRegister[1] + 0x18) == 0)) {
        uVar4 = FUN_1808995c0(*baseRegister,unaff_RSI + 0x40);
        localUInt2 = (ulonglong)uVar4;
      }
      if ((int)localUInt2 == 0) {
                    // WARNING: Subroutine does not return
        FUN_1808ddf80();
      }
    }
  }
  return localUInt2;
}



ulonglong FUN_18089e2e8(void)

{
  longlong *plocalLong1;
  ulonglong localUInt2;
  ulonglong uVar3;
  longlong *baseRegister;
  uint uVar4;
  longlong unaff_RSI;
  uint uVar5;
  uint uVar6;
  ulonglong uVar7;
  uint in_stack_000000b0;
  uint uStack00000000000000b8;
  
  uVar7 = 0;
  uStack00000000000000b8 = 0;
  localUInt2 = FUN_1808afe30(*baseRegister,&stack0x000000b8);
  if ((int)localUInt2 != 0) {
    return localUInt2;
  }
  in_stack_000000b0 = 0;
  uVar4 = uStack00000000000000b8 & 1;
  uVar6 = uStack00000000000000b8 >> 1;
  localUInt2 = uVar7;
  if (uVar6 != 0) {
    do {
      uVar3 = FUN_1808dde10();
      if ((int)uVar3 != 0) {
        return uVar3;
      }
      uVar3 = FUN_1808a8120();
      if ((int)uVar3 != 0) {
        return uVar3;
      }
      uVar3 = FUN_1808de0e0();
      if ((int)uVar3 != 0) {
        return uVar3;
      }
      uVar5 = (int)localUInt2 + 1;
      localUInt2 = (ulonglong)uVar5;
      in_stack_000000b0 = in_stack_000000b0 & -uVar4;
    } while ((int)uVar5 < (int)uVar6);
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar4 = FUN_1808a2e00(*baseRegister,unaff_RSI + 0x48);
  if (uVar4 != 0) {
    return (ulonglong)uVar4;
  }
  if (*(int *)(baseRegister[1] + 0x18) != 0) {
    return 0x1c;
  }
  plocalLong1 = (longlong *)*baseRegister;
  if (*plocalLong1 == 0) {
    localUInt2 = 0x1c;
  }
  else {
    if (plocalLong1[2] != 0) {
      in_stack_000000b0 = 0;
      localUInt2 = func_0x00018076a7d0(*plocalLong1,&stack0x000000b0);
      if ((int)localUInt2 != 0) {
        return localUInt2;
      }
      if ((ulonglong)plocalLong1[2] < (ulonglong)in_stack_000000b0 + 4) {
        localUInt2 = 0x11;
        goto LAB_18089e447;
      }
    }
    localUInt2 = FUN_180769ed0(*plocalLong1,&stack0x000000b8,1,4,0);
  }
LAB_18089e447:
  if ((int)localUInt2 == 0) {
    *(uint *)(unaff_RSI + 0x4c) = uStack00000000000000b8;
    localUInt2 = 0xd;
    if (uStack00000000000000b8 < 7) {
      localUInt2 = uVar7;
    }
    if ((int)localUInt2 == 0) {
      localUInt2 = uVar7;
      if ((0x32 < *(uint *)(baseRegister + 8)) && (localUInt2 = 0x1c, *(int *)(baseRegister[1] + 0x18) == 0)) {
        uVar4 = FUN_1808995c0(*baseRegister,unaff_RSI + 0x40);
        localUInt2 = (ulonglong)uVar4;
      }
      if ((int)localUInt2 == 0) {
                    // WARNING: Subroutine does not return
        FUN_1808ddf80();
      }
    }
  }
  return localUInt2;
}




// 函数: void FUN_18089e4d7(void)
void FUN_18089e4d7(void)

{
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

ulonglong FUN_18089e4f0(longlong resourceHandle,uint64 *memorySize)

{
  uint32 localUInt1;
  uint64 localUInt2;
  uint uVar3;
  ulonglong uVar4;
  uint32 *puVar5;
  longlong lVar6;
  uint32 *localPtr;
  uint64 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  byte localBuffer [32];
  byte localBuffer [32];
  
  uVar4 = FUN_1808ddc20(memorySize,localBuffer,1,0x4e4c4d54);
  if ((((int)uVar4 == 0) &&
      (uVar4 = FUN_1808ddc20(memorySize,localBuffer,0,0x424e4c54), (int)uVar4 == 0)) &&
     (uVar4 = FUN_180899360(memorySize,resourceHandle + 0x10), (int)uVar4 == 0)) {
    puVar5 = (uint32 *)FUN_180847820();
    uVar4 = 0;
    localUInt = *puVar5;
    localUInt = puVar5[1];
    localUInt = puVar5[2];
    localUInt = puVar5[3];
    if (*(uint *)(memorySize + 8) < 0x6d) {
      if (*(int *)(memorySize[1] + 0x18) == 0) {
        localUInt2 = *memorySize;
        uVar4 = FUN_1808aed00(localUInt2,&localUInt,4);
        if ((int)uVar4 != 0) {
          return uVar4;
        }
        uVar4 = FUN_1808aed00(localUInt2,&localUInt,2);
        if ((int)uVar4 != 0) {
          return uVar4;
        }
        uVar4 = FUN_1808aed00(localUInt2,(longlong)&localUInt + 2,2);
        if ((int)uVar4 != 0) {
          return uVar4;
        }
        uVar4 = FUN_1808aed00(localUInt2,&localUInt,8);
      }
      else {
        uVar4 = 0x1c;
      }
    }
    if ((((int)uVar4 == 0) && (uVar4 = FUN_1808a5a90(memorySize,resourceHandle + 0x38,0), (int)uVar4 == 0)) &&
       (uVar4 = FUN_1808a5a90(memorySize,resourceHandle + 0x48,0), (int)uVar4 == 0)) {
      if (*(uint *)(memorySize + 8) < 0x84) {
        localPtr = (uint32 *)0x0;
        localUInt = 0;
        uVar3 = FUN_1808a4a20(memorySize,&localPtr,0);
        uVar4 = (ulonglong)uVar3;
        if (uVar3 != 0) {
LAB_18089e70b:
          FUN_18084c150(&localPtr);
          return uVar4;
        }
        puVar5 = localPtr;
        if ((int)localUInt != 0) {
          for (; (localPtr <= puVar5 && (puVar5 < localPtr + (int)localUInt));
              puVar5 = puVar5 + 1) {
            lVar6 = utilityAccessSystemResource(*(uint64 *)(utilitySystemDataTable + 0x1a0),0x28,&unknown_180986e70,0xc1c,
                                  0,0,1);
            if (lVar6 == 0) {
              uVar4 = 0x26;
              goto LAB_18089e70b;
            }
            localUInt1 = *puVar5;
            *(longlong *)lVar6 = lVar6;
            *(longlong *)(lVar6 + 8) = lVar6;
            *(uint32 *)(lVar6 + 0x10) = localUInt1;
            *(uint64 *)(lVar6 + 0x18) = 0;
            *(uint32 *)(lVar6 + 0x20) = 0;
            uVar3 = func_0x0001808aec10(resourceHandle + 0x58,lVar6);
            uVar4 = (ulonglong)uVar3;
            if (uVar3 != 0) goto LAB_18089e70b;
          }
        }
        FUN_18084c150(&localPtr);
      }
      else {
        uVar4 = FUN_1808a71c0(memorySize,resourceHandle + 0x58);
        if ((int)uVar4 != 0) {
          return uVar4;
        }
      }
      uVar4 = FUN_1808ad9d0(memorySize,resourceHandle + 0x78,0);
      if (((int)uVar4 == 0) && (uVar4 = FUN_1808a62d0(memorySize,resourceHandle + 0x88,0), (int)uVar4 == 0)) {
                    // WARNING: Subroutine does not return
        FUN_1808ddf80(memorySize,localBuffer);
      }
    }
  }
  return uVar4;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

ulonglong FUN_18089e558(void)

{
  uint64 localUInt1;
  uint32 localUInt2;
  uint32 uVar3;
  uint32 uVar4;
  uint uVar5;
  int iVar6;
  uint32 *puVar7;
  ulonglong uVar8;
  longlong lVar9;
  longlong unaff_RBP;
  uint32 *plocalUInt10;
  uint64 *unaff_RDI;
  longlong unaff_R15;
  uint32 extraout_XMM0_Da;
  uint32 extraout_XMM0_Da_00;
  uint32 extraout_XMM0_Da_01;
  uint32 extraout_XMM0_Da_02;
  uint32 localUInt11;
  uint32 extraout_XMM0_Da_03;
  uint32 extraout_XMM0_Da_04;
  
  puVar7 = (uint32 *)FUN_180847820();
  uVar8 = 0;
  uVar5 = *(uint *)(unaff_RDI + 8);
  localUInt11 = *puVar7;
  localUInt2 = puVar7[1];
  uVar3 = puVar7[2];
  uVar4 = puVar7[3];
  *(uint32 *)(unaff_RBP + -0x19) = localUInt11;
  *(uint32 *)(unaff_RBP + -0x15) = localUInt2;
  *(uint32 *)(unaff_RBP + -0x11) = uVar3;
  *(uint32 *)(unaff_RBP + -0xd) = uVar4;
  if (uVar5 < 0x6d) {
    if (*(int *)(unaff_RDI[1] + 0x18) == 0) {
      localUInt1 = *unaff_RDI;
      uVar8 = FUN_1808aed00(localUInt1,unaff_RBP + -0x19,4);
      if ((int)uVar8 != 0) {
        return uVar8;
      }
      uVar8 = FUN_1808aed00(localUInt1,unaff_RBP + -0x15,2);
      if ((int)uVar8 != 0) {
        return uVar8;
      }
      uVar8 = FUN_1808aed00(localUInt1,unaff_RBP + -0x13,2);
      if ((int)uVar8 != 0) {
        return uVar8;
      }
      uVar8 = FUN_1808aed00(localUInt1,unaff_RBP + -0x11,8);
      localUInt11 = extraout_XMM0_Da;
    }
    else {
      uVar8 = 0x1c;
    }
  }
  if ((((int)uVar8 == 0) && (uVar8 = FUN_1808a5a90(localUInt11,unaff_R15 + 0x38,0), (int)uVar8 == 0)) &&
     (uVar8 = FUN_1808a5a90(extraout_XMM0_Da_00,unaff_R15 + 0x48,0), (int)uVar8 == 0)) {
    if (*(uint *)(unaff_RDI + 8) < 0x84) {
      *(uint64 *)(unaff_RBP + -0x29) = 0;
      *(uint64 *)(unaff_RBP + -0x21) = 0;
      uVar5 = FUN_1808a4a20(extraout_XMM0_Da_01,unaff_RBP + -0x29,0);
      uVar8 = (ulonglong)uVar5;
      if (uVar5 != 0) {
LAB_18089e70b:
        FUN_18084c150(unaff_RBP + -0x29);
        return uVar8;
      }
      iVar6 = *(int *)(unaff_RBP + -0x21);
      if (iVar6 != 0) {
        puVar7 = *(uint32 **)(unaff_RBP + -0x29);
        for (plocalUInt10 = puVar7; (puVar7 <= plocalUInt10 && (plocalUInt10 < puVar7 + iVar6));
            plocalUInt10 = plocalUInt10 + 1) {
          lVar9 = utilityAccessSystemResource(*(uint64 *)(utilitySystemDataTable + 0x1a0),0x28,&unknown_180986e70,0xc1c,0)
          ;
          if (lVar9 == 0) {
            uVar8 = 0x26;
            goto LAB_18089e70b;
          }
          localUInt11 = *plocalUInt10;
          *(longlong *)lVar9 = lVar9;
          *(longlong *)(lVar9 + 8) = lVar9;
          *(uint32 *)(lVar9 + 0x10) = localUInt11;
          *(uint64 *)(lVar9 + 0x18) = 0;
          *(uint32 *)(lVar9 + 0x20) = 0;
          uVar5 = func_0x0001808aec10(unaff_R15 + 0x58,lVar9);
          uVar8 = (ulonglong)uVar5;
          if (uVar5 != 0) goto LAB_18089e70b;
          iVar6 = *(int *)(unaff_RBP + -0x21);
          puVar7 = *(uint32 **)(unaff_RBP + -0x29);
        }
      }
      localUInt11 = FUN_18084c150(unaff_RBP + -0x29);
    }
    else {
      uVar8 = FUN_1808a71c0(extraout_XMM0_Da_01,unaff_R15 + 0x58);
      localUInt11 = extraout_XMM0_Da_02;
      if ((int)uVar8 != 0) {
        return uVar8;
      }
    }
    uVar8 = FUN_1808ad9d0(localUInt11,unaff_R15 + 0x78,0);
    if (((int)uVar8 == 0) &&
       (uVar8 = FUN_1808a62d0(extraout_XMM0_Da_03,unaff_R15 + 0x88,0), (int)uVar8 == 0)) {
                    // WARNING: Subroutine does not return
      FUN_1808ddf80(extraout_XMM0_Da_04,unaff_RBP + 7);
    }
  }
  return uVar8;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

ulonglong FUN_18089e624(void)

{
  uint32 localUInt1;
  uint localUInt2;
  int localInt3;
  ulonglong uVar4;
  longlong lVar5;
  uint32 *puVar6;
  uint64 baseRegister;
  longlong unaff_RBP;
  uint32 *puVar7;
  longlong unaff_RDI;
  longlong unaff_R15;
  
  if (*(uint *)(unaff_RDI + 0x40) < 0x84) {
    *(uint64 *)(unaff_RBP + -0x29) = baseRegister;
    *(uint64 *)(unaff_RBP + -0x21) = baseRegister;
    localUInt2 = FUN_1808a4a20();
    uVar4 = (ulonglong)localUInt2;
    if (localUInt2 != 0) {
LAB_18089e70b:
      FUN_18084c150(unaff_RBP + -0x29);
      return uVar4;
    }
    localInt3 = *(int *)(unaff_RBP + -0x21);
    if (localInt3 != 0) {
      puVar6 = *(uint32 **)(unaff_RBP + -0x29);
      for (puVar7 = puVar6; (puVar6 <= puVar7 && (puVar7 < puVar6 + localInt3)); puVar7 = puVar7 + 1) {
        lVar5 = utilityAccessSystemResource(*(uint64 *)(utilitySystemDataTable + 0x1a0),0x28,&unknown_180986e70,0xc1c);
        if (lVar5 == 0) {
          uVar4 = 0x26;
          goto LAB_18089e70b;
        }
        localUInt1 = *puVar7;
        *(longlong *)lVar5 = lVar5;
        *(longlong *)(lVar5 + 8) = lVar5;
        *(uint32 *)(lVar5 + 0x10) = localUInt1;
        *(uint64 *)(lVar5 + 0x18) = baseRegister;
        *(int *)(lVar5 + 0x20) = (int)baseRegister;
        localUInt2 = func_0x0001808aec10(unaff_R15 + 0x58,lVar5);
        uVar4 = (ulonglong)localUInt2;
        if (localUInt2 != 0) goto LAB_18089e70b;
        localInt3 = *(int *)(unaff_RBP + -0x21);
        puVar6 = *(uint32 **)(unaff_RBP + -0x29);
      }
    }
    FUN_18084c150(unaff_RBP + -0x29);
  }
  else {
    uVar4 = FUN_1808a71c0();
    if ((int)uVar4 != 0) {
      return uVar4;
    }
  }
  uVar4 = FUN_1808ad9d0();
  if (((int)uVar4 == 0) && (uVar4 = FUN_1808a62d0(), (int)uVar4 == 0)) {
                    // WARNING: Subroutine does not return
    FUN_1808ddf80();
  }
  return uVar4;
}




// 函数: void FUN_18089e801(void)
void FUN_18089e801(void)

{
  return;
}




// 函数: void FUN_18089e811(void)
void FUN_18089e811(void)

{
  return;
}



ulonglong FUN_18089e820(longlong resourceHandle,longlong *memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  uint uVar3;
  ulonglong uVar4;
  ulonglong uVar5;
  uint32 uVar6;
  bool bVar7;
  bool bVar8;
  bool bVar9;
  uint auStackX_18 [2];
  char cStackX_20;
  char acStack_a8 [4];
  uint localUInt;
  byte localBuffer [40];
  byte localBuffer [32];
  byte localBuffer [32];
  
  uVar6 = 1;
  uVar4 = FUN_1808ddc20(memorySize,localBuffer,1,0x4e415254);
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  uVar4 = FUN_1808ddc20(memorySize,localBuffer,0,0x424e5254);
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  localLong1 = *memorySize;
  uVar3 = FUN_1808aed00(localLong1,resourceHandle + 0x10,4);
  uVar4 = (ulonglong)uVar3;
  if (uVar3 == 0) {
    uVar3 = FUN_1808aed00(localLong1,resourceHandle + 0x14,2);
    uVar4 = (ulonglong)uVar3;
    if (uVar3 == 0) {
      uVar3 = FUN_1808aed00(localLong1,resourceHandle + 0x16,2);
      uVar4 = (ulonglong)uVar3;
      if (uVar3 == 0) {
        uVar3 = FUN_1808aed00(localLong1,resourceHandle + 0x18,8);
        uVar4 = (ulonglong)uVar3;
      }
    }
  }
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  uVar4 = FUN_180899360(memorySize,resourceHandle + 0x20);
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar3 = FUN_1808aed00(*memorySize,resourceHandle + 0x30,4);
  if (uVar3 != 0) {
    return (ulonglong)uVar3;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar3 = FUN_1808aed00(*memorySize,resourceHandle + 0x34);
  if (uVar3 != 0) {
    return (ulonglong)uVar3;
  }
  uVar4 = FUN_1808ad130(resourceHandle,memorySize);
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  uVar4 = FUN_180899220(memorySize,resourceHandle + 0x50);
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar3 = FUN_1808995c0(*memorySize,resourceHandle + 0x58);
  if (uVar3 != 0) {
    return (ulonglong)uVar3;
  }
  uVar3 = *(uint *)(memorySize + 8);
  if (0x7e < uVar3) goto LAB_18089ed1b;
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  plocalLong2 = (longlong *)*memorySize;
  if (*plocalLong2 == 0) {
    uVar4 = 0x1c;
  }
  else if (plocalLong2[2] == 0) {
LAB_18089ea0f:
    uVar4 = FUN_180769ed0(*plocalLong2,localBuffer,1,4,0);
  }
  else {
    auStackX_18[0] = 0;
    uVar4 = func_0x00018076a7d0(*plocalLong2,auStackX_18);
    if ((int)uVar4 == 0) {
      if ((ulonglong)auStackX_18[0] + 4 <= (ulonglong)plocalLong2[2]) goto LAB_18089ea0f;
      uVar4 = 0x11;
    }
  }
  uVar5 = 0;
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  bVar7 = *(uint *)(memorySize + 8) < 0x34;
  cStackX_20 = (char)uVar4;
  auStackX_18[0] = CONCAT31(auStackX_18[0]._1_3_,cStackX_20);
  bVar9 = false;
  if (0x37 < *(uint *)(memorySize + 8)) {
    if (*(int *)(memorySize[1] + 0x18) == 0) {
      plocalLong2 = (longlong *)*memorySize;
      if (*plocalLong2 == 0) {
        uVar3 = 0x1c;
LAB_18089eaae:
        bVar8 = uVar3 == 0;
        if (bVar8) {
          bVar7 = acStack_a8[0] != '\0';
          bVar8 = true;
        }
      }
      else {
        if (plocalLong2[2] == 0) {
LAB_18089ea93:
          uVar3 = FUN_180769ed0(*plocalLong2,acStack_a8,1,1,0);
          goto LAB_18089eaae;
        }
        localUInt = 0;
        uVar3 = func_0x00018076a7d0(*plocalLong2,&localUInt);
        bVar8 = uVar3 == 0;
        if (bVar8) {
          if ((ulonglong)plocalLong2[2] < (ulonglong)localUInt + 1) {
            uVar3 = 0x11;
            goto LAB_18089eaae;
          }
          goto LAB_18089ea93;
        }
      }
      uVar5 = (ulonglong)uVar3;
      if (bVar8) {
        uVar5 = 0;
      }
    }
    else {
      uVar5 = 0x1c;
    }
  }
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  uVar4 = 0;
  if (0x66 < *(uint *)(memorySize + 8)) {
    if (*(int *)(memorySize[1] + 0x18) == 0) {
      plocalLong2 = (longlong *)*memorySize;
      if (*plocalLong2 == 0) {
        uVar3 = 0x1c;
      }
      else if (plocalLong2[2] == 0) {
LAB_18089eb22:
        uVar3 = FUN_180769ed0(*plocalLong2,acStack_a8,1,1,0);
      }
      else {
        localUInt = 0;
        uVar3 = func_0x00018076a7d0(*plocalLong2,&localUInt);
        if (uVar3 == 0) {
          if ((ulonglong)localUInt + 1 <= (ulonglong)plocalLong2[2]) goto LAB_18089eb22;
          uVar3 = 0x11;
        }
      }
      if (uVar3 == 0) {
        auStackX_18[0] = CONCAT31(auStackX_18[0]._1_3_,acStack_a8[0] != '\0');
      }
      uVar4 = (ulonglong)uVar3;
      if (uVar3 == 0) {
        uVar4 = 0;
      }
    }
    else {
      uVar4 = 0x1c;
    }
  }
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  uVar4 = 0;
  if (0x78 < *(uint *)(memorySize + 8)) {
    if (*(int *)(memorySize[1] + 0x18) == 0) {
      plocalLong2 = (longlong *)*memorySize;
      if (*plocalLong2 == 0) {
        uVar3 = 0x1c;
      }
      else if (plocalLong2[2] == 0) {
LAB_18089ebaa:
        uVar3 = FUN_180769ed0(*plocalLong2,acStack_a8,1,1,0);
      }
      else {
        localUInt = 0;
        uVar3 = func_0x00018076a7d0(*plocalLong2,&localUInt);
        if (uVar3 == 0) {
          if ((ulonglong)localUInt + 1 <= (ulonglong)plocalLong2[2]) goto LAB_18089ebaa;
          uVar3 = 0x11;
        }
      }
      if (uVar3 == 0) {
        cStackX_20 = acStack_a8[0] != '\0';
      }
      uVar4 = (ulonglong)uVar3;
      if (uVar3 == 0) {
        uVar4 = 0;
      }
    }
    else {
      uVar4 = 0x1c;
    }
  }
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  uVar4 = 0;
  if (0x79 < *(uint *)(memorySize + 8)) {
    if (*(int *)(memorySize[1] + 0x18) == 0) {
      plocalLong2 = (longlong *)*memorySize;
      if (*plocalLong2 == 0) {
        uVar3 = 0x1c;
      }
      else if (plocalLong2[2] == 0) {
LAB_18089ec32:
        uVar3 = FUN_180769ed0(*plocalLong2,acStack_a8,1,1,0);
      }
      else {
        localUInt = 0;
        uVar3 = func_0x00018076a7d0(*plocalLong2,&localUInt);
        if (uVar3 == 0) {
          if ((ulonglong)localUInt + 1 <= (ulonglong)plocalLong2[2]) goto LAB_18089ec32;
          uVar3 = 0x11;
        }
      }
      bVar9 = uVar3 == 0 && acStack_a8[0] != '\0';
      uVar4 = (ulonglong)uVar3;
      if (uVar3 == 0) {
        uVar4 = 0;
      }
    }
    else {
      uVar4 = 0x1c;
    }
  }
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  uVar4 = 0;
  if (0x7a < *(uint *)(memorySize + 8)) {
    if (*(int *)(memorySize[1] + 0x18) == 0) {
      plocalLong2 = (longlong *)*memorySize;
      if (*plocalLong2 == 0) {
        uVar3 = 0x1c;
      }
      else if (plocalLong2[2] == 0) {
LAB_18089ecba:
        uVar3 = FUN_180769ed0(*plocalLong2,acStack_a8,1,1,0);
      }
      else {
        localUInt = 0;
        uVar3 = func_0x00018076a7d0(*plocalLong2,&localUInt);
        if (uVar3 == 0) {
          if ((ulonglong)localUInt + 1 <= (ulonglong)plocalLong2[2]) goto LAB_18089ecba;
          uVar3 = 0x11;
        }
      }
      if (uVar3 == 0) {
        bVar9 = acStack_a8[0] != '\0';
      }
      uVar4 = (ulonglong)uVar3;
      if (uVar3 == 0) {
        uVar4 = 0;
      }
    }
    else {
      uVar4 = 0x1c;
    }
  }
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  if ((((!bVar7) && ((char)auStackX_18[0] == '\0')) && (cStackX_20 == '\0')) && (!bVar9)) {
    uVar6 = 0;
  }
  *(uint32 *)(resourceHandle + 0x38) = uVar6;
  uVar3 = *(uint *)(memorySize + 8);
LAB_18089ed1b:
  uVar4 = 0;
  if ((0x7e < uVar3) && (uVar4 = 0x1c, *(int *)(memorySize[1] + 0x18) == 0)) {
    uVar3 = FUN_1808aed00(*memorySize,resourceHandle + 0x38,4);
    uVar4 = (ulonglong)uVar3;
  }
  if ((int)uVar4 == 0) {
                    // WARNING: Subroutine does not return
    FUN_1808ddf80(memorySize,localBuffer);
  }
  return uVar4;
}



ulonglong FUN_18089e87d(void)

{
  longlong localLong1;
  longlong *plocalLong2;
  uint uVar3;
  longlong inputRegister;
  ulonglong uVar4;
  ulonglong uVar5;
  longlong unaff_RBP;
  longlong *unaff_RDI;
  int unaff_R12D;
  longlong unaff_R15;
  bool bVar6;
  bool bVar7;
  bool bVar8;
  
  if (*(int *)(inputRegister + 0x18) != 0) {
    return 0x1c;
  }
  localLong1 = *unaff_RDI;
  uVar3 = FUN_1808aed00(localLong1,unaff_R15 + 0x10,unaff_R12D + 3);
  uVar4 = (ulonglong)uVar3;
  if (uVar3 == 0) {
    uVar3 = FUN_1808aed00(localLong1,unaff_R15 + 0x14,unaff_R12D + 1);
    uVar4 = (ulonglong)uVar3;
    if (uVar3 == 0) {
      uVar3 = FUN_1808aed00(localLong1,unaff_R15 + 0x16,unaff_R12D + 1);
      uVar4 = (ulonglong)uVar3;
      if (uVar3 == 0) {
        uVar3 = FUN_1808aed00(localLong1,unaff_R15 + 0x18,unaff_R12D + 7);
        uVar4 = (ulonglong)uVar3;
      }
    }
  }
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  uVar4 = FUN_180899360();
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  if (*(int *)(unaff_RDI[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar3 = FUN_1808aed00(*unaff_RDI,unaff_R15 + 0x30,4);
  if (uVar3 != 0) {
    return (ulonglong)uVar3;
  }
  if (*(int *)(unaff_RDI[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar3 = FUN_1808aed00(*unaff_RDI,unaff_R15 + 0x34);
  if (uVar3 != 0) {
    return (ulonglong)uVar3;
  }
  uVar4 = FUN_1808ad130();
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  uVar4 = FUN_180899220();
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  if (*(int *)(unaff_RDI[1] + 0x18) != 0) {
    return 0x1c;
  }
  uVar3 = FUN_1808995c0(*unaff_RDI,unaff_R15 + 0x58);
  if (uVar3 != 0) {
    return (ulonglong)uVar3;
  }
  uVar3 = *(uint *)(unaff_RDI + 8);
  if (0x7e < uVar3) goto LAB_18089ed1b;
  if (*(int *)(unaff_RDI[1] + 0x18) != 0) {
    return 0x1c;
  }
  plocalLong2 = (longlong *)*unaff_RDI;
  localLong1 = *plocalLong2;
  if (localLong1 == 0) {
    uVar4 = 0x1c;
  }
  else if (plocalLong2[2] == 0) {
LAB_18089ea0f:
    uVar4 = FUN_180769ed0(*plocalLong2,unaff_RBP + -0x41,unaff_R12D,4,0);
  }
  else {
    *(uint32 *)(unaff_RBP + 0x77) = 0;
    uVar4 = func_0x00018076a7d0(localLong1,unaff_RBP + 0x77);
    if ((int)uVar4 == 0) {
      if ((ulonglong)*(uint *)(unaff_RBP + 0x77) + 4 <= (ulonglong)plocalLong2[2]) goto LAB_18089ea0f;
      uVar4 = 0x11;
    }
  }
  uVar5 = 0;
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  bVar6 = *(uint *)(unaff_RDI + 8) < 0x34;
  *(char *)(unaff_RBP + 0x77) = (char)uVar4;
  *(char *)(unaff_RBP + 0x7f) = (char)uVar4;
  bVar8 = false;
  if (0x37 < *(uint *)(unaff_RDI + 8)) {
    if (*(int *)(unaff_RDI[1] + 0x18) == 0) {
      plocalLong2 = (longlong *)*unaff_RDI;
      localLong1 = *plocalLong2;
      if (localLong1 == 0) {
        uVar3 = 0x1c;
LAB_18089eaae:
        bVar7 = uVar3 == 0;
        if (bVar7) {
          bVar6 = *(char *)(unaff_RBP + -0x49) != '\0';
          bVar7 = true;
        }
      }
      else {
        if (plocalLong2[2] == 0) {
LAB_18089ea93:
          uVar3 = FUN_180769ed0(*plocalLong2,unaff_RBP + -0x49,unaff_R12D,unaff_R12D,0);
          goto LAB_18089eaae;
        }
        *(uint32 *)(unaff_RBP + -0x45) = 0;
        uVar3 = func_0x00018076a7d0(localLong1,unaff_RBP + -0x45);
        bVar7 = uVar3 == 0;
        if (bVar7) {
          if ((ulonglong)plocalLong2[2] < (ulonglong)*(uint *)(unaff_RBP + -0x45) + 1) {
            uVar3 = 0x11;
            goto LAB_18089eaae;
          }
          goto LAB_18089ea93;
        }
      }
      uVar5 = (ulonglong)uVar3;
      if (bVar7) {
        uVar5 = 0;
      }
    }
    else {
      uVar5 = 0x1c;
    }
  }
  if ((int)uVar5 != 0) {
    return uVar5;
  }
  uVar4 = 0;
  if (0x66 < *(uint *)(unaff_RDI + 8)) {
    if (*(int *)(unaff_RDI[1] + 0x18) == 0) {
      plocalLong2 = (longlong *)*unaff_RDI;
      localLong1 = *plocalLong2;
      if (localLong1 == 0) {
        uVar3 = 0x1c;
      }
      else if (plocalLong2[2] == 0) {
LAB_18089eb22:
        uVar3 = FUN_180769ed0(*plocalLong2,unaff_RBP + -0x49,unaff_R12D,unaff_R12D,0);
      }
      else {
        *(uint32 *)(unaff_RBP + -0x45) = 0;
        uVar3 = func_0x00018076a7d0(localLong1,unaff_RBP + -0x45);
        if (uVar3 == 0) {
          if ((ulonglong)*(uint *)(unaff_RBP + -0x45) + 1 <= (ulonglong)plocalLong2[2])
          goto LAB_18089eb22;
          uVar3 = 0x11;
        }
      }
      if (uVar3 == 0) {
        *(bool *)(unaff_RBP + 0x77) = *(char *)(unaff_RBP + -0x49) != '\0';
      }
      uVar4 = (ulonglong)uVar3;
      if (uVar3 == 0) {
        uVar4 = 0;
      }
    }
    else {
      uVar4 = 0x1c;
    }
  }
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  uVar4 = 0;
  if (0x78 < *(uint *)(unaff_RDI + 8)) {
    if (*(int *)(unaff_RDI[1] + 0x18) == 0) {
      plocalLong2 = (longlong *)*unaff_RDI;
      localLong1 = *plocalLong2;
      if (localLong1 == 0) {
        uVar3 = 0x1c;
      }
      else if (plocalLong2[2] == 0) {
LAB_18089ebaa:
        uVar3 = FUN_180769ed0(*plocalLong2,unaff_RBP + -0x49,unaff_R12D,unaff_R12D,0);
      }
      else {
        *(uint32 *)(unaff_RBP + -0x45) = 0;
        uVar3 = func_0x00018076a7d0(localLong1,unaff_RBP + -0x45);
        if (uVar3 == 0) {
          if ((ulonglong)*(uint *)(unaff_RBP + -0x45) + 1 <= (ulonglong)plocalLong2[2])
          goto LAB_18089ebaa;
          uVar3 = 0x11;
        }
      }
      if (uVar3 == 0) {
        *(bool *)(unaff_RBP + 0x7f) = *(char *)(unaff_RBP + -0x49) != '\0';
      }
      uVar4 = (ulonglong)uVar3;
      if (uVar3 == 0) {
        uVar4 = 0;
      }
    }
    else {
      uVar4 = 0x1c;
    }
  }
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  uVar4 = 0;
  if (0x79 < *(uint *)(unaff_RDI + 8)) {
    if (*(int *)(unaff_RDI[1] + 0x18) == 0) {
      plocalLong2 = (longlong *)*unaff_RDI;
      localLong1 = *plocalLong2;
      if (localLong1 == 0) {
        uVar3 = 0x1c;
      }
      else if (plocalLong2[2] == 0) {
LAB_18089ec32:
        uVar3 = FUN_180769ed0(*plocalLong2,unaff_RBP + -0x49,unaff_R12D,unaff_R12D,0);
      }
      else {
        *(uint32 *)(unaff_RBP + -0x45) = 0;
        uVar3 = func_0x00018076a7d0(localLong1,unaff_RBP + -0x45);
        if (uVar3 == 0) {
          if ((ulonglong)*(uint *)(unaff_RBP + -0x45) + 1 <= (ulonglong)plocalLong2[2])
          goto LAB_18089ec32;
          uVar3 = 0x11;
        }
      }
      if (uVar3 == 0) {
        bVar8 = *(char *)(unaff_RBP + -0x49) != '\0';
      }
      uVar4 = (ulonglong)uVar3;
      if (uVar3 == 0) {
        uVar4 = 0;
      }
    }
    else {
      uVar4 = 0x1c;
    }
  }
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  uVar4 = 0;
  if (0x7a < *(uint *)(unaff_RDI + 8)) {
    if (*(int *)(unaff_RDI[1] + 0x18) == 0) {
      plocalLong2 = (longlong *)*unaff_RDI;
      localLong1 = *plocalLong2;
      if (localLong1 == 0) {
        uVar3 = 0x1c;
      }
      else if (plocalLong2[2] == 0) {
LAB_18089ecba:
        uVar3 = FUN_180769ed0(*plocalLong2,unaff_RBP + -0x49,unaff_R12D,unaff_R12D,0);
      }
      else {
        *(uint32 *)(unaff_RBP + -0x45) = 0;
        uVar3 = func_0x00018076a7d0(localLong1,unaff_RBP + -0x45);
        if (uVar3 == 0) {
          if ((ulonglong)*(uint *)(unaff_RBP + -0x45) + 1 <= (ulonglong)plocalLong2[2])
          goto LAB_18089ecba;
          uVar3 = 0x11;
        }
      }
      if (uVar3 == 0) {
        bVar8 = *(char *)(unaff_RBP + -0x49) != '\0';
      }
      uVar4 = (ulonglong)uVar3;
      if (uVar3 == 0) {
        uVar4 = 0;
      }
    }
    else {
      uVar4 = 0x1c;
    }
  }
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  if ((((!bVar6) && (*(char *)(unaff_RBP + 0x77) == '\0')) && (*(char *)(unaff_RBP + 0x7f) == '\0'))
     && (!bVar8)) {
    unaff_R12D = 0;
  }
  *(int *)(unaff_R15 + 0x38) = unaff_R12D;
  uVar3 = *(uint *)(unaff_RDI + 8);
LAB_18089ed1b:
  uVar4 = 0;
  if ((0x7e < uVar3) && (uVar4 = 0x1c, *(int *)(unaff_RDI[1] + 0x18) == 0)) {
    uVar3 = FUN_1808aed00(*unaff_RDI,unaff_R15 + 0x38,4);
    uVar4 = (ulonglong)uVar3;
  }
  if ((int)uVar4 == 0) {
                    // WARNING: Subroutine does not return
    FUN_1808ddf80();
  }
  return uVar4;
}



ulonglong FUN_18089e9af(uint64 resourceHandle,uint64 memorySize,ulonglong operationFlags)

{
  longlong *plocalLong1;
  longlong localLong2;
  uint in_EAX;
  uint uVar3;
  ulonglong uVar4;
  ulonglong uVar5;
  longlong unaff_RBP;
  longlong *unaff_RDI;
  uint32 unaff_R12D;
  longlong unaff_R15;
  bool bVar6;
  bool bVar7;
  bool bVar8;
  
  uVar5 = 0x1c;
  if (0x7e < in_EAX) goto LAB_18089ed1b;
  if (*(int *)(unaff_RDI[1] + 0x18) != (int)operationFlags) {
    return 0x1c;
  }
  plocalLong1 = (longlong *)*unaff_RDI;
  localLong2 = *plocalLong1;
  if (localLong2 == 0) {
    uVar4 = 0x1c;
  }
  else {
    if (plocalLong1[2] == operationFlags) {
LAB_18089ea0f:
      uVar4 = FUN_180769ed0(*plocalLong1,unaff_RBP + -0x41,unaff_R12D,4,operationFlags);
    }
    else {
      *(int *)(unaff_RBP + 0x77) = (int)operationFlags;
      uVar4 = func_0x00018076a7d0(localLong2,unaff_RBP + 0x77);
      if ((int)uVar4 == 0) {
        operationFlags = 0;
        if ((ulonglong)plocalLong1[2] < (ulonglong)*(uint *)(unaff_RBP + 0x77) + 4) {
          uVar4 = 0x11;
          goto LAB_18089ea2c;
        }
        goto LAB_18089ea0f;
      }
    }
    operationFlags = 0;
  }
LAB_18089ea2c:
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  bVar6 = *(uint *)(unaff_RDI + 8) < 0x34;
  *(char *)(unaff_RBP + 0x77) = (char)uVar4;
  *(char *)(unaff_RBP + 0x7f) = (char)uVar4;
  bVar8 = false;
  if (*(uint *)(unaff_RDI + 8) < 0x38) {
    uVar4 = operationFlags & 0xffffffff;
  }
  else if (*(int *)(unaff_RDI[1] + 0x18) == 0) {
    plocalLong1 = (longlong *)*unaff_RDI;
    localLong2 = *plocalLong1;
    if (localLong2 == 0) {
      uVar3 = 0x1c;
LAB_18089eaae:
      bVar7 = uVar3 == 0;
      if (bVar7) {
        bVar6 = *(char *)(unaff_RBP + -0x49) != '\0';
        bVar7 = true;
      }
    }
    else {
      if (plocalLong1[2] == 0) {
LAB_18089ea93:
        uVar3 = FUN_180769ed0(*plocalLong1,unaff_RBP + -0x49,unaff_R12D,unaff_R12D,0);
        goto LAB_18089eaae;
      }
      *(int *)(unaff_RBP + -0x45) = (int)operationFlags;
      uVar3 = func_0x00018076a7d0(localLong2,unaff_RBP + -0x45);
      bVar7 = uVar3 == 0;
      if (bVar7) {
        if ((ulonglong)plocalLong1[2] < (ulonglong)*(uint *)(unaff_RBP + -0x45) + 1) {
          uVar3 = 0x11;
          goto LAB_18089eaae;
        }
        goto LAB_18089ea93;
      }
    }
    operationFlags = 0;
    uVar4 = (ulonglong)uVar3;
    if (bVar7) {
      uVar4 = 0;
    }
  }
  else {
    uVar4 = 0x1c;
  }
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  if (*(uint *)(unaff_RDI + 8) < 0x67) {
    uVar4 = operationFlags & 0xffffffff;
  }
  else if (*(int *)(unaff_RDI[1] + 0x18) == 0) {
    plocalLong1 = (longlong *)*unaff_RDI;
    localLong2 = *plocalLong1;
    if (localLong2 == 0) {
      uVar3 = 0x1c;
    }
    else {
      if (plocalLong1[2] == 0) {
LAB_18089eb22:
        uVar3 = FUN_180769ed0(*plocalLong1,unaff_RBP + -0x49,unaff_R12D,unaff_R12D,operationFlags);
      }
      else {
        *(int *)(unaff_RBP + -0x45) = (int)operationFlags;
        uVar3 = func_0x00018076a7d0(localLong2,unaff_RBP + -0x45);
        if (uVar3 == 0) {
          operationFlags = 0;
          if ((ulonglong)plocalLong1[2] < (ulonglong)*(uint *)(unaff_RBP + -0x45) + 1) {
            uVar3 = 0x11;
            goto LAB_18089eb3c;
          }
          goto LAB_18089eb22;
        }
      }
      operationFlags = 0;
    }
LAB_18089eb3c:
    if (uVar3 == 0) {
      *(bool *)(unaff_RBP + 0x77) = *(char *)(unaff_RBP + -0x49) != '\0';
    }
    uVar4 = (ulonglong)uVar3;
    if (uVar3 == 0) {
      uVar4 = operationFlags & 0xffffffff;
    }
  }
  else {
    uVar4 = 0x1c;
  }
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  if (*(uint *)(unaff_RDI + 8) < 0x79) {
    uVar4 = operationFlags & 0xffffffff;
  }
  else if (*(int *)(unaff_RDI[1] + 0x18) == 0) {
    plocalLong1 = (longlong *)*unaff_RDI;
    localLong2 = *plocalLong1;
    if (localLong2 == 0) {
      uVar3 = 0x1c;
    }
    else {
      if (plocalLong1[2] == 0) {
LAB_18089ebaa:
        uVar3 = FUN_180769ed0(*plocalLong1,unaff_RBP + -0x49,unaff_R12D,unaff_R12D,operationFlags);
      }
      else {
        *(int *)(unaff_RBP + -0x45) = (int)operationFlags;
        uVar3 = func_0x00018076a7d0(localLong2,unaff_RBP + -0x45);
        if (uVar3 == 0) {
          operationFlags = 0;
          if ((ulonglong)plocalLong1[2] < (ulonglong)*(uint *)(unaff_RBP + -0x45) + 1) {
            uVar3 = 0x11;
            goto LAB_18089ebc4;
          }
          goto LAB_18089ebaa;
        }
      }
      operationFlags = 0;
    }
LAB_18089ebc4:
    if (uVar3 == 0) {
      *(bool *)(unaff_RBP + 0x7f) = *(char *)(unaff_RBP + -0x49) != '\0';
    }
    uVar4 = (ulonglong)uVar3;
    if (uVar3 == 0) {
      uVar4 = operationFlags & 0xffffffff;
    }
  }
  else {
    uVar4 = 0x1c;
  }
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  if (*(uint *)(unaff_RDI + 8) < 0x7a) {
    uVar4 = operationFlags & 0xffffffff;
  }
  else if (*(int *)(unaff_RDI[1] + 0x18) == 0) {
    plocalLong1 = (longlong *)*unaff_RDI;
    localLong2 = *plocalLong1;
    if (localLong2 == 0) {
      uVar3 = 0x1c;
    }
    else {
      if (plocalLong1[2] == 0) {
LAB_18089ec32:
        uVar3 = FUN_180769ed0(*plocalLong1,unaff_RBP + -0x49,unaff_R12D,unaff_R12D,operationFlags);
      }
      else {
        *(int *)(unaff_RBP + -0x45) = (int)operationFlags;
        uVar3 = func_0x00018076a7d0(localLong2,unaff_RBP + -0x45);
        if (uVar3 == 0) {
          operationFlags = 0;
          if ((ulonglong)plocalLong1[2] < (ulonglong)*(uint *)(unaff_RBP + -0x45) + 1) {
            uVar3 = 0x11;
            goto LAB_18089ec4c;
          }
          goto LAB_18089ec32;
        }
      }
      operationFlags = 0;
    }
LAB_18089ec4c:
    if (uVar3 == 0) {
      bVar8 = *(char *)(unaff_RBP + -0x49) != '\0';
    }
    uVar4 = (ulonglong)uVar3;
    if (uVar3 == 0) {
      uVar4 = operationFlags & 0xffffffff;
    }
  }
  else {
    uVar4 = 0x1c;
  }
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  if (*(uint *)(unaff_RDI + 8) < 0x7b) {
    uVar4 = operationFlags & 0xffffffff;
  }
  else if (*(int *)(unaff_RDI[1] + 0x18) == 0) {
    plocalLong1 = (longlong *)*unaff_RDI;
    localLong2 = *plocalLong1;
    if (localLong2 == 0) {
      uVar3 = 0x1c;
    }
    else {
      if (plocalLong1[2] == 0) {
LAB_18089ecba:
        uVar3 = FUN_180769ed0(*plocalLong1,unaff_RBP + -0x49,unaff_R12D,unaff_R12D,operationFlags);
      }
      else {
        *(int *)(unaff_RBP + -0x45) = (int)operationFlags;
        uVar3 = func_0x00018076a7d0(localLong2,unaff_RBP + -0x45);
        if (uVar3 == 0) {
          operationFlags = 0;
          if ((ulonglong)plocalLong1[2] < (ulonglong)*(uint *)(unaff_RBP + -0x45) + 1) {
            uVar3 = 0x11;
            goto LAB_18089ecd4;
          }
          goto LAB_18089ecba;
        }
      }
      operationFlags = 0;
    }
LAB_18089ecd4:
    if (uVar3 == 0) {
      bVar8 = *(char *)(unaff_RBP + -0x49) != '\0';
    }
    uVar4 = (ulonglong)uVar3;
    if (uVar3 == 0) {
      uVar4 = operationFlags & 0xffffffff;
    }
  }
  else {
    uVar4 = 0x1c;
  }
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  if ((((!bVar6) && (*(char *)(unaff_RBP + 0x77) == '\0')) && (*(char *)(unaff_RBP + 0x7f) == '\0'))
     && (!bVar8)) {
    unaff_R12D = (uint32)operationFlags;
  }
  *(uint32 *)(unaff_R15 + 0x38) = unaff_R12D;
  in_EAX = *(uint *)(unaff_RDI + 8);
LAB_18089ed1b:
  if (in_EAX < 0x7f) {
    uVar5 = operationFlags & 0xffffffff;
  }
  else if (*(int *)(unaff_RDI[1] + 0x18) == 0) {
    uVar3 = FUN_1808aed00(*unaff_RDI,unaff_R15 + 0x38,4);
    uVar5 = (ulonglong)uVar3;
  }
  if ((int)uVar5 != 0) {
    return uVar5;
  }
                    // WARNING: Subroutine does not return
  FUN_1808ddf80();
}




// 函数: void FUN_18089edaf(void)
void FUN_18089edaf(void)

{
  return;
}




// 函数: void FUN_18089edc7(void)
void FUN_18089edc7(void)

{
  return;
}



uint64 FUN_18089ede0(longlong resourceHandle,uint64 *memorySize)

{
  uint64 localUInt1;
  uint64 localUInt2;
  byte localBuffer [32];
  byte localBuffer [32];
  
  localUInt2 = FUN_1808ddc20(memorySize,localBuffer,1,0x54494157);
  if (((((int)localUInt2 == 0) &&
       (localUInt2 = FUN_1808ddc20(memorySize,localBuffer,0,0x42494157), (int)localUInt2 == 0)) &&
      (localUInt2 = FUN_180899360(memorySize,resourceHandle + 0x10), (int)localUInt2 == 0)) &&
     ((0x45 < *(uint *)(memorySize + 8) ||
      (localUInt2 = FUN_1808a2d50(memorySize,resourceHandle + 0xd8), (int)localUInt2 == 0)))) {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    localUInt1 = *memorySize;
    localUInt2 = FUN_1808aed00(localUInt1,resourceHandle + 0xdc,4);
    if ((((int)localUInt2 == 0) && (localUInt2 = FUN_1808aed00(localUInt1,resourceHandle + 0xe0,2), (int)localUInt2 == 0)) &&
       (localUInt2 = FUN_1808aed00(localUInt1,resourceHandle + 0xe2,2), (int)localUInt2 == 0)) {
      localUInt2 = FUN_1808aed00(localUInt1,resourceHandle + 0xe4,8);
    }
    if ((int)localUInt2 == 0) {
                    // WARNING: Subroutine does not return
      FUN_1808ddf80(memorySize,localBuffer);
    }
  }
  return localUInt2;
}



uint64 FUN_18089ee64(void)

{
  uint64 localUInt1;
  longlong inputRegister;
  uint64 localUInt2;
  uint64 *baseRegister;
  longlong unaff_RDI;
  
  if (*(int *)(inputRegister + 0x18) != 0) {
    return 0x1c;
  }
  localUInt1 = *baseRegister;
  localUInt2 = FUN_1808aed00(localUInt1,unaff_RDI + 0xdc,4);
  if ((int)localUInt2 == 0) {
    localUInt2 = FUN_1808aed00(localUInt1,unaff_RDI + 0xe0,2);
    if ((int)localUInt2 == 0) {
      localUInt2 = FUN_1808aed00(localUInt1,unaff_RDI + 0xe2,2);
      if ((int)localUInt2 == 0) {
        localUInt2 = FUN_1808aed00(localUInt1,unaff_RDI + 0xe4,8);
      }
    }
  }
  if ((int)localUInt2 == 0) {
                    // WARNING: Subroutine does not return
    FUN_1808ddf80();
  }
  return localUInt2;
}




// 函数: void FUN_18089ee87(void)
void FUN_18089ee87(void)

{
  uint64 localUInt1;
  int localInt2;
  uint64 *baseRegister;
  longlong unaff_RDI;
  
  localUInt1 = *baseRegister;
  localInt2 = FUN_1808aed00(localUInt1,unaff_RDI + 0xdc,4);
  if (localInt2 == 0) {
    localInt2 = FUN_1808aed00(localUInt1,unaff_RDI + 0xe0,2);
    if (localInt2 == 0) {
      localInt2 = FUN_1808aed00(localUInt1,unaff_RDI + 0xe2,2);
      if (localInt2 == 0) {
        localInt2 = FUN_1808aed00(localUInt1,unaff_RDI + 0xe4,8);
      }
    }
  }
  if (localInt2 == 0) {
                    // WARNING: Subroutine does not return
    FUN_1808ddf80();
  }
  return;
}




// 函数: void FUN_18089eef2(void)
void FUN_18089eef2(void)

{
                    // WARNING: Subroutine does not return
  FUN_1808ddf80();
}




// 函数: void FUN_18089ef24(void)
void FUN_18089ef24(void)

{
  return;
}



uint64 FUN_18089ef40(longlong resourceHandle,longlong *memorySize)

{
  uint64 localUInt1;
  uint32 auStackX_10 [6];
  
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  auStackX_10[0] = *(uint32 *)(resourceHandle + 0x50);
  localUInt1 = (**(code **)**(uint64 **)(*memorySize + 8))(*(uint64 **)(*memorySize + 8),auStackX_10,4)
  ;
  if ((int)localUInt1 == 0) {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    auStackX_10[0] = *(uint32 *)(resourceHandle + 0x54);
    localUInt1 = (**(code **)**(uint64 **)(*memorySize + 8))
                      (*(uint64 **)(*memorySize + 8),auStackX_10,4);
    if ((int)localUInt1 == 0) {
      if (*(int *)(memorySize[1] + 0x18) != 0) {
        return 0x1c;
      }
      auStackX_10[0] = *(uint32 *)(resourceHandle + 0x58);
      localUInt1 = (**(code **)**(uint64 **)(*memorySize + 8))
                        (*(uint64 **)(*memorySize + 8),auStackX_10,4);
      if ((int)localUInt1 == 0) {
        if (*(int *)(memorySize[1] + 0x18) != 0) {
          return 0x1c;
        }
        auStackX_10[0] = *(uint32 *)(resourceHandle + 0x60);
        localUInt1 = (**(code **)**(uint64 **)(*memorySize + 8))
                          (*(uint64 **)(*memorySize + 8),auStackX_10,4);
        if (((((int)localUInt1 == 0) && (localUInt1 = FUN_180898eb0(memorySize,resourceHandle + 100), (int)localUInt1 == 0))
            && (localUInt1 = FUN_180898eb0(memorySize,resourceHandle + 0x68), (int)localUInt1 == 0)) &&
           (((localUInt1 = FUN_180898eb0(memorySize,resourceHandle + 0x6c), (int)localUInt1 == 0 &&
             (localUInt1 = FUN_180898eb0(memorySize,resourceHandle + 0x70), (int)localUInt1 == 0)) &&
            ((localUInt1 = FUN_180898eb0(memorySize,resourceHandle + 0x74), (int)localUInt1 == 0 &&
             (localUInt1 = FUN_180898eb0(memorySize,resourceHandle + 0x78), (int)localUInt1 == 0)))))) {
          localUInt1 = FUN_1808a7c40(memorySize,resourceHandle + 0x5c,0x74);
        }
      }
    }
  }
  return localUInt1;
}



uint64 FUN_18089f0b0(longlong resourceHandle,longlong *memorySize)

{
  uint64 localUInt1;
  uint32 auStackX_18 [2];
  byte localBuffer [64];
  byte localBuffer [32];
  
  localUInt1 = FUN_1808ddd30(memorySize,localBuffer,1,0x5453494c,0x46464542);
  if (((int)localUInt1 == 0) &&
     (localUInt1 = FUN_1808ddd30(memorySize,localBuffer,0,0x42464542,0), (int)localUInt1 == 0)) {
    if (*(int *)(memorySize[1] + 0x18) == 0) {
      localUInt1 = FUN_180899ef0(*memorySize,resourceHandle + 0x10);
      if (((int)localUInt1 == 0) &&
         ((0x5a < *(uint *)(memorySize + 8) ||
          (localUInt1 = FUN_1808afd90(memorySize,resourceHandle + 0x44), (int)localUInt1 == 0)))) {
        if (*(int *)(memorySize[1] + 0x18) == 0) {
          switch(*(uint32 *)(resourceHandle + 0x60)) {
          default:
            auStackX_18[0] = 0;
            break;
          case 1:
            auStackX_18[0] = 1;
            break;
          case 2:
            auStackX_18[0] = 2;
            break;
          case 3:
            auStackX_18[0] = 3;
            break;
          case 4:
            auStackX_18[0] = 4;
            break;
          case 5:
            auStackX_18[0] = 5;
            break;
          case 6:
            auStackX_18[0] = 6;
            break;
          case 7:
            auStackX_18[0] = 7;
            break;
          case 8:
            auStackX_18[0] = 8;
            break;
          case 9:
            auStackX_18[0] = 9;
            break;
          case 10:
            auStackX_18[0] = 10;
            break;
          case 0xb:
            auStackX_18[0] = 0xb;
            break;
          case 0xc:
            auStackX_18[0] = 0xc;
            break;
          case 0xd:
            auStackX_18[0] = 0xd;
            break;
          case 0xe:
            auStackX_18[0] = 0xe;
            break;
          case 0xf:
            auStackX_18[0] = 0xf;
            break;
          case 0x10:
            auStackX_18[0] = 0x10;
            break;
          case 0x11:
            auStackX_18[0] = 0x11;
            break;
          case 0x12:
            auStackX_18[0] = 0x12;
            break;
          case 0x13:
            auStackX_18[0] = 0x13;
            break;
          case 0x14:
            auStackX_18[0] = 0x14;
            break;
          case 0x15:
            auStackX_18[0] = 0x15;
            break;
          case 0x16:
            auStackX_18[0] = 0x16;
            break;
          case 0x17:
            auStackX_18[0] = 0x17;
            break;
          case 0x18:
            auStackX_18[0] = 0x18;
            break;
          case 0x19:
            auStackX_18[0] = 0x19;
            break;
          case 0x1a:
            auStackX_18[0] = 0x1a;
            break;
          case 0x1b:
            auStackX_18[0] = 0x1b;
            break;
          case 0x1c:
            auStackX_18[0] = 0x1c;
            break;
          case 0x1d:
            auStackX_18[0] = 0x1d;
            break;
          case 0x1e:
            auStackX_18[0] = 0x1e;
            break;
          case 0x1f:
            auStackX_18[0] = 0x1f;
            break;
          case 0x20:
            auStackX_18[0] = 0x20;
            break;
          case 0x21:
            auStackX_18[0] = 0x21;
            break;
          case 0x22:
            auStackX_18[0] = 0x22;
            break;
          case 0x23:
            auStackX_18[0] = 0x23;
            break;
          case 0x24:
            auStackX_18[0] = 0x24;
          }
          localUInt1 = (**(code **)**(uint64 **)(*memorySize + 8))
                            (*(uint64 **)(*memorySize + 8),auStackX_18,4);
          if (((int)localUInt1 == 0) &&
             (localUInt1 = FUN_1808a7c90(memorySize,resourceHandle + 0x40,0x3d), (int)localUInt1 == 0)) {
                    // WARNING: Subroutine does not return
            FUN_1808de000(memorySize,localBuffer);
          }
        }
        else {
          localUInt1 = 0x1c;
        }
      }
    }
    else {
      localUInt1 = 0x1c;
    }
  }
  return localUInt1;
}



uint64 FUN_18089f112(void)

{
  longlong inputRegister;
  uint64 localUInt1;
  longlong *baseRegister;
  longlong unaff_RSI;
  uint32 in_stack_000000b0;
  
  if (*(int *)(inputRegister + 0x18) == 0) {
    localUInt1 = FUN_180899ef0(*baseRegister,unaff_RSI + 0x10);
    if (((int)localUInt1 == 0) &&
       ((0x5a < *(uint *)(baseRegister + 8) || (localUInt1 = FUN_1808afd90(), (int)localUInt1 == 0)))) {
      if (*(int *)(baseRegister[1] + 0x18) == 0) {
        switch(*(uint32 *)(unaff_RSI + 0x60)) {
        default:
          in_stack_000000b0 = 0;
          break;
        case 1:
          in_stack_000000b0 = 1;
          break;
        case 2:
          in_stack_000000b0 = 2;
          break;
        case 3:
          in_stack_000000b0 = 3;
          break;
        case 4:
          in_stack_000000b0 = 4;
          break;
        case 5:
          in_stack_000000b0 = 5;
          break;
        case 6:
          in_stack_000000b0 = 6;
          break;
        case 7:
          in_stack_000000b0 = 7;
          break;
        case 8:
          in_stack_000000b0 = 8;
          break;
        case 9:
          in_stack_000000b0 = 9;
          break;
        case 10:
          in_stack_000000b0 = 10;
          break;
        case 0xb:
          in_stack_000000b0 = 0xb;
          break;
        case 0xc:
          in_stack_000000b0 = 0xc;
          break;
        case 0xd:
          in_stack_000000b0 = 0xd;
          break;
        case 0xe:
          in_stack_000000b0 = 0xe;
          break;
        case 0xf:
          in_stack_000000b0 = 0xf;
          break;
        case 0x10:
          in_stack_000000b0 = 0x10;
          break;
        case 0x11:
          in_stack_000000b0 = 0x11;
          break;
        case 0x12:
          in_stack_000000b0 = 0x12;
          break;
        case 0x13:
          in_stack_000000b0 = 0x13;
          break;
        case 0x14:
          in_stack_000000b0 = 0x14;
          break;
        case 0x15:
          in_stack_000000b0 = 0x15;
          break;
        case 0x16:
          in_stack_000000b0 = 0x16;
          break;
        case 0x17:
          in_stack_000000b0 = 0x17;
          break;
        case 0x18:
          in_stack_000000b0 = 0x18;
          break;
        case 0x19:
          in_stack_000000b0 = 0x19;
          break;
        case 0x1a:
          in_stack_000000b0 = 0x1a;
          break;
        case 0x1b:
          in_stack_000000b0 = 0x1b;
          break;
        case 0x1c:
          in_stack_000000b0 = 0x1c;
          break;
        case 0x1d:
          in_stack_000000b0 = 0x1d;
          break;
        case 0x1e:
          in_stack_000000b0 = 0x1e;
          break;
        case 0x1f:
          in_stack_000000b0 = 0x1f;
          break;
        case 0x20:
          in_stack_000000b0 = 0x20;
          break;
        case 0x21:
          in_stack_000000b0 = 0x21;
          break;
        case 0x22:
          in_stack_000000b0 = 0x22;
          break;
        case 0x23:
          in_stack_000000b0 = 0x23;
          break;
        case 0x24:
          in_stack_000000b0 = 0x24;
        }
        localUInt1 = (**(code **)**(uint64 **)(*baseRegister + 8))
                          (*(uint64 **)(*baseRegister + 8),&stack0x000000b0,4);
        if (((int)localUInt1 == 0) && (localUInt1 = FUN_1808a7c90(), (int)localUInt1 == 0)) {
                    // WARNING: Subroutine does not return
          FUN_1808de000();
        }
      }
      else {
        localUInt1 = 0x1c;
      }
    }
  }
  else {
    localUInt1 = 0x1c;
  }
  return localUInt1;
}




// 函数: void FUN_18089f31e(void)
void FUN_18089f31e(void)

{
  int in_EAX;
  int localInt1;
  int localInt2;
  longlong *baseRegister;
  int unaff_EBP;
  longlong unaff_RSI;
  uint32 in_stack_000000b0;
  
  if (in_EAX == 0x1b) {
    if (*(uint *)(baseRegister + 8) < 0x3b) {
      localInt1 = FUN_1808a87d0();
      if (localInt1 != 0) {
        return;
      }
      goto LAB_18089f45f;
    }
  }
  else if ((in_EAX == 0x12) && (*(uint *)(baseRegister + 8) < 0x40)) {
    localInt1 = FUN_1808ddd30();
    if (localInt1 != 0) {
      return;
    }
    localInt1 = unaff_EBP;
    if (*(int *)(baseRegister[1] + 0x18) == 0) {
      in_stack_000000b0 = 6;
      localInt1 = (**(code **)**(uint64 **)(*baseRegister + 8))
                        (*(uint64 **)(*baseRegister + 8),&stack0x000000b0,4);
    }
    if (localInt1 != 0) {
      return;
    }
    localInt1 = 0;
    do {
      localInt2 = FUN_1808acf30();
      if (localInt2 != 0) {
        return;
      }
      localInt1 = localInt1 + 1;
    } while (localInt1 < 6);
    if (*(uint *)(baseRegister + 8) < 0x6e) {
      unaff_EBP = 0;
    }
    else if (*(int *)(baseRegister[1] + 0x18) == 0) {
      in_stack_000000b0 = CONCAT31(in_stack_000000b0._1_3_,*(byte *)(unaff_RSI + 0x5c));
      unaff_EBP = (**(code **)**(uint64 **)(*baseRegister + 8))
                            (*(uint64 **)(*baseRegister + 8),&stack0x000000b0,1);
    }
    if (unaff_EBP != 0) {
      return;
    }
                    // WARNING: Subroutine does not return
    FUN_1808de000();
  }
  localInt1 = FUN_1808a1090();
  if (localInt1 != 0) {
    return;
  }
LAB_18089f45f:
                    // WARNING: Subroutine does not return
  FUN_1808de000();
}




// 函数: void FUN_18089f474(void)
void FUN_18089f474(void)

{
  return;
}




// 函数: void FUN_18089f47c(void)
void FUN_18089f47c(void)

{
  return;
}



ulonglong FUN_18089f530(longlong resourceHandle,uint64 *memorySize,uint32 operationFlags,uint32 callbackFunction,
                       char param_5)

{
  uint localUInt1;
  ulonglong localUInt2;
  byte localBuffer [64];
  byte localBuffer [40];
  
  localUInt2 = FUN_1808ddd30(memorySize,localBuffer,1,0x5453494c,operationFlags);
  if (((int)localUInt2 == 0) && (localUInt2 = FUN_1808ddd30(memorySize,localBuffer,0,callbackFunction,0), (int)localUInt2 == 0))
  {
    if (*(int *)(memorySize[1] + 0x18) == 0) {
      localUInt1 = FUN_180899ef0(*memorySize,resourceHandle + 0x10);
      localUInt2 = (ulonglong)localUInt1;
      if ((localUInt1 == 0) &&
         ((param_5 == '\0' || (localUInt2 = FUN_1808a1870(resourceHandle + 0x48,memorySize), (int)localUInt2 == 0)))) {
                    // WARNING: Subroutine does not return
        FUN_1808de000(memorySize,localBuffer);
      }
    }
    else {
      localUInt2 = 0x1c;
    }
  }
  return localUInt2;
}



ulonglong FUN_18089f571(void)

{
  uint localUInt1;
  ulonglong localUInt2;
  uint64 *baseRegister;
  longlong unaff_RBP;
  char in_stack_000000d0;
  
  localUInt2 = FUN_1808ddd30();
  if ((int)localUInt2 == 0) {
    if (*(int *)(baseRegister[1] + 0x18) == 0) {
      localUInt1 = FUN_180899ef0(*baseRegister,unaff_RBP + 0x10);
      localUInt2 = (ulonglong)localUInt1;
      if ((localUInt1 == 0) &&
         ((in_stack_000000d0 == '\0' || (localUInt2 = FUN_1808a1870(unaff_RBP + 0x48), (int)localUInt2 == 0)))
         ) {
                    // WARNING: Subroutine does not return
        FUN_1808de000();
      }
    }
    else {
      localUInt2 = 0x1c;
    }
  }
  return localUInt2;
}




// 函数: void FUN_18089f7fd(void)
void FUN_18089f7fd(void)

{
  return;
}



uint64 FUN_18089f830(longlong resourceHandle,longlong *memorySize)

{
  uint64 localUInt1;
  uint32 auStackX_18 [4];
  byte localBuffer [32];
  byte localBuffer [32];
  
  localUInt1 = FUN_1808ddd30(memorySize,localBuffer,1,0x5453494c,0x49444d43);
  if (((int)localUInt1 == 0) &&
     (localUInt1 = FUN_1808ddd30(memorySize,localBuffer,0,0x42444d43,0), (int)localUInt1 == 0)) {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    localUInt1 = FUN_180899ef0(*memorySize,resourceHandle + 0x10);
    if ((int)localUInt1 == 0) {
      if (*(int *)(memorySize[1] + 0x18) != 0) {
        return 0x1c;
      }
      auStackX_18[0] = *(uint32 *)(resourceHandle + 0xd8);
      localUInt1 = (**(code **)**(uint64 **)(*memorySize + 8))
                        (*(uint64 **)(*memorySize + 8),auStackX_18,4);
      if ((int)localUInt1 == 0) {
        if (*(int *)(memorySize[1] + 0x18) != 0) {
          return 0x1c;
        }
        localUInt1 = FUN_180899ef0(*memorySize,resourceHandle + 0xdc);
        if (((int)localUInt1 == 0) &&
           (localUInt1 = FUN_1808a7c40(memorySize,resourceHandle + 0xec,0x80), (int)localUInt1 == 0)) {
                    // WARNING: Subroutine does not return
          FUN_1808de000(memorySize,localBuffer);
        }
      }
    }
  }
  return localUInt1;
}



ulonglong FUN_18089f970(longlong resourceHandle,longlong *memorySize)

{
  longlong localLong1;
  uint localUInt2;
  uint32 *puVar3;
  ulonglong uVar4;
  data2 auStackX_18 [4];
  data2 auStackX_20 [4];
  uint32 localBuffer [2];
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  uint32 localUInt;
  byte localBuffer [40];
  
  puVar3 = (uint32 *)FUN_180847820();
  localUInt = *puVar3;
  localUInt = puVar3[1];
  localUInt = puVar3[2];
  localUInt = puVar3[3];
  uVar4 = FUN_1808ddd30(memorySize,localBuffer,0,0x4c525443,0);
  if ((int)uVar4 != 0) {
    return uVar4;
  }
  if (*(int *)(memorySize[1] + 0x18) == 0) {
    localUInt2 = FUN_180899ef0(*memorySize,resourceHandle + 0x10);
    uVar4 = (ulonglong)localUInt2;
    if (localUInt2 == 0) {
      if (*(int *)(memorySize[1] + 0x18) != 0) {
        return 0x1c;
      }
      localUInt2 = FUN_180899ef0(*memorySize,resourceHandle + 0x20);
      uVar4 = (ulonglong)localUInt2;
      if (localUInt2 == 0) {
        uVar4 = 0x1c;
        localUInt2 = 0;
        if ((*(uint *)(memorySize + 8) < 0x5a) && (localUInt2 = 0x1c, *(int *)(memorySize[1] + 0x18) == 0)) {
          localBuffer[0] = localUInt;
          localLong1 = *memorySize;
          localUInt2 = (**(code **)**(uint64 **)(localLong1 + 8))
                            (*(uint64 **)(localLong1 + 8),localBuffer,4);
          if (localUInt2 == 0) {
            auStackX_18[0] = (data2)localUInt;
            localUInt2 = (**(code **)**(uint64 **)(localLong1 + 8))
                              (*(uint64 **)(localLong1 + 8),auStackX_18,2);
            if (localUInt2 == 0) {
              auStackX_20[0] = localUInt._2_2_;
              localUInt2 = (**(code **)**(uint64 **)(localLong1 + 8))
                                (*(uint64 **)(localLong1 + 8),auStackX_20,2);
              if (localUInt2 == 0) {
                localUInt2 = (**(code **)**(uint64 **)(localLong1 + 8))
                                  (*(uint64 **)(localLong1 + 8),&localUInt,8);
              }
            }
          }
        }
        if (localUInt2 != 0) {
          return (ulonglong)localUInt2;
        }
        if (*(int *)(memorySize[1] + 0x18) == 0) {
          localUInt2 = FUN_180899ef0(*memorySize,resourceHandle + 0x30);
          uVar4 = (ulonglong)localUInt2;
          if (localUInt2 == 0) {
            uVar4 = FUN_180898e70(memorySize,resourceHandle + 0x40);
            if ((int)uVar4 != 0) {
              return uVar4;
            }
                    // WARNING: Subroutine does not return
            FUN_1808de000(memorySize,localBuffer);
          }
        }
      }
    }
    return uVar4;
  }
  return 0x1c;
}



ulonglong FUN_18089f9b3(void)

{
  longlong localLong1;
  uint localUInt2;
  longlong inputRegister;
  ulonglong uVar3;
  longlong unaff_RBP;
  uint unaff_ESI;
  longlong *unaff_RDI;
  uint32 stackParameter1;
  uint32 uStack0000000000000038;
  data2 stackParameter3;
  data2 uStack000000000000003e;
  data2 in_stack_000000a0;
  data2 in_stack_000000a8;
  
  if (*(uint *)(inputRegister + 0x18) != unaff_ESI) {
    return 0x1c;
  }
  localUInt2 = FUN_180899ef0(*unaff_RDI,unaff_RBP + 0x10);
  uVar3 = (ulonglong)localUInt2;
  if (localUInt2 == 0) {
    if (*(uint *)(unaff_RDI[1] + 0x18) != unaff_ESI) {
      return 0x1c;
    }
    localUInt2 = FUN_180899ef0(*unaff_RDI,unaff_RBP + 0x20);
    uVar3 = (ulonglong)localUInt2;
    if (localUInt2 == 0) {
      uVar3 = 0x1c;
      localUInt2 = unaff_ESI;
      if ((*(uint *)(unaff_RDI + 8) < 0x5a) &&
         (localUInt2 = 0x1c, *(uint *)(unaff_RDI[1] + 0x18) == unaff_ESI)) {
        stackParameter1 = uStack0000000000000038;
        localLong1 = *unaff_RDI;
        localUInt2 = (**(code **)**(uint64 **)(localLong1 + 8))
                          (*(uint64 **)(localLong1 + 8),&stack0x00000030,4);
        if (localUInt2 == 0) {
          in_stack_000000a0 = stackParameter3;
          localUInt2 = (**(code **)**(uint64 **)(localLong1 + 8))
                            (*(uint64 **)(localLong1 + 8),&stack0x000000a0,2);
          if (localUInt2 == 0) {
            in_stack_000000a8 = uStack000000000000003e;
            localUInt2 = (**(code **)**(uint64 **)(localLong1 + 8))
                              (*(uint64 **)(localLong1 + 8),&stack0x000000a8,2);
            if (localUInt2 == 0) {
              localUInt2 = (**(code **)**(uint64 **)(localLong1 + 8))
                                (*(uint64 **)(localLong1 + 8),&stackLocalBuffer,8);
            }
          }
        }
      }
      if (localUInt2 != 0) {
        return (ulonglong)localUInt2;
      }
      if (*(int *)(unaff_RDI[1] + 0x18) == 0) {
        localUInt2 = FUN_180899ef0(*unaff_RDI,unaff_RBP + 0x30);
        uVar3 = (ulonglong)localUInt2;
        if (localUInt2 == 0) {
          uVar3 = FUN_180898e70();
          if ((int)uVar3 == 0) {
                    // WARNING: Subroutine does not return
            FUN_1808de000();
          }
          return uVar3;
        }
      }
    }
  }
  return uVar3;
}



ulonglong FUN_18089f9f6(void)

{
  longlong localLong1;
  uint localUInt2;
  ulonglong uVar3;
  longlong unaff_RBP;
  uint unaff_ESI;
  longlong *unaff_RDI;
  uint32 stackParameter1;
  uint32 uStack0000000000000038;
  data2 stackParameter3;
  data2 uStack000000000000003e;
  data2 in_stack_000000a0;
  data2 in_stack_000000a8;
  
  localUInt2 = FUN_180899ef0(*unaff_RDI,unaff_RBP + 0x20);
  uVar3 = (ulonglong)localUInt2;
  if (localUInt2 == 0) {
    uVar3 = 0x1c;
    localUInt2 = unaff_ESI;
    if ((*(uint *)(unaff_RDI + 8) < 0x5a) &&
       (localUInt2 = 0x1c, *(uint *)(unaff_RDI[1] + 0x18) == unaff_ESI)) {
      stackParameter1 = uStack0000000000000038;
      localLong1 = *unaff_RDI;
      localUInt2 = (**(code **)**(uint64 **)(localLong1 + 8))
                        (*(uint64 **)(localLong1 + 8),&stack0x00000030,4);
      if (localUInt2 == 0) {
        in_stack_000000a0 = stackParameter3;
        localUInt2 = (**(code **)**(uint64 **)(localLong1 + 8))
                          (*(uint64 **)(localLong1 + 8),&stack0x000000a0,2);
        if (localUInt2 == 0) {
          in_stack_000000a8 = uStack000000000000003e;
          localUInt2 = (**(code **)**(uint64 **)(localLong1 + 8))
                            (*(uint64 **)(localLong1 + 8),&stack0x000000a8,2);
          if (localUInt2 == 0) {
            localUInt2 = (**(code **)**(uint64 **)(localLong1 + 8))
                              (*(uint64 **)(localLong1 + 8),&stackLocalBuffer,8);
          }
        }
      }
    }
    if (localUInt2 != 0) {
      return (ulonglong)localUInt2;
    }
    if (*(int *)(unaff_RDI[1] + 0x18) == 0) {
      localUInt2 = FUN_180899ef0(*unaff_RDI,unaff_RBP + 0x30);
      uVar3 = (ulonglong)localUInt2;
      if (localUInt2 == 0) {
        uVar3 = FUN_180898e70();
        if ((int)uVar3 != 0) {
          return uVar3;
        }
                    // WARNING: Subroutine does not return
        FUN_1808de000();
      }
    }
  }
  return uVar3;
}



ulonglong FUN_18089fa3c(void)

{
  longlong localLong1;
  uint localUInt2;
  ulonglong uVar3;
  ulonglong baseRegister;
  longlong unaff_RBP;
  longlong *unaff_RDI;
  uint64 in_stack_00000038;
  data2 in_stack_000000a0;
  data2 in_stack_000000a8;
  
  localLong1 = *unaff_RDI;
  localUInt2 = (**(code **)**(uint64 **)(localLong1 + 8))();
  if (localUInt2 == 0) {
    in_stack_000000a0 = in_stack_00000038._4_2_;
    localUInt2 = (**(code **)**(uint64 **)(localLong1 + 8))
                      (*(uint64 **)(localLong1 + 8),&stack0x000000a0,2);
    if (localUInt2 == 0) {
      in_stack_000000a8 = in_stack_00000038._6_2_;
      localUInt2 = (**(code **)**(uint64 **)(localLong1 + 8))
                        (*(uint64 **)(localLong1 + 8),&stack0x000000a8,2);
      if (localUInt2 == 0) {
        localUInt2 = (**(code **)**(uint64 **)(localLong1 + 8))
                          (*(uint64 **)(localLong1 + 8),&stackLocalBuffer,8);
      }
    }
  }
  if (localUInt2 != 0) {
    return (ulonglong)localUInt2;
  }
  if (*(int *)(unaff_RDI[1] + 0x18) == 0) {
    localUInt2 = FUN_180899ef0(*unaff_RDI,unaff_RBP + 0x30);
    baseRegister = (ulonglong)localUInt2;
    if (localUInt2 == 0) {
      uVar3 = FUN_180898e70();
      if ((int)uVar3 == 0) {
                    // WARNING: Subroutine does not return
        FUN_1808de000();
      }
      return uVar3;
    }
  }
  return baseRegister & 0xffffffff;
}



ulonglong FUN_18089fac2(void)

{
  uint localUInt1;
  ulonglong localUInt2;
  ulonglong baseRegister;
  longlong unaff_RBP;
  uint unaff_ESI;
  uint64 *unaff_RDI;
  
  if (unaff_ESI != 0) {
    return (ulonglong)unaff_ESI;
  }
  if (*(int *)(unaff_RDI[1] + 0x18) == 0) {
    localUInt1 = FUN_180899ef0(*unaff_RDI,unaff_RBP + 0x30);
    baseRegister = (ulonglong)localUInt1;
    if (localUInt1 == 0) {
      localUInt2 = FUN_180898e70();
      if ((int)localUInt2 == 0) {
                    // WARNING: Subroutine does not return
        FUN_1808de000();
      }
      return localUInt2;
    }
  }
  return baseRegister & 0xffffffff;
}



ulonglong FUN_18089fad8(void)

{
  uint localUInt1;
  ulonglong localUInt2;
  ulonglong baseRegister;
  longlong unaff_RBP;
  uint64 *unaff_RDI;
  
  if (*(int *)(unaff_RDI[1] + 0x18) == 0) {
    localUInt1 = FUN_180899ef0(*unaff_RDI,unaff_RBP + 0x30);
    baseRegister = (ulonglong)localUInt1;
    if (localUInt1 == 0) {
      localUInt2 = FUN_180898e70();
      if ((int)localUInt2 == 0) {
                    // WARNING: Subroutine does not return
        FUN_1808de000();
      }
      return localUInt2;
    }
  }
  return baseRegister & 0xffffffff;
}




// 函数: void FUN_18089fb06(void)
void FUN_18089fb06(void)

{
  int localInt1;
  
  localInt1 = FUN_180898e70();
  if (localInt1 == 0) {
                    // WARNING: Subroutine does not return
    FUN_1808de000();
  }
  return;
}




// 函数: void FUN_18089fb2b(void)
void FUN_18089fb2b(void)

{
  return;
}




// 函数: void FUN_18089fb40(longlong resourceHandle,uint64 memorySize)
void FUN_18089fb40(longlong resourceHandle,uint64 memorySize)

{
  int localInt1;
  byte localBuffer [32];
  
  localInt1 = FUN_1808ddd30(memorySize,localBuffer,0,0x4f525443,0);
  if (localInt1 == 0) {
    localInt1 = FUN_1808a7b00(memorySize,resourceHandle + 8);
    if (localInt1 == 0) {
                    // WARNING: Subroutine does not return
      FUN_1808de000(memorySize,localBuffer);
    }
  }
  return;
}



uint64 FUN_18089fba0(longlong resourceHandle,uint64 *memorySize)

{
  uint64 localUInt1;
  byte localBuffer [32];
  
  localUInt1 = FUN_1808ddd30(memorySize,localBuffer,0,0x56525543,0);
  if ((int)localUInt1 == 0) {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    localUInt1 = FUN_180899ef0(*memorySize,resourceHandle + 0x10);
    if ((int)localUInt1 == 0) {
      if (*(int *)(memorySize[1] + 0x18) != 0) {
        return 0x1c;
      }
      localUInt1 = FUN_180899ef0(*memorySize,resourceHandle + 0x20);
      if (((int)localUInt1 == 0) && (localUInt1 = FUN_1808a4fb0(memorySize,resourceHandle + 0x30,1,0), (int)localUInt1 == 0))
      {
                    // WARNING: Subroutine does not return
        FUN_1808de000(memorySize,localBuffer);
      }
    }
  }
  return localUInt1;
}



uint64 FUN_18089fc50(longlong resourceHandle,uint64 *memorySize)

{
  uint64 localUInt1;
  byte localBuffer [32];
  byte localBuffer [32];
  
  localUInt1 = FUN_1808ddd30(memorySize,localBuffer,1,0x5453494c,0x54494645);
  if (((int)localUInt1 == 0) &&
     (localUInt1 = FUN_1808ddd30(memorySize,localBuffer,0,0x42494645,0), (int)localUInt1 == 0)) {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    localUInt1 = FUN_180899ef0(*memorySize,resourceHandle + 0x10);
    if ((int)localUInt1 == 0) {
      if (*(int *)(memorySize[1] + 0x18) != 0) {
        return 0x1c;
      }
      localUInt1 = FUN_180899ef0(*memorySize,resourceHandle + 0xd8);
      if ((int)localUInt1 == 0) {
                    // WARNING: Subroutine does not return
        FUN_1808de000(memorySize,localBuffer);
      }
    }
  }
  return localUInt1;
}



uint64 FUN_18089fd30(longlong resourceHandle,longlong *memorySize)

{
  uint64 localUInt1;
  uint32 auStackX_10 [6];
  
  if (*(uint *)(memorySize + 8) < 0x55) {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    auStackX_10[0] = *(uint32 *)(resourceHandle + 0x50);
    localUInt1 = (**(code **)**(uint64 **)(*memorySize + 8))
                      (*(uint64 **)(*memorySize + 8),auStackX_10,4);
    if ((int)localUInt1 != 0) {
      return localUInt1;
    }
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    auStackX_10[0] = *(uint32 *)(resourceHandle + 0x54);
    localUInt1 = (**(code **)**(uint64 **)(*memorySize + 8))
                      (*(uint64 **)(*memorySize + 8),auStackX_10,4);
    if ((int)localUInt1 != 0) {
      return localUInt1;
    }
  }
  else {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    auStackX_10[0] = *(uint32 *)(resourceHandle + 0x78);
    localUInt1 = (**(code **)**(uint64 **)(*memorySize + 8))
                      (*(uint64 **)(*memorySize + 8),auStackX_10,4);
    if ((int)localUInt1 != 0) {
      return localUInt1;
    }
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  auStackX_10[0] = *(uint32 *)(resourceHandle + 0x58);
  localUInt1 = (**(code **)**(uint64 **)(*memorySize + 8))(*(uint64 **)(*memorySize + 8),auStackX_10,4)
  ;
  if ((int)localUInt1 != 0) {
    return localUInt1;
  }
  if (*(int *)(memorySize[1] + 0x18) != 0) {
    return 0x1c;
  }
  auStackX_10[0] = *(uint32 *)(resourceHandle + 0x5c);
  localUInt1 = (**(code **)**(uint64 **)(*memorySize + 8))(*(uint64 **)(*memorySize + 8),auStackX_10,4)
  ;
  if ((int)localUInt1 == 0) {
    if (*(uint *)(memorySize + 8) < 0x53) {
      if (*(int *)(memorySize[1] + 0x18) != 0) {
        return 0x1c;
      }
      localUInt1 = FUN_180899ef0(*memorySize,resourceHandle + 0x60);
      if ((int)localUInt1 != 0) {
        return localUInt1;
      }
    }
    else {
      localUInt1 = FUN_180898eb0(memorySize,resourceHandle + 0x70);
      if ((int)localUInt1 != 0) {
        return localUInt1;
      }
      localUInt1 = FUN_180898eb0(memorySize,resourceHandle + 0x74);
      if ((int)localUInt1 != 0) {
        return localUInt1;
      }
    }
    localUInt1 = FUN_1808a7c90(memorySize,resourceHandle + 0x7c,0x7d);
    return localUInt1;
  }
  return localUInt1;
}



uint64 FUN_18089fed0(longlong resourceHandle,uint64 *memorySize)

{
  uint64 localUInt1;
  byte localBuffer [32];
  byte localBuffer [32];
  
  localUInt1 = FUN_1808ddd30(memorySize,localBuffer,1,0x5453494c,0x54495645);
  if (((int)localUInt1 == 0) &&
     (localUInt1 = FUN_1808ddd30(memorySize,localBuffer,0,0x42495645,0), (int)localUInt1 == 0)) {
    if (*(int *)(memorySize[1] + 0x18) != 0) {
      return 0x1c;
    }
    localUInt1 = FUN_180899ef0(*memorySize,resourceHandle + 0x10);
    if ((int)localUInt1 == 0) {
      if (*(int *)(memorySize[1] + 0x18) != 0) {
        return 0x1c;
      }
      localUInt1 = FUN_180899ef0(*memorySize,resourceHandle + 0xd8);
      if ((((int)localUInt1 == 0) && (localUInt1 = FUN_180898eb0(memorySize,resourceHandle + 0xf8), (int)localUInt1 == 0)) &&
         (localUInt1 = FUN_1808a6e50(memorySize,resourceHandle + 0xe8,1,resourceHandle), (int)localUInt1 == 0)) {
                    // WARNING: Subroutine does not return
        FUN_1808de000(memorySize,localBuffer);
      }
    }
  }
  return localUInt1;
}



uint64 FUN_18089ffe0(uint64 resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  byte localBuffer [32];
  
  if (*(uint *)(memorySize + 0x40) < 0x31) {
    localUInt1 = FUN_1808a3d50(resourceHandle,memorySize,0x544e5645);
    if ((int)localUInt1 == 0) {
      localUInt1 = 0;
    }
  }
  else {
    localUInt1 = FUN_1808ddd30(memorySize,localBuffer,1,0x5453494c,0x544e5645);
    if ((int)localUInt1 == 0) {
      localUInt1 = FUN_1808a3d50(resourceHandle,memorySize,0x42545645);
      if ((int)localUInt1 == 0) {
        localUInt1 = FUN_1808a1610(resourceHandle,memorySize);
        if ((int)localUInt1 == 0) {
                    // WARNING: Subroutine does not return
          FUN_1808de000(memorySize,localBuffer);
        }
      }
    }
  }
  return localUInt1;
}




// 函数: void memoryAllocateBlock(uint64 *resourceHandle)
void memoryAllocateBlock(uint64 *resourceHandle)

{
  FUN_18006a050(*(uint32 *)*resourceHandle,resourceHandle);
  return;
}



void Unwind_180901ee0(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0xc0) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0xc0) + 0x38))();
  }
  return;
}



void Unwind_180901ef0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x58) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x58) + 0x38))();
  }
  return;
}



void Unwind_180901f00(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0x48) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0x48) + 0x38))();
  }
  return;
}



void Unwind_180901f10(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x48);
  *plocalUInt1 = &bufferControlData2;
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_180901f20(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x48);
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_180901f30(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x48) = &threadSyncObject;
  return;
}



void Unwind_180901f40(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = _Mtx_unlock(*(uint64 *)(memorySize + 0x60));
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180901f50(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  _DAT_180c8a9b0 = *(uint64 *)(memorySize + 0x40);
  localInt1 = _Mtx_unlock(0x180c91970);
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



void Unwind_180901f60(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x2b8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180901f70(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x2b8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180901f90(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  _DAT_180c8a9b0 = *(uint64 *)(memorySize + 0x88);
  localInt1 = _Mtx_unlock(0x180c91970);
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



void Unwind_180901fa0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x20) + 0x218);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180901fc0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x218);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180901fe0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180627b90(*(uint64 *)(memorySize + 0x48));
  }
  return;
}



void Unwind_180902010(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180627b90(*(uint64 *)(memorySize + 0x58));
  }
  return;
}



void Unwind_180902040(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 2) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffd;
    FUN_180627b90(memorySize + 0x30);
  }
  return;
}



void Unwind_180902070(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x68) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x70) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x70) = 0;
  *(uint32 *)(memorySize + 0x80) = 0;
  *(uint64 *)(memorySize + 0x68) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902080(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x68) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902090(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    FUN_180627b90(*(uint64 *)(memorySize + 0xd8));
  }
  return;
}



void Unwind_1809020c0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 2) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffd;
    FUN_180627b90(memorySize + 0x40);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809020f0(void)

{
  byte bVar1;
  
  EnterCriticalSection(0x180c82210);
  _DAT_180d49140 = 0;
  LeaveCriticalSection(0x180c82210);
  if (_DAT_180c82240 != 0) {
    SetEvent();
                    // WARNING: Could not recover jumptable at 0x0001808fcc41. Too many branches
                    // WARNING: Treating indirect jump as call
    ResetEvent(_DAT_180c82240);
    return;
  }
  bVar1 = (byte)_DAT_180bf00a8 & 0x3f;
                    // WARNING: Could not recover jumptable at 0x0001808ffe70. Too many branches
                    // WARNING: Treating indirect jump as call
  (*(code *)((_DAT_180bf00a8 ^ _DAT_180c82250) >> bVar1 |
            (_DAT_180bf00a8 ^ _DAT_180c82250) << 0x40 - bVar1))(0x180c82238);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180902100(void)

{
  byte bVar1;
  
  EnterCriticalSection(0x180c82210);
  _DAT_180d49148 = 0;
  LeaveCriticalSection(0x180c82210);
  if (_DAT_180c82240 != 0) {
    SetEvent();
                    // WARNING: Could not recover jumptable at 0x0001808fcc41. Too many branches
                    // WARNING: Treating indirect jump as call
    ResetEvent(_DAT_180c82240);
    return;
  }
  bVar1 = (byte)_DAT_180bf00a8 & 0x3f;
                    // WARNING: Could not recover jumptable at 0x0001808ffe70. Too many branches
                    // WARNING: Treating indirect jump as call
  (*(code *)((_DAT_180bf00a8 ^ _DAT_180c82250) >> bVar1 |
            (_DAT_180bf00a8 ^ _DAT_180c82250) << 0x40 - bVar1))(0x180c82238);
  return;
}



void Unwind_180902110(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0xa0) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0xa0),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180902120(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xa8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xa8) + 0x38))();
  }
  return;
}



void Unwind_180902130(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0xa0) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0xa0),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180902140(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0xf0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902150(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x30) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902160(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0xf0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902170(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x138) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x140) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x140) = 0;
  *(uint32 *)(memorySize + 0x150) = 0;
  *(uint64 *)(memorySize + 0x138) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902180(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x1a0) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x1a8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x1a8) = 0;
  *(uint32 *)(memorySize + 0x1b8) = 0;
  *(uint64 *)(memorySize + 0x1a0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902190(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    FUN_180627b90(*(uint64 *)(memorySize + 0x1c8));
  }
  return;
}



void Unwind_1809021c0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x180) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x188) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x188) = 0;
  *(uint32 *)(memorySize + 0x198) = 0;
  *(uint64 *)(memorySize + 0x180) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809021d0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x138) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809021e0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 2) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffd;
    FUN_180627b90(memorySize + 0x78);
  }
  return;
}



void Unwind_180902210(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x78) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902220(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 4) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffb;
    FUN_180627b90(memorySize + 0x118);
  }
  return;
}



void Unwind_180902250(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x118) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902260(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 8) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffff7;
    FUN_180627b90(memorySize + 0xf8);
  }
  return;
}



void Unwind_180902290(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0xf8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809022a0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 0x10) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xffffffef;
    FUN_180627b90(memorySize + 0x58);
  }
  return;
}



void Unwind_1809022d0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 0x20) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xffffffdf;
    FUN_180627b90(memorySize + 0xd8);
  }
  return;
}



void Unwind_180902300(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0xd8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902310(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 0x40) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xffffffbf;
    FUN_180627b90(memorySize + 0xb8);
  }
  return;
}



void Unwind_180902340(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 0x80) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xffffff7f;
    FUN_180627b90(memorySize + 0x98);
  }
  return;
}



void Unwind_180902370(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x98) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902380(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 0x100) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffeff;
    FUN_180627b90(memorySize + 0x38);
  }
  return;
}



void Unwind_1809023b0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x180) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809023c0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x1a0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809023d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x50);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x48); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x48) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809023e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x50);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x48); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x48) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809023f0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x48);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180902400(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x78) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x80) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x80) = 0;
  *(uint32 *)(memorySize + 0x90) = 0;
  *(uint64 *)(memorySize + 0x78) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902410(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 200) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 200) + 0x38))();
  }
  return;
}



void Unwind_180902420(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x150) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902430(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0xa8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xb0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xb0) = 0;
  *(uint32 *)(memorySize + 0xc0) = 0;
  *(uint64 *)(memorySize + 0xa8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902440(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0xd0) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xd8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xd8) = 0;
  *(uint32 *)(memorySize + 0xe8) = 0;
  *(uint64 *)(memorySize + 0xd0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902450(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x78) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x80) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x80) = 0;
  *(uint32 *)(memorySize + 0x90) = 0;
  *(uint64 *)(memorySize + 0x78) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902460(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x148) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902470(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0xd0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902480(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x50) & 1) != 0) {
    *(uint *)(memorySize + 0x50) = *(uint *)(memorySize + 0x50) & 0xfffffffe;
    FUN_180627b90(memorySize + 0x30);
  }
  return;
}



void Unwind_1809024b0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0xa8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809024c0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 200) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809024d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x128);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x120); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x120) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809024e0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x100) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x108) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x108) = 0;
  *(uint32 *)(memorySize + 0x118) = 0;
  *(uint64 *)(memorySize + 0x100) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809024f0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x88) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x90) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x90) = 0;
  *(uint32 *)(memorySize + 0xa0) = 0;
  *(uint64 *)(memorySize + 0x88) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902500(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x128);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x120); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x120) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180902510(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x120);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180902520(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x88) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902530(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x100) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902540(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x70);
  *(uint64 *)(localLong1 + 0x20) = &unknown_180a3cf50;
  if (*(char *)(localLong1 + 0xd1) != '\0') {
    FUN_180639250();
  }
  _Mtx_destroy_in_situ();
  *(uint64 *)(localLong1 + 0x20) = &unknown_180a30778;
  *(uint64 *)(localLong1 + 0x58) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x60) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x60) = 0;
  *(uint32 *)(localLong1 + 0x70) = 0;
  *(uint64 *)(localLong1 + 0x58) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902550(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x70);
  *(uint64 *)(localLong1 + 0xd8) = &unknown_180a3cf50;
  if (*(char *)(localLong1 + 0x189) != '\0') {
    FUN_180639250();
  }
  _Mtx_destroy_in_situ();
  *(uint64 *)(localLong1 + 0xd8) = &unknown_180a30778;
  *(uint64 *)(localLong1 + 0x110) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x118) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x118) = 0;
  *(uint32 *)(localLong1 + 0x128) = 0;
  *(uint64 *)(localLong1 + 0x110) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xe0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xe8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xe8) = 0;
  *(uint32 *)(localLong1 + 0xf8) = 0;
  *(uint64 *)(localLong1 + 0xe0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902570(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x78);
  *plocalUInt1 = &unknown_180a3cf50;
  if (*(char *)((longlong)plocalUInt1 + 0xb1) != '\0') {
    FUN_180639250();
  }
  _Mtx_destroy_in_situ();
  *plocalUInt1 = &unknown_180a30778;
  plocalUInt1[7] = &threadLocalStorageData;
  if (plocalUInt1[8] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[8] = 0;
  *(uint32 *)(plocalUInt1 + 10) = 0;
  plocalUInt1[7] = &threadLocalStorageCleanup;
  plocalUInt1[1] = &threadLocalStorageData;
  if (plocalUInt1[2] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[2] = 0;
  *(uint32 *)(plocalUInt1 + 4) = 0;
  plocalUInt1[1] = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902580(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x78);
  _Mtx_destroy_in_situ();
  *plocalUInt1 = &unknown_180a30778;
  plocalUInt1[7] = &threadLocalStorageData;
  if (plocalUInt1[8] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[8] = 0;
  *(uint32 *)(plocalUInt1 + 10) = 0;
  plocalUInt1[7] = &threadLocalStorageCleanup;
  plocalUInt1[1] = &threadLocalStorageData;
  if (plocalUInt1[2] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[2] = 0;
  *(uint32 *)(plocalUInt1 + 4) = 0;
  plocalUInt1[1] = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902590(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x70),*(uint64 *)(*(longlong *)(memorySize + 0x70) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_1809025a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x78),*(uint64 *)(*(longlong *)(memorySize + 0x78) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_1809025b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x78),*(uint64 *)(*(longlong *)(memorySize + 0x78) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_1809025c0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_1809025d0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_1809025e0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong localLong2;
  
  plocalLong1 = (longlong *)(*(longlong *)(memorySize + 0x70) + 0xa0);
  for (localLong2 = *plocalLong1; localLong2 != *(longlong *)(*(longlong *)(memorySize + 0x70) + 0xa8);
      localLong2 = localLong2 + 0x28) {
    if (*(longlong *)(localLong2 + 8) != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  if (*plocalLong1 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180902600(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x70) + 0xc0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180902620(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180902630(uint64 resourceHandle,longlong memorySize)

{
  _Mtx_destroy_in_situ(*(uint64 *)(memorySize + 0x78));
  return;
}



void Unwind_180902640(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong localLong2;
  
  plocalLong1 = *(longlong **)(memorySize + 0x78);
  for (localLong2 = *plocalLong1; localLong2 != plocalLong1[1]; localLong2 = localLong2 + 0x28) {
    if (*(longlong *)(localLong2 + 8) != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  if (*plocalLong1 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180902650(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x70) + 0x50);
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x58);
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x48) {
    FUN_180058c20(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180902660(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x78);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x48) {
    FUN_180058c20(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180902670(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x70) + 0x50);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x70) + 0x58);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 3) {
    if ((longlong *)plocalLong3[1] != (longlong *)0x0) {
      (**(code **)(*(longlong *)plocalLong3[1] + 0x38))();
    }
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180902680(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x78);
  plocalLong1 = (longlong *)plocalLong2[1];
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 3) {
    if ((longlong *)plocalLong3[1] != (longlong *)0x0) {
      (**(code **)(*(longlong *)plocalLong3[1] + 0x38))();
    }
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180902690(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x70) + 0x10);
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x18);
  localLong3 = *plocalLong2;
  while( true ) {
    if (localLong3 == localLong1) {
      if (*plocalLong2 == 0) {
        return;
      }
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    if (*(longlong **)(localLong3 + 0x40) != (longlong *)0x0) {
      (**(code **)(**(longlong **)(localLong3 + 0x40) + 0x38))();
    }
    if (*(longlong *)(localLong3 + 0x20) != 0) break;
    FUN_180057830(localLong3);
    localLong3 = localLong3 + 0x48;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809026a0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x78);
  localLong1 = plocalLong2[1];
  localLong3 = *plocalLong2;
  while( true ) {
    if (localLong3 == localLong1) {
      if (*plocalLong2 == 0) {
        return;
      }
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    if (*(longlong **)(localLong3 + 0x40) != (longlong *)0x0) {
      (**(code **)(**(longlong **)(localLong3 + 0x40) + 0x38))();
    }
    if (*(longlong *)(localLong3 + 0x20) != 0) break;
    FUN_180057830(localLong3);
    localLong3 = localLong3 + 0x48;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809026b0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x70) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809026c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1803aeb70(*(longlong *)(memorySize + 0x70) + 0x98,
                *(uint64 *)(*(longlong *)(memorySize + 0x70) + 0xa8),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_1809026e0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180902700(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1803aeb70(*(longlong *)(memorySize + 0x78),*(uint64 *)(*(longlong *)(memorySize + 0x78) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180902710(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1803aeb70(*(longlong *)(memorySize + 0x78),*(uint64 *)(*(longlong *)(memorySize + 0x78) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180902720(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = *(longlong **)(memorySize + 0x70);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = (uint64 *)plocalLong2[1];
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180902730(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x70) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x70),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180902740(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180902750(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x78) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x78),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180902760(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x78) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x78),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180902770(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058210(*(longlong *)(memorySize + 0x70),*(uint64 *)(*(longlong *)(memorySize + 0x70) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180902780(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058210(*(longlong *)(memorySize + 0x78),*(uint64 *)(*(longlong *)(memorySize + 0x78) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180902790(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058210(*(longlong *)(memorySize + 0x78),*(uint64 *)(*(longlong *)(memorySize + 0x78) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_1809027a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x70) + 0x30);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x70) + 0x20,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_1809027b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x70) + 0x60);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x70) + 0x50,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_1809027c0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x70);
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809027d0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x70);
  *(uint64 *)(localLong1 + 0x50) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x58) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x58) = 0;
  *(uint32 *)(localLong1 + 0x68) = 0;
  *(uint64 *)(localLong1 + 0x50) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809027e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x70) + 0x80);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_1800587d0(*(longlong *)(memorySize + 0x70) + 0x70,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
    FUN_18005cb60(plocalUInt1);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_1809027f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x78) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_1800587d0(*(longlong *)(memorySize + 0x78),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
    FUN_18005cb60(plocalUInt1);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180902800(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x78) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_1800587d0(*(longlong *)(memorySize + 0x78),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
    FUN_18005cb60(plocalUInt1);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180902810(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x70) + 0x18,
                *(uint64 *)(*(longlong *)(memorySize + 0x70) + 0x28),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_180902820(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1801fef10(*(longlong *)(memorySize + 0x70),*(uint64 *)(*(longlong *)(memorySize + 0x70) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180902830(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1801fef10(*(longlong *)(memorySize + 0x78),*(uint64 *)(*(longlong *)(memorySize + 0x78) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180902840(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1801fef10(*(longlong *)(memorySize + 0x78),*(uint64 *)(*(longlong *)(memorySize + 0x78) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180902850(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x70),*(uint64 *)(*(longlong *)(memorySize + 0x70) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180902860(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x70),*(uint64 *)(*(longlong *)(memorySize + 0x70) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180902870(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x70) + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180902880(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x70) + 0x18);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180902890(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800582b0(*(longlong *)(memorySize + 0x70) + 0x40,
                *(uint64 *)(*(longlong *)(memorySize + 0x70) + 0x50),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_1809028a0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x70) + 0x98);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809028c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800582b0(*(longlong *)(memorySize + 0x78),*(uint64 *)(*(longlong *)(memorySize + 0x78) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_1809028d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800582b0(*(longlong *)(memorySize + 0x78),*(uint64 *)(*(longlong *)(memorySize + 0x78) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_1809028e0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x70);
  *(uint64 *)(localLong1 + 0x40) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x48) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x48) = 0;
  *(uint32 *)(localLong1 + 0x58) = 0;
  *(uint64 *)(localLong1 + 0x40) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809028f0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x70) + 0x68);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180902900(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x70) + 0x88);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180902920(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800f74f0(*(longlong *)(memorySize + 0x70) + 0x28,
                *(uint64 *)(*(longlong *)(memorySize + 0x70) + 0x38),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_180902930(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800f74f0(*(longlong *)(memorySize + 0x78),*(uint64 *)(*(longlong *)(memorySize + 0x78) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180902940(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800f74f0(*(longlong *)(memorySize + 0x78),*(uint64 *)(*(longlong *)(memorySize + 0x78) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180902950(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  longlong localLong2;
  uint64 *puVar3;
  longlong lVar4;
  longlong lVar5;
  ulonglong uVar6;
  ulonglong uVar7;
  
  lVar4 = *(longlong *)(memorySize + 0x70);
  uVar7 = *(ulonglong *)(lVar4 + 0x10);
  lVar5 = *(longlong *)(lVar4 + 8);
  uVar6 = 0;
  if (uVar7 != 0) {
    do {
      localLong2 = *(longlong *)(lVar5 + uVar6 * 8);
      if (localLong2 != 0) {
                    // WARNING: Subroutine does not return
        HandleCriticalError(localLong2);
      }
      *(uint64 *)(lVar5 + uVar6 * 8) = 0;
      uVar6 = uVar6 + 1;
    } while (uVar6 < uVar7);
    uVar7 = *(ulonglong *)(lVar4 + 0x10);
  }
  *(uint64 *)(lVar4 + 0x18) = 0;
  if ((1 < uVar7) && (puVar3 = *(uint64 **)(lVar4 + 8), puVar3 != (uint64 *)0x0)) {
    uVar7 = (ulonglong)puVar3 & 0xffffffffffc00000;
    if (uVar7 != 0) {
      lVar5 = uVar7 + 0x80 + ((longlong)puVar3 - uVar7 >> 0x10) * 0x50;
      lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
      if ((*(void ***)(uVar7 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
        *puVar3 = *(uint64 *)(lVar5 + 0x20);
        *(uint64 **)(lVar5 + 0x20) = puVar3;
        plocalInt1 = (int *)(lVar5 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar7,CONCAT71(0xff000000,*(void ***)(uVar7 + 0x70) == &ExceptionList),
                            puVar3,uVar7,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_180902960(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  longlong localLong2;
  uint64 *puVar3;
  longlong lVar4;
  longlong lVar5;
  ulonglong uVar6;
  ulonglong uVar7;
  
  lVar4 = *(longlong *)(memorySize + 0x70);
  uVar7 = *(ulonglong *)(lVar4 + 0x40);
  lVar5 = *(longlong *)(lVar4 + 0x38);
  uVar6 = 0;
  if (uVar7 != 0) {
    do {
      localLong2 = *(longlong *)(lVar5 + uVar6 * 8);
      if (localLong2 != 0) {
                    // WARNING: Subroutine does not return
        HandleCriticalError(localLong2);
      }
      *(uint64 *)(lVar5 + uVar6 * 8) = 0;
      uVar6 = uVar6 + 1;
    } while (uVar6 < uVar7);
    uVar7 = *(ulonglong *)(lVar4 + 0x40);
  }
  *(uint64 *)(lVar4 + 0x48) = 0;
  if ((1 < uVar7) && (puVar3 = *(uint64 **)(lVar4 + 0x38), puVar3 != (uint64 *)0x0)) {
    uVar7 = (ulonglong)puVar3 & 0xffffffffffc00000;
    if (uVar7 != 0) {
      lVar5 = uVar7 + 0x80 + ((longlong)puVar3 - uVar7 >> 0x10) * 0x50;
      lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
      if ((*(void ***)(uVar7 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
        *puVar3 = *(uint64 *)(lVar5 + 0x20);
        *(uint64 **)(lVar5 + 0x20) = puVar3;
        plocalInt1 = (int *)(lVar5 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar7,CONCAT71(0xff000000,*(void ***)(uVar7 + 0x70) == &ExceptionList),
                            puVar3,uVar7,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_180902970(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x70) + 0x70);
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x78);
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x18) {
    FUN_18004bf50(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180902980(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x70) + 0x98,0x20,0x10,FUN_180046860);
  return;
}



void Unwind_1809029c0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x70) + 0x2a0,0x20,0x10,FUN_18004c030);
  return;
}



void Unwind_180902a00(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x70) + 0x4a0,0x20,0x10,FUN_18004c090);
  return;
}



void Unwind_180902a40(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  longlong localLong2;
  uint64 *puVar3;
  longlong lVar4;
  longlong lVar5;
  ulonglong uVar6;
  ulonglong uVar7;
  
  lVar4 = *(longlong *)(memorySize + 0x78);
  uVar7 = *(ulonglong *)(lVar4 + 0x10);
  lVar5 = *(longlong *)(lVar4 + 8);
  uVar6 = 0;
  if (uVar7 != 0) {
    do {
      localLong2 = *(longlong *)(lVar5 + uVar6 * 8);
      if (localLong2 != 0) {
                    // WARNING: Subroutine does not return
        HandleCriticalError(localLong2);
      }
      *(uint64 *)(lVar5 + uVar6 * 8) = 0;
      uVar6 = uVar6 + 1;
    } while (uVar6 < uVar7);
    uVar7 = *(ulonglong *)(lVar4 + 0x10);
  }
  *(uint64 *)(lVar4 + 0x18) = 0;
  if ((1 < uVar7) && (puVar3 = *(uint64 **)(lVar4 + 8), puVar3 != (uint64 *)0x0)) {
    uVar7 = (ulonglong)puVar3 & 0xffffffffffc00000;
    if (uVar7 != 0) {
      lVar5 = uVar7 + 0x80 + ((longlong)puVar3 - uVar7 >> 0x10) * 0x50;
      lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
      if ((*(void ***)(uVar7 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
        *puVar3 = *(uint64 *)(lVar5 + 0x20);
        *(uint64 **)(lVar5 + 0x20) = puVar3;
        plocalInt1 = (int *)(lVar5 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar7,CONCAT71(0xff000000,*(void ***)(uVar7 + 0x70) == &ExceptionList),
                            puVar3,uVar7,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_180902a50(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  longlong localLong2;
  uint64 *puVar3;
  longlong lVar4;
  longlong lVar5;
  ulonglong uVar6;
  ulonglong uVar7;
  
  lVar4 = *(longlong *)(memorySize + 0x78);
  uVar7 = *(ulonglong *)(lVar4 + 0x10);
  lVar5 = *(longlong *)(lVar4 + 8);
  uVar6 = 0;
  if (uVar7 != 0) {
    do {
      localLong2 = *(longlong *)(lVar5 + uVar6 * 8);
      if (localLong2 != 0) {
                    // WARNING: Subroutine does not return
        HandleCriticalError(localLong2);
      }
      *(uint64 *)(lVar5 + uVar6 * 8) = 0;
      uVar6 = uVar6 + 1;
    } while (uVar6 < uVar7);
    uVar7 = *(ulonglong *)(lVar4 + 0x10);
  }
  *(uint64 *)(lVar4 + 0x18) = 0;
  if ((1 < uVar7) && (puVar3 = *(uint64 **)(lVar4 + 8), puVar3 != (uint64 *)0x0)) {
    uVar7 = (ulonglong)puVar3 & 0xffffffffffc00000;
    if (uVar7 != 0) {
      lVar5 = uVar7 + 0x80 + ((longlong)puVar3 - uVar7 >> 0x10) * 0x50;
      lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
      if ((*(void ***)(uVar7 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
        *puVar3 = *(uint64 *)(lVar5 + 0x20);
        *(uint64 **)(lVar5 + 0x20) = puVar3;
        plocalInt1 = (int *)(lVar5 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar7,CONCAT71(0xff000000,*(void ***)(uVar7 + 0x70) == &ExceptionList),
                            puVar3,uVar7,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_180902a60(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x78);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x18) {
    FUN_18004bf50(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180902a70(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong localLong2;
  longlong localLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  
  localLong3 = *(longlong *)(memorySize + 0x70);
  uVar4 = *(ulonglong *)(localLong3 + 0x10);
  localLong1 = *(longlong *)(localLong3 + 8);
  uVar5 = 0;
  if (uVar4 != 0) {
    do {
      localLong2 = *(longlong *)(localLong1 + uVar5 * 8);
      if (localLong2 != 0) {
        if (*(longlong **)(localLong2 + 0x10) != (longlong *)0x0) {
          (**(code **)(**(longlong **)(localLong2 + 0x10) + 0x38))();
        }
                    // WARNING: Subroutine does not return
        HandleCriticalError(localLong2);
      }
      *(uint64 *)(localLong1 + uVar5 * 8) = 0;
      uVar5 = uVar5 + 1;
    } while (uVar5 < uVar4);
    uVar4 = *(ulonglong *)(localLong3 + 0x10);
  }
  *(uint64 *)(localLong3 + 0x18) = 0;
  if ((1 < uVar4) && (*(longlong *)(localLong3 + 8) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180902a80(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong localLong2;
  longlong localLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  
  localLong3 = *(longlong *)(memorySize + 0x78);
  uVar4 = *(ulonglong *)(localLong3 + 0x10);
  localLong1 = *(longlong *)(localLong3 + 8);
  uVar5 = 0;
  if (uVar4 != 0) {
    do {
      localLong2 = *(longlong *)(localLong1 + uVar5 * 8);
      if (localLong2 != 0) {
        if (*(longlong **)(localLong2 + 0x10) != (longlong *)0x0) {
          (**(code **)(**(longlong **)(localLong2 + 0x10) + 0x38))();
        }
                    // WARNING: Subroutine does not return
        HandleCriticalError(localLong2);
      }
      *(uint64 *)(localLong1 + uVar5 * 8) = 0;
      uVar5 = uVar5 + 1;
    } while (uVar5 < uVar4);
    uVar4 = *(ulonglong *)(localLong3 + 0x10);
  }
  *(uint64 *)(localLong3 + 0x18) = 0;
  if ((1 < uVar4) && (*(longlong *)(localLong3 + 8) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180902a90(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong localLong2;
  longlong localLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  
  localLong3 = *(longlong *)(memorySize + 0x78);
  uVar4 = *(ulonglong *)(localLong3 + 0x10);
  localLong1 = *(longlong *)(localLong3 + 8);
  uVar5 = 0;
  if (uVar4 != 0) {
    do {
      localLong2 = *(longlong *)(localLong1 + uVar5 * 8);
      if (localLong2 != 0) {
        if (*(longlong **)(localLong2 + 0x10) != (longlong *)0x0) {
          (**(code **)(**(longlong **)(localLong2 + 0x10) + 0x38))();
        }
                    // WARNING: Subroutine does not return
        HandleCriticalError(localLong2);
      }
      *(uint64 *)(localLong1 + uVar5 * 8) = 0;
      uVar5 = uVar5 + 1;
    } while (uVar5 < uVar4);
    uVar4 = *(ulonglong *)(localLong3 + 0x10);
  }
  *(uint64 *)(localLong3 + 0x18) = 0;
  if ((1 < uVar4) && (*(longlong *)(localLong3 + 8) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180902aa0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058420(*(longlong *)(memorySize + 0x70),*(uint64 *)(*(longlong *)(memorySize + 0x70) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180902ab0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x70) + 0x30);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180902ac0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x70) + 0x50,
                *(uint64 *)(*(longlong *)(memorySize + 0x70) + 0x60),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_180902ad0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058420(*(longlong *)(memorySize + 0x78),*(uint64 *)(*(longlong *)(memorySize + 0x78) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180902ae0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058420(*(longlong *)(memorySize + 0x78),*(uint64 *)(*(longlong *)(memorySize + 0x78) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180902af0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x70) + 8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180902b00(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x70) + 0x18,0x28,0x10,FUN_180055ed0);
  return;
}



void Unwind_180902b30(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x40);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x48) {
    FUN_180058c20(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180902b40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058210(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180902b50(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058210(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180902b60(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong localLong2;
  longlong localLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  
  localLong3 = *(longlong *)(memorySize + 0x40);
  uVar4 = *(ulonglong *)(localLong3 + 0x10);
  localLong1 = *(longlong *)(localLong3 + 8);
  uVar5 = 0;
  if (uVar4 != 0) {
    do {
      localLong2 = *(longlong *)(localLong1 + uVar5 * 8);
      if (localLong2 != 0) {
        if (*(longlong **)(localLong2 + 0x10) != (longlong *)0x0) {
          (**(code **)(**(longlong **)(localLong2 + 0x10) + 0x38))();
        }
                    // WARNING: Subroutine does not return
        HandleCriticalError(localLong2);
      }
      *(uint64 *)(localLong1 + uVar5 * 8) = 0;
      uVar5 = uVar5 + 1;
    } while (uVar5 < uVar4);
    uVar4 = *(ulonglong *)(localLong3 + 0x10);
  }
  *(uint64 *)(localLong3 + 0x18) = 0;
  if ((1 < uVar4) && (*(longlong *)(localLong3 + 8) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180902b70(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong localLong2;
  longlong localLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  
  localLong3 = *(longlong *)(memorySize + 0x40);
  uVar4 = *(ulonglong *)(localLong3 + 0x10);
  localLong1 = *(longlong *)(localLong3 + 8);
  uVar5 = 0;
  if (uVar4 != 0) {
    do {
      localLong2 = *(longlong *)(localLong1 + uVar5 * 8);
      if (localLong2 != 0) {
        if (*(longlong **)(localLong2 + 0x10) != (longlong *)0x0) {
          (**(code **)(**(longlong **)(localLong2 + 0x10) + 0x38))();
        }
                    // WARNING: Subroutine does not return
        HandleCriticalError(localLong2);
      }
      *(uint64 *)(localLong1 + uVar5 * 8) = 0;
      uVar5 = uVar5 + 1;
    } while (uVar5 < uVar4);
    uVar4 = *(ulonglong *)(localLong3 + 0x10);
  }
  *(uint64 *)(localLong3 + 0x18) = 0;
  if ((1 < uVar4) && (*(longlong *)(localLong3 + 8) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180902b80(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x20);
  *(uint64 *)(localLong1 + 8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x10) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x10) = 0;
  *(uint32 *)(localLong1 + 0x20) = 0;
  *(uint64 *)(localLong1 + 8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902b90(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  *(uint64 *)(localLong1 + 8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x10) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x10) = 0;
  *(uint32 *)(localLong1 + 0x20) = 0;
  *(uint64 *)(localLong1 + 8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902ba0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902bb0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x80) + 0x48);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180902bc0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x90) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902bd0(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x90);
  *plocalUInt1 = &threadLocalStorageData;
  if (plocalUInt1[1] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[1] = 0;
  *(uint32 *)(plocalUInt1 + 3) = 0;
  *plocalUInt1 = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902be0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x90);
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902bf0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x90) + 0x48);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180902c00(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x98);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180902c10(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x98);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180902c20(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0xa0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902c30(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x28);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180902c40(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x28);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180902c50(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x38);
  *plocalUInt1 = &unknown_1809fcb90;
  _Mtx_destroy_in_situ();
  _Cnd_destroy_in_situ(plocalUInt1 + 4);
  *plocalUInt1 = &bufferControlData2;
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_180902c60(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  char cVar2;
  uint64 uVar3;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x38);
  uVar3 = 0xfffffffffffffffe;
  *plocalUInt1 = &unknown_180a10098;
  cVar2 = FUN_18020eba0(plocalUInt1,1,operationFlags,callbackFunction,0xfffffffffffffffe);
  while (cVar2 != '\0') {
    cVar2 = FUN_18020eba0(plocalUInt1,1,operationFlags,callbackFunction,uVar3);
  }
  if (plocalUInt1[1] == 0) {
    plocalUInt1[1] = 0;
    _Mtx_destroy_in_situ();
    _Cnd_destroy_in_situ(plocalUInt1 + 0x2a);
    _Mtx_destroy_in_situ();
    FUN_18020f530();
    if (plocalUInt1[0xe] != 0) {
      *(uint64 *)(plocalUInt1[0xe] + 0x10) = 0;
      *(byte *)(plocalUInt1[0xe] + 8) = 1;
    }
    plocalUInt1[2] = &threadLocalStorageCleanup;
    return;
  }
  if (*(int *)(plocalUInt1[1] + 8) == 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
                    // WARNING: Subroutine does not return
  terminate();
}



void Unwind_180902c70(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x60) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x60),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180902c80(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x60) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x60),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180902c90(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x38);
  *plocalUInt1 = &threadLocalStorageData;
  if (plocalUInt1[1] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[1] = 0;
  *(uint32 *)(plocalUInt1 + 3) = 0;
  *plocalUInt1 = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902ca0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x50) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902cb0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x40) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x40) + 0x38))();
  }
  return;
}



void Unwind_180902cc0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x50) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902cd0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x20);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180902ce0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x20);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180902cf0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x20);
  plocalLong1 = (longlong *)plocalLong2[1];
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180902d00(uint64 resourceHandle,longlong memorySize)

{
  FUN_180057010(*(longlong *)(memorySize + 0x20) + 0x60);
  return;
}



void Unwind_180902d10(uint64 resourceHandle,longlong memorySize)

{
  FUN_180057010(*(longlong *)(memorySize + 0x20) + 0x60);
  return;
}



void Unwind_180902d20(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180902d30(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180902d40(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  uint64 localUInt2;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  localUInt2 = 0xfffffffffffffffe;
  _Mtx_destroy_in_situ();
  FUN_1808fc8a8(localLong1 + 0x3e0,0x20,0x20,FUN_180627b90,localUInt2);
  FUN_18005d580();
  FUN_1808fc8a8(localLong1 + 0x138,8,0x20,FUN_180045af0);
  FUN_1808fc8a8(localLong1 + 0x38,8,0x20,FUN_180045af0);
  return;
}



void Unwind_180902d50(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong localLong2;
  uint64 uVar3;
  
  localLong2 = *(longlong *)(memorySize + 0x40);
  uVar3 = 0xfffffffffffffffe;
  *(longlong *)(localLong2 + 0x15d8) =
       *(longlong *)(&DAT_180c8ed30 + (longlong)*(int *)(localLong2 + 0x15e0) * 8) + -100000;
  FUN_180090b80((longlong *)(localLong2 + 0x8b0));
  *(uint32 *)(localLong2 + 0x15e8) = 0;
  plocalLong1 = *(longlong **)(localLong2 + 0x15d0);
  *(uint64 *)(localLong2 + 0x15d0) = 0;
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  if (*(longlong **)(localLong2 + 0x15d0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong2 + 0x15d0) + 0x38))();
  }
  FUN_1808fc8a8(localLong2 + 0x8e0,0x20,0x50,FUN_180627b90,uVar3);
  FUN_1808fc8a8(localLong2 + 0x8b8,8,4,FUN_180045af0);
  plocalLong1 = *(longlong **)(localLong2 + 0x8b0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180902d70(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1600);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180902d90(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1698);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180902db0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1800);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180902dd0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180902df0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1858);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180902e10(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x40) + 0x1868);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1870);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180902e30(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x48);
  plocalLong1 = (longlong *)plocalLong2[1];
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180902e40(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x50);
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902e50(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x50) + 0x48);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180902e60(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x58);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180902e70(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x58);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180902e80(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  ulonglong *puVar3;
  longlong lVar4;
  uint64 *puVar5;
  ulonglong uVar6;
  
  puVar3 = (ulonglong *)(*(longlong *)(memorySize + 0x40) + 0x18);
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x20);
  for (puVar5 = (uint64 *)*puVar3; puVar5 != plocalUInt2; puVar5 = puVar5 + 0xe) {
    *puVar5 = &threadLocalStorageCleanup;
  }
  plocalUInt2 = (uint64 *)*puVar3;
  if (plocalUInt2 != (uint64 *)0x0) {
    uVar6 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
    if (uVar6 != 0) {
      lVar4 = uVar6 + 0x80 + ((longlong)plocalUInt2 - uVar6 >> 0x10) * 0x50;
      lVar4 = lVar4 - (ulonglong)*(uint *)(lVar4 + 4);
      if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar4 + 0xe) == '\0')) {
        *plocalUInt2 = *(uint64 *)(lVar4 + 0x20);
        *(uint64 **)(lVar4 + 0x20) = plocalUInt2;
        plocalInt1 = (int *)(lVar4 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                            plocalUInt2,uVar6,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_180902e90(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  *(uint64 *)(localLong1 + 0x148) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x150) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x150) = 0;
  *(uint32 *)(localLong1 + 0x160) = 0;
  *(uint64 *)(localLong1 + 0x148) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902eb0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong *puVar4;
  uint64 *puVar5;
  ulonglong uVar6;
  
  puVar4 = (ulonglong *)(*(longlong *)(memorySize + 0x40) + 0x18);
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x20);
  for (puVar5 = (uint64 *)*puVar4; puVar5 != plocalUInt2; puVar5 = puVar5 + 0xe) {
    *puVar5 = &threadLocalStorageCleanup;
  }
  plocalUInt2 = (uint64 *)*puVar4;
  if (plocalUInt2 != (uint64 *)0x0) {
    uVar6 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
    if (uVar6 != 0) {
      localLong3 = uVar6 + 0x80 + ((longlong)plocalUInt2 - uVar6 >> 0x10) * 0x50;
      localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
      if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
        *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
        *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
        plocalInt1 = (int *)(localLong3 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                            plocalUInt2,uVar6,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_180902ec0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  ulonglong *puVar3;
  longlong lVar4;
  uint64 *puVar5;
  ulonglong uVar6;
  
  puVar3 = *(ulonglong **)(memorySize + 0x40);
  plocalUInt2 = (uint64 *)puVar3[1];
  for (puVar5 = (uint64 *)*puVar3; puVar5 != plocalUInt2; puVar5 = puVar5 + 0xe) {
    *puVar5 = &threadLocalStorageCleanup;
  }
  plocalUInt2 = (uint64 *)*puVar3;
  if (plocalUInt2 != (uint64 *)0x0) {
    uVar6 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
    if (uVar6 != 0) {
      lVar4 = uVar6 + 0x80 + ((longlong)plocalUInt2 - uVar6 >> 0x10) * 0x50;
      lVar4 = lVar4 - (ulonglong)*(uint *)(lVar4 + 4);
      if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar4 + 0xe) == '\0')) {
        *plocalUInt2 = *(uint64 *)(lVar4 + 0x20);
        *(uint64 **)(lVar4 + 0x20) = plocalUInt2;
        plocalInt1 = (int *)(lVar4 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                            plocalUInt2,uVar6,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_180902ed0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x40) + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902ee0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x40) + 0x438) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902f00(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058710(*(longlong *)(memorySize + 0x40) + 0x858,
                *(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x868),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_180902f20(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x40) + 0x888);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x890);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180902f40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x40) + 0x8a8);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x8b0);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180902f60(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x8c8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180902f80(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x40) + 0x8e8,
                *(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x8f8),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_180902fa0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  *(uint64 *)(localLong1 + 0x918) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x920) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x920) = 0;
  *(uint32 *)(localLong1 + 0x930) = 0;
  *(uint64 *)(localLong1 + 0x918) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180902fc0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x948);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_1800587d0(*(longlong *)(memorySize + 0x40) + 0x938,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
    FUN_18005cb60(plocalUInt1);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180902fe0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x978);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_1800587d0(*(longlong *)(memorySize + 0x40) + 0x968,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
    FUN_18005cb60(plocalUInt1);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180903000(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x48) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_1800587d0(*(longlong *)(memorySize + 0x48),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
    FUN_18005cb60(plocalUInt1);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180903010(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x48) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_1800587d0(*(longlong *)(memorySize + 0x48),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
    FUN_18005cb60(plocalUInt1);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180903020(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x48),*(uint64 *)(*(longlong *)(memorySize + 0x48) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180903030(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x48),*(uint64 *)(*(longlong *)(memorySize + 0x48) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180903040(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058710(*(longlong *)(memorySize + 0x48),*(uint64 *)(*(longlong *)(memorySize + 0x48) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180903050(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058710(*(longlong *)(memorySize + 0x48),*(uint64 *)(*(longlong *)(memorySize + 0x48) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180903060(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058710(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180903070(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058710(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180903080(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_1800587d0(*(longlong *)(memorySize + 0x40),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
    FUN_18005cb60(plocalUInt1);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180903090(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_1800587d0(*(longlong *)(memorySize + 0x40),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
    FUN_18005cb60(plocalUInt1);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_1809030a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x30);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x28); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x28) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809030b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong localLong2;
  
  localLong2 = *(longlong *)(memorySize + 0x58);
  plocalLong1 = *(longlong **)(localLong2 + 0xb8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  *(data **)(localLong2 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809030c0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x60) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809030d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x98);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809030f0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x68);
  FUN_180058db0(localLong1 + 0x40);
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903100(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  uint64 localUInt2;
  
  localLong1 = *(longlong *)(memorySize + 0x70);
  localUInt2 = 0xfffffffffffffffe;
  _Mtx_destroy_in_situ();
  FUN_180058370(localLong1 + 0x110,*(uint64 *)(localLong1 + 0x120),operationFlags,callbackFunction,localUInt2);
  FUN_180058370(localLong1 + 0xe0,*(uint64 *)(localLong1 + 0xf0));
  FUN_180058370(localLong1 + 0xb0,*(uint64 *)(localLong1 + 0xc0));
  FUN_1800593f0(localLong1 + 0x80,*(uint64 *)(localLong1 + 0x90));
  FUN_180058710(localLong1 + 0x50,*(uint64 *)(localLong1 + 0x60));
  FUN_1800593f0(localLong1 + 0x20,*(uint64 *)(localLong1 + 0x30));
  return;
}



void Unwind_180903110(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x68);
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903120(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x78);
  if (*(longlong *)(localLong1 + 0x40) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903130(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x80) + 0x20);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180903140(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x88);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180903150(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x78);
  if (*(longlong *)(localLong1 + 0x40) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903160(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x80) + 0x20);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180903170(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x48);
  if (*(longlong *)(localLong1 + 0x40) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903180(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x48);
  *plocalUInt1 = &threadLocalStorageData;
  if (plocalUInt1[1] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[1] = 0;
  *(uint32 *)(plocalUInt1 + 3) = 0;
  *plocalUInt1 = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903190(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x48) + 0x20);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809031a0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x40) + 0x28);
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0x30);
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x548) {
    FUN_1800594b0(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809031b0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x48);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x548) {
    FUN_1800594b0(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809031c0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x98);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809031e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  uint64 localUInt2;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  localUInt2 = 0xfffffffffffffffe;
  _Mtx_destroy_in_situ();
  FUN_180058370(localLong1 + 0x110,*(uint64 *)(localLong1 + 0x120),operationFlags,callbackFunction,localUInt2);
  FUN_180058370(localLong1 + 0xe0,*(uint64 *)(localLong1 + 0xf0));
  FUN_180058370(localLong1 + 0xb0,*(uint64 *)(localLong1 + 0xc0));
  FUN_1800593f0(localLong1 + 0x80,*(uint64 *)(localLong1 + 0x90));
  FUN_180058710(localLong1 + 0x50,*(uint64 *)(localLong1 + 0x60));
  FUN_1800593f0(localLong1 + 0x20,*(uint64 *)(localLong1 + 0x30));
  return;
}



void Unwind_1809031f0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x20);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180903200(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x48);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180903210(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x40);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x548) {
    FUN_1800594b0(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180903220(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800593f0(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180903230(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058710(*(longlong *)(memorySize + 0x40) + 0x30,
                *(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x40),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_180903240(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800593f0(*(longlong *)(memorySize + 0x40) + 0x60,
                *(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x70),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_180903250(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x40) + 0x90,
                *(uint64 *)(*(longlong *)(memorySize + 0x40) + 0xa0),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_180903270(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x40) + 0xc0,
                *(uint64 *)(*(longlong *)(memorySize + 0x40) + 0xd0),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_180903290(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x40) + 0xf0,
                *(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x100),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_1809032b0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_1809032d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800593f0(*(longlong *)(memorySize + 0x48),*(uint64 *)(*(longlong *)(memorySize + 0x48) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_1809032e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800593f0(*(longlong *)(memorySize + 0x48),*(uint64 *)(*(longlong *)(memorySize + 0x48) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_1809032f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800593f0(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180903300(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800593f0(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180903310(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x20);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180903320(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x78);
  FUN_18004b730();
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903330(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x80) + 0x30);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x80) + 0x20,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180903340(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x88) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x88),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180903350(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x88) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x88),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180903360(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x50);
  *(uint64 *)(localLong1 + 0x40) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x48) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x48) = 0;
  *(uint32 *)(localLong1 + 0x58) = 0;
  *(uint64 *)(localLong1 + 0x40) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903370(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x50) + 0x88,0x20,0x10,FUN_180059620);
  return;
}



void Unwind_1809033b0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x50) + 0x288,0x58,4,FUN_180044a30);
  return;
}



void Unwind_1809033f0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x50) + 1000,0x58,4,FUN_180044a30);
  return;
}



void Unwind_180903430(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x30);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x40) + 0x20,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180903440(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x40);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x50) {
    FUN_1800596a0(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180903450(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180903460(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  char *pcVar2;
  uint64 *puVar3;
  longlong *plVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  plVar4 = *(longlong **)(memorySize + 0x40);
  puVar3 = (uint64 *)*plVar4;
  if (puVar3 != (uint64 *)0x0) {
    if ((uint64 *)puVar3[3] != (uint64 *)0x0) {
      *(uint64 *)puVar3[3] = 0;
    }
    (**(code **)*puVar3)(puVar3,0);
                    // WARNING: Subroutine does not return
    HandleCriticalError(puVar3);
  }
  if ((plVar4[6] != 0) && (*(longlong *)(plVar4[6] + 0x10) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  lVar5 = plVar4[5];
  while (lVar5 != 0) {
    pcVar2 = (char *)(lVar5 + 0x141);
    lVar5 = *(longlong *)(lVar5 + 0x138);
    if (*pcVar2 != '\0') {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  puVar3 = (uint64 *)plVar4[3];
  if (puVar3 == (uint64 *)0x0) {
    return;
  }
  uVar6 = (ulonglong)puVar3 & 0xffffffffffc00000;
  if (uVar6 != 0) {
    lVar5 = uVar6 + 0x80 + ((longlong)puVar3 - uVar6 >> 0x10) * 0x50;
    lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
    if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
      *puVar3 = *(uint64 *)(lVar5 + 0x20);
      *(uint64 **)(lVar5 + 0x20) = puVar3;
      plocalInt1 = (int *)(lVar5 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                          puVar3,uVar6,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180903470(void)

{
  _Cnd_destroy_in_situ();
  return;
}



void Unwind_180903490(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_1809034b0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x18);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809034c0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x60) + 0x18);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809034d0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x60) + 0x18);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809034e0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x60);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809034f0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  localLong3 = *(longlong *)(memorySize + 0x40);
  FUN_18005a050();
  if ((1 < *(ulonglong *)(localLong3 + 0x10)) &&
     (plocalUInt2 = *(uint64 **)(localLong3 + 8), plocalUInt2 != (uint64 *)0x0)) {
    uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
    if (uVar4 != 0) {
      localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
      localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
      if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
        *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
        *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
        plocalInt1 = (int *)(localLong3 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                            plocalUInt2,uVar4,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_180903500(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  localLong3 = *(longlong *)(memorySize + 0x40);
  FUN_18005a050();
  if ((1 < *(ulonglong *)(localLong3 + 0x10)) &&
     (plocalUInt2 = *(uint64 **)(localLong3 + 8), plocalUInt2 != (uint64 *)0x0)) {
    uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
    if (uVar4 != 0) {
      localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
      localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
      if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
        *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
        *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
        plocalInt1 = (int *)(localLong3 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                            plocalUInt2,uVar4,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_180903510(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  char *pcVar2;
  uint64 *puVar3;
  longlong *plVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  plVar4 = *(longlong **)(memorySize + 0x70);
  _Mtx_destroy_in_situ();
  _Cnd_destroy_in_situ();
  puVar3 = (uint64 *)*plVar4;
  if (puVar3 != (uint64 *)0x0) {
    if ((uint64 *)puVar3[3] != (uint64 *)0x0) {
      *(uint64 *)puVar3[3] = 0;
    }
    (**(code **)*puVar3)(puVar3,0);
                    // WARNING: Subroutine does not return
    HandleCriticalError(puVar3);
  }
  if ((plVar4[6] != 0) && (*(longlong *)(plVar4[6] + 0x10) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  lVar5 = plVar4[5];
  while (lVar5 != 0) {
    pcVar2 = (char *)(lVar5 + 0x141);
    lVar5 = *(longlong *)(lVar5 + 0x138);
    if (*pcVar2 != '\0') {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  puVar3 = (uint64 *)plVar4[3];
  if (puVar3 == (uint64 *)0x0) {
    return;
  }
  uVar6 = (ulonglong)puVar3 & 0xffffffffffc00000;
  if (uVar6 != 0) {
    lVar5 = uVar6 + 0x80 + ((longlong)puVar3 - uVar6 >> 0x10) * 0x50;
    lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
    if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
      *puVar3 = *(uint64 *)(lVar5 + 0x20);
      *(uint64 **)(lVar5 + 0x20) = puVar3;
      plocalInt1 = (int *)(lVar5 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                          puVar3,uVar6,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180903520(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x70) + 0x300);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180903540(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x70) + 0x328);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180903560(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  localLong3 = *(longlong *)(memorySize + 0x70);
  FUN_18005a050();
  if ((1 < *(ulonglong *)(localLong3 + 0x340)) &&
     (plocalUInt2 = *(uint64 **)(localLong3 + 0x338), plocalUInt2 != (uint64 *)0x0)) {
    uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
    if (uVar4 != 0) {
      localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
      localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
      if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
        *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
        *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
        plocalInt1 = (int *)(localLong3 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                            plocalUInt2,uVar4,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_180903580(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  char *pcVar2;
  uint64 *puVar3;
  longlong *plVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  plVar4 = *(longlong **)(memorySize + 0x80);
  puVar3 = (uint64 *)*plVar4;
  if (puVar3 != (uint64 *)0x0) {
    if ((uint64 *)puVar3[3] != (uint64 *)0x0) {
      *(uint64 *)puVar3[3] = 0;
    }
    (**(code **)*puVar3)(puVar3,0);
                    // WARNING: Subroutine does not return
    HandleCriticalError(puVar3);
  }
  if ((plVar4[6] != 0) && (*(longlong *)(plVar4[6] + 0x10) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  lVar5 = plVar4[5];
  while (lVar5 != 0) {
    pcVar2 = (char *)(lVar5 + 0x141);
    lVar5 = *(longlong *)(lVar5 + 0x138);
    if (*pcVar2 != '\0') {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  puVar3 = (uint64 *)plVar4[3];
  if (puVar3 == (uint64 *)0x0) {
    return;
  }
  uVar6 = (ulonglong)puVar3 & 0xffffffffffc00000;
  if (uVar6 != 0) {
    lVar5 = uVar6 + 0x80 + ((longlong)puVar3 - uVar6 >> 0x10) * 0x50;
    lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
    if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
      *puVar3 = *(uint64 *)(lVar5 + 0x20);
      *(uint64 **)(lVar5 + 0x20) = puVar3;
      plocalInt1 = (int *)(lVar5 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                          puVar3,uVar6,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180903590(void)

{
  _Cnd_destroy_in_situ();
  return;
}



void Unwind_1809035b0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_1809035d0(uint64 resourceHandle,longlong memorySize)

{
  _Cnd_destroy_in_situ(*(uint64 *)(memorySize + 0x88));
  return;
}



void Unwind_1809035e0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  localLong3 = *(longlong *)(memorySize + 0x80);
  FUN_18005a050();
  if ((1 < *(ulonglong *)(localLong3 + 0x10)) &&
     (plocalUInt2 = *(uint64 **)(localLong3 + 8), plocalUInt2 != (uint64 *)0x0)) {
    uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
    if (uVar4 != 0) {
      localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
      localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
      if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
        *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
        *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
        plocalInt1 = (int *)(localLong3 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                            plocalUInt2,uVar4,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_1809035f0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  localLong3 = *(longlong *)(memorySize + 0x80);
  FUN_18005a050();
  if ((1 < *(ulonglong *)(localLong3 + 0x10)) &&
     (plocalUInt2 = *(uint64 **)(localLong3 + 8), plocalUInt2 != (uint64 *)0x0)) {
    uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
    if (uVar4 != 0) {
      localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
      localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
      if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
        *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
        *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
        plocalInt1 = (int *)(localLong3 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                            plocalUInt2,uVar4,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_180903600(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x78) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x78) + 0x38))();
  }
  return;
}



void Unwind_180903610(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x40);
  *plocalUInt1 = &unknown_180a02968;
  plocalUInt1[0x18] = &threadLocalStorageData;
  if (plocalUInt1[0x19] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[0x19] = 0;
  *(uint32 *)(plocalUInt1 + 0x1b) = 0;
  plocalUInt1[0x18] = &threadLocalStorageCleanup;
  FUN_18005d260(plocalUInt1 + 0x12,plocalUInt1[0x14],operationFlags,callbackFunction,0xfffffffffffffffe);
  if (plocalUInt1[0xd] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  if (plocalUInt1[9] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  if (plocalUInt1[5] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  if (plocalUInt1[1] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180903620(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x140) != (code *)0x0) {
    (**(code **)(localLong1 + 0x140))(localLong1 + 0x130,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x108) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x110) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x110) = 0;
  *(uint32 *)(localLong1 + 0x120) = 0;
  *(uint64 *)(localLong1 + 0x108) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xe8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xf0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xf0) = 0;
  *(uint32 *)(localLong1 + 0x100) = 0;
  *(uint64 *)(localLong1 + 0xe8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903640(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1b0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1b0))(localLong1 + 0x1a0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x178) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x180) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x180) = 0;
  *(uint32 *)(localLong1 + 400) = 0;
  *(uint64 *)(localLong1 + 0x178) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x158) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x160) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x160) = 0;
  *(uint32 *)(localLong1 + 0x170) = 0;
  *(uint64 *)(localLong1 + 0x158) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903660(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x220) != (code *)0x0) {
    (**(code **)(localLong1 + 0x220))(localLong1 + 0x210,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1e8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1f0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1f0) = 0;
  *(uint32 *)(localLong1 + 0x200) = 0;
  *(uint64 *)(localLong1 + 0x1e8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1d0) = 0;
  *(uint32 *)(localLong1 + 0x1e0) = 0;
  *(uint64 *)(localLong1 + 0x1c8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903680(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x290) != (code *)0x0) {
    (**(code **)(localLong1 + 0x290))(localLong1 + 0x280,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 600) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x260) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x260) = 0;
  *(uint32 *)(localLong1 + 0x270) = 0;
  *(uint64 *)(localLong1 + 600) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x238) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x240) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x240) = 0;
  *(uint32 *)(localLong1 + 0x250) = 0;
  *(uint64 *)(localLong1 + 0x238) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809036a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x300) != (code *)0x0) {
    (**(code **)(localLong1 + 0x300))(localLong1 + 0x2f0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x2c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2d0) = 0;
  *(uint32 *)(localLong1 + 0x2e0) = 0;
  *(uint64 *)(localLong1 + 0x2c8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2a8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2b0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2b0) = 0;
  *(uint32 *)(localLong1 + 0x2c0) = 0;
  *(uint64 *)(localLong1 + 0x2a8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809036c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x370) != (code *)0x0) {
    (**(code **)(localLong1 + 0x370))(localLong1 + 0x360,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x338) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x340) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x340) = 0;
  *(uint32 *)(localLong1 + 0x350) = 0;
  *(uint64 *)(localLong1 + 0x338) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x318) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 800) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 800) = 0;
  *(uint32 *)(localLong1 + 0x330) = 0;
  *(uint64 *)(localLong1 + 0x318) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809036e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x3e0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x3e0))(localLong1 + 0x3d0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x3a8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x3b0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x3b0) = 0;
  *(uint32 *)(localLong1 + 0x3c0) = 0;
  *(uint64 *)(localLong1 + 0x3a8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x388) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x390) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x390) = 0;
  *(uint32 *)(localLong1 + 0x3a0) = 0;
  *(uint64 *)(localLong1 + 0x388) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903700(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x450) != (code *)0x0) {
    (**(code **)(localLong1 + 0x450))(localLong1 + 0x440,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x418) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x420) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x420) = 0;
  *(uint32 *)(localLong1 + 0x430) = 0;
  *(uint64 *)(localLong1 + 0x418) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x3f8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x400) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x400) = 0;
  *(uint32 *)(localLong1 + 0x410) = 0;
  *(uint64 *)(localLong1 + 0x3f8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903720(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x510) != (code *)0x0) {
    (**(code **)(localLong1 + 0x510))(localLong1 + 0x500,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x4e0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x4e8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x4e8) = 0;
  *(uint32 *)(localLong1 + 0x4f8) = 0;
  *(uint64 *)(localLong1 + 0x4e0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x4c0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x4c8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x4c8) = 0;
  *(uint32 *)(localLong1 + 0x4d8) = 0;
  *(uint64 *)(localLong1 + 0x4c0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x4a0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x4a8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x4a8) = 0;
  *(uint32 *)(localLong1 + 0x4b8) = 0;
  *(uint64 *)(localLong1 + 0x4a0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x480) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x488) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x488) = 0;
  *(uint32 *)(localLong1 + 0x498) = 0;
  *(uint64 *)(localLong1 + 0x480) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x460) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x468) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x468) = 0;
  *(uint32 *)(localLong1 + 0x478) = 0;
  *(uint64 *)(localLong1 + 0x460) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903740(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x580) != (code *)0x0) {
    (**(code **)(localLong1 + 0x580))(localLong1 + 0x570,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x548) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x550) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x550) = 0;
  *(uint32 *)(localLong1 + 0x560) = 0;
  *(uint64 *)(localLong1 + 0x548) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x528) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x530) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x530) = 0;
  *(uint32 *)(localLong1 + 0x540) = 0;
  *(uint64 *)(localLong1 + 0x528) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903760(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x80);
  *plocalUInt1 = &unknown_180a02968;
  plocalUInt1[0x18] = &threadLocalStorageData;
  if (plocalUInt1[0x19] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[0x19] = 0;
  *(uint32 *)(plocalUInt1 + 0x1b) = 0;
  plocalUInt1[0x18] = &threadLocalStorageCleanup;
  FUN_18005d260(plocalUInt1 + 0x12,plocalUInt1[0x14],operationFlags,callbackFunction,0xfffffffffffffffe);
  if (plocalUInt1[0xd] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  if (plocalUInt1[9] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  if (plocalUInt1[5] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  if (plocalUInt1[1] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180903770(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x140) != (code *)0x0) {
    (**(code **)(localLong1 + 0x140))(localLong1 + 0x130,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x108) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x110) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x110) = 0;
  *(uint32 *)(localLong1 + 0x120) = 0;
  *(uint64 *)(localLong1 + 0x108) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xe8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xf0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xf0) = 0;
  *(uint32 *)(localLong1 + 0x100) = 0;
  *(uint64 *)(localLong1 + 0xe8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903790(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1b0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1b0))(localLong1 + 0x1a0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x178) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x180) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x180) = 0;
  *(uint32 *)(localLong1 + 400) = 0;
  *(uint64 *)(localLong1 + 0x178) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x158) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x160) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x160) = 0;
  *(uint32 *)(localLong1 + 0x170) = 0;
  *(uint64 *)(localLong1 + 0x158) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809037b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x220) != (code *)0x0) {
    (**(code **)(localLong1 + 0x220))(localLong1 + 0x210,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1e8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1f0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1f0) = 0;
  *(uint32 *)(localLong1 + 0x200) = 0;
  *(uint64 *)(localLong1 + 0x1e8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1d0) = 0;
  *(uint32 *)(localLong1 + 0x1e0) = 0;
  *(uint64 *)(localLong1 + 0x1c8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809037d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x290) != (code *)0x0) {
    (**(code **)(localLong1 + 0x290))(localLong1 + 0x280,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 600) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x260) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x260) = 0;
  *(uint32 *)(localLong1 + 0x270) = 0;
  *(uint64 *)(localLong1 + 600) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x238) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x240) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x240) = 0;
  *(uint32 *)(localLong1 + 0x250) = 0;
  *(uint64 *)(localLong1 + 0x238) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809037f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x300) != (code *)0x0) {
    (**(code **)(localLong1 + 0x300))(localLong1 + 0x2f0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x2c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2d0) = 0;
  *(uint32 *)(localLong1 + 0x2e0) = 0;
  *(uint64 *)(localLong1 + 0x2c8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2a8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2b0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2b0) = 0;
  *(uint32 *)(localLong1 + 0x2c0) = 0;
  *(uint64 *)(localLong1 + 0x2a8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903810(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x370) != (code *)0x0) {
    (**(code **)(localLong1 + 0x370))(localLong1 + 0x360,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x338) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x340) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x340) = 0;
  *(uint32 *)(localLong1 + 0x350) = 0;
  *(uint64 *)(localLong1 + 0x338) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x318) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 800) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 800) = 0;
  *(uint32 *)(localLong1 + 0x330) = 0;
  *(uint64 *)(localLong1 + 0x318) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903830(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x3e0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x3e0))(localLong1 + 0x3d0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x3a8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x3b0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x3b0) = 0;
  *(uint32 *)(localLong1 + 0x3c0) = 0;
  *(uint64 *)(localLong1 + 0x3a8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x388) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x390) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x390) = 0;
  *(uint32 *)(localLong1 + 0x3a0) = 0;
  *(uint64 *)(localLong1 + 0x388) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903850(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x450) != (code *)0x0) {
    (**(code **)(localLong1 + 0x450))(localLong1 + 0x440,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x418) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x420) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x420) = 0;
  *(uint32 *)(localLong1 + 0x430) = 0;
  *(uint64 *)(localLong1 + 0x418) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x3f8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x400) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x400) = 0;
  *(uint32 *)(localLong1 + 0x410) = 0;
  *(uint64 *)(localLong1 + 0x3f8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903870(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x510) != (code *)0x0) {
    (**(code **)(localLong1 + 0x510))(localLong1 + 0x500,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x4e0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x4e8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x4e8) = 0;
  *(uint32 *)(localLong1 + 0x4f8) = 0;
  *(uint64 *)(localLong1 + 0x4e0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x4c0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x4c8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x4c8) = 0;
  *(uint32 *)(localLong1 + 0x4d8) = 0;
  *(uint64 *)(localLong1 + 0x4c0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x4a0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x4a8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x4a8) = 0;
  *(uint32 *)(localLong1 + 0x4b8) = 0;
  *(uint64 *)(localLong1 + 0x4a0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x480) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x488) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x488) = 0;
  *(uint32 *)(localLong1 + 0x498) = 0;
  *(uint64 *)(localLong1 + 0x480) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x460) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x468) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x468) = 0;
  *(uint32 *)(localLong1 + 0x478) = 0;
  *(uint64 *)(localLong1 + 0x460) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903890(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x580) != (code *)0x0) {
    (**(code **)(localLong1 + 0x580))(localLong1 + 0x570,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x548) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x550) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x550) = 0;
  *(uint32 *)(localLong1 + 0x560) = 0;
  *(uint64 *)(localLong1 + 0x548) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x528) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x530) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x530) = 0;
  *(uint32 *)(localLong1 + 0x540) = 0;
  *(uint64 *)(localLong1 + 0x528) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809038b0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x88);
  *(uint64 *)(localLong1 + 8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x10) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x10) = 0;
  *(uint32 *)(localLong1 + 0x20) = 0;
  *(uint64 *)(localLong1 + 8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809038c0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x88);
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809038d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x88) + 0x60);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x88) + 0x50,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809038e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x90) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x90),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809038f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x4c0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x4c0))(localLong1 + 0x4b0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x488) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x490) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x490) = 0;
  *(uint32 *)(localLong1 + 0x4a0) = 0;
  *(uint64 *)(localLong1 + 0x488) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x468) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x470) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x470) = 0;
  *(uint32 *)(localLong1 + 0x480) = 0;
  *(uint64 *)(localLong1 + 0x468) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903910(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x530) != (code *)0x0) {
    (**(code **)(localLong1 + 0x530))(localLong1 + 0x520,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x4f8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x500) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x500) = 0;
  *(uint32 *)(localLong1 + 0x510) = 0;
  *(uint64 *)(localLong1 + 0x4f8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x4d8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x4e0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x4e0) = 0;
  *(uint32 *)(localLong1 + 0x4f0) = 0;
  *(uint64 *)(localLong1 + 0x4d8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903930(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x5a0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x5a0))(localLong1 + 0x590,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x568) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x570) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x570) = 0;
  *(uint32 *)(localLong1 + 0x580) = 0;
  *(uint64 *)(localLong1 + 0x568) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x548) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x550) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x550) = 0;
  *(uint32 *)(localLong1 + 0x560) = 0;
  *(uint64 *)(localLong1 + 0x548) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903950(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x610) != (code *)0x0) {
    (**(code **)(localLong1 + 0x610))(localLong1 + 0x600,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x5d8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x5e0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x5e0) = 0;
  *(uint32 *)(localLong1 + 0x5f0) = 0;
  *(uint64 *)(localLong1 + 0x5d8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x5b8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x5c0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x5c0) = 0;
  *(uint32 *)(localLong1 + 0x5d0) = 0;
  *(uint64 *)(localLong1 + 0x5b8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903970(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x680) != (code *)0x0) {
    (**(code **)(localLong1 + 0x680))(localLong1 + 0x670,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x648) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x650) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x650) = 0;
  *(uint32 *)(localLong1 + 0x660) = 0;
  *(uint64 *)(localLong1 + 0x648) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x628) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x630) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x630) = 0;
  *(uint32 *)(localLong1 + 0x640) = 0;
  *(uint64 *)(localLong1 + 0x628) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903990(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x6f0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x6f0))(localLong1 + 0x6e0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x6b8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x6c0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x6c0) = 0;
  *(uint32 *)(localLong1 + 0x6d0) = 0;
  *(uint64 *)(localLong1 + 0x6b8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x698) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x6a0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x6a0) = 0;
  *(uint32 *)(localLong1 + 0x6b0) = 0;
  *(uint64 *)(localLong1 + 0x698) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809039b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x760) != (code *)0x0) {
    (**(code **)(localLong1 + 0x760))(localLong1 + 0x750,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x728) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x730) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x730) = 0;
  *(uint32 *)(localLong1 + 0x740) = 0;
  *(uint64 *)(localLong1 + 0x728) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x708) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x710) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x710) = 0;
  *(uint32 *)(localLong1 + 0x720) = 0;
  *(uint64 *)(localLong1 + 0x708) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809039d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 2000) != (code *)0x0) {
    (**(code **)(localLong1 + 2000))(localLong1 + 0x7c0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x798) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x7a0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x7a0) = 0;
  *(uint32 *)(localLong1 + 0x7b0) = 0;
  *(uint64 *)(localLong1 + 0x798) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x778) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x780) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x780) = 0;
  *(uint32 *)(localLong1 + 0x790) = 0;
  *(uint64 *)(localLong1 + 0x778) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809039f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x840) != (code *)0x0) {
    (**(code **)(localLong1 + 0x840))(localLong1 + 0x830,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x808) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x810) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x810) = 0;
  *(uint32 *)(localLong1 + 0x820) = 0;
  *(uint64 *)(localLong1 + 0x808) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x7e8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x7f0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x7f0) = 0;
  *(uint32 *)(localLong1 + 0x800) = 0;
  *(uint64 *)(localLong1 + 0x7e8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903a10(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x8b0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x8b0))(localLong1 + 0x8a0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x878) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x880) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x880) = 0;
  *(uint32 *)(localLong1 + 0x890) = 0;
  *(uint64 *)(localLong1 + 0x878) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x858) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x860) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x860) = 0;
  *(uint32 *)(localLong1 + 0x870) = 0;
  *(uint64 *)(localLong1 + 0x858) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903a30(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x920) != (code *)0x0) {
    (**(code **)(localLong1 + 0x920))(localLong1 + 0x910,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x8e8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x8f0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x8f0) = 0;
  *(uint32 *)(localLong1 + 0x900) = 0;
  *(uint64 *)(localLong1 + 0x8e8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x8c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x8d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x8d0) = 0;
  *(uint32 *)(localLong1 + 0x8e0) = 0;
  *(uint64 *)(localLong1 + 0x8c8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903a50(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x990) != (code *)0x0) {
    (**(code **)(localLong1 + 0x990))(localLong1 + 0x980,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x958) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x960) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x960) = 0;
  *(uint32 *)(localLong1 + 0x970) = 0;
  *(uint64 *)(localLong1 + 0x958) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x938) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x940) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x940) = 0;
  *(uint32 *)(localLong1 + 0x950) = 0;
  *(uint64 *)(localLong1 + 0x938) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903a70(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xa08) != (code *)0x0) {
    (**(code **)(localLong1 + 0xa08))(localLong1 + 0x9f8,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x9d0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x9d8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x9d8) = 0;
  *(uint32 *)(localLong1 + 0x9e8) = 0;
  *(uint64 *)(localLong1 + 0x9d0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x9b0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x9b8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x9b8) = 0;
  *(uint32 *)(localLong1 + 0x9c8) = 0;
  *(uint64 *)(localLong1 + 0x9b0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903a90(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xa80) != (code *)0x0) {
    (**(code **)(localLong1 + 0xa80))(localLong1 + 0xa70,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xa48) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xa50) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xa50) = 0;
  *(uint32 *)(localLong1 + 0xa60) = 0;
  *(uint64 *)(localLong1 + 0xa48) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xa28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xa30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xa30) = 0;
  *(uint32 *)(localLong1 + 0xa40) = 0;
  *(uint64 *)(localLong1 + 0xa28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903ab0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x40) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x40),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180903ac0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x50);
  *(uint64 *)(localLong1 + 0x10) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x18) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x18) = 0;
  *(uint32 *)(localLong1 + 0x28) = 0;
  *(uint64 *)(localLong1 + 0x10) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903ad0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x50);
  *(uint64 *)(localLong1 + 0x30) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x38) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x38) = 0;
  *(uint32 *)(localLong1 + 0x48) = 0;
  *(uint64 *)(localLong1 + 0x30) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903ae0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x50) + 0x68);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x50) + 0x58,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180903af0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x58) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x58),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180903b00(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x4c0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x4c0))(localLong1 + 0x4b0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x488) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x490) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x490) = 0;
  *(uint32 *)(localLong1 + 0x4a0) = 0;
  *(uint64 *)(localLong1 + 0x488) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x468) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x470) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x470) = 0;
  *(uint32 *)(localLong1 + 0x480) = 0;
  *(uint64 *)(localLong1 + 0x468) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903b20(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x530) != (code *)0x0) {
    (**(code **)(localLong1 + 0x530))(localLong1 + 0x520,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x4f8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x500) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x500) = 0;
  *(uint32 *)(localLong1 + 0x510) = 0;
  *(uint64 *)(localLong1 + 0x4f8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x4d8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x4e0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x4e0) = 0;
  *(uint32 *)(localLong1 + 0x4f0) = 0;
  *(uint64 *)(localLong1 + 0x4d8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903b40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x5a0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x5a0))(localLong1 + 0x590,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x568) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x570) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x570) = 0;
  *(uint32 *)(localLong1 + 0x580) = 0;
  *(uint64 *)(localLong1 + 0x568) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x548) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x550) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x550) = 0;
  *(uint32 *)(localLong1 + 0x560) = 0;
  *(uint64 *)(localLong1 + 0x548) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903b60(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x610) != (code *)0x0) {
    (**(code **)(localLong1 + 0x610))(localLong1 + 0x600,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x5d8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x5e0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x5e0) = 0;
  *(uint32 *)(localLong1 + 0x5f0) = 0;
  *(uint64 *)(localLong1 + 0x5d8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x5b8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x5c0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x5c0) = 0;
  *(uint32 *)(localLong1 + 0x5d0) = 0;
  *(uint64 *)(localLong1 + 0x5b8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903b80(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x680) != (code *)0x0) {
    (**(code **)(localLong1 + 0x680))(localLong1 + 0x670,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x648) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x650) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x650) = 0;
  *(uint32 *)(localLong1 + 0x660) = 0;
  *(uint64 *)(localLong1 + 0x648) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x628) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x630) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x630) = 0;
  *(uint32 *)(localLong1 + 0x640) = 0;
  *(uint64 *)(localLong1 + 0x628) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903ba0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x6f0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x6f0))(localLong1 + 0x6e0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x6b8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x6c0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x6c0) = 0;
  *(uint32 *)(localLong1 + 0x6d0) = 0;
  *(uint64 *)(localLong1 + 0x6b8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x698) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x6a0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x6a0) = 0;
  *(uint32 *)(localLong1 + 0x6b0) = 0;
  *(uint64 *)(localLong1 + 0x698) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903bc0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x760) != (code *)0x0) {
    (**(code **)(localLong1 + 0x760))(localLong1 + 0x750,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x728) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x730) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x730) = 0;
  *(uint32 *)(localLong1 + 0x740) = 0;
  *(uint64 *)(localLong1 + 0x728) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x708) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x710) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x710) = 0;
  *(uint32 *)(localLong1 + 0x720) = 0;
  *(uint64 *)(localLong1 + 0x708) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903be0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 2000) != (code *)0x0) {
    (**(code **)(localLong1 + 2000))(localLong1 + 0x7c0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x798) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x7a0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x7a0) = 0;
  *(uint32 *)(localLong1 + 0x7b0) = 0;
  *(uint64 *)(localLong1 + 0x798) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x778) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x780) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x780) = 0;
  *(uint32 *)(localLong1 + 0x790) = 0;
  *(uint64 *)(localLong1 + 0x778) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903c00(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x840) != (code *)0x0) {
    (**(code **)(localLong1 + 0x840))(localLong1 + 0x830,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x808) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x810) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x810) = 0;
  *(uint32 *)(localLong1 + 0x820) = 0;
  *(uint64 *)(localLong1 + 0x808) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x7e8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x7f0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x7f0) = 0;
  *(uint32 *)(localLong1 + 0x800) = 0;
  *(uint64 *)(localLong1 + 0x7e8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903c20(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x8b0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x8b0))(localLong1 + 0x8a0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x878) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x880) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x880) = 0;
  *(uint32 *)(localLong1 + 0x890) = 0;
  *(uint64 *)(localLong1 + 0x878) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x858) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x860) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x860) = 0;
  *(uint32 *)(localLong1 + 0x870) = 0;
  *(uint64 *)(localLong1 + 0x858) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903c40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x920) != (code *)0x0) {
    (**(code **)(localLong1 + 0x920))(localLong1 + 0x910,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x8e8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x8f0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x8f0) = 0;
  *(uint32 *)(localLong1 + 0x900) = 0;
  *(uint64 *)(localLong1 + 0x8e8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x8c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x8d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x8d0) = 0;
  *(uint32 *)(localLong1 + 0x8e0) = 0;
  *(uint64 *)(localLong1 + 0x8c8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903c60(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x990) != (code *)0x0) {
    (**(code **)(localLong1 + 0x990))(localLong1 + 0x980,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x958) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x960) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x960) = 0;
  *(uint32 *)(localLong1 + 0x970) = 0;
  *(uint64 *)(localLong1 + 0x958) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x938) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x940) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x940) = 0;
  *(uint32 *)(localLong1 + 0x950) = 0;
  *(uint64 *)(localLong1 + 0x938) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903c80(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xa08) != (code *)0x0) {
    (**(code **)(localLong1 + 0xa08))(localLong1 + 0x9f8,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x9d0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x9d8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x9d8) = 0;
  *(uint32 *)(localLong1 + 0x9e8) = 0;
  *(uint64 *)(localLong1 + 0x9d0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x9b0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x9b8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x9b8) = 0;
  *(uint32 *)(localLong1 + 0x9c8) = 0;
  *(uint64 *)(localLong1 + 0x9b0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903ca0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xa80) != (code *)0x0) {
    (**(code **)(localLong1 + 0xa80))(localLong1 + 0xa70,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xa48) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xa50) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xa50) = 0;
  *(uint32 *)(localLong1 + 0xa60) = 0;
  *(uint64 *)(localLong1 + 0xa48) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xa28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xa30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xa30) = 0;
  *(uint32 *)(localLong1 + 0xa40) = 0;
  *(uint64 *)(localLong1 + 0xa28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903cc0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x88);
  *(uint64 *)(localLong1 + 0x10) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x18) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x18) = 0;
  *(uint32 *)(localLong1 + 0x28) = 0;
  *(uint64 *)(localLong1 + 0x10) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903cd0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x88);
  *(uint64 *)(localLong1 + 0x30) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x38) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x38) = 0;
  *(uint32 *)(localLong1 + 0x48) = 0;
  *(uint64 *)(localLong1 + 0x30) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903ce0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x88) + 0x68);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x88) + 0x58,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180903cf0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 400) != (code *)0x0) {
    (**(code **)(localLong1 + 400))(localLong1 + 0x180,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x160) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x168) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x168) = 0;
  *(uint32 *)(localLong1 + 0x178) = 0;
  *(uint64 *)(localLong1 + 0x160) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x140) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x148) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x148) = 0;
  *(uint32 *)(localLong1 + 0x158) = 0;
  *(uint64 *)(localLong1 + 0x140) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x120) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x128) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x128) = 0;
  *(uint32 *)(localLong1 + 0x138) = 0;
  *(uint64 *)(localLong1 + 0x120) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x100) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x108) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x108) = 0;
  *(uint32 *)(localLong1 + 0x118) = 0;
  *(uint64 *)(localLong1 + 0x100) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xe0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xe8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xe8) = 0;
  *(uint32 *)(localLong1 + 0xf8) = 0;
  *(uint64 *)(localLong1 + 0xe0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903d10(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x250) != (code *)0x0) {
    (**(code **)(localLong1 + 0x250))(localLong1 + 0x240,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x220) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x228) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x228) = 0;
  *(uint32 *)(localLong1 + 0x238) = 0;
  *(uint64 *)(localLong1 + 0x220) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x200) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x208) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x208) = 0;
  *(uint32 *)(localLong1 + 0x218) = 0;
  *(uint64 *)(localLong1 + 0x200) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1e0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1e8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1e8) = 0;
  *(uint32 *)(localLong1 + 0x1f8) = 0;
  *(uint64 *)(localLong1 + 0x1e0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1c0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1c8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1c8) = 0;
  *(uint32 *)(localLong1 + 0x1d8) = 0;
  *(uint64 *)(localLong1 + 0x1c0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1a0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1a8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1a8) = 0;
  *(uint32 *)(localLong1 + 0x1b8) = 0;
  *(uint64 *)(localLong1 + 0x1a0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903d30(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x310) != (code *)0x0) {
    (**(code **)(localLong1 + 0x310))(localLong1 + 0x300,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x2e0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2e8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2e8) = 0;
  *(uint32 *)(localLong1 + 0x2f8) = 0;
  *(uint64 *)(localLong1 + 0x2e0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2c0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2c8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2c8) = 0;
  *(uint32 *)(localLong1 + 0x2d8) = 0;
  *(uint64 *)(localLong1 + 0x2c0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2a0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2a8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2a8) = 0;
  *(uint32 *)(localLong1 + 0x2b8) = 0;
  *(uint64 *)(localLong1 + 0x2a0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x280) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x288) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x288) = 0;
  *(uint32 *)(localLong1 + 0x298) = 0;
  *(uint64 *)(localLong1 + 0x280) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x260) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x268) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x268) = 0;
  *(uint32 *)(localLong1 + 0x278) = 0;
  *(uint64 *)(localLong1 + 0x260) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903d50(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x3d0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x3d0))(localLong1 + 0x3c0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x3a0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x3a8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x3a8) = 0;
  *(uint32 *)(localLong1 + 0x3b8) = 0;
  *(uint64 *)(localLong1 + 0x3a0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x380) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x388) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x388) = 0;
  *(uint32 *)(localLong1 + 0x398) = 0;
  *(uint64 *)(localLong1 + 0x380) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x360) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x368) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x368) = 0;
  *(uint32 *)(localLong1 + 0x378) = 0;
  *(uint64 *)(localLong1 + 0x360) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x340) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x348) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x348) = 0;
  *(uint32 *)(localLong1 + 0x358) = 0;
  *(uint64 *)(localLong1 + 0x340) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 800) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x328) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x328) = 0;
  *(uint32 *)(localLong1 + 0x338) = 0;
  *(uint64 *)(localLong1 + 800) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903d70(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x490) != (code *)0x0) {
    (**(code **)(localLong1 + 0x490))(localLong1 + 0x480,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x460) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x468) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x468) = 0;
  *(uint32 *)(localLong1 + 0x478) = 0;
  *(uint64 *)(localLong1 + 0x460) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x440) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x448) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x448) = 0;
  *(uint32 *)(localLong1 + 0x458) = 0;
  *(uint64 *)(localLong1 + 0x440) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x420) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x428) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x428) = 0;
  *(uint32 *)(localLong1 + 0x438) = 0;
  *(uint64 *)(localLong1 + 0x420) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x400) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x408) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x408) = 0;
  *(uint32 *)(localLong1 + 0x418) = 0;
  *(uint64 *)(localLong1 + 0x400) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x3e0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 1000) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 1000) = 0;
  *(uint32 *)(localLong1 + 0x3f8) = 0;
  *(uint64 *)(localLong1 + 0x3e0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903d90(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x550) != (code *)0x0) {
    (**(code **)(localLong1 + 0x550))(localLong1 + 0x540,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x520) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x528) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x528) = 0;
  *(uint32 *)(localLong1 + 0x538) = 0;
  *(uint64 *)(localLong1 + 0x520) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x500) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x508) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x508) = 0;
  *(uint32 *)(localLong1 + 0x518) = 0;
  *(uint64 *)(localLong1 + 0x500) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x4e0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x4e8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x4e8) = 0;
  *(uint32 *)(localLong1 + 0x4f8) = 0;
  *(uint64 *)(localLong1 + 0x4e0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x4c0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x4c8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x4c8) = 0;
  *(uint32 *)(localLong1 + 0x4d8) = 0;
  *(uint64 *)(localLong1 + 0x4c0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x4a0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x4a8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x4a8) = 0;
  *(uint32 *)(localLong1 + 0x4b8) = 0;
  *(uint64 *)(localLong1 + 0x4a0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903db0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x610) != (code *)0x0) {
    (**(code **)(localLong1 + 0x610))(localLong1 + 0x600,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x5e0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x5e8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x5e8) = 0;
  *(uint32 *)(localLong1 + 0x5f8) = 0;
  *(uint64 *)(localLong1 + 0x5e0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x5c0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x5c8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x5c8) = 0;
  *(uint32 *)(localLong1 + 0x5d8) = 0;
  *(uint64 *)(localLong1 + 0x5c0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x5a0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x5a8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x5a8) = 0;
  *(uint32 *)(localLong1 + 0x5b8) = 0;
  *(uint64 *)(localLong1 + 0x5a0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x580) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x588) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x588) = 0;
  *(uint32 *)(localLong1 + 0x598) = 0;
  *(uint64 *)(localLong1 + 0x580) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x560) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x568) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x568) = 0;
  *(uint32 *)(localLong1 + 0x578) = 0;
  *(uint64 *)(localLong1 + 0x560) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903dd0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x6d0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x6d0))(localLong1 + 0x6c0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x6a0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x6a8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x6a8) = 0;
  *(uint32 *)(localLong1 + 0x6b8) = 0;
  *(uint64 *)(localLong1 + 0x6a0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x680) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x688) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x688) = 0;
  *(uint32 *)(localLong1 + 0x698) = 0;
  *(uint64 *)(localLong1 + 0x680) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x660) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x668) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x668) = 0;
  *(uint32 *)(localLong1 + 0x678) = 0;
  *(uint64 *)(localLong1 + 0x660) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x640) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x648) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x648) = 0;
  *(uint32 *)(localLong1 + 0x658) = 0;
  *(uint64 *)(localLong1 + 0x640) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x620) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x628) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x628) = 0;
  *(uint32 *)(localLong1 + 0x638) = 0;
  *(uint64 *)(localLong1 + 0x620) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903df0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x790) != (code *)0x0) {
    (**(code **)(localLong1 + 0x790))(localLong1 + 0x780,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x760) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x768) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x768) = 0;
  *(uint32 *)(localLong1 + 0x778) = 0;
  *(uint64 *)(localLong1 + 0x760) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x740) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x748) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x748) = 0;
  *(uint32 *)(localLong1 + 0x758) = 0;
  *(uint64 *)(localLong1 + 0x740) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x720) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x728) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x728) = 0;
  *(uint32 *)(localLong1 + 0x738) = 0;
  *(uint64 *)(localLong1 + 0x720) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x700) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x708) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x708) = 0;
  *(uint32 *)(localLong1 + 0x718) = 0;
  *(uint64 *)(localLong1 + 0x700) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x6e0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x6e8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x6e8) = 0;
  *(uint32 *)(localLong1 + 0x6f8) = 0;
  *(uint64 *)(localLong1 + 0x6e0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903e10(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x850) != (code *)0x0) {
    (**(code **)(localLong1 + 0x850))(localLong1 + 0x840,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x820) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x828) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x828) = 0;
  *(uint32 *)(localLong1 + 0x838) = 0;
  *(uint64 *)(localLong1 + 0x820) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x800) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x808) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x808) = 0;
  *(uint32 *)(localLong1 + 0x818) = 0;
  *(uint64 *)(localLong1 + 0x800) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x7e0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x7e8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x7e8) = 0;
  *(uint32 *)(localLong1 + 0x7f8) = 0;
  *(uint64 *)(localLong1 + 0x7e0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x7c0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x7c8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x7c8) = 0;
  *(uint32 *)(localLong1 + 0x7d8) = 0;
  *(uint64 *)(localLong1 + 0x7c0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x7a0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x7a8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x7a8) = 0;
  *(uint32 *)(localLong1 + 0x7b8) = 0;
  *(uint64 *)(localLong1 + 0x7a0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903e30(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x910) != (code *)0x0) {
    (**(code **)(localLong1 + 0x910))(localLong1 + 0x900,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x8e0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x8e8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x8e8) = 0;
  *(uint32 *)(localLong1 + 0x8f8) = 0;
  *(uint64 *)(localLong1 + 0x8e0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x8c0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x8c8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x8c8) = 0;
  *(uint32 *)(localLong1 + 0x8d8) = 0;
  *(uint64 *)(localLong1 + 0x8c0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x8a0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x8a8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x8a8) = 0;
  *(uint32 *)(localLong1 + 0x8b8) = 0;
  *(uint64 *)(localLong1 + 0x8a0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x880) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x888) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x888) = 0;
  *(uint32 *)(localLong1 + 0x898) = 0;
  *(uint64 *)(localLong1 + 0x880) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x860) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x868) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x868) = 0;
  *(uint32 *)(localLong1 + 0x878) = 0;
  *(uint64 *)(localLong1 + 0x860) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903e50(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x9d0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x9d0))(localLong1 + 0x9c0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x9a0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x9a8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x9a8) = 0;
  *(uint32 *)(localLong1 + 0x9b8) = 0;
  *(uint64 *)(localLong1 + 0x9a0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x980) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x988) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x988) = 0;
  *(uint32 *)(localLong1 + 0x998) = 0;
  *(uint64 *)(localLong1 + 0x980) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x960) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x968) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x968) = 0;
  *(uint32 *)(localLong1 + 0x978) = 0;
  *(uint64 *)(localLong1 + 0x960) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x940) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x948) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x948) = 0;
  *(uint32 *)(localLong1 + 0x958) = 0;
  *(uint64 *)(localLong1 + 0x940) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x920) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x928) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x928) = 0;
  *(uint32 *)(localLong1 + 0x938) = 0;
  *(uint64 *)(localLong1 + 0x920) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903e70(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xa90) != (code *)0x0) {
    (**(code **)(localLong1 + 0xa90))(localLong1 + 0xa80,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xa60) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xa68) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xa68) = 0;
  *(uint32 *)(localLong1 + 0xa78) = 0;
  *(uint64 *)(localLong1 + 0xa60) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xa40) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xa48) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xa48) = 0;
  *(uint32 *)(localLong1 + 0xa58) = 0;
  *(uint64 *)(localLong1 + 0xa40) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xa20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xa28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xa28) = 0;
  *(uint32 *)(localLong1 + 0xa38) = 0;
  *(uint64 *)(localLong1 + 0xa20) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xa00) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xa08) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xa08) = 0;
  *(uint32 *)(localLong1 + 0xa18) = 0;
  *(uint64 *)(localLong1 + 0xa00) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x9e0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x9e8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x9e8) = 0;
  *(uint32 *)(localLong1 + 0x9f8) = 0;
  *(uint64 *)(localLong1 + 0x9e0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903e90(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xb50) != (code *)0x0) {
    (**(code **)(localLong1 + 0xb50))(localLong1 + 0xb40,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xb20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xb28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xb28) = 0;
  *(uint32 *)(localLong1 + 0xb38) = 0;
  *(uint64 *)(localLong1 + 0xb20) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xb00) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xb08) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xb08) = 0;
  *(uint32 *)(localLong1 + 0xb18) = 0;
  *(uint64 *)(localLong1 + 0xb00) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xae0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xae8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xae8) = 0;
  *(uint32 *)(localLong1 + 0xaf8) = 0;
  *(uint64 *)(localLong1 + 0xae0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xac0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xac8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xac8) = 0;
  *(uint32 *)(localLong1 + 0xad8) = 0;
  *(uint64 *)(localLong1 + 0xac0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xaa0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xaa8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xaa8) = 0;
  *(uint32 *)(localLong1 + 0xab8) = 0;
  *(uint64 *)(localLong1 + 0xaa0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903eb0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xc10) != (code *)0x0) {
    (**(code **)(localLong1 + 0xc10))(localLong1 + 0xc00,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xbe0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xbe8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xbe8) = 0;
  *(uint32 *)(localLong1 + 0xbf8) = 0;
  *(uint64 *)(localLong1 + 0xbe0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xbc0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xbc8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xbc8) = 0;
  *(uint32 *)(localLong1 + 0xbd8) = 0;
  *(uint64 *)(localLong1 + 0xbc0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xba0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xba8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xba8) = 0;
  *(uint32 *)(localLong1 + 3000) = 0;
  *(uint64 *)(localLong1 + 0xba0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xb80) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xb88) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xb88) = 0;
  *(uint32 *)(localLong1 + 0xb98) = 0;
  *(uint64 *)(localLong1 + 0xb80) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xb60) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xb68) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xb68) = 0;
  *(uint32 *)(localLong1 + 0xb78) = 0;
  *(uint64 *)(localLong1 + 0xb60) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903ed0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xcd0) != (code *)0x0) {
    (**(code **)(localLong1 + 0xcd0))(localLong1 + 0xcc0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xca0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xca8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xca8) = 0;
  *(uint32 *)(localLong1 + 0xcb8) = 0;
  *(uint64 *)(localLong1 + 0xca0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xc80) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xc88) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xc88) = 0;
  *(uint32 *)(localLong1 + 0xc98) = 0;
  *(uint64 *)(localLong1 + 0xc80) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xc60) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xc68) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xc68) = 0;
  *(uint32 *)(localLong1 + 0xc78) = 0;
  *(uint64 *)(localLong1 + 0xc60) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xc40) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xc48) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xc48) = 0;
  *(uint32 *)(localLong1 + 0xc58) = 0;
  *(uint64 *)(localLong1 + 0xc40) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xc20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xc28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xc28) = 0;
  *(uint32 *)(localLong1 + 0xc38) = 0;
  *(uint64 *)(localLong1 + 0xc20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903ef0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xd40) != (code *)0x0) {
    (**(code **)(localLong1 + 0xd40))(localLong1 + 0xd30,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xd08) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xd10) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xd10) = 0;
  *(uint32 *)(localLong1 + 0xd20) = 0;
  *(uint64 *)(localLong1 + 0xd08) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xce8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xcf0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xcf0) = 0;
  *(uint32 *)(localLong1 + 0xd00) = 0;
  *(uint64 *)(localLong1 + 0xce8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903f10(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xdb0) != (code *)0x0) {
    (**(code **)(localLong1 + 0xdb0))(localLong1 + 0xda0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xd78) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xd80) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xd80) = 0;
  *(uint32 *)(localLong1 + 0xd90) = 0;
  *(uint64 *)(localLong1 + 0xd78) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xd58) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xd60) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xd60) = 0;
  *(uint32 *)(localLong1 + 0xd70) = 0;
  *(uint64 *)(localLong1 + 0xd58) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903f30(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xe20) != (code *)0x0) {
    (**(code **)(localLong1 + 0xe20))(localLong1 + 0xe10,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xde8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xdf0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xdf0) = 0;
  *(uint32 *)(localLong1 + 0xe00) = 0;
  *(uint64 *)(localLong1 + 0xde8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xdc8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xdd0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xdd0) = 0;
  *(uint32 *)(localLong1 + 0xde0) = 0;
  *(uint64 *)(localLong1 + 0xdc8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903f50(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xee0) != (code *)0x0) {
    (**(code **)(localLong1 + 0xee0))(localLong1 + 0xed0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xeb0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xeb8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xeb8) = 0;
  *(uint32 *)(localLong1 + 0xec8) = 0;
  *(uint64 *)(localLong1 + 0xeb0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xe90) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xe98) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xe98) = 0;
  *(uint32 *)(localLong1 + 0xea8) = 0;
  *(uint64 *)(localLong1 + 0xe90) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xe70) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xe78) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xe78) = 0;
  *(uint32 *)(localLong1 + 0xe88) = 0;
  *(uint64 *)(localLong1 + 0xe70) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xe50) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xe58) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xe58) = 0;
  *(uint32 *)(localLong1 + 0xe68) = 0;
  *(uint64 *)(localLong1 + 0xe50) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xe30) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xe38) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xe38) = 0;
  *(uint32 *)(localLong1 + 0xe48) = 0;
  *(uint64 *)(localLong1 + 0xe30) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903f70(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 4000) != (code *)0x0) {
    (**(code **)(localLong1 + 4000))(localLong1 + 0xf90,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xf70) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xf78) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xf78) = 0;
  *(uint32 *)(localLong1 + 0xf88) = 0;
  *(uint64 *)(localLong1 + 0xf70) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xf50) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xf58) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xf58) = 0;
  *(uint32 *)(localLong1 + 0xf68) = 0;
  *(uint64 *)(localLong1 + 0xf50) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xf30) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xf38) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xf38) = 0;
  *(uint32 *)(localLong1 + 0xf48) = 0;
  *(uint64 *)(localLong1 + 0xf30) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xf10) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xf18) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xf18) = 0;
  *(uint32 *)(localLong1 + 0xf28) = 0;
  *(uint64 *)(localLong1 + 0xf10) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xef0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xef8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xef8) = 0;
  *(uint32 *)(localLong1 + 0xf08) = 0;
  *(uint64 *)(localLong1 + 0xef0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903f90(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1060) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1060))(localLong1 + 0x1050,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1030) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1038) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1038) = 0;
  *(uint32 *)(localLong1 + 0x1048) = 0;
  *(uint64 *)(localLong1 + 0x1030) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1010) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1018) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1018) = 0;
  *(uint32 *)(localLong1 + 0x1028) = 0;
  *(uint64 *)(localLong1 + 0x1010) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xff0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xff8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xff8) = 0;
  *(uint32 *)(localLong1 + 0x1008) = 0;
  *(uint64 *)(localLong1 + 0xff0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xfd0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xfd8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xfd8) = 0;
  *(uint32 *)(localLong1 + 0xfe8) = 0;
  *(uint64 *)(localLong1 + 0xfd0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xfb0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xfb8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xfb8) = 0;
  *(uint32 *)(localLong1 + 0xfc8) = 0;
  *(uint64 *)(localLong1 + 0xfb0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903fb0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x10d0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x10d0))(localLong1 + 0x10c0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1098) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x10a0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x10a0) = 0;
  *(uint32 *)(localLong1 + 0x10b0) = 0;
  *(uint64 *)(localLong1 + 0x1098) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1078) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1080) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1080) = 0;
  *(uint32 *)(localLong1 + 0x1090) = 0;
  *(uint64 *)(localLong1 + 0x1078) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903fd0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1140) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1140))(localLong1 + 0x1130,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1108) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1110) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1110) = 0;
  *(uint32 *)(localLong1 + 0x1120) = 0;
  *(uint64 *)(localLong1 + 0x1108) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x10e8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x10f0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x10f0) = 0;
  *(uint32 *)(localLong1 + 0x1100) = 0;
  *(uint64 *)(localLong1 + 0x10e8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180903ff0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x11b0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x11b0))(localLong1 + 0x11a0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1178) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1180) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1180) = 0;
  *(uint32 *)(localLong1 + 0x1190) = 0;
  *(uint64 *)(localLong1 + 0x1178) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1158) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1160) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1160) = 0;
  *(uint32 *)(localLong1 + 0x1170) = 0;
  *(uint64 *)(localLong1 + 0x1158) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904010(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1220) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1220))(localLong1 + 0x1210,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x11e8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x11f0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x11f0) = 0;
  *(uint32 *)(localLong1 + 0x1200) = 0;
  *(uint64 *)(localLong1 + 0x11e8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x11c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x11d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x11d0) = 0;
  *(uint32 *)(localLong1 + 0x11e0) = 0;
  *(uint64 *)(localLong1 + 0x11c8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904030(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1290) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1290))(localLong1 + 0x1280,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1258) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1260) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1260) = 0;
  *(uint32 *)(localLong1 + 0x1270) = 0;
  *(uint64 *)(localLong1 + 0x1258) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1238) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1240) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1240) = 0;
  *(uint32 *)(localLong1 + 0x1250) = 0;
  *(uint64 *)(localLong1 + 0x1238) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904050(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1300) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1300))(localLong1 + 0x12f0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x12c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x12d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x12d0) = 0;
  *(uint32 *)(localLong1 + 0x12e0) = 0;
  *(uint64 *)(localLong1 + 0x12c8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x12a8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x12b0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x12b0) = 0;
  *(uint32 *)(localLong1 + 0x12c0) = 0;
  *(uint64 *)(localLong1 + 0x12a8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904070(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1370) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1370))(localLong1 + 0x1360,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1338) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1340) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1340) = 0;
  *(uint32 *)(localLong1 + 0x1350) = 0;
  *(uint64 *)(localLong1 + 0x1338) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1318) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1320) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1320) = 0;
  *(uint32 *)(localLong1 + 0x1330) = 0;
  *(uint64 *)(localLong1 + 0x1318) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904090(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x40) + 0x1380);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 5000);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809040b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x40) + 0x13a0);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x13a8);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809040d0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x20);
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809040e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x20) + 0x60);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x20) + 0x50,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809040f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x28) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x28),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180904100(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x50);
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904110(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x50) + 0x60);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x50) + 0x50,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180904120(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x20);
  *plocalUInt1 = &threadLocalStorageData;
  if (plocalUInt1[1] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[1] = 0;
  *(uint32 *)(plocalUInt1 + 3) = 0;
  *plocalUInt1 = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904130(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x20);
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904140(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x20);
  *(uint64 *)(localLong1 + 0x40) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x48) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x48) = 0;
  *(uint32 *)(localLong1 + 0x58) = 0;
  *(uint64 *)(localLong1 + 0x40) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904150(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x20);
  *(uint64 *)(localLong1 + 0x60) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x68) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x68) = 0;
  *(uint32 *)(localLong1 + 0x78) = 0;
  *(uint64 *)(localLong1 + 0x60) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904160(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x20);
  *(uint64 *)(localLong1 + 0x80) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x88) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x88) = 0;
  *(uint32 *)(localLong1 + 0x98) = 0;
  *(uint64 *)(localLong1 + 0x80) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904180(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x20) + 0xb0);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x20) + 0xa0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809041a0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x50);
  *(uint64 *)(localLong1 + 0x60) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x68) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x68) = 0;
  *(uint32 *)(localLong1 + 0x78) = 0;
  *(uint64 *)(localLong1 + 0x60) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809041b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x50) + 0xb0);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x50) + 0xa0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809041d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 400) != (code *)0x0) {
    (**(code **)(localLong1 + 400))(localLong1 + 0x180,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x160) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x168) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x168) = 0;
  *(uint32 *)(localLong1 + 0x178) = 0;
  *(uint64 *)(localLong1 + 0x160) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x140) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x148) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x148) = 0;
  *(uint32 *)(localLong1 + 0x158) = 0;
  *(uint64 *)(localLong1 + 0x140) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x120) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x128) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x128) = 0;
  *(uint32 *)(localLong1 + 0x138) = 0;
  *(uint64 *)(localLong1 + 0x120) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x100) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x108) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x108) = 0;
  *(uint32 *)(localLong1 + 0x118) = 0;
  *(uint64 *)(localLong1 + 0x100) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xe0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xe8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xe8) = 0;
  *(uint32 *)(localLong1 + 0xf8) = 0;
  *(uint64 *)(localLong1 + 0xe0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809041f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x250) != (code *)0x0) {
    (**(code **)(localLong1 + 0x250))(localLong1 + 0x240,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x220) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x228) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x228) = 0;
  *(uint32 *)(localLong1 + 0x238) = 0;
  *(uint64 *)(localLong1 + 0x220) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x200) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x208) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x208) = 0;
  *(uint32 *)(localLong1 + 0x218) = 0;
  *(uint64 *)(localLong1 + 0x200) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1e0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1e8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1e8) = 0;
  *(uint32 *)(localLong1 + 0x1f8) = 0;
  *(uint64 *)(localLong1 + 0x1e0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1c0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1c8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1c8) = 0;
  *(uint32 *)(localLong1 + 0x1d8) = 0;
  *(uint64 *)(localLong1 + 0x1c0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1a0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1a8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1a8) = 0;
  *(uint32 *)(localLong1 + 0x1b8) = 0;
  *(uint64 *)(localLong1 + 0x1a0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904210(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x310) != (code *)0x0) {
    (**(code **)(localLong1 + 0x310))(localLong1 + 0x300,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x2e0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2e8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2e8) = 0;
  *(uint32 *)(localLong1 + 0x2f8) = 0;
  *(uint64 *)(localLong1 + 0x2e0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2c0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2c8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2c8) = 0;
  *(uint32 *)(localLong1 + 0x2d8) = 0;
  *(uint64 *)(localLong1 + 0x2c0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2a0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2a8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2a8) = 0;
  *(uint32 *)(localLong1 + 0x2b8) = 0;
  *(uint64 *)(localLong1 + 0x2a0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x280) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x288) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x288) = 0;
  *(uint32 *)(localLong1 + 0x298) = 0;
  *(uint64 *)(localLong1 + 0x280) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x260) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x268) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x268) = 0;
  *(uint32 *)(localLong1 + 0x278) = 0;
  *(uint64 *)(localLong1 + 0x260) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904230(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x3d0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x3d0))(localLong1 + 0x3c0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x3a0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x3a8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x3a8) = 0;
  *(uint32 *)(localLong1 + 0x3b8) = 0;
  *(uint64 *)(localLong1 + 0x3a0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x380) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x388) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x388) = 0;
  *(uint32 *)(localLong1 + 0x398) = 0;
  *(uint64 *)(localLong1 + 0x380) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x360) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x368) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x368) = 0;
  *(uint32 *)(localLong1 + 0x378) = 0;
  *(uint64 *)(localLong1 + 0x360) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x340) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x348) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x348) = 0;
  *(uint32 *)(localLong1 + 0x358) = 0;
  *(uint64 *)(localLong1 + 0x340) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 800) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x328) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x328) = 0;
  *(uint32 *)(localLong1 + 0x338) = 0;
  *(uint64 *)(localLong1 + 800) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904250(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x490) != (code *)0x0) {
    (**(code **)(localLong1 + 0x490))(localLong1 + 0x480,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x460) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x468) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x468) = 0;
  *(uint32 *)(localLong1 + 0x478) = 0;
  *(uint64 *)(localLong1 + 0x460) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x440) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x448) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x448) = 0;
  *(uint32 *)(localLong1 + 0x458) = 0;
  *(uint64 *)(localLong1 + 0x440) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x420) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x428) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x428) = 0;
  *(uint32 *)(localLong1 + 0x438) = 0;
  *(uint64 *)(localLong1 + 0x420) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x400) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x408) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x408) = 0;
  *(uint32 *)(localLong1 + 0x418) = 0;
  *(uint64 *)(localLong1 + 0x400) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x3e0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 1000) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 1000) = 0;
  *(uint32 *)(localLong1 + 0x3f8) = 0;
  *(uint64 *)(localLong1 + 0x3e0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904270(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x550) != (code *)0x0) {
    (**(code **)(localLong1 + 0x550))(localLong1 + 0x540,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x520) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x528) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x528) = 0;
  *(uint32 *)(localLong1 + 0x538) = 0;
  *(uint64 *)(localLong1 + 0x520) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x500) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x508) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x508) = 0;
  *(uint32 *)(localLong1 + 0x518) = 0;
  *(uint64 *)(localLong1 + 0x500) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x4e0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x4e8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x4e8) = 0;
  *(uint32 *)(localLong1 + 0x4f8) = 0;
  *(uint64 *)(localLong1 + 0x4e0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x4c0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x4c8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x4c8) = 0;
  *(uint32 *)(localLong1 + 0x4d8) = 0;
  *(uint64 *)(localLong1 + 0x4c0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x4a0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x4a8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x4a8) = 0;
  *(uint32 *)(localLong1 + 0x4b8) = 0;
  *(uint64 *)(localLong1 + 0x4a0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904290(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x610) != (code *)0x0) {
    (**(code **)(localLong1 + 0x610))(localLong1 + 0x600,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x5e0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x5e8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x5e8) = 0;
  *(uint32 *)(localLong1 + 0x5f8) = 0;
  *(uint64 *)(localLong1 + 0x5e0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x5c0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x5c8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x5c8) = 0;
  *(uint32 *)(localLong1 + 0x5d8) = 0;
  *(uint64 *)(localLong1 + 0x5c0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x5a0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x5a8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x5a8) = 0;
  *(uint32 *)(localLong1 + 0x5b8) = 0;
  *(uint64 *)(localLong1 + 0x5a0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x580) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x588) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x588) = 0;
  *(uint32 *)(localLong1 + 0x598) = 0;
  *(uint64 *)(localLong1 + 0x580) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x560) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x568) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x568) = 0;
  *(uint32 *)(localLong1 + 0x578) = 0;
  *(uint64 *)(localLong1 + 0x560) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809042b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x6d0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x6d0))(localLong1 + 0x6c0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x6a0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x6a8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x6a8) = 0;
  *(uint32 *)(localLong1 + 0x6b8) = 0;
  *(uint64 *)(localLong1 + 0x6a0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x680) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x688) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x688) = 0;
  *(uint32 *)(localLong1 + 0x698) = 0;
  *(uint64 *)(localLong1 + 0x680) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x660) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x668) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x668) = 0;
  *(uint32 *)(localLong1 + 0x678) = 0;
  *(uint64 *)(localLong1 + 0x660) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x640) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x648) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x648) = 0;
  *(uint32 *)(localLong1 + 0x658) = 0;
  *(uint64 *)(localLong1 + 0x640) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x620) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x628) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x628) = 0;
  *(uint32 *)(localLong1 + 0x638) = 0;
  *(uint64 *)(localLong1 + 0x620) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809042d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x790) != (code *)0x0) {
    (**(code **)(localLong1 + 0x790))(localLong1 + 0x780,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x760) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x768) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x768) = 0;
  *(uint32 *)(localLong1 + 0x778) = 0;
  *(uint64 *)(localLong1 + 0x760) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x740) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x748) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x748) = 0;
  *(uint32 *)(localLong1 + 0x758) = 0;
  *(uint64 *)(localLong1 + 0x740) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x720) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x728) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x728) = 0;
  *(uint32 *)(localLong1 + 0x738) = 0;
  *(uint64 *)(localLong1 + 0x720) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x700) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x708) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x708) = 0;
  *(uint32 *)(localLong1 + 0x718) = 0;
  *(uint64 *)(localLong1 + 0x700) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x6e0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x6e8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x6e8) = 0;
  *(uint32 *)(localLong1 + 0x6f8) = 0;
  *(uint64 *)(localLong1 + 0x6e0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809042f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x850) != (code *)0x0) {
    (**(code **)(localLong1 + 0x850))(localLong1 + 0x840,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x820) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x828) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x828) = 0;
  *(uint32 *)(localLong1 + 0x838) = 0;
  *(uint64 *)(localLong1 + 0x820) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x800) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x808) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x808) = 0;
  *(uint32 *)(localLong1 + 0x818) = 0;
  *(uint64 *)(localLong1 + 0x800) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x7e0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x7e8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x7e8) = 0;
  *(uint32 *)(localLong1 + 0x7f8) = 0;
  *(uint64 *)(localLong1 + 0x7e0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x7c0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x7c8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x7c8) = 0;
  *(uint32 *)(localLong1 + 0x7d8) = 0;
  *(uint64 *)(localLong1 + 0x7c0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x7a0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x7a8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x7a8) = 0;
  *(uint32 *)(localLong1 + 0x7b8) = 0;
  *(uint64 *)(localLong1 + 0x7a0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904310(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x910) != (code *)0x0) {
    (**(code **)(localLong1 + 0x910))(localLong1 + 0x900,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x8e0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x8e8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x8e8) = 0;
  *(uint32 *)(localLong1 + 0x8f8) = 0;
  *(uint64 *)(localLong1 + 0x8e0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x8c0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x8c8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x8c8) = 0;
  *(uint32 *)(localLong1 + 0x8d8) = 0;
  *(uint64 *)(localLong1 + 0x8c0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x8a0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x8a8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x8a8) = 0;
  *(uint32 *)(localLong1 + 0x8b8) = 0;
  *(uint64 *)(localLong1 + 0x8a0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x880) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x888) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x888) = 0;
  *(uint32 *)(localLong1 + 0x898) = 0;
  *(uint64 *)(localLong1 + 0x880) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x860) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x868) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x868) = 0;
  *(uint32 *)(localLong1 + 0x878) = 0;
  *(uint64 *)(localLong1 + 0x860) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904330(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x9d0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x9d0))(localLong1 + 0x9c0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x9a0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x9a8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x9a8) = 0;
  *(uint32 *)(localLong1 + 0x9b8) = 0;
  *(uint64 *)(localLong1 + 0x9a0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x980) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x988) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x988) = 0;
  *(uint32 *)(localLong1 + 0x998) = 0;
  *(uint64 *)(localLong1 + 0x980) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x960) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x968) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x968) = 0;
  *(uint32 *)(localLong1 + 0x978) = 0;
  *(uint64 *)(localLong1 + 0x960) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x940) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x948) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x948) = 0;
  *(uint32 *)(localLong1 + 0x958) = 0;
  *(uint64 *)(localLong1 + 0x940) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x920) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x928) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x928) = 0;
  *(uint32 *)(localLong1 + 0x938) = 0;
  *(uint64 *)(localLong1 + 0x920) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904350(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xa90) != (code *)0x0) {
    (**(code **)(localLong1 + 0xa90))(localLong1 + 0xa80,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xa60) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xa68) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xa68) = 0;
  *(uint32 *)(localLong1 + 0xa78) = 0;
  *(uint64 *)(localLong1 + 0xa60) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xa40) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xa48) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xa48) = 0;
  *(uint32 *)(localLong1 + 0xa58) = 0;
  *(uint64 *)(localLong1 + 0xa40) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xa20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xa28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xa28) = 0;
  *(uint32 *)(localLong1 + 0xa38) = 0;
  *(uint64 *)(localLong1 + 0xa20) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xa00) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xa08) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xa08) = 0;
  *(uint32 *)(localLong1 + 0xa18) = 0;
  *(uint64 *)(localLong1 + 0xa00) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x9e0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x9e8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x9e8) = 0;
  *(uint32 *)(localLong1 + 0x9f8) = 0;
  *(uint64 *)(localLong1 + 0x9e0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904370(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xb50) != (code *)0x0) {
    (**(code **)(localLong1 + 0xb50))(localLong1 + 0xb40,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xb20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xb28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xb28) = 0;
  *(uint32 *)(localLong1 + 0xb38) = 0;
  *(uint64 *)(localLong1 + 0xb20) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xb00) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xb08) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xb08) = 0;
  *(uint32 *)(localLong1 + 0xb18) = 0;
  *(uint64 *)(localLong1 + 0xb00) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xae0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xae8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xae8) = 0;
  *(uint32 *)(localLong1 + 0xaf8) = 0;
  *(uint64 *)(localLong1 + 0xae0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xac0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xac8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xac8) = 0;
  *(uint32 *)(localLong1 + 0xad8) = 0;
  *(uint64 *)(localLong1 + 0xac0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xaa0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xaa8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xaa8) = 0;
  *(uint32 *)(localLong1 + 0xab8) = 0;
  *(uint64 *)(localLong1 + 0xaa0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904390(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xc10) != (code *)0x0) {
    (**(code **)(localLong1 + 0xc10))(localLong1 + 0xc00,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xbe0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xbe8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xbe8) = 0;
  *(uint32 *)(localLong1 + 0xbf8) = 0;
  *(uint64 *)(localLong1 + 0xbe0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xbc0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xbc8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xbc8) = 0;
  *(uint32 *)(localLong1 + 0xbd8) = 0;
  *(uint64 *)(localLong1 + 0xbc0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xba0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xba8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xba8) = 0;
  *(uint32 *)(localLong1 + 3000) = 0;
  *(uint64 *)(localLong1 + 0xba0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xb80) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xb88) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xb88) = 0;
  *(uint32 *)(localLong1 + 0xb98) = 0;
  *(uint64 *)(localLong1 + 0xb80) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xb60) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xb68) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xb68) = 0;
  *(uint32 *)(localLong1 + 0xb78) = 0;
  *(uint64 *)(localLong1 + 0xb60) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809043b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xcd0) != (code *)0x0) {
    (**(code **)(localLong1 + 0xcd0))(localLong1 + 0xcc0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xca0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xca8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xca8) = 0;
  *(uint32 *)(localLong1 + 0xcb8) = 0;
  *(uint64 *)(localLong1 + 0xca0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xc80) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xc88) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xc88) = 0;
  *(uint32 *)(localLong1 + 0xc98) = 0;
  *(uint64 *)(localLong1 + 0xc80) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xc60) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xc68) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xc68) = 0;
  *(uint32 *)(localLong1 + 0xc78) = 0;
  *(uint64 *)(localLong1 + 0xc60) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xc40) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xc48) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xc48) = 0;
  *(uint32 *)(localLong1 + 0xc58) = 0;
  *(uint64 *)(localLong1 + 0xc40) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xc20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xc28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xc28) = 0;
  *(uint32 *)(localLong1 + 0xc38) = 0;
  *(uint64 *)(localLong1 + 0xc20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809043d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xd40) != (code *)0x0) {
    (**(code **)(localLong1 + 0xd40))(localLong1 + 0xd30,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xd08) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xd10) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xd10) = 0;
  *(uint32 *)(localLong1 + 0xd20) = 0;
  *(uint64 *)(localLong1 + 0xd08) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xce8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xcf0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xcf0) = 0;
  *(uint32 *)(localLong1 + 0xd00) = 0;
  *(uint64 *)(localLong1 + 0xce8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809043f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xdb0) != (code *)0x0) {
    (**(code **)(localLong1 + 0xdb0))(localLong1 + 0xda0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xd78) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xd80) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xd80) = 0;
  *(uint32 *)(localLong1 + 0xd90) = 0;
  *(uint64 *)(localLong1 + 0xd78) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xd58) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xd60) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xd60) = 0;
  *(uint32 *)(localLong1 + 0xd70) = 0;
  *(uint64 *)(localLong1 + 0xd58) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904410(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xe20) != (code *)0x0) {
    (**(code **)(localLong1 + 0xe20))(localLong1 + 0xe10,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xde8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xdf0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xdf0) = 0;
  *(uint32 *)(localLong1 + 0xe00) = 0;
  *(uint64 *)(localLong1 + 0xde8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xdc8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xdd0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xdd0) = 0;
  *(uint32 *)(localLong1 + 0xde0) = 0;
  *(uint64 *)(localLong1 + 0xdc8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904430(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xee0) != (code *)0x0) {
    (**(code **)(localLong1 + 0xee0))(localLong1 + 0xed0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xeb0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xeb8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xeb8) = 0;
  *(uint32 *)(localLong1 + 0xec8) = 0;
  *(uint64 *)(localLong1 + 0xeb0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xe90) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xe98) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xe98) = 0;
  *(uint32 *)(localLong1 + 0xea8) = 0;
  *(uint64 *)(localLong1 + 0xe90) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xe70) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xe78) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xe78) = 0;
  *(uint32 *)(localLong1 + 0xe88) = 0;
  *(uint64 *)(localLong1 + 0xe70) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xe50) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xe58) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xe58) = 0;
  *(uint32 *)(localLong1 + 0xe68) = 0;
  *(uint64 *)(localLong1 + 0xe50) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xe30) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xe38) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xe38) = 0;
  *(uint32 *)(localLong1 + 0xe48) = 0;
  *(uint64 *)(localLong1 + 0xe30) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904450(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 4000) != (code *)0x0) {
    (**(code **)(localLong1 + 4000))(localLong1 + 0xf90,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xf70) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xf78) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xf78) = 0;
  *(uint32 *)(localLong1 + 0xf88) = 0;
  *(uint64 *)(localLong1 + 0xf70) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xf50) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xf58) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xf58) = 0;
  *(uint32 *)(localLong1 + 0xf68) = 0;
  *(uint64 *)(localLong1 + 0xf50) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xf30) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xf38) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xf38) = 0;
  *(uint32 *)(localLong1 + 0xf48) = 0;
  *(uint64 *)(localLong1 + 0xf30) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xf10) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xf18) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xf18) = 0;
  *(uint32 *)(localLong1 + 0xf28) = 0;
  *(uint64 *)(localLong1 + 0xf10) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xef0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xef8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xef8) = 0;
  *(uint32 *)(localLong1 + 0xf08) = 0;
  *(uint64 *)(localLong1 + 0xef0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904470(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1060) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1060))(localLong1 + 0x1050,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1030) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1038) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1038) = 0;
  *(uint32 *)(localLong1 + 0x1048) = 0;
  *(uint64 *)(localLong1 + 0x1030) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1010) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1018) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1018) = 0;
  *(uint32 *)(localLong1 + 0x1028) = 0;
  *(uint64 *)(localLong1 + 0x1010) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xff0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xff8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xff8) = 0;
  *(uint32 *)(localLong1 + 0x1008) = 0;
  *(uint64 *)(localLong1 + 0xff0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xfd0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xfd8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xfd8) = 0;
  *(uint32 *)(localLong1 + 0xfe8) = 0;
  *(uint64 *)(localLong1 + 0xfd0) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xfb0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xfb8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xfb8) = 0;
  *(uint32 *)(localLong1 + 0xfc8) = 0;
  *(uint64 *)(localLong1 + 0xfb0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904490(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x10d0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x10d0))(localLong1 + 0x10c0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1098) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x10a0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x10a0) = 0;
  *(uint32 *)(localLong1 + 0x10b0) = 0;
  *(uint64 *)(localLong1 + 0x1098) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1078) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1080) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1080) = 0;
  *(uint32 *)(localLong1 + 0x1090) = 0;
  *(uint64 *)(localLong1 + 0x1078) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809044b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1140) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1140))(localLong1 + 0x1130,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1108) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1110) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1110) = 0;
  *(uint32 *)(localLong1 + 0x1120) = 0;
  *(uint64 *)(localLong1 + 0x1108) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x10e8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x10f0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x10f0) = 0;
  *(uint32 *)(localLong1 + 0x1100) = 0;
  *(uint64 *)(localLong1 + 0x10e8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809044d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x11b0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x11b0))(localLong1 + 0x11a0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1178) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1180) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1180) = 0;
  *(uint32 *)(localLong1 + 0x1190) = 0;
  *(uint64 *)(localLong1 + 0x1178) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1158) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1160) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1160) = 0;
  *(uint32 *)(localLong1 + 0x1170) = 0;
  *(uint64 *)(localLong1 + 0x1158) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809044f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1220) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1220))(localLong1 + 0x1210,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x11e8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x11f0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x11f0) = 0;
  *(uint32 *)(localLong1 + 0x1200) = 0;
  *(uint64 *)(localLong1 + 0x11e8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x11c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x11d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x11d0) = 0;
  *(uint32 *)(localLong1 + 0x11e0) = 0;
  *(uint64 *)(localLong1 + 0x11c8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904510(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1290) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1290))(localLong1 + 0x1280,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1258) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1260) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1260) = 0;
  *(uint32 *)(localLong1 + 0x1270) = 0;
  *(uint64 *)(localLong1 + 0x1258) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1238) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1240) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1240) = 0;
  *(uint32 *)(localLong1 + 0x1250) = 0;
  *(uint64 *)(localLong1 + 0x1238) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904530(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1300) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1300))(localLong1 + 0x12f0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x12c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x12d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x12d0) = 0;
  *(uint32 *)(localLong1 + 0x12e0) = 0;
  *(uint64 *)(localLong1 + 0x12c8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x12a8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x12b0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x12b0) = 0;
  *(uint32 *)(localLong1 + 0x12c0) = 0;
  *(uint64 *)(localLong1 + 0x12a8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904550(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1370) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1370))(localLong1 + 0x1360,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1338) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1340) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1340) = 0;
  *(uint32 *)(localLong1 + 0x1350) = 0;
  *(uint64 *)(localLong1 + 0x1338) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1318) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1320) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1320) = 0;
  *(uint32 *)(localLong1 + 0x1330) = 0;
  *(uint64 *)(localLong1 + 0x1318) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904570(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x80) + 0x1380);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x80) + 5000);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180904590(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x80) + 0x13a0);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x80) + 0x13a8);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809045b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = *(longlong **)(memorySize + 0x88);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = (uint64 *)plocalLong2[1];
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809045c0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x50),0x20,0x400,FUN_180046860);
  return;
}



void Unwind_1809045f0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x50) + 0x8000,0x20,0x400,FUN_180046860);
  return;
}



void Unwind_180904630(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x50) + 0x10400);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180904650(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x40) + 0x30);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x40) + 0x20,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180904660(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x50) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x50),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180904670(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x58) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x58),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180904680(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x50);
  *plocalUInt1 = &bufferControlData2;
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_180904690(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x50) + 0x30);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x50) + 0x20,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809046a0(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x50);
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_1809046b0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x50) = &threadSyncObject;
  return;
}



void Unwind_1809046c0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  *(uint64 *)(localLong1 + 0x18) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x20) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x20) = 0;
  *(uint32 *)(localLong1 + 0x30) = 0;
  *(uint64 *)(localLong1 + 0x18) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809046d0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x60);
  *(uint64 *)(localLong1 + 0x18) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x20) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x20) = 0;
  *(uint32 *)(localLong1 + 0x30) = 0;
  *(uint64 *)(localLong1 + 0x18) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809046e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x40) + 0xd0);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x40) + 0xc0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180904700(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x68) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x68),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180904710(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x60) + 0xd0);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x60) + 0xc0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180904730(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x70) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x70),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180904740(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x68) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x68),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180904750(uint64 resourceHandle,longlong memorySize)

{
  _Mtx_destroy_in_situ();
  _Cnd_destroy_in_situ(memorySize + 0x70);
  return;
}



void Unwind_180904760(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x20) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x20),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180904770(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x60) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x60) + 0x38))();
  }
  return;
}



void Unwind_180904780(void)

{
  _Cnd_destroy_in_situ();
  return;
}



void Unwind_180904790(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_1809047a0(uint64 resourceHandle,longlong memorySize)

{
  _Cnd_destroy_in_situ(*(uint64 *)(memorySize + 0x20));
  return;
}



void Unwind_1809047b0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_1809047c0(uint64 resourceHandle,longlong memorySize)

{
  _Mtx_destroy_in_situ(*(uint64 *)(memorySize + 0x20));
  return;
}



void Unwind_1809047d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x20) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x20),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809047e0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_1809047f0(uint64 resourceHandle,longlong memorySize)

{
  _Mtx_destroy_in_situ(*(uint64 *)(memorySize + 0x28));
  return;
}



void Unwind_180904800(uint64 resourceHandle,longlong memorySize)

{
  _Cnd_destroy_in_situ(*(uint64 *)(memorySize + 0x28));
  return;
}



void Unwind_180904810(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x60);
  *(uint64 *)(localLong1 + 0x40) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x48) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x48) = 0;
  *(uint32 *)(localLong1 + 0x58) = 0;
  *(uint64 *)(localLong1 + 0x40) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904820(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x60);
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904830(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x60) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904840(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_1800596a0(memorySize + 0x30);
  }
  return;
}



void Unwind_180904870(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x50) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x58) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x58) = 0;
  *(uint32 *)(memorySize + 0x68) = 0;
  *(uint64 *)(memorySize + 0x50) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904880(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x40) + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904890(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x50) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809048a0(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x20);
  *plocalUInt1 = &bufferControlData2;
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_1809048b0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x20) + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809048c0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809048d0(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = _Mtx_unlock(*(uint64 *)(memorySize + 0x58));
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



void Unwind_1809048e0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x48);
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809048f0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x68);
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904900(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_18005d260(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180904910(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_18005d260(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180904920(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x28);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180904930(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x48);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180904940(uint64 resourceHandle,longlong memorySize)

{
  CloseHandle(*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x68));
  return;
}



void Unwind_180904950(uint64 resourceHandle,longlong memorySize)

{
  CloseHandle(*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x70));
  return;
}



void Unwind_180904960(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  char *pcVar2;
  uint64 *puVar3;
  longlong lVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  lVar5 = *(longlong *)(memorySize + 0x40);
  puVar3 = *(uint64 **)(lVar5 + 0x78);
  if (puVar3 != (uint64 *)0x0) {
    if ((uint64 *)puVar3[3] != (uint64 *)0x0) {
      *(uint64 *)puVar3[3] = 0;
    }
    (**(code **)*puVar3)(puVar3,0);
                    // WARNING: Subroutine does not return
    HandleCriticalError(puVar3);
  }
  if ((*(longlong *)(lVar5 + 0xa8) != 0) && (*(longlong *)(*(longlong *)(lVar5 + 0xa8) + 0x10) != 0)
     ) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  lVar4 = *(longlong *)(lVar5 + 0xa0);
  while (lVar4 != 0) {
    pcVar2 = (char *)(lVar4 + 0x141);
    lVar4 = *(longlong *)(lVar4 + 0x138);
    if (*pcVar2 != '\0') {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  puVar3 = *(uint64 **)(lVar5 + 0x90);
  if (puVar3 == (uint64 *)0x0) {
    return;
  }
  uVar6 = (ulonglong)puVar3 & 0xffffffffffc00000;
  if (uVar6 != 0) {
    lVar5 = uVar6 + 0x80 + ((longlong)puVar3 - uVar6 >> 0x10) * 0x50;
    lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
    if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
      *puVar3 = *(uint64 *)(lVar5 + 0x20);
      *(uint64 **)(lVar5 + 0x20) = puVar3;
      plocalInt1 = (int *)(lVar5 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                          puVar3,uVar6,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180904970(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  char *pcVar2;
  uint64 *puVar3;
  longlong lVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  lVar5 = *(longlong *)(memorySize + 0x40);
  puVar3 = *(uint64 **)(lVar5 + 0x2e0);
  if (puVar3 != (uint64 *)0x0) {
    if ((uint64 *)puVar3[3] != (uint64 *)0x0) {
      *(uint64 *)puVar3[3] = 0;
    }
    (**(code **)*puVar3)(puVar3,0);
                    // WARNING: Subroutine does not return
    HandleCriticalError(puVar3);
  }
  if ((*(longlong *)(lVar5 + 0x310) != 0) &&
     (*(longlong *)(*(longlong *)(lVar5 + 0x310) + 0x10) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  lVar4 = *(longlong *)(lVar5 + 0x308);
  while (lVar4 != 0) {
    pcVar2 = (char *)(lVar4 + 0x141);
    lVar4 = *(longlong *)(lVar4 + 0x138);
    if (*pcVar2 != '\0') {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  puVar3 = *(uint64 **)(lVar5 + 0x2f8);
  if (puVar3 == (uint64 *)0x0) {
    return;
  }
  uVar6 = (ulonglong)puVar3 & 0xffffffffffc00000;
  if (uVar6 != 0) {
    lVar5 = uVar6 + 0x80 + ((longlong)puVar3 - uVar6 >> 0x10) * 0x50;
    lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
    if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
      *puVar3 = *(uint64 *)(lVar5 + 0x20);
      *(uint64 **)(lVar5 + 0x20) = puVar3;
      plocalInt1 = (int *)(lVar5 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                          puVar3,uVar6,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180904990(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  char *pcVar2;
  uint64 *puVar3;
  longlong lVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  lVar5 = *(longlong *)(memorySize + 0x40);
  puVar3 = *(uint64 **)(lVar5 + 0x548);
  if (puVar3 != (uint64 *)0x0) {
    if ((uint64 *)puVar3[3] != (uint64 *)0x0) {
      *(uint64 *)puVar3[3] = 0;
    }
    (**(code **)*puVar3)(puVar3,0);
                    // WARNING: Subroutine does not return
    HandleCriticalError(puVar3);
  }
  if ((*(longlong *)(lVar5 + 0x578) != 0) &&
     (*(longlong *)(*(longlong *)(lVar5 + 0x578) + 0x10) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  lVar4 = *(longlong *)(lVar5 + 0x570);
  while (lVar4 != 0) {
    pcVar2 = (char *)(lVar4 + 0x141);
    lVar4 = *(longlong *)(lVar4 + 0x138);
    if (*pcVar2 != '\0') {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  puVar3 = *(uint64 **)(lVar5 + 0x560);
  if (puVar3 == (uint64 *)0x0) {
    return;
  }
  uVar6 = (ulonglong)puVar3 & 0xffffffffffc00000;
  if (uVar6 != 0) {
    lVar5 = uVar6 + 0x80 + ((longlong)puVar3 - uVar6 >> 0x10) * 0x50;
    lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
    if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
      *puVar3 = *(uint64 *)(lVar5 + 0x20);
      *(uint64 **)(lVar5 + 0x20) = puVar3;
      plocalInt1 = (int *)(lVar5 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                          puVar3,uVar6,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809049b0(uint64 resourceHandle,longlong memorySize)

{
  CloseHandle(**(uint64 **)(memorySize + 0x48));
  return;
}



void Unwind_1809049c0(uint64 resourceHandle,longlong memorySize)

{
  CloseHandle(**(uint64 **)(memorySize + 0x40));
  return;
}



void Unwind_1809049d0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x70) + 8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809049e0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x70) + 0x28);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809049f0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x70) + 0x48);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180904a00(uint64 resourceHandle,longlong memorySize)

{
  CloseHandle(*(uint64 *)(*(longlong *)(memorySize + 0x70) + 0x68));
  return;
}



void Unwind_180904a10(uint64 resourceHandle,longlong memorySize)

{
  CloseHandle(*(uint64 *)(*(longlong *)(memorySize + 0x70) + 0x70));
  return;
}



void Unwind_180904a20(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  char *pcVar2;
  uint64 *puVar3;
  longlong lVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  lVar5 = *(longlong *)(memorySize + 0x70);
  puVar3 = *(uint64 **)(lVar5 + 0x78);
  if (puVar3 != (uint64 *)0x0) {
    if ((uint64 *)puVar3[3] != (uint64 *)0x0) {
      *(uint64 *)puVar3[3] = 0;
    }
    (**(code **)*puVar3)(puVar3,0);
                    // WARNING: Subroutine does not return
    HandleCriticalError(puVar3);
  }
  if ((*(longlong *)(lVar5 + 0xa8) != 0) && (*(longlong *)(*(longlong *)(lVar5 + 0xa8) + 0x10) != 0)
     ) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  lVar4 = *(longlong *)(lVar5 + 0xa0);
  while (lVar4 != 0) {
    pcVar2 = (char *)(lVar4 + 0x141);
    lVar4 = *(longlong *)(lVar4 + 0x138);
    if (*pcVar2 != '\0') {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  puVar3 = *(uint64 **)(lVar5 + 0x90);
  if (puVar3 == (uint64 *)0x0) {
    return;
  }
  uVar6 = (ulonglong)puVar3 & 0xffffffffffc00000;
  if (uVar6 != 0) {
    lVar5 = uVar6 + 0x80 + ((longlong)puVar3 - uVar6 >> 0x10) * 0x50;
    lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
    if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
      *puVar3 = *(uint64 *)(lVar5 + 0x20);
      *(uint64 **)(lVar5 + 0x20) = puVar3;
      plocalInt1 = (int *)(lVar5 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                          puVar3,uVar6,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180904a30(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  char *pcVar2;
  uint64 *puVar3;
  longlong lVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  lVar5 = *(longlong *)(memorySize + 0x70);
  puVar3 = *(uint64 **)(lVar5 + 0x2e0);
  if (puVar3 != (uint64 *)0x0) {
    if ((uint64 *)puVar3[3] != (uint64 *)0x0) {
      *(uint64 *)puVar3[3] = 0;
    }
    (**(code **)*puVar3)(puVar3,0);
                    // WARNING: Subroutine does not return
    HandleCriticalError(puVar3);
  }
  if ((*(longlong *)(lVar5 + 0x310) != 0) &&
     (*(longlong *)(*(longlong *)(lVar5 + 0x310) + 0x10) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  lVar4 = *(longlong *)(lVar5 + 0x308);
  while (lVar4 != 0) {
    pcVar2 = (char *)(lVar4 + 0x141);
    lVar4 = *(longlong *)(lVar4 + 0x138);
    if (*pcVar2 != '\0') {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  puVar3 = *(uint64 **)(lVar5 + 0x2f8);
  if (puVar3 == (uint64 *)0x0) {
    return;
  }
  uVar6 = (ulonglong)puVar3 & 0xffffffffffc00000;
  if (uVar6 != 0) {
    lVar5 = uVar6 + 0x80 + ((longlong)puVar3 - uVar6 >> 0x10) * 0x50;
    lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
    if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
      *puVar3 = *(uint64 *)(lVar5 + 0x20);
      *(uint64 **)(lVar5 + 0x20) = puVar3;
      plocalInt1 = (int *)(lVar5 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                          puVar3,uVar6,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180904a50(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  char *pcVar2;
  uint64 *puVar3;
  longlong lVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  lVar5 = *(longlong *)(memorySize + 0x70);
  puVar3 = *(uint64 **)(lVar5 + 0x548);
  if (puVar3 != (uint64 *)0x0) {
    if ((uint64 *)puVar3[3] != (uint64 *)0x0) {
      *(uint64 *)puVar3[3] = 0;
    }
    (**(code **)*puVar3)(puVar3,0);
                    // WARNING: Subroutine does not return
    HandleCriticalError(puVar3);
  }
  if ((*(longlong *)(lVar5 + 0x578) != 0) &&
     (*(longlong *)(*(longlong *)(lVar5 + 0x578) + 0x10) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  lVar4 = *(longlong *)(lVar5 + 0x570);
  while (lVar4 != 0) {
    pcVar2 = (char *)(lVar4 + 0x141);
    lVar4 = *(longlong *)(lVar4 + 0x138);
    if (*pcVar2 != '\0') {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  puVar3 = *(uint64 **)(lVar5 + 0x560);
  if (puVar3 == (uint64 *)0x0) {
    return;
  }
  uVar6 = (ulonglong)puVar3 & 0xffffffffffc00000;
  if (uVar6 != 0) {
    lVar5 = uVar6 + 0x80 + ((longlong)puVar3 - uVar6 >> 0x10) * 0x50;
    lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
    if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
      *puVar3 = *(uint64 *)(lVar5 + 0x20);
      *(uint64 **)(lVar5 + 0x20) = puVar3;
      plocalInt1 = (int *)(lVar5 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                          puVar3,uVar6,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180904a70(uint64 resourceHandle,longlong memorySize)

{
  CloseHandle(**(uint64 **)(memorySize + 0x78));
  return;
}



void Unwind_180904a80(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x70);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180904a90(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x70);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180904aa0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0xb0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904ab0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  char cVar2;
  uint64 uVar3;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x160);
  uVar3 = 0xfffffffffffffffe;
  *plocalUInt1 = &unknown_180a10098;
  cVar2 = FUN_18020eba0(plocalUInt1,1,operationFlags,callbackFunction,0xfffffffffffffffe);
  while (cVar2 != '\0') {
    cVar2 = FUN_18020eba0(plocalUInt1,1,operationFlags,callbackFunction,uVar3);
  }
  if (plocalUInt1[1] == 0) {
    plocalUInt1[1] = 0;
    _Mtx_destroy_in_situ();
    _Cnd_destroy_in_situ(plocalUInt1 + 0x2a);
    _Mtx_destroy_in_situ();
    FUN_18020f530();
    if (plocalUInt1[0xe] != 0) {
      *(uint64 *)(plocalUInt1[0xe] + 0x10) = 0;
      *(byte *)(plocalUInt1[0xe] + 8) = 1;
    }
    plocalUInt1[2] = &threadLocalStorageCleanup;
    return;
  }
  if (*(int *)(plocalUInt1[1] + 8) == 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
                    // WARNING: Subroutine does not return
  terminate();
}



void Unwind_180904ac0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0xb0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904ad0(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0x58) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0x58) + 0x38))();
  }
  return;
}



void Unwind_180904ae0(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0x60) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0x60) + 0x38))();
  }
  return;
}



void Unwind_180904af0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  char cVar2;
  uint64 uVar3;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x50);
  uVar3 = 0xfffffffffffffffe;
  *plocalUInt1 = &unknown_180a10098;
  cVar2 = FUN_18020eba0(plocalUInt1,1,operationFlags,callbackFunction,0xfffffffffffffffe);
  while (cVar2 != '\0') {
    cVar2 = FUN_18020eba0(plocalUInt1,1,operationFlags,callbackFunction,uVar3);
  }
  if (plocalUInt1[1] == 0) {
    plocalUInt1[1] = 0;
    _Mtx_destroy_in_situ();
    _Cnd_destroy_in_situ(plocalUInt1 + 0x2a);
    _Mtx_destroy_in_situ();
    FUN_18020f530();
    if (plocalUInt1[0xe] != 0) {
      *(uint64 *)(plocalUInt1[0xe] + 0x10) = 0;
      *(byte *)(plocalUInt1[0xe] + 8) = 1;
    }
    plocalUInt1[2] = &threadLocalStorageCleanup;
    return;
  }
  if (*(int *)(plocalUInt1[1] + 8) == 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
                    // WARNING: Subroutine does not return
  terminate();
}



void Unwind_180904b00(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x40) = &unknown_1809fe210;
  return;
}



void Catch_180904b10(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong localLong2;
  
  localLong1 = *(longlong *)(memorySize + 0x60);
  *(uint64 *)(localLong1 + 0x60) = *(uint64 *)(memorySize + 0x70);
  localLong2 = *(longlong *)(memorySize + 0x78);
  if (localLong2 == 0) {
    localLong2 = *(longlong *)(localLong1 + 0x40);
  }
  *(longlong *)(localLong1 + 0x40) = localLong2;
                    // WARNING: Subroutine does not return
  _CxxThrowException(0,0);
}



void Catch_180904b50(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x50);
  func_0x00018005f320(localLong1);
  func_0x000180060c00(*(longlong *)(memorySize + 0x60) + 8,0);
  func_0x000180060c10(*(uint64 *)(localLong1 + 0x50),*(uint64 *)(memorySize + 0x68));
                    // WARNING: Subroutine does not return
  _CxxThrowException(0,0);
}



void Catch_180904b90(uint64 resourceHandle,longlong memorySize)

{
  ulonglong localUInt1;
  longlong localLong2;
  longlong localLong3;
  longlong lVar4;
  ulonglong uVar5;
  ulonglong uVar6;
  longlong lVar7;
  ulonglong uVar8;
  
  localUInt1 = *(ulonglong *)(memorySize + 0x20);
  localLong2 = *(longlong *)(memorySize + 0xa0);
  localLong3 = *(longlong *)(localLong2 + 0x40);
  *(uint64 *)(localLong2 + 0x70) = *(uint64 *)(memorySize + 0x30);
  *(uint64 *)(localLong2 + 0x60) = *(uint64 *)(memorySize + 0xb8);
  lVar7 = *(longlong *)(memorySize + 0x28);
  lVar4 = lVar7;
  if (lVar7 == 0) {
    lVar4 = *(longlong *)(memorySize + 0xb0);
  }
  *(longlong *)(localLong2 + 0x40) = lVar4;
  uVar5 = *(ulonglong *)(memorySize + 0x40);
  if ((uVar5 & 0x1f) == 0) {
    lVar7 = *(longlong *)(memorySize + 0xb0);
  }
  *(ulonglong *)(memorySize + 0x20) = uVar5;
  while( true ) {
    uVar8 = (uVar5 & 0xffffffffffffffe0) + 0x20;
    if (0x8000000000000000 < localUInt1 - uVar8) {
      uVar8 = localUInt1;
    }
    uVar6 = uVar5;
    if (uVar5 != uVar8) {
      do {
        uVar6 = uVar5 + 1;
        FUN_180060bd0(lVar7 + (ulonglong)((uint)uVar5 & 0x1f) * 8);
        uVar5 = uVar6;
      } while (uVar6 != uVar8);
      *(ulonglong *)(memorySize + 0x20) = uVar6;
    }
    if (lVar7 == localLong3) break;
    lVar7 = *(longlong *)(lVar7 + 0x100);
    uVar5 = uVar6;
  }
                    // WARNING: Subroutine does not return
  _CxxThrowException(0,0);
}



void Catch_180904c60(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong localLong2;
  longlong *plocalLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  longlong lVar6;
  ulonglong uVar7;
  ulonglong uVar8;
  longlong lVar9;
  
  uVar8 = *(ulonglong *)(memorySize + 0x20);
  localLong1 = *(longlong *)(memorySize + 0x90);
  lVar9 = *(longlong *)(localLong1 + 0x40);
  uVar4 = *(ulonglong *)(memorySize + 0x30);
  localLong2 = *(longlong *)(memorySize + 0xa0);
  lVar6 = *(longlong *)(memorySize + 0xa8);
  if ((uVar4 & 0x1f) == 0) {
    lVar6 = localLong2;
  }
  *(ulonglong *)(memorySize + 0x20) = uVar4;
  while( true ) {
    uVar7 = (uVar4 & 0xffffffffffffffe0) + 0x20;
    if (0x8000000000000000 < uVar8 - uVar7) {
      uVar7 = uVar8;
    }
    uVar5 = uVar4;
    if (uVar4 != uVar7) {
      do {
        uVar5 = uVar4 + 1;
        FUN_180060bd0(lVar6 + (ulonglong)((uint)uVar4 & 0x1f) * 8);
        uVar4 = uVar5;
      } while (uVar5 != uVar7);
      *(ulonglong *)(memorySize + 0x20) = uVar5;
    }
    if (lVar6 == lVar9) break;
    lVar6 = *(longlong *)(lVar6 + 0x100);
    uVar4 = uVar5;
  }
  uVar8 = *(longlong *)(memorySize + 0x30) - 1U & 0xffffffffffffffe0;
  *(ulonglong *)(memorySize + 0x20) = uVar8;
  lVar9 = localLong2;
  if (localLong2 != 0) {
    while( true ) {
      *(ulonglong *)(memorySize + 0x20) = uVar8 + 0x20;
      plocalLong3 = *(longlong **)(localLong1 + 0x60);
      *(uint64 *)
       (*(longlong *)
         (plocalLong3[3] +
         (((uVar8 + 0x20 & 0xffffffffffffffe0) - **(longlong **)(plocalLong3[3] + plocalLong3[1] * 8) >> 5) +
          plocalLong3[1] & *plocalLong3 - 1U) * 8) + 8) = 0;
      plocalLong3 = *(longlong **)(localLong1 + 0x60);
      plocalLong3[1] = plocalLong3[1] - 1U & *plocalLong3 - 1U;
      lVar9 = *(longlong *)(lVar9 + 0x100);
      if (lVar9 == 0) break;
      uVar8 = *(ulonglong *)(memorySize + 0x20);
    }
  }
  func_0x000180060150(*(uint64 *)(localLong1 + 0x50),localLong2);
  *(uint64 *)(localLong1 + 0x40) = *(uint64 *)(memorySize + 0xa8);
                    // WARNING: Subroutine does not return
  _CxxThrowException(0,0);
}



void Unwind_180904db0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x50) = &unknown_1809fe210;
  return;
}



void Unwind_180904dc0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x50) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x50) + 0x38))();
  }
  return;
}



void Unwind_180904dd0(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x40);
  *plocalUInt1 = &unknown_180a3cf50;
  if (*(char *)((longlong)plocalUInt1 + 0xb1) != '\0') {
    FUN_180639250();
  }
  _Mtx_destroy_in_situ();
  *plocalUInt1 = &unknown_180a30778;
  plocalUInt1[7] = &threadLocalStorageData;
  if (plocalUInt1[8] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[8] = 0;
  *(uint32 *)(plocalUInt1 + 10) = 0;
  plocalUInt1[7] = &threadLocalStorageCleanup;
  plocalUInt1[1] = &threadLocalStorageData;
  if (plocalUInt1[2] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[2] = 0;
  *(uint32 *)(plocalUInt1 + 4) = 0;
  plocalUInt1[1] = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904de0(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x40);
  _Mtx_destroy_in_situ();
  *plocalUInt1 = &unknown_180a30778;
  plocalUInt1[7] = &threadLocalStorageData;
  if (plocalUInt1[8] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[8] = 0;
  *(uint32 *)(plocalUInt1 + 10) = 0;
  plocalUInt1[7] = &threadLocalStorageCleanup;
  plocalUInt1[1] = &threadLocalStorageData;
  if (plocalUInt1[2] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[2] = 0;
  *(uint32 *)(plocalUInt1 + 4) = 0;
  plocalUInt1[1] = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904df0(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x40);
  *plocalUInt1 = &unknown_180a30778;
  plocalUInt1[7] = &threadLocalStorageData;
  if (plocalUInt1[8] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[8] = 0;
  *(uint32 *)(plocalUInt1 + 10) = 0;
  plocalUInt1[7] = &threadLocalStorageCleanup;
  plocalUInt1[1] = &threadLocalStorageData;
  if (plocalUInt1[2] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[2] = 0;
  *(uint32 *)(plocalUInt1 + 4) = 0;
  plocalUInt1[1] = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904e00(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180904e10(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0xc0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904e20(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0xe8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904e30(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0xa8) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0xa8) + 0x38))();
  }
  return;
}



void Unwind_180904e40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  char cVar2;
  uint64 uVar3;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x30);
  uVar3 = 0xfffffffffffffffe;
  *plocalUInt1 = &unknown_180a10098;
  cVar2 = FUN_18020eba0(plocalUInt1,1,operationFlags,callbackFunction,0xfffffffffffffffe);
  while (cVar2 != '\0') {
    cVar2 = FUN_18020eba0(plocalUInt1,1,operationFlags,callbackFunction,uVar3);
  }
  if (plocalUInt1[1] == 0) {
    plocalUInt1[1] = 0;
    _Mtx_destroy_in_situ();
    _Cnd_destroy_in_situ(plocalUInt1 + 0x2a);
    _Mtx_destroy_in_situ();
    FUN_18020f530();
    if (plocalUInt1[0xe] != 0) {
      *(uint64 *)(plocalUInt1[0xe] + 0x10) = 0;
      *(byte *)(plocalUInt1[0xe] + 8) = 1;
    }
    plocalUInt1[2] = &threadLocalStorageCleanup;
    return;
  }
  if (*(int *)(plocalUInt1[1] + 8) == 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
                    // WARNING: Subroutine does not return
  terminate();
}



void Unwind_180904e50(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 200);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0xc0); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0xc0) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180904e60(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 200);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0xc0); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0xc0) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180904e70(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xc0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180904e80(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x40) & 1) != 0) {
    *(uint *)(memorySize + 0x40) = *(uint *)(memorySize + 0x40) & 0xfffffffe;
    FUN_180044a30(memorySize + 0x70);
  }
  return;
}



void Unwind_180904eb0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    FUN_180627b90(memorySize + 0x38);
  }
  return;
}



void Unwind_180904ee0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 2) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffd;
    FUN_180627b90(memorySize + 0x98);
  }
  return;
}



void Unwind_180904f10(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x98);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x90); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x90) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180904f20(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x98);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x90); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x90) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180904f30(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x90);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180904f40(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x68) & 1) != 0) {
    *(uint *)(memorySize + 0x68) = *(uint *)(memorySize + 0x68) & 0xfffffffe;
    FUN_180627b90(memorySize + 0x70);
  }
  return;
}



void Unwind_180904f70(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  *(uint64 *)(localLong1 + 0x30) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x38) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x38) = 0;
  *(uint32 *)(localLong1 + 0x48) = 0;
  *(uint64 *)(localLong1 + 0x30) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904f80(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0xa8);
  *plocalUInt1 = &threadLocalStorageData;
  if (plocalUInt1[1] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[1] = 0;
  *(uint32 *)(plocalUInt1 + 3) = 0;
  *plocalUInt1 = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904f90(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x28);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x20); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x20) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180904fa0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x28);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x20); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x20) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180904fb0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x20);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180904fc0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0xb8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xc0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xc0) = 0;
  *(uint32 *)(memorySize + 0xd0) = 0;
  *(uint64 *)(memorySize + 0xb8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180904fd0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0xa0);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x98); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x98) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180904fe0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(memorySize + 0x68) != 0) {
    fclose();
    *(uint64 *)(memorySize + 0x68) = 0;
    LOCK();
    _DAT_180c8ed60 = _DAT_180c8ed60 + -1;
    UNLOCK();
  }
  return;
}



void Unwind_180904ff0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0xd8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xe0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xe0) = 0;
  *(uint32 *)(memorySize + 0xf0) = 0;
  *(uint64 *)(memorySize + 0xd8) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180905000(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(memorySize + 0x80) != 0) {
    fclose();
    *(uint64 *)(memorySize + 0x80) = 0;
    LOCK();
    _DAT_180c8ed60 = _DAT_180c8ed60 + -1;
    UNLOCK();
  }
  return;
}



void Unwind_180905010(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0xf8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x100) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x100) = 0;
  *(uint32 *)(memorySize + 0x110) = 0;
  *(uint64 *)(memorySize + 0xf8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905020(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x48);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x40); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x40) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180905030(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x40);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180905040(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0xa0);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x98); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x98) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180905050(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x98);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180905060(uint64 resourceHandle,longlong memorySize)

{
  FUN_180067070(memorySize + 0x70);
  return;
}



void Unwind_180905070(uint64 resourceHandle,longlong memorySize)

{
  FUN_180067070(memorySize + 0xb0);
  return;
}



void Unwind_180905080(uint64 resourceHandle,longlong memorySize)

{
  FUN_180067070(memorySize + 0x90);
  return;
}



void Unwind_180905090(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x50) & 1) != 0) {
    *(uint *)(memorySize + 0x50) = *(uint *)(memorySize + 0x50) & 0xfffffffe;
    FUN_1800670d0(memorySize + 0xd0);
  }
  return;
}



void Unwind_1809050c0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x1e8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x1f0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x1f0) = 0;
  *(uint32 *)(memorySize + 0x200) = 0;
  *(uint64 *)(memorySize + 0x1e8) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809050d0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(memorySize + 0xf0) != 0) {
    fclose();
    *(uint64 *)(memorySize + 0xf0) = 0;
    LOCK();
    _DAT_180c8ed60 = _DAT_180c8ed60 + -1;
    UNLOCK();
  }
  return;
}



void Unwind_1809050e0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x168) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x170) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x170) = 0;
  *(uint32 *)(memorySize + 0x180) = 0;
  *(uint64 *)(memorySize + 0x168) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809050f0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x1a8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x1b0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x1b0) = 0;
  *(uint32 *)(memorySize + 0x1c0) = 0;
  *(uint64 *)(memorySize + 0x1a8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905100(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x188) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 400) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 400) = 0;
  *(uint32 *)(memorySize + 0x1a0) = 0;
  *(uint64 *)(memorySize + 0x188) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905110(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x150);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x148); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x148) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180905120(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x210);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x208); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x208) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180905130(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x278) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905140(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x250) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905150(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x128) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x130) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x130) = 0;
  *(uint32 *)(memorySize + 0x140) = 0;
  *(uint64 *)(memorySize + 0x128) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905160(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x110);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x108); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x108) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180905170(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x230);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x228); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x228) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180905180(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 200) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xd0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xd0) = 0;
  *(uint32 *)(memorySize + 0xe0) = 0;
  *(uint64 *)(memorySize + 200) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905190(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x1c8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x1d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x1d0) = 0;
  *(uint32 *)(memorySize + 0x1e0) = 0;
  *(uint64 *)(memorySize + 0x1c8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809051a0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x58) & 4) != 0) {
    *(uint *)(memorySize + 0x58) = *(uint *)(memorySize + 0x58) & 0xfffffffb;
    FUN_180044a30(memorySize + 0x2a0);
  }
  return;
}



void Unwind_1809051d0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x188) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809051e0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x1a8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809051f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x150);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x148); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x148) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180905200(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x148);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180905210(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x210);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x208); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x208) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180905220(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x208);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180905230(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x278) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905240(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x250) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905250(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x110);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x108); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x108) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180905260(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x108);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180905270(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x230);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x228); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x228) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180905280(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x228);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180905290(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x1c8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809052a0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x168) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809052b0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x1e8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809052c0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180627b90(memorySize + 0x70);
  }
  return;
}



void Unwind_1809052f0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 2) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffd;
    FUN_180627b90(memorySize + 0x50);
  }
  return;
}



void Unwind_180905320(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180627b90(memorySize + 0x48);
  }
  return;
}



void Unwind_180905350(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x150);
  *plocalUInt1 = &threadLocalStorageData;
  if (plocalUInt1[1] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[1] = 0;
  *(uint32 *)(plocalUInt1 + 3) = 0;
  *plocalUInt1 = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905360(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x108) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x110) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x110) = 0;
  *(uint32 *)(memorySize + 0x120) = 0;
  *(uint64 *)(memorySize + 0x108) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905370(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x108) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905380(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x20);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180905390(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0xd8) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0xd8),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809053a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0xd8) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0xd8),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809053b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x50) != (code *)0x0) {
    (**(code **)(memorySize + 0x50))(memorySize + 0x40,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809053c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0xf0) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0xf0),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809053d0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x108) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x108) + 0x38))();
  }
  return;
}



void Unwind_1809053e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x50) != (code *)0x0) {
    (**(code **)(memorySize + 0x50))(memorySize + 0x40,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809053f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0xf8) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0xf8),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905400(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x100) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x100),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905410(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0xf8) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0xf8),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905420(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0xf0) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0xf0),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905430(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x100) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x100),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905440(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x108) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x108),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905450(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x100) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x100),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905460(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x108) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x108),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905470(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0xa8) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0xa8),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905480(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0xf8) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0xf8),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905490(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x40) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x40),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809054a0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(char *)(memorySize + 0x48) == '\0') && (*(longlong *)(memorySize + 0x30) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_1809054b0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(char *)(memorySize + 0x68) == '\0') && (*(longlong *)(memorySize + 0x50) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_1809054c0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x90) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x98) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x98) = 0;
  *(uint32 *)(memorySize + 0xa8) = 0;
  *(uint64 *)(memorySize + 0x90) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809054d0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x90) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x98) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x98) = 0;
  *(uint32 *)(memorySize + 0xa8) = 0;
  *(uint64 *)(memorySize + 0x90) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809054e0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x100) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809054f0(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x50);
  *plocalUInt1 = &unknown_1809ff498;
  FUN_18006cb90();
  _Mtx_destroy_in_situ();
  _Cnd_destroy_in_situ();
  FUN_180059ee0(plocalUInt1 + 2);
  if ((longlong *)plocalUInt1[1] != (longlong *)0x0) {
    (**(code **)(*(longlong *)plocalUInt1[1] + 0x38))();
  }
  return;
}



void Unwind_180905500(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180905520(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180905540(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x50) + 0x213438);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180905560(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x60) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905570(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180905590(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_1809055b0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x30);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809055c0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x30);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809055d0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_1809055f0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180905610(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x50) + 8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905620(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x50) + 8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905630(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = _Mtx_unlock(*(uint64 *)(memorySize + 0xa0));
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



void Unwind_180905640(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0xa8);
  if (*(code **)(localLong1 + 0x198) != (code *)0x0) {
    (**(code **)(localLong1 + 0x198))(localLong1 + 0x188,0,0,callbackFunction,0xfffffffffffffffe);
  }
  if (*(code **)(localLong1 + 0x178) != (code *)0x0) {
    (**(code **)(localLong1 + 0x178))(localLong1 + 0x168,0,0);
  }
  *(data **)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905650(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x48);
  if (*(code **)(localLong1 + 0x198) != (code *)0x0) {
    (**(code **)(localLong1 + 0x198))(localLong1 + 0x188,0,0,callbackFunction,0xfffffffffffffffe);
  }
  if (*(code **)(localLong1 + 0x178) != (code *)0x0) {
    (**(code **)(localLong1 + 0x178))(localLong1 + 0x168,0,0);
  }
  *(data **)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905660(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x20) + 0x158);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x20) + 0x148,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905680(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x20) + 0x178);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x20) + 0x168,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809056a0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x40) + 8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809056b0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x40) + 8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809056c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x40) + 0x158);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x40) + 0x148,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809056e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x40) + 0x178);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x40) + 0x168,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905700(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x48) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x48),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905710(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x20) + 8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905720(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x40) = &unknown_1809feeb8;
  return;
}



void Unwind_180905730(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x60) = &unknown_1809feeb8;
  return;
}



void Unwind_180905740(uint64 resourceHandle,uint *memorySize)

{
  if ((*memorySize & 1) != 0) {
    *memorySize = *memorySize & 0xfffffffe;
    FUN_18006b760(*(uint64 *)(memorySize + 10));
  }
  return;
}



void Unwind_180905770(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = *(longlong **)(memorySize + 0x28);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = (uint64 *)plocalLong2[1];
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 0x13) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180905780(uint64 resourceHandle,uint *memorySize)

{
  if ((*memorySize & 1) != 0) {
    *memorySize = *memorySize & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 10));
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809057b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  longlong *plVar4;
  uint64 *puVar5;
  int iVar6;
  int *piVar7;
  longlong *plVar8;
  uint uVar9;
  ulonglong localUInt11;
  ulonglong localUInt12;
  longlong *plStackX_10;
  longlong *plStackX_18;
  longlong *plStackX_20;
  ulonglong localUInt10;
  
  puVar5 = *(uint64 **)(memorySize + 0x40);
  *puVar5 = &unknown_180a07cd0;
  *(byte *)((longlong)puVar5 + 0x162) = 1;
  plocalLong2 = puVar5 + 0x1a;
  plStackX_20 = plocalLong2;
  iVar6 = _Mtx_lock(plocalLong2);
  if (iVar6 != 0) {
    __Throw_C_error_std__YAXH_Z(iVar6);
  }
  localUInt10 = 0;
  localUInt11 = localUInt10;
  if (puVar5[9] != 0) {
    do {
      localUInt12 = localUInt11 % (ulonglong)*(uint *)(puVar5 + 8);
      iVar6 = (int)localUInt10;
      for (piVar7 = *(int **)(puVar5[7] + localUInt12 * 8); piVar7 != (int *)0x0;
          piVar7 = *(int **)(piVar7 + 4)) {
        if (iVar6 == *piVar7) {
          if (piVar7 != (int *)0x0) goto LAB_1801571ef;
          break;
        }
      }
      FUN_18066c220(puVar5 + 10,&plStackX_10,(ulonglong)*(uint *)(puVar5 + 8),
                    *(uint32 *)(puVar5 + 9),1);
      piVar7 = (int *)FUN_18062b420(_DAT_180c8ed18,0x18,*(byte *)((longlong)puVar5 + 0x5c));
      *piVar7 = iVar6;
      piVar7[2] = 0;
      piVar7[3] = 0;
      piVar7[4] = 0;
      piVar7[5] = 0;
      if ((char)plStackX_10 != '\0') {
        localUInt12 = localUInt11 % ((ulonglong)plStackX_10 >> 0x20);
        FUN_18015bdc0(puVar5 + 6);
      }
      *(uint64 *)(piVar7 + 4) = *(uint64 *)(puVar5[7] + localUInt12 * 8);
      *(int **)(puVar5[7] + localUInt12 * 8) = piVar7;
      puVar5[9] = puVar5[9] + 1;
LAB_1801571ef:
      plStackX_18 = *(longlong **)(piVar7 + 2);
      piVar7[2] = 0;
      piVar7[3] = 0;
      if (plStackX_18 != (longlong *)0x0) {
        (**(code **)(*plStackX_18 + 0x38))();
      }
      uVar9 = iVar6 + 1;
      localUInt10 = (ulonglong)uVar9;
      localUInt11 = (longlong)(int)uVar9;
    } while ((ulonglong)(longlong)(int)uVar9 < (ulonglong)puVar5[9]);
  }
  plocalLong1 = puVar5 + 6;
  FUN_18015b450(plocalLong1);
  plocalLong3 = puVar5 + 0x2d;
  plVar4 = (longlong *)puVar5[0x2e];
  plVar8 = (longlong *)*plocalLong3;
  if (plVar8 != plVar4) {
    do {
      if ((longlong *)*plVar8 != (longlong *)0x0) {
        (**(code **)(*(longlong *)*plVar8 + 0x38))();
      }
      plVar8 = plVar8 + 1;
    } while (plVar8 != plVar4);
    plVar8 = (longlong *)*plocalLong3;
  }
  puVar5[0x2e] = plVar8;
  iVar6 = _Mtx_unlock(plocalLong2);
  if (iVar6 != 0) {
    __Throw_C_error_std__YAXH_Z(iVar6);
  }
  if (puVar5[0x4a] != 0) {
    free();
    puVar5[0x4a] = 0;
  }
  plStackX_10 = puVar5 + 0x44;
  FUN_18015b4f0();
  if ((longlong *)puVar5[0x3d] != (longlong *)0x0) {
    (**(code **)(*(longlong *)puVar5[0x3d] + 0x38))();
  }
  plStackX_10 = plocalLong3;
  FUN_180057830(plocalLong3);
  plStackX_10 = puVar5 + 0x28;
  FUN_180048980();
  plStackX_10 = puVar5 + 0x24;
  FUN_180048980();
  plStackX_10 = plocalLong2;
  _Mtx_destroy_in_situ(plocalLong2);
  plStackX_10 = puVar5 + 0x16;
  if (*plStackX_10 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plStackX_10 = puVar5 + 0xc;
  _Mtx_destroy_in_situ();
  plStackX_10 = plocalLong1;
  FUN_18015b450(plocalLong1);
  if ((1 < (ulonglong)puVar5[8]) && (puVar5[7] != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  if ((code *)puVar5[3] != (code *)0x0) {
    (*(code *)puVar5[3])(puVar5 + 1,0,0);
  }
  return;
}



void Unwind_1809057c0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  *(uint64 *)(localLong1 + 0xc0) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 200) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 200) = 0;
  *(uint32 *)(localLong1 + 0xd8) = 0;
  *(uint64 *)(localLong1 + 0xc0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809057e0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x100) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x108) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x108) = 0;
  *(uint32 *)(memorySize + 0x118) = 0;
  *(uint64 *)(memorySize + 0x100) = &threadLocalStorageCleanup;
  *(uint64 *)(memorySize + 0xe0) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xe8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xe8) = 0;
  *(uint32 *)(memorySize + 0xf8) = 0;
  *(uint64 *)(memorySize + 0xe0) = &threadLocalStorageCleanup;
  *(uint64 *)(memorySize + 0xb8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xc0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xc0) = 0;
  *(uint32 *)(memorySize + 0xd0) = 0;
  *(uint64 *)(memorySize + 0xb8) = &threadLocalStorageCleanup;
  *(uint64 *)(memorySize + 0x98) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xa0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xa0) = 0;
  *(uint32 *)(memorySize + 0xb0) = 0;
  *(uint64 *)(memorySize + 0x98) = &threadLocalStorageCleanup;
  *(uint64 *)(memorySize + 0x68) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x70) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x70) = 0;
  *(uint32 *)(memorySize + 0x80) = 0;
  *(uint64 *)(memorySize + 0x68) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809057f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x2e8) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x2e8),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905800(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x248) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x248) + 0x38))();
  }
  return;
}



void Unwind_180905810(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0x2e0) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0x2e0) + 0x38))();
  }
  return;
}



void Unwind_180905820(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x2e0) = &unknown_180a0e170;
  return;
}



void Unwind_180905830(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x2e0) + 0x20);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180905840(uint64 resourceHandle,longlong memorySize)

{
  free(*(uint64 *)(memorySize + 0x2e0),0x428);
  return;
}



void Unwind_180905860(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x2e0) + 8);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x2e0) + 0x10);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180905870(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = *(longlong **)(memorySize + 0x2e8);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = (uint64 *)plocalLong2[1];
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180905880(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x2e8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180905890(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x2e0);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x28) {
    *(uint64 *)(localLong3 + 8) = &threadLocalStorageData;
    if (*(longlong *)(localLong3 + 0x10) != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    *(uint64 *)(localLong3 + 0x10) = 0;
    *(uint32 *)(localLong3 + 0x20) = 0;
    *(uint64 *)(localLong3 + 8) = &threadLocalStorageCleanup;
  }
  if (*plocalLong2 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_1809058a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x2e0) + 0x20);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x2e0) + 0x28);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809058b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x2e0) + 0x40);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x2e0) + 0x48);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809058c0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x2e8);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x28) {
    *(uint64 *)(localLong3 + 8) = &threadLocalStorageData;
    if (*(longlong *)(localLong3 + 0x10) != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    *(uint64 *)(localLong3 + 0x10) = 0;
    *(uint32 *)(localLong3 + 0x20) = 0;
    *(uint64 *)(localLong3 + 8) = &threadLocalStorageCleanup;
  }
  if (*plocalLong2 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_1809058d0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x200) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x208) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x208) = 0;
  *(uint32 *)(memorySize + 0x218) = 0;
  *(uint64 *)(memorySize + 0x200) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809058e0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x200) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809058f0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(memorySize + 0x148) != 0) {
    fclose();
    *(uint64 *)(memorySize + 0x148) = 0;
    LOCK();
    _DAT_180c8ed60 = _DAT_180c8ed60 + -1;
    UNLOCK();
  }
  return;
}



void Unwind_180905900(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x48) = &unknown_180a3e470;
  return;
}



void Unwind_180905910(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x48) + 8);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x48) + 0x10);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180905920(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = (uint64 *)**(longlong **)(memorySize + 0x40);
  if (plocalUInt1 != (uint64 *)0x0) {
                    // WARNING: Could not recover jumptable at 0x00018009f9c0. Too many branches
                    // WARNING: Treating indirect jump as call
    (**(code **)*plocalUInt1)(plocalUInt1,1);
    return;
  }
  return;
}



void Unwind_180905930(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 8);
  if (plocalUInt1 != (uint64 *)0x0) {
                    // WARNING: Could not recover jumptable at 0x00018009f9c0. Too many branches
                    // WARNING: Treating indirect jump as call
    (**(code **)*plocalUInt1)(plocalUInt1,1);
    return;
  }
  return;
}



void Unwind_180905940(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  ulonglong *puVar3;
  longlong lVar4;
  uint64 *puVar5;
  ulonglong uVar6;
  
  puVar3 = *(ulonglong **)(memorySize + 0x48);
  plocalUInt2 = (uint64 *)puVar3[1];
  for (puVar5 = (uint64 *)*puVar3; puVar5 != plocalUInt2; puVar5 = puVar5 + 0xe) {
    *puVar5 = &threadLocalStorageCleanup;
  }
  plocalUInt2 = (uint64 *)*puVar3;
  if (plocalUInt2 != (uint64 *)0x0) {
    uVar6 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
    if (uVar6 != 0) {
      lVar4 = uVar6 + 0x80 + ((longlong)plocalUInt2 - uVar6 >> 0x10) * 0x50;
      lVar4 = lVar4 - (ulonglong)*(uint *)(lVar4 + 4);
      if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar4 + 0xe) == '\0')) {
        *plocalUInt2 = *(uint64 *)(lVar4 + 0x20);
        *(uint64 **)(lVar4 + 0x20) = plocalUInt2;
        plocalInt1 = (int *)(lVar4 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                            plocalUInt2,uVar6,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180905950(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  longlong *plVar4;
  uint64 *puVar5;
  int iVar6;
  int *piVar7;
  longlong *plVar8;
  uint uVar9;
  ulonglong localUInt11;
  ulonglong localUInt12;
  longlong *plStackX_10;
  longlong *plStackX_18;
  longlong *plStackX_20;
  ulonglong localUInt10;
  
  puVar5 = *(uint64 **)(memorySize + 0x2e8);
  *puVar5 = &unknown_180a07cd0;
  *(byte *)((longlong)puVar5 + 0x162) = 1;
  plocalLong2 = puVar5 + 0x1a;
  plStackX_20 = plocalLong2;
  iVar6 = _Mtx_lock(plocalLong2);
  if (iVar6 != 0) {
    __Throw_C_error_std__YAXH_Z(iVar6);
  }
  localUInt10 = 0;
  localUInt11 = localUInt10;
  if (puVar5[9] != 0) {
    do {
      localUInt12 = localUInt11 % (ulonglong)*(uint *)(puVar5 + 8);
      iVar6 = (int)localUInt10;
      for (piVar7 = *(int **)(puVar5[7] + localUInt12 * 8); piVar7 != (int *)0x0;
          piVar7 = *(int **)(piVar7 + 4)) {
        if (iVar6 == *piVar7) {
          if (piVar7 != (int *)0x0) goto LAB_1801571ef;
          break;
        }
      }
      FUN_18066c220(puVar5 + 10,&plStackX_10,(ulonglong)*(uint *)(puVar5 + 8),
                    *(uint32 *)(puVar5 + 9),1);
      piVar7 = (int *)FUN_18062b420(_DAT_180c8ed18,0x18,*(byte *)((longlong)puVar5 + 0x5c));
      *piVar7 = iVar6;
      piVar7[2] = 0;
      piVar7[3] = 0;
      piVar7[4] = 0;
      piVar7[5] = 0;
      if ((char)plStackX_10 != '\0') {
        localUInt12 = localUInt11 % ((ulonglong)plStackX_10 >> 0x20);
        FUN_18015bdc0(puVar5 + 6);
      }
      *(uint64 *)(piVar7 + 4) = *(uint64 *)(puVar5[7] + localUInt12 * 8);
      *(int **)(puVar5[7] + localUInt12 * 8) = piVar7;
      puVar5[9] = puVar5[9] + 1;
LAB_1801571ef:
      plStackX_18 = *(longlong **)(piVar7 + 2);
      piVar7[2] = 0;
      piVar7[3] = 0;
      if (plStackX_18 != (longlong *)0x0) {
        (**(code **)(*plStackX_18 + 0x38))();
      }
      uVar9 = iVar6 + 1;
      localUInt10 = (ulonglong)uVar9;
      localUInt11 = (longlong)(int)uVar9;
    } while ((ulonglong)(longlong)(int)uVar9 < (ulonglong)puVar5[9]);
  }
  plocalLong1 = puVar5 + 6;
  FUN_18015b450(plocalLong1);
  plocalLong3 = puVar5 + 0x2d;
  plVar4 = (longlong *)puVar5[0x2e];
  plVar8 = (longlong *)*plocalLong3;
  if (plVar8 != plVar4) {
    do {
      if ((longlong *)*plVar8 != (longlong *)0x0) {
        (**(code **)(*(longlong *)*plVar8 + 0x38))();
      }
      plVar8 = plVar8 + 1;
    } while (plVar8 != plVar4);
    plVar8 = (longlong *)*plocalLong3;
  }
  puVar5[0x2e] = plVar8;
  iVar6 = _Mtx_unlock(plocalLong2);
  if (iVar6 != 0) {
    __Throw_C_error_std__YAXH_Z(iVar6);
  }
  if (puVar5[0x4a] != 0) {
    free();
    puVar5[0x4a] = 0;
  }
  plStackX_10 = puVar5 + 0x44;
  FUN_18015b4f0();
  if ((longlong *)puVar5[0x3d] != (longlong *)0x0) {
    (**(code **)(*(longlong *)puVar5[0x3d] + 0x38))();
  }
  plStackX_10 = plocalLong3;
  FUN_180057830(plocalLong3);
  plStackX_10 = puVar5 + 0x28;
  FUN_180048980();
  plStackX_10 = puVar5 + 0x24;
  FUN_180048980();
  plStackX_10 = plocalLong2;
  _Mtx_destroy_in_situ(plocalLong2);
  plStackX_10 = puVar5 + 0x16;
  if (*plStackX_10 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plStackX_10 = puVar5 + 0xc;
  _Mtx_destroy_in_situ();
  plStackX_10 = plocalLong1;
  FUN_18015b450(plocalLong1);
  if ((1 < (ulonglong)puVar5[8]) && (puVar5[7] != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  if ((code *)puVar5[3] != (code *)0x0) {
    (*(code *)puVar5[3])(puVar5 + 1,0,0);
  }
  return;
}



void Unwind_180905960(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x2e8) + 0x260);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x2e8) + 0x268);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 0x13) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180905980(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x2e8) + 0x280);
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x2e8) + 0x288);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 5) {
    *puVar3 = &threadLocalStorageData;
    if (puVar3[1] != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    puVar3[1] = 0;
    *(uint32 *)(puVar3 + 3) = 0;
    *puVar3 = &threadLocalStorageCleanup;
  }
  if (*plocalLong2 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_1809059a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = *(longlong **)(memorySize + 0x40);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = (uint64 *)plocalLong2[1];
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 0x13) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809059b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x2e8) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x2e8),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809059c0(uint64 resourceHandle,longlong memorySize)

{
  if (**(longlong **)(memorySize + 0x40) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  **(longlong **)(memorySize + 0x40) = 0;
  return;
}



void Unwind_1809059d0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_1809059f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0xd0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180905a10(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0xd8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180905a30(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0xe0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180905a50(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180905a60(uint64 resourceHandle,longlong memorySize)

{
  _Mtx_destroy_in_situ(*(uint64 *)(memorySize + 0x2e0));
  return;
}



void Unwind_180905a70(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x250) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x250) + 0x38))();
  }
  return;
}



void Unwind_180905a80(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x68) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x70) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x70) = 0;
  *(uint32 *)(memorySize + 0x80) = 0;
  *(uint64 *)(memorySize + 0x68) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905a90(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x98) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xa0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xa0) = 0;
  *(uint32 *)(memorySize + 0xb0) = 0;
  *(uint64 *)(memorySize + 0x98) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905aa0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0xb8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xc0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xc0) = 0;
  *(uint32 *)(memorySize + 0xd0) = 0;
  *(uint64 *)(memorySize + 0xb8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905ab0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0xe0) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xe8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xe8) = 0;
  *(uint32 *)(memorySize + 0xf8) = 0;
  *(uint64 *)(memorySize + 0xe0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905ad0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x100) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x108) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x108) = 0;
  *(uint32 *)(memorySize + 0x118) = 0;
  *(uint64 *)(memorySize + 0x100) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905af0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x2e0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905b00(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x50);
  *plocalUInt1 = &unknown_1809fcb90;
  _Mtx_destroy_in_situ();
  _Cnd_destroy_in_situ(plocalUInt1 + 4);
  *plocalUInt1 = &bufferControlData2;
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_180905b10(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x50) + 0xd0);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x50) + 0xc0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905b30(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180905b40(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905b50(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x58) + 8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180905b60(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  char *pcVar2;
  uint64 *puVar3;
  longlong lVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  lVar5 = *(longlong *)(memorySize + 0x58);
  _Mtx_destroy_in_situ();
  _Cnd_destroy_in_situ();
  puVar3 = *(uint64 **)(lVar5 + 0x10);
  if (puVar3 != (uint64 *)0x0) {
    if ((uint64 *)puVar3[3] != (uint64 *)0x0) {
      *(uint64 *)puVar3[3] = 0;
    }
    (**(code **)*puVar3)(puVar3,0);
                    // WARNING: Subroutine does not return
    HandleCriticalError(puVar3);
  }
  if ((*(longlong *)(lVar5 + 0x40) != 0) && (*(longlong *)(*(longlong *)(lVar5 + 0x40) + 0x10) != 0)
     ) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  lVar4 = *(longlong *)(lVar5 + 0x38);
  while (lVar4 != 0) {
    pcVar2 = (char *)(lVar4 + 0x141);
    lVar4 = *(longlong *)(lVar4 + 0x138);
    if (*pcVar2 != '\0') {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  puVar3 = *(uint64 **)(lVar5 + 0x28);
  if (puVar3 == (uint64 *)0x0) {
    return;
  }
  uVar6 = (ulonglong)puVar3 & 0xffffffffffc00000;
  if (uVar6 != 0) {
    lVar5 = uVar6 + 0x80 + ((longlong)puVar3 - uVar6 >> 0x10) * 0x50;
    lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
    if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
      *puVar3 = *(uint64 *)(lVar5 + 0x20);
      *(uint64 **)(lVar5 + 0x20) = puVar3;
      plocalInt1 = (int *)(lVar5 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                          puVar3,uVar6,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180905b70(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  
  localLong3 = *(longlong *)(memorySize + 0x58);
  uVar4 = *(ulonglong *)(localLong3 + 0x340);
  localLong1 = *(longlong *)(localLong3 + 0x338);
  uVar5 = 0;
  if (uVar4 != 0) {
    do {
      plocalUInt2 = *(uint64 **)(localLong1 + uVar5 * 8);
      if (plocalUInt2 != (uint64 *)0x0) {
        *plocalUInt2 = &threadLocalStorageCleanup;
                    // WARNING: Subroutine does not return
        HandleCriticalError();
      }
      *(uint64 *)(localLong1 + uVar5 * 8) = 0;
      uVar5 = uVar5 + 1;
    } while (uVar5 < uVar4);
    uVar4 = *(ulonglong *)(localLong3 + 0x340);
  }
  *(uint64 *)(localLong3 + 0x348) = 0;
  if ((1 < uVar4) && (*(longlong *)(localLong3 + 0x338) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180905b90(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  char *pcVar2;
  uint64 *puVar3;
  longlong *plVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  plVar4 = *(longlong **)(memorySize + 0x38);
  puVar3 = (uint64 *)*plVar4;
  if (puVar3 != (uint64 *)0x0) {
    if ((uint64 *)puVar3[3] != (uint64 *)0x0) {
      *(uint64 *)puVar3[3] = 0;
    }
    (**(code **)*puVar3)(puVar3,0);
                    // WARNING: Subroutine does not return
    HandleCriticalError(puVar3);
  }
  if ((plVar4[6] != 0) && (*(longlong *)(plVar4[6] + 0x10) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  lVar5 = plVar4[5];
  while (lVar5 != 0) {
    pcVar2 = (char *)(lVar5 + 0x141);
    lVar5 = *(longlong *)(lVar5 + 0x138);
    if (*pcVar2 != '\0') {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  puVar3 = (uint64 *)plVar4[3];
  if (puVar3 == (uint64 *)0x0) {
    return;
  }
  uVar6 = (ulonglong)puVar3 & 0xffffffffffc00000;
  if (uVar6 != 0) {
    lVar5 = uVar6 + 0x80 + ((longlong)puVar3 - uVar6 >> 0x10) * 0x50;
    lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
    if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
      *puVar3 = *(uint64 *)(lVar5 + 0x20);
      *(uint64 **)(lVar5 + 0x20) = puVar3;
      plocalInt1 = (int *)(lVar5 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                          puVar3,uVar6,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180905ba0(void)

{
  _Cnd_destroy_in_situ();
  return;
}



void Unwind_180905bc0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180905be0(uint64 resourceHandle,longlong memorySize)

{
  _Cnd_destroy_in_situ(*(uint64 *)(memorySize + 0x30));
  return;
}



void Unwind_180905bf0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180905c00(uint64 resourceHandle,longlong memorySize)

{
  _Mtx_destroy_in_situ(*(uint64 *)(memorySize + 0x30));
  return;
}



void Unwind_180905c10(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  
  localLong3 = *(longlong *)(memorySize + 0x38);
  uVar4 = *(ulonglong *)(localLong3 + 0x10);
  localLong1 = *(longlong *)(localLong3 + 8);
  uVar5 = 0;
  if (uVar4 != 0) {
    do {
      plocalUInt2 = *(uint64 **)(localLong1 + uVar5 * 8);
      if (plocalUInt2 != (uint64 *)0x0) {
        *plocalUInt2 = &threadLocalStorageCleanup;
                    // WARNING: Subroutine does not return
        HandleCriticalError();
      }
      *(uint64 *)(localLong1 + uVar5 * 8) = 0;
      uVar5 = uVar5 + 1;
    } while (uVar5 < uVar4);
    uVar4 = *(ulonglong *)(localLong3 + 0x10);
  }
  *(uint64 *)(localLong3 + 0x18) = 0;
  if ((1 < uVar4) && (*(longlong *)(localLong3 + 8) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180905c20(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  
  localLong3 = *(longlong *)(memorySize + 0x38);
  uVar4 = *(ulonglong *)(localLong3 + 0x10);
  localLong1 = *(longlong *)(localLong3 + 8);
  uVar5 = 0;
  if (uVar4 != 0) {
    do {
      plocalUInt2 = *(uint64 **)(localLong1 + uVar5 * 8);
      if (plocalUInt2 != (uint64 *)0x0) {
        *plocalUInt2 = &threadLocalStorageCleanup;
                    // WARNING: Subroutine does not return
        HandleCriticalError();
      }
      *(uint64 *)(localLong1 + uVar5 * 8) = 0;
      uVar5 = uVar5 + 1;
    } while (uVar5 < uVar4);
    uVar4 = *(ulonglong *)(localLong3 + 0x10);
  }
  *(uint64 *)(localLong3 + 0x18) = 0;
  if ((1 < uVar4) && (*(longlong *)(localLong3 + 8) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180905c30(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  
  localLong3 = *(longlong *)(memorySize + 0x40);
  uVar4 = *(ulonglong *)(localLong3 + 0x10);
  localLong1 = *(longlong *)(localLong3 + 8);
  uVar5 = 0;
  if (uVar4 != 0) {
    do {
      plocalUInt2 = *(uint64 **)(localLong1 + uVar5 * 8);
      if (plocalUInt2 != (uint64 *)0x0) {
        *plocalUInt2 = &threadLocalStorageCleanup;
                    // WARNING: Subroutine does not return
        HandleCriticalError();
      }
      *(uint64 *)(localLong1 + uVar5 * 8) = 0;
      uVar5 = uVar5 + 1;
    } while (uVar5 < uVar4);
    uVar4 = *(ulonglong *)(localLong3 + 0x10);
  }
  *(uint64 *)(localLong3 + 0x18) = 0;
  if ((1 < uVar4) && (*(longlong *)(localLong3 + 8) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180905c40(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  
  localLong3 = *(longlong *)(memorySize + 0x40);
  uVar4 = *(ulonglong *)(localLong3 + 0x10);
  localLong1 = *(longlong *)(localLong3 + 8);
  uVar5 = 0;
  if (uVar4 != 0) {
    do {
      plocalUInt2 = *(uint64 **)(localLong1 + uVar5 * 8);
      if (plocalUInt2 != (uint64 *)0x0) {
        *plocalUInt2 = &threadLocalStorageCleanup;
                    // WARNING: Subroutine does not return
        HandleCriticalError();
      }
      *(uint64 *)(localLong1 + uVar5 * 8) = 0;
      uVar5 = uVar5 + 1;
    } while (uVar5 < uVar4);
    uVar4 = *(ulonglong *)(localLong3 + 0x10);
  }
  *(uint64 *)(localLong3 + 0x18) = 0;
  if ((1 < uVar4) && (*(longlong *)(localLong3 + 8) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180905c50(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  char *pcVar2;
  uint64 *puVar3;
  longlong lVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  lVar5 = *(longlong *)(memorySize + 0x40);
  _Mtx_destroy_in_situ();
  _Cnd_destroy_in_situ();
  puVar3 = *(uint64 **)(lVar5 + 0x10);
  if (puVar3 != (uint64 *)0x0) {
    if ((uint64 *)puVar3[3] != (uint64 *)0x0) {
      *(uint64 *)puVar3[3] = 0;
    }
    (**(code **)*puVar3)(puVar3,0);
                    // WARNING: Subroutine does not return
    HandleCriticalError(puVar3);
  }
  if ((*(longlong *)(lVar5 + 0x40) != 0) && (*(longlong *)(*(longlong *)(lVar5 + 0x40) + 0x10) != 0)
     ) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  lVar4 = *(longlong *)(lVar5 + 0x38);
  while (lVar4 != 0) {
    pcVar2 = (char *)(lVar4 + 0x141);
    lVar4 = *(longlong *)(lVar4 + 0x138);
    if (*pcVar2 != '\0') {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  puVar3 = *(uint64 **)(lVar5 + 0x28);
  if (puVar3 == (uint64 *)0x0) {
    return;
  }
  uVar6 = (ulonglong)puVar3 & 0xffffffffffc00000;
  if (uVar6 != 0) {
    lVar5 = uVar6 + 0x80 + ((longlong)puVar3 - uVar6 >> 0x10) * 0x50;
    lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
    if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
      *puVar3 = *(uint64 *)(lVar5 + 0x20);
      *(uint64 **)(lVar5 + 0x20) = puVar3;
      plocalInt1 = (int *)(lVar5 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                          puVar3,uVar6,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180905c60(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  
  localLong3 = *(longlong *)(memorySize + 0x40);
  uVar4 = *(ulonglong *)(localLong3 + 0x340);
  localLong1 = *(longlong *)(localLong3 + 0x338);
  uVar5 = 0;
  if (uVar4 != 0) {
    do {
      plocalUInt2 = *(uint64 **)(localLong1 + uVar5 * 8);
      if (plocalUInt2 != (uint64 *)0x0) {
        *plocalUInt2 = &threadLocalStorageCleanup;
                    // WARNING: Subroutine does not return
        HandleCriticalError();
      }
      *(uint64 *)(localLong1 + uVar5 * 8) = 0;
      uVar5 = uVar5 + 1;
    } while (uVar5 < uVar4);
    uVar4 = *(ulonglong *)(localLong3 + 0x340);
  }
  *(uint64 *)(localLong3 + 0x348) = 0;
  if ((1 < uVar4) && (*(longlong *)(localLong3 + 0x338) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180905c80(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  
  localLong3 = *(longlong *)(memorySize + 0x48);
  uVar4 = *(ulonglong *)(localLong3 + 0x10);
  localLong1 = *(longlong *)(localLong3 + 8);
  uVar5 = 0;
  if (uVar4 != 0) {
    do {
      plocalUInt2 = *(uint64 **)(localLong1 + uVar5 * 8);
      if (plocalUInt2 != (uint64 *)0x0) {
        *plocalUInt2 = &threadLocalStorageCleanup;
                    // WARNING: Subroutine does not return
        HandleCriticalError();
      }
      *(uint64 *)(localLong1 + uVar5 * 8) = 0;
      uVar5 = uVar5 + 1;
    } while (uVar5 < uVar4);
    uVar4 = *(ulonglong *)(localLong3 + 0x10);
  }
  *(uint64 *)(localLong3 + 0x18) = 0;
  if ((1 < uVar4) && (*(longlong *)(localLong3 + 8) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180905c90(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  
  localLong3 = *(longlong *)(memorySize + 0x48);
  uVar4 = *(ulonglong *)(localLong3 + 0x10);
  localLong1 = *(longlong *)(localLong3 + 8);
  uVar5 = 0;
  if (uVar4 != 0) {
    do {
      plocalUInt2 = *(uint64 **)(localLong1 + uVar5 * 8);
      if (plocalUInt2 != (uint64 *)0x0) {
        *plocalUInt2 = &threadLocalStorageCleanup;
                    // WARNING: Subroutine does not return
        HandleCriticalError();
      }
      *(uint64 *)(localLong1 + uVar5 * 8) = 0;
      uVar5 = uVar5 + 1;
    } while (uVar5 < uVar4);
    uVar4 = *(ulonglong *)(localLong3 + 0x10);
  }
  *(uint64 *)(localLong3 + 0x18) = 0;
  if ((1 < uVar4) && (*(longlong *)(localLong3 + 8) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180905ca0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  char *pcVar2;
  uint64 *puVar3;
  longlong *plVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  plVar4 = *(longlong **)(memorySize + 0x48);
  puVar3 = (uint64 *)*plVar4;
  if (puVar3 != (uint64 *)0x0) {
    if ((uint64 *)puVar3[3] != (uint64 *)0x0) {
      *(uint64 *)puVar3[3] = 0;
    }
    (**(code **)*puVar3)(puVar3,0);
                    // WARNING: Subroutine does not return
    HandleCriticalError(puVar3);
  }
  if ((plVar4[6] != 0) && (*(longlong *)(plVar4[6] + 0x10) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  lVar5 = plVar4[5];
  while (lVar5 != 0) {
    pcVar2 = (char *)(lVar5 + 0x141);
    lVar5 = *(longlong *)(lVar5 + 0x138);
    if (*pcVar2 != '\0') {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  puVar3 = (uint64 *)plVar4[3];
  if (puVar3 == (uint64 *)0x0) {
    return;
  }
  uVar6 = (ulonglong)puVar3 & 0xffffffffffc00000;
  if (uVar6 != 0) {
    lVar5 = uVar6 + 0x80 + ((longlong)puVar3 - uVar6 >> 0x10) * 0x50;
    lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
    if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
      *puVar3 = *(uint64 *)(lVar5 + 0x20);
      *(uint64 **)(lVar5 + 0x20) = puVar3;
      plocalInt1 = (int *)(lVar5 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                          puVar3,uVar6,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180905cb0(void)

{
  _Cnd_destroy_in_situ();
  return;
}



void Unwind_180905cd0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180905cf0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x1f8) != (code *)0x0) {
    (**(code **)(memorySize + 0x1f8))(memorySize + 0x1e8,0,0,callbackFunction,0xfffffffffffffffe);
  }
  if (*(code **)(memorySize + 0x1d8) != (code *)0x0) {
    (**(code **)(memorySize + 0x1d8))(memorySize + 0x1c8,0,0);
  }
  *(data **)(memorySize + 0x80) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905d00(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x1d8) != (code *)0x0) {
    (**(code **)(memorySize + 0x1d8))(memorySize + 0x1c8,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905d20(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x1f8) != (code *)0x0) {
    (**(code **)(memorySize + 0x1f8))(memorySize + 0x1e8,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905d40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x30) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x30),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905d50(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  if (*(char *)(memorySize + 0x50) != '\0') {
    localInt1 = _Mtx_unlock(*(uint64 *)(memorySize + 0x48));
    if (localInt1 != 0) {
      __Throw_C_error_std__YAXH_Z(localInt1);
    }
  }
  return;
}



void Unwind_180905d60(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x30) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905d70(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x30) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905d80(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x60) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180905d90(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x50) + 0x158);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x50) + 0x148,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905db0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x50) + 0x178);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x50) + 0x168,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905dd0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x50) = &unknown_1809ff488;
  return;
}



void Unwind_180905de0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x60) = &unknown_1809ff488;
  return;
}



void Unwind_180905df0(uint64 resourceHandle,longlong memorySize)

{
  FUN_180069530((ulonglong)(*(uint *)(memorySize + 0x30) & 0x1f) * 0x1a8 +
                *(longlong *)(memorySize + 0x28));
  *(byte *)
   ((*(longlong *)(memorySize + 0x28) - (ulonglong)(*(uint *)(memorySize + 0x30) & 0x1f)) + 0x352f) = 1;
  return;
}



void Catch_180905e00(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x60);
  func_0x00018005f320(localLong1);
  func_0x000180060c00(*(longlong *)(memorySize + 0x70) + 8,0);
  func_0x00018006d490(*(uint64 *)(localLong1 + 0x50),*(uint64 *)(memorySize + 0x78));
                    // WARNING: Subroutine does not return
  _CxxThrowException(0,0);
}



void Unwind_180905e40(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  int *plocalInt2;
  longlong *plocalLong3;
  int localInt4;
  longlong lVar5;
  longlong lVar6;
  longlong lVar7;
  longlong lVar8;
  bool bVar9;
  
  plocalLong3 = (longlong *)(memorySize + 0x28);
  FUN_180069530((ulonglong)(*(uint *)(memorySize + 0x30) & 0x1f) * 0x1a8 + *plocalLong3);
  LOCK();
  plocalLong1 = (longlong *)(*plocalLong3 + 0x3508);
  lVar5 = *plocalLong1;
  *plocalLong1 = *plocalLong1 + 1;
  UNLOCK();
  if (lVar5 == 0x1f) {
    *(uint64 *)(*(longlong *)(memorySize + 0x38) + 8) = 0;
    lVar5 = *plocalLong3;
    lVar6 = *(longlong *)(memorySize + 0x40);
    LOCK();
    plocalInt2 = (int *)(lVar5 + 0x3530);
    localInt4 = *plocalInt2;
    *plocalInt2 = *plocalInt2 + -0x80000000;
    UNLOCK();
    if (localInt4 == 0) {
      lVar8 = *(longlong *)(lVar6 + 0x28);
      do {
        *(longlong *)(lVar5 + 0x3538) = lVar8;
        *(uint32 *)(lVar5 + 0x3530) = 1;
        plocalLong1 = (longlong *)(lVar6 + 0x28);
        LOCK();
        lVar7 = *plocalLong1;
        bVar9 = lVar8 == lVar7;
        if (bVar9) {
          *plocalLong1 = lVar5;
          lVar7 = lVar8;
        }
        UNLOCK();
        if (bVar9) {
          return;
        }
        LOCK();
        plocalInt2 = (int *)(lVar5 + 0x3530);
        localInt4 = *plocalInt2;
        *plocalInt2 = *plocalInt2 + 0x7fffffff;
        UNLOCK();
        lVar8 = lVar7;
      } while (localInt4 == 1);
    }
  }
  return;
}



void Unwind_180905e50(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x70) + 0x158);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x70) + 0x148,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905e70(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x70) + 0x178);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x70) + 0x168,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905e90(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x78) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x78),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180905ea0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  char *pcVar2;
  uint64 *puVar3;
  longlong lVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  lVar5 = *(longlong *)(memorySize + 0x50);
  _Mtx_destroy_in_situ();
  _Cnd_destroy_in_situ();
  puVar3 = *(uint64 **)(lVar5 + 200);
  if (puVar3 != (uint64 *)0x0) {
    if ((uint64 *)puVar3[3] != (uint64 *)0x0) {
      *(uint64 *)puVar3[3] = 0;
    }
    (**(code **)*puVar3)(puVar3,0);
                    // WARNING: Subroutine does not return
    HandleCriticalError(puVar3);
  }
  if ((*(longlong *)(lVar5 + 0xf8) != 0) && (*(longlong *)(*(longlong *)(lVar5 + 0xf8) + 0x10) != 0)
     ) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  lVar4 = *(longlong *)(lVar5 + 0xf0);
  while (lVar4 != 0) {
    pcVar2 = (char *)(lVar4 + 0x3541);
    lVar4 = *(longlong *)(lVar4 + 0x3538);
    if (*pcVar2 != '\0') {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  puVar3 = *(uint64 **)(lVar5 + 0xe0);
  if (puVar3 == (uint64 *)0x0) {
    return;
  }
  uVar6 = (ulonglong)puVar3 & 0xffffffffffc00000;
  if (uVar6 != 0) {
    lVar5 = uVar6 + 0x80 + ((longlong)puVar3 - uVar6 >> 0x10) * 0x50;
    lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
    if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
      *puVar3 = *(uint64 *)(lVar5 + 0x20);
      *(uint64 **)(lVar5 + 0x20) = puVar3;
      plocalInt1 = (int *)(lVar5 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                          puVar3,uVar6,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180905ec0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x50) + 0x3c8);
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x50) + 0x3d0);
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x1a8) {
    FUN_180069530(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180905ee0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x60);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x1a8) {
    FUN_180069530(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180905ef0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  char *pcVar2;
  uint64 *puVar3;
  longlong *plVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  plVar4 = *(longlong **)(memorySize + 0x60);
  puVar3 = (uint64 *)*plVar4;
  if (puVar3 != (uint64 *)0x0) {
    if ((uint64 *)puVar3[3] != (uint64 *)0x0) {
      *(uint64 *)puVar3[3] = 0;
    }
    (**(code **)*puVar3)(puVar3,0);
                    // WARNING: Subroutine does not return
    HandleCriticalError(puVar3);
  }
  if ((plVar4[6] != 0) && (*(longlong *)(plVar4[6] + 0x10) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  lVar5 = plVar4[5];
  while (lVar5 != 0) {
    pcVar2 = (char *)(lVar5 + 0x3541);
    lVar5 = *(longlong *)(lVar5 + 0x3538);
    if (*pcVar2 != '\0') {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  puVar3 = (uint64 *)plVar4[3];
  if (puVar3 == (uint64 *)0x0) {
    return;
  }
  uVar6 = (ulonglong)puVar3 & 0xffffffffffc00000;
  if (uVar6 != 0) {
    lVar5 = uVar6 + 0x80 + ((longlong)puVar3 - uVar6 >> 0x10) * 0x50;
    lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
    if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
      *puVar3 = *(uint64 *)(lVar5 + 0x20);
      *(uint64 **)(lVar5 + 0x20) = puVar3;
      plocalInt1 = (int *)(lVar5 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                          puVar3,uVar6,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180905f00(void)

{
  _Cnd_destroy_in_situ();
  return;
}



void Unwind_180905f20(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180905f40(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180905f50(uint64 resourceHandle,longlong memorySize)

{
  _Mtx_destroy_in_situ(*(uint64 *)(memorySize + 0x68));
  return;
}



void Unwind_180905f60(uint64 resourceHandle,longlong memorySize)

{
  _Cnd_destroy_in_situ(*(uint64 *)(memorySize + 0x68));
  return;
}



void Unwind_180905f70(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  char *pcVar2;
  uint64 *puVar3;
  longlong *plVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  plVar4 = *(longlong **)(memorySize + 0x40);
  puVar3 = (uint64 *)*plVar4;
  if (puVar3 != (uint64 *)0x0) {
    if ((uint64 *)puVar3[3] != (uint64 *)0x0) {
      *(uint64 *)puVar3[3] = 0;
    }
    (**(code **)*puVar3)(puVar3,0);
                    // WARNING: Subroutine does not return
    HandleCriticalError(puVar3);
  }
  if ((plVar4[6] != 0) && (*(longlong *)(plVar4[6] + 0x10) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  lVar5 = plVar4[5];
  while (lVar5 != 0) {
    pcVar2 = (char *)(lVar5 + 0x3541);
    lVar5 = *(longlong *)(lVar5 + 0x3538);
    if (*pcVar2 != '\0') {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  puVar3 = (uint64 *)plVar4[3];
  if (puVar3 == (uint64 *)0x0) {
    return;
  }
  uVar6 = (ulonglong)puVar3 & 0xffffffffffc00000;
  if (uVar6 != 0) {
    lVar5 = uVar6 + 0x80 + ((longlong)puVar3 - uVar6 >> 0x10) * 0x50;
    lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
    if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
      *puVar3 = *(uint64 *)(lVar5 + 0x20);
      *(uint64 **)(lVar5 + 0x20) = puVar3;
      plocalInt1 = (int *)(lVar5 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                          puVar3,uVar6,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180905f80(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x40);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x1a8) {
    FUN_180069530(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180905f90(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x70);
  *plocalUInt1 = &unknown_1809fcb90;
  _Mtx_destroy_in_situ();
  _Cnd_destroy_in_situ(plocalUInt1 + 4);
  *plocalUInt1 = &bufferControlData2;
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_180905fa0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  char *pcVar2;
  uint64 *puVar3;
  longlong lVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  lVar5 = *(longlong *)(memorySize + 0x70);
  _Mtx_destroy_in_situ();
  _Cnd_destroy_in_situ();
  puVar3 = *(uint64 **)(lVar5 + 200);
  if (puVar3 != (uint64 *)0x0) {
    if ((uint64 *)puVar3[3] != (uint64 *)0x0) {
      *(uint64 *)puVar3[3] = 0;
    }
    (**(code **)*puVar3)(puVar3,0);
                    // WARNING: Subroutine does not return
    HandleCriticalError(puVar3);
  }
  if ((*(longlong *)(lVar5 + 0xf8) != 0) && (*(longlong *)(*(longlong *)(lVar5 + 0xf8) + 0x10) != 0)
     ) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  lVar4 = *(longlong *)(lVar5 + 0xf0);
  while (lVar4 != 0) {
    pcVar2 = (char *)(lVar4 + 0x3541);
    lVar4 = *(longlong *)(lVar4 + 0x3538);
    if (*pcVar2 != '\0') {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  puVar3 = *(uint64 **)(lVar5 + 0xe0);
  if (puVar3 == (uint64 *)0x0) {
    return;
  }
  uVar6 = (ulonglong)puVar3 & 0xffffffffffc00000;
  if (uVar6 != 0) {
    lVar5 = uVar6 + 0x80 + ((longlong)puVar3 - uVar6 >> 0x10) * 0x50;
    lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
    if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
      *puVar3 = *(uint64 *)(lVar5 + 0x20);
      *(uint64 **)(lVar5 + 0x20) = puVar3;
      plocalInt1 = (int *)(lVar5 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                          puVar3,uVar6,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180905fc0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x70) + 0x3c8);
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x3d0);
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x1a8) {
    FUN_180069530(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180905fe0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  char *pcVar2;
  uint64 *puVar3;
  longlong *plVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  plVar4 = *(longlong **)(memorySize + 0x78);
  puVar3 = (uint64 *)*plVar4;
  if (puVar3 != (uint64 *)0x0) {
    if ((uint64 *)puVar3[3] != (uint64 *)0x0) {
      *(uint64 *)puVar3[3] = 0;
    }
    (**(code **)*puVar3)(puVar3,0);
                    // WARNING: Subroutine does not return
    HandleCriticalError(puVar3);
  }
  if ((plVar4[6] != 0) && (*(longlong *)(plVar4[6] + 0x10) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  lVar5 = plVar4[5];
  while (lVar5 != 0) {
    pcVar2 = (char *)(lVar5 + 0x3541);
    lVar5 = *(longlong *)(lVar5 + 0x3538);
    if (*pcVar2 != '\0') {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  puVar3 = (uint64 *)plVar4[3];
  if (puVar3 == (uint64 *)0x0) {
    return;
  }
  uVar6 = (ulonglong)puVar3 & 0xffffffffffc00000;
  if (uVar6 != 0) {
    lVar5 = uVar6 + 0x80 + ((longlong)puVar3 - uVar6 >> 0x10) * 0x50;
    lVar5 = lVar5 - (ulonglong)*(uint *)(lVar5 + 4);
    if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar5 + 0xe) == '\0')) {
      *puVar3 = *(uint64 *)(lVar5 + 0x20);
      *(uint64 **)(lVar5 + 0x20) = puVar3;
      plocalInt1 = (int *)(lVar5 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                          puVar3,uVar6,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180905ff0(void)

{
  _Cnd_destroy_in_situ();
  return;
}



void Unwind_180906010(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180906030(uint64 resourceHandle,longlong memorySize)

{
  _Cnd_destroy_in_situ(*(uint64 *)(memorySize + 0x80));
  return;
}



void Unwind_180906040(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180906050(uint64 resourceHandle,longlong memorySize)

{
  _Mtx_destroy_in_situ(*(uint64 *)(memorySize + 0x80));
  return;
}



void Unwind_180906060(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x78);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x1a8) {
    FUN_180069530(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180906070(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  
  plocalLong2 = *(longlong **)(memorySize + 0x60);
  _Mtx_destroy_in_situ();
  plocalLong1 = (longlong *)*plocalLong2;
  if (plocalLong1 != plocalLong2) {
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalLong1);
  }
  return;
}



void Unwind_180906080(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x60) + 0x78);
  _Mtx_destroy_in_situ();
  plocalLong1 = (longlong *)*plocalLong2;
  if (plocalLong1 != plocalLong2) {
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalLong1);
  }
  return;
}



void Unwind_180906090(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x60) + 0xf0);
  _Mtx_destroy_in_situ();
  plocalLong1 = (longlong *)*plocalLong2;
  if (plocalLong1 != plocalLong2) {
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalLong1);
  }
  return;
}



void Unwind_1809060b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = (longlong *)**(longlong **)(memorySize + 0x68);
  if (plocalLong1 != *(longlong **)(memorySize + 0x68)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalLong1);
  }
  return;
}



void Unwind_1809060c0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_1809060d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = (longlong *)**(longlong **)(memorySize + 0x70);
  if (plocalLong1 != *(longlong **)(memorySize + 0x70)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalLong1);
  }
  return;
}



void Unwind_1809060e0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_1809060f0(uint64 resourceHandle,longlong memorySize)

{
  _Mtx_destroy_in_situ(*(uint64 *)(memorySize + 0x70));
  return;
}



void Unwind_180906100(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = _Mtx_unlock(*(uint64 *)(memorySize + 0x70));
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



void Unwind_180906110(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = (longlong *)**(longlong **)(memorySize + 0x40);
  if (plocalLong1 != *(longlong **)(memorySize + 0x40)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalLong1);
  }
  return;
}



void Unwind_180906120(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180906130(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = (longlong *)**(longlong **)(memorySize + 0x40);
  if (plocalLong1 != *(longlong **)(memorySize + 0x40)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalLong1);
  }
  return;
}



void Unwind_180906140(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xa8) + 0x1b8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906160(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0xa8) + 0x1d8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906180(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0xb0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906190(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0xb0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809061a0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xb8) + 0x70);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809061b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x30) + 0x70);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809061c0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x70);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809061d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1b8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809061f0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x1d8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180906210(void)

{
  CloseHandle(_DAT_180c91900);
  return;
}



void Unwind_180906220(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x40) & 1) != 0) {
    *(uint *)(memorySize + 0x40) = *(uint *)(memorySize + 0x40) & 0xfffffffe;
    FUN_180627b90(memorySize + 0xa8);
  }
  return;
}



void Unwind_180906250(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x44) & 1) != 0) {
    *(uint *)(memorySize + 0x44) = *(uint *)(memorySize + 0x44) & 0xfffffffe;
    FUN_180627b90(memorySize + 200);
  }
  return;
}



void Unwind_180906280(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x44) & 2) != 0) {
    *(uint *)(memorySize + 0x44) = *(uint *)(memorySize + 0x44) & 0xfffffffd;
    FUN_180627b90(memorySize + 0x88);
  }
  return;
}



void Unwind_1809062b0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0xb0) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xb8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xb8) = 0;
  *(uint32 *)(memorySize + 200) = 0;
  *(uint64 *)(memorySize + 0xb0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809062c0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x6c) & 1) != 0) {
    *(uint *)(memorySize + 0x6c) = *(uint *)(memorySize + 0x6c) & 0xfffffffe;
    FUN_180627b90(memorySize + 0x108);
  }
  return;
}



void Unwind_1809062f0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x6c) & 2) != 0) {
    *(uint *)(memorySize + 0x6c) = *(uint *)(memorySize + 0x6c) & 0xfffffffd;
    FUN_180627b90(memorySize + 0xd0);
  }
  return;
}



void Unwind_180906320(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x6c) & 4) != 0) {
    *(uint *)(memorySize + 0x6c) = *(uint *)(memorySize + 0x6c) & 0xfffffffb;
    FUN_180627b90(memorySize + 0x70);
  }
  return;
}



void Unwind_180906350(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0xb0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180906360(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x54) & 1) != 0) {
    *(uint *)(memorySize + 0x54) = *(uint *)(memorySize + 0x54) & 0xfffffffe;
    FUN_180627b90(memorySize + 0xe8);
  }
  return;
}



void Unwind_180906390(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x54) & 2) != 0) {
    *(uint *)(memorySize + 0x54) = *(uint *)(memorySize + 0x54) & 0xfffffffd;
    FUN_180627b90(memorySize + 0x98);
  }
  return;
}



void Unwind_1809063c0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x54) & 4) != 0) {
    *(uint *)(memorySize + 0x54) = *(uint *)(memorySize + 0x54) & 0xfffffffb;
    FUN_180627b90(memorySize + 0x58);
  }
  return;
}



void Unwind_1809063f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0xe8);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0xe0); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0xe0) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180906400(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    FUN_180627b90(memorySize + 0x98);
  }
  return;
}



void Unwind_180906430(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 2) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffd;
    FUN_180627b90(memorySize + 0x38);
  }
  return;
}



void Unwind_180906460(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0xe8);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0xe0); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0xe0) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180906470(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xe0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906480(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(memorySize + 0x82) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x82) = 0;
  if (*(longlong *)(memorySize + 0x8a) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x8a) = 0;
  if (*(longlong *)(memorySize + 0x70) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x70) = 0;
  if (*(longlong *)(memorySize + 0x78) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x78) = 0;
  FUN_180074a80();
  *(uint64 *)(memorySize + 0x30) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x38) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x38) = 0;
  *(uint32 *)(memorySize + 0x48) = 0;
  *(uint64 *)(memorySize + 0x30) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180906490(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  
  plocalLong1 = *(longlong **)(memorySize + 0x58);
  plocalLong2 = *(longlong **)(memorySize + 0x50);
  while( true ) {
    if (plocalLong2 == plocalLong1) {
      if (*(longlong *)(memorySize + 0x50) != 0) {
                    // WARNING: Subroutine does not return
        HandleCriticalError();
      }
      return;
    }
    if (*(longlong *)((longlong)plocalLong2 + 0x12) != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    *(uint64 *)((longlong)plocalLong2 + 0x12) = 0;
    if (*(longlong *)((longlong)plocalLong2 + 0x1a) != 0) break;
    *(uint64 *)((longlong)plocalLong2 + 0x1a) = 0;
    if (*plocalLong2 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    *plocalLong2 = 0;
    if (plocalLong2[1] != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    plocalLong2[1] = 0;
    plocalLong2 = (longlong *)((longlong)plocalLong2 + 0x24);
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809064a0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(memorySize + 0x70) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(longlong *)(memorySize + 0x70) = 0;
  if (*(longlong *)(memorySize + 0x78) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x78) = 0;
  return;
}



void Unwind_1809064b0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(memorySize + 0x82) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(longlong *)(memorySize + 0x82) = 0;
  if (*(longlong *)(memorySize + 0x8a) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x8a) = 0;
  return;
}



void Unwind_1809064c0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x20);
  plocalLong1 = (longlong *)plocalLong2[1];
  plocalLong3 = (longlong *)*plocalLong2;
  while( true ) {
    if (plocalLong3 == plocalLong1) {
      if (*plocalLong2 != 0) {
                    // WARNING: Subroutine does not return
        HandleCriticalError();
      }
      return;
    }
    if (*(longlong *)((longlong)plocalLong3 + 0x12) != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    *(uint64 *)((longlong)plocalLong3 + 0x12) = 0;
    if (*(longlong *)((longlong)plocalLong3 + 0x1a) != 0) break;
    *(uint64 *)((longlong)plocalLong3 + 0x1a) = 0;
    if (*plocalLong3 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    *plocalLong3 = 0;
    if (plocalLong3[1] != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    plocalLong3[1] = 0;
    plocalLong3 = (longlong *)((longlong)plocalLong3 + 0x24);
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809064d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x40) + 0x20);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x28);
  plocalLong3 = (longlong *)*plocalLong2;
  while( true ) {
    if (plocalLong3 == plocalLong1) {
      if (*plocalLong2 != 0) {
                    // WARNING: Subroutine does not return
        HandleCriticalError();
      }
      return;
    }
    if (*(longlong *)((longlong)plocalLong3 + 0x12) != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    *(uint64 *)((longlong)plocalLong3 + 0x12) = 0;
    if (*(longlong *)((longlong)plocalLong3 + 0x1a) != 0) break;
    *(uint64 *)((longlong)plocalLong3 + 0x1a) = 0;
    if (*plocalLong3 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    *plocalLong3 = 0;
    if (plocalLong3[1] != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    plocalLong3[1] = 0;
    plocalLong3 = (longlong *)((longlong)plocalLong3 + 0x24);
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809064e0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(longlong *)(localLong1 + 0x40) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(longlong *)(localLong1 + 0x40) = 0;
  if (*(longlong *)(localLong1 + 0x48) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x48) = 0;
  return;
}



void Unwind_1809064f0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(longlong *)(localLong1 + 0x52) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(longlong *)(localLong1 + 0x52) = 0;
  if (*(longlong *)(localLong1 + 0x5a) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x5a) = 0;
  return;
}



void Unwind_180906500(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x48);
  plocalLong1 = (longlong *)plocalLong2[1];
  plocalLong3 = (longlong *)*plocalLong2;
  while( true ) {
    if (plocalLong3 == plocalLong1) {
      if (*plocalLong2 != 0) {
                    // WARNING: Subroutine does not return
        HandleCriticalError();
      }
      return;
    }
    if (*(longlong *)((longlong)plocalLong3 + 0x12) != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    *(uint64 *)((longlong)plocalLong3 + 0x12) = 0;
    if (*(longlong *)((longlong)plocalLong3 + 0x1a) != 0) break;
    *(uint64 *)((longlong)plocalLong3 + 0x1a) = 0;
    if (*plocalLong3 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    *plocalLong3 = 0;
    if (plocalLong3[1] != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    plocalLong3[1] = 0;
    plocalLong3 = (longlong *)((longlong)plocalLong3 + 0x24);
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180906510(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x40);
  plocalLong1 = (longlong *)plocalLong2[1];
  plocalLong3 = (longlong *)*plocalLong2;
  while( true ) {
    if (plocalLong3 == plocalLong1) {
      if (*plocalLong2 != 0) {
                    // WARNING: Subroutine does not return
        HandleCriticalError();
      }
      return;
    }
    if (*(longlong *)((longlong)plocalLong3 + 0x12) != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    *(uint64 *)((longlong)plocalLong3 + 0x12) = 0;
    if (*(longlong *)((longlong)plocalLong3 + 0x1a) != 0) break;
    *(uint64 *)((longlong)plocalLong3 + 0x1a) = 0;
    if (*plocalLong3 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    *plocalLong3 = 0;
    if (plocalLong3[1] != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    plocalLong3[1] = 0;
    plocalLong3 = (longlong *)((longlong)plocalLong3 + 0x24);
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180906520(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x48) = &unknown_1809ffa18;
  return;
}



void Unwind_180906530(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x48);
  *plocalUInt1 = &unknown_180a02e68;
  plocalUInt1[2] = &threadLocalStorageCleanup;
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_180906540(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x48) + 0x10) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180906550(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(memorySize + 0x58);
  if (*plocalLong1 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *plocalLong1 = 0;
  if (plocalLong1[1] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalLong1[1] = 0;
  return;
}



void Unwind_180906560(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x58);
  if (*(longlong *)(localLong1 + 0x12) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(longlong *)(localLong1 + 0x12) = 0;
  if (*(longlong *)(localLong1 + 0x1a) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1a) = 0;
  return;
}



void Unwind_180906570(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(memorySize + 0x50);
  if (*plocalLong1 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *plocalLong1 = 0;
  if (plocalLong1[1] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalLong1[1] = 0;
  return;
}



void Unwind_180906580(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x50);
  if (*(longlong *)(localLong1 + 0x12) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(longlong *)(localLong1 + 0x12) = 0;
  if (*(longlong *)(localLong1 + 0x1a) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1a) = 0;
  return;
}



void Unwind_180906590(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(memorySize + 0x60);
  if (*plocalLong1 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *plocalLong1 = 0;
  if (plocalLong1[1] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalLong1[1] = 0;
  return;
}



void Unwind_1809065a0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x60);
  if (*(longlong *)(localLong1 + 0x12) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(longlong *)(localLong1 + 0x12) = 0;
  if (*(longlong *)(localLong1 + 0x1a) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1a) = 0;
  return;
}



void Unwind_1809065b0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x40) = &unknown_1809ffa18;
  return;
}



void Unwind_1809065c0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_1809065d0(void)

{
  _Mtx_destroy_in_situ(0x180c91910);
  return;
}



void Unwind_1809065e0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0xd0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809065f0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0xd0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180906600(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180044a30(*(uint64 *)(memorySize + 0x48));
  }
  return;
}



void Unwind_180906630(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0xa0);
  *plocalUInt1 = &unknown_180a02e68;
  plocalUInt1[2] = &threadLocalStorageCleanup;
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_180906640(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xa0) + 0x118);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906660(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xa0) + 0x1b0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906680(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xa0) + 0x1b8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809066a0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xa0) + 0x1c0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809066c0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(*(longlong *)(memorySize + 0xa0) + 0x1e8) != 0) {
    FUN_180080060();
  }
  return;
}



void Unwind_1809066e0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xa0) + 0x210);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906700(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0xa0) + 0x218);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0xa0) + 0x220);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180906720(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xa0) + 0x268);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906740(uint64 resourceHandle,longlong memorySize)

{
  FUN_1800809a0(*(longlong *)(memorySize + 0xa0) + 0x2e0);
  return;
}



void Unwind_180906760(uint64 resourceHandle,longlong memorySize)

{
  FUN_180080870(*(longlong *)(memorySize + 0xa0) + 0x2f0);
  return;
}



void Unwind_180906780(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0xa0);
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_180906790(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0xa0) + 0x10) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809067a0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0xa0) = &threadSyncObject;
  return;
}



void Unwind_1809067b0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x48);
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809067c0(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x50);
  *plocalUInt1 = &unknown_180a02e68;
  plocalUInt1[2] = &threadLocalStorageCleanup;
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_1809067d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x118);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809067f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x1b0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906810(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x1b8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906830(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x1c0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906850(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(*(longlong *)(memorySize + 0x50) + 0x1e8) != 0) {
    FUN_180080060();
  }
  return;
}



void Unwind_180906870(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x210);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906890(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x50) + 0x218);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x50) + 0x220);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809068b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x268);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809068d0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1800809a0(*(longlong *)(memorySize + 0x50) + 0x2e0);
  return;
}



void Unwind_1809068f0(uint64 resourceHandle,longlong memorySize)

{
  FUN_180080870(*(longlong *)(memorySize + 0x50) + 0x2f0);
  return;
}



void Unwind_180906910(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x28),0x18,0x10,FUN_18007bb70);
  return;
}



void Unwind_180906940(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = *(longlong **)(memorySize + 0x58);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = (uint64 *)plocalLong2[1];
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180906950(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x50) + 0x10) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180906960(uint64 resourceHandle,longlong memorySize)

{
  FUN_18007f6a0();
  if (*(longlong **)(memorySize + 0x58) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x58) + 0x38))();
  }
  return;
}



void Unwind_180906970(uint64 resourceHandle,longlong memorySize)

{
  FUN_18007f840(memorySize + 0x28);
  return;
}



void Unwind_180906980(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x58) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x58) + 0x38))();
  }
  return;
}



void Unwind_180906990(uint64 resourceHandle,longlong memorySize)

{
  FUN_18007f840(memorySize + 0x40);
  return;
}



void Unwind_1809069a0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xe0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xe0) + 0x38))();
  }
  return;
}



void Unwind_1809069b0(uint64 resourceHandle,longlong memorySize)

{
  FUN_18007f6a0();
  if (*(longlong **)(memorySize + 0x48) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x48) + 0x38))();
  }
  return;
}



void Unwind_1809069c0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x178) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x178) + 0x38))();
  }
  return;
}



void Unwind_1809069d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  if (*(longlong *)(memorySize + 0x68) != 0) {
    FUN_18022f390();
  }
  FUN_18007f6a0(memorySize + 0x78);
  if (*(longlong **)(memorySize + 0x90) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x90) + 0x38))();
  }
  if (*(longlong **)(memorySize + 0x70) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x70) + 0x38))();
  }
  plocalLong1 = *(longlong **)(memorySize + 0x68);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809069e0(uint64 resourceHandle,longlong memorySize)

{
  FUN_18007f840(memorySize + 0x50);
  return;
}



void Unwind_1809069f0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x188) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x188) + 0x38))();
  }
  return;
}



void Unwind_180906a00(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  if (*(longlong *)(memorySize + 0xa0) != 0) {
    FUN_18022f390();
  }
  FUN_18007f6a0(memorySize + 0xb0);
  if (*(longlong **)(memorySize + 200) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 200) + 0x38))();
  }
  if (*(longlong **)(memorySize + 0xa8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xa8) + 0x38))();
  }
  plocalLong1 = *(longlong **)(memorySize + 0xa0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906a10(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x48) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x48) + 0x38))();
  }
  return;
}



void Unwind_180906a20(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x170) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x170) + 0x38))();
  }
  return;
}



void Unwind_180906a30(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x70) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x70) + 0x38))();
  }
  return;
}



void Unwind_180906a40(uint64 resourceHandle,longlong memorySize)

{
  FUN_18007f6a0();
  if (*(longlong **)(memorySize + 0x90) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x90) + 0x38))();
  }
  return;
}



void Unwind_180906a50(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x180) + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906a60(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xa0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xa0) + 0x38))();
  }
  return;
}



void Unwind_180906a70(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xa8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xa8) + 0x38))();
  }
  return;
}



void Unwind_180906a80(uint64 resourceHandle,longlong memorySize)

{
  FUN_18007f6a0();
  if (*(longlong **)(memorySize + 200) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 200) + 0x38))();
  }
  return;
}



void Unwind_180906a90(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 0x58));
  }
  return;
}



void Unwind_180906ac0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  if (*(longlong *)(memorySize + 0x28) != 0) {
    FUN_18022f390();
  }
  FUN_18007f6a0(memorySize + 0x38);
  if (*(longlong **)(memorySize + 0x50) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x50) + 0x38))();
  }
  if (*(longlong **)(memorySize + 0x30) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x30) + 0x38))();
  }
  plocalLong1 = *(longlong **)(memorySize + 0x28);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906ad0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x30) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x30) + 0x38))();
  }
  return;
}



void Unwind_180906ae0(uint64 resourceHandle,longlong memorySize)

{
  FUN_18007f6a0();
  if (*(longlong **)(memorySize + 0x50) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x50) + 0x38))();
  }
  return;
}



void Unwind_180906af0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x70) + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906b00(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x78) != (code *)0x0) {
    (**(code **)(memorySize + 0x78))(memorySize + 0x68,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180906b10(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x90);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x88); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 6) {
    *plocalUInt2 = &threadLocalStorageData;
    if (plocalUInt2[1] != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    plocalUInt2[1] = 0;
    *(uint32 *)(plocalUInt2 + 3) = 0;
    *plocalUInt2 = &threadLocalStorageCleanup;
  }
  if (*(longlong *)(memorySize + 0x88) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180906b20(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0x100) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0x100) + 0x38))();
  }
  return;
}



void Unwind_180906b30(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x78) != (code *)0x0) {
    (**(code **)(memorySize + 0x78))(memorySize + 0x68,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180906b40(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x90);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x88); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 6) {
    *plocalUInt2 = &threadLocalStorageData;
    if (plocalUInt2[1] != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    plocalUInt2[1] = 0;
    *(uint32 *)(plocalUInt2 + 3) = 0;
    *plocalUInt2 = &threadLocalStorageCleanup;
  }
  if (*(longlong *)(memorySize + 0x88) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180906b50(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x88);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906b60(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x40);
  plocalUInt1 = (uint64 *)plocalLong2[1];
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 6) {
    *puVar3 = &threadLocalStorageData;
    if (puVar3[1] != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    puVar3[1] = 0;
    *(uint32 *)(puVar3 + 3) = 0;
    *puVar3 = &threadLocalStorageCleanup;
  }
  if (*plocalLong2 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180906b70(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  if (*(longlong *)(memorySize + 0x30) != 0) {
    FUN_18022f390();
  }
  FUN_18007f6a0(memorySize + 0x40);
  if (*(longlong **)(memorySize + 0x58) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x58) + 0x38))();
  }
  if (*(longlong **)(memorySize + 0x38) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x38) + 0x38))();
  }
  plocalLong1 = *(longlong **)(memorySize + 0x30);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906b80(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x38) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x38) + 0x38))();
  }
  return;
}



void Unwind_180906b90(uint64 resourceHandle,longlong memorySize)

{
  FUN_18007f6a0();
  if (*(longlong **)(memorySize + 0x58) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x58) + 0x38))();
  }
  return;
}



void Unwind_180906ba0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x20) + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906bb0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x58);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906bc0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x58);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906bd0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 8,8,7,FUN_180045af0);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180906c00(void)

{
  byte bVar1;
  
  EnterCriticalSection(0x180c82210);
  _DAT_180d49158 = 0;
  LeaveCriticalSection(0x180c82210);
  if (_DAT_180c82240 != 0) {
    SetEvent();
                    // WARNING: Could not recover jumptable at 0x0001808fcc41. Too many branches
                    // WARNING: Treating indirect jump as call
    ResetEvent(_DAT_180c82240);
    return;
  }
  bVar1 = (byte)_DAT_180bf00a8 & 0x3f;
                    // WARNING: Could not recover jumptable at 0x0001808ffe70. Too many branches
                    // WARNING: Treating indirect jump as call
  (*(code *)((_DAT_180bf00a8 ^ _DAT_180c82250) >> bVar1 |
            (_DAT_180bf00a8 ^ _DAT_180c82250) << 0x40 - bVar1))(0x180c82238);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180906c10(void)

{
  _DAT_180d49160 = &threadLocalStorageCleanup;
  return;
}



void Unwind_180906c20(uint64 resourceHandle,longlong memorySize)

{
  FUN_18007f6a0();
  if (*(longlong **)(memorySize + 0x60) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x60) + 0x38))();
  }
  return;
}



void Unwind_180906c30(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x60) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x60) + 0x38))();
  }
  return;
}



void Unwind_180906c40(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x80) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x80) + 0x38))();
  }
  return;
}



void Unwind_180906c50(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x118);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906c60(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  for (plocalLong1 = *(longlong **)(memorySize + 0xf8); plocalLong1 != *(longlong **)(memorySize + 0x100);
      plocalLong1 = plocalLong1 + 4) {
    if (*plocalLong1 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  if (*(longlong *)(memorySize + 0xf8) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180906c70(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  for (plocalLong1 = *(longlong **)(memorySize + 0xd8); plocalLong1 != *(longlong **)(memorySize + 0xe0);
      plocalLong1 = plocalLong1 + 4) {
    if (*plocalLong1 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  if (*(longlong *)(memorySize + 0xd8) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180906c80(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xa8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906c90(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x30);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906ca0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x88);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906cb0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  for (plocalLong1 = *(longlong **)(memorySize + 0x30); plocalLong1 != *(longlong **)(memorySize + 0x38);
      plocalLong1 = plocalLong1 + 4) {
    if (*plocalLong1 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  if (*(longlong *)(memorySize + 0x30) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180906cc0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x118);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906cd0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x118);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906ce0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  for (plocalLong1 = *(longlong **)(memorySize + 0xf8); plocalLong1 != *(longlong **)(memorySize + 0x100);
      plocalLong1 = plocalLong1 + 4) {
    if (*plocalLong1 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  if (*(longlong *)(memorySize + 0xf8) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180906cf0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xf8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906d00(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x260);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906d10(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x260);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906d20(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  for (plocalLong1 = *(longlong **)(memorySize + 0xd8); plocalLong1 != *(longlong **)(memorySize + 0xe0);
      plocalLong1 = plocalLong1 + 4) {
    if (*plocalLong1 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  if (*(longlong *)(memorySize + 0xd8) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180906d30(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xd8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906d40(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xa8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906d50(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xa8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906d60(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x30);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906d70(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x30);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906d80(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x88);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906d90(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x268);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906da0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x268);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906db0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  for (plocalLong1 = *(longlong **)(memorySize + 0x30); plocalLong1 != *(longlong **)(memorySize + 0x38);
      plocalLong1 = plocalLong1 + 4) {
    if (*plocalLong1 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  if (*(longlong *)(memorySize + 0x30) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180906dc0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x30);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180906dd0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  
  plocalLong1 = *(longlong **)(memorySize + 0x40);
  for (plocalLong2 = (longlong *)*plocalLong1; plocalLong2 != (longlong *)plocalLong1[1]; plocalLong2 = plocalLong2 + 4) {
    if (*plocalLong2 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  if (*plocalLong1 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180906de0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  
  plocalLong1 = *(longlong **)(memorySize + 0x40);
  for (plocalLong2 = (longlong *)*plocalLong1; plocalLong2 != (longlong *)plocalLong1[1]; plocalLong2 = plocalLong2 + 4) {
    if (*plocalLong2 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  if (*plocalLong1 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180906df0(uint64 resourceHandle,longlong memorySize)

{
  FUN_18007f840(memorySize + 0xd8);
  return;
}



void Unwind_180906e00(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x118) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x118) + 0x38))();
  }
  return;
}



void Unwind_180906e10(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x120) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x120) + 0x38))();
  }
  return;
}



void Unwind_180906e20(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0x170) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0x170) + 0x38))();
  }
  return;
}



void Unwind_180906e30(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0x178) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0x178) + 0x38))();
  }
  return;
}



void Unwind_180906e40(uint64 resourceHandle,longlong memorySize)

{
  FUN_18007f6a0();
  if (*(longlong **)(memorySize + 0xd0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xd0) + 0x38))();
  }
  return;
}



void Unwind_180906e50(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x170) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x170),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180906e60(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x128) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x128) + 0x38))();
  }
  return;
}



void Unwind_180906e70(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x178);
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_180906e80(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x178) = &threadSyncObject;
  return;
}



void Unwind_180906e90(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x178) + 0x20);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906ea0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xd0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xd0) + 0x38))();
  }
  return;
}



void Unwind_180906eb0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xb0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xb0) + 0x38))();
  }
  return;
}



void Unwind_180906ec0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x178) + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906ed0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x178) + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906ee0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong localLong2;
  
  localLong2 = *(longlong *)(memorySize + 0x178);
  plocalLong1 = *(longlong **)(localLong2 + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  plocalLong1 = *(longlong **)(localLong2 + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906ef0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x170) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x170),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180906f00(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x30) + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906f10(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x30) + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906f20(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong localLong2;
  
  localLong2 = *(longlong *)(memorySize + 0x30);
  plocalLong1 = *(longlong **)(localLong2 + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  plocalLong1 = *(longlong **)(localLong2 + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906f30(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xb0) + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906f40(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xb0) + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906f50(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0x88) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0x88) + 0x38))();
  }
  return;
}



void Unwind_180906f60(uint64 resourceHandle,longlong memorySize)

{
  FUN_18007f6a0();
  if (*(longlong **)(memorySize + 0x40) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x40) + 0x38))();
  }
  return;
}



void Unwind_180906f70(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x40) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x40) + 0x38))();
  }
  return;
}



void Unwind_180906f80(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180906f90(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x50),0x18,0x10,FUN_18007bb70);
  return;
}



void Unwind_180906fc0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x50),0x18,0x10,FUN_18007bb70);
  return;
}



void Unwind_180906ff0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x50) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x50) + 0x38))();
  }
  if (*(longlong **)(memorySize + 0x48) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x48) + 0x38))();
  }
  return;
}



void Unwind_180907000(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong localLong2;
  
  localLong2 = *(longlong *)(memorySize + 0xd0);
  plocalLong1 = *(longlong **)(localLong2 + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  plocalLong1 = *(longlong **)(localLong2 + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180907010(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0xe8) != (code *)0x0) {
    (**(code **)(memorySize + 0xe8))(memorySize + 0xd8,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180907020(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x68) != (code *)0x0) {
    (**(code **)(memorySize + 0x68))(memorySize + 0x58,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180907030(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong localLong2;
  
  localLong2 = *(longlong *)(memorySize + 0x160);
  plocalLong1 = *(longlong **)(localLong2 + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  plocalLong1 = *(longlong **)(localLong2 + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180907040(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x108) != (code *)0x0) {
    (**(code **)(memorySize + 0x108))(memorySize + 0xf8,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180907050(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x48) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x48) + 0x38))();
  }
  return;
}



void Unwind_180907060(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x50) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x50) + 0x38))();
  }
  return;
}



void Unwind_180907070(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xd0) + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180907080(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xd0) + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180907090(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0xe8) != (code *)0x0) {
    (**(code **)(memorySize + 0xe8))(memorySize + 0xd8,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809070a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x68) != (code *)0x0) {
    (**(code **)(memorySize + 0x68))(memorySize + 0x58,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809070b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x160) + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809070c0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x160) + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809070d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x108) != (code *)0x0) {
    (**(code **)(memorySize + 0x108))(memorySize + 0xf8,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809070e0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x28) + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809070f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x28) + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180907100(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong localLong2;
  
  localLong2 = *(longlong *)(memorySize + 0x28);
  plocalLong1 = *(longlong **)(localLong2 + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  plocalLong1 = *(longlong **)(localLong2 + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180907110(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x20) + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180907120(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong localLong2;
  
  localLong2 = *(longlong *)(memorySize + 0x20);
  plocalLong1 = *(longlong **)(localLong2 + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  plocalLong1 = *(longlong **)(localLong2 + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180907130(void)

{
  byte bVar1;
  
  EnterCriticalSection(0x180c82210);
  uRam0000000180d49150 = 0;
  LeaveCriticalSection(0x180c82210);
  if (_DAT_180c82240 != 0) {
    SetEvent();
                    // WARNING: Could not recover jumptable at 0x0001808fcc41. Too many branches
                    // WARNING: Treating indirect jump as call
    ResetEvent(_DAT_180c82240);
    return;
  }
  bVar1 = (byte)_DAT_180bf00a8 & 0x3f;
                    // WARNING: Could not recover jumptable at 0x0001808ffe70. Too many branches
                    // WARNING: Treating indirect jump as call
  (*(code *)((_DAT_180bf00a8 ^ _DAT_180c82250) >> bVar1 |
            (_DAT_180bf00a8 ^ _DAT_180c82250) << 0x40 - bVar1))(0x180c82238);
  return;
}



void Unwind_180907140(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180045af0(memorySize + 0x178);
  }
  return;
}



void Unwind_180907170(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x168) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x168) + 0x38))();
  }
  return;
}



void Unwind_180907180(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0xb8) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0xb8) + 0x38))();
  }
  return;
}



void Unwind_180907190(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(memorySize + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_1809071a0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x88) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x88) + 0x38))();
  }
  return;
}



void Unwind_1809071b0(uint64 resourceHandle,longlong memorySize)

{
  FUN_18007f840(memorySize + 0x38);
  return;
}



void Unwind_1809071c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x48) != (code *)0x0) {
    (**(code **)(memorySize + 0x48))(memorySize + 0x38,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809071d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x48) != (code *)0x0) {
    (**(code **)(memorySize + 0x48))(memorySize + 0x38,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809071e0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(*(longlong *)(memorySize + 0x20) + 0x18) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_1809071f0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(*(longlong *)(memorySize + 0x20) + 0x40) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180907200(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(*(longlong *)(memorySize + 0x20) + 0x68) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180907210(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(*(longlong *)(memorySize + 0x20) + 0x90) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180907230(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x20);
  FUN_180085530(*(uint64 *)(localLong1 + 0xb0));
  *(uint64 *)(localLong1 + 0xb0) = 0;
  if (*(longlong *)(localLong1 + 0xb8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xb8) = 0;
  return;
}



void Unwind_180907250(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(*(longlong *)(memorySize + 0x20) + 0xd0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180907270(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(*(longlong *)(memorySize + 0x40) + 0x18) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180907280(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(*(longlong *)(memorySize + 0x40) + 0x40) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180907290(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(*(longlong *)(memorySize + 0x40) + 0x68) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_1809072a0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(*(longlong *)(memorySize + 0x40) + 0x90) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_1809072c0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  FUN_180085530(*(uint64 *)(localLong1 + 0xb0));
  *(uint64 *)(localLong1 + 0xb0) = 0;
  if (*(longlong *)(localLong1 + 0xb8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xb8) = 0;
  return;
}



void Unwind_1809072e0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(*(longlong *)(memorySize + 0x40) + 0xd0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180907300(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0x20) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0x20) + 0x38))();
  }
  return;
}



void Unwind_180907310(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x130) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907320(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x130) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907330(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0x30) != '\0') {
    ReleaseSRWLockExclusive(*(uint64 *)(memorySize + 0x28));
  }
  return;
}



void Unwind_180907340(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0x30) != '\0') {
    ReleaseSRWLockExclusive(*(uint64 *)(memorySize + 0x28));
  }
  return;
}



void Unwind_180907350(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x40);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180907360(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x48);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180907370(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x48);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180907380(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong localLong2;
  
  localLong2 = *(longlong *)(memorySize + 0x78);
  plocalLong1 = *(longlong **)(localLong2 + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  plocalLong1 = *(longlong **)(localLong2 + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180907390(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x80) + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809073a0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x80) + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809073b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong localLong2;
  
  localLong2 = *(longlong *)(memorySize + 0x80);
  plocalLong1 = *(longlong **)(localLong2 + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  plocalLong1 = *(longlong **)(localLong2 + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809073c0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x88) + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809073d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x88) + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809073e0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x78) + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809073f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x78) + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180907400(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 0x30));
  }
  return;
}



void Unwind_180907430(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x40) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907440(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 2) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffd;
    FUN_180045af0(*(uint64 *)(memorySize + 0x30));
  }
  return;
}



void Unwind_180907470(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180045af0(memorySize + 0x28);
  }
  return;
}



void Unwind_1809074a0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 2) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffd;
    FUN_180045af0(memorySize + 0x28);
  }
  return;
}



void Unwind_1809074d0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x50);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809074e0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x50);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809074f0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x40);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180907500(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 0x78));
  }
  return;
}



void Unwind_180907530(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x30);
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_180907540(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x30);
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_180907550(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x30) = &threadSyncObject;
  return;
}



void Unwind_180907560(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0x50) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0x50) + 0x38))();
  }
  return;
}



void Unwind_180907570(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x58) + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180907580(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x58) + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180907590(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x40);
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_1809075a0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x20);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809075b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x28);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809075c0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x30);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809075d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x38);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809075e0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x40);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809075f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x48);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180907600(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x50);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180907610(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x58);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180907620(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x60);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180907630(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x20) + 8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180907640(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x18,8,0x10,FUN_180045af0);
  return;
}



void Unwind_180907670(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x50) + 0x18,8,0x10,FUN_180045af0);
  return;
}



void Unwind_1809076a0(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x38);
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_1809076b0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x38) = &threadSyncObject;
  return;
}



void Unwind_1809076c0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(*(longlong *)(memorySize + 0x60) + 8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_1809076d0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(*(longlong *)(memorySize + 0x60) + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_1809076e0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(*(longlong *)(memorySize + 0x40) + 8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_1809076f0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(*(longlong *)(memorySize + 0x40) + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180907700(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907710(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x50);
  *plocalUInt2 = &unknown_180a14bb8;
  plocalUInt1 = (uint64 *)plocalUInt2[0x11];
  if (plocalUInt1 != (uint64 *)0x0) {
    localLong3 = __RTCastToVoid(plocalUInt1);
    (**(code **)*plocalUInt1)(plocalUInt1,0);
    if (localLong3 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError(localLong3);
    }
  }
  plocalUInt2[0x11] = 0;
  if (plocalUInt2[0x12] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt2[0xd] = &threadLocalStorageData;
  if (plocalUInt2[0xe] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt2[0xe] = 0;
  *(uint32 *)(plocalUInt2 + 0x10) = 0;
  plocalUInt2[0xd] = &threadLocalStorageCleanup;
  FUN_180179f00(plocalUInt2 + 7,plocalUInt2[9]);
  *plocalUInt2 = &unknown_180a14c60;
  return;
}



void Unwind_180907720(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0xb0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180907740(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x40);
  *plocalUInt2 = &unknown_180a14bb8;
  plocalUInt1 = (uint64 *)plocalUInt2[0x11];
  if (plocalUInt1 != (uint64 *)0x0) {
    localLong3 = __RTCastToVoid(plocalUInt1);
    (**(code **)*plocalUInt1)(plocalUInt1,0);
    if (localLong3 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError(localLong3);
    }
  }
  plocalUInt2[0x11] = 0;
  if (plocalUInt2[0x12] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt2[0xd] = &threadLocalStorageData;
  if (plocalUInt2[0xe] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt2[0xe] = 0;
  *(uint32 *)(plocalUInt2 + 0x10) = 0;
  plocalUInt2[0xd] = &threadLocalStorageCleanup;
  FUN_180179f00(plocalUInt2 + 7,plocalUInt2[9]);
  *plocalUInt2 = &unknown_180a14c60;
  return;
}



void Unwind_180907750(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0xb0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180907770(void)

{
  _DAT_180bf64d0 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180907780(void)

{
  _g_memoryFreeConfig1 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180907790(void)

{
  _g_chunkAllocData1 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809077a0(void)

{
  _g_chunkFreeData1 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809077b0(void)

{
  _g_chunkSizeData1 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809077c0(void)

{
  _aiSystemHandle = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809077d0(void)

{
  _sceneManagerHandle = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809077e0(void)

{
  _resourceManagerHandle = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809077f0(void)

{
  _scriptSystemHandle = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907800(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x20) + 8);
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x20) + 0x10);
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x60) {
    FUN_180089640(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180907810(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x20) + 0x28);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x20) + 0x30);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180907820(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_18005d260(*(longlong *)(memorySize + 0x20) + 0x48,
                *(uint64 *)(*(longlong *)(memorySize + 0x20) + 0x58),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_180907830(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_18008d810(*(longlong *)(memorySize + 0x20) + 0x78,
                *(uint64 *)(*(longlong *)(memorySize + 0x20) + 0x88),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_180907840(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x20) + 0xc0);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x20) + 0xb0,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180907860(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x20) + 0xf0);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x20) + 0xe0,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180907880(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x20) + 0x110);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809078a0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x28);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x60) {
    FUN_180089640(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809078b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = *(longlong **)(memorySize + 0x28);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = (uint64 *)plocalLong2[1];
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809078c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_18005d260(*(longlong *)(memorySize + 0x28),*(uint64 *)(*(longlong *)(memorySize + 0x28) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_1809078d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_18005d260(*(longlong *)(memorySize + 0x28),*(uint64 *)(*(longlong *)(memorySize + 0x28) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_1809078e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_18008d810(*(longlong *)(memorySize + 0x28),*(uint64 *)(*(longlong *)(memorySize + 0x28) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_1809078f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_18008d810(*(longlong *)(memorySize + 0x28),*(uint64 *)(*(longlong *)(memorySize + 0x28) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180907900(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x28) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x28),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180907910(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x28) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x28),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180907920(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x40);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x60) {
    FUN_180089640(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180907930(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_18008d810(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180907940(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_18008d810(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180907950(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0xb8);
  *plocalUInt1 = &threadLocalStorageData;
  if (plocalUInt1[1] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[1] = 0;
  *(uint32 *)(plocalUInt1 + 3) = 0;
  *plocalUInt1 = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907960(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0xb0);
  *plocalUInt1 = &threadLocalStorageData;
  if (plocalUInt1[1] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[1] = 0;
  *(uint32 *)(plocalUInt1 + 3) = 0;
  *plocalUInt1 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180907970(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = (longlong *)(memorySize + 0x50);
  if (*plocalLong1 != -1) {
    LOCK();
    _DAT_180c8ed64 = _DAT_180c8ed64 + -1;
    UNLOCK();
    CloseHandle(*plocalLong1);
    *plocalLong1 = -1;
  }
  return;
}



void Unwind_180907980(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0xb0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907990(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0xb8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809079a0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  *(uint64 *)(localLong1 + 0x18) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x20) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x20) = 0;
  *(uint32 *)(localLong1 + 0x30) = 0;
  *(uint64 *)(localLong1 + 0x18) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809079b0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  *(uint64 *)(localLong1 + 0x38) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x40) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x40) = 0;
  *(uint32 *)(localLong1 + 0x50) = 0;
  *(uint64 *)(localLong1 + 0x38) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809079c0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  *(uint64 *)(localLong1 + 0x58) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x60) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x60) = 0;
  *(uint32 *)(localLong1 + 0x70) = 0;
  *(uint64 *)(localLong1 + 0x58) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809079d0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  localLong3 = *(longlong *)(memorySize + 0x80);
  *(data **)(localLong3 + 0xd8) = &threadLocalStorageCleanup;
  if (*(longlong *)(localLong3 + 0xa8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  FUN_1800ba100(localLong3 + 0x78);
  if ((1 < *(ulonglong *)(localLong3 + 0x88)) &&
     (plocalUInt2 = *(uint64 **)(localLong3 + 0x80), plocalUInt2 != (uint64 *)0x0)) {
    uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
    if (uVar4 != 0) {
      localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
      localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
      if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
        *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
        *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
        plocalInt1 = (int *)(localLong3 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                            plocalUInt2,uVar4,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_1809079e0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x80) + 0x180);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180907a00(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x70);
  *plocalUInt1 = &unknown_180a14d00;
  if (plocalUInt1[3] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint32 *)(plocalUInt1 + 4) = 0;
  plocalUInt1[3] = 0;
  return;
}



void Unwind_180907a10(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x130);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180907a20(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_18005d260(memorySize + 0xe8,*(uint64 *)(memorySize + 0xf8),operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180907a30(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x200) != (code *)0x0) {
    (**(code **)(memorySize + 0x200))(memorySize + 0x1f0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  if (*(code **)(memorySize + 0x1e0) != (code *)0x0) {
    (**(code **)(memorySize + 0x1e0))(memorySize + 0x1d0,0,0);
  }
  if (*(code **)(memorySize + 0x1c0) != (code *)0x0) {
    (**(code **)(memorySize + 0x1c0))(memorySize + 0x1b0,0,0);
  }
  return;
}



void Unwind_180907a40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x2a0) != (code *)0x0) {
    (**(code **)(memorySize + 0x2a0))(memorySize + 0x290,0,0,callbackFunction,0xfffffffffffffffe);
  }
  if (*(code **)(memorySize + 0x280) != (code *)0x0) {
    (**(code **)(memorySize + 0x280))(memorySize + 0x270,0,0);
  }
  if (*(code **)(memorySize + 0x260) != (code *)0x0) {
    (**(code **)(memorySize + 0x260))(memorySize + 0x250,0,0);
  }
  return;
}



void Unwind_180907a50(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x130);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180907a60(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x130);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180907a70(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_18005d260(memorySize + 0xe8,*(uint64 *)(memorySize + 0xf8),operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180907a80(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_18005d260(memorySize + 0xe8,*(uint64 *)(memorySize + 0xf8),operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180907a90(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x28);
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907aa0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x178) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907ab0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x1c0) != (code *)0x0) {
    (**(code **)(memorySize + 0x1c0))(memorySize + 0x1b0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180907ac0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x1e0) != (code *)0x0) {
    (**(code **)(memorySize + 0x1e0))(memorySize + 0x1d0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180907ad0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x200) != (code *)0x0) {
    (**(code **)(memorySize + 0x200))(memorySize + 0x1f0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180907ae0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x180) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907af0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x260) != (code *)0x0) {
    (**(code **)(memorySize + 0x260))(memorySize + 0x250,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180907b00(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x280) != (code *)0x0) {
    (**(code **)(memorySize + 0x280))(memorySize + 0x270,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180907b10(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x2a0) != (code *)0x0) {
    (**(code **)(memorySize + 0x2a0))(memorySize + 0x290,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180907b20(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x230) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907b30(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 400) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907b40(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x230) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907b50(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x40) + 0x50);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x40) + 0x40,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180907b60(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x40) + 0x70);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x40) + 0x60,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180907b70(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x50) = &threadLocalStorageCleanup;
  *(uint64 *)(memorySize + 0x30) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x38) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x38) = 0;
  *(uint32 *)(memorySize + 0x48) = 0;
  *(uint64 *)(memorySize + 0x30) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907b80(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x50) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907b90(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x20) + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907ba0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x34) & 1) != 0) {
    *(uint *)(memorySize + 0x34) = *(uint *)(memorySize + 0x34) & 0xfffffffe;
    FUN_180044a30(memorySize + 0x298);
  }
  return;
}



void Unwind_180907bd0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x34) & 2) != 0) {
    *(uint *)(memorySize + 0x34) = *(uint *)(memorySize + 0x34) & 0xfffffffd;
    FUN_180044a30(memorySize + 0x270);
  }
  return;
}



void Unwind_180907c00(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x2c0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907c10(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 600);
  *plocalUInt1 = &threadLocalStorageData;
  if (plocalUInt1[1] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[1] = 0;
  *(uint32 *)(plocalUInt1 + 3) = 0;
  *plocalUInt1 = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907c20(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x230);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180907c30(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x210) != (code *)0x0) {
    (**(code **)(memorySize + 0x210))(memorySize + 0x200,0,0,callbackFunction,0xfffffffffffffffe);
  }
  if (*(code **)(memorySize + 0x1f0) != (code *)0x0) {
    (**(code **)(memorySize + 0x1f0))(memorySize + 0x1e0,0,0);
  }
  if (*(code **)(memorySize + 0x1d0) != (code *)0x0) {
    (**(code **)(memorySize + 0x1d0))(memorySize + 0x1c0,0,0);
  }
  return;
}



void Unwind_180907c40(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x298) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907c50(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 600) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907c60(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x2c0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907c70(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x230);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180907c80(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x230);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180907c90(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x1d0) != (code *)0x0) {
    (**(code **)(memorySize + 0x1d0))(memorySize + 0x1c0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180907ca0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x1f0) != (code *)0x0) {
    (**(code **)(memorySize + 0x1f0))(memorySize + 0x1e0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180907cb0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x210) != (code *)0x0) {
    (**(code **)(memorySize + 0x210))(memorySize + 0x200,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180907cc0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x170);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x168); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x168) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180907cd0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x360) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907ce0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x240) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907cf0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x1c0) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x1c8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x1c8) = 0;
  *(uint32 *)(memorySize + 0x1d8) = 0;
  *(uint64 *)(memorySize + 0x1c0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907d00(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x1e8);
  *plocalUInt1 = &threadLocalStorageData;
  if (plocalUInt1[1] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[1] = 0;
  *(uint32 *)(plocalUInt1 + 3) = 0;
  *plocalUInt1 = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907d10(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x150) != (code *)0x0) {
    (**(code **)(memorySize + 0x150))(memorySize + 0x140,0,0,callbackFunction,0xfffffffffffffffe);
  }
  if (*(code **)(memorySize + 0x130) != (code *)0x0) {
    (**(code **)(memorySize + 0x130))(memorySize + 0x120,0,0);
  }
  if (*(code **)(memorySize + 0x110) != (code *)0x0) {
    (**(code **)(memorySize + 0x110))(memorySize + 0x100,0,0);
  }
  return;
}



void Unwind_180907d20(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x170);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x168); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x168) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180907d30(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x168);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180907d40(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x360) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907d50(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    FUN_180044a30(memorySize + 0x1f0);
  }
  return;
}



void Unwind_180907d80(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 2) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffd;
    FUN_180044a30(memorySize + 0x218);
  }
  return;
}



void Unwind_180907db0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x218) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907dc0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x1c0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907dd0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 4) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffb;
    FUN_180627b90(memorySize + 0x40);
  }
  return;
}



void Unwind_180907e00(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 8) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffff7;
    FUN_180044a30(memorySize + 0x480);
  }
  return;
}



void Unwind_180907e30(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x480) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907e40(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x1e8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907e50(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x110) != (code *)0x0) {
    (**(code **)(memorySize + 0x110))(memorySize + 0x100,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180907e60(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x130) != (code *)0x0) {
    (**(code **)(memorySize + 0x130))(memorySize + 0x120,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180907e70(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x150) != (code *)0x0) {
    (**(code **)(memorySize + 0x150))(memorySize + 0x140,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180907e80(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x30);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x28); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x28) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180907e90(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x28);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180907ea0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x38);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180907eb0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x60);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180907ec0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x38);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180907ed0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x38);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180907ee0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x60) != (code *)0x0) {
    (**(code **)(memorySize + 0x60))(memorySize + 0x50,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180907ef0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x208) != (code *)0x0) {
    (**(code **)(memorySize + 0x208))(memorySize + 0x1f8,0,0,callbackFunction,0xfffffffffffffffe);
  }
  if (*(code **)(memorySize + 0x1e8) != (code *)0x0) {
    (**(code **)(memorySize + 0x1e8))(memorySize + 0x1d8,0,0);
  }
  *(data **)(memorySize + 0x90) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907f00(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x60) != (code *)0x0) {
    (**(code **)(memorySize + 0x60))(memorySize + 0x50,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180907f10(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x90) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907f20(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x1e8) != (code *)0x0) {
    (**(code **)(memorySize + 0x1e8))(memorySize + 0x1d8,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180907f40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x208) != (code *)0x0) {
    (**(code **)(memorySize + 0x208))(memorySize + 0x1f8,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180907f60(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x40) + 0x18);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x40) + 8,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180907f70(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = (longlong *)(memorySize + 0x38);
  if (*plocalLong1 != -1) {
    LOCK();
    _DAT_180c8ed64 = _DAT_180c8ed64 + -1;
    UNLOCK();
    CloseHandle(*plocalLong1);
    *plocalLong1 = -1;
  }
  return;
}



void Unwind_180907f80(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(memorySize + 0x58);
  if (plocalLong1 == (longlong *)0x0) {
    *(longlong *)(memorySize + 0x58) = 0;
    return;
  }
  if (((char)plocalLong1[3] == '\0') && (*plocalLong1 != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError(plocalLong1);
}



void Unwind_180907f90(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0xa0) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xa8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xa8) = 0;
  *(uint32 *)(memorySize + 0xb8) = 0;
  *(uint64 *)(memorySize + 0xa0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907fa0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0xa0) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xa8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xa8) = 0;
  *(uint32 *)(memorySize + 0xb8) = 0;
  *(uint64 *)(memorySize + 0xa0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907fb0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    FUN_180047e40(memorySize + 0x480);
  }
  return;
}



void Unwind_180907fe0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x480) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180907ff0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x78);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(memorySize + 0x68,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180908000(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x48);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908010(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x78);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(memorySize + 0x68,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180908020(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x78);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(memorySize + 0x68,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180908030(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x48);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180908040(void)

{
  byte bVar1;
  
  EnterCriticalSection(0x180c82210);
  _DAT_180d491f8 = 0;
  LeaveCriticalSection(0x180c82210);
  if (_DAT_180c82240 != 0) {
    SetEvent();
                    // WARNING: Could not recover jumptable at 0x0001808fcc41. Too many branches
                    // WARNING: Treating indirect jump as call
    ResetEvent(_DAT_180c82240);
    return;
  }
  bVar1 = (byte)_DAT_180bf00a8 & 0x3f;
                    // WARNING: Could not recover jumptable at 0x0001808ffe70. Too many branches
                    // WARNING: Treating indirect jump as call
  (*(code *)((_DAT_180bf00a8 ^ _DAT_180c82250) >> bVar1 |
            (_DAT_180bf00a8 ^ _DAT_180c82250) << 0x40 - bVar1))(0x180c82238);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180908050(uint64 resourceHandle,uint64 memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong *plocalLong1;
  
  plocalLong1 = _DAT_180d49200;
  FUN_18008d1f0(&DAT_180d49200,_DAT_180d49200[1],operationFlags,callbackFunction,0xfffffffffffffffe);
  _DAT_180d49200[1] = (longlong)plocalLong1;
  *_DAT_180d49200 = (longlong)plocalLong1;
  _DAT_180d49200[2] = (longlong)plocalLong1;
  _DAT_180d49208 = 0;
                    // WARNING: Could not recover jumptable at 0x0001808ffc83. Too many branches
                    // WARNING: Treating indirect jump as call
  free(_DAT_180d49200,0x58);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180908060(void)

{
                    // WARNING: Could not recover jumptable at 0x0001808ffc83. Too many branches
                    // WARNING: Treating indirect jump as call
  free(_DAT_180d49200,0x58);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180908070(void)

{
                    // WARNING: Could not recover jumptable at 0x0001808ffc83. Too many branches
                    // WARNING: Treating indirect jump as call
  free(_DAT_180d49200,0x58);
  return;
}



void Catch_180908080(uint64 resourceHandle,longlong memorySize)

{
  func_0x00018008d310(resourceHandle,*(uint64 *)(memorySize + 0x40));
                    // WARNING: Subroutine does not return
  _CxxThrowException(0,0);
}



void Unwind_1809080a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong localLong2;
  uint64 uVar3;
  
  localLong2 = *(longlong *)(memorySize + 0x68);
  uVar3 = 0xfffffffffffffffe;
  FUN_18004b730();
  FUN_180058370(localLong2 + 0x60,*(uint64 *)(localLong2 + 0x70),operationFlags,callbackFunction,uVar3);
  plocalUInt1 = *(uint64 **)(localLong2 + 0x40);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(localLong2 + 0x30,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_1809080b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong localLong2;
  uint64 uVar3;
  
  localLong2 = *(longlong *)(memorySize + 0x70);
  uVar3 = 0xfffffffffffffffe;
  FUN_18004b730();
  FUN_180058370(localLong2 + 0x40,*(uint64 *)(localLong2 + 0x50),operationFlags,callbackFunction,uVar3);
  plocalUInt1 = *(uint64 **)(localLong2 + 0x20);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(localLong2 + 0x10,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_1809080c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x78) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x78),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_1809080d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x78) + 0x30,
                *(uint64 *)(*(longlong *)(memorySize + 0x78) + 0x40),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_1809080e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x78) + 0x70);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x78) + 0x60,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_1809080f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x30),*(uint64 *)(*(longlong *)(memorySize + 0x30) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180908100(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x30),*(uint64 *)(*(longlong *)(memorySize + 0x30) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180908110(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x68) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x68),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180908120(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x68) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x68),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180908130(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x98);
  *plocalUInt1 = &threadLocalStorageData;
  if (plocalUInt1[1] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[1] = 0;
  *(uint32 *)(plocalUInt1 + 3) = 0;
  *plocalUInt1 = &threadLocalStorageCleanup;
  return;
}



void Unwind_180908140(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x98) + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180908150(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x80) + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180908160(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong localLong2;
  uint64 uVar3;
  
  localLong2 = *(longlong *)(memorySize + 0x80);
  uVar3 = 0xfffffffffffffffe;
  FUN_18004b730();
  FUN_180058370(localLong2 + 0x40,*(uint64 *)(localLong2 + 0x50),operationFlags,callbackFunction,uVar3);
  plocalUInt1 = *(uint64 **)(localLong2 + 0x20);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(localLong2 + 0x10,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180908170(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x60) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x60),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180908180(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x60) + 0x30,
                *(uint64 *)(*(longlong *)(memorySize + 0x60) + 0x40),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_180908190(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x60) + 0x70);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x60) + 0x60,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_1809081a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x68),*(uint64 *)(*(longlong *)(memorySize + 0x68) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_1809081b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x68),*(uint64 *)(*(longlong *)(memorySize + 0x68) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_1809081c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong localLong2;
  uint64 uVar3;
  
  localLong2 = *(longlong *)(memorySize + 0x40);
  uVar3 = 0xfffffffffffffffe;
  FUN_18004b730();
  FUN_180058370(localLong2 + 0x40,*(uint64 *)(localLong2 + 0x50),operationFlags,callbackFunction,uVar3);
  plocalUInt1 = *(uint64 **)(localLong2 + 0x20);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(localLong2 + 0x10,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_1809081d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x40),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_1809081e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x40) + 0x30,
                *(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x40),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_1809081f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x70);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x40) + 0x60,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180908200(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x58) + 0x18);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x58) + 8,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180908210(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x50) + 0x18);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x50) + 8,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Catch_180908220(uint64 resourceHandle,longlong memorySize)

{
  func_0x00018008d310(resourceHandle,*(uint64 *)(memorySize + 0x58));
                    // WARNING: Subroutine does not return
  _CxxThrowException(0,0);
}



void Catch_180908240(uint64 resourceHandle,longlong memorySize)

{
  func_0x00018008d310(resourceHandle,*(uint64 *)(memorySize + 0x90));
                    // WARNING: Subroutine does not return
  _CxxThrowException(0,0);
}



void Catch_180908270(uint64 resourceHandle,longlong memorySize)

{
  func_0x00018008d310(resourceHandle,*(uint64 *)(memorySize + 0x40));
                    // WARNING: Subroutine does not return
  _CxxThrowException(0,0);
}



void Catch_180908290(uint64 resourceHandle,longlong memorySize)

{
  func_0x00018008d310(resourceHandle,*(uint64 *)(memorySize + 0xa0));
                    // WARNING: Subroutine does not return
  _CxxThrowException(0,0);
}



void Unwind_1809082c0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x80) + 8,8,0x20,FUN_180045af0);
  return;
}



void Unwind_180908300(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x80) + 0x108,8,0x20,FUN_180045af0);
  return;
}



void Unwind_180908340(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x80) + 0x388);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x80) + 0x390);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180908360(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x80) + 0x3b0,0x20,0x20,FUN_180627b90,0xfffffffffffffffe);
  return;
}



void Unwind_180908380(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_1809083a0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x88) + 8,0x20,0x20,FUN_180627b90);
  return;
}



void Unwind_1809083e0(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = _Mtx_unlock(*(uint64 *)(memorySize + 0x98));
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



void Unwind_1809083f0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 8,8,0x20,FUN_180045af0);
  return;
}



void Unwind_180908420(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x108,8,0x20,FUN_180045af0);
  return;
}



void Unwind_180908460(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x40) + 0x388);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x390);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180908480(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x3b0,0x20,0x20,FUN_180627b90,0xfffffffffffffffe);
  return;
}



void Unwind_1809084a0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_1809084c0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x48) + 8,0x20,0x20,FUN_180627b90);
  return;
}



void Unwind_1809084f0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 8,8,4,FUN_180045af0);
  return;
}



void Unwind_180908520(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x30,0x20,0x50,FUN_180627b90);
  return;
}



void Unwind_180908550(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0xd20);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180908570(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 8,0x20,0x20,FUN_180627b90);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809085a0(void)

{
  _debugSystemHandle = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809085b0(void)

{
  _performanceMonitorHandle = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809085c0(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = _Mtx_unlock(*(uint64 *)(memorySize + 0x1d0));
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



void Unwind_1809085d0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x50) + 8,8,4,FUN_180045af0);
  return;
}



void Unwind_180908600(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x50) + 0x30,0x20,0x50,FUN_180627b90);
  return;
}



void Unwind_180908630(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0xd20);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180908650(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x50) + 0x10);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908660(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  uint64 localUInt2;
  
  localLong1 = *(longlong *)(memorySize + 0x50);
  localUInt2 = 0xfffffffffffffffe;
  _Mtx_destroy_in_situ();
  FUN_1808fc8a8(localLong1 + 0x3e0,0x20,0x20,FUN_180627b90,localUInt2);
  FUN_18005d580();
  FUN_1808fc8a8(localLong1 + 0x138,8,0x20,FUN_180045af0);
  FUN_1808fc8a8(localLong1 + 0x38,8,0x20,FUN_180045af0);
  return;
}



void Unwind_180908670(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong localLong2;
  uint64 uVar3;
  
  localLong2 = *(longlong *)(memorySize + 0x50);
  uVar3 = 0xfffffffffffffffe;
  *(longlong *)(localLong2 + 0x15d8) =
       *(longlong *)(&DAT_180c8ed30 + (longlong)*(int *)(localLong2 + 0x15e0) * 8) + -100000;
  FUN_180090b80((longlong *)(localLong2 + 0x8b0));
  *(uint32 *)(localLong2 + 0x15e8) = 0;
  plocalLong1 = *(longlong **)(localLong2 + 0x15d0);
  *(uint64 *)(localLong2 + 0x15d0) = 0;
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  if (*(longlong **)(localLong2 + 0x15d0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong2 + 0x15d0) + 0x38))();
  }
  FUN_1808fc8a8(localLong2 + 0x8e0,0x20,0x50,FUN_180627b90,uVar3);
  FUN_1808fc8a8(localLong2 + 0x8b8,8,4,FUN_180045af0);
  plocalLong1 = *(longlong **)(localLong2 + 0x8b0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180908690(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x1600);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809086b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x1698);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809086d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x1800);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809086f0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180908710(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x1858);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180908730(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x50) + 0x1868);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x1870);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180908750(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180908760(uint64 resourceHandle,longlong memorySize)

{
  _Mtx_destroy_in_situ(*(uint64 *)(memorySize + 0x60));
  return;
}



void Unwind_180908770(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x60);
  plocalLong1 = (longlong *)plocalLong2[1];
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180908780(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0x30) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0x30) + 0x38))();
  }
  return;
}



void Unwind_180908790(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x180) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809087a0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x1e0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809087b0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xf0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xf0) + 0x38))();
  }
  return;
}



void Unwind_1809087c0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xa0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809087d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  
  plocalLong1 = *(longlong **)(memorySize + 0x168);
  for (plocalLong2 = *(longlong **)(memorySize + 0x160); plocalLong2 != plocalLong1; plocalLong2 = plocalLong2 + 1) {
    if ((longlong *)*plocalLong2 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong2 + 0x38))();
    }
  }
  if (*(longlong *)(memorySize + 0x160) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809087e0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xc0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xc0) + 0x38))();
  }
  return;
}



void Unwind_1809087f0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xd0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xd0) + 0x38))();
  }
  return;
}



void Unwind_180908800(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xd8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xd8) + 0x38))();
  }
  return;
}



void Unwind_180908810(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x1e0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180908820(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xe8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xe8) + 0x38))();
  }
  return;
}



void Unwind_180908830(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xa0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908840(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xa0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908850(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xf8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xf8) + 0x38))();
  }
  return;
}



void Unwind_180908860(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  
  plocalLong1 = *(longlong **)(memorySize + 0x168);
  for (plocalLong2 = *(longlong **)(memorySize + 0x160); plocalLong2 != plocalLong1; plocalLong2 = plocalLong2 + 1) {
    if ((longlong *)*plocalLong2 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong2 + 0x38))();
    }
  }
  if (*(longlong *)(memorySize + 0x160) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180908870(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x160);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908880(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = _Mtx_unlock(*(uint64 *)(memorySize + 0xc0));
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



void Unwind_180908890(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = _Mtx_unlock(*(uint64 *)(memorySize + 200));
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



void Unwind_1809088a0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 0x48));
  }
  return;
}



void Unwind_1809088d0(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x28);
  *plocalUInt1 = &bufferControlData2;
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_1809088e0(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x28);
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_1809088f0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x28) = &threadSyncObject;
  return;
}



void Unwind_180908900(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x70);
  *(uint64 *)(localLong1 + 0x18) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x20) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x20) = 0;
  *(uint32 *)(localLong1 + 0x30) = 0;
  *(uint64 *)(localLong1 + 0x18) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180908910(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x20);
  *(uint64 *)(localLong1 + 0x18) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x20) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x20) = 0;
  *(uint32 *)(localLong1 + 0x30) = 0;
  *(uint64 *)(localLong1 + 0x18) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180908920(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 0x40));
  }
  return;
}



void Unwind_180908950(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 2) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffd;
    FUN_180045af0(*(uint64 *)(memorySize + 0x40));
  }
  return;
}



void Unwind_180908980(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  if (*(longlong *)(memorySize + 0x70) != 0) {
    FUN_18022f390();
  }
  FUN_18007f6a0(memorySize + 0x80);
  if (*(longlong **)(memorySize + 0x98) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x98) + 0x38))();
  }
  if (*(longlong **)(memorySize + 0x78) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x78) + 0x38))();
  }
  plocalLong1 = *(longlong **)(memorySize + 0x70);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180908990(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x78) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x78) + 0x38))();
  }
  return;
}



void Unwind_1809089a0(uint64 resourceHandle,longlong memorySize)

{
  FUN_18007f6a0();
  if (*(longlong **)(memorySize + 0x98) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x98) + 0x38))();
  }
  return;
}



void Unwind_1809089b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x20) + 0x60);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809089c0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_1809089d0(void)

{
  _Mtx_destroy_in_situ(0x180c91970);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809089e0(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  _DAT_180c8a9b0 = *(uint64 *)(memorySize + 0x70);
  localInt1 = _Mtx_unlock(0x180c91970);
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



void Unwind_1809089f0(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = _Mtx_unlock(*(uint64 *)(memorySize + 0x68));
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



void Unwind_180908a00(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = _Mtx_unlock(*(uint64 *)(memorySize + 0x148));
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



void Unwind_180908a10(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = _Mtx_unlock(*(uint64 *)(memorySize + 0x1d8));
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



void Unwind_180908a20(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x1a0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908a30(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x160);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908a40(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x120);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908a50(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x1a0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908a60(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x1a0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908a70(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x160);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908a80(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x120);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908a90(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x68);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908aa0(uint64 resourceHandle,longlong memorySize)

{
  FUN_180057010(memorySize + 0x170);
  return;
}



void Unwind_180908ab0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x60) + 0x48);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908ac0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x68);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908ad0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x68);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908ae0(uint64 resourceHandle,longlong memorySize)

{
  FUN_180057010(memorySize + 0x170);
  return;
}



void Unwind_180908af0(uint64 resourceHandle,longlong memorySize)

{
  FUN_180057010(memorySize + 0x170);
  return;
}



void Unwind_180908b00(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x30);
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180908b10(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x30) + 0x48);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908b20(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x118) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180908b30(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x110) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x110) + 0x38))();
  }
  return;
}



void Unwind_180908b40(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x88) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x88) + 0x38))();
  }
  return;
}



void Unwind_180908b50(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x30) + 0x28);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180908b60(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x30) + 0x20);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180908b70(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x88) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x88) + 0x38))();
  }
  return;
}



void Unwind_180908b80(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x30) + 0x28);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180908b90(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x1a8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x1a8) + 0x38))();
  }
  return;
}



void Unwind_180908ba0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xd8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xd8) + 0x38))();
  }
  *(uint64 *)(memorySize + 0xa8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xb0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xb0) = 0;
  *(uint32 *)(memorySize + 0xc0) = 0;
  *(uint64 *)(memorySize + 0xa8) = &threadLocalStorageCleanup;
  if (*(longlong **)(memorySize + 0xa0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xa0) + 0x38))();
  }
  return;
}



void Unwind_180908bb0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x1b0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x1b0) + 0x38))();
  }
  return;
}



void Unwind_180908bc0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x78) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x78) + 0x38))();
  }
  *(uint64 *)(memorySize + 0x48) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x50) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x50) = 0;
  *(uint32 *)(memorySize + 0x60) = 0;
  *(uint64 *)(memorySize + 0x48) = &threadLocalStorageCleanup;
  if (*(longlong **)(memorySize + 0x40) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x40) + 0x38))();
  }
  return;
}



void Unwind_180908bd0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x1b8);
  if (*(longlong **)(localLong1 + 0x58) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x58) + 0x38))();
  }
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  if (*(longlong **)(localLong1 + 0x20) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x20) + 0x38))();
  }
  return;
}



void Unwind_180908be0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xa0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xa0) + 0x38))();
  }
  return;
}



void Unwind_180908bf0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0xa8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xb0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xb0) = 0;
  *(uint32 *)(memorySize + 0xc0) = 0;
  *(uint64 *)(memorySize + 0xa8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180908c00(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xd8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xd8) + 0x38))();
  }
  return;
}



void Unwind_180908c10(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x1b8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180908c20(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x40) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x40) + 0x38))();
  }
  return;
}



void Unwind_180908c30(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x48) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x50) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x50) = 0;
  *(uint32 *)(memorySize + 0x60) = 0;
  *(uint64 *)(memorySize + 0x48) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180908c40(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x78) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x78) + 0x38))();
  }
  return;
}



void Unwind_180908c50(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x1b8) + 0x20);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180908c60(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x1b8);
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180908c70(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x1b8) + 0x58);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180908c80(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x1a0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180908c90(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(memorySize + 0xc0,8,0x10,FUN_180045af0,0xfffffffffffffffe);
  return;
}



void Unwind_180908ca0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(memorySize + 0xc0,8,0x10,FUN_180045af0);
  return;
}



void Unwind_180908cd0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(memorySize + 0xc0,8,0x10,FUN_180045af0);
  return;
}



void Unwind_180908d00(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x40),8,0x10,FUN_180045af0);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180908d30(void)

{
  byte bVar1;
  
  EnterCriticalSection(0x180c82210);
  _DAT_180d49210 = 0;
  LeaveCriticalSection(0x180c82210);
  if (_DAT_180c82240 != 0) {
    SetEvent();
                    // WARNING: Could not recover jumptable at 0x0001808fcc41. Too many branches
                    // WARNING: Treating indirect jump as call
    ResetEvent(_DAT_180c82240);
    return;
  }
  bVar1 = (byte)_DAT_180bf00a8 & 0x3f;
                    // WARNING: Could not recover jumptable at 0x0001808ffe70. Too many branches
                    // WARNING: Treating indirect jump as call
  (*(code *)((_DAT_180bf00a8 ^ _DAT_180c82250) >> bVar1 |
            (_DAT_180bf00a8 ^ _DAT_180c82250) << 0x40 - bVar1))(0x180c82238);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180908d40(void)

{
  _DAT_180d49218 = &threadLocalStorageCleanup;
  return;
}



void Unwind_180908d50(uint64 resourceHandle,longlong memorySize)

{
  FUN_180057010(memorySize + 0xc0);
  return;
}



void Unwind_180908d60(uint64 resourceHandle,longlong memorySize)

{
  FUN_180057010(memorySize + 0xc0);
  return;
}



void Unwind_180908d70(uint64 resourceHandle,longlong memorySize)

{
  FUN_180057010(memorySize + 0xc0);
  return;
}



void Unwind_180908d80(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    FUN_180627b90(memorySize + 0x58);
  }
  return;
}



void Unwind_180908db0(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x108);
  *plocalUInt1 = &threadLocalStorageData;
  if (plocalUInt1[1] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[1] = 0;
  *(uint32 *)(plocalUInt1 + 3) = 0;
  *plocalUInt1 = &threadLocalStorageCleanup;
  return;
}



void Unwind_180908dc0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x108);
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180908dd0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x108) + 0x48);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908de0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x110) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180908df0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0xa0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908e00(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0xa0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908e10(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 0x88));
  }
  return;
}



void Unwind_180908e40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x60) + 0x30);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x60) + 0x20,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180908e50(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x60) + 0x20);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908e60(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x68);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908e70(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x68);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180908e80(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  uint64 localUInt2;
  
  localLong1 = *(longlong *)(memorySize + 0x60);
  localUInt2 = 0xfffffffffffffffe;
  _Mtx_destroy_in_situ();
  FUN_180058370(localLong1 + 0x110,*(uint64 *)(localLong1 + 0x120),operationFlags,callbackFunction,localUInt2);
  FUN_180058370(localLong1 + 0xe0,*(uint64 *)(localLong1 + 0xf0));
  FUN_180058370(localLong1 + 0xb0,*(uint64 *)(localLong1 + 0xc0));
  FUN_1800593f0(localLong1 + 0x80,*(uint64 *)(localLong1 + 0x90));
  FUN_180058710(localLong1 + 0x50,*(uint64 *)(localLong1 + 0x60));
  FUN_1800593f0(localLong1 + 0x20,*(uint64 *)(localLong1 + 0x30));
  return;
}



void Unwind_180908e90(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180908ea0(uint64 resourceHandle,longlong memorySize)

{
                    // WARNING: Could not recover jumptable at 0x000180908ea7. Too many branches
                    // WARNING: Treating indirect jump as call
  __1__basic_streambuf_DU__char_traits_D_std___std__UEAA_XZ(*(uint64 *)(memorySize + 0x40));
  return;
}



void Unwind_180908eb0(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  if (*(longlong **)(memorySize + 0x30) != (longlong *)0x0) {
    plocalUInt1 = (uint64 *)(**(code **)(**(longlong **)(memorySize + 0x30) + 0x10))();
    if (plocalUInt1 != (uint64 *)0x0) {
                    // WARNING: Could not recover jumptable at 0x00018009fb51. Too many branches
                    // WARNING: Treating indirect jump as call
      (**(code **)*plocalUInt1)(plocalUInt1,1);
      return;
    }
  }
  return;
}



void Unwind_180908ec0(uint64 resourceHandle,longlong memorySize)

{
  FUN_180067070(memorySize + 0x60);
  return;
}



void Unwind_180908ed0(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x20);
  *plocalUInt1 = &eventHandlerTable;
  __std_exception_destroy(plocalUInt1 + 1);
  return;
}



void Unwind_180908ee0(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x40);
  *plocalUInt1 = &eventHandlerTable;
  __std_exception_destroy(plocalUInt1 + 1);
  return;
}



void Unwind_180908ef0(uint64 resourceHandle,longlong memorySize)

{
                    // WARNING: Could not recover jumptable at 0x000180908ef7. Too many branches
                    // WARNING: Treating indirect jump as call
  __1_Lockit_std__QEAA_XZ(memorySize + 0x60);
  return;
}



void Unwind_180908f00(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x70);
  if (plocalUInt1 != (uint64 *)0x0) {
                    // WARNING: Could not recover jumptable at 0x00018009f9c0. Too many branches
                    // WARNING: Treating indirect jump as call
    (**(code **)*plocalUInt1)(plocalUInt1,1);
    return;
  }
  return;
}



void Unwind_180908f10(uint64 resourceHandle,longlong memorySize)

{
                    // WARNING: Could not recover jumptable at 0x000180908f22. Too many branches
                    // WARNING: Treating indirect jump as call
  __1__basic_ostream_DU__char_traits_D_std___std__UEAA_XZ(*(longlong *)(memorySize + 0x40) + -0x98);
  return;
}



void Unwind_180908f30(uint64 resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  longlong localLong2;
  longlong localLong3;
  uint64 *puVar4;
  
  localLong3 = *(longlong *)(memorySize + 0x40);
  puVar4 = (uint64 *)(localLong3 + -0xa0);
  *puVar4 = &uiWidgetTree;
  if ((*(longlong *)(localLong3 + -0x20) != 0) && (**(longlong **)(localLong3 + -0x88) == localLong3 + -0x30)) {
    localUInt1 = *(uint64 *)(localLong3 + -0x10);
    localLong2 = *(longlong *)(localLong3 + -0x18);
    **(longlong **)(localLong3 + -0x88) = localLong2;
    **(longlong **)(localLong3 + -0x68) = localLong2;
    **(int **)(localLong3 + -0x50) = (int)localUInt1 - (int)localLong2;
  }
  if (*(char *)(localLong3 + -0x24) != '\0') {
    FUN_1800a19c0(puVar4);
  }
                    // WARNING: Could not recover jumptable at 0x00018009fbce. Too many branches
                    // WARNING: Treating indirect jump as call
  __1__basic_streambuf_DU__char_traits_D_std___std__UEAA_XZ(puVar4);
  return;
}



data * Catch_180908f50(uint64 resourceHandle,longlong memorySize)

{
  _setstate___basic_ios_DU__char_traits_D_std___std__QEAAXH_N_Z
            ((longlong)*(int *)(**(longlong **)(memorySize + 0x70) + 4) +
             (longlong)*(longlong **)(memorySize + 0x70),4,1);
  return &unknown_1800a0f67;
}



void Unwind_180908f90(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  char cVar2;
  
  cVar2 = _uncaught_exception_std__YA_NXZ();
  if (cVar2 == '\0') {
    __Osfx___basic_ostream_DU__char_traits_D_std___std__QEAAXXZ(*(longlong *)(memorySize + 0x38));
  }
  plocalLong1 = *(longlong **)(memorySize + 0x38);
  plocalLong1 = *(longlong **)((longlong)*(int *)(*plocalLong1 + 4) + 0x48 + (longlong)plocalLong1);
  if (plocalLong1 != (longlong *)0x0) {
    if (*(code **)(*plocalLong1 + 0x10) != (code *)&inputStateBuffer) {
      (**(code **)(*plocalLong1 + 0x10))();
      return;
    }
    if (plocalLong1[0x10] != 0) {
      _unlock_file();
      return;
    }
  }
  return;
}



void Unwind_180908fa0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)
            ((longlong)*(int *)(**(longlong **)(memorySize + 0x38) + 4) + 0x48 +
            (longlong)*(longlong **)(memorySize + 0x38));
  if (plocalLong1 != (longlong *)0x0) {
    if (*(code **)(*plocalLong1 + 0x10) != (code *)&inputStateBuffer) {
      (**(code **)(*plocalLong1 + 0x10))();
      return;
    }
    if (plocalLong1[0x10] != 0) {
      _unlock_file();
      return;
    }
  }
  return;
}



void Unwind_180908fb0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)
            ((longlong)*(int *)(*(longlong *)**(longlong **)(memorySize + 0x40) + 4) + 0x48 +
            **(longlong **)(memorySize + 0x40));
  if (plocalLong1 != (longlong *)0x0) {
    if (*(code **)(*plocalLong1 + 0x10) != (code *)&inputStateBuffer) {
      (**(code **)(*plocalLong1 + 0x10))();
      return;
    }
    if (plocalLong1[0x10] != 0) {
      _unlock_file();
      return;
    }
  }
  return;
}



data * Catch_180908fc0(uint64 resourceHandle,longlong memorySize)

{
  _setstate___basic_ios_DU__char_traits_D_std___std__QEAAXH_N_Z
            ((longlong)*(int *)(**(longlong **)(memorySize + 0x70) + 4) +
             (longlong)*(longlong **)(memorySize + 0x70),4,1);
  return &unknown_1800a127e;
}



void Unwind_180909000(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x1a0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909010(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  
  localLong1 = memorySize + 0x128;
  *(data **)((longlong)*(int *)(*(longlong *)(memorySize + 0x80) + 4) + -0xa8 + localLong1) =
       &inputMappingTable;
  localInt2 = *(int *)(*(longlong *)(memorySize + 0x80) + 4);
  *(int *)((longlong)localInt2 + -0xac + localLong1) = localInt2 + -0xa8;
  FUN_18009fb60(memorySize + 0x88);
  __1__basic_ostream_DU__char_traits_D_std___std__UEAA_XZ(memorySize + 0x90);
                    // WARNING: Could not recover jumptable at 0x00018009fc52. Too many branches
                    // WARNING: Treating indirect jump as call
  __1__basic_ios_DU__char_traits_D_std___std__UEAA_XZ(localLong1);
  return;
}



void Unwind_180909020(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    __1__basic_ios_DU__char_traits_D_std___std__UEAA_XZ(memorySize + 0x128);
  }
  return;
}



void Unwind_180909060(uint64 resourceHandle,longlong memorySize)

{
                    // WARNING: Could not recover jumptable at 0x00018090906b. Too many branches
                    // WARNING: Treating indirect jump as call
  __1__basic_ostream_DU__char_traits_D_std___std__UEAA_XZ(memorySize + 0x90);
  return;
}



void Unwind_180909080(uint64 resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  longlong localLong2;
  uint64 *puVar3;
  
  puVar3 = (uint64 *)(memorySize + 0x88);
  *puVar3 = &uiWidgetTree;
  if ((*(longlong *)(memorySize + 0x108) != 0) && (**(longlong **)(memorySize + 0xa0) == memorySize + 0xf8))
  {
    localUInt1 = *(uint64 *)(memorySize + 0x118);
    localLong2 = *(longlong *)(memorySize + 0x110);
    **(longlong **)(memorySize + 0xa0) = localLong2;
    **(longlong **)(memorySize + 0xc0) = localLong2;
    **(int **)(memorySize + 0xd8) = (int)localUInt1 - (int)localLong2;
  }
  if (*(char *)(memorySize + 0x104) != '\0') {
    FUN_1800a19c0(puVar3);
  }
                    // WARNING: Could not recover jumptable at 0x00018009fbce. Too many branches
                    // WARNING: Treating indirect jump as call
  __1__basic_streambuf_DU__char_traits_D_std___std__UEAA_XZ(puVar3);
  return;
}



void Unwind_180909090(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x20) + 0x48);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809090a0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x60);
  if (*(longlong **)(localLong1 + 0x1d50) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x1d50) + 0x38))();
  }
  FUN_1800ad6f0();
  if (*(longlong **)(localLong1 + 0x1cd0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x1cd0) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x1cc8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x1cc8) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x1cc0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x1cc0) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x1cb8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x1cb8) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x1cb0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x1cb0) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x1ca8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x1ca8) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x1ca0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x1ca0) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x1c98) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x1c98) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x1c90) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x1c90) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x1c88) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x1c88) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x1c80) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x1c80) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x1c78) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x1c78) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x1c70) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x1c70) + 0x38))();
  }
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_1809090b0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x60) + 0x121c0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809090d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x121e0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809090f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1c70);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180909110(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1c78);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180909130(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1c80);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180909150(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1c88);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180909170(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1c90);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180909190(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1c98);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809091b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1ca0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809091d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1ca8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809091f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1cb0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180909210(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1cb8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180909230(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1cc0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180909250(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1cc8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180909270(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1cd0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180909290(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong *puVar4;
  ulonglong uVar5;
  ulonglong uVar6;
  
  puVar4 = (ulonglong *)(*(longlong *)(memorySize + 0x40) + 0x1d20);
  uVar6 = *(ulonglong *)(*(longlong *)(memorySize + 0x40) + 0x1d28);
  for (uVar5 = *puVar4; uVar5 != uVar6; uVar5 = uVar5 + 0xd0) {
    *(data **)(uVar5 + 0x10) = &threadLocalStorageCleanup;
  }
  plocalUInt2 = (uint64 *)*puVar4;
  if (plocalUInt2 != (uint64 *)0x0) {
    uVar6 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
    if (uVar6 != 0) {
      localLong3 = uVar6 + 0x80 + ((longlong)plocalUInt2 - uVar6 >> 0x10) * 0x50;
      localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
      if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
        *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
        *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
        plocalInt1 = (int *)(localLong3 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                            plocalUInt2,uVar6,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_1809092b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1d50);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809092d0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  ulonglong *puVar3;
  longlong lVar4;
  ulonglong uVar5;
  ulonglong uVar6;
  
  puVar3 = *(ulonglong **)(memorySize + 0x48);
  uVar6 = puVar3[1];
  for (uVar5 = *puVar3; uVar5 != uVar6; uVar5 = uVar5 + 0xd0) {
    *(data **)(uVar5 + 0x10) = &threadLocalStorageCleanup;
  }
  plocalUInt2 = (uint64 *)*puVar3;
  if (plocalUInt2 != (uint64 *)0x0) {
    uVar6 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
    if (uVar6 != 0) {
      lVar4 = uVar6 + 0x80 + ((longlong)plocalUInt2 - uVar6 >> 0x10) * 0x50;
      lVar4 = lVar4 - (ulonglong)*(uint *)(lVar4 + 4);
      if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar4 + 0xe) == '\0')) {
        *plocalUInt2 = *(uint64 *)(lVar4 + 0x20);
        *(uint64 **)(lVar4 + 0x20) = plocalUInt2;
        plocalInt1 = (int *)(lVar4 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                            plocalUInt2,uVar6,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_1809092e0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  ulonglong *puVar3;
  longlong lVar4;
  ulonglong uVar5;
  ulonglong uVar6;
  
  puVar3 = *(ulonglong **)(memorySize + 0x40);
  uVar6 = puVar3[1];
  for (uVar5 = *puVar3; uVar5 != uVar6; uVar5 = uVar5 + 0xd0) {
    *(data **)(uVar5 + 0x10) = &threadLocalStorageCleanup;
  }
  plocalUInt2 = (uint64 *)*puVar3;
  if (plocalUInt2 != (uint64 *)0x0) {
    uVar6 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
    if (uVar6 != 0) {
      lVar4 = uVar6 + 0x80 + ((longlong)plocalUInt2 - uVar6 >> 0x10) * 0x50;
      lVar4 = lVar4 - (ulonglong)*(uint *)(lVar4 + 4);
      if ((*(void ***)(uVar6 + 0x70) == &ExceptionList) && (*(char *)(lVar4 + 0xe) == '\0')) {
        *plocalUInt2 = *(uint64 *)(lVar4 + 0x20);
        *(uint64 **)(lVar4 + 0x20) = plocalUInt2;
        plocalInt1 = (int *)(lVar4 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar6,CONCAT71(0xff000000,*(void ***)(uVar6 + 0x70) == &ExceptionList),
                            plocalUInt2,uVar6,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_1809092f0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x90) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909300(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x58) + 0x10) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909310(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x90) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909320(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  uint64 *plocalUInt2;
  uint64 *puVar3;
  longlong lVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  puVar3 = *(uint64 **)(memorySize + 0x80);
  *puVar3 = &unknown_180a17010;
  if ((longlong *)puVar3[0x1049] != (longlong *)0x0) {
    (**(code **)(*(longlong *)puVar3[0x1049] + 0x38))();
  }
  uVar6 = 0;
  plocalLong1 = puVar3 + 0x1012;
  lVar4 = *plocalLong1;
  if (puVar3[0x1013] - lVar4 >> 3 != 0) {
    do {
      plocalUInt2 = *(uint64 **)(uVar6 * 8 + lVar4);
      if (plocalUInt2 != (uint64 *)0x0) {
        if ((longlong *)plocalUInt2[0xd] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0xd] + 0x10))();
          plocalUInt2[0xd] = 0;
        }
        if ((longlong *)plocalUInt2[0xe] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0xe] + 0x10))();
          plocalUInt2[0xe] = 0;
        }
        if ((longlong *)plocalUInt2[0xf] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0xf] + 0x10))();
          plocalUInt2[0xf] = 0;
        }
        if ((longlong *)plocalUInt2[0x10] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0x10] + 0x10))();
          plocalUInt2[0x10] = 0;
        }
        if ((longlong *)plocalUInt2[0x11] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0x11] + 0x10))();
          plocalUInt2[0x11] = 0;
        }
        *plocalUInt2 = &threadLocalStorageCleanup;
                    // WARNING: Subroutine does not return
        HandleCriticalError(plocalUInt2);
      }
      *(uint64 *)(uVar6 * 8 + *plocalLong1) = 0;
      uVar6 = (ulonglong)((int)uVar6 + 1);
      lVar4 = *plocalLong1;
    } while (uVar6 < (ulonglong)(puVar3[0x1013] - lVar4 >> 3));
  }
  puVar3[0x1013] = lVar4;
  plocalUInt2 = (uint64 *)puVar3[0x1043];
  if (plocalUInt2 != (uint64 *)0x0) {
    FUN_1800f74f0(puVar3 + 0x1041,*plocalUInt2);
    plocalUInt2[4] = &threadLocalStorageCleanup;
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt2);
  }
  FUN_180058370(puVar3 + 0x103b,puVar3[0x103d]);
  FUN_180058370(puVar3 + 0x1035,puVar3[0x1037]);
  FUN_180058370(puVar3 + 0x102f,puVar3[0x1031]);
  FUN_1808fc8a8(puVar3 + 0x101b,0x20,5,FUN_180046860);
  if (*plocalLong1 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  FUN_1808fc8a8(puVar3 + 0xffd,0x20,5,FUN_180046860);
  lVar4 = puVar3[0xffa];
  for (lVar5 = puVar3[0xff9]; lVar5 != lVar4; lVar5 = lVar5 + 0x40) {
    FUN_180152b00(lVar5);
  }
  if (puVar3[0xff9] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_180909330(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180909340(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180909350(uint64 resourceHandle,longlong memorySize)

{
  _Mtx_destroy_in_situ(*(uint64 *)(memorySize + 0x128));
  return;
}



void Unwind_180909360(uint64 resourceHandle,uint *memorySize)

{
  if ((*memorySize & 1) != 0) {
    *memorySize = *memorySize & 0xfffffffe;
    FUN_18005d560(*(uint64 *)(memorySize + 10));
  }
  return;
}



void Unwind_180909390(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x98) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x98),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809093a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x98) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x98),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809093b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  uint64 *plocalUInt2;
  uint64 *puVar3;
  longlong lVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  puVar3 = *(uint64 **)(memorySize + 0x90);
  *puVar3 = &unknown_180a17010;
  if ((longlong *)puVar3[0x1049] != (longlong *)0x0) {
    (**(code **)(*(longlong *)puVar3[0x1049] + 0x38))();
  }
  uVar6 = 0;
  plocalLong1 = puVar3 + 0x1012;
  lVar4 = *plocalLong1;
  if (puVar3[0x1013] - lVar4 >> 3 != 0) {
    do {
      plocalUInt2 = *(uint64 **)(uVar6 * 8 + lVar4);
      if (plocalUInt2 != (uint64 *)0x0) {
        if ((longlong *)plocalUInt2[0xd] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0xd] + 0x10))();
          plocalUInt2[0xd] = 0;
        }
        if ((longlong *)plocalUInt2[0xe] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0xe] + 0x10))();
          plocalUInt2[0xe] = 0;
        }
        if ((longlong *)plocalUInt2[0xf] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0xf] + 0x10))();
          plocalUInt2[0xf] = 0;
        }
        if ((longlong *)plocalUInt2[0x10] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0x10] + 0x10))();
          plocalUInt2[0x10] = 0;
        }
        if ((longlong *)plocalUInt2[0x11] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0x11] + 0x10))();
          plocalUInt2[0x11] = 0;
        }
        *plocalUInt2 = &threadLocalStorageCleanup;
                    // WARNING: Subroutine does not return
        HandleCriticalError(plocalUInt2);
      }
      *(uint64 *)(uVar6 * 8 + *plocalLong1) = 0;
      uVar6 = (ulonglong)((int)uVar6 + 1);
      lVar4 = *plocalLong1;
    } while (uVar6 < (ulonglong)(puVar3[0x1013] - lVar4 >> 3));
  }
  puVar3[0x1013] = lVar4;
  plocalUInt2 = (uint64 *)puVar3[0x1043];
  if (plocalUInt2 != (uint64 *)0x0) {
    FUN_1800f74f0(puVar3 + 0x1041,*plocalUInt2);
    plocalUInt2[4] = &threadLocalStorageCleanup;
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt2);
  }
  FUN_180058370(puVar3 + 0x103b,puVar3[0x103d]);
  FUN_180058370(puVar3 + 0x1035,puVar3[0x1037]);
  FUN_180058370(puVar3 + 0x102f,puVar3[0x1031]);
  FUN_1808fc8a8(puVar3 + 0x101b,0x20,5,FUN_180046860);
  if (*plocalLong1 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  FUN_1808fc8a8(puVar3 + 0xffd,0x20,5,FUN_180046860);
  lVar4 = puVar3[0xffa];
  for (lVar5 = puVar3[0xff9]; lVar5 != lVar4; lVar5 = lVar5 + 0x40) {
    FUN_180152b00(lVar5);
  }
  if (puVar3[0xff9] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_1809093c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong *plocalLong1;
  uint64 *plocalUInt2;
  longlong localLong3;
  longlong lVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  localLong3 = *(longlong *)(memorySize + 0x90);
  uVar6 = 0;
  plocalLong1 = (longlong *)(localLong3 + 0x8090);
  lVar4 = *plocalLong1;
  if (*(longlong *)(localLong3 + 0x8098) - lVar4 >> 3 != 0) {
    do {
      plocalUInt2 = *(uint64 **)(uVar6 * 8 + lVar4);
      if (plocalUInt2 != (uint64 *)0x0) {
        if ((longlong *)plocalUInt2[0xd] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0xd] + 0x10))();
          plocalUInt2[0xd] = 0;
        }
        if ((longlong *)plocalUInt2[0xe] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0xe] + 0x10))();
          plocalUInt2[0xe] = 0;
        }
        if ((longlong *)plocalUInt2[0xf] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0xf] + 0x10))();
          plocalUInt2[0xf] = 0;
        }
        if ((longlong *)plocalUInt2[0x10] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0x10] + 0x10))();
          plocalUInt2[0x10] = 0;
        }
        if ((longlong *)plocalUInt2[0x11] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0x11] + 0x10))();
          plocalUInt2[0x11] = 0;
        }
        *plocalUInt2 = &threadLocalStorageCleanup;
                    // WARNING: Subroutine does not return
        HandleCriticalError(plocalUInt2);
      }
      *(uint64 *)(uVar6 * 8 + *plocalLong1) = 0;
      uVar6 = (ulonglong)((int)uVar6 + 1);
      lVar4 = *plocalLong1;
    } while (uVar6 < (ulonglong)(*(longlong *)(localLong3 + 0x8098) - lVar4 >> 3));
  }
  *(longlong *)(localLong3 + 0x8098) = lVar4;
  plocalUInt2 = *(uint64 **)(localLong3 + 0x8218);
  if (plocalUInt2 != (uint64 *)0x0) {
    FUN_1800f74f0(localLong3 + 0x8208,*plocalUInt2);
    plocalUInt2[4] = &threadLocalStorageCleanup;
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt2);
  }
  FUN_180058370(localLong3 + 0x81d8,*(uint64 *)(localLong3 + 0x81e8),operationFlags,callbackFunction,0xfffffffffffffffe);
  FUN_180058370(localLong3 + 0x81a8,*(uint64 *)(localLong3 + 0x81b8));
  FUN_180058370(localLong3 + 0x8178,*(uint64 *)(localLong3 + 0x8188));
  FUN_1808fc8a8(localLong3 + 0x80d8,0x20,5,FUN_180046860);
  if (*plocalLong1 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  FUN_1808fc8a8(localLong3 + 0x7fe8,0x20,5,FUN_180046860);
  lVar4 = *(longlong *)(localLong3 + 0x7fd0);
  for (lVar5 = *(longlong *)(localLong3 + 0x7fc8); lVar5 != lVar4; lVar5 = lVar5 + 0x40) {
    FUN_180152b00(lVar5);
  }
  if (*(longlong *)(localLong3 + 0x7fc8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_1809093e0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x90) + 0x8248);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180909400(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x48) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x48),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180909410(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x68) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909420(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x90) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909430(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x38) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909440(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xb8) + 0x28);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180909450(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xb8) + 0x28);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180909460(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0xb1) == '\0') {
    if ((*(char *)(memorySize + 0xb0) == '\0') && (*(longlong *)(memorySize + 0xa0) != 0)) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    *(longlong *)(memorySize + 0xa0) = 0;
    *(uint64 *)(memorySize + 0xa8) = 0;
    *(byte *)(memorySize + 0xb0) = 0;
  }
  return;
}



void Unwind_180909470(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x70) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x70),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180909480(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong localLong2;
  
  localLong1 = *(longlong *)(memorySize + 0x148);
  for (localLong2 = *(longlong *)(memorySize + 0x140); localLong2 != localLong1; localLong2 = localLong2 + 0x78) {
    FUN_1800adb30(localLong2);
  }
  if (*(longlong *)(memorySize + 0x140) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180909490(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x6a0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809094a0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x6a0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809094b0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong localLong2;
  
  localLong1 = *(longlong *)(memorySize + 0x148);
  for (localLong2 = *(longlong *)(memorySize + 0x140); localLong2 != localLong1; localLong2 = localLong2 + 0x78) {
    FUN_1800adb30(localLong2);
  }
  if (*(longlong *)(memorySize + 0x140) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809094c0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x40);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x78) {
    FUN_1800adb30(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809094d0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong localLong2;
  
  localLong1 = *(longlong *)(memorySize + 0x1c0);
  for (localLong2 = *(longlong *)(memorySize + 0x1b8); localLong2 != localLong1; localLong2 = localLong2 + 0x78) {
    FUN_1800adb30(localLong2);
  }
  if (*(longlong *)(memorySize + 0x1b8) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809094e0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x6f0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809094f0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x218) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x220) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x220) = 0;
  *(uint32 *)(memorySize + 0x230) = 0;
  *(uint64 *)(memorySize + 0x218) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909500(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x298) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x2a0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x2a0) = 0;
  *(uint32 *)(memorySize + 0x2b0) = 0;
  *(uint64 *)(memorySize + 0x298) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909510(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x4b0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909520(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x278) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x280) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x280) = 0;
  *(uint32 *)(memorySize + 0x290) = 0;
  *(uint64 *)(memorySize + 0x278) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909530(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x5d0) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180909540(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(memorySize + 0x268) != 0) {
    fclose();
    *(uint64 *)(memorySize + 0x268) = 0;
    LOCK();
    _DAT_180c8ed60 = _DAT_180c8ed60 + -1;
    UNLOCK();
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180909550(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = (longlong *)(memorySize + 0x1e8);
  if (*plocalLong1 != -1) {
    LOCK();
    _DAT_180c8ed64 = _DAT_180c8ed64 + -1;
    UNLOCK();
    CloseHandle(*plocalLong1);
    *plocalLong1 = -1;
  }
  return;
}



void Unwind_180909560(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x1f8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x200) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x200) = 0;
  *(uint32 *)(memorySize + 0x210) = 0;
  *(uint64 *)(memorySize + 0x1f8) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180909570(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(memorySize + 0x2e0) != 0) {
    fclose();
    *(uint64 *)(memorySize + 0x2e0) = 0;
    LOCK();
    _DAT_180c8ed60 = _DAT_180c8ed60 + -1;
    UNLOCK();
  }
  return;
}



void Unwind_180909580(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0xf0) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xf8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xf8) = 0;
  *(uint32 *)(memorySize + 0x108) = 0;
  *(uint64 *)(memorySize + 0xf0) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180909590(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(memorySize + 0x2c8) != 0) {
    fclose();
    *(uint64 *)(memorySize + 0x2c8) = 0;
    LOCK();
    _DAT_180c8ed60 = _DAT_180c8ed60 + -1;
    UNLOCK();
  }
  return;
}



void Unwind_1809095a0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x198) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x1a0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x1a0) = 0;
  *(uint32 *)(memorySize + 0x1b0) = 0;
  *(uint64 *)(memorySize + 0x198) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809095b0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x6f0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809095c0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x4b0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809095d0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 400) & 1) != 0) {
    *(uint *)(memorySize + 400) = *(uint *)(memorySize + 400) & 0xfffffffe;
    FUN_180044a30(memorySize + 0x390);
  }
  return;
}



void Unwind_180909600(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x5d0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909610(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x2f0) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x2f8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x2f8) = 0;
  *(uint32 *)(memorySize + 0x308) = 0;
  *(uint64 *)(memorySize + 0x2f0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909620(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x2f0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909630(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x1f8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909640(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x198) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909650(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong localLong2;
  
  localLong1 = *(longlong *)(memorySize + 0x1c0);
  for (localLong2 = *(longlong *)(memorySize + 0x1b8); localLong2 != localLong1; localLong2 = localLong2 + 0x78) {
    FUN_1800adb30(localLong2);
  }
  if (*(longlong *)(memorySize + 0x1b8) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180909660(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xd8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180909670(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xd8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180909680(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0xb8) + 8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180909690(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0xb8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809096a0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0xb8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809096b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  uint64 *plocalUInt2;
  uint64 *puVar3;
  longlong lVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  puVar3 = *(uint64 **)(memorySize + 0x40);
  *puVar3 = &unknown_180a17010;
  if ((longlong *)puVar3[0x1049] != (longlong *)0x0) {
    (**(code **)(*(longlong *)puVar3[0x1049] + 0x38))();
  }
  uVar6 = 0;
  plocalLong1 = puVar3 + 0x1012;
  lVar4 = *plocalLong1;
  if (puVar3[0x1013] - lVar4 >> 3 != 0) {
    do {
      plocalUInt2 = *(uint64 **)(uVar6 * 8 + lVar4);
      if (plocalUInt2 != (uint64 *)0x0) {
        if ((longlong *)plocalUInt2[0xd] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0xd] + 0x10))();
          plocalUInt2[0xd] = 0;
        }
        if ((longlong *)plocalUInt2[0xe] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0xe] + 0x10))();
          plocalUInt2[0xe] = 0;
        }
        if ((longlong *)plocalUInt2[0xf] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0xf] + 0x10))();
          plocalUInt2[0xf] = 0;
        }
        if ((longlong *)plocalUInt2[0x10] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0x10] + 0x10))();
          plocalUInt2[0x10] = 0;
        }
        if ((longlong *)plocalUInt2[0x11] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0x11] + 0x10))();
          plocalUInt2[0x11] = 0;
        }
        *plocalUInt2 = &threadLocalStorageCleanup;
                    // WARNING: Subroutine does not return
        HandleCriticalError(plocalUInt2);
      }
      *(uint64 *)(uVar6 * 8 + *plocalLong1) = 0;
      uVar6 = (ulonglong)((int)uVar6 + 1);
      lVar4 = *plocalLong1;
    } while (uVar6 < (ulonglong)(puVar3[0x1013] - lVar4 >> 3));
  }
  puVar3[0x1013] = lVar4;
  plocalUInt2 = (uint64 *)puVar3[0x1043];
  if (plocalUInt2 != (uint64 *)0x0) {
    FUN_1800f74f0(puVar3 + 0x1041,*plocalUInt2);
    plocalUInt2[4] = &threadLocalStorageCleanup;
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt2);
  }
  FUN_180058370(puVar3 + 0x103b,puVar3[0x103d]);
  FUN_180058370(puVar3 + 0x1035,puVar3[0x1037]);
  FUN_180058370(puVar3 + 0x102f,puVar3[0x1031]);
  FUN_1808fc8a8(puVar3 + 0x101b,0x20,5,FUN_180046860);
  if (*plocalLong1 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  FUN_1808fc8a8(puVar3 + 0xffd,0x20,5,FUN_180046860);
  lVar4 = puVar3[0xffa];
  for (lVar5 = puVar3[0xff9]; lVar5 != lVar4; lVar5 = lVar5 + 0x40) {
    FUN_180152b00(lVar5);
  }
  if (puVar3[0xff9] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_1809096c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong *plocalLong1;
  uint64 *plocalUInt2;
  longlong localLong3;
  longlong lVar4;
  longlong lVar5;
  ulonglong uVar6;
  
  localLong3 = *(longlong *)(memorySize + 0x40);
  uVar6 = 0;
  plocalLong1 = (longlong *)(localLong3 + 0x8090);
  lVar4 = *plocalLong1;
  if (*(longlong *)(localLong3 + 0x8098) - lVar4 >> 3 != 0) {
    do {
      plocalUInt2 = *(uint64 **)(uVar6 * 8 + lVar4);
      if (plocalUInt2 != (uint64 *)0x0) {
        if ((longlong *)plocalUInt2[0xd] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0xd] + 0x10))();
          plocalUInt2[0xd] = 0;
        }
        if ((longlong *)plocalUInt2[0xe] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0xe] + 0x10))();
          plocalUInt2[0xe] = 0;
        }
        if ((longlong *)plocalUInt2[0xf] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0xf] + 0x10))();
          plocalUInt2[0xf] = 0;
        }
        if ((longlong *)plocalUInt2[0x10] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0x10] + 0x10))();
          plocalUInt2[0x10] = 0;
        }
        if ((longlong *)plocalUInt2[0x11] != (longlong *)0x0) {
          (**(code **)(*(longlong *)plocalUInt2[0x11] + 0x10))();
          plocalUInt2[0x11] = 0;
        }
        *plocalUInt2 = &threadLocalStorageCleanup;
                    // WARNING: Subroutine does not return
        HandleCriticalError(plocalUInt2);
      }
      *(uint64 *)(uVar6 * 8 + *plocalLong1) = 0;
      uVar6 = (ulonglong)((int)uVar6 + 1);
      lVar4 = *plocalLong1;
    } while (uVar6 < (ulonglong)(*(longlong *)(localLong3 + 0x8098) - lVar4 >> 3));
  }
  *(longlong *)(localLong3 + 0x8098) = lVar4;
  plocalUInt2 = *(uint64 **)(localLong3 + 0x8218);
  if (plocalUInt2 != (uint64 *)0x0) {
    FUN_1800f74f0(localLong3 + 0x8208,*plocalUInt2);
    plocalUInt2[4] = &threadLocalStorageCleanup;
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt2);
  }
  FUN_180058370(localLong3 + 0x81d8,*(uint64 *)(localLong3 + 0x81e8),operationFlags,callbackFunction,0xfffffffffffffffe);
  FUN_180058370(localLong3 + 0x81a8,*(uint64 *)(localLong3 + 0x81b8));
  FUN_180058370(localLong3 + 0x8178,*(uint64 *)(localLong3 + 0x8188));
  FUN_1808fc8a8(localLong3 + 0x80d8,0x20,5,FUN_180046860);
  if (*plocalLong1 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  FUN_1808fc8a8(localLong3 + 0x7fe8,0x20,5,FUN_180046860);
  lVar4 = *(longlong *)(localLong3 + 0x7fd0);
  for (lVar5 = *(longlong *)(localLong3 + 0x7fc8); lVar5 != lVar4; lVar5 = lVar5 + 0x40) {
    FUN_180152b00(lVar5);
  }
  if (*(longlong *)(localLong3 + 0x7fc8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_1809096e0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x8248);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180909700(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x90) + 0x10) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909710(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x98) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909720(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x80) + 0x10) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909730(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x88) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909740(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  *(uint64 *)(localLong1 + 0x58) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x60) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x60) = 0;
  *(uint32 *)(localLong1 + 0x70) = 0;
  *(uint64 *)(localLong1 + 0x58) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909750(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x10) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x10) = 0;
  *(uint32 *)(memorySize + 0x20) = 0;
  *(uint64 *)(memorySize + 8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909760(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909770(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x78);
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909780(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  *(uint64 *)(localLong1 + 8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x10) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x10) = 0;
  *(uint32 *)(localLong1 + 0x20) = 0;
  *(uint64 *)(localLong1 + 8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909790(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800ae2c0(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_1809097a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800ae2c0(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_1809097b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x20) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x20),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_1809097c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x20) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x20),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_1809097d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_1809097e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800ae2c0(*(longlong *)(memorySize + 0x40) + 0x30,
                *(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x40),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_1809097f0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180909800(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 200);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x40) + 0xb8,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180909820(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0xf8);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_18004b790(*(longlong *)(memorySize + 0x40) + 0xe8,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180909840(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800ae2c0(*(longlong *)(memorySize + 0x48),*(uint64 *)(*(longlong *)(memorySize + 0x48) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180909850(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800ae2c0(*(longlong *)(memorySize + 0x48),*(uint64 *)(*(longlong *)(memorySize + 0x48) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_180909860(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x68);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180909870(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_18005d260(*(longlong *)(memorySize + 0x40) + 0x90,
                *(uint64 *)(*(longlong *)(memorySize + 0x40) + 0xa0),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_180909890(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_18005d260(*(longlong *)(memorySize + 0x50),*(uint64 *)(*(longlong *)(memorySize + 0x50) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_1809098a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_18005d260(*(longlong *)(memorySize + 0x50),*(uint64 *)(*(longlong *)(memorySize + 0x50) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_1809098b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_18005d260(*(longlong *)(memorySize + 0x48),*(uint64 *)(*(longlong *)(memorySize + 0x48) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_1809098c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_18005d260(*(longlong *)(memorySize + 0x48),*(uint64 *)(*(longlong *)(memorySize + 0x48) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_1809098d0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x40) & 1) != 0) {
    *(uint *)(memorySize + 0x40) = *(uint *)(memorySize + 0x40) & 0xfffffffe;
    FUN_180627b90(*(uint64 *)(memorySize + 0x50));
  }
  return;
}



void Unwind_180909900(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 0x88));
  }
  return;
}



void Unwind_180909930(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x5c) & 1) != 0) {
    *(uint *)(memorySize + 0x5c) = *(uint *)(memorySize + 0x5c) & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 200));
  }
  return;
}



void Unwind_180909960(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0xf0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909970(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = _Mtx_unlock(*(uint64 *)(memorySize + 0xe8));
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



void Unwind_180909980(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x1d0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909990(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0xe0);
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_1809099a0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1802a07c0(*(longlong *)(memorySize + 0xe0) + 0x10);
  return;
}



void Unwind_1809099b0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0xe0) + 0x50) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809099c0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0xe0) = &threadSyncObject;
  return;
}



void Unwind_1809099d0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x58) & 1) != 0) {
    *(uint *)(memorySize + 0x58) = *(uint *)(memorySize + 0x58) & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 0xd0));
  }
  return;
}



void Unwind_180909a00(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x38);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180909a10(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x330) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909a20(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x410) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909a30(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = _Mtx_unlock(*(uint64 *)(memorySize + 0xd8));
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



void Unwind_180909a40(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x38);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180909a50(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x38);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180909a60(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x410) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909a70(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x38) & 1) != 0) {
    *(uint *)(memorySize + 0x38) = *(uint *)(memorySize + 0x38) & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 0xb8));
  }
  return;
}



void Unwind_180909aa0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x200) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909ab0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x2e0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909ac0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x58) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909ad0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x200) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909ae0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x2e0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909af0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 0x70));
  }
  return;
}



void Unwind_180909b20(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = _Mtx_unlock(*(uint64 *)(memorySize + 0x38));
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



void Unwind_180909b30(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x58) + 0x28);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180909b40(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x28);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180909b50(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x180) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909b60(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x48) + 0x28);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180909b70(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x28);
  *plocalUInt1 = &unknown_1809fcb90;
  _Mtx_destroy_in_situ();
  _Cnd_destroy_in_situ(plocalUInt1 + 4);
  *plocalUInt1 = &bufferControlData2;
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_180909b80(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x28) + 0xe8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180909ba0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x48) + 0x28);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180909bb0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 0xa8));
  }
  return;
}



void Unwind_180909be0(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = _Mtx_unlock(*(uint64 *)(memorySize + 0x30));
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



void Unwind_180909bf0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 0xb8));
  }
  return;
}



void Unwind_180909c20(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x30) + 8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180909c30(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  int localInt2;
  
  localInt1 = *(int *)(**(longlong **)(_DAT_180c82868 + 8) + 0x48);
  localInt2 = _Thrd_id();
  if (localInt2 != localInt1) {
    _DAT_180c9105c = *(uint32 *)(memorySize + 0x90);
  }
  return;
}



void Unwind_180909c40(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180909c50(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180909c60(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180909c70(uint64 resourceHandle,longlong memorySize)

{
  _Mtx_destroy_in_situ(*(uint64 *)(memorySize + 0xa0));
  return;
}



void Unwind_180909c80(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180909c90(uint64 resourceHandle,longlong memorySize)

{
  _Mtx_destroy_in_situ(*(uint64 *)(memorySize + 0x98));
  return;
}



void Unwind_180909ca0(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  if (*(char *)(memorySize + 0x40) != '\0') {
    localInt1 = _Mtx_unlock(*(uint64 *)(memorySize + 0x38));
    if (localInt1 != 0) {
      __Throw_C_error_std__YAXH_Z(localInt1);
    }
  }
  return;
}



void Unwind_180909cb0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 8,0x98,9,FUN_1802ab7f0);
  return;
}



void Unwind_180909ce0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  *(uint64 *)(localLong1 + 0x560) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x568) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x568) = 0;
  *(uint32 *)(localLong1 + 0x578) = 0;
  *(uint64 *)(localLong1 + 0x560) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180909d00(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x40) + 0x580);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x588);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180909d20(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x5a0,0x20,9,FUN_18004c030);
  return;
}



void Unwind_180909d60(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x40) + 0x6c0);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x6c8);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180909d80(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x40) + 0x6e0);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x6e8);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180909da0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x40) + 0x700);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x708);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180909dc0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x40) + 0x720);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x728);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180909de0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800b9030(*(longlong *)(memorySize + 0x40) + 0x740,
                *(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x750),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_180909e00(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180909e20(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180909e40(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180909e60(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180909e80(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180909ea0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180909ec0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180909ee0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180909f00(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180909f20(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180909f40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0xaa0);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_1800b9210(*(longlong *)(memorySize + 0x40) + 0xa90,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
    FUN_1800b94f0(plocalUInt1);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_180909f60(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  localLong3 = *(longlong *)(memorySize + 0x40);
  FUN_1802ab380();
  _Mtx_destroy_in_situ();
  if (*(longlong *)(localLong3 + 0xae0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt2 = *(uint64 **)(localLong3 + 0xac0);
  if (plocalUInt2 != (uint64 *)0x0) {
    uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
    if (uVar4 != 0) {
      localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
      localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
      if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
        *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
        *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
        plocalInt1 = (int *)(localLong3 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                            plocalUInt2,uVar4,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_180909f80(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_180909fa0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800b9270(*(longlong *)(memorySize + 0x40) + 0xba8,
                *(uint64 *)(*(longlong *)(memorySize + 0x40) + 3000),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_180909fc0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x40) + 0xbd8,
                *(uint64 *)(*(longlong *)(memorySize + 0x40) + 0xbe8),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_180909fe0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0xc08,8,10,FUN_180045af0,0xfffffffffffffffe);
  return;
}



void Unwind_18090a000(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0xc58);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090a020(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0xc60,8,0x14,FUN_180045af0);
  return;
}



void Unwind_18090a060(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x40) + 0xd00);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0xd08);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090a080(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x48),8,10,FUN_180045af0);
  return;
}



void Unwind_18090a0b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800b9270(*(longlong *)(memorySize + 0x48),*(uint64 *)(*(longlong *)(memorySize + 0x48) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090a0c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800b9270(*(longlong *)(memorySize + 0x48),*(uint64 *)(*(longlong *)(memorySize + 0x48) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090a0d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x48) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_1800b9210(*(longlong *)(memorySize + 0x48),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
    FUN_1800b94f0(plocalUInt1);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_18090a0e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x48) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_1800b9210(*(longlong *)(memorySize + 0x48),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
    FUN_1800b94f0(plocalUInt1);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_18090a0f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800b9030(*(longlong *)(memorySize + 0x48),*(uint64 *)(*(longlong *)(memorySize + 0x48) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090a100(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800b9030(*(longlong *)(memorySize + 0x48),*(uint64 *)(*(longlong *)(memorySize + 0x48) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090a110(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800b9030(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090a120(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800b9030(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090a130(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_1800b9210(*(longlong *)(memorySize + 0x40),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
    FUN_1800b94f0(plocalUInt1);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_18090a140(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_1800b9210(*(longlong *)(memorySize + 0x40),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
    FUN_1800b94f0(plocalUInt1);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_18090a150(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800b9270(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090a160(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800b9270(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090a170(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x40),8,10,FUN_180045af0);
  return;
}



void Unwind_18090a1a0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x60) + 8,0x98,9,FUN_1802ab7f0);
  return;
}



void Unwind_18090a1d0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x60);
  *(uint64 *)(localLong1 + 0x560) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x568) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x568) = 0;
  *(uint32 *)(localLong1 + 0x578) = 0;
  *(uint64 *)(localLong1 + 0x560) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090a1f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x60) + 0x580);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x588);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090a210(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x60) + 0x5a0,0x20,9,FUN_18004c030);
  return;
}



void Unwind_18090a250(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x60) + 0x6c0);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x6c8);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090a270(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x60) + 0x6e0);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x6e8);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090a290(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x60) + 0x700);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x708);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090a2b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x60) + 0x720);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x728);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090a2d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800b9030(*(longlong *)(memorySize + 0x60) + 0x740,
                *(uint64 *)(*(longlong *)(memorySize + 0x60) + 0x750),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_18090a2f0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090a310(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090a330(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090a350(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090a370(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090a390(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090a3b0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090a3d0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090a3f0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090a410(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090a430(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x60) + 0xaa0);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_1800b9210(*(longlong *)(memorySize + 0x60) + 0xa90,*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
    FUN_1800b94f0(plocalUInt1);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_18090a450(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  localLong3 = *(longlong *)(memorySize + 0x60);
  FUN_1802ab380();
  _Mtx_destroy_in_situ();
  if (*(longlong *)(localLong3 + 0xae0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt2 = *(uint64 **)(localLong3 + 0xac0);
  if (plocalUInt2 != (uint64 *)0x0) {
    uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
    if (uVar4 != 0) {
      localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
      localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
      if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
        *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
        *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
        plocalInt1 = (int *)(localLong3 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                            plocalUInt2,uVar4,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_18090a470(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090a490(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800b9270(*(longlong *)(memorySize + 0x60) + 0xba8,
                *(uint64 *)(*(longlong *)(memorySize + 0x60) + 3000),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_18090a4b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x60) + 0xbd8,
                *(uint64 *)(*(longlong *)(memorySize + 0x60) + 0xbe8),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_18090a4d0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x60) + 0xc08,8,10,FUN_180045af0,0xfffffffffffffffe);
  return;
}



void Unwind_18090a4f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0xc58);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090a510(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x60) + 0xc60,8,0x14,FUN_180045af0);
  return;
}



void Unwind_18090a550(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x60) + 0xd00);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0xd08);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090a570(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x68);
  plocalLong1 = (longlong *)plocalLong2[1];
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090a580(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800b9030(*(longlong *)(memorySize + 0x68),*(uint64 *)(*(longlong *)(memorySize + 0x68) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090a590(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800b9030(*(longlong *)(memorySize + 0x68),*(uint64 *)(*(longlong *)(memorySize + 0x68) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090a5a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x68) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_1800b9210(*(longlong *)(memorySize + 0x68),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
    FUN_1800b94f0(plocalUInt1);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_18090a5b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x68) + 0x10);
  if (plocalUInt1 != (uint64 *)0x0) {
    FUN_1800b9210(*(longlong *)(memorySize + 0x68),*plocalUInt1,operationFlags,callbackFunction,0xfffffffffffffffe);
    FUN_1800b94f0(plocalUInt1);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



void Unwind_18090a5c0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x68);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090a5d0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x68) + 0x20);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090a5e0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090a5f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800b9270(*(longlong *)(memorySize + 0x68),*(uint64 *)(*(longlong *)(memorySize + 0x68) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090a600(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800b9270(*(longlong *)(memorySize + 0x68),*(uint64 *)(*(longlong *)(memorySize + 0x68) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090a610(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x68),8,10,FUN_180045af0);
  return;
}



void Unwind_18090a640(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x38) != (code *)0x0) {
    (**(code **)(memorySize + 0x38))(memorySize + 0x28,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090a650(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x38) != (code *)0x0) {
    (**(code **)(memorySize + 0x38))(memorySize + 0x28,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090a660(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = _Mtx_unlock(*(uint64 *)(memorySize + 0x78));
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



void Unwind_18090a670(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 0x60));
  }
  return;
}



void Unwind_18090a6a0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 2) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffd;
    FUN_180045af0(memorySize + 0x50);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090a6d0(void)

{
  _DAT_180d49240 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090a6e0(void)

{
  byte bVar1;
  
  EnterCriticalSection(0x180c82210);
  _DAT_180d49238 = 0;
  LeaveCriticalSection(0x180c82210);
  if (_DAT_180c82240 != 0) {
    SetEvent();
                    // WARNING: Could not recover jumptable at 0x0001808fcc41. Too many branches
                    // WARNING: Treating indirect jump as call
    ResetEvent(_DAT_180c82240);
    return;
  }
  bVar1 = (byte)_DAT_180bf00a8 & 0x3f;
                    // WARNING: Could not recover jumptable at 0x0001808ffe70. Too many branches
                    // WARNING: Treating indirect jump as call
  (*(code *)((_DAT_180bf00a8 ^ _DAT_180c82250) >> bVar1 |
            (_DAT_180bf00a8 ^ _DAT_180c82250) << 0x40 - bVar1))(0x180c82238);
  return;
}



void Unwind_18090a6f0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    FUN_180627b90(memorySize + 0xb8);
  }
  return;
}



void Unwind_18090a720(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 4) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffb;
    FUN_180627b90(memorySize + 0x78);
  }
  return;
}



void Unwind_18090a750(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 8) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffff7;
    FUN_180627b90(memorySize + 0x58);
  }
  return;
}



void Unwind_18090a780(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x40);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090a790(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = _Mtx_unlock(*(uint64 *)(memorySize + 0x90));
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



void Unwind_18090a7a0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x40);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090a7b0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x48) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x48) + 0x38))();
  }
  *(uint64 *)(memorySize + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x30) = 0;
  *(uint32 *)(memorySize + 0x40) = 0;
  *(uint64 *)(memorySize + 0x28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090a7c0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x48) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x48) + 0x38))();
  }
  return;
}



void Unwind_18090a7d0(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0xa0);
  *plocalUInt1 = &threadLocalStorageData;
  if (plocalUInt1[1] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[1] = 0;
  *(uint32 *)(plocalUInt1 + 3) = 0;
  *plocalUInt1 = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090a7e0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xa0) + 0x20);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090a7f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  
  plocalLong1 = *(longlong **)(memorySize + 0x38);
  for (plocalLong2 = *(longlong **)(memorySize + 0x30); plocalLong2 != plocalLong1; plocalLong2 = plocalLong2 + 1) {
    if ((longlong *)*plocalLong2 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong2 + 0x38))();
    }
  }
  if (*(longlong *)(memorySize + 0x30) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090a800(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 0x68));
  }
  return;
}



void Unwind_18090a830(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  
  plocalLong1 = *(longlong **)(memorySize + 0x38);
  for (plocalLong2 = *(longlong **)(memorySize + 0x30); plocalLong2 != plocalLong1; plocalLong2 = plocalLong2 + 1) {
    if ((longlong *)*plocalLong2 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong2 + 0x38))();
    }
  }
  if (*(longlong *)(memorySize + 0x30) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090a840(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 2) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffd;
    FUN_180045af0(*(uint64 *)(memorySize + 0x68));
  }
  return;
}



void Unwind_18090a870(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x70) + 0x28);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090a880(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x50) + 8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090a890(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x60) + 8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090a8a0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x58) + 0x28);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x58) + 0x30);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090a8b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x60) + 8);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x10);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090a8c0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x70) + 8);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x70) + 0x10);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090a8d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x88);
  plocalLong1 = (longlong *)plocalLong2[1];
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090a8e0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x48) + 0x28);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090a8f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090a900(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x50);
  plocalLong1 = (longlong *)plocalLong2[1];
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090a910(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(longlong **)(localLong1 + 0x40) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x40) + 0x38))();
  }
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090a920(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x40) + 8);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x10);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090a930(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  localLong3 = *(longlong *)(memorySize + 0x40);
  FUN_1800ba100();
  if ((1 < *(ulonglong *)(localLong3 + 0x10)) &&
     (plocalUInt2 = *(uint64 **)(localLong3 + 8), plocalUInt2 != (uint64 *)0x0)) {
    uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
    if (uVar4 != 0) {
      localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
      localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
      if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
        *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
        *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
        plocalInt1 = (int *)(localLong3 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                            plocalUInt2,uVar4,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_18090a940(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  localLong3 = *(longlong *)(memorySize + 0x40);
  FUN_1800ba100();
  if ((1 < *(ulonglong *)(localLong3 + 0x10)) &&
     (plocalUInt2 = *(uint64 **)(localLong3 + 8), plocalUInt2 != (uint64 *)0x0)) {
    uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
    if (uVar4 != 0) {
      localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
      localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
      if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
        *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
        *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
        plocalInt1 = (int *)(localLong3 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                            plocalUInt2,uVar4,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_18090a950(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  localLong3 = *(longlong *)(memorySize + 0x40);
  FUN_1800ba100();
  if ((1 < *(ulonglong *)(localLong3 + 0x10)) &&
     (plocalUInt2 = *(uint64 **)(localLong3 + 8), plocalUInt2 != (uint64 *)0x0)) {
    uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
    if (uVar4 != 0) {
      localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
      localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
      if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
        *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
        *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
        plocalInt1 = (int *)(localLong3 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                            plocalUInt2,uVar4,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_18090a960(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  localLong3 = *(longlong *)(memorySize + 0x50);
  FUN_1800ba100();
  if ((1 < *(ulonglong *)(localLong3 + 0x10)) &&
     (plocalUInt2 = *(uint64 **)(localLong3 + 8), plocalUInt2 != (uint64 *)0x0)) {
    uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
    if (uVar4 != 0) {
      localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
      localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
      if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
        *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
        *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
        plocalInt1 = (int *)(localLong3 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                            plocalUInt2,uVar4,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_18090a970(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  localLong3 = *(longlong *)(memorySize + 0x50);
  FUN_1800ba100();
  if ((1 < *(ulonglong *)(localLong3 + 0x10)) &&
     (plocalUInt2 = *(uint64 **)(localLong3 + 8), plocalUInt2 != (uint64 *)0x0)) {
    uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
    if (uVar4 != 0) {
      localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
      localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
      if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
        *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
        *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
        plocalInt1 = (int *)(localLong3 + 0x18);
        *plocalInt1 = *plocalInt1 + -1;
        if (*plocalInt1 == 0) {
          FUN_18064d630();
          return;
        }
      }
      else {
        func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                            plocalUInt2,uVar4,0xfffffffffffffffe);
      }
    }
    return;
  }
  return;
}



void Unwind_18090a980(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0xe8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090a9a0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x28);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090a9b0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    FUN_180627b90(*(uint64 *)(memorySize + 0x40));
  }
  return;
}



void Unwind_18090a9e0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x60) & 1) != 0) {
    *(uint *)(memorySize + 0x60) = *(uint *)(memorySize + 0x60) & 0xfffffffe;
    FUN_180627b90(*(uint64 *)(memorySize + 0x70));
  }
  return;
}



void Unwind_18090aa10(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0xe0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090aa20(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 2) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffd;
    FUN_180627b90(memorySize + 0x80);
  }
  return;
}



void Unwind_18090aa50(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 4) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffb;
    FUN_180627b90(memorySize + 0x38);
  }
  return;
}



void Unwind_18090aa80(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 8) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffff7;
    FUN_180627b90(memorySize + 0x38);
  }
  return;
}



void Unwind_18090aab0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    FUN_180627b90(*(uint64 *)(memorySize + 0x120));
  }
  return;
}



void Unwind_18090aae0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x98) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xa0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xa0) = 0;
  *(uint32 *)(memorySize + 0xb0) = 0;
  *(uint64 *)(memorySize + 0x98) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090aaf0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x60) & 1) != 0) {
    *(uint *)(memorySize + 0x60) = *(uint *)(memorySize + 0x60) & 0xfffffffe;
    FUN_180627b90(*(uint64 *)(memorySize + 0x90));
  }
  return;
}



void Unwind_18090ab20(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x60) & 2) != 0) {
    *(uint *)(memorySize + 0x60) = *(uint *)(memorySize + 0x60) & 0xfffffffd;
    FUN_180044a30(memorySize + 0xa0);
  }
  return;
}



void Unwind_18090ab50(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180627b90(*(uint64 *)(memorySize + 0x70));
  }
  return;
}



void Unwind_18090ab80(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ab90(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090aba0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x20);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090abb0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x30);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090abc0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x38);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090abd0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x40);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090abe0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x48);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090abf0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x50);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ac00(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x58);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ac10(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x60);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ac20(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x68);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ac30(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x70);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ac40(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x78);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ac50(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x80);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ac70(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x88);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ac90(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x90);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090acb0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x98);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090acd0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0xa0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090acf0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0xa8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ad10(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0xb8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ad30(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0xc0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ad50(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 200);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ad70(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0xd0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ad90(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0xd8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090adb0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0xe0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090add0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0xe8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090adf0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x50) + 0xf0,8,0x10,FUN_180045af0);
  return;
}



void Unwind_18090ae30(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x50) + 0x170,8,0x10,FUN_180045af0);
  return;
}



void Unwind_18090ae70(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x50) + 0x1f0,8,0x10,FUN_180045af0);
  return;
}



void Unwind_18090aeb0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x270);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090aed0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x278);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090aef0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x280);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090af10(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x288);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090af30(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x290);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090af50(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x298);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090af70(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong localLong2;
  longlong localLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  
  localLong3 = *(longlong *)(memorySize + 0x50);
  uVar4 = *(ulonglong *)(localLong3 + 0x2b0);
  localLong1 = *(longlong *)(localLong3 + 0x2a8);
  uVar5 = 0;
  if (uVar4 != 0) {
    do {
      localLong2 = *(longlong *)(localLong1 + uVar5 * 8);
      if (localLong2 != 0) {
        if (*(longlong **)(localLong2 + 8) != (longlong *)0x0) {
          (**(code **)(**(longlong **)(localLong2 + 8) + 0x38))();
        }
                    // WARNING: Subroutine does not return
        HandleCriticalError(localLong2);
      }
      *(uint64 *)(localLong1 + uVar5 * 8) = 0;
      uVar5 = uVar5 + 1;
    } while (uVar5 < uVar4);
    uVar4 = *(ulonglong *)(localLong3 + 0x2b0);
  }
  *(uint64 *)(localLong3 + 0x2b8) = 0;
  if ((1 < uVar4) && (*(longlong *)(localLong3 + 0x2a8) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_18090af90(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x2d0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090afb0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x2e0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090afd0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x2e8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090aff0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x2f0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b010(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x2f8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b030(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x300);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b050(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x308);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b070(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x310);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b090(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x318);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b0b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 800);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b0d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x328);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b0f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x330);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b110(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x338);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b130(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x340);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b150(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x348);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b170(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x350);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b190(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x358);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b1b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x360);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b1d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x368);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b1f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x370);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b210(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x378);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b230(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x380);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b250(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x388);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b270(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x390);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b290(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x398);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b2b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x3a0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b2d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x3a8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b2f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x3b0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b310(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x3b8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b330(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x3c0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b350(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x3c8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b370(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x3d0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b390(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x3d8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b3b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x3e0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b3d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 1000);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b3f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x3f0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b410(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x3f8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b430(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x400);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b450(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x408);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b470(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x50) + 0x410);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b490(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090b4b0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong localLong2;
  longlong localLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  
  localLong3 = *(longlong *)(memorySize + 0x58);
  uVar4 = *(ulonglong *)(localLong3 + 0x10);
  localLong1 = *(longlong *)(localLong3 + 8);
  uVar5 = 0;
  if (uVar4 != 0) {
    do {
      localLong2 = *(longlong *)(localLong1 + uVar5 * 8);
      if (localLong2 != 0) {
        if (*(longlong **)(localLong2 + 8) != (longlong *)0x0) {
          (**(code **)(**(longlong **)(localLong2 + 8) + 0x38))();
        }
                    // WARNING: Subroutine does not return
        HandleCriticalError(localLong2);
      }
      *(uint64 *)(localLong1 + uVar5 * 8) = 0;
      uVar5 = uVar5 + 1;
    } while (uVar5 < uVar4);
    uVar4 = *(ulonglong *)(localLong3 + 0x10);
  }
  *(uint64 *)(localLong3 + 0x18) = 0;
  if ((1 < uVar4) && (*(longlong *)(localLong3 + 8) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_18090b4c0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong localLong2;
  longlong localLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  
  localLong3 = *(longlong *)(memorySize + 0x58);
  uVar4 = *(ulonglong *)(localLong3 + 0x10);
  localLong1 = *(longlong *)(localLong3 + 8);
  uVar5 = 0;
  if (uVar4 != 0) {
    do {
      localLong2 = *(longlong *)(localLong1 + uVar5 * 8);
      if (localLong2 != 0) {
        if (*(longlong **)(localLong2 + 8) != (longlong *)0x0) {
          (**(code **)(**(longlong **)(localLong2 + 8) + 0x38))();
        }
                    // WARNING: Subroutine does not return
        HandleCriticalError(localLong2);
      }
      *(uint64 *)(localLong1 + uVar5 * 8) = 0;
      uVar5 = uVar5 + 1;
    } while (uVar5 < uVar4);
    uVar4 = *(ulonglong *)(localLong3 + 0x10);
  }
  *(uint64 *)(localLong3 + 0x18) = 0;
  if ((1 < uVar4) && (*(longlong *)(localLong3 + 8) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_18090b4d0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090b4e0(uint64 resourceHandle,longlong memorySize)

{
  _Mtx_destroy_in_situ(*(uint64 *)(memorySize + 0x58));
  return;
}



void Unwind_18090b4f0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong localLong2;
  longlong localLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  
  localLong3 = *(longlong *)(memorySize + 0x40);
  uVar4 = *(ulonglong *)(localLong3 + 0x10);
  localLong1 = *(longlong *)(localLong3 + 8);
  uVar5 = 0;
  if (uVar4 != 0) {
    do {
      localLong2 = *(longlong *)(localLong1 + uVar5 * 8);
      if (localLong2 != 0) {
        if (*(longlong **)(localLong2 + 8) != (longlong *)0x0) {
          (**(code **)(**(longlong **)(localLong2 + 8) + 0x38))();
        }
                    // WARNING: Subroutine does not return
        HandleCriticalError(localLong2);
      }
      *(uint64 *)(localLong1 + uVar5 * 8) = 0;
      uVar5 = uVar5 + 1;
    } while (uVar5 < uVar4);
    uVar4 = *(ulonglong *)(localLong3 + 0x10);
  }
  *(uint64 *)(localLong3 + 0x18) = 0;
  if ((1 < uVar4) && (*(longlong *)(localLong3 + 8) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_18090b500(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong localLong2;
  longlong localLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  
  localLong3 = *(longlong *)(memorySize + 0x40);
  uVar4 = *(ulonglong *)(localLong3 + 0x10);
  localLong1 = *(longlong *)(localLong3 + 8);
  uVar5 = 0;
  if (uVar4 != 0) {
    do {
      localLong2 = *(longlong *)(localLong1 + uVar5 * 8);
      if (localLong2 != 0) {
        if (*(longlong **)(localLong2 + 8) != (longlong *)0x0) {
          (**(code **)(**(longlong **)(localLong2 + 8) + 0x38))();
        }
                    // WARNING: Subroutine does not return
        HandleCriticalError(localLong2);
      }
      *(uint64 *)(localLong1 + uVar5 * 8) = 0;
      uVar5 = uVar5 + 1;
    } while (uVar5 < uVar4);
    uVar4 = *(ulonglong *)(localLong3 + 0x10);
  }
  *(uint64 *)(localLong3 + 0x18) = 0;
  if ((1 < uVar4) && (*(longlong *)(localLong3 + 8) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_18090b510(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x68);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b520(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x78);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b530(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x80);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b550(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x88);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b570(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x90);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b590(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0xa0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b5b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0xa8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b5d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0xb8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b5f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0xc0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b610(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 200);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b630(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0xe8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b650(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0xf0,8,0x10,FUN_180045af0);
  return;
}



void Unwind_18090b690(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x170,8,0x10,FUN_180045af0);
  return;
}



void Unwind_18090b6d0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x1f0,8,0x10,FUN_180045af0);
  return;
}



void Unwind_18090b710(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x270);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b730(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x278);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b750(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x280);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b770(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x288);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b790(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x290);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b7b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x298);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b7d0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong localLong2;
  longlong localLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  
  localLong3 = *(longlong *)(memorySize + 0x40);
  uVar4 = *(ulonglong *)(localLong3 + 0x2b0);
  localLong1 = *(longlong *)(localLong3 + 0x2a8);
  uVar5 = 0;
  if (uVar4 != 0) {
    do {
      localLong2 = *(longlong *)(localLong1 + uVar5 * 8);
      if (localLong2 != 0) {
        if (*(longlong **)(localLong2 + 8) != (longlong *)0x0) {
          (**(code **)(**(longlong **)(localLong2 + 8) + 0x38))();
        }
                    // WARNING: Subroutine does not return
        HandleCriticalError(localLong2);
      }
      *(uint64 *)(localLong1 + uVar5 * 8) = 0;
      uVar5 = uVar5 + 1;
    } while (uVar5 < uVar4);
    uVar4 = *(ulonglong *)(localLong3 + 0x2b0);
  }
  *(uint64 *)(localLong3 + 0x2b8) = 0;
  if ((1 < uVar4) && (*(longlong *)(localLong3 + 0x2a8) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_18090b7f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x2d0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b810(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x2e0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b830(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x2e8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b850(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x2f0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b870(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x2f8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b890(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x300);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b8b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x308);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b8d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x310);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b8f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x318);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b910(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 800);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b930(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x328);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b950(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x330);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b970(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x338);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b990(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x340);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b9b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x348);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b9d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x350);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090b9f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x358);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ba10(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x360);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ba30(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x368);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ba50(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x370);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ba70(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x378);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ba90(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x380);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bab0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x388);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bad0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x390);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090baf0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x398);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bb10(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x3a0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bb30(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x3a8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bb50(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x3b0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bb70(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x3b8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bb90(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x3c0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bbb0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x3c8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bbd0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x3d0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bbf0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x3d8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bc10(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x3e0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bc30(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 1000);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bc50(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x3f0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bc70(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x3f8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bc90(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x400);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bcb0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x408);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bcd0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x410);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bcf0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090bd10(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong localLong2;
  longlong localLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  
  localLong3 = *(longlong *)(memorySize + 0x48);
  uVar4 = *(ulonglong *)(localLong3 + 0x10);
  localLong1 = *(longlong *)(localLong3 + 8);
  uVar5 = 0;
  if (uVar4 != 0) {
    do {
      localLong2 = *(longlong *)(localLong1 + uVar5 * 8);
      if (localLong2 != 0) {
        if (*(longlong **)(localLong2 + 8) != (longlong *)0x0) {
          (**(code **)(**(longlong **)(localLong2 + 8) + 0x38))();
        }
                    // WARNING: Subroutine does not return
        HandleCriticalError(localLong2);
      }
      *(uint64 *)(localLong1 + uVar5 * 8) = 0;
      uVar5 = uVar5 + 1;
    } while (uVar5 < uVar4);
    uVar4 = *(ulonglong *)(localLong3 + 0x10);
  }
  *(uint64 *)(localLong3 + 0x18) = 0;
  if ((1 < uVar4) && (*(longlong *)(localLong3 + 8) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_18090bd20(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong localLong2;
  longlong localLong3;
  ulonglong uVar4;
  ulonglong uVar5;
  
  localLong3 = *(longlong *)(memorySize + 0x48);
  uVar4 = *(ulonglong *)(localLong3 + 0x10);
  localLong1 = *(longlong *)(localLong3 + 8);
  uVar5 = 0;
  if (uVar4 != 0) {
    do {
      localLong2 = *(longlong *)(localLong1 + uVar5 * 8);
      if (localLong2 != 0) {
        if (*(longlong **)(localLong2 + 8) != (longlong *)0x0) {
          (**(code **)(**(longlong **)(localLong2 + 8) + 0x38))();
        }
                    // WARNING: Subroutine does not return
        HandleCriticalError(localLong2);
      }
      *(uint64 *)(localLong1 + uVar5 * 8) = 0;
      uVar5 = uVar5 + 1;
    } while (uVar5 < uVar4);
    uVar4 = *(ulonglong *)(localLong3 + 0x10);
  }
  *(uint64 *)(localLong3 + 0x18) = 0;
  if ((1 < uVar4) && (*(longlong *)(localLong3 + 8) != 0)) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_18090bd30(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x58) != (code *)0x0) {
    (**(code **)(memorySize + 0x58))(memorySize + 0x48,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090bd40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x58) != (code *)0x0) {
    (**(code **)(memorySize + 0x58))(memorySize + 0x48,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090bd50(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x260) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090bd60(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0xa0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090bd70(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0x51) == '\0') {
    if ((*(char *)(memorySize + 0x50) == '\0') && (*(longlong *)(memorySize + 0x40) != 0)) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    *(longlong *)(memorySize + 0x40) = 0;
    *(uint64 *)(memorySize + 0x48) = 0;
    *(byte *)(memorySize + 0x50) = 0;
  }
  return;
}



void Unwind_18090bd80(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  if (*(longlong *)(memorySize + 0x58) != 0) {
    FUN_18022f390();
  }
  FUN_18007f6a0(memorySize + 0x68);
  if (*(longlong **)(memorySize + 0x80) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x80) + 0x38))();
  }
  if (*(longlong **)(memorySize + 0x60) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x60) + 0x38))();
  }
  plocalLong1 = *(longlong **)(memorySize + 0x58);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bd90(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 200));
  }
  return;
}



void Unwind_18090bdc0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x60) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x60) + 0x38))();
  }
  return;
}



void Unwind_18090bdd0(uint64 resourceHandle,longlong memorySize)

{
  FUN_18007f6a0();
  if (*(longlong **)(memorySize + 0x80) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x80) + 0x38))();
  }
  return;
}



void Unwind_18090bde0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xc0) + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bdf0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  if (*(longlong *)(memorySize + 0x60) != 0) {
    FUN_18022f390();
  }
  FUN_18007f6a0(memorySize + 0x70);
  if (*(longlong **)(memorySize + 0x88) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x88) + 0x38))();
  }
  if (*(longlong **)(memorySize + 0x68) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x68) + 0x38))();
  }
  plocalLong1 = *(longlong **)(memorySize + 0x60);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090be00(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 0xd8));
  }
  return;
}



void Unwind_18090be30(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x68) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x68) + 0x38))();
  }
  return;
}



void Unwind_18090be40(uint64 resourceHandle,longlong memorySize)

{
  FUN_18007f6a0();
  if (*(longlong **)(memorySize + 0x88) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x88) + 0x38))();
  }
  return;
}



void Unwind_18090be50(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180045af0(memorySize + 0x90);
  }
  return;
}



void Unwind_18090be80(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 2) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffd;
    FUN_180045af0(memorySize + 0x90);
  }
  return;
}



void Unwind_18090beb0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x48) & 1) != 0) {
    *(uint *)(memorySize + 0x48) = *(uint *)(memorySize + 0x48) & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 0x98));
  }
  return;
}



void Unwind_18090bee0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 0x38));
  }
  return;
}



void Unwind_18090bf10(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 0x98));
  }
  return;
}



void Unwind_18090bf40(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x98) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090bf50(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bf60(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bf70(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  if (*(longlong *)(memorySize + 0x38) != 0) {
    FUN_18022f390();
  }
  FUN_18007f6a0(memorySize + 0x48);
  if (*(longlong **)(memorySize + 0x60) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x60) + 0x38))();
  }
  if (*(longlong **)(memorySize + 0x40) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x40) + 0x38))();
  }
  plocalLong1 = *(longlong **)(memorySize + 0x38);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bf80(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x40) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x40) + 0x38))();
  }
  return;
}



void Unwind_18090bf90(uint64 resourceHandle,longlong memorySize)

{
  FUN_18007f6a0();
  if (*(longlong **)(memorySize + 0x60) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x60) + 0x38))();
  }
  return;
}



void Unwind_18090bfa0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x90) + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090bfb0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = *(longlong **)(memorySize + 0x20);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = (uint64 *)plocalLong2[1];
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090bfc0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800c2ca0(*(longlong *)(memorySize + 0x20) + 0x20,
                *(uint64 *)(*(longlong *)(memorySize + 0x20) + 0x30),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_18090bfd0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800c2ff0(*(longlong *)(memorySize + 0x20) + 0x50,
                *(uint64 *)(*(longlong *)(memorySize + 0x20) + 0x60),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_18090bfe0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x20) + 0x80);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x20) + 0x88);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090c000(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058370(*(longlong *)(memorySize + 0x20) + 0xa0,
                *(uint64 *)(*(longlong *)(memorySize + 0x20) + 0xb0),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_18090c020(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800c2ca0(*(longlong *)(memorySize + 0x28),*(uint64 *)(*(longlong *)(memorySize + 0x28) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090c030(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800c2ca0(*(longlong *)(memorySize + 0x28),*(uint64 *)(*(longlong *)(memorySize + 0x28) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090c040(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800c2ff0(*(longlong *)(memorySize + 0x28),*(uint64 *)(*(longlong *)(memorySize + 0x28) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090c050(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800c2ff0(*(longlong *)(memorySize + 0x28),*(uint64 *)(*(longlong *)(memorySize + 0x28) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090c060(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x28);
  plocalLong1 = (longlong *)plocalLong2[1];
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090c070(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800c2ca0(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090c080(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800c2ca0(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090c090(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800c2ff0(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090c0a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800c2ff0(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090c0b0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x88) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c0c0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x120) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c0d0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x2a0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c0e0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x300) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c0f0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x3c0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c100(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  
  plocalLong1 = *(longlong **)(memorySize + 0x58);
  for (plocalLong2 = *(longlong **)(memorySize + 0x50); plocalLong2 != plocalLong1; plocalLong2 = plocalLong2 + 1) {
    if ((longlong *)*plocalLong2 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong2 + 0x38))();
    }
  }
  if (*(longlong *)(memorySize + 0x50) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090c110(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x300) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c120(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x3c0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c130(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  
  plocalLong1 = *(longlong **)(memorySize + 0x58);
  for (plocalLong2 = *(longlong **)(memorySize + 0x50); plocalLong2 != plocalLong1; plocalLong2 = plocalLong2 + 1) {
    if ((longlong *)*plocalLong2 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong2 + 0x38))();
    }
  }
  if (*(longlong *)(memorySize + 0x50) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090c140(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x50);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090c150(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x48);
  if (*(longlong **)(localLong1 + 0x40) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x40) + 0x38))();
  }
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c160(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x48) + 0x20);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090c170(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x68);
  if (*(longlong **)(localLong1 + 0x40) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x40) + 0x38))();
  }
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c180(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x70) + 0x20);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090c190(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x48) + 0x30);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090c1a0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x20);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090c1b0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x40) = &unknown_180a07218;
  return;
}



void Unwind_18090c1c0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x20) + 8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090c1d0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  
  localLong1 = memorySize + 0x138;
  *(data **)((longlong)*(int *)(*(longlong *)(memorySize + 0x80) + 4) + -0xb8 + localLong1) =
       &unknown_180a03ad8;
  localInt2 = *(int *)(*(longlong *)(memorySize + 0x80) + 4);
  *(int *)((longlong)localInt2 + -0xbc + localLong1) = localInt2 + -0xb8;
  FUN_18009fb60(memorySize + 0x98);
  __1__basic_iostream_DU__char_traits_D_std___std__UEAA_XZ(memorySize + 0xa0);
                    // WARNING: Could not recover jumptable at 0x0001800c3c62. Too many branches
                    // WARNING: Treating indirect jump as call
  __1__basic_ios_DU__char_traits_D_std___std__UEAA_XZ(localLong1);
  return;
}



void Unwind_18090c1e0(uint64 resourceHandle,longlong memorySize)

{
                    // WARNING: Could not recover jumptable at 0x00018090c1f2. Too many branches
                    // WARNING: Treating indirect jump as call
  __1__basic_iostream_DU__char_traits_D_std___std__UEAA_XZ(*(longlong *)(memorySize + 0x70) + -0x98);
  return;
}



void Unwind_18090c200(uint64 resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  longlong localLong2;
  longlong localLong3;
  uint64 *puVar4;
  
  localLong3 = *(longlong *)(memorySize + 0x70);
  puVar4 = (uint64 *)(localLong3 + -0xa0);
  *puVar4 = &uiWidgetTree;
  if ((*(longlong *)(localLong3 + -0x20) != 0) && (**(longlong **)(localLong3 + -0x88) == localLong3 + -0x30)) {
    localUInt1 = *(uint64 *)(localLong3 + -0x10);
    localLong2 = *(longlong *)(localLong3 + -0x18);
    **(longlong **)(localLong3 + -0x88) = localLong2;
    **(longlong **)(localLong3 + -0x68) = localLong2;
    **(int **)(localLong3 + -0x50) = (int)localUInt1 - (int)localLong2;
  }
  if (*(char *)(localLong3 + -0x24) != '\0') {
    FUN_1800a19c0(puVar4);
  }
                    // WARNING: Could not recover jumptable at 0x00018009fbce. Too many branches
                    // WARNING: Treating indirect jump as call
  __1__basic_streambuf_DU__char_traits_D_std___std__UEAA_XZ(puVar4);
  return;
}



void Unwind_18090c220(uint64 resourceHandle,longlong memorySize)

{
                    // WARNING: Could not recover jumptable at 0x00018090c232. Too many branches
                    // WARNING: Treating indirect jump as call
  __1__basic_iostream_DU__char_traits_D_std___std__UEAA_XZ(*(longlong *)(memorySize + 0x40) + -0x98);
  return;
}



void Unwind_18090c240(uint64 resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  longlong localLong2;
  longlong localLong3;
  uint64 *puVar4;
  
  localLong3 = *(longlong *)(memorySize + 0x40);
  puVar4 = (uint64 *)(localLong3 + -0xa0);
  *puVar4 = &uiWidgetTree;
  if ((*(longlong *)(localLong3 + -0x20) != 0) && (**(longlong **)(localLong3 + -0x88) == localLong3 + -0x30)) {
    localUInt1 = *(uint64 *)(localLong3 + -0x10);
    localLong2 = *(longlong *)(localLong3 + -0x18);
    **(longlong **)(localLong3 + -0x88) = localLong2;
    **(longlong **)(localLong3 + -0x68) = localLong2;
    **(int **)(localLong3 + -0x50) = (int)localUInt1 - (int)localLong2;
  }
  if (*(char *)(localLong3 + -0x24) != '\0') {
    FUN_1800a19c0(puVar4);
  }
                    // WARNING: Could not recover jumptable at 0x00018009fbce. Too many branches
                    // WARNING: Treating indirect jump as call
  __1__basic_streambuf_DU__char_traits_D_std___std__UEAA_XZ(puVar4);
  return;
}



void Unwind_18090c260(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_18005d260(memorySize + 0x48,*(uint64 *)(memorySize + 0x58),operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090c270(uint64 resourceHandle,longlong memorySize)

{
  FUN_180057010(memorySize + 0x180);
  return;
}



void Unwind_18090c280(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xe8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090c290(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_18005d260(memorySize + 0x48,*(uint64 *)(memorySize + 0x58),operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090c2a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_18005d260(memorySize + 0x48,*(uint64 *)(memorySize + 0x58),operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090c2b0(uint64 resourceHandle,longlong memorySize)

{
  FUN_180057010(memorySize + 0x180);
  return;
}



void Unwind_18090c2c0(uint64 resourceHandle,longlong memorySize)

{
  FUN_180057010(memorySize + 0x180);
  return;
}



void Unwind_18090c2d0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xe8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090c2e0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xe8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090c2f0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x78) = &unknown_180a07218;
  return;
}



void Unwind_18090c300(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x78) + 8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c310(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x78);
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x28) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x28) = 0;
  *(uint32 *)(localLong1 + 0x38) = 0;
  *(uint64 *)(localLong1 + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c320(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0xc0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c330(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    __1__basic_ios_DU__char_traits_D_std___std__UEAA_XZ(*(longlong *)(memorySize + 0x40) + 0xb8);
  }
  return;
}



void Unwind_18090c360(uint64 resourceHandle,longlong memorySize)

{
                    // WARNING: Could not recover jumptable at 0x00018090c36b. Too many branches
                    // WARNING: Treating indirect jump as call
  __1__basic_iostream_DU__char_traits_D_std___std__UEAA_XZ(*(longlong *)(memorySize + 0x40) + 0x20);
  return;
}



void Unwind_18090c380(uint64 resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  longlong localLong2;
  longlong localLong3;
  uint64 *puVar4;
  
  localLong3 = *(longlong *)(memorySize + 0x40);
  puVar4 = (uint64 *)(localLong3 + 0x18);
  *puVar4 = &uiWidgetTree;
  if ((*(longlong *)(localLong3 + 0x98) != 0) && (**(longlong **)(localLong3 + 0x30) == localLong3 + 0x88)) {
    localUInt1 = *(uint64 *)(localLong3 + 0xa8);
    localLong2 = *(longlong *)(localLong3 + 0xa0);
    **(longlong **)(localLong3 + 0x30) = localLong2;
    **(longlong **)(localLong3 + 0x50) = localLong2;
    **(int **)(localLong3 + 0x68) = (int)localUInt1 - (int)localLong2;
  }
  if (*(char *)(localLong3 + 0x94) != '\0') {
    FUN_1800a19c0(puVar4);
  }
                    // WARNING: Could not recover jumptable at 0x00018009fbce. Too many branches
                    // WARNING: Treating indirect jump as call
  __1__basic_streambuf_DU__char_traits_D_std___std__UEAA_XZ(puVar4);
  return;
}



void Unwind_18090c390(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x70) + 0x1b8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090c3b0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x70) + 0x1d8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090c3d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x80) + 0x70);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090c3e0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1800ed380(*(longlong *)(memorySize + 0x70) + 0x80);
  return;
}



void Unwind_18090c400(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x70) + 0x2d0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090c420(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  if (*(longlong *)(*(longlong *)(memorySize + 0x70) + 0x1d8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x70) + 0x1b8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090c430(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x168) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c440(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x1d8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c450(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x248) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c460(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x1d8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c470(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x248) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090c480(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090c490(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x150)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x140) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c4a0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x108) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x108) + 0x38))();
  }
  *(uint64 *)(memorySize + 0xd8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xe0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xe0) = 0;
  *(uint32 *)(memorySize + 0xf0) = 0;
  *(uint64 *)(memorySize + 0xd8) = &threadLocalStorageCleanup;
  if (*(longlong **)(memorySize + 0xd0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xd0) + 0x38))();
  }
  return;
}



void Unwind_18090c4b0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x118);
  if (*(longlong **)(localLong1 + 0x58) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x58) + 0x38))();
  }
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  if (*(longlong **)(localLong1 + 0x20) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x20) + 0x38))();
  }
  return;
}



void Unwind_18090c4c0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x140) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c4d0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xd0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xd0) + 0x38))();
  }
  return;
}



void Unwind_18090c4e0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0xd8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xe0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xe0) = 0;
  *(uint32 *)(memorySize + 0xf0) = 0;
  *(uint64 *)(memorySize + 0xd8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c4f0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x108) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x108) + 0x38))();
  }
  return;
}



void Unwind_18090c500(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x118) + 0x20);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090c510(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x118);
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c520(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x118) + 0x58);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090c530(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xb8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090c540(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x180)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x170) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090c550(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x240)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x230) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c560(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x470) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090c570(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



void Unwind_18090c580(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x4d0) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090c590(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x1e0)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x1d0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c5a0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x3b0) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090c5b0(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090c5c0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x120)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x110) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090c5d0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x2a0)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x290) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090c5e0(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090c5f0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x300)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x2f0) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090c600(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x360)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x350) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c610(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xb8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090c620(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xb8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090c630(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x170) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c640(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x4d0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c650(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x3b0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c660(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x470) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c670(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x110) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c680(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x410) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c690(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x290) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c6a0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x2f0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c6b0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x350) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c6c0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x188) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c6d0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x138) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x138) + 0x38))();
  }
  return;
}



void Unwind_18090c6e0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x130) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x130) + 0x38))();
  }
  return;
}



void Unwind_18090c6f0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x150) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x150) + 0x38))();
  }
  return;
}



void Unwind_18090c700(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    FUN_180045af0(memorySize + 0x178);
  }
  return;
}



void Unwind_18090c730(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x148) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x148) + 0x38))();
  }
  return;
}



void Unwind_18090c740(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x160) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x160) + 0x38))();
  }
  return;
}



void Unwind_18090c750(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x180) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x180) + 0x38))();
  }
  return;
}



void Unwind_18090c760(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x110) != (code *)0x0) {
    (**(code **)(memorySize + 0x110))(memorySize + 0x100,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090c770(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x158) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x158) + 0x38))();
  }
  return;
}



void Unwind_18090c780(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x110) != (code *)0x0) {
    (**(code **)(memorySize + 0x110))(memorySize + 0x100,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090c790(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x148) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x150) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x150) = 0;
  *(uint32 *)(memorySize + 0x160) = 0;
  *(uint64 *)(memorySize + 0x148) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c7a0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x430) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c7b0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x570) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c7c0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x610) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c7d0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x6b0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c7e0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x750) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c7f0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x200) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x200) + 0x38))();
  }
  return;
}



void Unwind_18090c800(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x7f0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c810(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x1c8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x1c8) + 0x38))();
  }
  return;
}



void Unwind_18090c820(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x2a8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c830(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x890) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c840(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x930) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c850(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x318) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c860(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x230) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x230) + 0x38))();
  }
  return;
}



void Unwind_18090c870(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x238) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x238) + 0x38))();
  }
  return;
}



void Unwind_18090c880(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 600) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 600) + 0x38))();
  }
  return;
}



void Unwind_18090c890(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x240) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x240) + 0x38))();
  }
  return;
}



void Unwind_18090c8a0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x148) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c8b0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x430) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c8c0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x570) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c8d0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x610) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c8e0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x6b0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c8f0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x750) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c900(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x200) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x200) + 0x38))();
  }
  return;
}



void Unwind_18090c910(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x7f0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c920(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x1d0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x1d0) + 0x38))();
  }
  return;
}



void Unwind_18090c930(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x2a8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c940(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x890) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c950(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x2e0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c960(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x930) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c970(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x318) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c980(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x350) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090c990(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x140) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x140) + 0x38))();
  }
  return;
}



void Unwind_18090c9a0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    FUN_180045af0(memorySize + 0x38);
  }
  return;
}



void Unwind_18090c9d0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 2) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffd;
    FUN_180045af0(memorySize + 0x38);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090ca00(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090ca10(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090ca20(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0xd0)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0xc0) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090ca30(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090ca40(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x130)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x120) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090ca50(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090ca60(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090ca70(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 400)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x180) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090ca80(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x540) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090ca90(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090caa0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x1f0)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x1e0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cab0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x5a0) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090cac0(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090cad0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x250)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x240) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cae0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x600) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090caf0(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090cb00(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x2b0)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x2a0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cb10(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x660) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090cb20(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x310)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x300) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cb30(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x6c0) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090cb40(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x4f0)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x4e0) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090cb50(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090cb60(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x370)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x360) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cb70(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x720) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090cb80(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x3d0)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x3c0) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090cb90(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



void Unwind_18090cba0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x780) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090cbb0(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090cbc0(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090cbd0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x430)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x420) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cbe0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x7e0) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090cbf0(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090cc00(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x490)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x480) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cc10(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x840) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cc20(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x540) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cc30(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x5a0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cc40(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x600) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cc50(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x660) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cc60(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x6c0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cc70(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x4e0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cc80(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x720) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cc90(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x780) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cca0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x420) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090ccb0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x7e0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090ccc0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x840) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090ccd0(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090cce0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x50)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x40) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090ccf0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0xf8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cd00(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 2) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffd;
    FUN_180627b90(memorySize + 0x88);
  }
  return;
}



void Unwind_18090cd30(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 8) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffff7;
    FUN_180627b90(memorySize + 0x68);
  }
  return;
}



void Unwind_18090cd60(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 0x10) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xffffffef;
    FUN_180627b90(memorySize + 0x48);
  }
  return;
}



void Unwind_18090cd90(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 0x20) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xffffffdf;
    FUN_180627b90(memorySize + 0x68);
  }
  return;
}



void Unwind_18090cdc0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 0x40) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xffffffbf;
    FUN_180627b90(memorySize + 0x48);
  }
  return;
}



void Unwind_18090cdf0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x178) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x178) + 0x38))();
  }
  *(uint64 *)(memorySize + 0x148) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x150) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x150) = 0;
  *(uint32 *)(memorySize + 0x160) = 0;
  *(uint64 *)(memorySize + 0x148) = &threadLocalStorageCleanup;
  if (*(longlong **)(memorySize + 0x140) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x140) + 0x38))();
  }
  return;
}



void Unwind_18090ce00(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x38);
  if (*(longlong **)(localLong1 + 0x58) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x58) + 0x38))();
  }
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  if (*(longlong **)(localLong1 + 0x20) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x20) + 0x38))();
  }
  return;
}



void Unwind_18090ce10(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x388) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x388) + 0x38))();
  }
  *(uint64 *)(memorySize + 0x358) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x360) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x360) = 0;
  *(uint32 *)(memorySize + 0x370) = 0;
  *(uint64 *)(memorySize + 0x358) = &threadLocalStorageCleanup;
  if (*(longlong **)(memorySize + 0x350) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x350) + 0x38))();
  }
  return;
}



void Unwind_18090ce20(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x98);
  if (*(longlong **)(localLong1 + 0x58) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x58) + 0x38))();
  }
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  if (*(longlong **)(localLong1 + 0x20) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x20) + 0x38))();
  }
  return;
}



void Unwind_18090ce30(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x228) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x228) + 0x38))();
  }
  *(uint64 *)(memorySize + 0x1f8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x200) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x200) = 0;
  *(uint32 *)(memorySize + 0x210) = 0;
  *(uint64 *)(memorySize + 0x1f8) = &threadLocalStorageCleanup;
  if (*(longlong **)(memorySize + 0x1f0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x1f0) + 0x38))();
  }
  return;
}



void Unwind_18090ce40(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x288) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x288) + 0x38))();
  }
  *(uint64 *)(memorySize + 600) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x260) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x260) = 0;
  *(uint32 *)(memorySize + 0x270) = 0;
  *(uint64 *)(memorySize + 600) = &threadLocalStorageCleanup;
  if (*(longlong **)(memorySize + 0x250) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x250) + 0x38))();
  }
  return;
}



void Unwind_18090ce50(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x2e8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x2e8) + 0x38))();
  }
  *(uint64 *)(memorySize + 0x2b8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x2c0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x2c0) = 0;
  *(uint32 *)(memorySize + 0x2d0) = 0;
  *(uint64 *)(memorySize + 0x2b8) = &threadLocalStorageCleanup;
  if (*(longlong **)(memorySize + 0x2b0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x2b0) + 0x38))();
  }
  return;
}



void Unwind_18090ce60(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 1000) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 1000) + 0x38))();
  }
  *(uint64 *)(memorySize + 0x3b8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x3c0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x3c0) = 0;
  *(uint32 *)(memorySize + 0x3d0) = 0;
  *(uint64 *)(memorySize + 0x3b8) = &threadLocalStorageCleanup;
  if (*(longlong **)(memorySize + 0x3b0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x3b0) + 0x38))();
  }
  return;
}



void Unwind_18090ce70(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(longlong **)(localLong1 + 0x58) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x58) + 0x38))();
  }
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  if (*(longlong **)(localLong1 + 0x20) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x20) + 0x38))();
  }
  return;
}



void Unwind_18090ce80(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x140) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x140) + 0x38))();
  }
  return;
}



void Unwind_18090ce90(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x148) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x150) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x150) = 0;
  *(uint32 *)(memorySize + 0x160) = 0;
  *(uint64 *)(memorySize + 0x148) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cea0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x178) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x178) + 0x38))();
  }
  return;
}



void Unwind_18090ceb0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x38) + 0x20);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090cec0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x38);
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090ced0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x38) + 0x58);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090cee0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x350) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x350) + 0x38))();
  }
  return;
}



void Unwind_18090cef0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x358) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x360) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x360) = 0;
  *(uint32 *)(memorySize + 0x370) = 0;
  *(uint64 *)(memorySize + 0x358) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cf00(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x388) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x388) + 0x38))();
  }
  return;
}



void Unwind_18090cf10(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x1f0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x1f0) + 0x38))();
  }
  return;
}



void Unwind_18090cf20(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x1f8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x200) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x200) = 0;
  *(uint32 *)(memorySize + 0x210) = 0;
  *(uint64 *)(memorySize + 0x1f8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cf30(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x228) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x228) + 0x38))();
  }
  return;
}



void Unwind_18090cf40(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x250) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x250) + 0x38))();
  }
  return;
}



void Unwind_18090cf50(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 600) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x260) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x260) = 0;
  *(uint32 *)(memorySize + 0x270) = 0;
  *(uint64 *)(memorySize + 600) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cf60(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x288) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x288) + 0x38))();
  }
  return;
}



void Unwind_18090cf70(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x2b0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x2b0) + 0x38))();
  }
  return;
}



void Unwind_18090cf80(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x2b8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x2c0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x2c0) = 0;
  *(uint32 *)(memorySize + 0x2d0) = 0;
  *(uint64 *)(memorySize + 0x2b8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cf90(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x2e8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x2e8) + 0x38))();
  }
  return;
}



void Unwind_18090cfa0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x3b0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x3b0) + 0x38))();
  }
  return;
}



void Unwind_18090cfb0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x3b8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x3c0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x3c0) = 0;
  *(uint32 *)(memorySize + 0x3d0) = 0;
  *(uint64 *)(memorySize + 0x3b8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090cfc0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 1000) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 1000) + 0x38))();
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090cfd0(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  _DAT_180c8a9b0 = *(uint64 *)(memorySize + 0x28);
  localInt1 = _Mtx_unlock(0x180c91970);
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090cfe0(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  _DAT_180c8a9b0 = *(uint64 *)(memorySize + 0x90);
  localInt1 = _Mtx_unlock(0x180c91970);
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



void Unwind_18090cff0(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0x90) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0x90) + 0x38))();
  }
  return;
}



void Unwind_18090d000(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xb0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d010(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xd0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d020(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xf0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d030(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x110);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d040(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x150);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d050(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x170);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d060(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 400);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d070(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x1b0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d080(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x1d0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d090(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x1f0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d0a0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x210);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d0b0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x250);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d0c0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x390);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d0d0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x3b0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d0e0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x490);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d0f0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x2f0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d100(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x310);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d110(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x330);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d120(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x350);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d130(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x470);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d140(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x370);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d150(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x270);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d160(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x290);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d170(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x2b0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d180(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x2d0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d190(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x5d8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x5d8) + 0x38))();
  }
  return;
}



void Unwind_18090d1a0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xb0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d1b0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xb0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d1c0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xd0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d1d0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xd0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d1e0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xf0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d1f0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xf0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d200(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x110);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d210(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x110);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d220(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x150);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d230(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x150);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d240(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x170);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d250(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x170);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d260(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 400);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d270(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 400);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d280(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x1b0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d290(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x1b0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d2a0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x1d0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d2b0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x1d0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d2c0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x1f0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d2d0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x1f0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d2e0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x210);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d2f0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x210);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d300(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x250);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d310(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x250);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d320(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0xa88) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0xa88),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090d330(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0xa88) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0xa88),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090d340(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0xa80) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0xa80),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090d350(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0xa80) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0xa80),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090d360(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x390);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d370(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x390);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d380(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x3b0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d390(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x3b0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d3a0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x490);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d3b0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x490);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d3c0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x2f0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d3d0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x2f0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d3e0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x310);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d3f0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x310);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d400(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x330);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d410(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x330);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d420(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x350);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d430(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x350);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d440(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x470);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d450(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x470);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d460(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x370);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d470(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x370);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d480(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x270);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d490(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x270);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d4a0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x290);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d4b0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x290);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d4c0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x2b0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d4d0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x2b0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d4e0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x2d0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d4f0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x2d0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d500(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x28) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x28),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090d510(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0xe8) + 0xd0);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0xe8) + 0xc0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090d530(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x130);
  if (*(longlong **)(localLong1 + 0x58) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x58) + 0x38))();
  }
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  if (*(longlong **)(localLong1 + 0x20) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x20) + 0x38))();
  }
  return;
}



void Unwind_18090d540(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x140) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090d550(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x130) + 0x20);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090d560(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x130);
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090d570(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x130) + 0x58);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090d580(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xb8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xb8) + 0x38))();
  }
  *(uint64 *)(memorySize + 0x88) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x90) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x90) = 0;
  *(uint32 *)(memorySize + 0xa0) = 0;
  *(uint64 *)(memorySize + 0x88) = &threadLocalStorageCleanup;
  if (*(longlong **)(memorySize + 0x80) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x80) + 0x38))();
  }
  return;
}



void Unwind_18090d590(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x150);
  if (*(longlong **)(localLong1 + 0x58) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x58) + 0x38))();
  }
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  if (*(longlong **)(localLong1 + 0x20) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x20) + 0x38))();
  }
  return;
}



void Unwind_18090d5a0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x80) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x80) + 0x38))();
  }
  return;
}



void Unwind_18090d5b0(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x88) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x90) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x90) = 0;
  *(uint32 *)(memorySize + 0xa0) = 0;
  *(uint64 *)(memorySize + 0x88) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090d5c0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xb8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xb8) + 0x38))();
  }
  return;
}



void Unwind_18090d5d0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x160) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090d5e0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0xd8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090d5f0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x148) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090d600(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x1b8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090d610(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x1f0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090d620(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x228) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090d630(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x1b8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090d640(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x228) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090d650(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x40) + 0x40);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x48);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090d660(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  uint64 localUInt2;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  localUInt2 = 0xfffffffffffffffe;
  if (*(longlong **)(localLong1 + 0xed0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0xed0) + 0x38))();
  }
  FUN_1808fc8a8(localLong1 + 0xec0,8,2,FUN_180045af0,localUInt2);
  if (*(longlong **)(localLong1 + 0xeb8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0xeb8) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0xeb0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0xeb0) + 0x38))();
  }
  FUN_1808fc8a8(localLong1 + 0xea0,8,2,FUN_180045af0,localUInt2);
  FUN_1808fc8a8(localLong1 + 0xe90,8,2,FUN_180045af0);
  FUN_1808fc8a8(localLong1 + 0xe80,8,2,FUN_180045af0);
  FUN_1808fc8a8(localLong1 + 0xc28,0x128,2,FUN_1801b9690);
  FUN_1808fc8a8(localLong1 + 0x9d0,0x128,2,FUN_1801b9690);
  FUN_1808fc8a8(localLong1 + 0xb8,0x488,2,FUN_1800e7ca0);
  return;
}



void Unwind_18090d680(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0xee8,0x18,2,FUN_1800e7f20,0xfffffffffffffffe);
  return;
}



void Unwind_18090d6a0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0xf20,0x20,0x1d,FUN_180627b90);
  return;
}



void Unwind_18090d6e0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090d700(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x13b8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090d720(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x13d0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090d740(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x13e8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090d760(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1400);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090d780(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1418);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090d7a0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1430);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090d7c0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1448);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090d7e0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  localLong3 = *(longlong *)(memorySize + 0x40);
  if (*(longlong **)(localLong3 + 0x14d0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong3 + 0x14d0) + 0x38))();
  }
  if (*(longlong **)(localLong3 + 0x14c8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong3 + 0x14c8) + 0x38))();
  }
  if (*(longlong **)(localLong3 + 0x14c0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong3 + 0x14c0) + 0x38))();
  }
  FUN_180080df0();
  if (*(longlong *)(localLong3 + 0x1480) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt2 = *(uint64 **)(localLong3 + 0x1460);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090d800(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x14d8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090d820(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x14e0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090d840(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x14e8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090d860(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x14f0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090d880(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x14f8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090d8a0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1540);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090d8c0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1548);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090d8e0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1550);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090d900(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x1558,8,2,FUN_180045af0);
  return;
}



void Unwind_18090d940(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x1568,8,2,FUN_180045af0);
  return;
}



void Unwind_18090d980(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x1578,8,2,FUN_180045af0);
  return;
}



void Unwind_18090d9c0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x1588);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090d9e0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x1598,0x238,2,FUN_180051d00);
  return;
}



void Unwind_18090da20(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x1a18,0x488,2,FUN_1800e7ca0,0xfffffffffffffffe);
  return;
}



void Unwind_18090da40(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x2378,0x248,2,FUN_1800e7b80,0xfffffffffffffffe);
  return;
}



void Unwind_18090da60(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x2810,0x248,2,FUN_1800e7b80,0xfffffffffffffffe);
  return;
}



void Unwind_18090da80(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x3cb0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090daa0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x3d38,0x488,2,FUN_1800e7ca0,0xfffffffffffffffe);
  return;
}



void Unwind_18090dac0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 18000,0x908,2,FUN_1800e7d00,0xfffffffffffffffe);
  return;
}



void Unwind_18090dae0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x5868,0x908,2,FUN_1800e7d00,0xfffffffffffffffe);
  return;
}



void Unwind_18090db00(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x6a80,0x50,2,FUN_1800e7c40,0xfffffffffffffffe);
  return;
}



void Unwind_18090db20(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x6b28,0x488,2,FUN_1800e7ca0,0xfffffffffffffffe);
  return;
}



void Unwind_18090db40(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x7440,0x50,2,FUN_1800e7c40,0xfffffffffffffffe);
  return;
}



void Unwind_18090db60(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x74e8,0x98,2,FUN_1800e7be0,0xfffffffffffffffe);
  return;
}



void Unwind_18090db80(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x7620,0x248,2,FUN_1800e7b80,0xfffffffffffffffe);
  return;
}



void Unwind_18090dba0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x48),0x248,2,FUN_1800e7b80);
  return;
}



void Unwind_18090dbd0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x48),0x98,2,FUN_1800e7be0);
  return;
}



void Unwind_18090dc00(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x48),0x50,2,FUN_1800e7c40);
  return;
}



void Unwind_18090dc30(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x48),0x488,2,FUN_1800e7ca0);
  return;
}



void Unwind_18090dc60(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x48),0x908,2,FUN_1800e7d00);
  return;
}



void Unwind_18090dc90(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x48) + 8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090dca0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x48) + 8,0x18,2,FUN_1800e7f20);
  return;
}



void Unwind_18090dcd0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 8,0x18,2,FUN_1800e7f20);
  return;
}



void Unwind_18090dd00(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x40) + 0x48);
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x50);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 6) {
    *puVar3 = &threadLocalStorageData;
    if (puVar3[1] != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    puVar3[1] = 0;
    *(uint32 *)(puVar3 + 3) = 0;
    *puVar3 = &threadLocalStorageCleanup;
  }
  if (*plocalLong2 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_18090dd10(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x48);
  plocalUInt1 = (uint64 *)plocalLong2[1];
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 6) {
    *puVar3 = &threadLocalStorageData;
    if (puVar3[1] != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    puVar3[1] = 0;
    *(uint32 *)(puVar3 + 3) = 0;
    *puVar3 = &threadLocalStorageCleanup;
  }
  if (*plocalLong2 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



void Unwind_18090dd20(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x40),0x488,2,FUN_1800e7ca0);
  return;
}



void Unwind_18090dd50(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x40),0x248,2,FUN_1800e7b80);
  return;
}



void Unwind_18090dd80(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x40),0x908,2,FUN_1800e7d00);
  return;
}



void Unwind_18090ddb0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x40),0x50,2,FUN_1800e7c40);
  return;
}



void Unwind_18090dde0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x40),0x98,2,FUN_1800e7be0);
  return;
}



void Unwind_18090de10(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090de20(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0xe0) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0xe0) + 0x38))();
  }
  return;
}



void Unwind_18090de30(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xe0) + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090de40(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0xe0) + 0x20);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090de50(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0xe0) + 0x40);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xe0) + 0x48);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090de60(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xe0) + 0x60);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090de70(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090de80(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  uint64 localUInt2;
  
  localLong1 = *(longlong *)(memorySize + 0xe0);
  localUInt2 = 0xfffffffffffffffe;
  if (*(longlong **)(localLong1 + 0xed0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0xed0) + 0x38))();
  }
  FUN_1808fc8a8(localLong1 + 0xec0,8,2,FUN_180045af0,localUInt2);
  if (*(longlong **)(localLong1 + 0xeb8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0xeb8) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0xeb0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0xeb0) + 0x38))();
  }
  FUN_1808fc8a8(localLong1 + 0xea0,8,2,FUN_180045af0,localUInt2);
  FUN_1808fc8a8(localLong1 + 0xe90,8,2,FUN_180045af0);
  FUN_1808fc8a8(localLong1 + 0xe80,8,2,FUN_180045af0);
  FUN_1808fc8a8(localLong1 + 0xc28,0x128,2,FUN_1801b9690);
  FUN_1808fc8a8(localLong1 + 0x9d0,0x128,2,FUN_1801b9690);
  FUN_1808fc8a8(localLong1 + 0xb8,0x488,2,FUN_1800e7ca0);
  return;
}



void Unwind_18090dea0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0xe0) + 0xee8,0x18,2,FUN_1800e7f20,0xfffffffffffffffe);
  return;
}



void Unwind_18090dec0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0xe0) + 0xf20,0x20,0x1d,FUN_180627b90);
  return;
}



void Unwind_18090df00(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090df20(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xe0) + 0x13b8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090df40(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xe0) + 0x13d0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090df60(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xe0) + 0x13e8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090df80(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xe0) + 0x1400);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090dfa0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xe0) + 0x1418);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090dfc0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xe0) + 0x1430);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090dfe0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xe0) + 0x1448);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090e000(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  localLong3 = *(longlong *)(memorySize + 0xe0);
  if (*(longlong **)(localLong3 + 0x14d0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong3 + 0x14d0) + 0x38))();
  }
  if (*(longlong **)(localLong3 + 0x14c8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong3 + 0x14c8) + 0x38))();
  }
  if (*(longlong **)(localLong3 + 0x14c0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong3 + 0x14c0) + 0x38))();
  }
  FUN_180080df0();
  if (*(longlong *)(localLong3 + 0x1480) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt2 = *(uint64 **)(localLong3 + 0x1460);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090e020(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xe0) + 0x14d8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090e040(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xe0) + 0x14e0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090e060(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xe0) + 0x14e8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090e080(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xe0) + 0x14f0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090e0a0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xe0) + 0x14f8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090e0c0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xe0) + 0x1540);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090e0e0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xe0) + 0x1548);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090e100(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xe0) + 0x1550);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090e120(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0xe0) + 0x1558,8,2,FUN_180045af0);
  return;
}



void Unwind_18090e160(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0xe0) + 0x1568,8,2,FUN_180045af0);
  return;
}



void Unwind_18090e1a0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0xe0) + 0x1578,8,2,FUN_180045af0);
  return;
}



void Unwind_18090e1e0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xe0) + 0x1588);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090e200(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0xe0) + 0x1598,0x238,2,FUN_180051d00);
  return;
}



void Unwind_18090e240(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0xe0) + 0x1a18,0x488,2,FUN_1800e7ca0,0xfffffffffffffffe);
  return;
}



void Unwind_18090e260(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0xe0) + 0x2378,0x248,2,FUN_1800e7b80,0xfffffffffffffffe);
  return;
}



void Unwind_18090e280(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0xe0) + 0x2810,0x248,2,FUN_1800e7b80,0xfffffffffffffffe);
  return;
}



void Unwind_18090e2a0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xe0) + 0x3cb0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090e2c0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0xe0) + 0x3d38,0x488,2,FUN_1800e7ca0,0xfffffffffffffffe);
  return;
}



void Unwind_18090e2e0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0xe0) + 18000,0x908,2,FUN_1800e7d00,0xfffffffffffffffe);
  return;
}



void Unwind_18090e300(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0xe0) + 0x5868,0x908,2,FUN_1800e7d00,0xfffffffffffffffe);
  return;
}



void Unwind_18090e320(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0xe0) + 0x6a80,0x50,2,FUN_1800e7c40,0xfffffffffffffffe);
  return;
}



void Unwind_18090e340(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0xe0) + 0x6b28,0x488,2,FUN_1800e7ca0,0xfffffffffffffffe);
  return;
}



void Unwind_18090e360(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0xe0) + 0x7440,0x50,2,FUN_1800e7c40,0xfffffffffffffffe);
  return;
}



void Unwind_18090e380(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0xe0) + 0x74e8,0x98,2,FUN_1800e7be0,0xfffffffffffffffe);
  return;
}



void Unwind_18090e3a0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0xe0) + 0x7620,0x248,2,FUN_1800e7b80,0xfffffffffffffffe);
  return;
}



void Unwind_18090e3c0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0xe8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090e3d0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0xe8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090e3e0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0xe8);
  plocalLong1 = (longlong *)plocalLong2[1];
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090e3f0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090e400(uint64 resourceHandle,longlong memorySize)

{
  _Mtx_destroy_in_situ(*(uint64 *)(memorySize + 0xe8));
  return;
}



void Unwind_18090e410(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x30),0x488,2,FUN_1800e7ca0,0xfffffffffffffffe);
  return;
}



void Unwind_18090e420(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x30) + 0x918,0x128,2,FUN_1801b9690,0xfffffffffffffffe);
  return;
}



void Unwind_18090e440(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x30) + 0xb70,0x128,2,FUN_1801b9690,0xfffffffffffffffe);
  return;
}



void Unwind_18090e460(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x30) + 0xdc8,8,2,FUN_180045af0);
  return;
}



void Unwind_18090e4a0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x30) + 0xdd8,8,2,FUN_180045af0);
  return;
}



void Unwind_18090e4e0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x30) + 0xde8,8,2,FUN_180045af0);
  return;
}



void Unwind_18090e520(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x30) + 0xdf8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090e540(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x30) + 0xe00);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090e560(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x30) + 0xe08,8,2,FUN_180045af0);
  return;
}



void Unwind_18090e5a0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x30) + 0xe18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090e5c0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0xe8),0x488,2,FUN_1800e7ca0);
  return;
}



void Unwind_18090e5f0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0xe8),0x128,2,FUN_1801b9690);
  return;
}



void Unwind_18090e620(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x30) + 8,0x18,2,FUN_1800e7f20);
  return;
}



void Unwind_18090e650(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x30) + 8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090e660(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xe8) + 8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090e670(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0xe8),0x248,2,FUN_1800e7b80);
  return;
}



void Unwind_18090e6a0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0xe8),0x908,2,FUN_1800e7d00);
  return;
}



void Unwind_18090e6d0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0xe8),0x50,2,FUN_1800e7c40);
  return;
}



void Unwind_18090e700(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0xe8),0x98,2,FUN_1800e7be0);
  return;
}



void Unwind_18090e730(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180045af0(memorySize + 0x30);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090e760(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x70)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x60) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090e770(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x34) & 1) != 0) {
    *(uint *)(memorySize + 0x34) = *(uint *)(memorySize + 0x34) & 0xfffffffe;
    FUN_180045af0(memorySize + 0x70);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090e7a0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x1a0)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 400) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090e7b0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0xa0)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x90) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090e7c0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x100)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0xf0) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090e7d0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x60)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x50) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090e7e0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x90)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x80) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090e7f0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0xf0)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0xe0) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090e800(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x1b0)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x1a0) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090e810(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090e820(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x210)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x200) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090e830(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090e840(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x270)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x260) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090e850(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090e860(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x2d0)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x2c0) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090e870(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



void Unwind_18090e880(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 800) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090e890(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x1a8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090e8a0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x218) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090e8b0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x288) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090e8c0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0xd0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090e8d0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x98) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x98) + 0x38))();
  }
  *(uint64 *)(memorySize + 0x68) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x70) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x70) = 0;
  *(uint32 *)(memorySize + 0x80) = 0;
  *(uint64 *)(memorySize + 0x68) = &threadLocalStorageCleanup;
  if (*(longlong **)(memorySize + 0x60) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x60) + 0x38))();
  }
  return;
}



void Unwind_18090e8e0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x28);
  if (*(longlong **)(localLong1 + 0x58) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x58) + 0x38))();
  }
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  if (*(longlong **)(localLong1 + 0x20) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x20) + 0x38))();
  }
  return;
}



void Unwind_18090e8f0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x128) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x128) + 0x38))();
  }
  *(uint64 *)(memorySize + 0xf8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x100) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x100) = 0;
  *(uint32 *)(memorySize + 0x110) = 0;
  *(uint64 *)(memorySize + 0xf8) = &threadLocalStorageCleanup;
  if (*(longlong **)(memorySize + 0xf0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xf0) + 0x38))();
  }
  return;
}



void Unwind_18090e900(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x288) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090e910(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x60) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x60) + 0x38))();
  }
  return;
}



void Unwind_18090e920(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x68) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x70) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x70) = 0;
  *(uint32 *)(memorySize + 0x80) = 0;
  *(uint64 *)(memorySize + 0x68) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090e930(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x98) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x98) + 0x38))();
  }
  return;
}



void Unwind_18090e940(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x28) + 0x20);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090e950(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x28);
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090e960(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x28) + 0x58);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090e970(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xf0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xf0) + 0x38))();
  }
  return;
}



void Unwind_18090e980(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0xf8) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0x100) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0x100) = 0;
  *(uint32 *)(memorySize + 0x110) = 0;
  *(uint64 *)(memorySize + 0xf8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090e990(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x128) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x128) + 0x38))();
  }
  return;
}



void Unwind_18090e9a0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 800) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090e9b0(void)

{
  _DAT_180c8695c = _DAT_180c8695c + -1;
  (**(code **)(*_DAT_180c86968 + 0x20))();
  return;
}



void Unwind_18090e9c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x40);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x38); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x38) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090e9d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x40);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x38); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x38) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090e9e0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 2) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffd;
    FUN_180627b90(memorySize + 200);
  }
  return;
}



void Unwind_18090ea10(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 8) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffff7;
    FUN_180627b90(memorySize + 200);
  }
  return;
}



void Unwind_18090ea40(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 0x10) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xffffffef;
    FUN_180627b90(memorySize + 0x38);
  }
  return;
}



void Unwind_18090ea70(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 0x20) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xffffffdf;
    FUN_180627b90(memorySize + 200);
  }
  return;
}



void Unwind_18090eaa0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 0x40) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xffffffbf;
    FUN_180627b90(memorySize + 0x38);
  }
  return;
}



void Unwind_18090ead0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 0x80) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xffffff7f;
    FUN_180627b90(memorySize + 200);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_18090eb00(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  longlong *plVar4;
  longlong lVar5;
  
  if (0 < *(int *)(memorySize + 0x140)) {
    lVar5 = *(longlong *)(_DAT_180c86938 + 0x1cd8);
    if ((*(char *)(_DAT_180c86890 + 0x12e3) != '\0') || (*(char *)(_DAT_180c86890 + 0x12dd) != '\0')
       ) {
      plVar4 = (longlong *)(lVar5 + 0x80d8 + (longlong)*(int *)(lVar5 + 0x8088) * 0x20);
      localLong1 = *plVar4;
      localLong1 = *(longlong *)(localLong1 + ((longlong)(int)(plVar4[1] - localLong1 >> 3) + -1) * 8);
      FUN_180057340();
      if (*(longlong *)(localLong1 + 0x68) == 0) {
        *(longlong *)(lVar5 + 0x80b0 + (longlong)*(int *)(lVar5 + 0x8088) * 8) = localLong1;
      }
      localLong3 = (longlong)*(int *)(lVar5 + 0x8088) * 0x20;
      localLong1 = *(longlong *)(localLong3 + 200 + lVar5 + 0x7f20);
      localInt2 = (int)(*(longlong *)(localLong3 + 0xd0 + lVar5 + 0x7f20) - localLong1 >> 3) + -1;
      if (-1 < localInt2) {
        lVar5 = (longlong)localInt2;
        do {
          if (*(char *)(*(longlong *)(localLong1 + lVar5 * 8) + 0x60) == '\x01') {
            if (localInt2 != -1) {
              FUN_1802c24b0(*(uint64 *)(localLong1 + (longlong)localInt2 * 8));
            }
            break;
          }
          localInt2 = localInt2 + -1;
          lVar5 = lVar5 + -1;
        } while (-1 < lVar5);
      }
    }
  }
  *(data **)(memorySize + 0x130) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090eb10(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x128) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090eb20(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x108);
  if (*(longlong **)(localLong1 + 0x58) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x58) + 0x38))();
  }
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  if (*(longlong **)(localLong1 + 0x20) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x20) + 0x38))();
  }
  return;
}



void Unwind_18090eb30(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x108) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090eb40(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x108) + 0x20);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090eb50(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x108);
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090eb60(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x108) + 0x58);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090eb70(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(memorySize + 0xa0,8,0x10,FUN_180045af0,0xfffffffffffffffe);
  return;
}



void Unwind_18090eb80(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x78) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090eb90(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(memorySize + 0xa0,8,0x10,FUN_180045af0);
  return;
}



void Unwind_18090ebc0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(memorySize + 0xa0,8,0x10,FUN_180045af0);
  return;
}



void Unwind_18090ebf0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 200) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 200) + 0x38))();
  }
  *(uint64 *)(memorySize + 0x98) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xa0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xa0) = 0;
  *(uint32 *)(memorySize + 0xb0) = 0;
  *(uint64 *)(memorySize + 0x98) = &threadLocalStorageCleanup;
  if (*(longlong **)(memorySize + 0x90) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x90) + 0x38))();
  }
  return;
}



void Unwind_18090ec00(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x30);
  if (*(longlong **)(localLong1 + 0x58) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x58) + 0x38))();
  }
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  if (*(longlong **)(localLong1 + 0x20) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x20) + 0x38))();
  }
  return;
}



void Unwind_18090ec10(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x90) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x90) + 0x38))();
  }
  return;
}



void Unwind_18090ec20(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x98) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xa0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xa0) = 0;
  *(uint32 *)(memorySize + 0xb0) = 0;
  *(uint64 *)(memorySize + 0x98) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090ec30(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 200) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 200) + 0x38))();
  }
  return;
}



void Unwind_18090ec40(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x30);
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090ec50(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x30) + 0x58);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ec60(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0x1a8) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0x1a8) + 0x38))();
  }
  return;
}



void Unwind_18090ec70(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0x1a0) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0x1a0) + 0x38))();
  }
  return;
}



void Unwind_18090ec80(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x100) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x100) + 0x38))();
  }
  return;
}



void Unwind_18090ec90(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x90) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x90) + 0x38))();
  }
  return;
}



void Unwind_18090eca0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0xd0) & 1) != 0) {
    *(uint *)(memorySize + 0xd0) = *(uint *)(memorySize + 0xd0) & 0xfffffffe;
    FUN_180045af0(*(uint64 *)(memorySize + 0x198));
  }
  return;
}



void Unwind_18090ecd0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x100) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x100) + 0x38))();
  }
  return;
}



void Unwind_18090ece0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x58) + 0x28);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ecf0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x90) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x90) + 0x38))();
  }
  return;
}



void Unwind_18090ed00(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x80) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x80),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090ed10(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x80) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x80),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090ed20(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xf8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xf8) + 0x38))();
  }
  *(uint64 *)(memorySize + 200) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xd0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xd0) = 0;
  *(uint32 *)(memorySize + 0xe0) = 0;
  *(uint64 *)(memorySize + 200) = &threadLocalStorageCleanup;
  if (*(longlong **)(memorySize + 0xc0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xc0) + 0x38))();
  }
  return;
}



void Unwind_18090ed30(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x60);
  if (*(longlong **)(localLong1 + 0x58) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x58) + 0x38))();
  }
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  if (*(longlong **)(localLong1 + 0x20) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x20) + 0x38))();
  }
  return;
}



void Unwind_18090ed40(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xc0) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xc0) + 0x38))();
  }
  return;
}



void Unwind_18090ed50(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 200) = &threadLocalStorageData;
  if (*(longlong *)(memorySize + 0xd0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(memorySize + 0xd0) = 0;
  *(uint32 *)(memorySize + 0xe0) = 0;
  *(uint64 *)(memorySize + 200) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090ed60(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0xf8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0xf8) + 0x38))();
  }
  return;
}



void Unwind_18090ed70(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x60);
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090ed80(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x58);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ed90(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x178) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x178),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090eda0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x150) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x150),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090edb0(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x150);
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_18090edc0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x150) = &threadSyncObject;
  return;
}



void Unwind_18090edd0(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x88);
  *plocalUInt1 = &bufferControlData2;
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_18090ede0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x88) + 0x30);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x88) + 0x20,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090edf0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x88) + 0x40);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ee00(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x88);
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_18090ee10(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x88) = &threadSyncObject;
  return;
}



void Unwind_18090ee20(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x150) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x150),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090ee30(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x98);
  *plocalUInt1 = &bufferControlData2;
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_18090ee40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x98) + 0x30);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x98) + 0x20,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090ee50(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x98) + 0x40);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ee60(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x98);
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_18090ee70(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x98) = &threadSyncObject;
  return;
}



void Unwind_18090ee80(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0xe8) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0xe8),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090ee90(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x178) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x178),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090eea0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  if (*(longlong *)(*(longlong *)(memorySize + 0x58) + 0x1d8) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x58) + 0x1b8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090eeb0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x88) + 8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090eec0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1800ed380(*(longlong *)(memorySize + 0x88) + 0x80);
  return;
}



void Unwind_18090eee0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x88) + 0x2d0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090ef00(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x48) + 0x1b8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ef20(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x48) + 0x1d8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090ef40(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 8) + 0x70);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ef50(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x10);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090ef60(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x10);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090ef70(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x48) + 0x70);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ef80(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x78) + 0x10);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x78),0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090ef90(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x70) + 0x30,0x30,0xe,FUN_1800edc10);
  return;
}



void Unwind_18090efc0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800ee130(*(longlong *)(memorySize + 0x70) + 0x2d0,
                *(uint64 *)(*(longlong *)(memorySize + 0x70) + 0x2e0),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_18090efe0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  longlong lVar4;
  longlong *plVar5;
  
  localLong1 = *(longlong *)(memorySize + 0x70);
  plocalLong2 = (longlong *)(localLong1 + 0x300);
  localLong3 = *(longlong *)(localLong1 + 0x310);
  lVar4 = *(longlong *)(localLong1 + 800);
  plVar5 = *(longlong **)(localLong1 + 0x328);
  if (localLong3 != *(longlong *)(localLong1 + 0x330)) {
    do {
      FUN_1800edd10(localLong3);
      localLong3 = localLong3 + 0x78;
      if (localLong3 == lVar4) {
        plVar5 = plVar5 + 1;
        localLong3 = *plVar5;
        lVar4 = localLong3 + 0x1e0;
      }
    } while (localLong3 != *(longlong *)(localLong1 + 0x330));
  }
  if (*plocalLong2 != 0) {
    plVar5 = *(longlong **)(localLong1 + 0x328);
    while (plVar5 < (longlong *)(*(longlong *)(localLong1 + 0x348) + 8)) {
      lVar4 = *plVar5;
      plVar5 = plVar5 + 1;
      if (lVar4 != 0) {
                    // WARNING: Subroutine does not return
        HandleCriticalError();
      }
    }
    if (*plocalLong2 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    *plocalLong2 = 0;
  }
  return;
}



void Unwind_18090f000(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x70) + 0x358);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x70) + 0x360);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 4) {
    if ((longlong *)plocalLong3[3] != (longlong *)0x0) {
      (**(code **)(*(longlong *)plocalLong3[3] + 0x38))();
    }
    if ((longlong *)plocalLong3[2] != (longlong *)0x0) {
      (**(code **)(*(longlong *)plocalLong3[2] + 0x38))();
    }
    if ((longlong *)plocalLong3[1] != (longlong *)0x0) {
      (**(code **)(*(longlong *)plocalLong3[1] + 0x38))();
    }
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090f020(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800ee130(*(longlong *)(memorySize + 0x78),*(uint64 *)(*(longlong *)(memorySize + 0x78) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f030(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800ee130(*(longlong *)(memorySize + 0x78),*(uint64 *)(*(longlong *)(memorySize + 0x78) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f040(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong localLong2;
  longlong localLong3;
  longlong *plVar4;
  
  plocalLong1 = *(longlong **)(memorySize + 0x78);
  localLong2 = plocalLong1[2];
  localLong3 = plocalLong1[4];
  plVar4 = (longlong *)plocalLong1[5];
  if (localLong2 != plocalLong1[6]) {
    do {
      FUN_1800edd10(localLong2);
      localLong2 = localLong2 + 0x78;
      if (localLong2 == localLong3) {
        plVar4 = plVar4 + 1;
        localLong2 = *plVar4;
        localLong3 = localLong2 + 0x1e0;
      }
    } while (localLong2 != plocalLong1[6]);
  }
  if (*plocalLong1 != 0) {
    plVar4 = (longlong *)plocalLong1[5];
    while (plVar4 < (longlong *)(plocalLong1[9] + 8)) {
      localLong3 = *plVar4;
      plVar4 = plVar4 + 1;
      if (localLong3 != 0) {
                    // WARNING: Subroutine does not return
        HandleCriticalError();
      }
    }
    if (*plocalLong1 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    *plocalLong1 = 0;
  }
  return;
}



void Unwind_18090f050(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong localLong2;
  longlong *plocalLong3;
  
  plocalLong1 = *(longlong **)(memorySize + 0x78);
  localLong2 = *plocalLong1;
  if (localLong2 != 0) {
    plocalLong3 = (longlong *)plocalLong1[5];
    if (plocalLong3 < (longlong *)(plocalLong1[9] + 8)) {
      do {
        localLong2 = *plocalLong3;
        plocalLong3 = plocalLong3 + 1;
        if (localLong2 != 0) {
                    // WARNING: Subroutine does not return
          HandleCriticalError();
        }
      } while (plocalLong3 < (longlong *)(plocalLong1[9] + 8));
      localLong2 = *plocalLong1;
    }
    if (localLong2 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    *plocalLong1 = 0;
  }
  return;
}



void Unwind_18090f060(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x78);
  plocalLong1 = (longlong *)plocalLong2[1];
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 4) {
    if ((longlong *)plocalLong3[3] != (longlong *)0x0) {
      (**(code **)(*(longlong *)plocalLong3[3] + 0x38))();
    }
    if ((longlong *)plocalLong3[2] != (longlong *)0x0) {
      (**(code **)(*(longlong *)plocalLong3[2] + 0x38))();
    }
    if ((longlong *)plocalLong3[1] != (longlong *)0x0) {
      (**(code **)(*(longlong *)plocalLong3[1] + 0x38))();
    }
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090f070(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x78) + 8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f080(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800ee080(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f090(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800ee080(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f0a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800ee130(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f0b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800ee130(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f0c0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong localLong2;
  longlong localLong3;
  longlong *plVar4;
  
  plocalLong1 = *(longlong **)(memorySize + 0x40);
  localLong2 = plocalLong1[2];
  localLong3 = plocalLong1[4];
  plVar4 = (longlong *)plocalLong1[5];
  if (localLong2 != plocalLong1[6]) {
    do {
      FUN_1800edd10(localLong2);
      localLong2 = localLong2 + 0x78;
      if (localLong2 == localLong3) {
        plVar4 = plVar4 + 1;
        localLong2 = *plVar4;
        localLong3 = localLong2 + 0x1e0;
      }
    } while (localLong2 != plocalLong1[6]);
  }
  if (*plocalLong1 != 0) {
    plVar4 = (longlong *)plocalLong1[5];
    while (plVar4 < (longlong *)(plocalLong1[9] + 8)) {
      localLong3 = *plVar4;
      plVar4 = plVar4 + 1;
      if (localLong3 != 0) {
                    // WARNING: Subroutine does not return
        HandleCriticalError();
      }
    }
    if (*plocalLong1 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    *plocalLong1 = 0;
  }
  return;
}



void Unwind_18090f0d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x40);
  plocalLong1 = (longlong *)plocalLong2[1];
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 4) {
    if ((longlong *)plocalLong3[3] != (longlong *)0x0) {
      (**(code **)(*(longlong *)plocalLong3[3] + 0x38))();
    }
    if ((longlong *)plocalLong3[2] != (longlong *)0x0) {
      (**(code **)(*(longlong *)plocalLong3[2] + 0x38))();
    }
    if ((longlong *)plocalLong3[1] != (longlong *)0x0) {
      (**(code **)(*(longlong *)plocalLong3[1] + 0x38))();
    }
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090f0e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  code *pcVar1;
  
  pcVar1 = *(code **)(*(longlong *)(memorySize + 0x40) + 0x68);
  if (pcVar1 != (code *)0x0) {
    (*pcVar1)(*(longlong *)(memorySize + 0x40) + 0x58,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_18090f0f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800ee080(*(longlong *)(memorySize + 0x20),*(uint64 *)(*(longlong *)(memorySize + 0x20) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f100(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800ee080(*(longlong *)(memorySize + 0x20),*(uint64 *)(*(longlong *)(memorySize + 0x20) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f110(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong localLong2;
  longlong *plocalLong3;
  
  plocalLong1 = *(longlong **)(memorySize + 0x40);
  localLong2 = *plocalLong1;
  if (localLong2 != 0) {
    plocalLong3 = (longlong *)plocalLong1[5];
    if (plocalLong3 < (longlong *)(plocalLong1[9] + 8)) {
      do {
        localLong2 = *plocalLong3;
        plocalLong3 = plocalLong3 + 1;
        if (localLong2 != 0) {
                    // WARNING: Subroutine does not return
          HandleCriticalError();
        }
      } while (plocalLong3 < (longlong *)(plocalLong1[9] + 8));
      localLong2 = *plocalLong1;
    }
    if (localLong2 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    *plocalLong1 = 0;
  }
  return;
}



void Unwind_18090f120(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x48) + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f130(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x48) + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f140(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x78);
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090f150(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  *(uint64 *)(localLong1 + 8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x10) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x10) = 0;
  *(uint32 *)(localLong1 + 0x20) = 0;
  *(uint64 *)(localLong1 + 8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090f160(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x78);
  *(uint64 *)(localLong1 + 8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x10) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x10) = 0;
  *(uint32 *)(localLong1 + 0x20) = 0;
  *(uint64 *)(localLong1 + 8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090f170(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x58) + 0x28);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f180(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f190(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  *(uint64 *)(localLong1 + 8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x10) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x10) = 0;
  *(uint32 *)(localLong1 + 0x20) = 0;
  *(uint64 *)(localLong1 + 8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090f1a0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f1b0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x20) + 0x130);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090f1d0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x20) + 0x150);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090f1f0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090f200(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong *)(*(longlong *)(memorySize + 0x60) + 0x60) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090f210(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x60) + 0xc0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090f230(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x60) + 0xe0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090f250(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x60) + 0x100);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090f270(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x60) + 0x120);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090f290(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x60) + 0x140);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090f2b0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x60) + 0x160);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090f2d0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x60) + 0x180);
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x60) + 0x188);
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x30) {
    FUN_1800f89b0();
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090f2f0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x60) + 0x1a0);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090f310(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_18090f330(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x60) + 0x210);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x218);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090f350(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x60) + 0x230);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x238);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090f370(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong localLong2;
  uint uVar3;
  longlong *plVar4;
  
  localLong1 = *(longlong *)(memorySize + 0x60);
  uVar3 = 0;
  plVar4 = (longlong *)(localLong1 + 600);
  do {
    if (*plVar4 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    localLong2 = (longlong)(int)uVar3;
    plVar4 = plVar4 + 1;
    uVar3 = uVar3 + 1;
    *(uint64 *)(localLong1 + 600 + localLong2 * 8) = 0;
  } while (uVar3 < 10);
  return;
}



void Unwind_18090f390(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800f7260(*(longlong *)(memorySize + 0x60) + 0x2c8,
                *(uint64 *)(*(longlong *)(memorySize + 0x60) + 0x2d8),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_18090f3b0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x60);
  if (*(longlong **)(localLong1 + 0x398) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x398) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x390) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x390) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x388) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x388) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x380) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x380) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x378) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x378) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x370) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x370) + 0x38))();
  }
  FUN_1808fc8a8(localLong1 + 0x308,8,0xd,FUN_180045af0);
  return;
}



void Unwind_18090f3d0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x60) + 0x3a8,8,0xd,FUN_180045af0);
  return;
}



void Unwind_18090f410(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x410);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f430(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x418);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f450(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x420);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f470(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x428);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f490(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x430);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f4b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x438);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f4d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x440);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f4f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x448);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f510(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x450);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f530(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x458);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f550(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x460);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f570(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x468);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f590(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800f7320(*(longlong *)(memorySize + 0x60) + 0x470,
                *(uint64 *)(*(longlong *)(memorySize + 0x60) + 0x480),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_18090f5b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x40a0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f5d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x40a8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f5f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x40b0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f610(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800f74f0(*(longlong *)(memorySize + 0x60) + 0x40e0,
                *(uint64 *)(*(longlong *)(memorySize + 0x60) + 0x40f0),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_18090f630(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058210(*(longlong *)(memorySize + 0x60) + 0x4110,
                *(uint64 *)(*(longlong *)(memorySize + 0x60) + 0x4120),operationFlags,callbackFunction,
                0xfffffffffffffffe);
  return;
}



void Unwind_18090f650(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x60);
  *(uint64 *)(localLong1 + 0x4140) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x4148) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x4148) = 0;
  *(uint32 *)(localLong1 + 0x4158) = 0;
  *(uint64 *)(localLong1 + 0x4140) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090f670(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x60);
  *(uint64 *)(localLong1 + 0x4190) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x4198) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x4198) = 0;
  *(uint32 *)(localLong1 + 0x41a8) = 0;
  *(uint64 *)(localLong1 + 0x4190) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090f690(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x68);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x30) {
    FUN_1800f89b0();
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090f6a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800f7260(*(longlong *)(memorySize + 0x68),*(uint64 *)(*(longlong *)(memorySize + 0x68) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f6b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800f7260(*(longlong *)(memorySize + 0x68),*(uint64 *)(*(longlong *)(memorySize + 0x68) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f6c0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x68),8,0xd,FUN_180045af0);
  return;
}



void Unwind_18090f6f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x68) + 0x68);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f700(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x68) + 0x70);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f710(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x68) + 0x78);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f720(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x68) + 0x80);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f740(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x68) + 0x88);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f760(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x68) + 0x90);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f780(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800f7320(*(longlong *)(memorySize + 0x68),*(uint64 *)(*(longlong *)(memorySize + 0x68) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f790(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800f7320(*(longlong *)(memorySize + 0x68),*(uint64 *)(*(longlong *)(memorySize + 0x68) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f7a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800f74f0(*(longlong *)(memorySize + 0x68),*(uint64 *)(*(longlong *)(memorySize + 0x68) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f7b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800f74f0(*(longlong *)(memorySize + 0x68),*(uint64 *)(*(longlong *)(memorySize + 0x68) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f7c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058210(*(longlong *)(memorySize + 0x68),*(uint64 *)(*(longlong *)(memorySize + 0x68) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f7d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_180058210(*(longlong *)(memorySize + 0x68),*(uint64 *)(*(longlong *)(memorySize + 0x68) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f7e0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x40);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x30) {
    FUN_1800f89b0();
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090f7f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800f7260(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f800(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800f7260(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f810(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x40),8,0xd,FUN_180045af0);
  return;
}



void Unwind_18090f840(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800f7320(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f850(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800f7320(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f860(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800f74f0(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f870(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800f74f0(*(longlong *)(memorySize + 0x40),*(uint64 *)(*(longlong *)(memorySize + 0x40) + 0x10),
                operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090f880(uint64 resourceHandle,longlong memorySize)

{
  int localInt1;
  
  localInt1 = _Mtx_unlock(*(uint64 *)(memorySize + 0x140));
  if (localInt1 != 0) {
    __Throw_C_error_std__YAXH_Z(localInt1);
  }
  return;
}



void Unwind_18090f890(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0x140) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0x140) + 0x38))();
  }
  return;
}



void Unwind_18090f8a0(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0x130) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0x130) + 0x38))();
  }
  return;
}



void Unwind_18090f8b0(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0xa8) != '\0') {
    ReleaseSRWLockExclusive(*(uint64 *)(memorySize + 0xa0));
  }
  return;
}



void Unwind_18090f8c0(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0xa8) != '\0') {
    ReleaseSRWLockExclusive(*(uint64 *)(memorySize + 0xa0));
  }
  return;
}



void Unwind_18090f8d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x130) + 8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f8e0(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0x68) != '\0') {
    ReleaseSRWLockExclusive(*(uint64 *)(memorySize + 0x60));
  }
  return;
}



void Unwind_18090f8f0(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0x68) != '\0') {
    ReleaseSRWLockExclusive(*(uint64 *)(memorySize + 0x60));
  }
  return;
}



void Unwind_18090f900(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x24) & 1) != 0) {
    *(uint *)(memorySize + 0x24) = *(uint *)(memorySize + 0x24) & 0xfffffffe;
    FUN_180045af0(memorySize + 0xb8);
  }
  return;
}



void Unwind_18090f930(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x24) & 2) != 0) {
    *(uint *)(memorySize + 0x24) = *(uint *)(memorySize + 0x24) & 0xfffffffd;
    FUN_180045af0(memorySize + 0xc0);
  }
  return;
}



void Unwind_18090f960(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0xa0) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0xa0) + 0x38))();
  }
  return;
}



void Unwind_18090f970(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xa0) + 8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f980(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xa0) + 0x10);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f990(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xa0) + 0x18);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f9a0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xa0) + 0x28);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f9b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xa0) + 0x30);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f9c0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xa0) + 0x38);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f9d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xa0) + 0x40);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f9e0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xa0) + 0x48);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090f9f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xa0) + 0x50);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090fa00(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xa0) + 0x58);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090fa10(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0xa0) + 0x60);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090fa20(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x130);
  *plocalUInt1 = &unknown_1809fcb90;
  _Mtx_destroy_in_situ();
  _Cnd_destroy_in_situ(plocalUInt1 + 4);
  *plocalUInt1 = &bufferControlData2;
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_18090fa30(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x130) + 0xc0);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090fa50(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0x148) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0x148) + 0x38))();
  }
  return;
}



void Unwind_18090fa60(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0x150) != '\0') {
    ReleaseSRWLockShared(*(uint64 *)(memorySize + 0x148));
  }
  return;
}



void Unwind_18090fa70(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0x150) != '\0') {
    ReleaseSRWLockShared(*(uint64 *)(memorySize + 0x148));
  }
  return;
}



void Unwind_18090fa80(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0x160) != '\0') {
    ReleaseSRWLockShared(*(uint64 *)(memorySize + 0x158));
  }
  return;
}



void Unwind_18090fa90(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0x160) != '\0') {
    ReleaseSRWLockShared(*(uint64 *)(memorySize + 0x158));
  }
  return;
}



void Unwind_18090faa0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x158) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090fab0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x158) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090fac0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x120);
  if (*(longlong **)(localLong1 + 0x58) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x58) + 0x38))();
  }
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  if (*(longlong **)(localLong1 + 0x20) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x20) + 0x38))();
  }
  return;
}



void Unwind_18090fad0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x120) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090fae0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x120) + 0x20);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090faf0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x120);
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint32 *)(localLong1 + 0x40) = 0;
  *(uint64 *)(localLong1 + 0x28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090fb00(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x120) + 0x58);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090fb10(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800f74f0(memorySize + 0x58,*(uint64 *)(memorySize + 0x68),operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090fb20(uint64 resourceHandle,longlong memorySize)

{
  FUN_180057010(memorySize + 0x280);
  return;
}



void Unwind_18090fb30(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800f74f0(memorySize + 0x58,*(uint64 *)(memorySize + 0x68),operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090fb40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  FUN_1800f74f0(memorySize + 0x58,*(uint64 *)(memorySize + 0x68),operationFlags,callbackFunction,0xfffffffffffffffe);
  return;
}



void Unwind_18090fb50(uint64 resourceHandle,longlong memorySize)

{
  FUN_180057010(memorySize + 0x280);
  return;
}



void Unwind_18090fb60(uint64 resourceHandle,longlong memorySize)

{
  FUN_180057010(memorySize + 0x280);
  return;
}



void Unwind_18090fb70(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0xd0);
  *plocalUInt1 = &threadLocalStorageData;
  if (plocalUInt1[1] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[1] = 0;
  *(uint32 *)(plocalUInt1 + 3) = 0;
  *plocalUInt1 = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090fb80(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x88) + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090fb90(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0xa0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090fba0(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0xb8) != '\0') {
    ReleaseSRWLockExclusive(*(uint64 *)(memorySize + 0xb0));
  }
  return;
}



void Unwind_18090fbb0(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0xb8) != '\0') {
    ReleaseSRWLockExclusive(*(uint64 *)(memorySize + 0xb0));
  }
  return;
}



void Unwind_18090fbc0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x60) & 1) != 0) {
    *(uint *)(memorySize + 0x60) = *(uint *)(memorySize + 0x60) & 0xfffffffe;
    FUN_180045af0(memorySize + 0x70);
  }
  return;
}



void Unwind_18090fbf0(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0x88) != '\0') {
    ReleaseSRWLockExclusive(*(uint64 *)(memorySize + 0x80));
  }
  return;
}



void Unwind_18090fc00(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x100) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090fc10(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0x88) != '\0') {
    ReleaseSRWLockExclusive(*(uint64 *)(memorySize + 0x80));
  }
  return;
}



void Unwind_18090fc20(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x60) & 1) != 0) {
    *(uint *)(memorySize + 0x60) = *(uint *)(memorySize + 0x60) & 0xfffffffe;
    FUN_180045af0(memorySize + 0x68);
  }
  return;
}



void Unwind_18090fc50(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x60) & 2) != 0) {
    *(uint *)(memorySize + 0x60) = *(uint *)(memorySize + 0x60) & 0xfffffffd;
    FUN_180045af0(memorySize + 0x68);
  }
  return;
}



void Unwind_18090fc80(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0x90) != '\0') {
    ReleaseSRWLockExclusive(*(uint64 *)(memorySize + 0x88));
  }
  return;
}



void Unwind_18090fc90(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0x90) != '\0') {
    ReleaseSRWLockExclusive(*(uint64 *)(memorySize + 0x88));
  }
  return;
}



void Unwind_18090fca0(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0xc0) != '\0') {
    ReleaseSRWLockExclusive(*(uint64 *)(memorySize + 0xb8));
  }
  return;
}



void Unwind_18090fcb0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x1c0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090fcc0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x1f8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090fcd0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0xe0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090fce0(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0xc0) != '\0') {
    ReleaseSRWLockExclusive(*(uint64 *)(memorySize + 0xb8));
  }
  return;
}



void Unwind_18090fcf0(uint64 resourceHandle,longlong memorySize)

{
  if ((longlong *)**(longlong **)(memorySize + 0x158) != (longlong *)0x0) {
    (**(code **)(*(longlong *)**(longlong **)(memorySize + 0x158) + 0x38))();
  }
  return;
}



void Unwind_18090fd00(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    FUN_180045af0(memorySize + 0x98);
  }
  return;
}



void Unwind_18090fd30(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 2) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffd;
    FUN_180045af0(memorySize + 0xf8);
  }
  return;
}



void Unwind_18090fd60(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 4) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffb;
    FUN_180045af0(memorySize + 0xf8);
  }
  return;
}



void Unwind_18090fd90(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 8) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffff7;
    FUN_180045af0(memorySize + 0x100);
  }
  return;
}



void Unwind_18090fdc0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 0x10) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xffffffef;
    FUN_180045af0(memorySize + 0x108);
  }
  return;
}



void Unwind_18090fdf0(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 200) != '\0') {
    ReleaseSRWLockExclusive(*(uint64 *)(memorySize + 0xc0));
  }
  return;
}



void Unwind_18090fe00(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 200) != '\0') {
    ReleaseSRWLockExclusive(*(uint64 *)(memorySize + 0xc0));
  }
  return;
}



void Unwind_18090fe10(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0xd8) != '\0') {
    ReleaseSRWLockExclusive(*(uint64 *)(memorySize + 0xd0));
  }
  return;
}



void Unwind_18090fe20(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0xd8) != '\0') {
    ReleaseSRWLockExclusive(*(uint64 *)(memorySize + 0xd0));
  }
  return;
}



void Unwind_18090fe30(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0xe8) != '\0') {
    ReleaseSRWLockExclusive(*(uint64 *)(memorySize + 0xe0));
  }
  return;
}



void Unwind_18090fe40(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0xe8) != '\0') {
    ReleaseSRWLockExclusive(*(uint64 *)(memorySize + 0xe0));
  }
  return;
}



void Unwind_18090fe50(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x70) + 8);
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x10);
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x128) {
    FUN_1800f8930(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090fe60(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x80);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x128) {
    FUN_1800f8930(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090fe70(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0x30) != '\0') {
    ReleaseSRWLockShared(*(uint64 *)(memorySize + 0x28));
  }
  return;
}



void Unwind_18090fe80(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0x30) != '\0') {
    ReleaseSRWLockShared(*(uint64 *)(memorySize + 0x28));
  }
  return;
}



void Unwind_18090fe90(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(*(uint64 **)(memorySize + 0x40) + 1) != '\0') {
    ReleaseSRWLockShared(**(uint64 **)(memorySize + 0x40));
  }
  return;
}



void Unwind_18090fea0(uint64 resourceHandle,longlong memorySize)

{
  FUN_180057010(memorySize + 0x2a0);
  return;
}



void Unwind_18090feb0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    FUN_180627b90(memorySize + 0x40);
  }
  return;
}



void Unwind_18090fee0(uint64 resourceHandle,longlong memorySize)

{
  FUN_180057010(memorySize + 0x2a0);
  return;
}



void Unwind_18090fef0(uint64 resourceHandle,longlong memorySize)

{
  FUN_180057010(memorySize + 0x2a0);
  return;
}



void Unwind_18090ff00(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x100);
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_18090ff10(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x100) + 0x18);
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x100) + 0x20);
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x128) {
    FUN_1800f8930(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090ff20(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x100) + 0x38) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090ff30(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x100) + 0xe0) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090ff50(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x100) + 0x180);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_18090ff70(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x100) = &threadSyncObject;
  return;
}



void Unwind_18090ff80(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x158);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x128) {
    FUN_1800f8930(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090ff90(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x158);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_18090ffa0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x168) = &threadLocalStorageCleanup;
  return;
}



void Unwind_18090ffb0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 4) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffb;
    FUN_180627b90(memorySize + 0x60);
  }
  return;
}



void Unwind_18090ffe0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x58) + 8);
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x58) + 0x10);
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x128) {
    FUN_1800f8930(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_18090fff0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x60);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x128) {
    FUN_1800f8930(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180910000(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x38) + 8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180910010(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x60) + 8);
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x60) + 0x10);
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x128) {
    FUN_1800f8930(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180910020(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x68);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x128) {
    FUN_1800f8930(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180910030(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong localLong2;
  longlong localLong3;
  
  plocalLong1 = (longlong *)(*(longlong *)(memorySize + 0x68) + 0x28);
  localLong2 = *(longlong *)(*(longlong *)(memorySize + 0x68) + 0x30);
  for (localLong3 = *plocalLong1; localLong3 != localLong2; localLong3 = localLong3 + 0x18) {
    if (*(longlong **)(localLong3 + 8) != (longlong *)0x0) {
      (**(code **)(**(longlong **)(localLong3 + 8) + 0x38))();
    }
  }
  if (*plocalLong1 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180910040(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x70) + 8);
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x10);
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x18) {
    if (*(longlong **)(localLong3 + 8) != (longlong *)0x0) {
      (**(code **)(**(longlong **)(localLong3 + 8) + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180910050(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x78);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x18) {
    if (*(longlong **)(localLong3 + 8) != (longlong *)0x0) {
      (**(code **)(**(longlong **)(localLong3 + 8) + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180910060(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x68) + 8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180910070(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x48);
  if (*(longlong **)(localLong1 + 0x88) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x88) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x80) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x80) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x78) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x78) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x70) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x70) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x68) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x68) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x60) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x60) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x58) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x58) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x50) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x50) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x48) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x48) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x40) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x40) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x38) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x38) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x30) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x30) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x28) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x28) + 0x38))();
  }
  return;
}



void Unwind_180910080(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x50);
  if (*(longlong **)(localLong1 + 0x68) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x68) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x60) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x60) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x58) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x58) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x50) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x50) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x48) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x48) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x40) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x40) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x38) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x38) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x30) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x30) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x28) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x28) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x20) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x20) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x18) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x18) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x10) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x10) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 8) + 0x38))();
  }
  return;
}



void Unwind_180910090(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x88) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809100a0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x58) + 0x20) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809100b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x70) + 0x98);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809100d0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x40) + 8);
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0x10);
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x18) {
    if (*(longlong **)(localLong3 + 8) != (longlong *)0x0) {
      (**(code **)(**(longlong **)(localLong3 + 8) + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809100e0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x48);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x18) {
    if (*(longlong **)(localLong3 + 8) != (longlong *)0x0) {
      (**(code **)(**(longlong **)(localLong3 + 8) + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809100f0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(longlong **)(localLong1 + 0x68) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x68) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x60) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x60) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x58) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x58) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x50) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x50) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x48) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x48) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x40) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x40) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x38) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x38) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x30) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x30) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x28) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x28) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x20) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x20) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x18) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x18) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x10) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x10) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 8) + 0x38))();
  }
  return;
}



void Unwind_180910100(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x40);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x18) {
    if (*(longlong **)(localLong3 + 8) != (longlong *)0x0) {
      (**(code **)(**(longlong **)(localLong3 + 8) + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180910110(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x60);
  *(uint64 *)(localLong1 + 0x108) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x110) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x110) = 0;
  *(uint32 *)(localLong1 + 0x120) = 0;
  *(uint64 *)(localLong1 + 0x108) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910130(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x50);
  *(uint64 *)(localLong1 + 0x108) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x110) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x110) = 0;
  *(uint32 *)(localLong1 + 0x120) = 0;
  *(uint64 *)(localLong1 + 0x108) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910150(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  longlong *plocalLong2;
  longlong localLong3;
  
  plocalLong2 = *(longlong **)(memorySize + 0x40);
  localLong1 = plocalLong2[1];
  for (localLong3 = *plocalLong2; localLong3 != localLong1; localLong3 = localLong3 + 0x128) {
    FUN_1800f8930(localLong3);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180910160(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0x18,0x20,2,FUN_180627b90);
  return;
}



void Unwind_180910190(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x40),0x58,2,FUN_1800f88f0);
  return;
}



void Unwind_1809101c0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  *(uint64 *)(localLong1 + 0x108) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x110) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x110) = 0;
  *(uint32 *)(localLong1 + 0x120) = 0;
  *(uint64 *)(localLong1 + 0x108) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809101e0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x20);
  if (*(longlong **)(localLong1 + 0x68) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x68) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x60) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x60) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x58) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x58) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x50) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x50) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x48) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x48) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x40) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x40) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x38) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x38) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x30) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x30) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x28) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x28) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x20) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x20) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x18) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x18) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 0x10) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 0x10) + 0x38))();
  }
  if (*(longlong **)(localLong1 + 8) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(localLong1 + 8) + 0x38))();
  }
  return;
}



void Unwind_1809101f0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x28) + 8);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180910200(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x28) + 0x28);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180910210(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x28) + 0x30);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180910220(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x28) + 0x38);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180910230(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x28) + 0x40);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180910240(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x28) + 0x48);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180910250(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x28) + 0x50);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180910260(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x28) + 0x60);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180910270(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(*(uint64 **)(memorySize + 0x40) + 1) != '\0') {
    ReleaseSRWLockExclusive(**(uint64 **)(memorySize + 0x40));
  }
  return;
}



void Unwind_180910280(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180044a30(*(uint64 *)(memorySize + 0x40));
  }
  return;
}



void Unwind_1809102b0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x40) & 1) != 0) {
    *(uint *)(memorySize + 0x40) = *(uint *)(memorySize + 0x40) & 0xfffffffe;
    FUN_180627b90(*(uint64 *)(memorySize + 0x140));
  }
  return;
}



void Unwind_1809102e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0xf0);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0xe8); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0xe8) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809102f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0xd0);
  for (plocalUInt2 = *(uint64 **)(memorySize + 200); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 200) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180910300(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0xf0);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0xe8); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0xe8) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180910310(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = *(longlong **)(memorySize + 0x150);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = (uint64 *)plocalLong2[1];
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180910320(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x150);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180910330(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0xd0);
  for (plocalUInt2 = *(uint64 **)(memorySize + 200); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 200) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180910340(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0xa8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180910350(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = (uint64 *)**(ulonglong **)(memorySize + 0x150);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180910360(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180627b90(*(uint64 *)(memorySize + 0x38));
  }
  return;
}



void Unwind_180910390(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x40) = &unknown_180a05068;
  return;
}



void Unwind_1809103a0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x48) = &unknown_1809fcca0;
  return;
}



void Unwind_1809103b0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x48) = &unknown_1809fcd18;
  return;
}



void Unwind_1809103c0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x48) + 8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809103d0(void)

{
  _Mtx_destroy_in_situ();
  return;
}



void Unwind_1809103e0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x40) = &unknown_1809fcc88;
  return;
}



void Unwind_1809103f0(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x90) = &unknown_180a05068;
  return;
}



void Unwind_180910400(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x60);
  *plocalUInt1 = &bufferControlData2;
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_180910410(uint64 resourceHandle,longlong memorySize)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = *(uint64 **)(memorySize + 0x60);
  *plocalUInt1 = &threadContextData;
  *plocalUInt1 = &threadSyncObject;
  return;
}



void Unwind_180910420(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x60) = &threadSyncObject;
  return;
}



void Unwind_180910430(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x60) = &unknown_180a05240;
  return;
}



void Unwind_180910440(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(*(longlong *)(memorySize + 0x60) + 8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910450(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  
  localLong3 = *(longlong *)(memorySize + 0x60);
  localLong1 = localLong3 + 0x1d8;
  *(data **)((longlong)*(int *)(*(longlong *)(localLong3 + 0x128) + 4) + -0xb0 + localLong1) =
       &unknown_180a05168;
  localInt2 = *(int *)(*(longlong *)(localLong3 + 0x128) + 4);
  *(int *)((longlong)localInt2 + -0xb4 + localLong1) = localInt2 + -0xb0;
  FUN_18009fb60(localLong3 + 0x138);
  __1__basic_istream_DU__char_traits_D_std___std__UEAA_XZ(localLong3 + 0x140);
                    // WARNING: Could not recover jumptable at 0x0001800fd4a2. Too many branches
                    // WARNING: Treating indirect jump as call
  __1__basic_ios_DU__char_traits_D_std___std__UEAA_XZ(localLong1);
  return;
}



void Unwind_180910470(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x238);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180910490(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 600);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809104b0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x260);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809104d0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x60) + 0x268);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x60) + 0x270);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809104f0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x60) + 0x338);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180910510(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x60) + 0x358);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180910530(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    __1__basic_ios_DU__char_traits_D_std___std__UEAA_XZ(*(longlong *)(memorySize + 0x68) + 0xb0);
  }
  return;
}



void Unwind_180910560(uint64 resourceHandle,longlong memorySize)

{
                    // WARNING: Could not recover jumptable at 0x00018091056b. Too many branches
                    // WARNING: Treating indirect jump as call
  __1__basic_istream_DU__char_traits_D_std___std__UEAA_XZ(*(longlong *)(memorySize + 0x68) + 0x18);
  return;
}



void Unwind_180910580(uint64 resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  longlong localLong2;
  longlong localLong3;
  uint64 *puVar4;
  
  localLong3 = *(longlong *)(memorySize + 0x68);
  puVar4 = (uint64 *)(localLong3 + 0x10);
  *puVar4 = &uiWidgetTree;
  if ((*(longlong *)(localLong3 + 0x90) != 0) && (**(longlong **)(localLong3 + 0x28) == localLong3 + 0x80)) {
    localUInt1 = *(uint64 *)(localLong3 + 0xa0);
    localLong2 = *(longlong *)(localLong3 + 0x98);
    **(longlong **)(localLong3 + 0x28) = localLong2;
    **(longlong **)(localLong3 + 0x48) = localLong2;
    **(int **)(localLong3 + 0x60) = (int)localUInt1 - (int)localLong2;
  }
  if (*(char *)(localLong3 + 0x8c) != '\0') {
    FUN_1800a19c0(puVar4);
  }
                    // WARNING: Could not recover jumptable at 0x00018009fbce. Too many branches
                    // WARNING: Treating indirect jump as call
  __1__basic_streambuf_DU__char_traits_D_std___std__UEAA_XZ(puVar4);
  return;
}



void Unwind_180910590(uint64 resourceHandle,longlong memorySize)

{
  **(uint64 **)(memorySize + 0x40) = &unknown_180a05240;
  return;
}



void Unwind_1809105a0(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  int localInt2;
  longlong localLong3;
  
  localLong3 = *(longlong *)(memorySize + 0x40);
  localLong1 = localLong3 + 0x1d8;
  *(data **)((longlong)*(int *)(*(longlong *)(localLong3 + 0x128) + 4) + -0xb0 + localLong1) =
       &unknown_180a05168;
  localInt2 = *(int *)(*(longlong *)(localLong3 + 0x128) + 4);
  *(int *)((longlong)localInt2 + -0xb4 + localLong1) = localInt2 + -0xb0;
  FUN_18009fb60(localLong3 + 0x138);
  __1__basic_istream_DU__char_traits_D_std___std__UEAA_XZ(localLong3 + 0x140);
                    // WARNING: Could not recover jumptable at 0x0001800fd4a2. Too many branches
                    // WARNING: Treating indirect jump as call
  __1__basic_ios_DU__char_traits_D_std___std__UEAA_XZ(localLong1);
  return;
}



void Unwind_1809105c0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x238);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_1809105e0(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 600);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180910600(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x260);
  if (plocalLong1 != (longlong *)0x0) {
    (**(code **)(*plocalLong1 + 0x38))();
  }
  return;
}



void Unwind_180910620(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong *plocalLong2;
  longlong *plocalLong3;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x40) + 0x268);
  plocalLong1 = *(longlong **)(*(longlong *)(memorySize + 0x40) + 0x270);
  for (plocalLong3 = (longlong *)*plocalLong2; plocalLong3 != plocalLong1; plocalLong3 = plocalLong3 + 1) {
    if ((longlong *)*plocalLong3 != (longlong *)0x0) {
      (**(code **)(*(longlong *)*plocalLong3 + 0x38))();
    }
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180910640(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x338);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180910660(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x358);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180910680(uint64 resourceHandle,longlong memorySize)

{
                    // WARNING: Could not recover jumptable at 0x000180910692. Too many branches
                    // WARNING: Treating indirect jump as call
  __1__basic_istream_DU__char_traits_D_std___std__UEAA_XZ(*(longlong *)(memorySize + 0x40) + -0x98);
  return;
}



void Unwind_1809106a0(uint64 resourceHandle,longlong memorySize)

{
  uint64 localUInt1;
  longlong localLong2;
  longlong localLong3;
  uint64 *puVar4;
  
  localLong3 = *(longlong *)(memorySize + 0x40);
  puVar4 = (uint64 *)(localLong3 + -0xa0);
  *puVar4 = &uiWidgetTree;
  if ((*(longlong *)(localLong3 + -0x20) != 0) && (**(longlong **)(localLong3 + -0x88) == localLong3 + -0x30)) {
    localUInt1 = *(uint64 *)(localLong3 + -0x10);
    localLong2 = *(longlong *)(localLong3 + -0x18);
    **(longlong **)(localLong3 + -0x88) = localLong2;
    **(longlong **)(localLong3 + -0x68) = localLong2;
    **(int **)(localLong3 + -0x50) = (int)localUInt1 - (int)localLong2;
  }
  if (*(char *)(localLong3 + -0x24) != '\0') {
    FUN_1800a19c0(puVar4);
  }
                    // WARNING: Could not recover jumptable at 0x00018009fbce. Too many branches
                    // WARNING: Treating indirect jump as call
  __1__basic_streambuf_DU__char_traits_D_std___std__UEAA_XZ(puVar4);
  return;
}



void Unwind_1809106c0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x78) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x78) + 0x38))();
  }
  return;
}



void Unwind_1809106d0(uint64 resourceHandle,longlong memorySize)

{
  if (*(longlong **)(memorySize + 0x78) != (longlong *)0x0) {
    (**(code **)(**(longlong **)(memorySize + 0x78) + 0x38))();
  }
  return;
}



void Unwind_1809106e0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x78);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809106f0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 1) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffe;
    FUN_180045af0(memorySize + 0x38);
  }
  return;
}



void Unwind_180910720(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x20) & 2) != 0) {
    *(uint *)(memorySize + 0x20) = *(uint *)(memorySize + 0x20) & 0xfffffffd;
    FUN_180045af0(memorySize + 0x38);
  }
  return;
}



void Unwind_180910750(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x78);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180910760(uint64 resourceHandle,longlong memorySize)

{
  longlong *plocalLong1;
  longlong localLong2;
  
  plocalLong1 = *(longlong **)(memorySize + 0x40);
  for (localLong2 = *plocalLong1; localLong2 != plocalLong1[1]; localLong2 = localLong2 + 0x28) {
    if (*(longlong *)(localLong2 + 8) != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
  }
  if (*plocalLong1 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180910770(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x30);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180910780(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x30);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180910790(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x58) + 8);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809107a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xa00) != (code *)0x0) {
    (**(code **)(localLong1 + 0xa00))(localLong1 + 0x9f0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x9c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x9d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x9d0) = 0;
  *(uint32 *)(localLong1 + 0x9e0) = 0;
  *(uint64 *)(localLong1 + 0x9c8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x9a8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x9b0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x9b0) = 0;
  *(uint32 *)(localLong1 + 0x9c0) = 0;
  *(uint64 *)(localLong1 + 0x9a8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809107c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xa70) != (code *)0x0) {
    (**(code **)(localLong1 + 0xa70))(localLong1 + 0xa60,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xa38) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xa40) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xa40) = 0;
  *(uint32 *)(localLong1 + 0xa50) = 0;
  *(uint64 *)(localLong1 + 0xa38) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xa18) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xa20) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xa20) = 0;
  *(uint32 *)(localLong1 + 0xa30) = 0;
  *(uint64 *)(localLong1 + 0xa18) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809107e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xae0) != (code *)0x0) {
    (**(code **)(localLong1 + 0xae0))(localLong1 + 0xad0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xaa8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xab0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xab0) = 0;
  *(uint32 *)(localLong1 + 0xac0) = 0;
  *(uint64 *)(localLong1 + 0xaa8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xa88) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xa90) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xa90) = 0;
  *(uint32 *)(localLong1 + 0xaa0) = 0;
  *(uint64 *)(localLong1 + 0xa88) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910800(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xb50) != (code *)0x0) {
    (**(code **)(localLong1 + 0xb50))(localLong1 + 0xb40,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xb18) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xb20) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xb20) = 0;
  *(uint32 *)(localLong1 + 0xb30) = 0;
  *(uint64 *)(localLong1 + 0xb18) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xaf8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xb00) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xb00) = 0;
  *(uint32 *)(localLong1 + 0xb10) = 0;
  *(uint64 *)(localLong1 + 0xaf8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910820(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xbc0) != (code *)0x0) {
    (**(code **)(localLong1 + 0xbc0))(localLong1 + 0xbb0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xb88) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xb90) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xb90) = 0;
  *(uint32 *)(localLong1 + 0xba0) = 0;
  *(uint64 *)(localLong1 + 0xb88) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xb68) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xb70) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xb70) = 0;
  *(uint32 *)(localLong1 + 0xb80) = 0;
  *(uint64 *)(localLong1 + 0xb68) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910840(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xc30) != (code *)0x0) {
    (**(code **)(localLong1 + 0xc30))(localLong1 + 0xc20,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xbf8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xc00) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xc00) = 0;
  *(uint32 *)(localLong1 + 0xc10) = 0;
  *(uint64 *)(localLong1 + 0xbf8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xbd8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xbe0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xbe0) = 0;
  *(uint32 *)(localLong1 + 0xbf0) = 0;
  *(uint64 *)(localLong1 + 0xbd8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910860(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xca0) != (code *)0x0) {
    (**(code **)(localLong1 + 0xca0))(localLong1 + 0xc90,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xc68) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xc70) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xc70) = 0;
  *(uint32 *)(localLong1 + 0xc80) = 0;
  *(uint64 *)(localLong1 + 0xc68) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xc48) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xc50) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xc50) = 0;
  *(uint32 *)(localLong1 + 0xc60) = 0;
  *(uint64 *)(localLong1 + 0xc48) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910880(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xd10) != (code *)0x0) {
    (**(code **)(localLong1 + 0xd10))(localLong1 + 0xd00,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xcd8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xce0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xce0) = 0;
  *(uint32 *)(localLong1 + 0xcf0) = 0;
  *(uint64 *)(localLong1 + 0xcd8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xcb8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xcc0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xcc0) = 0;
  *(uint32 *)(localLong1 + 0xcd0) = 0;
  *(uint64 *)(localLong1 + 0xcb8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809108a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xd80) != (code *)0x0) {
    (**(code **)(localLong1 + 0xd80))(localLong1 + 0xd70,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xd48) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xd50) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xd50) = 0;
  *(uint32 *)(localLong1 + 0xd60) = 0;
  *(uint64 *)(localLong1 + 0xd48) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xd28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xd30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xd30) = 0;
  *(uint32 *)(localLong1 + 0xd40) = 0;
  *(uint64 *)(localLong1 + 0xd28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809108c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xdf0) != (code *)0x0) {
    (**(code **)(localLong1 + 0xdf0))(localLong1 + 0xde0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xdb8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xdc0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xdc0) = 0;
  *(uint32 *)(localLong1 + 0xdd0) = 0;
  *(uint64 *)(localLong1 + 0xdb8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xd98) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xda0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xda0) = 0;
  *(uint32 *)(localLong1 + 0xdb0) = 0;
  *(uint64 *)(localLong1 + 0xd98) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809108e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xe60) != (code *)0x0) {
    (**(code **)(localLong1 + 0xe60))(localLong1 + 0xe50,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xe28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xe30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xe30) = 0;
  *(uint32 *)(localLong1 + 0xe40) = 0;
  *(uint64 *)(localLong1 + 0xe28) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xe08) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xe10) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xe10) = 0;
  *(uint32 *)(localLong1 + 0xe20) = 0;
  *(uint64 *)(localLong1 + 0xe08) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910900(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xed0) != (code *)0x0) {
    (**(code **)(localLong1 + 0xed0))(localLong1 + 0xec0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xe98) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xea0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xea0) = 0;
  *(uint32 *)(localLong1 + 0xeb0) = 0;
  *(uint64 *)(localLong1 + 0xe98) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xe78) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xe80) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xe80) = 0;
  *(uint32 *)(localLong1 + 0xe90) = 0;
  *(uint64 *)(localLong1 + 0xe78) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910920(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xf40) != (code *)0x0) {
    (**(code **)(localLong1 + 0xf40))(localLong1 + 0xf30,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xf08) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xf10) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xf10) = 0;
  *(uint32 *)(localLong1 + 0xf20) = 0;
  *(uint64 *)(localLong1 + 0xf08) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xee8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xef0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xef0) = 0;
  *(uint32 *)(localLong1 + 0xf00) = 0;
  *(uint64 *)(localLong1 + 0xee8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910940(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0xfb0) != (code *)0x0) {
    (**(code **)(localLong1 + 0xfb0))(localLong1 + 4000,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xf78) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xf80) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xf80) = 0;
  *(uint32 *)(localLong1 + 0xf90) = 0;
  *(uint64 *)(localLong1 + 0xf78) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xf58) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xf60) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xf60) = 0;
  *(uint32 *)(localLong1 + 0xf70) = 0;
  *(uint64 *)(localLong1 + 0xf58) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910960(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1020) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1020))(localLong1 + 0x1010,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xfe8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xff0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xff0) = 0;
  *(uint32 *)(localLong1 + 0x1000) = 0;
  *(uint64 *)(localLong1 + 0xfe8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xfc8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xfd0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xfd0) = 0;
  *(uint32 *)(localLong1 + 0xfe0) = 0;
  *(uint64 *)(localLong1 + 0xfc8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910980(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1090) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1090))(localLong1 + 0x1080,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1058) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1060) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1060) = 0;
  *(uint32 *)(localLong1 + 0x1070) = 0;
  *(uint64 *)(localLong1 + 0x1058) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1038) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1040) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1040) = 0;
  *(uint32 *)(localLong1 + 0x1050) = 0;
  *(uint64 *)(localLong1 + 0x1038) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809109a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1100) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1100))(localLong1 + 0x10f0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x10c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x10d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x10d0) = 0;
  *(uint32 *)(localLong1 + 0x10e0) = 0;
  *(uint64 *)(localLong1 + 0x10c8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x10a8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x10b0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x10b0) = 0;
  *(uint32 *)(localLong1 + 0x10c0) = 0;
  *(uint64 *)(localLong1 + 0x10a8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809109c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1170) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1170))(localLong1 + 0x1160,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1138) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1140) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1140) = 0;
  *(uint32 *)(localLong1 + 0x1150) = 0;
  *(uint64 *)(localLong1 + 0x1138) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1118) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1120) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1120) = 0;
  *(uint32 *)(localLong1 + 0x1130) = 0;
  *(uint64 *)(localLong1 + 0x1118) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809109e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x11e0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x11e0))(localLong1 + 0x11d0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x11a8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x11b0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x11b0) = 0;
  *(uint32 *)(localLong1 + 0x11c0) = 0;
  *(uint64 *)(localLong1 + 0x11a8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1188) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1190) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1190) = 0;
  *(uint32 *)(localLong1 + 0x11a0) = 0;
  *(uint64 *)(localLong1 + 0x1188) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910a00(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1250) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1250))(localLong1 + 0x1240,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1218) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1220) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1220) = 0;
  *(uint32 *)(localLong1 + 0x1230) = 0;
  *(uint64 *)(localLong1 + 0x1218) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x11f8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1200) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1200) = 0;
  *(uint32 *)(localLong1 + 0x1210) = 0;
  *(uint64 *)(localLong1 + 0x11f8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910a20(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x12c0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x12c0))(localLong1 + 0x12b0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1288) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1290) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1290) = 0;
  *(uint32 *)(localLong1 + 0x12a0) = 0;
  *(uint64 *)(localLong1 + 0x1288) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1268) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1270) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1270) = 0;
  *(uint32 *)(localLong1 + 0x1280) = 0;
  *(uint64 *)(localLong1 + 0x1268) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910a40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1330) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1330))(localLong1 + 0x1320,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x12f8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1300) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1300) = 0;
  *(uint32 *)(localLong1 + 0x1310) = 0;
  *(uint64 *)(localLong1 + 0x12f8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x12d8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x12e0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x12e0) = 0;
  *(uint32 *)(localLong1 + 0x12f0) = 0;
  *(uint64 *)(localLong1 + 0x12d8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910a60(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x13a0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x13a0))(localLong1 + 0x1390,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1368) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1370) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1370) = 0;
  *(uint32 *)(localLong1 + 0x1380) = 0;
  *(uint64 *)(localLong1 + 0x1368) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1348) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1350) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1350) = 0;
  *(uint32 *)(localLong1 + 0x1360) = 0;
  *(uint64 *)(localLong1 + 0x1348) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910a80(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1410) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1410))(localLong1 + 0x1400,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x13d8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x13e0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x13e0) = 0;
  *(uint32 *)(localLong1 + 0x13f0) = 0;
  *(uint64 *)(localLong1 + 0x13d8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x13b8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x13c0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x13c0) = 0;
  *(uint32 *)(localLong1 + 0x13d0) = 0;
  *(uint64 *)(localLong1 + 0x13b8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910aa0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1480) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1480))(localLong1 + 0x1470,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1448) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1450) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1450) = 0;
  *(uint32 *)(localLong1 + 0x1460) = 0;
  *(uint64 *)(localLong1 + 0x1448) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1428) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1430) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1430) = 0;
  *(uint32 *)(localLong1 + 0x1440) = 0;
  *(uint64 *)(localLong1 + 0x1428) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910ac0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x14f0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x14f0))(localLong1 + 0x14e0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x14b8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x14c0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x14c0) = 0;
  *(uint32 *)(localLong1 + 0x14d0) = 0;
  *(uint64 *)(localLong1 + 0x14b8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1498) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x14a0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x14a0) = 0;
  *(uint32 *)(localLong1 + 0x14b0) = 0;
  *(uint64 *)(localLong1 + 0x1498) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910ae0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1560) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1560))(localLong1 + 0x1550,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1528) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1530) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1530) = 0;
  *(uint32 *)(localLong1 + 0x1540) = 0;
  *(uint64 *)(localLong1 + 0x1528) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1508) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1510) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1510) = 0;
  *(uint32 *)(localLong1 + 0x1520) = 0;
  *(uint64 *)(localLong1 + 0x1508) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910b00(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x15d0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x15d0))(localLong1 + 0x15c0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1598) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x15a0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x15a0) = 0;
  *(uint32 *)(localLong1 + 0x15b0) = 0;
  *(uint64 *)(localLong1 + 0x1598) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1578) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1580) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1580) = 0;
  *(uint32 *)(localLong1 + 0x1590) = 0;
  *(uint64 *)(localLong1 + 0x1578) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910b20(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1640) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1640))(localLong1 + 0x1630,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1608) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1610) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1610) = 0;
  *(uint32 *)(localLong1 + 0x1620) = 0;
  *(uint64 *)(localLong1 + 0x1608) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x15e8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x15f0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x15f0) = 0;
  *(uint32 *)(localLong1 + 0x1600) = 0;
  *(uint64 *)(localLong1 + 0x15e8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910b40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x16b0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x16b0))(localLong1 + 0x16a0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1678) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1680) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1680) = 0;
  *(uint32 *)(localLong1 + 0x1690) = 0;
  *(uint64 *)(localLong1 + 0x1678) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1658) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1660) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1660) = 0;
  *(uint32 *)(localLong1 + 0x1670) = 0;
  *(uint64 *)(localLong1 + 0x1658) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910b60(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1720) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1720))(localLong1 + 0x1710,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x16e8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x16f0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x16f0) = 0;
  *(uint32 *)(localLong1 + 0x1700) = 0;
  *(uint64 *)(localLong1 + 0x16e8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x16c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x16d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x16d0) = 0;
  *(uint32 *)(localLong1 + 0x16e0) = 0;
  *(uint64 *)(localLong1 + 0x16c8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910b80(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1790) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1790))(localLong1 + 0x1780,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1758) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1760) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1760) = 0;
  *(uint32 *)(localLong1 + 6000) = 0;
  *(uint64 *)(localLong1 + 0x1758) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1738) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1740) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1740) = 0;
  *(uint32 *)(localLong1 + 0x1750) = 0;
  *(uint64 *)(localLong1 + 0x1738) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910ba0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1800) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1800))(localLong1 + 0x17f0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x17c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x17d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x17d0) = 0;
  *(uint32 *)(localLong1 + 0x17e0) = 0;
  *(uint64 *)(localLong1 + 0x17c8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x17a8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x17b0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x17b0) = 0;
  *(uint32 *)(localLong1 + 0x17c0) = 0;
  *(uint64 *)(localLong1 + 0x17a8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910bc0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1870) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1870))(localLong1 + 0x1860,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1838) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1840) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1840) = 0;
  *(uint32 *)(localLong1 + 0x1850) = 0;
  *(uint64 *)(localLong1 + 0x1838) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1818) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1820) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1820) = 0;
  *(uint32 *)(localLong1 + 0x1830) = 0;
  *(uint64 *)(localLong1 + 0x1818) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910be0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x18e0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x18e0))(localLong1 + 0x18d0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x18a8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x18b0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x18b0) = 0;
  *(uint32 *)(localLong1 + 0x18c0) = 0;
  *(uint64 *)(localLong1 + 0x18a8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1888) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1890) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1890) = 0;
  *(uint32 *)(localLong1 + 0x18a0) = 0;
  *(uint64 *)(localLong1 + 0x1888) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910c00(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1950) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1950))(localLong1 + 0x1940,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1918) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1920) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1920) = 0;
  *(uint32 *)(localLong1 + 0x1930) = 0;
  *(uint64 *)(localLong1 + 0x1918) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x18f8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1900) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1900) = 0;
  *(uint32 *)(localLong1 + 0x1910) = 0;
  *(uint64 *)(localLong1 + 0x18f8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910c20(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x19c0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x19c0))(localLong1 + 0x19b0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1988) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1990) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1990) = 0;
  *(uint32 *)(localLong1 + 0x19a0) = 0;
  *(uint64 *)(localLong1 + 0x1988) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1968) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1970) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1970) = 0;
  *(uint32 *)(localLong1 + 0x1980) = 0;
  *(uint64 *)(localLong1 + 0x1968) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910c40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1a30) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1a30))(localLong1 + 0x1a20,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x19f8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1a00) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1a00) = 0;
  *(uint32 *)(localLong1 + 0x1a10) = 0;
  *(uint64 *)(localLong1 + 0x19f8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x19d8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x19e0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x19e0) = 0;
  *(uint32 *)(localLong1 + 0x19f0) = 0;
  *(uint64 *)(localLong1 + 0x19d8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910c60(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1aa0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1aa0))(localLong1 + 0x1a90,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1a68) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1a70) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1a70) = 0;
  *(uint32 *)(localLong1 + 0x1a80) = 0;
  *(uint64 *)(localLong1 + 0x1a68) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1a48) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1a50) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1a50) = 0;
  *(uint32 *)(localLong1 + 0x1a60) = 0;
  *(uint64 *)(localLong1 + 0x1a48) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910c80(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1b10) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1b10))(localLong1 + 0x1b00,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1ad8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1ae0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1ae0) = 0;
  *(uint32 *)(localLong1 + 0x1af0) = 0;
  *(uint64 *)(localLong1 + 0x1ad8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1ab8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1ac0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1ac0) = 0;
  *(uint32 *)(localLong1 + 0x1ad0) = 0;
  *(uint64 *)(localLong1 + 0x1ab8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910ca0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1b80) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1b80))(localLong1 + 0x1b70,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1b48) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1b50) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1b50) = 0;
  *(uint32 *)(localLong1 + 0x1b60) = 0;
  *(uint64 *)(localLong1 + 0x1b48) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1b28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1b30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1b30) = 0;
  *(uint32 *)(localLong1 + 0x1b40) = 0;
  *(uint64 *)(localLong1 + 0x1b28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910cc0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1bf0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1bf0))(localLong1 + 0x1be0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1bb8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1bc0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1bc0) = 0;
  *(uint32 *)(localLong1 + 0x1bd0) = 0;
  *(uint64 *)(localLong1 + 0x1bb8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1b98) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1ba0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1ba0) = 0;
  *(uint32 *)(localLong1 + 0x1bb0) = 0;
  *(uint64 *)(localLong1 + 0x1b98) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910ce0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1c60) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1c60))(localLong1 + 0x1c50,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1c28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1c30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1c30) = 0;
  *(uint32 *)(localLong1 + 0x1c40) = 0;
  *(uint64 *)(localLong1 + 0x1c28) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1c08) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1c10) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1c10) = 0;
  *(uint32 *)(localLong1 + 0x1c20) = 0;
  *(uint64 *)(localLong1 + 0x1c08) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910d00(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1cd0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1cd0))(localLong1 + 0x1cc0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1c98) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1ca0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1ca0) = 0;
  *(uint32 *)(localLong1 + 0x1cb0) = 0;
  *(uint64 *)(localLong1 + 0x1c98) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1c78) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1c80) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1c80) = 0;
  *(uint32 *)(localLong1 + 0x1c90) = 0;
  *(uint64 *)(localLong1 + 0x1c78) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910d20(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1d40) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1d40))(localLong1 + 0x1d30,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1d08) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1d10) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1d10) = 0;
  *(uint32 *)(localLong1 + 0x1d20) = 0;
  *(uint64 *)(localLong1 + 0x1d08) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1ce8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1cf0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1cf0) = 0;
  *(uint32 *)(localLong1 + 0x1d00) = 0;
  *(uint64 *)(localLong1 + 0x1ce8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910d40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1db0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1db0))(localLong1 + 0x1da0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1d78) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1d80) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1d80) = 0;
  *(uint32 *)(localLong1 + 0x1d90) = 0;
  *(uint64 *)(localLong1 + 0x1d78) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1d58) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1d60) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1d60) = 0;
  *(uint32 *)(localLong1 + 0x1d70) = 0;
  *(uint64 *)(localLong1 + 0x1d58) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910d60(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1e20) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1e20))(localLong1 + 0x1e10,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1de8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1df0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1df0) = 0;
  *(uint32 *)(localLong1 + 0x1e00) = 0;
  *(uint64 *)(localLong1 + 0x1de8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1dc8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1dd0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1dd0) = 0;
  *(uint32 *)(localLong1 + 0x1de0) = 0;
  *(uint64 *)(localLong1 + 0x1dc8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910d80(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1e90) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1e90))(localLong1 + 0x1e80,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1e58) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1e60) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1e60) = 0;
  *(uint32 *)(localLong1 + 0x1e70) = 0;
  *(uint64 *)(localLong1 + 0x1e58) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1e38) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1e40) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1e40) = 0;
  *(uint32 *)(localLong1 + 0x1e50) = 0;
  *(uint64 *)(localLong1 + 0x1e38) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910da0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1f00) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1f00))(localLong1 + 0x1ef0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1ec8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1ed0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1ed0) = 0;
  *(uint32 *)(localLong1 + 0x1ee0) = 0;
  *(uint64 *)(localLong1 + 0x1ec8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1ea8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1eb0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1eb0) = 0;
  *(uint32 *)(localLong1 + 0x1ec0) = 0;
  *(uint64 *)(localLong1 + 0x1ea8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910dc0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1f70) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1f70))(localLong1 + 0x1f60,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1f38) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 8000) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 8000) = 0;
  *(uint32 *)(localLong1 + 0x1f50) = 0;
  *(uint64 *)(localLong1 + 0x1f38) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1f18) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1f20) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1f20) = 0;
  *(uint32 *)(localLong1 + 0x1f30) = 0;
  *(uint64 *)(localLong1 + 0x1f18) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910de0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x1fe0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1fe0))(localLong1 + 0x1fd0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1fa8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1fb0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1fb0) = 0;
  *(uint32 *)(localLong1 + 0x1fc0) = 0;
  *(uint64 *)(localLong1 + 0x1fa8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1f88) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1f90) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1f90) = 0;
  *(uint32 *)(localLong1 + 0x1fa0) = 0;
  *(uint64 *)(localLong1 + 0x1f88) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910e00(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x2050) != (code *)0x0) {
    (**(code **)(localLong1 + 0x2050))(localLong1 + 0x2040,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x2018) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2020) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2020) = 0;
  *(uint32 *)(localLong1 + 0x2030) = 0;
  *(uint64 *)(localLong1 + 0x2018) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1ff8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2000) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2000) = 0;
  *(uint32 *)(localLong1 + 0x2010) = 0;
  *(uint64 *)(localLong1 + 0x1ff8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910e20(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x20c0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x20c0))(localLong1 + 0x20b0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x2088) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2090) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2090) = 0;
  *(uint32 *)(localLong1 + 0x20a0) = 0;
  *(uint64 *)(localLong1 + 0x2088) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2068) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2070) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2070) = 0;
  *(uint32 *)(localLong1 + 0x2080) = 0;
  *(uint64 *)(localLong1 + 0x2068) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910e40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x2130) != (code *)0x0) {
    (**(code **)(localLong1 + 0x2130))(localLong1 + 0x2120,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x20f8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2100) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2100) = 0;
  *(uint32 *)(localLong1 + 0x2110) = 0;
  *(uint64 *)(localLong1 + 0x20f8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x20d8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x20e0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x20e0) = 0;
  *(uint32 *)(localLong1 + 0x20f0) = 0;
  *(uint64 *)(localLong1 + 0x20d8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910e60(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x21a0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x21a0))(localLong1 + 0x2190,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x2168) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2170) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2170) = 0;
  *(uint32 *)(localLong1 + 0x2180) = 0;
  *(uint64 *)(localLong1 + 0x2168) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2148) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2150) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2150) = 0;
  *(uint32 *)(localLong1 + 0x2160) = 0;
  *(uint64 *)(localLong1 + 0x2148) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910e80(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x2210) != (code *)0x0) {
    (**(code **)(localLong1 + 0x2210))(localLong1 + 0x2200,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x21d8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x21e0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x21e0) = 0;
  *(uint32 *)(localLong1 + 0x21f0) = 0;
  *(uint64 *)(localLong1 + 0x21d8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x21b8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x21c0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x21c0) = 0;
  *(uint32 *)(localLong1 + 0x21d0) = 0;
  *(uint64 *)(localLong1 + 0x21b8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910ea0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x2280) != (code *)0x0) {
    (**(code **)(localLong1 + 0x2280))(localLong1 + 0x2270,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x2248) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2250) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2250) = 0;
  *(uint32 *)(localLong1 + 0x2260) = 0;
  *(uint64 *)(localLong1 + 0x2248) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2228) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2230) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2230) = 0;
  *(uint32 *)(localLong1 + 0x2240) = 0;
  *(uint64 *)(localLong1 + 0x2228) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910ec0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x22f0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x22f0))(localLong1 + 0x22e0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x22b8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x22c0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x22c0) = 0;
  *(uint32 *)(localLong1 + 0x22d0) = 0;
  *(uint64 *)(localLong1 + 0x22b8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2298) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x22a0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x22a0) = 0;
  *(uint32 *)(localLong1 + 0x22b0) = 0;
  *(uint64 *)(localLong1 + 0x2298) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910ee0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x2360) != (code *)0x0) {
    (**(code **)(localLong1 + 0x2360))(localLong1 + 0x2350,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 9000) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2330) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2330) = 0;
  *(uint32 *)(localLong1 + 0x2340) = 0;
  *(uint64 *)(localLong1 + 9000) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2308) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2310) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2310) = 0;
  *(uint32 *)(localLong1 + 0x2320) = 0;
  *(uint64 *)(localLong1 + 0x2308) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910f00(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x23d0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x23d0))(localLong1 + 0x23c0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x2398) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x23a0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x23a0) = 0;
  *(uint32 *)(localLong1 + 0x23b0) = 0;
  *(uint64 *)(localLong1 + 0x2398) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2378) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2380) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2380) = 0;
  *(uint32 *)(localLong1 + 0x2390) = 0;
  *(uint64 *)(localLong1 + 0x2378) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910f20(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x2440) != (code *)0x0) {
    (**(code **)(localLong1 + 0x2440))(localLong1 + 0x2430,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x2408) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2410) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2410) = 0;
  *(uint32 *)(localLong1 + 0x2420) = 0;
  *(uint64 *)(localLong1 + 0x2408) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x23e8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x23f0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x23f0) = 0;
  *(uint32 *)(localLong1 + 0x2400) = 0;
  *(uint64 *)(localLong1 + 0x23e8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910f40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x24b0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x24b0))(localLong1 + 0x24a0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x2478) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2480) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2480) = 0;
  *(uint32 *)(localLong1 + 0x2490) = 0;
  *(uint64 *)(localLong1 + 0x2478) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2458) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2460) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2460) = 0;
  *(uint32 *)(localLong1 + 0x2470) = 0;
  *(uint64 *)(localLong1 + 0x2458) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910f60(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x2520) != (code *)0x0) {
    (**(code **)(localLong1 + 0x2520))(localLong1 + 0x2510,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x24e8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x24f0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x24f0) = 0;
  *(uint32 *)(localLong1 + 0x2500) = 0;
  *(uint64 *)(localLong1 + 0x24e8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x24c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x24d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x24d0) = 0;
  *(uint32 *)(localLong1 + 0x24e0) = 0;
  *(uint64 *)(localLong1 + 0x24c8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910f80(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x2590) != (code *)0x0) {
    (**(code **)(localLong1 + 0x2590))(localLong1 + 0x2580,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x2558) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2560) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2560) = 0;
  *(uint32 *)(localLong1 + 0x2570) = 0;
  *(uint64 *)(localLong1 + 0x2558) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2538) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2540) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2540) = 0;
  *(uint32 *)(localLong1 + 0x2550) = 0;
  *(uint64 *)(localLong1 + 0x2538) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910fa0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  if (*(code **)(localLong1 + 0x2600) != (code *)0x0) {
    (**(code **)(localLong1 + 0x2600))(localLong1 + 0x25f0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x25c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x25d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x25d0) = 0;
  *(uint32 *)(localLong1 + 0x25e0) = 0;
  *(uint64 *)(localLong1 + 0x25c8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x25a8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x25b0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x25b0) = 0;
  *(uint32 *)(localLong1 + 0x25c0) = 0;
  *(uint64 *)(localLong1 + 0x25a8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180910fc0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x80) + 0x2610);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x80) + 0x2618);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180910fe0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x80) + 0x2630);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x80) + 0x2638);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180911000(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xa00) != (code *)0x0) {
    (**(code **)(localLong1 + 0xa00))(localLong1 + 0x9f0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x9c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x9d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x9d0) = 0;
  *(uint32 *)(localLong1 + 0x9e0) = 0;
  *(uint64 *)(localLong1 + 0x9c8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x9a8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x9b0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x9b0) = 0;
  *(uint32 *)(localLong1 + 0x9c0) = 0;
  *(uint64 *)(localLong1 + 0x9a8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911020(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xa70) != (code *)0x0) {
    (**(code **)(localLong1 + 0xa70))(localLong1 + 0xa60,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xa38) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xa40) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xa40) = 0;
  *(uint32 *)(localLong1 + 0xa50) = 0;
  *(uint64 *)(localLong1 + 0xa38) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xa18) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xa20) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xa20) = 0;
  *(uint32 *)(localLong1 + 0xa30) = 0;
  *(uint64 *)(localLong1 + 0xa18) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911040(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xae0) != (code *)0x0) {
    (**(code **)(localLong1 + 0xae0))(localLong1 + 0xad0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xaa8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xab0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xab0) = 0;
  *(uint32 *)(localLong1 + 0xac0) = 0;
  *(uint64 *)(localLong1 + 0xaa8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xa88) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xa90) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xa90) = 0;
  *(uint32 *)(localLong1 + 0xaa0) = 0;
  *(uint64 *)(localLong1 + 0xa88) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911060(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xb50) != (code *)0x0) {
    (**(code **)(localLong1 + 0xb50))(localLong1 + 0xb40,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xb18) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xb20) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xb20) = 0;
  *(uint32 *)(localLong1 + 0xb30) = 0;
  *(uint64 *)(localLong1 + 0xb18) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xaf8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xb00) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xb00) = 0;
  *(uint32 *)(localLong1 + 0xb10) = 0;
  *(uint64 *)(localLong1 + 0xaf8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911080(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xbc0) != (code *)0x0) {
    (**(code **)(localLong1 + 0xbc0))(localLong1 + 0xbb0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xb88) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xb90) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xb90) = 0;
  *(uint32 *)(localLong1 + 0xba0) = 0;
  *(uint64 *)(localLong1 + 0xb88) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xb68) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xb70) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xb70) = 0;
  *(uint32 *)(localLong1 + 0xb80) = 0;
  *(uint64 *)(localLong1 + 0xb68) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809110a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xc30) != (code *)0x0) {
    (**(code **)(localLong1 + 0xc30))(localLong1 + 0xc20,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xbf8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xc00) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xc00) = 0;
  *(uint32 *)(localLong1 + 0xc10) = 0;
  *(uint64 *)(localLong1 + 0xbf8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xbd8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xbe0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xbe0) = 0;
  *(uint32 *)(localLong1 + 0xbf0) = 0;
  *(uint64 *)(localLong1 + 0xbd8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809110c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xca0) != (code *)0x0) {
    (**(code **)(localLong1 + 0xca0))(localLong1 + 0xc90,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xc68) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xc70) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xc70) = 0;
  *(uint32 *)(localLong1 + 0xc80) = 0;
  *(uint64 *)(localLong1 + 0xc68) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xc48) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xc50) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xc50) = 0;
  *(uint32 *)(localLong1 + 0xc60) = 0;
  *(uint64 *)(localLong1 + 0xc48) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809110e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xd10) != (code *)0x0) {
    (**(code **)(localLong1 + 0xd10))(localLong1 + 0xd00,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xcd8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xce0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xce0) = 0;
  *(uint32 *)(localLong1 + 0xcf0) = 0;
  *(uint64 *)(localLong1 + 0xcd8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xcb8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xcc0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xcc0) = 0;
  *(uint32 *)(localLong1 + 0xcd0) = 0;
  *(uint64 *)(localLong1 + 0xcb8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911100(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xd80) != (code *)0x0) {
    (**(code **)(localLong1 + 0xd80))(localLong1 + 0xd70,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xd48) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xd50) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xd50) = 0;
  *(uint32 *)(localLong1 + 0xd60) = 0;
  *(uint64 *)(localLong1 + 0xd48) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xd28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xd30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xd30) = 0;
  *(uint32 *)(localLong1 + 0xd40) = 0;
  *(uint64 *)(localLong1 + 0xd28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911120(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xdf0) != (code *)0x0) {
    (**(code **)(localLong1 + 0xdf0))(localLong1 + 0xde0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xdb8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xdc0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xdc0) = 0;
  *(uint32 *)(localLong1 + 0xdd0) = 0;
  *(uint64 *)(localLong1 + 0xdb8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xd98) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xda0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xda0) = 0;
  *(uint32 *)(localLong1 + 0xdb0) = 0;
  *(uint64 *)(localLong1 + 0xd98) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911140(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xe60) != (code *)0x0) {
    (**(code **)(localLong1 + 0xe60))(localLong1 + 0xe50,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xe28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xe30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xe30) = 0;
  *(uint32 *)(localLong1 + 0xe40) = 0;
  *(uint64 *)(localLong1 + 0xe28) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xe08) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xe10) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xe10) = 0;
  *(uint32 *)(localLong1 + 0xe20) = 0;
  *(uint64 *)(localLong1 + 0xe08) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911160(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xed0) != (code *)0x0) {
    (**(code **)(localLong1 + 0xed0))(localLong1 + 0xec0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xe98) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xea0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xea0) = 0;
  *(uint32 *)(localLong1 + 0xeb0) = 0;
  *(uint64 *)(localLong1 + 0xe98) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xe78) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xe80) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xe80) = 0;
  *(uint32 *)(localLong1 + 0xe90) = 0;
  *(uint64 *)(localLong1 + 0xe78) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911180(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xf40) != (code *)0x0) {
    (**(code **)(localLong1 + 0xf40))(localLong1 + 0xf30,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xf08) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xf10) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xf10) = 0;
  *(uint32 *)(localLong1 + 0xf20) = 0;
  *(uint64 *)(localLong1 + 0xf08) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xee8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xef0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xef0) = 0;
  *(uint32 *)(localLong1 + 0xf00) = 0;
  *(uint64 *)(localLong1 + 0xee8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809111a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0xfb0) != (code *)0x0) {
    (**(code **)(localLong1 + 0xfb0))(localLong1 + 4000,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xf78) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xf80) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xf80) = 0;
  *(uint32 *)(localLong1 + 0xf90) = 0;
  *(uint64 *)(localLong1 + 0xf78) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xf58) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xf60) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xf60) = 0;
  *(uint32 *)(localLong1 + 0xf70) = 0;
  *(uint64 *)(localLong1 + 0xf58) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809111c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1020) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1020))(localLong1 + 0x1010,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0xfe8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xff0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xff0) = 0;
  *(uint32 *)(localLong1 + 0x1000) = 0;
  *(uint64 *)(localLong1 + 0xfe8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0xfc8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0xfd0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0xfd0) = 0;
  *(uint32 *)(localLong1 + 0xfe0) = 0;
  *(uint64 *)(localLong1 + 0xfc8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809111e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1090) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1090))(localLong1 + 0x1080,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1058) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1060) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1060) = 0;
  *(uint32 *)(localLong1 + 0x1070) = 0;
  *(uint64 *)(localLong1 + 0x1058) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1038) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1040) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1040) = 0;
  *(uint32 *)(localLong1 + 0x1050) = 0;
  *(uint64 *)(localLong1 + 0x1038) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911200(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1100) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1100))(localLong1 + 0x10f0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x10c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x10d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x10d0) = 0;
  *(uint32 *)(localLong1 + 0x10e0) = 0;
  *(uint64 *)(localLong1 + 0x10c8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x10a8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x10b0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x10b0) = 0;
  *(uint32 *)(localLong1 + 0x10c0) = 0;
  *(uint64 *)(localLong1 + 0x10a8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911220(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1170) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1170))(localLong1 + 0x1160,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1138) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1140) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1140) = 0;
  *(uint32 *)(localLong1 + 0x1150) = 0;
  *(uint64 *)(localLong1 + 0x1138) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1118) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1120) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1120) = 0;
  *(uint32 *)(localLong1 + 0x1130) = 0;
  *(uint64 *)(localLong1 + 0x1118) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911240(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x11e0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x11e0))(localLong1 + 0x11d0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x11a8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x11b0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x11b0) = 0;
  *(uint32 *)(localLong1 + 0x11c0) = 0;
  *(uint64 *)(localLong1 + 0x11a8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1188) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1190) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1190) = 0;
  *(uint32 *)(localLong1 + 0x11a0) = 0;
  *(uint64 *)(localLong1 + 0x1188) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911260(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1250) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1250))(localLong1 + 0x1240,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1218) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1220) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1220) = 0;
  *(uint32 *)(localLong1 + 0x1230) = 0;
  *(uint64 *)(localLong1 + 0x1218) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x11f8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1200) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1200) = 0;
  *(uint32 *)(localLong1 + 0x1210) = 0;
  *(uint64 *)(localLong1 + 0x11f8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911280(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x12c0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x12c0))(localLong1 + 0x12b0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1288) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1290) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1290) = 0;
  *(uint32 *)(localLong1 + 0x12a0) = 0;
  *(uint64 *)(localLong1 + 0x1288) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1268) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1270) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1270) = 0;
  *(uint32 *)(localLong1 + 0x1280) = 0;
  *(uint64 *)(localLong1 + 0x1268) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809112a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1330) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1330))(localLong1 + 0x1320,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x12f8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1300) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1300) = 0;
  *(uint32 *)(localLong1 + 0x1310) = 0;
  *(uint64 *)(localLong1 + 0x12f8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x12d8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x12e0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x12e0) = 0;
  *(uint32 *)(localLong1 + 0x12f0) = 0;
  *(uint64 *)(localLong1 + 0x12d8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809112c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x13a0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x13a0))(localLong1 + 0x1390,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1368) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1370) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1370) = 0;
  *(uint32 *)(localLong1 + 0x1380) = 0;
  *(uint64 *)(localLong1 + 0x1368) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1348) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1350) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1350) = 0;
  *(uint32 *)(localLong1 + 0x1360) = 0;
  *(uint64 *)(localLong1 + 0x1348) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809112e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1410) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1410))(localLong1 + 0x1400,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x13d8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x13e0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x13e0) = 0;
  *(uint32 *)(localLong1 + 0x13f0) = 0;
  *(uint64 *)(localLong1 + 0x13d8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x13b8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x13c0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x13c0) = 0;
  *(uint32 *)(localLong1 + 0x13d0) = 0;
  *(uint64 *)(localLong1 + 0x13b8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911300(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1480) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1480))(localLong1 + 0x1470,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1448) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1450) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1450) = 0;
  *(uint32 *)(localLong1 + 0x1460) = 0;
  *(uint64 *)(localLong1 + 0x1448) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1428) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1430) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1430) = 0;
  *(uint32 *)(localLong1 + 0x1440) = 0;
  *(uint64 *)(localLong1 + 0x1428) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911320(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x14f0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x14f0))(localLong1 + 0x14e0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x14b8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x14c0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x14c0) = 0;
  *(uint32 *)(localLong1 + 0x14d0) = 0;
  *(uint64 *)(localLong1 + 0x14b8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1498) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x14a0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x14a0) = 0;
  *(uint32 *)(localLong1 + 0x14b0) = 0;
  *(uint64 *)(localLong1 + 0x1498) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911340(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1560) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1560))(localLong1 + 0x1550,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1528) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1530) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1530) = 0;
  *(uint32 *)(localLong1 + 0x1540) = 0;
  *(uint64 *)(localLong1 + 0x1528) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1508) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1510) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1510) = 0;
  *(uint32 *)(localLong1 + 0x1520) = 0;
  *(uint64 *)(localLong1 + 0x1508) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911360(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x15d0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x15d0))(localLong1 + 0x15c0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1598) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x15a0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x15a0) = 0;
  *(uint32 *)(localLong1 + 0x15b0) = 0;
  *(uint64 *)(localLong1 + 0x1598) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1578) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1580) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1580) = 0;
  *(uint32 *)(localLong1 + 0x1590) = 0;
  *(uint64 *)(localLong1 + 0x1578) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911380(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1640) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1640))(localLong1 + 0x1630,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1608) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1610) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1610) = 0;
  *(uint32 *)(localLong1 + 0x1620) = 0;
  *(uint64 *)(localLong1 + 0x1608) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x15e8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x15f0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x15f0) = 0;
  *(uint32 *)(localLong1 + 0x1600) = 0;
  *(uint64 *)(localLong1 + 0x15e8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809113a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x16b0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x16b0))(localLong1 + 0x16a0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1678) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1680) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1680) = 0;
  *(uint32 *)(localLong1 + 0x1690) = 0;
  *(uint64 *)(localLong1 + 0x1678) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1658) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1660) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1660) = 0;
  *(uint32 *)(localLong1 + 0x1670) = 0;
  *(uint64 *)(localLong1 + 0x1658) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809113c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1720) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1720))(localLong1 + 0x1710,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x16e8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x16f0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x16f0) = 0;
  *(uint32 *)(localLong1 + 0x1700) = 0;
  *(uint64 *)(localLong1 + 0x16e8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x16c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x16d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x16d0) = 0;
  *(uint32 *)(localLong1 + 0x16e0) = 0;
  *(uint64 *)(localLong1 + 0x16c8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809113e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1790) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1790))(localLong1 + 0x1780,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1758) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1760) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1760) = 0;
  *(uint32 *)(localLong1 + 6000) = 0;
  *(uint64 *)(localLong1 + 0x1758) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1738) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1740) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1740) = 0;
  *(uint32 *)(localLong1 + 0x1750) = 0;
  *(uint64 *)(localLong1 + 0x1738) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911400(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1800) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1800))(localLong1 + 0x17f0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x17c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x17d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x17d0) = 0;
  *(uint32 *)(localLong1 + 0x17e0) = 0;
  *(uint64 *)(localLong1 + 0x17c8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x17a8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x17b0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x17b0) = 0;
  *(uint32 *)(localLong1 + 0x17c0) = 0;
  *(uint64 *)(localLong1 + 0x17a8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911420(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1870) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1870))(localLong1 + 0x1860,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1838) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1840) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1840) = 0;
  *(uint32 *)(localLong1 + 0x1850) = 0;
  *(uint64 *)(localLong1 + 0x1838) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1818) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1820) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1820) = 0;
  *(uint32 *)(localLong1 + 0x1830) = 0;
  *(uint64 *)(localLong1 + 0x1818) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911440(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x18e0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x18e0))(localLong1 + 0x18d0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x18a8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x18b0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x18b0) = 0;
  *(uint32 *)(localLong1 + 0x18c0) = 0;
  *(uint64 *)(localLong1 + 0x18a8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1888) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1890) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1890) = 0;
  *(uint32 *)(localLong1 + 0x18a0) = 0;
  *(uint64 *)(localLong1 + 0x1888) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911460(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1950) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1950))(localLong1 + 0x1940,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1918) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1920) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1920) = 0;
  *(uint32 *)(localLong1 + 0x1930) = 0;
  *(uint64 *)(localLong1 + 0x1918) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x18f8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1900) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1900) = 0;
  *(uint32 *)(localLong1 + 0x1910) = 0;
  *(uint64 *)(localLong1 + 0x18f8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911480(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x19c0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x19c0))(localLong1 + 0x19b0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1988) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1990) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1990) = 0;
  *(uint32 *)(localLong1 + 0x19a0) = 0;
  *(uint64 *)(localLong1 + 0x1988) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1968) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1970) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1970) = 0;
  *(uint32 *)(localLong1 + 0x1980) = 0;
  *(uint64 *)(localLong1 + 0x1968) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809114a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1a30) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1a30))(localLong1 + 0x1a20,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x19f8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1a00) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1a00) = 0;
  *(uint32 *)(localLong1 + 0x1a10) = 0;
  *(uint64 *)(localLong1 + 0x19f8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x19d8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x19e0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x19e0) = 0;
  *(uint32 *)(localLong1 + 0x19f0) = 0;
  *(uint64 *)(localLong1 + 0x19d8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809114c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1aa0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1aa0))(localLong1 + 0x1a90,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1a68) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1a70) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1a70) = 0;
  *(uint32 *)(localLong1 + 0x1a80) = 0;
  *(uint64 *)(localLong1 + 0x1a68) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1a48) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1a50) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1a50) = 0;
  *(uint32 *)(localLong1 + 0x1a60) = 0;
  *(uint64 *)(localLong1 + 0x1a48) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809114e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1b10) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1b10))(localLong1 + 0x1b00,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1ad8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1ae0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1ae0) = 0;
  *(uint32 *)(localLong1 + 0x1af0) = 0;
  *(uint64 *)(localLong1 + 0x1ad8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1ab8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1ac0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1ac0) = 0;
  *(uint32 *)(localLong1 + 0x1ad0) = 0;
  *(uint64 *)(localLong1 + 0x1ab8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911500(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1b80) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1b80))(localLong1 + 0x1b70,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1b48) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1b50) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1b50) = 0;
  *(uint32 *)(localLong1 + 0x1b60) = 0;
  *(uint64 *)(localLong1 + 0x1b48) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1b28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1b30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1b30) = 0;
  *(uint32 *)(localLong1 + 0x1b40) = 0;
  *(uint64 *)(localLong1 + 0x1b28) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911520(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1bf0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1bf0))(localLong1 + 0x1be0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1bb8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1bc0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1bc0) = 0;
  *(uint32 *)(localLong1 + 0x1bd0) = 0;
  *(uint64 *)(localLong1 + 0x1bb8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1b98) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1ba0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1ba0) = 0;
  *(uint32 *)(localLong1 + 0x1bb0) = 0;
  *(uint64 *)(localLong1 + 0x1b98) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911540(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1c60) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1c60))(localLong1 + 0x1c50,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1c28) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1c30) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1c30) = 0;
  *(uint32 *)(localLong1 + 0x1c40) = 0;
  *(uint64 *)(localLong1 + 0x1c28) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1c08) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1c10) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1c10) = 0;
  *(uint32 *)(localLong1 + 0x1c20) = 0;
  *(uint64 *)(localLong1 + 0x1c08) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911560(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1cd0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1cd0))(localLong1 + 0x1cc0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1c98) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1ca0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1ca0) = 0;
  *(uint32 *)(localLong1 + 0x1cb0) = 0;
  *(uint64 *)(localLong1 + 0x1c98) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1c78) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1c80) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1c80) = 0;
  *(uint32 *)(localLong1 + 0x1c90) = 0;
  *(uint64 *)(localLong1 + 0x1c78) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911580(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1d40) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1d40))(localLong1 + 0x1d30,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1d08) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1d10) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1d10) = 0;
  *(uint32 *)(localLong1 + 0x1d20) = 0;
  *(uint64 *)(localLong1 + 0x1d08) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1ce8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1cf0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1cf0) = 0;
  *(uint32 *)(localLong1 + 0x1d00) = 0;
  *(uint64 *)(localLong1 + 0x1ce8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809115a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1db0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1db0))(localLong1 + 0x1da0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1d78) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1d80) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1d80) = 0;
  *(uint32 *)(localLong1 + 0x1d90) = 0;
  *(uint64 *)(localLong1 + 0x1d78) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1d58) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1d60) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1d60) = 0;
  *(uint32 *)(localLong1 + 0x1d70) = 0;
  *(uint64 *)(localLong1 + 0x1d58) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809115c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1e20) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1e20))(localLong1 + 0x1e10,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1de8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1df0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1df0) = 0;
  *(uint32 *)(localLong1 + 0x1e00) = 0;
  *(uint64 *)(localLong1 + 0x1de8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1dc8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1dd0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1dd0) = 0;
  *(uint32 *)(localLong1 + 0x1de0) = 0;
  *(uint64 *)(localLong1 + 0x1dc8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809115e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1e90) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1e90))(localLong1 + 0x1e80,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1e58) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1e60) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1e60) = 0;
  *(uint32 *)(localLong1 + 0x1e70) = 0;
  *(uint64 *)(localLong1 + 0x1e58) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1e38) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1e40) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1e40) = 0;
  *(uint32 *)(localLong1 + 0x1e50) = 0;
  *(uint64 *)(localLong1 + 0x1e38) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911600(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1f00) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1f00))(localLong1 + 0x1ef0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1ec8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1ed0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1ed0) = 0;
  *(uint32 *)(localLong1 + 0x1ee0) = 0;
  *(uint64 *)(localLong1 + 0x1ec8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1ea8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1eb0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1eb0) = 0;
  *(uint32 *)(localLong1 + 0x1ec0) = 0;
  *(uint64 *)(localLong1 + 0x1ea8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911620(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1f70) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1f70))(localLong1 + 0x1f60,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1f38) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 8000) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 8000) = 0;
  *(uint32 *)(localLong1 + 0x1f50) = 0;
  *(uint64 *)(localLong1 + 0x1f38) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1f18) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1f20) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1f20) = 0;
  *(uint32 *)(localLong1 + 0x1f30) = 0;
  *(uint64 *)(localLong1 + 0x1f18) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911640(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x1fe0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x1fe0))(localLong1 + 0x1fd0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x1fa8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1fb0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1fb0) = 0;
  *(uint32 *)(localLong1 + 0x1fc0) = 0;
  *(uint64 *)(localLong1 + 0x1fa8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1f88) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x1f90) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x1f90) = 0;
  *(uint32 *)(localLong1 + 0x1fa0) = 0;
  *(uint64 *)(localLong1 + 0x1f88) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911660(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x2050) != (code *)0x0) {
    (**(code **)(localLong1 + 0x2050))(localLong1 + 0x2040,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x2018) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2020) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2020) = 0;
  *(uint32 *)(localLong1 + 0x2030) = 0;
  *(uint64 *)(localLong1 + 0x2018) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1ff8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2000) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2000) = 0;
  *(uint32 *)(localLong1 + 0x2010) = 0;
  *(uint64 *)(localLong1 + 0x1ff8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911680(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x20c0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x20c0))(localLong1 + 0x20b0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x2088) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2090) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2090) = 0;
  *(uint32 *)(localLong1 + 0x20a0) = 0;
  *(uint64 *)(localLong1 + 0x2088) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2068) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2070) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2070) = 0;
  *(uint32 *)(localLong1 + 0x2080) = 0;
  *(uint64 *)(localLong1 + 0x2068) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809116a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x2130) != (code *)0x0) {
    (**(code **)(localLong1 + 0x2130))(localLong1 + 0x2120,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x20f8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2100) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2100) = 0;
  *(uint32 *)(localLong1 + 0x2110) = 0;
  *(uint64 *)(localLong1 + 0x20f8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x20d8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x20e0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x20e0) = 0;
  *(uint32 *)(localLong1 + 0x20f0) = 0;
  *(uint64 *)(localLong1 + 0x20d8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809116c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x21a0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x21a0))(localLong1 + 0x2190,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x2168) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2170) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2170) = 0;
  *(uint32 *)(localLong1 + 0x2180) = 0;
  *(uint64 *)(localLong1 + 0x2168) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2148) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2150) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2150) = 0;
  *(uint32 *)(localLong1 + 0x2160) = 0;
  *(uint64 *)(localLong1 + 0x2148) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809116e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x2210) != (code *)0x0) {
    (**(code **)(localLong1 + 0x2210))(localLong1 + 0x2200,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x21d8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x21e0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x21e0) = 0;
  *(uint32 *)(localLong1 + 0x21f0) = 0;
  *(uint64 *)(localLong1 + 0x21d8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x21b8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x21c0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x21c0) = 0;
  *(uint32 *)(localLong1 + 0x21d0) = 0;
  *(uint64 *)(localLong1 + 0x21b8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911700(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x2280) != (code *)0x0) {
    (**(code **)(localLong1 + 0x2280))(localLong1 + 0x2270,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x2248) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2250) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2250) = 0;
  *(uint32 *)(localLong1 + 0x2260) = 0;
  *(uint64 *)(localLong1 + 0x2248) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2228) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2230) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2230) = 0;
  *(uint32 *)(localLong1 + 0x2240) = 0;
  *(uint64 *)(localLong1 + 0x2228) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911720(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x22f0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x22f0))(localLong1 + 0x22e0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x22b8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x22c0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x22c0) = 0;
  *(uint32 *)(localLong1 + 0x22d0) = 0;
  *(uint64 *)(localLong1 + 0x22b8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2298) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x22a0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x22a0) = 0;
  *(uint32 *)(localLong1 + 0x22b0) = 0;
  *(uint64 *)(localLong1 + 0x2298) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911740(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x2360) != (code *)0x0) {
    (**(code **)(localLong1 + 0x2360))(localLong1 + 0x2350,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 9000) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2330) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2330) = 0;
  *(uint32 *)(localLong1 + 0x2340) = 0;
  *(uint64 *)(localLong1 + 9000) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2308) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2310) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2310) = 0;
  *(uint32 *)(localLong1 + 0x2320) = 0;
  *(uint64 *)(localLong1 + 0x2308) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911760(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x23d0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x23d0))(localLong1 + 0x23c0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x2398) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x23a0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x23a0) = 0;
  *(uint32 *)(localLong1 + 0x23b0) = 0;
  *(uint64 *)(localLong1 + 0x2398) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2378) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2380) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2380) = 0;
  *(uint32 *)(localLong1 + 0x2390) = 0;
  *(uint64 *)(localLong1 + 0x2378) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911780(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x2440) != (code *)0x0) {
    (**(code **)(localLong1 + 0x2440))(localLong1 + 0x2430,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x2408) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2410) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2410) = 0;
  *(uint32 *)(localLong1 + 0x2420) = 0;
  *(uint64 *)(localLong1 + 0x2408) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x23e8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x23f0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x23f0) = 0;
  *(uint32 *)(localLong1 + 0x2400) = 0;
  *(uint64 *)(localLong1 + 0x23e8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809117a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x24b0) != (code *)0x0) {
    (**(code **)(localLong1 + 0x24b0))(localLong1 + 0x24a0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x2478) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2480) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2480) = 0;
  *(uint32 *)(localLong1 + 0x2490) = 0;
  *(uint64 *)(localLong1 + 0x2478) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2458) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2460) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2460) = 0;
  *(uint32 *)(localLong1 + 0x2470) = 0;
  *(uint64 *)(localLong1 + 0x2458) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809117c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x2520) != (code *)0x0) {
    (**(code **)(localLong1 + 0x2520))(localLong1 + 0x2510,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x24e8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x24f0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x24f0) = 0;
  *(uint32 *)(localLong1 + 0x2500) = 0;
  *(uint64 *)(localLong1 + 0x24e8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x24c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x24d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x24d0) = 0;
  *(uint32 *)(localLong1 + 0x24e0) = 0;
  *(uint64 *)(localLong1 + 0x24c8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809117e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x2590) != (code *)0x0) {
    (**(code **)(localLong1 + 0x2590))(localLong1 + 0x2580,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x2558) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2560) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2560) = 0;
  *(uint32 *)(localLong1 + 0x2570) = 0;
  *(uint64 *)(localLong1 + 0x2558) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x2538) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x2540) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x2540) = 0;
  *(uint32 *)(localLong1 + 0x2550) = 0;
  *(uint64 *)(localLong1 + 0x2538) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911800(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (*(code **)(localLong1 + 0x2600) != (code *)0x0) {
    (**(code **)(localLong1 + 0x2600))(localLong1 + 0x25f0,0,0,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(localLong1 + 0x25c8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x25d0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x25d0) = 0;
  *(uint32 *)(localLong1 + 0x25e0) = 0;
  *(uint64 *)(localLong1 + 0x25c8) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x25a8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x25b0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x25b0) = 0;
  *(uint32 *)(localLong1 + 0x25c0) = 0;
  *(uint64 *)(localLong1 + 0x25a8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180911820(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x40) + 0x2610);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x2618);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180911840(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  longlong *plocalLong2;
  uint64 *puVar3;
  uint64 uVar4;
  
  plocalLong2 = (longlong *)(*(longlong *)(memorySize + 0x40) + 0x2630);
  uVar4 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(*(longlong *)(memorySize + 0x40) + 0x2638);
  for (puVar3 = (uint64 *)*plocalLong2; puVar3 != plocalUInt1; puVar3 = puVar3 + 4) {
    (**(code **)*puVar3)(puVar3,0,operationFlags,callbackFunction,uVar4);
  }
  if (*plocalLong2 == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180911860(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x78);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x70); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x70) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180911870(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x118);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x110); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x110) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180911880(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0xf8);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0xf0); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0xf0) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180911890(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0xd8);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0xd0); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0xd0) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809118a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0xb8);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0xb0); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0xb0) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809118b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x138);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x130); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x130) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809118c0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x20);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_1809118d0(uint64 resourceHandle,longlong memorySize)

{
  *(data **)(memorySize + 0x160) = &threadLocalStorageCleanup;
  return;
}



void Unwind_1809118e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x78);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x70); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x70) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_1809118f0(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x70);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180911900(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x118);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x110); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x110) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180911910(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0xf8);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0xf0); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0xf0) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180911920(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0xd8);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0xd0); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0xd0) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180911930(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0xb8);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0xb0); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0xb0) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180911940(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  uVar3 = 0xfffffffffffffffe;
  plocalUInt1 = *(uint64 **)(memorySize + 0x138);
  for (plocalUInt2 = *(uint64 **)(memorySize + 0x130); plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 4) {
    (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
  }
  if (*(longlong *)(memorySize + 0x130) == 0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



void Unwind_180911950(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(memorySize + 0x20);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180911960(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x2c) & 1) != 0) {
    *(uint *)(memorySize + 0x2c) = *(uint *)(memorySize + 0x2c) & 0xfffffffe;
    FUN_180044a30(memorySize + 0x158);
  }
  return;
}



void Unwind_180911990(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x2c) & 2) != 0) {
    *(uint *)(memorySize + 0x2c) = *(uint *)(memorySize + 0x2c) & 0xfffffffd;
    FUN_180044a30(memorySize + 0x120);
  }
  return;
}



void Unwind_1809119c0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x2c) & 4) != 0) {
    *(uint *)(memorySize + 0x2c) = *(uint *)(memorySize + 0x2c) & 0xfffffffb;
    FUN_180044a30(memorySize + 0xe8);
  }
  return;
}



void Unwind_1809119f0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x2c) & 8) != 0) {
    *(uint *)(memorySize + 0x2c) = *(uint *)(memorySize + 0x2c) & 0xfffffff7;
    FUN_180044a30(memorySize + 0xb0);
  }
  return;
}



void Unwind_180911a20(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x30) != (code *)0x0) {
    (**(code **)(memorySize + 0x30))(memorySize + 0x20,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180911a30(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x98) != (code *)0x0) {
    (**(code **)(memorySize + 0x98))(memorySize + 0x88,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180911a40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0xb8) != (code *)0x0) {
    (**(code **)(memorySize + 0xb8))(memorySize + 0xa8,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180911a50(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0xd8) != (code *)0x0) {
    (**(code **)(memorySize + 0xd8))(memorySize + 200,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180911a60(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0xf8) != (code *)0x0) {
    (**(code **)(memorySize + 0xf8))(memorySize + 0xe8,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180911a70(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x118) != (code *)0x0) {
    (**(code **)(memorySize + 0x118))(memorySize + 0x108,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180911a80(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x138) != (code *)0x0) {
    (**(code **)(memorySize + 0x138))(memorySize + 0x128,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180911a90(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  if (*(code **)(memorySize + 0x30) != (code *)0x0) {
    (**(code **)(memorySize + 0x30))(memorySize + 0x20,0,0,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180911aa0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 1) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffe;
    FUN_180044a30(memorySize + 0xb0);
  }
  return;
}



void Unwind_180911ad0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 2) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffd;
    FUN_180044a30(memorySize + 0x78);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911b00(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911b10(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0x18);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911b20(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0x28);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911b30(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0x68);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911b40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0x78);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911b50(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0x88);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911b70(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0xa0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180911b90(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x50);
  *(byte *)(localLong1 + 0x88) = 0;
  *(uint64 *)(localLong1 + 0x90) = 0;
  *(uint64 *)(localLong1 + 0x9c) = 0;
  *(uint32 *)(localLong1 + 0x98) = 0;
  *(uint64 *)(localLong1 + 0xac) = 0;
  *(uint64 *)(localLong1 + 0xa4) = 0;
  return;
}



void Unwind_180911bb0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x50) + 0xb8,0x10,2,FUN_18011d900,0xfffffffffffffffe);
  return;
}



void Unwind_180911bd0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x58),0x10,2,FUN_18011d900);
  return;
}



void Unwind_180911c00(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x40),0x10,2,FUN_18011d900);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911c30(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x1538);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911c40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x1620);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x1608);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911c60(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x1aa8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911c80(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x1ab8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911ca0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x1ac8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911cc0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x1ad8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911ce0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x1ae8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911d00(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x1b88);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911d20(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x1b98);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911d40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x1ba8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911d60(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x1bb8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911d80(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x1bc8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911da0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x1c70);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911dc0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x1e50);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911de0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  int *plocalInt1;
  int localInt2;
  longlong localLong3;
  longlong lVar4;
  ulonglong uVar5;
  uint uVar6;
  ulonglong uVar7;
  
  lVar4 = *(longlong *)(memorySize + 0x70);
  uVar5 = 0;
  plocalInt1 = (int *)(lVar4 + 0x1e70);
  uVar7 = uVar5;
  if (0 < *plocalInt1) {
    do {
      localInt2 = *(int *)(*(longlong *)(lVar4 + 0x1e78) + 8 + uVar5);
      if ((localInt2 != -1) &&
         (localLong3 = *(longlong *)((longlong)localInt2 * 0x60 + *(longlong *)(lVar4 + 0x1e68) + 8),
         localLong3 != 0)) {
        if (_DAT_180c8a9b0 != 0) {
          *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
        }
                    // WARNING: Subroutine does not return
        FUN_180059ba0(localLong3,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
      }
      uVar6 = (int)uVar7 + 1;
      uVar5 = uVar5 + 0x10;
      uVar7 = (ulonglong)uVar6;
    } while ((int)uVar6 < *plocalInt1);
  }
  localLong3 = *(longlong *)(lVar4 + 0x1e78);
  if (localLong3 != 0) {
    plocalInt1[0] = 0;
    plocalInt1[1] = 0;
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong3,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  localLong3 = *(longlong *)(lVar4 + 0x1e68);
  if (localLong3 == 0) {
    *(uint32 *)(lVar4 + 0x1e80) = 0;
    localLong3 = *(longlong *)(lVar4 + 0x1e78);
    if (localLong3 != 0) {
      if (_DAT_180c8a9b0 != 0) {
        *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
      }
                    // WARNING: Subroutine does not return
      FUN_180059ba0(localLong3,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
    }
    lVar4 = *(longlong *)(lVar4 + 0x1e68);
    if (lVar4 == 0) {
      return;
    }
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(lVar4,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  *(uint64 *)(lVar4 + 0x1e60) = 0;
  if (_DAT_180c8a9b0 != 0) {
    *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
  }
                    // WARNING: Subroutine does not return
  FUN_180059ba0(localLong3,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911e00(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x1e90);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911e20(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x1ea0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911e40(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  longlong localLong2;
  
  localLong2 = *(longlong *)(memorySize + 0x70);
  localLong1 = *(longlong *)(localLong2 + 0x1ed8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  localLong1 = *(longlong *)(localLong2 + 0x1ec8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  localLong1 = *(longlong *)(localLong2 + 0x1eb8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911e60(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  longlong localLong2;
  uint64 uVar3;
  
  localLong2 = *(longlong *)(memorySize + 0x70);
  uVar3 = 0xfffffffffffffffe;
  FUN_180296b70();
  localLong1 = *(longlong *)(localLong2 + 0x2d68);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,uVar3);
  }
  localLong1 = *(longlong *)(localLong2 + 0x2d58);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,uVar3);
  }
  localLong1 = *(longlong *)(localLong2 + 0x2d48);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,uVar3);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911e80(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x2dd8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911ea0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x2e10);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911ec0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x2e20);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911ee0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x2e30);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911f00(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x2e50);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180911f20(uint64 resourceHandle,longlong memorySize)

{
  _guard_check_icall(*(uint64 *)(memorySize + 0x28),**(byte **)(memorySize + 0x88),
                     *(uint64 *)(memorySize + 0x80));
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911f50(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x78) + 200);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911f70(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x78) + 0xe0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911f90(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x78) + 8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911fa0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x78) + 0x18);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911fb0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x80) + 8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911fc0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x78) + 0x10);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911fd0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x78) + 0x20);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911fe0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x78) + 0x30);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180911ff0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x28) + 0x48);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912000(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x28) + 0x58);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912010(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x28) + 0x68);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912020(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0x1530);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912040(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 200);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912060(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0xe0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912080(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0x10);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912090(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0x20);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809120a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0x30);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809120b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x20) + 0x90);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809120d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x20) + 0xc0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809120f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x20) + 0xd0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912110(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x20) + 0xe0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912130(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x20) + 0xf0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912150(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x50) + 0x1530);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912170(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912180(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  longlong localLong2;
  
  localLong2 = *(longlong *)(memorySize + 0x70);
  localLong1 = *(longlong *)(localLong2 + 0x1f0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  localLong1 = *(longlong *)(localLong2 + 0x1e0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  localLong1 = *(longlong *)(localLong2 + 0x1d0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  localLong1 = *(longlong *)(localLong2 + 0x1c0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  localLong1 = *(longlong *)(localLong2 + 400);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809121a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x220);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809121c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x2c0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809121e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x70) + 0x2d0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912200(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  longlong localLong2;
  uint64 uVar3;
  
  localLong2 = *(longlong *)(memorySize + 0x70);
  uVar3 = 0xfffffffffffffffe;
  FUN_180291610();
  localLong1 = *(longlong *)(localLong2 + 0x390);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,uVar3);
  }
  localLong1 = *(longlong *)(localLong2 + 0x378);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,uVar3);
  }
  localLong1 = *(longlong *)(localLong2 + 0x368);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,uVar3);
  }
  localLong1 = *(longlong *)(localLong2 + 0x358);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,uVar3);
  }
  localLong1 = *(longlong *)(localLong2 + 0x318);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,uVar3);
  }
  localLong1 = *(longlong *)(localLong2 + 0x308);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,uVar3);
  }
  localLong1 = *(longlong *)(localLong2 + 0x2f8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,uVar3);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912220(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0x90);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912240(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0xc0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912260(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0xd0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912280(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0xf0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809122a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  longlong localLong2;
  
  localLong2 = *(longlong *)(memorySize + 0x40);
  localLong1 = *(longlong *)(localLong2 + 0x1f0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  localLong1 = *(longlong *)(localLong2 + 0x1e0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  localLong1 = *(longlong *)(localLong2 + 0x1d0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  localLong1 = *(longlong *)(localLong2 + 0x1c0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  localLong1 = *(longlong *)(localLong2 + 400);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809122c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0x220);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809122e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0x2c0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912300(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0x2d0);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912320(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  longlong localLong2;
  uint64 uVar3;
  
  localLong2 = *(longlong *)(memorySize + 0x40);
  uVar3 = 0xfffffffffffffffe;
  FUN_180291610();
  localLong1 = *(longlong *)(localLong2 + 0x390);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,uVar3);
  }
  localLong1 = *(longlong *)(localLong2 + 0x378);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,uVar3);
  }
  localLong1 = *(longlong *)(localLong2 + 0x368);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,uVar3);
  }
  localLong1 = *(longlong *)(localLong2 + 0x358);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,uVar3);
  }
  localLong1 = *(longlong *)(localLong2 + 0x318);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,uVar3);
  }
  localLong1 = *(longlong *)(localLong2 + 0x308);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,uVar3);
  }
  localLong1 = *(longlong *)(localLong2 + 0x2f8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,uVar3);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912340(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x48) + 0x38);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912350(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x48) + 8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912360(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0x38);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180912370(uint64 resourceHandle,longlong memorySize)

{
  _guard_check_icall(*(uint64 *)(memorySize + 0x58),**(byte **)(memorySize + 0x50),
                     *(uint64 *)(memorySize + 0x48));
  return;
}



void Unwind_1809123a0(uint64 resourceHandle,longlong memorySize)

{
  _guard_check_icall(*(uint64 *)(memorySize + 0x68),**(byte **)(memorySize + 0x60),
                     *(uint64 *)(memorySize + 0x58));
  return;
}



void Unwind_1809123d0(uint64 resourceHandle,longlong memorySize)

{
  _guard_check_icall(*(uint64 *)(memorySize + 200),**(byte **)(memorySize + 0xc0),
                     *(uint64 *)(memorySize + 0xb8));
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912400(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 200) + 8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912410(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 200) + 0x18);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912420(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 200) + 0x28);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912430(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x28) + 8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912440(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x60) + 0x48);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912450(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x60) + 0x58);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912460(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x60) + 0x68);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180912470(uint64 resourceHandle,longlong memorySize)

{
  _guard_check_icall(*(uint64 *)(memorySize + 0x38),**(byte **)(memorySize + 0x30),
                     *(uint64 *)(memorySize + 0x28));
  return;
}



void Unwind_1809124a0(uint64 resourceHandle,longlong memorySize)

{
  _guard_check_icall(*(uint64 *)(memorySize + 0x30),**(byte **)(memorySize + 0x28),
                     *(uint64 *)(memorySize + 0x70));
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809124d0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x60);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809124e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x60);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809124f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  uint64 localUInt2;
  
  localLong1 = *(longlong *)(memorySize + 0x50);
  localUInt2 = 0xfffffffffffffffe;
  FUN_18013ea00(*(uint64 *)(localLong1 + 0x30));
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint64 *)(localLong1 + 0x18) = 0;
  *(uint64 *)(localLong1 + 0x10) = 0;
  localLong1 = *(longlong *)(localLong1 + 0x28);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,localUInt2);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912500(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x58) + 0x28);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912510(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x50) + 0x28);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912520(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x50) + 8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912530(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x50) + 0x18);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912540(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x50) + 8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180912550(uint64 resourceHandle,longlong memorySize)

{
  _guard_check_icall(*(uint64 *)(memorySize + 0x68),**(byte **)(memorySize + 0x60),
                     *(uint64 *)(memorySize + 0x50));
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912580(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x48) + 0x28);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912590(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x58);
  if (localLong1 != 0) {
    *(uint64 *)(memorySize + 0x50) = 0;
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  localLong1 = *(longlong *)(memorySize + 0x48);
  if (localLong1 != 0) {
    *(uint64 *)(memorySize + 0x40) = 0;
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  *(uint32 *)(memorySize + 0x60) = 0;
  localLong1 = *(longlong *)(memorySize + 0x58);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  localLong1 = *(longlong *)(memorySize + 0x48);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809125a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x48);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809125b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x58);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809125c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0xc0) + 8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809125d0(uint64 resourceHandle,longlong memorySize)

{
  _guard_check_icall(*(uint64 *)(memorySize + 0x30),**(byte **)(memorySize + 0x28),
                     *(uint64 *)(memorySize + 0xd0));
  return;
}



void Unwind_180912600(uint64 resourceHandle,longlong memorySize)

{
  _guard_check_icall(*(uint64 *)(memorySize + 0x28),**(byte **)(memorySize + 0x30),
                     *(uint64 *)(memorySize + 0x38));
  return;
}



void Unwind_180912630(uint64 resourceHandle,longlong memorySize)

{
  _guard_check_icall(*(uint64 *)(memorySize + 0xa8),**(byte **)(memorySize + 0xa0),
                     *(uint64 *)(memorySize + 0x98));
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912660(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0xa8) + 8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180912670(uint64 resourceHandle,longlong memorySize)

{
  _guard_check_icall(*(uint64 *)(memorySize + 0x28),**(byte **)(memorySize + 0x68),
                     *(uint64 *)(memorySize + 0x60));
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809126a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x20) + 0x28);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_1809126b0(uint64 resourceHandle,longlong memorySize)

{
  _guard_check_icall(*(uint64 *)(memorySize + 0x78),**(byte **)(memorySize + 0x68),
                     *(uint64 *)(memorySize + 0x60));
  return;
}



void Unwind_1809126e0(uint64 resourceHandle,longlong memorySize)

{
  _guard_check_icall(*(uint64 *)(memorySize + 0x40),**(byte **)(memorySize + 0x30),
                     *(uint64 *)(memorySize + 0x180));
  return;
}



void Unwind_180912710(uint64 resourceHandle,longlong memorySize)

{
  _guard_check_icall(*(uint64 *)(memorySize + 0x28),**(byte **)(memorySize + 0x68),
                     *(uint64 *)(memorySize + 0x88));
  return;
}



void Unwind_180912740(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(memorySize + 0x98,0x10,2,FUN_18011d900);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912770(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x30);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912780(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  uint64 localUInt2;
  
  localUInt2 = 0xfffffffffffffffe;
  FUN_18013ea00(*(uint64 *)(memorySize + 0x1d0));
  *(uint64 *)(memorySize + 0x1d0) = 0;
  *(uint64 *)(memorySize + 0x1b8) = 0;
  *(uint64 *)(memorySize + 0x1b0) = 0;
  localLong1 = *(longlong *)(memorySize + 0x1c8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,localUInt2);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912790(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  uint64 localUInt2;
  
  localUInt2 = 0xfffffffffffffffe;
  FUN_18013ea00(*(uint64 *)(memorySize + 0xc0));
  *(uint64 *)(memorySize + 0xc0) = 0;
  *(uint64 *)(memorySize + 0xa8) = 0;
  *(uint64 *)(memorySize + 0xa0) = 0;
  localLong1 = *(longlong *)(memorySize + 0xb8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,localUInt2);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809127a0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  uint64 localUInt2;
  
  localUInt2 = 0xfffffffffffffffe;
  FUN_18013ea00(*(uint64 *)(memorySize + 0xc0));
  *(uint64 *)(memorySize + 0xc0) = 0;
  *(uint64 *)(memorySize + 0xa8) = 0;
  *(uint64 *)(memorySize + 0xa0) = 0;
  localLong1 = *(longlong *)(memorySize + 0xb8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,localUInt2);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809127b0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  uint64 localUInt2;
  
  localUInt2 = 0xfffffffffffffffe;
  FUN_18013ea00(*(uint64 *)(memorySize + 0x1d0));
  *(uint64 *)(memorySize + 0x1d0) = 0;
  *(uint64 *)(memorySize + 0x1b8) = 0;
  *(uint64 *)(memorySize + 0x1b0) = 0;
  localLong1 = *(longlong *)(memorySize + 0x1c8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,localUInt2);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809127c0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  uint64 localUInt2;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  localUInt2 = 0xfffffffffffffffe;
  FUN_18013ea00(*(uint64 *)(localLong1 + 0x30));
  *(uint64 *)(localLong1 + 0x30) = 0;
  *(uint64 *)(localLong1 + 0x18) = 0;
  *(uint64 *)(localLong1 + 0x10) = 0;
  localLong1 = *(longlong *)(localLong1 + 0x28);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,localUInt2);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809127d0(void)

{
  byte bVar1;
  
  EnterCriticalSection(0x180c82210);
  _DAT_180d49270 = 0;
  LeaveCriticalSection(0x180c82210);
  if (_DAT_180c82240 != 0) {
    SetEvent();
                    // WARNING: Could not recover jumptable at 0x0001808fcc41. Too many branches
                    // WARNING: Treating indirect jump as call
    ResetEvent(_DAT_180c82240);
    return;
  }
  bVar1 = (byte)_DAT_180bf00a8 & 0x3f;
                    // WARNING: Could not recover jumptable at 0x0001808ffe70. Too many branches
                    // WARNING: Treating indirect jump as call
  (*(code *)((_DAT_180bf00a8 ^ _DAT_180c82250) >> bVar1 |
            (_DAT_180bf00a8 ^ _DAT_180c82250) << 0x40 - bVar1))(0x180c82238);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809127e0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x40) + 0x18);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_1809127f0(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x50) + 0x18);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void Unwind_180912800(uint64 resourceHandle,longlong memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(*(longlong *)(memorySize + 0x58) + 8);
  if (localLong1 != 0) {
    if (_DAT_180c8a9b0 != 0) {
      *(int *)(_DAT_180c8a9b0 + 0x3a8) = *(int *)(_DAT_180c8a9b0 + 0x3a8) + -1;
    }
                    // WARNING: Subroutine does not return
    FUN_180059ba0(localLong1,_DAT_180c8a9a8,operationFlags,callbackFunction,0xfffffffffffffffe);
  }
  return;
}



void Unwind_180912810(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x40);
  *(byte *)(localLong1 + 0x88) = 0;
  *(uint64 *)(localLong1 + 0x90) = 0;
  *(uint64 *)(localLong1 + 0x9c) = 0;
  *(uint32 *)(localLong1 + 0x98) = 0;
  *(uint64 *)(localLong1 + 0xac) = 0;
  *(uint64 *)(localLong1 + 0xa4) = 0;
  return;
}



void Unwind_180912830(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(longlong *)(memorySize + 0x40) + 0xb8,0x10,2,FUN_18011d900,0xfffffffffffffffe);
  return;
}



void Unwind_180912850(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x48),0x10,2,FUN_18011d900);
  return;
}



void Unwind_180912880(uint64 resourceHandle,longlong memorySize)

{
  FUN_180057010(memorySize + 0x120);
  return;
}



void Unwind_180912890(uint64 resourceHandle,longlong memorySize)

{
  FUN_180057010(memorySize + 0x120);
  return;
}



void Unwind_1809128a0(uint64 resourceHandle,longlong memorySize)

{
  FUN_180057010(memorySize + 0x120);
  return;
}



void Unwind_1809128b0(uint64 resourceHandle,longlong memorySize)

{
  if ((*(uint *)(memorySize + 0x30) & 2) != 0) {
    *(uint *)(memorySize + 0x30) = *(uint *)(memorySize + 0x30) & 0xfffffffd;
    FUN_180627b90(memorySize + 0x60);
  }
  return;
}



void Unwind_1809128e0(uint64 resourceHandle,longlong memorySize)

{
  FUN_1808fc8a8(*(uint64 *)(memorySize + 0x80),0x48,7,FUN_1800596a0);
  return;
}



void Unwind_180912910(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  *(uint64 *)(localLong1 + 0x218) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x220) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x220) = 0;
  *(uint32 *)(localLong1 + 0x230) = 0;
  *(uint64 *)(localLong1 + 0x218) = &threadLocalStorageCleanup;
  *(uint64 *)(localLong1 + 0x1f8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x200) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x200) = 0;
  *(uint32 *)(localLong1 + 0x210) = 0;
  *(uint64 *)(localLong1 + 0x1f8) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180912930(uint64 resourceHandle,longlong memorySize)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = *(uint64 **)(*(longlong *)(memorySize + 0x80) + 0x360);
  if (plocalUInt2 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)plocalUInt2 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)plocalUInt2 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *plocalUInt2 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          plocalUInt2,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



void Unwind_180912950(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  *(uint64 *)(localLong1 + 0x388) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x390) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x390) = 0;
  *(uint32 *)(localLong1 + 0x3a0) = 0;
  *(uint64 *)(localLong1 + 0x388) = &threadLocalStorageCleanup;
  return;
}



void Unwind_180912970(uint64 resourceHandle,longlong memorySize)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)(memorySize + 0x80);
  *(uint64 *)(localLong1 + 0x3a8) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x3b0) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x3b0) = 0;
  *(uint32 *)(localLong1 + 0x3c0) = 0;
  *(uint64 *)(localLong1 + 0x3a8) = &threadLocalStorageCleanup;
  return;
}


uint32 unknown_180d49260;

// 函数: void reset_game_state_if_needed(uint64 resourceHandle,longlong memorySize)
void reset_game_state_if_needed(uint64 resourceHandle,longlong memorySize)

{
  char status_flag;
  int check_result;
  
  status_flag = *(char *)(memorySize + 0x40);
  check_result = func_0x0001808fd8d4();
  if ((check_result != 0) && (status_flag == '\0')) {
    LOCK();
    _DAT_180c821d0 = 0;
    UNLOCK();
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void checkResourceState(uint64 resourceHandle,longlong memorySize)
void checkResourceState(uint64 resourceHandle,longlong memorySize)

{
  char cVar1;
  int localInt2;
  
  FUN_1808fc5ac();
  cVar1 = *(char *)(memorySize + 0x38);
  localInt2 = func_0x0001808fd8d4();
  if ((localInt2 != 0) && (cVar1 == '\0')) {
    LOCK();
    _DAT_180c821d0 = 0;
    UNLOCK();
  }
  return;
}




// 函数: void execute_game_render_function(uint64 *resourceHandle,longlong memorySize)
void execute_game_render_function(uint64 *resourceHandle,longlong memorySize)

{
  FUN_1808fc51c(*(uint64 *)(memorySize + 0x60),*(uint32 *)(memorySize + 0x68),
                *(uint64 *)(memorySize + 0x70),FUN_1808fc074,*(uint32 *)*resourceHandle,resourceHandle);
  return;
}



bool is_game_object_invalid(uint64 *resourceHandle)

{
  return *(int *)*resourceHandle == -0x3ffffffb;
}




// 函数: void memoryFreeBlock(uint64 resourceHandle,longlong memorySize)
void memoryFreeBlock(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0x20) == '\0') {
    FUN_1808fc914(*(uint64 *)(memorySize + 0x50),*(uint64 *)(memorySize + 0x58),
                  *(uint64 *)(memorySize + 0x28),*(uint64 *)(memorySize + 0x70));
  }
  return;
}




// 函数: void memoryReallocateBlock(uint64 resourceHandle,longlong memorySize)
void memoryReallocateBlock(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0x20) == '\0') {
    FUN_1808fc914(*(uint64 *)(memorySize + 0x60),*(uint64 *)(memorySize + 0x68),
                  *(uint64 *)(memorySize + 0x70),*(uint64 *)(memorySize + 0x78));
  }
  return;
}



uint32 memoryGetBlockSize(uint64 resourceHandle,longlong memorySize)

{
  *(uint64 *)(memorySize + 0x40) = resourceHandle;
  *(uint64 *)(memorySize + 0x30) = resourceHandle;
  *(uint64 *)(memorySize + 0x38) = **(uint64 **)(memorySize + 0x30);
  if (**(int **)(memorySize + 0x38) != -0x1f928c9d) {
    *(uint32 *)(memorySize + 0x20) = 0;
    return *(uint32 *)(memorySize + 0x20);
  }
                    // WARNING: Subroutine does not return
  terminate();
}




// 函数: void memoryValidateBlock(uint64 resourceHandle,longlong memorySize)
void memoryValidateBlock(uint64 resourceHandle,longlong memorySize)

{
  if (*(char *)(memorySize + 0x20) == '\0') {
    FUN_1808fc914(*(uint64 *)(memorySize + 0x60),*(uint64 *)(memorySize + 0x70),
                  *(uint64 *)(memorySize + 0x28),*(uint64 *)(memorySize + 0x88));
  }
  return;
}




// 函数: void memoryDefragmentBlock(uint64 *resourceHandle)
void memoryDefragmentBlock(uint64 *resourceHandle)

{
  func_0x0001808fd024(*(uint32 *)*resourceHandle);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void InitializeResourcePool(void)
void InitializeResourcePool(void)

{
  longlong localLong1;
  longlong localLong2;
  
  _DAT_180bf52c0 = &threadLocalStorageData;
  if (_DAT_180bf52c8 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  _DAT_180bf52c8 = 0;
  _DAT_180bf52d8 = 0;
  _DAT_180bf52c0 = &threadLocalStorageCleanup;
  if (_DAT_180bf5288 == 0) {
    FUN_180048980();
    localLong1 = _DAT_180bf5250;
    for (localLong2 = _DAT_180bf5248; localLong2 != localLong1; localLong2 = localLong2 + 0x100) {
      FUN_180046b10(localLong2);
    }
    if (_DAT_180bf5248 == 0) {
      return;
    }
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void InitializeMemoryPool(void)
void InitializeMemoryPool(void)

{
  _DAT_180bf5320 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void SetupMemoryManager(void)
void SetupMemoryManager(void)

{
  _memoryPoolBaseAddress = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void CreateMemoryAllocator(void)
void CreateMemoryAllocator(void)

{
  _bufferManagerControl1 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void RegisterMemoryHandler(void)
void RegisterMemoryHandler(void)

{
  _dataStructurePointer1 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void ConfigureMemorySettings(void)
void ConfigureMemorySettings(void)

{
  _systemStatusFlag1 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void ValidateMemoryConfiguration(void) # 内存验证函数
void ValidateMemoryConfiguration(void) # 内存验证函数

{
  _errorHandlerState1 = &threadLocalStorageCleanup;
  return;
}




// 函数: void threadSyncInitialize(void) # 线程同步初始化函数
void threadSyncInitialize(void) # 线程同步初始化函数

{
  _Mtx_destroy_in_situ();
                    // WARNING: Could not recover jumptable at 0x000180941680. Too many branches
                    // WARNING: Treating indirect jump as call
  _Cnd_destroy_in_situ();
  return;
}




// 函数: void eventHandlerInitialize(void) # 事件处理初始化函数
void eventHandlerInitialize(void) # 事件处理初始化函数

{
  _Mtx_destroy_in_situ();
                    // WARNING: Could not recover jumptable at 0x0001809416c0. Too many branches
                    // WARNING: Treating indirect jump as call
  _Cnd_destroy_in_situ();
  return;
}




// 函数: void semaphoreInitialize(void) # 信号量初始化函数
void semaphoreInitialize(void) # 信号量初始化函数

{
  _Mtx_destroy_in_situ();
                    // WARNING: Could not recover jumptable at 0x000180941700. Too many branches
                    // WARNING: Treating indirect jump as call
  _Cnd_destroy_in_situ();
  return;
}




// 函数: void memoryRegionInitialize(void) # 内存区域初始化函数
void memoryRegionInitialize(void) # 内存区域初始化函数

{
  _Mtx_destroy_in_situ();
                    // WARNING: Could not recover jumptable at 0x000180941740. Too many branches
                    // WARNING: Treating indirect jump as call
  _Cnd_destroy_in_situ();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void bufferInitialize(void) # 缓冲区初始化函数
void bufferInitialize(void) # 缓冲区初始化函数

{
                    // WARNING: Could not recover jumptable at 0x0001809417b8. Too many branches
                    // WARNING: Treating indirect jump as call
  CloseHandle(_DAT_180c91900);
  return;
}




// 函数: void systemConfigInitialize(void) # 系统配置初始化函数
void systemConfigInitialize(void) # 系统配置初始化函数

{
                    // WARNING: Could not recover jumptable at 0x0001809417d8. Too many branches
                    // WARNING: Treating indirect jump as call
  _Mtx_destroy_in_situ(0x180c91910);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void InitializeGlobalDataPointer1(void)
void InitializeGlobalDataPointer1(void)

{
  _DAT_180d49160 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void FreeMemoryPool(void) # 数据结构初始化函数
void FreeMemoryPool(void) # 数据结构初始化函数

{
  _DAT_180bf64d0 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void AllocateMemoryChunk(void)
void AllocateMemoryChunk(void)

{
  _g_memoryFreeConfig1 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void FreeMemoryChunk(void)
void FreeMemoryChunk(void)

{
  _g_chunkAllocData1 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void GetMemoryChunkSize(void)
void GetMemoryChunkSize(void)

{
  _g_chunkFreeData1 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void InitializeGlobalDataPointer2(void)
void InitializeGlobalDataPointer2(void)

{
  _g_chunkSizeData1 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void InitializeGlobalDataPointer3(void)
void InitializeGlobalDataPointer3(void)

{
  _aiSystemHandle = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void InitializeGlobalDataPointer4(void)
void InitializeGlobalDataPointer4(void)

{
  _sceneManagerHandle = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void InitializeResourceManager(void)
void InitializeResourceManager(void)

{
  _resourceManagerHandle = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void InitializeScriptSystem(void)
void InitializeScriptSystem(void)

{
  _scriptSystemHandle = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void systemInitializeModules(uint64 resourceHandle,uint64 memorySize,uint64 operationFlags,uint64 callbackFunction)
void systemInitializeModules(uint64 resourceHandle,uint64 memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  longlong *plocalLong1;
  
  plocalLong1 = _DAT_180d49200;
  FUN_18008d1f0(resourceHandle,_DAT_180d49200[1],operationFlags,callbackFunction,0xfffffffffffffffe);
  _DAT_180d49200[1] = (longlong)plocalLong1;
  *_DAT_180d49200 = (longlong)plocalLong1;
  _DAT_180d49200[2] = (longlong)plocalLong1;
  _DAT_180d49208 = 0;
                    // WARNING: Could not recover jumptable at 0x0001808ffc83. Too many branches
                    // WARNING: Treating indirect jump as call
  free(_DAT_180d49200,0x58);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void InitializePerformanceMonitor(void)
void InitializePerformanceMonitor(void)

{
  _debugSystemHandle = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void LoadConfiguration(void)
void LoadConfiguration(void)

{
  _performanceMonitorHandle = &threadLocalStorageCleanup;
  return;
}




// 函数: void InitializeConfigurationSystem(void)
void InitializeConfigurationSystem(void)

{
                    // WARNING: Could not recover jumptable at 0x0001809419d8. Too many branches
                    // WARNING: Treating indirect jump as call
  _Mtx_destroy_in_situ(0x180c91970);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void systemInitializeServices(void)
void systemInitializeServices(void)

{
  _DAT_180d49218 = &threadLocalStorageData;
  if (_DAT_180d49220 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  _DAT_180d49220 = 0;
  _DAT_180d49230 = 0;
  _DAT_180d49218 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void systemInitializePlugins(void)
void systemInitializePlugins(void)

{
  _DAT_180d49240 = &threadLocalStorageData;
  if (_DAT_180d49248 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  _DAT_180d49248 = 0;
  _DAT_180d49258 = 0;
  _DAT_180d49240 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void systemInitializeExtensions(void)
void systemInitializeExtensions(void)

{
  int *plocalInt1;
  uint64 *plocalUInt2;
  longlong localLong3;
  ulonglong uVar4;
  
  plocalUInt2 = _DAT_180d493f8;
  if (_DAT_180d493f8 == (uint64 *)0x0) {
    return;
  }
  uVar4 = (ulonglong)_DAT_180d493f8 & 0xffffffffffc00000;
  if (uVar4 != 0) {
    localLong3 = uVar4 + 0x80 + ((longlong)_DAT_180d493f8 - uVar4 >> 0x10) * 0x50;
    localLong3 = localLong3 - (ulonglong)*(uint *)(localLong3 + 4);
    if ((*(void ***)(uVar4 + 0x70) == &ExceptionList) && (*(char *)(localLong3 + 0xe) == '\0')) {
      *_DAT_180d493f8 = *(uint64 *)(localLong3 + 0x20);
      *(uint64 **)(localLong3 + 0x20) = plocalUInt2;
      plocalInt1 = (int *)(localLong3 + 0x18);
      *plocalInt1 = *plocalInt1 + -1;
      if (*plocalInt1 == 0) {
        FUN_18064d630();
        return;
      }
    }
    else {
      func_0x00018064e870(uVar4,CONCAT71(0xff000000,*(void ***)(uVar4 + 0x70) == &ExceptionList),
                          _DAT_180d493f8,uVar4,0xfffffffffffffffe);
    }
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void systemInitializeComponents(void)
void systemInitializeComponents(void)

{
  _DAT_180d49638 = &threadLocalStorageData;
  if (_DAT_180d49640 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  _DAT_180d49640 = 0;
  _DAT_180d49650 = 0;
  _DAT_180d49638 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void InitializeSystemModule1(void)
void InitializeSystemModule1(void)

{
  _systemDataTable10 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void InitializeSystemModule2(void)
void InitializeSystemModule2(void)

{
  _bufferDataTable4 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void InitializeSystemModule3(void)
void InitializeSystemModule3(void)

{
  _systemDataTable14 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceManagerReset(void)
void resourceManagerReset(void)

{
  if (DAT_180c91d50 != '\0') {
    FUN_18005a050();
    if ((1 < _DAT_180c91d30) && (_DAT_180c91d28 != 0)) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    if (_DAT_180c91d18 != (longlong *)0x0) {
      (**(code **)(*_DAT_180c91d18 + 0x38))();
    }
    if (_DAT_180c91cf0 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    _Mtx_destroy_in_situ();
    _Cnd_destroy_in_situ();
    FUN_180059ee0(0x180c919f0);

// 函数: void InitializeDatabaseConnection(void)
void InitializeDatabaseConnection(void)

{
  _g_aiNavigationTempData1 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void SetupDatabaseTables(void)
void SetupDatabaseTables(void)

{
  _g_databaseTempData1 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void systemInitializeSubsystems(void)
void systemInitializeSubsystems(void)

{
  _DAT_180d48db8 = &threadLocalStorageData;
  if (_DAT_180d48dc0 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  _DAT_180d48dc0 = 0;
  _DAT_180d48dd0 = 0;
  _DAT_180d48db8 = &threadLocalStorageCleanup;
  return;
}




// 函数: void systemInitializeWorkers(void)
void systemInitializeWorkers(void)

{
                    // WARNING: Could not recover jumptable at 0x000180941db8. Too many branches
                    // WARNING: Treating indirect jump as call
  _Mtx_destroy_in_situ(0x180d49680);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void systemInitializePools(void)
void systemInitializePools(void)

{
  _DAT_180d49730 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void systemInitializeQueues(void)
void systemInitializeQueues(void)

{
  FUN_180320e20(0x180d497e0);
  if (_DAT_180d49970 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  if (_DAT_180d49950 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  FUN_180320b20(0x180d498a0);
  _DAT_180d49830 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceManagerMonitor(void)
void resourceManagerMonitor(void)

{
  longlong localLong1;
  ulonglong localUInt2;
  
  if (_DAT_180c91f18 != 0) {
    localUInt2 = _DAT_180c91f28 - _DAT_180c91f18 & 0xfffffffffffffff8;
    localLong1 = _DAT_180c91f18;
    if (0xfff < localUInt2) {
      localLong1 = *(longlong *)(_DAT_180c91f18 + -8);
      localUInt2 = localUInt2 + 0x27;
      if (0x1f < (_DAT_180c91f18 - localLong1) - 8U) {
                    // WARNING: Subroutine does not return
        _invalid_parameter_noinfo_noreturn();
      }
    }
    free(localLong1,localUInt2);
    _DAT_180c91f28 = 0;
    _DAT_180c91f18 = 0;
    uRam0000000180c91f20 = 0;
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void CreateFileSystemHandler(void)
void CreateFileSystemHandler(void)

{
  _g_sceneTempData1 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void InitializeFileCache(void)
void InitializeFileCache(void)

{
  _g_fileSystemTempData1 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void SetupFileWatcher(void)
void SetupFileWatcher(void)

{
  _g_fileCacheTempData1 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void materialShaderProgramInitialize(void)
void materialShaderProgramInitialize(void)

{
  _g_sceneRenderTempData1 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void materialTextureSamplerInitialize(void)
void materialTextureSamplerInitialize(void)

{
  _g_materialTextureTempData1 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void materialPropertyBufferInitialize(void)
void materialPropertyBufferInitialize(void)

{
  _g_materialTextureTempData3 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void materialRenderStateInitialize(void)
void materialRenderStateInitialize(void)

{
  _g_materialPropertyTempData2 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void materialUniformDataInitialize(void)
void materialUniformDataInitialize(void)

{
  _g_materialRenderStateTempData5 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void textureUploadBufferInitialize(void)
void textureUploadBufferInitialize(void)

{
  _g_materialUniformTempData5 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void textureMipChainInitialize(void)
void textureMipChainInitialize(void)

{
  _g_textureUploadTempData5 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void textureCompressionInitialize(void)
void textureCompressionInitialize(void)

{
  _g_textureMipTempData1 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void textureFilteringInitialize(void)
void textureFilteringInitialize(void)

{
  _g_textureCompressionTempData5 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void textureWrappingInitialize(void)
void textureWrappingInitialize(void)

{
  _g_textureFilterTempData5 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void meshVertexBufferInitialize(void)
void meshVertexBufferInitialize(void)

{
  _g_textureWrapTempData5 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void meshIndexBufferInitialize(void)
void meshIndexBufferInitialize(void)

{
  _DAT_180bf96f0 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void meshVertexLayoutInitialize(void)
void meshVertexLayoutInitialize(void)

{
  _DAT_180bf9750 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void meshBoundingBoxInitialize(void)
void meshBoundingBoxInitialize(void)

{
  _DAT_180bf97b0 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void meshCollisionInitialize(void)
void meshCollisionInitialize(void)

{
  _DAT_180bf9810 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void meshDataProcess(void)
void meshDataProcess(void)

{
  _DAT_180bf9870 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void shaderCompileInitialize(void)
void shaderCompileInitialize(void)

{
  _DAT_180bf98d0 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void shaderProgramInitialize(void)
void shaderProgramInitialize(void)

{
  _DAT_180bf9930 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void shaderUniformBufferInitialize(void)
void shaderUniformBufferInitialize(void)

{
  _DAT_180bf9990 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void shaderAttributeTableInitialize(void)
void shaderAttributeTableInitialize(void)

{
  _DAT_180bf99f0 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void shaderConstantDataInitialize(void)
void shaderConstantDataInitialize(void)

{
  _DAT_180bf9a50 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void renderPassDescriptorInitialize(void)
void renderPassDescriptorInitialize(void)

{
  _DAT_180bf9ab0 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void renderPipelineInitialize(void)
void renderPipelineInitialize(void)

{
  _DAT_180bf9b10 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void renderTargetInitialize(void)
void renderTargetInitialize(void)

{
  _DAT_180bf9b70 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void renderDescriptorInitialize(void)
void renderDescriptorInitialize(void)

{
  _DAT_180bf9bd0 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void renderCommandInitialize(void)
void renderCommandInitialize(void)

{
  _DAT_180bf9c30 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void renderStateInitialize(void)
void renderStateInitialize(void)

{
  _DAT_180bf9c90 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void renderQueueInitialize(void)
void renderQueueInitialize(void)

{
  _DAT_180bf9cf0 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void renderBufferInitialize(void)
void renderBufferInitialize(void)

{
  _DAT_180bf9d50 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void renderSyncInitialize(void)
void renderSyncInitialize(void)

{
  _DAT_180bf9db0 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void renderMemoryInitialize(void)
void renderMemoryInitialize(void)

{
  _DAT_180bf9e10 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void renderResourceInitialize(void)
void renderResourceInitialize(void)

{
  _DAT_180bf9e70 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void renderTextureInitialize(void)
void renderTextureInitialize(void)

{
  _DAT_180bf9ed0 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void renderSamplerInitialize(void)
void renderSamplerInitialize(void)

{
  _DAT_180bf9f30 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void renderBlendInitialize(void)
void renderBlendInitialize(void)

{
  _DAT_180bf9f90 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void renderDepthInitialize(void)
void renderDepthInitialize(void)

{
  _DAT_180bf9ff0 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void renderStencilInitialize(void)
void renderStencilInitialize(void)

{
  _DAT_180bfa050 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void renderViewportInitialize(void)
void renderViewportInitialize(void)

{
  _DAT_180bfa0b0 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void renderScissorInitialize(void)
void renderScissorInitialize(void)

{
  _DAT_180bfa110 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void renderClearInitialize(void)
void renderClearInitialize(void)

{
  _DAT_180bfa170 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void renderDrawInitialize(void)
void renderDrawInitialize(void)

{
  _DAT_180bfa1d0 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void renderDispatchInitialize(void)
void renderDispatchInitialize(void)

{
  _DAT_180bfa230 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceAcquireHandle(void)
void resourceAcquireHandle(void)

{
  _DAT_180bfa290 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void updateRenderState(uint64 resourceHandle,uint64 memorySize,uint64 operationFlags,uint64 callbackFunction)
void updateRenderState(uint64 resourceHandle,uint64 memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  plocalUInt1 = _DAT_180bfa2f0;
  uVar3 = 0xfffffffffffffffe;
  plocalUInt2 = _DAT_180bfa2e8;
  if (_DAT_180bfa2e8 != _DAT_180bfa2f0) {
    do {
      (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
      plocalUInt2 = plocalUInt2 + 0xb;
    } while (plocalUInt2 != plocalUInt1);
  }
  if (_DAT_180bfa2e8 == (uint64 *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceReleaseHandle(uint64 resourceHandle,uint64 memorySize,uint64 operationFlags,uint64 callbackFunction)
void resourceReleaseHandle(uint64 resourceHandle,uint64 memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  plocalUInt1 = _DAT_180bfa310;
  uVar3 = 0xfffffffffffffffe;
  plocalUInt2 = _DAT_180bfa308;
  if (_DAT_180bfa308 != _DAT_180bfa310) {
    do {
      (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
      plocalUInt2 = plocalUInt2 + 0xb;
    } while (plocalUInt2 != plocalUInt1);
  }
  if (_DAT_180bfa308 == (uint64 *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceAllocateMemory(uint64 resourceHandle,uint64 memorySize,uint64 operationFlags,uint64 callbackFunction)
void resourceAllocateMemory(uint64 resourceHandle,uint64 memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  uint64 uVar3;
  
  plocalUInt1 = _DAT_180bfa330;
  uVar3 = 0xfffffffffffffffe;
  plocalUInt2 = _DAT_180bfa328;
  if (_DAT_180bfa328 != _DAT_180bfa330) {
    do {
      (**(code **)*plocalUInt2)(plocalUInt2,0,operationFlags,callbackFunction,uVar3);
      plocalUInt2 = plocalUInt2 + 0xb;
    } while (plocalUInt2 != plocalUInt1);
  }
  if (_DAT_180bfa328 == (uint64 *)0x0) {
    return;
  }
                    // WARNING: Subroutine does not return
  HandleCriticalError();
}




// 函数: void resourceDeallocateMemory(void)
void resourceDeallocateMemory(void)

{
                    // WARNING: Could not recover jumptable at 0x0001809425f8. Too many branches
                    // WARNING: Treating indirect jump as call
  _Mtx_destroy_in_situ(0x180c91f70);
  return;
}




// 函数: void resourceLoadFromDisk(void)
void resourceLoadFromDisk(void)

{
  longlong localLong1;
  longlong localLong2;
  
  FUN_180067070(&DAT_180bfc140);
  if (0xf < uRam0000000180bfc138) {
    localLong1 = CONCAT71(uRam0000000180bfc121,uRam0000000180bfc120);
    localLong2 = localLong1;
    if (0xfff < uRam0000000180bfc138 + 1) {
      localLong2 = *(longlong *)(localLong1 + -8);
      if (0x1f < (localLong1 - localLong2) - 8U) {
                    // WARNING: Subroutine does not return
        _invalid_parameter_noinfo_noreturn(localLong1 - localLong2,uRam0000000180bfc138 + 0x28);
      }
    }
    free(localLong2);
  }
  uRam0000000180bfc130 = 0;
  uRam0000000180bfc138 = 0xf;
  uRam0000000180bfc120 = 0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceSaveToDisk(void)
void resourceSaveToDisk(void)

{
  longlong localLong1;
  longlong localLong2;
  
  if (0xf < _DAT_180bfc118) {
    localLong1 = CONCAT71(uRam0000000180bfc101,DAT_180bfc100);
    localLong2 = localLong1;
    if (0xfff < _DAT_180bfc118 + 1) {
      localLong2 = *(longlong *)(localLong1 + -8);
      if (0x1f < (localLong1 - localLong2) - 8U) {
                    // WARNING: Subroutine does not return
        _invalid_parameter_noinfo_noreturn(localLong1 - localLong2,_DAT_180bfc118 + 0x28);
      }
    }
    free(localLong2);
  }
  _DAT_180bfc110 = 0;
  _DAT_180bfc118 = 0xf;

// 函数: void resourceValidateChecksum(void)
void resourceValidateChecksum(void)

{
  longlong localLong1;
  longlong localLong2;
  
  if (0xf < uRam0000000180bfc0f0) {
    localLong1 = CONCAT71(uRam0000000180bfc0d9,uRam0000000180bfc0d8);
    localLong2 = localLong1;
    if (0xfff < uRam0000000180bfc0f0 + 1) {
      localLong2 = *(longlong *)(localLong1 + -8);
      if (0x1f < (localLong1 - localLong2) - 8U) {
                    // WARNING: Subroutine does not return
        _invalid_parameter_noinfo_noreturn(localLong1 - localLong2,uRam0000000180bfc0f0 + 0x28);
      }
    }
    free(localLong2);
  }
  uRam0000000180bfc0e8 = 0;
  uRam0000000180bfc0f0 = 0xf;
  uRam0000000180bfc0d8 = 0;
  return;
}




// 函数: void resourceCompressData(void)
void resourceCompressData(void)

{
  longlong localLong1;
  longlong localLong2;
  
  if (0xf < uRam0000000180d499c0) {
    localLong1 = CONCAT71(uRam0000000180d499a9,uRam0000000180d499a8);
    localLong2 = localLong1;
    if (0xfff < uRam0000000180d499c0 + 1) {
      localLong2 = *(longlong *)(localLong1 + -8);
      if (0x1f < (localLong1 - localLong2) - 8U) {
                    // WARNING: Subroutine does not return
        _invalid_parameter_noinfo_noreturn(localLong1 - localLong2,uRam0000000180d499c0 + 0x28);
      }
    }
    free(localLong2);
  }
  uRam0000000180d499b8 = 0;
  uRam0000000180d499c0 = 0xf;
  uRam0000000180d499a8 = 0;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceDecompressData(uint64 resourceHandle,uint64 memorySize,uint64 operationFlags,uint64 callbackFunction)
void resourceDecompressData(uint64 resourceHandle,uint64 memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  uint64 *plocalUInt2;
  
  FUN_18005d260(&DAT_180bfaec0,_DAT_180bfaed0,operationFlags,callbackFunction,0xfffffffffffffffe);
  plocalUInt1 = _DAT_180bfaea8;
  for (plocalUInt2 = _DAT_180bfaea0; plocalUInt2 != plocalUInt1; plocalUInt2 = plocalUInt2 + 7) {
    *plocalUInt2 = &threadLocalStorageData;
    if (plocalUInt2[1] != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    plocalUInt2[1] = 0;
    *(uint32 *)(plocalUInt2 + 3) = 0;
    *plocalUInt2 = &threadLocalStorageCleanup;
  }
  if (_DAT_180bfaea0 != (uint64 *)0x0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceEncryptData(void)
void resourceEncryptData(void)

{
  _DAT_180c92050 = &threadLocalStorageCleanup;
                    // WARNING: Could not recover jumptable at 0x0001809427c7. Too many branches
                    // WARNING: Treating indirect jump as call
  _Mtx_destroy_in_situ();
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceDecryptData(void)
void resourceDecryptData(void)

{
  _DAT_180bfaef0 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceSignData(void)
void resourceSignData(void)

{
  _DAT_180bfb310 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceVerifySignature(void)
void resourceVerifySignature(void)

{
  _DAT_180bfb730 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceHashData(void)
void resourceHashData(void)

{
  _DAT_180d499d0 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceVerifyHash(void)
void resourceVerifyHash(void)

{
  _DAT_180d49bf0 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceCreateBackup(void)
void resourceCreateBackup(void)

{
  longlong *plocalLong1;
  int *plocalInt2;
  int localInt3;
  longlong lVar4;
  longlong *plVar5;
  
  plVar5 = _DAT_180c92478;
  if (_DAT_180c92478 != (longlong *)0x0) {
    LOCK();
    plocalLong1 = _DAT_180c92478 + 1;
    lVar4 = *plocalLong1;
    *(int *)plocalLong1 = (int)*plocalLong1 + -1;
    UNLOCK();
    if ((int)lVar4 == 1) {
      (**(code **)*plVar5)(plVar5);
      LOCK();
      plocalInt2 = (int *)((longlong)plVar5 + 0xc);
      localInt3 = *plocalInt2;
      *plocalInt2 = *plocalInt2 + -1;
      UNLOCK();
      if (localInt3 == 1) {
        (**(code **)(*plVar5 + 8))(plVar5);
      }
    }
  }
  return;
}




// 函数: void resourceRestoreBackup(void)
void resourceRestoreBackup(void)

{
  longlong *plocalLong1;
  int *plocalInt2;
  int localInt3;
  longlong lVar4;
  longlong *baseRegister;
  
  LOCK();
  plocalLong1 = baseRegister + 1;
  lVar4 = *plocalLong1;
  *(int *)plocalLong1 = (int)*plocalLong1 + -1;
  UNLOCK();
  if ((int)lVar4 == 1) {
    (**(code **)*baseRegister)();
    LOCK();
    plocalInt2 = (int *)((longlong)baseRegister + 0xc);
    localInt3 = *plocalInt2;
    *plocalInt2 = *plocalInt2 + -1;
    UNLOCK();
    if (localInt3 == 1) {
      (**(code **)(*baseRegister + 8))();
    }
  }
  return;
}




// 函数: void resourceSyncWithCloud(void)
void resourceSyncWithCloud(void)

{
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceOptimizeStorage(void)
void resourceOptimizeStorage(void)

{
  longlong *plocalLong1;
  int *plocalInt2;
  int localInt3;
  longlong lVar4;
  longlong *plVar5;
  
  plVar5 = _DAT_180c92498;
  if (_DAT_180c92498 != (longlong *)0x0) {
    LOCK();
    plocalLong1 = _DAT_180c92498 + 1;
    lVar4 = *plocalLong1;
    *(int *)plocalLong1 = (int)*plocalLong1 + -1;
    UNLOCK();
    if ((int)lVar4 == 1) {
      (**(code **)*plVar5)(plVar5);
      LOCK();
      plocalInt2 = (int *)((longlong)plVar5 + 0xc);
      localInt3 = *plocalInt2;
      *plocalInt2 = *plocalInt2 + -1;
      UNLOCK();
      if (localInt3 == 1) {
        (**(code **)(*plVar5 + 8))(plVar5);
      }
    }
  }
  return;
}




// 函数: void resourceDefragmentMemory(void)
void resourceDefragmentMemory(void)

{
  longlong *plocalLong1;
  int *plocalInt2;
  int localInt3;
  longlong lVar4;
  longlong *baseRegister;
  
  LOCK();
  plocalLong1 = baseRegister + 1;
  lVar4 = *plocalLong1;
  *(int *)plocalLong1 = (int)*plocalLong1 + -1;
  UNLOCK();
  if ((int)lVar4 == 1) {
    (**(code **)*baseRegister)();
    LOCK();
    plocalInt2 = (int *)((longlong)baseRegister + 0xc);
    localInt3 = *plocalInt2;
    *plocalInt2 = *plocalInt2 + -1;
    UNLOCK();
    if (localInt3 == 1) {
      (**(code **)(*baseRegister + 8))();
    }
  }
  return;
}




// 函数: void resourceCollectGarbage(void)
void resourceCollectGarbage(void)

{
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceUpdateReferences(void)
void resourceUpdateReferences(void)

{
  longlong *plocalLong1;
  int *plocalInt2;
  int localInt3;
  longlong lVar4;
  longlong *plVar5;
  
  plVar5 = _DAT_180c92488;
  if (_DAT_180c92488 != (longlong *)0x0) {
    LOCK();
    plocalLong1 = _DAT_180c92488 + 1;
    lVar4 = *plocalLong1;
    *(int *)plocalLong1 = (int)*plocalLong1 + -1;
    UNLOCK();
    if ((int)lVar4 == 1) {
      (**(code **)*plVar5)(plVar5);
      LOCK();
      plocalInt2 = (int *)((longlong)plVar5 + 0xc);
      localInt3 = *plocalInt2;
      *plocalInt2 = *plocalInt2 + -1;
      UNLOCK();
      if (localInt3 == 1) {
        (**(code **)(*plVar5 + 8))(plVar5);
      }
    }
  }
  return;
}




// 函数: void resourceValidateIntegrity(void)
void resourceValidateIntegrity(void)

{
  longlong *plocalLong1;
  int *plocalInt2;
  int localInt3;
  longlong lVar4;
  longlong *baseRegister;
  
  LOCK();
  plocalLong1 = baseRegister + 1;
  lVar4 = *plocalLong1;
  *(int *)plocalLong1 = (int)*plocalLong1 + -1;
  UNLOCK();
  if ((int)lVar4 == 1) {
    (**(code **)*baseRegister)();
    LOCK();
    plocalInt2 = (int *)((longlong)baseRegister + 0xc);
    localInt3 = *plocalInt2;
    *plocalInt2 = *plocalInt2 + -1;
    UNLOCK();
    if (localInt3 == 1) {
      (**(code **)(*baseRegister + 8))();
    }
  }
  return;
}




// 函数: void resourceRepairCorruption(void)
void resourceRepairCorruption(void)

{
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceMigrateFormat(void)
void resourceMigrateFormat(void)

{
  longlong localLong1;
  longlong localLong2;
  
  if (0xf < _DAT_180bfc188) {
    localLong1 = CONCAT71(uRam0000000180bfc171,DAT_180bfc170);
    localLong2 = localLong1;
    if (0xfff < _DAT_180bfc188 + 1) {
      localLong2 = *(longlong *)(localLong1 + -8);
      if (0x1f < (localLong1 - localLong2) - 8U) {
                    // WARNING: Subroutine does not return
        _invalid_parameter_noinfo_noreturn(localLong1 - localLong2,_DAT_180bfc188 + 0x28);
      }
    }
    free(localLong2);
  }
  _DAT_180bfc180 = 0;
  _DAT_180bfc188 = 0xf;

// 函数: void resourceCachePrefetch(void)
void resourceCachePrefetch(void)

{
  ulonglong localUInt1;
  longlong localLong2;
  uint64 in_R9;
  
  if (lRam0000000180d49d68 != 0) {
    localUInt1 = (lRam0000000180d49d78 - lRam0000000180d49d68 >> 3) * 8;
    localLong2 = lRam0000000180d49d68;
    if (0xfff < localUInt1) {
      localLong2 = *(longlong *)(lRam0000000180d49d68 + -8);
      if (0x1f < (lRam0000000180d49d68 - localLong2) - 8U) {
                    // WARNING: Subroutine does not return
        _invalid_parameter_noinfo_noreturn
                  (lRam0000000180d49d68 - localLong2,localUInt1 + 0x27,localLong2,in_R9,0xfffffffffffffffe);
      }
    }
    free(localLong2);
    lRam0000000180d49d68 = 0;
    uRam0000000180d49d70 = 0;
    lRam0000000180d49d78 = 0;
  }
  FUN_1803f33b0(&uRam0000000180d49d58);
                    // WARNING: Could not recover jumptable at 0x0001808ffc83. Too many branches
                    // WARNING: Treating indirect jump as call
  free(uRam0000000180d49d58,0x40);
  return;
}




// 函数: void resourceCacheEvict(void)
void resourceCacheEvict(void)

{
  longlong localLong1;
  ulonglong localUInt2;
  
  if (lRam0000000180d49d90 != 0) {
    FUN_180477be0(lRam0000000180d49d90,uRam0000000180d49d98);
    localUInt2 = lRam0000000180d49da0 - lRam0000000180d49d90 & 0xfffffffffffffff0;
    localLong1 = lRam0000000180d49d90;
    if (0xfff < localUInt2) {
      localLong1 = *(longlong *)(lRam0000000180d49d90 + -8);
      if (0x1f < (lRam0000000180d49d90 - localLong1) - 8U) {
                    // WARNING: Subroutine does not return
        _invalid_parameter_noinfo_noreturn(lRam0000000180d49d90 - localLong1,localUInt2 + 0x27);
      }
    }
    free(localLong1);
    lRam0000000180d49d90 = 0;
    uRam0000000180d49d98 = 0;
    lRam0000000180d49da0 = 0;
  }
  return;
}




// 函数: void resourceCacheFlush(void)
void resourceCacheFlush(void)

{
                    // WARNING: Could not recover jumptable at 0x000180942a58. Too many branches
                    // WARNING: Treating indirect jump as call
  _Mtx_destroy_in_situ(0x180d49db0);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceCacheInvalidate(void)
void resourceCacheInvalidate(void)

{
  _DAT_180bf6048 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceCacheUpdate(void)
void resourceCacheUpdate(void)

{
  _DAT_180bf6498 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceBatchProcess(uint64 resourceHandle,uint64 memorySize,uint64 operationFlags,uint64 callbackFunction)
void resourceBatchProcess(uint64 resourceHandle,uint64 memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = _DAT_180d49e18;
  if (_DAT_180d49e18 != (uint64 *)0x0) {
    FUN_1804a9b80(resourceHandle,*_DAT_180d49e18,operationFlags,callbackFunction,0xfffffffffffffffe);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}




// 函数: void resourceScheduleTask(void)
void resourceScheduleTask(void)

{
  if (DAT_180c95ef0 != '\0') {
    FUN_1804a6ec0();

// 函数: void resourceCancelTask(void)
void resourceCancelTask(void)

{
  if (DAT_180c96008 != '\0') {
    FUN_180552e70(_DAT_180c95ff0);
    _DAT_180c95ff0 = 0;

// 函数: void resourcePauseTask(void)
void resourcePauseTask(void)

{
  if (DAT_180c96028 != '\0') {
    if (_DAT_180c96010 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    _DAT_180c96010 = 0;

// 函数: void resourceResumeTask(void)
void resourceResumeTask(void)

{
  if (DAT_180c96048 != '\0') {
    FUN_180555430(_DAT_180c96030);
    _DAT_180c96030 = 0;

// 函数: void resourceQueryProgress(void)
void resourceQueryProgress(void)

{
  if (DAT_180c96068 != '\0') {
    FUN_180555430(_DAT_180c96050);
    _DAT_180c96050 = 0;

// 函数: void resourceQueryStatus(void)
void resourceQueryStatus(void)

{
  if (DAT_180c96098 != '\0') {
    FUN_180057830();
    if (_DAT_180c96070 != (longlong *)0x0) {
      (**(code **)(*_DAT_180c96070 + 0x38))();
    }

// 函数: void resourceQueryMetrics(void)
void resourceQueryMetrics(void)

{
  if (DAT_180c960b8 != '\0') {
    FUN_18055a350(_DAT_180c960a0);
    _DAT_180c960a0 = 0;

// 函数: void resourceQueryStatistics(void)
void resourceQueryStatistics(void)

{
  if (DAT_180c96100 != '\0') {
    FUN_1804a5b60();
    FUN_1804a5b00(&DAT_180c960c0);

// 函数: void resourceSetPriority(void)
void resourceSetPriority(void)

{
  longlong localLong1;
  
  localLong1 = _DAT_180c96138;
  if (DAT_180c96140 != '\0') {
    if (_DAT_180c96120 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }
    _DAT_180c96120 = 0;
    if (_DAT_180c96138 != 0) {
      FUN_1808fc8a8(_DAT_180c96138 + 0x360,0xcc8,8,FUN_1804aa030,0xfffffffffffffffe);
      _Mtx_destroy_in_situ();
      _Cnd_destroy_in_situ();
      FUN_1804a9f00(localLong1 + 0x60);
      FUN_1804a9e30();
                    // WARNING: Subroutine does not return
      HandleCriticalError(localLong1);
    }
    _DAT_180c96138 = 0;

// 函数: void resourceGetPriority(void)
void resourceGetPriority(void)

{
  if (DAT_180c961d8 != '\0') {
    FUN_1804c3730(&DAT_180c961b0);
    FUN_1804c42a0(&DAT_180c961b0);

// 函数: void resourceSetLimit(void)
void resourceSetLimit(void)

{
  longlong *plocalLong1;
  
  plocalLong1 = _DAT_180c95f18;
  if (DAT_180c95f28 != '\0') {
    _DAT_180c95f20 = 0xffffffff;
    _DAT_180c95f18 = (longlong *)0x0;
    if (plocalLong1 != (longlong *)0x0) {
      (**(code **)(*plocalLong1 + 0x38))();
    }
    if (_DAT_180c95f18 != (longlong *)0x0) {
      (**(code **)(*_DAT_180c95f18 + 0x38))();
    }
    if (_DAT_180c95ef8 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }

// 函数: void resourceGetLimit(void)
void resourceGetLimit(void)

{
  if (DAT_180c95fe8 != '\0') {
    if (_DAT_180c95fc8 != 0) {
                    // WARNING: Subroutine does not return
      HandleCriticalError();
    }

// 函数: void resourceResetLimit(void)
void resourceResetLimit(void)

{
  if (DAT_180c96210 != '\0') {
    FUN_1804a5bc0();

// 函数: void resourceMonitorActivity(void)
void resourceMonitorActivity(void)

{
  _DAT_180bf64f8 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceManageLifecycle(void)
void resourceManageLifecycle(void)

{
  _DAT_180bf6558 = &threadLocalStorageCleanup;
  return;
}




// 函数: void resourceControlAccess(void)
void resourceControlAccess(void)

{
                    // WARNING: Could not recover jumptable at 0x000180943038. Too many branches
                    // WARNING: Treating indirect jump as call
  _Mtx_destroy_in_situ(0x180d49e70);
  return;
}




// 函数: void resourceTrackUsage(void)
void resourceTrackUsage(void)

{
                    // WARNING: Could not recover jumptable at 0x000180943058. Too many branches
                    // WARNING: Treating indirect jump as call
  _Mtx_destroy_in_situ(0x180d49f10);
  return;
}




// 函数: void resourceOptimizePerformance(void)
void resourceOptimizePerformance(void)

{
                    // WARNING: Could not recover jumptable at 0x000180943088. Too many branches
                    // WARNING: Treating indirect jump as call
  _Mtx_destroy_in_situ(0x180c96690);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceBalanceLoad(void)
void resourceBalanceLoad(void)

{
  _DAT_180d49f80 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceScheduleMaintenance(void)
void resourceScheduleMaintenance(void)

{
  _DAT_180d49fe0 = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceExecuteMaintenance(void)
void resourceExecuteMaintenance(void)

{
  _DAT_180d4a068 = &threadLocalStorageData;
  if (_DAT_180d4a070 != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  _DAT_180d4a070 = 0;
  _DAT_180d4a080 = 0;
  _DAT_180d4a068 = &threadLocalStorageCleanup;
  return;
}




// 函数: void resourceReportStatus(void)
void resourceReportStatus(void)

{
                    // WARNING: Could not recover jumptable at 0x000180943158. Too many branches
                    // WARNING: Treating indirect jump as call
  _Mtx_destroy_in_situ(0x180c966f0);
  return;
}




// 函数: void resourceGenerateReport(void)
void resourceGenerateReport(void)

{
                    // WARNING: Could not recover jumptable at 0x000180943178. Too many branches
                    // WARNING: Treating indirect jump as call
  _Mtx_destroy_in_situ(0x180c96740);
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void resourceBatchOperation(uint64 resourceHandle,uint64 memorySize,uint64 operationFlags,uint64 callbackFunction)
void resourceBatchOperation(uint64 resourceHandle,uint64 memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = _DAT_180c967a0;
  if (_DAT_180c967a0 != (uint64 *)0x0) {
    FUN_180651560(&DAT_180c96790,*_DAT_180c967a0,operationFlags,callbackFunction,0xfffffffffffffffe);
    FUN_18063cfe0(plocalUInt1 + 5);
                    // WARNING: Subroutine does not return
    HandleCriticalError(plocalUInt1);
  }
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void InitializeThreadLocalStorage(void)
void InitializeThreadLocalStorage(void)

{
  longlong localLong1;
  
  localLong1 = *(longlong *)((longlong)tlsPointer + (ulonglong)tlsIndex * 8);
  *(uint64 *)(localLong1 + 0x18) = &threadLocalStorageData;
  if (*(longlong *)(localLong1 + 0x20) != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  *(uint64 *)(localLong1 + 0x20) = 0;
  *(uint32 *)(localLong1 + 0x30) = 0;
  *(uint64 *)(localLong1 + 0x18) = &threadLocalStorageCleanup;
  return;
}



// WARNING: Globals starting with '_' overlap smaller symbols at the same address


// 函数: void CleanupThreadResources(uint64 resourceHandle,uint64 memorySize,uint64 operationFlags,uint64 callbackFunction)
void CleanupThreadResources(uint64 resourceHandle,uint64 memorySize,uint64 operationFlags,uint64 callbackFunction)

{
  uint64 *plocalUInt1;
  
  plocalUInt1 = globalResourcePointer;
  if (globalResourcePointer == (uint64 *)0x0) {
    return;
  }
  ProcessSystemCall(&systemCallData,*globalResourcePointer,operationFlags,callbackFunction,0xfffffffffffffffe);
  plocalUInt1[4] = &threadLocalStorageData;
  if (plocalUInt1[5] != 0) {
                    // WARNING: Subroutine does not return
    HandleCriticalError();
  }
  plocalUInt1[5] = 0;
  *(uint32 *)(plocalUInt1 + 7) = 0;
  plocalUInt1[4] = &threadLocalStorageCleanup;
                    // WARNING: Subroutine does not return
  HandleCriticalError(plocalUInt1);
}



