// Decompiled with JetBrains decompiler
// Type: TaleWorlds.CampaignSystem.MapNotificationTypes.EducationMapNotification
// Assembly: TaleWorlds.CampaignSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: E85F8C15-4DF6-4E9C-A58A-29177E40D07A
// Assembly location: D:\steam\steamapps\common\Mount & Blade II Bannerlord\bin\Win64_Shipping_Client\TaleWorlds.CampaignSystem.dll

using System.Collections.Generic;
using TaleWorlds.CampaignSystem.CampaignBehaviors;
using TaleWorlds.Core;
using TaleWorlds.Localization;
using TaleWorlds.SaveSystem;

#nullable disable
namespace TaleWorlds.CampaignSystem.MapNotificationTypes
{
  public class EducationMapNotification : InformationData
  {
    internal static void AutoGeneratedStaticCollectObjectsEducationMapNotification(
      object o,
      List<object> collectedObjects)
    {
      ((InformationData) o).AutoGeneratedInstanceCollectObjects(collectedObjects);
    }

    protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
    {
      base.AutoGeneratedInstanceCollectObjects(collectedObjects);
      collectedObjects.Add((object) this.Child);
    }

    internal static object AutoGeneratedGetMemberValueChild(object o)
    {
      return (object) ((EducationMapNotification) o).Child;
    }

    internal static object AutoGeneratedGetMemberValueAge(object o)
    {
      return (object) ((EducationMapNotification) o).Age;
    }

    public override TextObject TitleText => new TextObject("{=Vv2ednFa}Education");

    public override string SoundEventPath => "event:/ui/notification/education";

    [SaveableProperty(1)]
    public Hero Child { get; private set; }

    [SaveableProperty(11)]
    public int Age { get; private set; }

    public EducationMapNotification(Hero child, int age, TextObject descriptionText)
      : base(descriptionText)
    {
      this.Child = child;
      this.Age = age;
    }

    public override bool IsValid()
    {
      return Campaign.Current.GetCampaignBehavior<IEducationLogic>().IsValidEducationNotification(this);
    }
  }
}
