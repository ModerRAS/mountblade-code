using System;
using System.Collections.Generic;
using Helpers;
using TaleWorlds.CampaignSystem.Settlements;
using TaleWorlds.Core;
using TaleWorlds.Localization;
using TaleWorlds.ObjectSystem;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.LogEntries
{
	// Token: 0x020002DB RID: 731
	public class MakePeaceLogEntry : LogEntry, IEncyclopediaLog, IChatNotification
	{
		// Token: 0x06002AE7 RID: 10983 RVA: 0x000B65C1 File Offset: 0x000B47C1
		internal static void AutoGeneratedStaticCollectObjectsMakePeaceLogEntry(object o, List<object> collectedObjects)
		{
			((MakePeaceLogEntry)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06002AE8 RID: 10984 RVA: 0x000B65CF File Offset: 0x000B47CF
		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
			collectedObjects.Add(this.Faction1);
			collectedObjects.Add(this.Faction2);
		}

		// Token: 0x06002AE9 RID: 10985 RVA: 0x000B65F0 File Offset: 0x000B47F0
		internal static object AutoGeneratedGetMemberValueFaction1(object o)
		{
			return ((MakePeaceLogEntry)o).Faction1;
		}

		// Token: 0x06002AEA RID: 10986 RVA: 0x000B65FD File Offset: 0x000B47FD
		internal static object AutoGeneratedGetMemberValueFaction2(object o)
		{
			return ((MakePeaceLogEntry)o).Faction2;
		}

		// Token: 0x17000A95 RID: 2709
		// (get) Token: 0x06002AEB RID: 10987 RVA: 0x000B660A File Offset: 0x000B480A
		public bool IsVisibleNotification
		{
			get
			{
				return true;
			}
		}

		// Token: 0x17000A96 RID: 2710
		// (get) Token: 0x06002AEC RID: 10988 RVA: 0x000B660D File Offset: 0x000B480D
		public override CampaignTime KeepInHistoryTime
		{
			get
			{
				return CampaignTime.Days(40f);
			}
		}

		// Token: 0x06002AED RID: 10989 RVA: 0x000B6619 File Offset: 0x000B4819
		public MakePeaceLogEntry(IFaction faction1, IFaction faction2)
		{
			this.Faction1 = faction1;
			this.Faction2 = faction2;
		}

		// Token: 0x06002AEE RID: 10990 RVA: 0x000B6630 File Offset: 0x000B4830
		public override int GetAsRumor(Settlement talkSettlement, ref TextObject comment)
		{
			if (this.Faction1 == talkSettlement.MapFaction)
			{
				comment = new TextObject("{=wfb0FnbW}At last they've made peace with {ENEMY_NAME}. Good. I hope it lasts.", null);
				comment.SetTextVariable("ENEMY_NAME", FactionHelper.GetTermUsedByOtherFaction(this.Faction2, talkSettlement.MapFaction, false));
				return 10;
			}
			if (this.Faction2 == talkSettlement.MapFaction)
			{
				comment = new TextObject("{=94wCiGjB}So it seems as though {ENEMY_NAME} have had enough of war. Good. Peace is good.", null);
				comment.SetTextVariable("ENEMY_NAME", FactionHelper.GetTermUsedByOtherFaction(this.Faction1, talkSettlement.MapFaction, false));
				return 10;
			}
			return 0;
		}

		// Token: 0x06002AEF RID: 10991 RVA: 0x000B66B8 File Offset: 0x000B48B8
		public override string ToString()
		{
			return this.GetEncyclopediaText().ToString();
		}

		// Token: 0x06002AF0 RID: 10992 RVA: 0x000B66C5 File Offset: 0x000B48C5
		public TextObject GetNotificationText()
		{
			TextObject textObject = GameTexts.FindText("str_notification_secondary_peace", null);
			textObject.SetTextVariable("FACTION1", this.Faction1.InformalName);
			textObject.SetTextVariable("FACTION2", this.Faction2.InformalName);
			return textObject;
		}

		// Token: 0x06002AF1 RID: 10993 RVA: 0x000B6700 File Offset: 0x000B4900
		public bool IsVisibleInEncyclopediaPageOf<T>(T obj) where T : MBObjectBase
		{
			return obj == this.Faction1 || obj == this.Faction2;
		}

		// Token: 0x17000A97 RID: 2711
		// (get) Token: 0x06002AF2 RID: 10994 RVA: 0x000B6720 File Offset: 0x000B4920
		public override ChatNotificationType NotificationType
		{
			get
			{
				return base.DiplomaticNotification(this.Faction1, this.Faction2);
			}
		}

		// Token: 0x06002AF3 RID: 10995 RVA: 0x000B6734 File Offset: 0x000B4934
		public TextObject GetEncyclopediaText()
		{
			TextObject textObject = GameTexts.FindText("str_factions_make_peace_news", null);
			textObject.SetTextVariable("FACTION1", this.Faction1.EncyclopediaLinkWithName);
			textObject.SetTextVariable("FACTION2", this.Faction2.EncyclopediaLinkWithName);
			return textObject;
		}

		// Token: 0x04000CDE RID: 3294
		[SaveableField(240)]
		public readonly IFaction Faction1;

		// Token: 0x04000CDF RID: 3295
		[SaveableField(241)]
		public readonly IFaction Faction2;
	}
}
