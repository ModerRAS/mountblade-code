using System;
using System.Collections.Generic;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.LogEntries
{
	// Token: 0x020002EC RID: 748
	public class IssueQuestLogEntry : LogEntry
	{
		// Token: 0x06002BB8 RID: 11192 RVA: 0x000B8C3F File Offset: 0x000B6E3F
		internal static void AutoGeneratedStaticCollectObjectsIssueQuestLogEntry(object o, List<object> collectedObjects)
		{
			((IssueQuestLogEntry)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06002BB9 RID: 11193 RVA: 0x000B8C4D File Offset: 0x000B6E4D
		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
			collectedObjects.Add(this.IssueGiver);
			collectedObjects.Add(this.Antagonist);
		}

		// Token: 0x06002BBA RID: 11194 RVA: 0x000B8C6E File Offset: 0x000B6E6E
		internal static object AutoGeneratedGetMemberValueIssueGiver(object o)
		{
			return ((IssueQuestLogEntry)o).IssueGiver;
		}

		// Token: 0x06002BBB RID: 11195 RVA: 0x000B8C7B File Offset: 0x000B6E7B
		internal static object AutoGeneratedGetMemberValueAntagonist(object o)
		{
			return ((IssueQuestLogEntry)o).Antagonist;
		}

		// Token: 0x06002BBC RID: 11196 RVA: 0x000B8C88 File Offset: 0x000B6E88
		internal static object AutoGeneratedGetMemberValueDetails(object o)
		{
			return ((IssueQuestLogEntry)o).Details;
		}

		// Token: 0x17000AB2 RID: 2738
		// (get) Token: 0x06002BBD RID: 11197 RVA: 0x000B8C9A File Offset: 0x000B6E9A
		public override CampaignTime KeepInHistoryTime
		{
			get
			{
				return CampaignTime.Weeks(1f);
			}
		}

		// Token: 0x06002BBE RID: 11198 RVA: 0x000B8CA6 File Offset: 0x000B6EA6
		public IssueQuestLogEntry(Hero questGiver, Hero antagonist, QuestBase.QuestCompleteDetails status)
		{
			this.IssueGiver = questGiver;
			this.Antagonist = antagonist;
			this.Details = status;
		}

		// Token: 0x06002BBF RID: 11199 RVA: 0x000B8CC4 File Offset: 0x000B6EC4
		public override void GetConversationScoreAndComment(Hero talkTroop, bool findString, out string comment, out ImportanceEnum score)
		{
			score = ImportanceEnum.Zero;
			comment = "";
			if (this.IssueGiver == talkTroop)
			{
				if (this.Details == QuestBase.QuestCompleteDetails.FailWithBetrayal)
				{
					score = ImportanceEnum.MatterOfLifeAndDeath;
					if (findString)
					{
						comment = "str_comment_quest_betrayed";
						return;
					}
				}
				else if (this.Details == QuestBase.QuestCompleteDetails.Success)
				{
					score = ImportanceEnum.VeryImportant;
					if (findString)
					{
						comment = "str_comment_quest_succeeded";
						return;
					}
				}
				else if (this.Details == QuestBase.QuestCompleteDetails.Fail || this.Details == QuestBase.QuestCompleteDetails.Timeout || this.Details == QuestBase.QuestCompleteDetails.Cancel)
				{
					score = ImportanceEnum.Important;
					if (findString)
					{
						comment = "str_comment_quest_failed";
						return;
					}
				}
				else if (this.Details == QuestBase.QuestCompleteDetails.Invalid)
				{
					score = ImportanceEnum.ReasonablyImportant;
					if (findString)
					{
						comment = "str_comment_quest_invalid";
						return;
					}
				}
			}
			else if (this.Antagonist == talkTroop && this.Details == QuestBase.QuestCompleteDetails.FailWithBetrayal)
			{
				score = ImportanceEnum.MatterOfLifeAndDeath;
				if (findString)
				{
					comment = "str_comment_quest_counteroffer_accepted";
				}
			}
		}

		// Token: 0x04000D1C RID: 3356
		[SaveableField(10)]
		public readonly Hero IssueGiver;

		// Token: 0x04000D1D RID: 3357
		[SaveableField(20)]
		public readonly Hero Antagonist;

		// Token: 0x04000D1E RID: 3358
		[SaveableField(30)]
		public QuestBase.QuestCompleteDetails Details;
	}
}
