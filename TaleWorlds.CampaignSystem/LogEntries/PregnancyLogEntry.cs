using System;
using System.Collections.Generic;
using Helpers;
using TaleWorlds.Core;
using TaleWorlds.Localization;
using TaleWorlds.ObjectSystem;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.LogEntries
{
	// Token: 0x020002E1 RID: 737
	public class PregnancyLogEntry : LogEntry, IEncyclopediaLog, IChatNotification
	{
		// Token: 0x06002B32 RID: 11058 RVA: 0x000B77F4 File Offset: 0x000B59F4
		internal static void AutoGeneratedStaticCollectObjectsPregnancyLogEntry(object o, List<object> collectedObjects)
		{
			((PregnancyLogEntry)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06002B33 RID: 11059 RVA: 0x000B7802 File Offset: 0x000B5A02
		protected override void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			base.AutoGeneratedInstanceCollectObjects(collectedObjects);
			collectedObjects.Add(this.Mother);
		}

		// Token: 0x06002B34 RID: 11060 RVA: 0x000B7817 File Offset: 0x000B5A17
		internal static object AutoGeneratedGetMemberValueMother(object o)
		{
			return ((PregnancyLogEntry)o).Mother;
		}

		// Token: 0x17000A9E RID: 2718
		// (get) Token: 0x06002B35 RID: 11061 RVA: 0x000B7824 File Offset: 0x000B5A24
		public bool IsVisibleNotification
		{
			get
			{
				return this.Mother.Clan.Equals(Hero.MainHero.Clan);
			}
		}

		// Token: 0x17000A9F RID: 2719
		// (get) Token: 0x06002B36 RID: 11062 RVA: 0x000B7840 File Offset: 0x000B5A40
		public override ChatNotificationType NotificationType
		{
			get
			{
				return base.CivilianNotification(this.Mother.Clan);
			}
		}

		// Token: 0x17000AA0 RID: 2720
		// (get) Token: 0x06002B37 RID: 11063 RVA: 0x000B7853 File Offset: 0x000B5A53
		public override CampaignTime KeepInHistoryTime
		{
			get
			{
				return CampaignTime.Days(Campaign.Current.Models.PregnancyModel.PregnancyDurationInDays + 7f);
			}
		}

		// Token: 0x06002B38 RID: 11064 RVA: 0x000B7874 File Offset: 0x000B5A74
		public PregnancyLogEntry(Hero mother)
		{
			this.Mother = mother;
		}

		// Token: 0x06002B39 RID: 11065 RVA: 0x000B7883 File Offset: 0x000B5A83
		public override string ToString()
		{
			return this.GetEncyclopediaText().ToString();
		}

		// Token: 0x06002B3A RID: 11066 RVA: 0x000B7890 File Offset: 0x000B5A90
		public TextObject GetNotificationText()
		{
			return this.GetEncyclopediaText();
		}

		// Token: 0x06002B3B RID: 11067 RVA: 0x000B7898 File Offset: 0x000B5A98
		public bool IsVisibleInEncyclopediaPageOf<T>(T obj) where T : MBObjectBase
		{
			return obj == this.Mother;
		}

		// Token: 0x06002B3C RID: 11068 RVA: 0x000B78A8 File Offset: 0x000B5AA8
		public TextObject GetEncyclopediaText()
		{
			TextObject textObject = GameTexts.FindText("str_notification_pregnant", null);
			StringHelpers.SetCharacterProperties("MOTHER", this.Mother.CharacterObject, textObject, false);
			return textObject;
		}

		// Token: 0x04000CF6 RID: 3318
		[SaveableField(300)]
		public readonly Hero Mother;
	}
}
