using System;
using System.Collections.Generic;
using Helpers;
using TaleWorlds.CampaignSystem.Extensions;
using TaleWorlds.CampaignSystem.Party;
using TaleWorlds.Core;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.Settlements
{
	// Token: 0x02000358 RID: 856
	public class VillageMarketData : IMarketData
	{
		// Token: 0x060030E6 RID: 12518 RVA: 0x000CE88B File Offset: 0x000CCA8B
		internal static void AutoGeneratedStaticCollectObjectsVillageMarketData(object o, List<object> collectedObjects)
		{
			((VillageMarketData)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x060030E7 RID: 12519 RVA: 0x000CE899 File Offset: 0x000CCA99
		protected virtual void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			collectedObjects.Add(this._village);
		}

		// Token: 0x060030E8 RID: 12520 RVA: 0x000CE8A7 File Offset: 0x000CCAA7
		internal static object AutoGeneratedGetMemberValue_village(object o)
		{
			return ((VillageMarketData)o)._village;
		}

		// Token: 0x17000BBC RID: 3004
		// (get) Token: 0x060030E9 RID: 12521 RVA: 0x000CE8B4 File Offset: 0x000CCAB4
		private Settlement ClosestTown
		{
			get
			{
				if (this._closestTown == null)
				{
					this._closestTown = SettlementHelper.FindNearestTown(null, this._village.Settlement);
				}
				return this._closestTown;
			}
		}

		// Token: 0x060030EA RID: 12522 RVA: 0x000CE8DB File Offset: 0x000CCADB
		public VillageMarketData(Village village)
		{
			this._village = village;
		}

		// Token: 0x060030EB RID: 12523 RVA: 0x000CE8EA File Offset: 0x000CCAEA
		public int GetPrice(ItemObject item, MobileParty tradingParty, bool isSelling, PartyBase merchantParty)
		{
			return this.GetPrice(new EquipmentElement(item, null, null, false), tradingParty, isSelling, merchantParty);
		}

		// Token: 0x060030EC RID: 12524 RVA: 0x000CE900 File Offset: 0x000CCB00
		public int GetPrice(EquipmentElement itemRosterElement, MobileParty tradingParty, bool isSelling, PartyBase merchantParty)
		{
			ItemData categoryData = (this._village.TradeBound ?? this.ClosestTown).Town.MarketData.GetCategoryData(itemRosterElement.Item.GetItemCategory());
			return Campaign.Current.Models.TradeItemPriceFactorModel.GetPrice(itemRosterElement, tradingParty, merchantParty, isSelling, (float)categoryData.InStoreValue, categoryData.Supply, categoryData.Demand);
		}

		// Token: 0x04000FEB RID: 4075
		[SaveableField(1)]
		private Village _village;

		// Token: 0x04000FEC RID: 4076
		private Settlement _closestTown;
	}
}
