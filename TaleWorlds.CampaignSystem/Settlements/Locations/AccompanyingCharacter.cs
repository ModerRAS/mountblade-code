using System;
using System.Collections.Generic;
using TaleWorlds.SaveSystem;

namespace TaleWorlds.CampaignSystem.Settlements.Locations
{
	// Token: 0x02000369 RID: 873
	public class AccompanyingCharacter
	{
		// Token: 0x06003364 RID: 13156 RVA: 0x000D564F File Offset: 0x000D384F
		internal static void AutoGeneratedStaticCollectObjectsAccompanyingCharacter(object o, List<object> collectedObjects)
		{
			((AccompanyingCharacter)o).AutoGeneratedInstanceCollectObjects(collectedObjects);
		}

		// Token: 0x06003365 RID: 13157 RVA: 0x000D565D File Offset: 0x000D385D
		protected virtual void AutoGeneratedInstanceCollectObjects(List<object> collectedObjects)
		{
			collectedObjects.Add(this._disallowedLocations);
		}

		// Token: 0x06003366 RID: 13158 RVA: 0x000D566B File Offset: 0x000D386B
		internal static object AutoGeneratedGetMemberValueIsFollowingPlayerAtMissionStart(object o)
		{
			return ((AccompanyingCharacter)o).IsFollowingPlayerAtMissionStart;
		}

		// Token: 0x06003367 RID: 13159 RVA: 0x000D567D File Offset: 0x000D387D
		internal static object AutoGeneratedGetMemberValue_disallowedLocations(object o)
		{
			return ((AccompanyingCharacter)o)._disallowedLocations;
		}

		// Token: 0x17000C99 RID: 3225
		// (get) Token: 0x06003368 RID: 13160 RVA: 0x000D568A File Offset: 0x000D388A
		// (set) Token: 0x06003369 RID: 13161 RVA: 0x000D5692 File Offset: 0x000D3892
		[SaveableProperty(1)]
		public bool IsFollowingPlayerAtMissionStart { get; private set; }

		// Token: 0x0600336A RID: 13162 RVA: 0x000D569B File Offset: 0x000D389B
		public AccompanyingCharacter(LocationCharacter locationCharacter, bool isFollowingPlayerAtMissionStart)
		{
			this._disallowedLocations = new List<Location>();
			this.LocationCharacter = locationCharacter;
			this.IsFollowingPlayerAtMissionStart = isFollowingPlayerAtMissionStart;
		}

		// Token: 0x0600336B RID: 13163 RVA: 0x000D56BC File Offset: 0x000D38BC
		public bool CanEnterLocation(Location location)
		{
			return !this._disallowedLocations.Contains(location);
		}

		// Token: 0x0600336C RID: 13164 RVA: 0x000D56D0 File Offset: 0x000D38D0
		public void AllowEntranceToLocations(Func<Location, bool> predicate)
		{
			foreach (Location location in LocationComplex.Current.GetListOfLocations())
			{
				if (predicate(location) && this._disallowedLocations.Contains(location))
				{
					this._disallowedLocations.Remove(location);
				}
			}
		}

		// Token: 0x0600336D RID: 13165 RVA: 0x000D5740 File Offset: 0x000D3940
		public void DisallowEntranceToLocations(Func<Location, bool> predicate)
		{
			foreach (Location location in LocationComplex.Current.GetListOfLocations())
			{
				if (predicate(location) && !this._disallowedLocations.Contains(location))
				{
					this._disallowedLocations.Add(location);
				}
			}
		}

		// Token: 0x0600336E RID: 13166 RVA: 0x000D57B0 File Offset: 0x000D39B0
		public void AllowEntranceToAllLocations()
		{
			this._disallowedLocations.Clear();
		}

		// Token: 0x0600336F RID: 13167 RVA: 0x000D57BD File Offset: 0x000D39BD
		public void DisallowEntranceToAllLocations()
		{
			this.AllowEntranceToAllLocations();
			this._disallowedLocations.AddRange(LocationComplex.Current.GetListOfLocations());
		}

		// Token: 0x0400109A RID: 4250
		public LocationCharacter LocationCharacter;

		// Token: 0x0400109C RID: 4252
		[SaveableField(2)]
		private List<Location> _disallowedLocations;
	}
}
