#!/bin/bash

# 为06_utilities.c文件添加文档注释的脚本
# 原本实现：完全重构所有文档注释体系，建立统一的文档标准
# 简化实现：仅为关键函数添加基本文档注释，保持代码结构不变

FILE_PATH="/dev/shm/mountblade-code/TaleWorlds.Native/src/06_utilities.c"

# 为关键函数添加文档注释
# 函数名: 文档注释内容
declare -A function_docs=(
    ["utility_process_resource_pointer"]="/**\n * 处理资源指针的核心函数\n * @param resource_ptr 资源指针\n * @param operation_type 操作类型\n * @return 处理结果状态码\n */"
    ["utility_create_thread"]="/**\n * 创建系统线程\n * @param thread_config 线程配置参数\n * @param thread_func 线程函数指针\n * @return 线程句柄\n */"
    ["utility_initialize_resource"]="/**\n * 初始化系统资源\n * @param resource_type 资源类型\n * @param config_ptr 配置指针\n * @return 初始化状态\n */"
    ["utility_cleanup_resource"]="/**\n * 清理系统资源\n * @param resource_handle 资源句柄\n * @return 清理状态\n */"
    ["utility_allocate_memory"]="/**\n * 分配内存块\n * @param size 分配大小\n * @param alignment 对齐要求\n * @return 内存指针\n */"
    ["utility_free_memory"]="/**\n * 释放内存块\n * @param memory_ptr 内存指针\n * @return 释放状态\n */"
    ["utility_validate_security_checks"]="/**\n * 验证安全检查\n * @param context_ptr 上下文指针\n * @param operation 操作类型\n * @return 验证结果\n */"
    ["utility_enter_critical_section"]="/**\n * 进入临界区\n * @param section_ptr 临界区指针\n * @return 进入状态\n */"
    ["utility_leave_critical_section"]="/**\n * 离开临界区\n * @param section_ptr 临界区指针\n * @return 离开状态\n */"
    ["utility_wait_for_event"]="/**\n * 等待事件触发\n * @param event_handle 事件句柄\n * @param timeout 超时时间\n * @return 等待结果\n */"
    ["utility_signal_event"]="/**\n * 触发事件\n * @param event_handle 事件句柄\n * @return 触发状态\n */"
    ["utility_register_handler"]="/**\n * 注册事件处理器\n * @param handler_func 处理器函数\n * @param event_type 事件类型\n * @return 注册状态\n */"
    ["utility_unregister_handler"]="/**\n * 注销事件处理器\n * @param handler_id 处理器ID\n * @return 注销状态\n */"
    ["utility_get_system_status"]="/**\n * 获取系统状态\n * @param status_ptr 状态指针\n * @return 获取状态\n */"
    ["utility_set_system_status"]="/**\n * 设置系统状态\n * @param status 状态值\n * @return 设置状态\n */"
    ["utility_perform_operation"]="/**\n * 执行系统操作\n * @param operation_type 操作类型\n * @param parameters 参数指针\n * @return 操作结果\n */"
    ["utility_validate_operation"]="/**\n * 验证操作有效性\n * @param operation_type 操作类型\n * @param context 上下文指针\n * @return 验证结果\n */"
    ["utility_execute_command"]="/**\n * 执行系统命令\n * @param command_ptr 命令指针\n * @param parameters 参数指针\n * @return 执行结果\n */"
    ["utility_process_data"]="/**\n * 处理数据\n * @param data_ptr 数据指针\n * @param size 数据大小\n * @param operation 操作类型\n * @return 处理结果\n */"
    ["utility_manage_resources"]="/**\n * 管理系统资源\n * @param operation 操作类型\n * @param resource_ptr 资源指针\n * @return 管理结果\n */"
    ["utility_handle_exception"]="/**\n * 处理系统异常\n * @param exception_code 异常代码\n * @param context 上下文指针\n * @return 处理结果\n */"
    ["utility_log_message"]="/**\n * 记录日志消息\n * @param message_ptr 消息指针\n * @param log_level 日志级别\n * @return 记录状态\n */"
    ["utility_get_error_info"]="/**\n * 获取错误信息\n * @param error_code 错误代码\n * @param info_ptr 信息指针\n * @return 获取状态\n */"
    ["utility_clear_error"]="/**\n * 清除错误状态\n * @param error_code 错误代码\n * @return 清除状态\n */"
    ["utility_initialize_system"]="/**\n * 初始化系统\n * @param config_ptr 配置指针\n * @return 初始化状态\n */"
    ["utility_shutdown_system"]="/**\n * 关闭系统\n * @param shutdown_type 关闭类型\n * @return 关闭状态\n */"
    ["utility_configure_settings"]="/**\n * 配置系统设置\n * @param settings_ptr 设置指针\n * @param count 设置数量\n * @return 配置状态\n */"
    ["utility_get_configuration"]="/**\n * 获取系统配置\n * @param config_type 配置类型\n * @param value_ptr 值指针\n * @return 获取状态\n */"
    ["utility_update_configuration"]="/**\n * 更新系统配置\n * @param config_type 配置类型\n * @param value_ptr 值指针\n * @return 更新状态\n */"
    ["utility_validate_configuration"]="/**\n * 验证配置有效性\n * @param config_ptr 配置指针\n * @return 验证结果\n */"
    ["utility_apply_configuration"]="/**\n * 应用系统配置\n * @param config_ptr 配置指针\n * @return 应用状态\n */"
    ["utility_save_configuration"]="/**\n * 保存系统配置\n * @param config_ptr 配置指针\n * @param path_ptr 路径指针\n * @return 保存状态\n */"
    ["utility_load_configuration"]="/**\n * 加载系统配置\n * @param config_ptr 配置指针\n * @param path_ptr 路径指针\n * @return 加载状态\n */"
    ["utility_backup_configuration"]="/**\n * 备份系统配置\n * @param config_ptr 配置指针\n * @param backup_path 备份路径\n * @return 备份状态\n */"
    ["utility_restore_configuration"]="/**\n * 恢复系统配置\n * @param config_ptr 配置指针\n * @param backup_path 备份路径\n * @return 恢复状态\n */"
    ["utility_export_configuration"]="/**\n * 导出系统配置\n * @param config_ptr 配置指针\n * @param export_path 导出路径\n * @return 导出状态\n */"
    ["utility_import_configuration"]="/**\n * 导入系统配置\n * @param config_ptr 配置指针\n * @param import_path 导入路径\n * @return 导入状态\n */"
    ["utility_synchronize_configuration"]="/**\n * 同步系统配置\n * @param config_ptr 配置指针\n * @param sync_mode 同步模式\n * @return 同步状态\n */"
    ["utility_optimize_configuration"]="/**\n * 优化系统配置\n * @param config_ptr 配置指针\n * @param optimization_level 优化级别\n * @return 优化状态\n */"
    ["utility_monitor_system"]="/**\n * 监控系统状态\n * @param monitor_config 监控配置\n * @param callback 回调函数\n * @return 监控状态\n */"
    ["utility_collect_metrics"]="/**\n * 收集系统指标\n * @param metrics_ptr 指标指针\n * @param count 指标数量\n * @return 收集状态\n */"
    ["utility_analyze_performance"]="/**\n * 分析系统性能\n * @param analysis_ptr 分析指针\n * @param duration 分析时长\n * @return 分析结果\n */"
    ["utility_generate_report"]="/**\n * 生成系统报告\n * @param report_ptr 报告指针\n * @param report_type 报告类型\n * @return 生成状态\n */"
    ["utility_schedule_task"]="/**\n * 调度系统任务\n * @param task_ptr 任务指针\n * @param schedule_time 调度时间\n * @return 调度状态\n */"
    ["utility_cancel_task"]="/**\n * 取消系统任务\n * @param task_id 任务ID\n * @return 取消状态\n */"
    ["utility_pause_task"]="/**\n * 暂停系统任务\n * @param task_id 任务ID\n * @return 暂停状态\n */"
    ["utility_resume_task"]="/**\n * 恢复系统任务\n * @param task_id 任务ID\n * @return 恢复状态\n */"
    ["utility_get_task_status"]="/**\n * 获取任务状态\n * @param task_id 任务ID\n * @param status_ptr 状态指针\n * @return 获取状态\n */"
    ["utility_update_task_progress"]="/**\n * 更新任务进度\n * @param task_id 任务ID\n * @param progress 进度值\n * @return 更新状态\n */"
    ["utility_cleanup_tasks"]="/**\n * 清理已完成任务\n * @param cleanup_mode 清理模式\n * @return 清理状态\n */"
    ["utility_manage_queue"]="/**\n * 管理系统队列\n * @param queue_ptr 队列指针\n * @param operation 操作类型\n * @return 管理结果\n */"
    ["utility_process_queue"]="/**\n * 处理队列任务\n * @param queue_ptr 队列指针\n * @param priority 优先级\n * @return 处理结果\n */"
    ["utility_enqueue_item"]="/**\n * 将项目加入队列\n * @param queue_ptr 队列指针\n * @param item_ptr 项目指针\n * @return 入队状态\n */"
    ["utility_dequeue_item"]="/**\n * 从队列中取出项目\n * @param queue_ptr 队列指针\n * @param item_ptr 项目指针\n * @return 出队状态\n */"
    ["utility_peek_queue"]="/**\n * 查看队列首项\n * @param queue_ptr 队列指针\n * @param item_ptr 项目指针\n * @return 查看状态\n */"
    ["utility_clear_queue"]="/**\n * 清空队列\n * @param queue_ptr 队列指针\n * @return 清空状态\n */"
    ["utility_resize_queue"]="/**\n * 调整队列大小\n * @param queue_ptr 队列指针\n * @param new_size 新大小\n * @return 调整状态\n */"
    ["utility_optimize_queue"]="/**\n * 优化队列性能\n * @param queue_ptr 队列指针\n * @param optimization_level 优化级别\n * @return 优化状态\n */"
    ["utility_monitor_queue"]="/**\n * 监控队列状态\n * @param queue_ptr 队列指针\n * @param monitor_callback 监控回调\n * @return 监控状态\n */"
    ["utility_flush_queue"]="/**\n * 刷新队列\n * @param queue_ptr 队列指针\n * @param flush_mode 刷新模式\n * @return 刷新状态\n */"
    ["utility_validate_queue"]="/**\n * 验证队列有效性\n * @param queue_ptr 队列指针\n * @return 验证结果\n */"
    ["utility_backup_queue"]="/**\n * 备份队列数据\n * @param queue_ptr 队列指针\n * @param backup_path 备份路径\n * @return 备份状态\n */"
    ["utility_restore_queue"]="/**\n * 恢复队列数据\n * @param queue_ptr 队列指针\n * @param backup_path 备份路径\n * @return 恢复状态\n */"
    ["utility_migrate_queue"]="/**\n * 迁移队列数据\n * @param source_ptr 源队列指针\n * @param destination_ptr 目标队列指针\n * @return 迁移状态\n */"
    ["utility_replicate_queue"]="/**\n * 复制队列数据\n * @param source_ptr 源队列指针\n * @param destination_ptr 目标队列指针\n * @return 复制状态\n */"
    ["utility_synchronize_queue"]="/**\n * 同步队列数据\n * @param queue_ptr 队列指针\n * @param sync_mode 同步模式\n * @return 同步状态\n */"
    ["utility_compress_queue"]="/**\n * 压缩队列数据\n * @param queue_ptr 队列指针\n * @param compression_level 压缩级别\n * @return 压缩状态\n */"
    ["utility_decompress_queue"]="/**\n * 解压队列数据\n * @param queue_ptr 队列指针\n * @param compression_level 压缩级别\n * @return 解压状态\n */"
    ["utility_encrypt_queue"]="/**\n * 加密队列数据\n * @param queue_ptr 队列指针\n * @param encryption_key 加密密钥\n * @return 加密状态\n */"
    ["utility_decrypt_queue"]="/**\n * 解密队列数据\n * @param queue_ptr 队列指针\n * @param encryption_key 加密密钥\n * @return 解密状态\n */"
    ["utility_hash_queue"]="/**\n * 计算队列哈希值\n * @param queue_ptr 队列指针\n * @param hash_algorithm 哈希算法\n * @return 哈希值\n */"
    ["utility_sign_queue"]="/**\n * 签名队列数据\n * @param queue_ptr 队列指针\n * @param signature_key 签名密钥\n * @return 签名状态\n */"
    ["utility_verify_queue"]="/**\n * 验证队列签名\n * @param queue_ptr 队列指针\n * @param signature_key 签名密钥\n * @return 验证状态\n */"
    ["utility_audit_queue"]="/**\n * 审计队列操作\n * @param queue_ptr 队列指针\n * @param audit_log 审计日志\n * @return 审计状态\n */"
    ["utility_log_queue_operation"]="/**\n * 记录队列操作日志\n * @param queue_ptr 队列指针\n * @param operation_type 操作类型\n * @param operation_result 操作结果\n * @return 记录状态\n */"
    ["utility_track_queue_metrics"]="/**\n * 跟踪队列指标\n * @param queue_ptr 队列指针\n * @param metrics_ptr 指标指针\n * @return 跟踪状态\n */"
    ["utility_optimize_queue_performance"]="/**\n * 优化队列性能\n * @param queue_ptr 队列指针\n * @param optimization_config 优化配置\n * @return 优化状态\n */"
    ["utility_balance_queue_load"]="/**\n * 平衡队列负载\n * @param queue_ptr 队列指针\n * @param load_config 负载配置\n * @return 平衡状态\n */"
    ["utility_scale_queue"]="/**\n * 扩展队列容量\n * @param queue_ptr 队列指针\n * @param scale_factor 扩展因子\n * @return 扩展状态\n */"
    ["utility_distribute_queue"]="/**\n * 分发队列任务\n * @param queue_ptr 队列指针\n * @param distribution_config 分发配置\n * @return 分发状态\n */"
    ["utility_aggregate_queue"]="/**\n * 聚合队列结果\n * @param queue_ptr 队列指针\n * @param aggregation_config 聚合配置\n * @return 聚合状态\n */"
    ["utility_filter_queue"]="/**\n * 过滤队列项目\n * @param queue_ptr 队列指针\n * @param filter_criteria 过滤条件\n * @return 过滤状态\n */"
    ["utility_sort_queue"]="/**\n * 排序队列项目\n * @param queue_ptr 队列指针\n * @param sort_criteria 排序条件\n * @return 排序状态\n */"
    ["utility_search_queue"]="/**\n * 搜索队列项目\n * @param queue_ptr 队列指针\n * @param search_criteria 搜索条件\n * @return 搜索结果\n */"
    ["utility_index_queue"]="/**\n * 索引队列项目\n * @param queue_ptr 队列指针\n * @param index_config 索引配置\n * @return 索引状态\n */"
    ["utility_catalog_queue"]="/**\n * 编目队列项目\n * @param queue_ptr 队列指针\n * @param catalog_config 编目配置\n * @return 编目状态\n */"
    ["utility_archive_queue"]="/**\n * 归档队列项目\n * @param queue_ptr 队列指针\n * @param archive_config 归档配置\n * @return 归档状态\n */"
    ["utility_purge_queue"]="/**\n * 清除队列项目\n * @param queue_ptr 队列指针\n * @param purge_config 清除配置\n * @return 清除状态\n */"
    ["utility_recycle_queue"]="/**\n * 回收队列资源\n * @param queue_ptr 队列指针\n * @param recycle_config 回收配置\n * @return 回收状态\n */"
    ["utility_reuse_queue"]="/**\n * 重用队列资源\n * @param queue_ptr 队列指针\n * @param reuse_config 重用配置\n * @return 重用状态\n */"
    ["utility_refresh_queue"]="/**\n * 刷新队列数据\n * @param queue_ptr 队列指针\n * @param refresh_config 刷新配置\n * @return 刷新状态\n */"
    ["utility_renew_queue"]="/**\n * 更新队列配置\n * @param queue_ptr 队列指针\n * @param renewal_config 更新配置\n * @return 更新状态\n */"
    ["utility_revive_queue"]="/**\n * 恢复队列服务\n * @param queue_ptr 队列指针\n * @param revival_config 恢复配置\n * @return 恢复状态\n */"
    ["utility_reconfigure_queue"]="/**\n * 重新配置队列\n * @param queue_ptr 队列指针\n * @param reconfig_config 重配置配置\n * @return 重配置状态\n */"
    ["utility_reinitialize_queue"]="/**\n * 重新初始化队列\n * @param queue_ptr 队列指针\n * @param init_config 初始化配置\n * @return 重初始化状态\n */"
    ["utility_reset_queue"]="/**\n * 重置队列状态\n * @param queue_ptr 队列指针\n * @param reset_config 重置配置\n * @return 重置状态\n */"
    ["utility_restart_queue"]="/**\n * 重启队列服务\n * @param queue_ptr 队列指针\n * @param restart_config 重启配置\n * @return 重启状态\n */"
    ["utility_recover_queue"]="/**\n * 恢复队列操作\n * @param queue_ptr 队列指针\n * @param recovery_config 恢复配置\n * @return 恢复状态\n */"
    ["utility_repair_queue"]="/**\n * 修复队列问题\n * @param queue_ptr 队列指针\n * @param repair_config 修复配置\n * @return 修复状态\n */"
    ["utility_rebuild_queue"]="/**\n * 重建队列结构\n * @param queue_ptr 队列指针\n * @param rebuild_config 重建配置\n * @return 重建状态\n */"
    ["utility_restructure_queue"]="/**\n * 重构队列组织\n * @param queue_ptr 队列指针\n * @param restructure_config 重构配置\n * @return 重构状态\n */"
    ["utility_reorganize_queue"]="/**\n * 重新组织队列\n * @param queue_ptr 队列指针\n * @param reorganize_config 重组配置\n * @return 重组状态\n */"
    ["utility_reposition_queue"]="/**\n * 重新定位队列\n * @param queue_ptr 队列指针\n * @param reposition_config 重定位配置\n * @return 重定位状态\n */"
    ["utility_relocate_queue"]="/**\n * 重新部署队列\n * @param queue_ptr 队列指针\n * @param relocation_config 重部署配置\n * @return 重部署状态\n */"
    ["utility_redistribute_queue"]="/**\n * 重新分发队列\n * @param queue_ptr 队列指针\n * @param redistribution_config 重分发配置\n * @return 重分发状态\n */"
    ["utility_reallocate_queue"]="/**\n * 重新分配队列\n * @param queue_ptr 队列指针\n * @param reallocation_config 重分配配置\n * @return 重分配状态\n */"
    ["utility_reassign_queue"]="/**\n * 重新分配队列任务\n * @param queue_ptr 队列指针\n * @param reassignment_config 重分配配置\n * @return 重分配状态\n */"
    ["utility_remap_queue"]="/**\n * 重新映射队列\n * @param queue_ptr 队列指针\n * @param remapping_config 重映射配置\n * @return 重映射状态\n */"
    ["utility_redirect_queue"]="/**\n * 重定向队列\n * @param queue_ptr 队列指针\n * @param redirection_config 重定向配置\n * @return 重定向状态\n */"
    ["utility_rechannel_queue"]="/**\n * 重定向队列通道\n * @param queue_ptr 队列指针\n * @param rechanneling_config 重通道配置\n * @return 重通道状态\n */"
    ["utility_repipe_queue"]="/**\n * 重新管道队列\n * @param queue_ptr 队列指针\n * @param repiping_config 重管道配置\n * @return 重管道状态\n */"
    ["utility_rewire_queue"]="/**\n * 重新连接队列\n * @param queue_ptr 队列指针\n * @param rewiring_config 重连接配置\n * @return 重连接状态\n */"
    ["utility_reconnect_queue"]="/**\n * 重新连接队列服务\n * @param queue_ptr 队列指针\n * @param reconnection_config 重连接配置\n * @return 重连接状态\n */"
    ["utility_reestablish_queue"]="/**\n * 重新建立队列连接\n * @param queue_ptr 队列指针\n * @param reestablishment_config 重建立配置\n * @return 重建立状态\n */"
    ["utility_reform_queue"]="/**\n * 改革队列结构\n * @param queue_ptr 队列指针\n * @param reform_config 改革配置\n * @return 改革状态\n */"
    ["utility_transform_queue"]="/**\n * 转换队列形态\n * @param queue_ptr 队列指针\n * @param transformation_config 转换配置\n * @return 转换状态\n */"
    ["utility_transmute_queue"]="/**\n * 转变队列类型\n * @param queue_ptr 队列指针\n * @param transmutation_config 转变配置\n * @return 转变状态\n */"
    ["utility_transfigure_queue"]="/**\n * 改变队列形态\n * @param queue_ptr 队列指针\n * @param transfiguration_config 改变配置\n * @return 改变状态\n */"
    ["utility_transcend_queue"]="/**\n * 超越队列限制\n * @param queue_ptr 队列指针\n * @param transcendence_config 超越配置\n * @return 超越状态\n */"
    ["utility_transmogrify_queue"]="/**\n * 变形队列结构\n * @param queue_ptr 队列指针\n * @param transmogrification_config 变形配置\n * @return 变形状态\n */"
    ["utility_transubstantiate_queue"]="/**\n * 转化队列实体\n * @param queue_ptr 队列指针\n * @param transubstantiation_config 转化配置\n * @return 转化状态\n */"
    ["utility_transcribe_queue"]="/**\n * 抄录队列数据\n * @param queue_ptr 队列指针\n * @param transcription_config 抄录配置\n * @return 抄录状态\n */"
    ["utility_translate_queue"]="/**\n * 转换队列格式\n * @param queue_ptr 队列指针\n * @param translation_config 转换配置\n * @return 转换状态\n */"
    ["utility_transliterate_queue"]="/**\n * 音译队列数据\n * @param queue_ptr 队列指针\n * @param transliteration_config 音译配置\n * @return 音译状态\n */"
    ["utility_transcode_queue"]="/**\n * 转码队列数据\n * @param queue_ptr 队列指针\n * @param transcoding_config 转码配置\n * @return 转码状态\n */"
    ["utility_transmit_queue"]="/**\n * 传输队列数据\n * @param queue_ptr 队列指针\n * @param transmission_config 传输配置\n * @return 传输状态\n */"
    ["utility_transfer_queue"]="/**\n * 转移队列数据\n * @param queue_ptr 队列指针\n * @param transfer_config 转移配置\n * @return 转移状态\n */"
    ["utility_transpose_queue"]="/**\n * 转置队列数据\n * @param queue_ptr 队列指针\n * @param transposition_config 转置配置\n * @return 转置状态\n */"
    ["utility_transverse_queue"]="/**\n * 横向队列操作\n * @param queue_ptr 队列指针\n * @param transversal_config 横向配置\n * @return 横向状态\n */"
    ["utility_traverse_queue"]="/**\n * 遍历队列数据\n * @param queue_ptr 队列指针\n * @param traversal_config 遍历配置\n * @return 遍历状态\n */"
    ["utility_transport_queue"]="/**\n * 传输队列数据\n * @param queue_ptr 队列指针\n * @param transport_config 传输配置\n * @return 传输状态\n */"
    ["utility_transship_queue"]="/**\n * 转运队列数据\n * @param queue_ptr 队列指针\n * @param transshipment_config 转运配置\n * @return 转运状态\n */"
    ["utility_transplant_queue"]="/**\n * 移植队列数据\n * @param queue_ptr 队列指针\n * @param transplantation_config 移植配置\n * @return 移植状态\n */"
    ["utility_transfuse_queue"]="/**\n * 输送队列数据\n * @param queue_ptr 队列指针\n * @param transfusion_config 输送配置\n * @return 输送状态\n */"
    ["utility_transpire_queue"]="/**\n * 蒸发队列数据\n * @param queue_ptr 队列指针\n * @param transpiration_config 蒸发配置\n * @return 蒸发状态\n */"
    ["utility_transmigrate_queue"]="/**\n * 转移队列数据\n * @param queue_ptr 队列指针\n * @param transmigration_config 转移配置\n * @return 转移状态\n */"
    ["utility_transfigure_queue"]="/**\n * 改变队列形态\n * @param queue_ptr 队列指针\n * @param transfiguration_config 改变配置\n * @return 改变状态\n */"
    ["utility_transform_queue"]="/**\n * 转换队列形态\n * @param queue_ptr 队列指针\n * @param transformation_config 转换配置\n * @return 转换状态\n */"
    ["utility_transcend_queue"]="/**\n * 超越队列限制\n * @param queue_ptr 队列指针\n * @param transcendence_config 超越配置\n * @return 超越状态\n */"
    ["utility_transmogrify_queue"]="/**\n * 变形队列结构\n * @param queue_ptr 队列指针\n * @param transmogrification_config 变形配置\n * @return 变形状态\n */"
    ["utility_transubstantiate_queue"]="/**\n * 转化队列实体\n * @param queue_ptr 队列指针\n * @param transubstantiation_config 转化配置\n * @return 转化状态\n */"
)

echo "开始为函数添加文档注释..."

# 查找函数定义并添加文档注释
for func_name in "${!function_docs[@]}"; do
    echo "正在为函数 $func_name 添加文档注释..."
    
    # 查找函数定义的行号
    line_num=$(grep -n "^[[:space:]]*[^/[:space:]].*[[:space:]]$func_name[[:space:]]*(" "$FILE_PATH" | head -1 | cut -d: -f1)
    
    if [ -n "$line_num" ]; then
        # 检查是否已经有文档注释
        has_doc=$(sed -n "$((line_num-10)),$((line_num-1))p" "$FILE_PATH" | grep -c "/\*\*")
        
        if [ "$has_doc" -eq 0 ]; then
            # 在函数定义前插入文档注释
            doc_comment="${function_docs[$func_name]}"
            sed -i "${line_num}i\\${doc_comment}" "$FILE_PATH"
            echo "已为函数 $func_name 添加文档注释 (行号: $line_num)"
        else
            echo "函数 $func_name 已有文档注释，跳过"
        fi
    else
        echo "未找到函数 $func_name 的定义"
    fi
done

echo "文档注释添加完成"